<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>mm.ecxt</groupId>
		<artifactId>mm.ecxt.parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>mm.ecxt.updatesite</artifactId>
	<packaging>eclipse-repository</packaging>

	<name>Metamath Eclipse Plugin Update Site</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>materialize-products</id>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
					<execution>
						<id>archive-products</id>
						<goals>
							<goal>archive-products</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<!-- make the repository have a content.xml, instead of content.jar, 
						so that we can hack it in the antrun execution below -->
					<compress>false</compress>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<!-- update the content.xml, to add reference to the Xtext update site -->
							<target xmlns:ant-contrib="antlib:net.sf.antcontrib">
								<!-- first some abbreviations: -->
								<property name="TargetRepoDir" value="${project.build.directory}/repository" />
								<property name="ContentXmlFile" value="${TargetRepoDir}/content.xml" />
								<property name="ContentXmlTempFile" value="${TargetRepoDir}/updated-content.xml" />
								<property name="TargetRepoZip"
									value="${project.build.directory}/${project.build.finalName}.zip" />
								<!-- update the content.xml file -->
								<xslt in="${ContentXmlFile}" out="${ContentXmlTempFile}"
									style="add-references-to-content-xml.xsl" />
								<move file="${ContentXmlTempFile}" tofile="${ContentXmlFile}" />
								<!-- re-create the zip-file so that the updated content.xml file is included -->
								<delete file="${TargetRepoZip}" />
								<zip update="false" whenempty="fail" destfile="${TargetRepoZip}"
									basedir="${TargetRepoDir}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
