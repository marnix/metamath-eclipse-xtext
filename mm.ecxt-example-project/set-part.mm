$c IS_TOPLEVEL $.

$( set.mm - Version of 14-Aug-2015

ATTENTION MATHBOX USERS:  If you prefer, I can update your mathbox with recent
label changes provided that you submit it together with the version of set.mm
that you used.  Note in particular that on 17-May-2014, the frequently-used
visset, elisseti, syl11anc, syl111anc were changed respectively to vex, elexi,
syl2anc, syl3anc.  On 12-Jun-2014, operation values df-opr, *oprabval*, and
related were changed to df-ov, *ov*, etc.  On 9-Jan-2015, the hypothesis
order of mpbi*an* was changed.  --NM

#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
            Metamath source file for logic and set theory
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

                           ~~ PUBLIC DOMAIN ~~
This work is waived of all rights, including copyright, according to the CC0
Public Domain Dedication.  http://creativecommons.org/publicdomain/zero/1.0/

Maintainer and default contributor:

NM  Norman Megill - http://us.metamath.org/email.html

Contributor list:

DA  David Abernethy      DH  David Harvey           MO  Mel L. O'Cat
SA  Stefan Allan         JH  Jeff Hoffman           SO  Stefan O'Rear
JA  Juha Arpiainen       SJ  Szymon Jaroszewicz     JO  Jason Orendorff
JBN Jonathan Ben-Naim    WL  Wolf Lammen            JP  Josh Purinton
GB  Gregory Bush         GL  Gerard Lang            SR  Steve Rodriguez
MC  Mario Carneiro       RL  Raph Levien            ATS Andrew Salmon
PC  Paul Chapman         FL  Frederic Line          AS  Alan Sare
SF  Scott Fenton         RFL Roy F. Longton         ES  Eric Schmidt
JGH Jeffrey Hankins      JM  Jeff Madsen            JU  Jarvin Udandy
AH  Anthony Hart         RM  Rodolfo Medina         DAW David A. Wheeler

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Contents of this header
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

1. Recent label changes
2. Quick "How To"
3. Bibliography
4. Metamath syntax summary
5. Other notes
6. Acceptable shorter proofs

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          1. Recent label changes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

This is part of an ongoing project to improve naming consistency.  If you have
suggestions for better names, let me know.

To update your mathbox, you can make can make global substitutions into
your local version by processing the ones WITHOUT "Notes" in _reverse_ order.
The ones WITH "Notes" may have to be processed manually.

PROPOSED:
Date      Old       New         Notes
proposed  syl       imtri       (analogous to *bitr*, sstri, etc.)
proposed  sylib     imbitri     etc.
proposed  sylbid    biimtrd     etc.
proposed  sylbird   biimtrrd    etc.
proposed  syl5*     *trid       (syl5bi -> biimtrid; syl5eqel -> eqeltrid;etc.)
proposed  syl6*     *trdi
proposed  *mpt*     *mpf* or *mptf* (maps-to for functions)
proposed  *mpt2*    *mpo* or *mpto* (maps-to for operations)
(Please send any comments on these proposals to Norm Megill.)

DONE:
Date      Old       New         Notes
11-Aug-15 df-sgm    [--same--]  revised
11-Aug-15 pi1xfrf1o pi1xfrgim   revised
11-Aug-15 pi1xfr    [--same--]  revised
11-Aug-15 pi1id     [--same--]  revised
11-Aug-15 pi1gp     pi1grp
11-Aug-15 pi1pval   pi1addval   revised
11-Aug-15 pi1f      pi1addf     revised
11-Aug-15 pi1fval   ---         deleted; see pi1addval
11-Aug-15 pi1bvalqs pi1bas      revised
11-Aug-15 elpi1i    [--same--]  revised
11-Aug-15 elpi1     [--same--]  revised
11-Aug-15 pi1bval   ---         deleted; see pi1bas
11-Aug-15 pi1val    [--same--]  revised
11-Aug-15 pcohtpy   [--same--]  hypothesis removed
11-Aug-15 pcoloopf  om1addcl    revised
11-Aug-15 df-pi1    [--same--]  revised
11-Aug-15 phtpc01   [--same--]  hypothesis removed
11-Aug-15 phtpcdm   ---         deleted; see phtpcer
11-Aug-15 isphtpc   [--same--]  hypothesis removed
11-Aug-15 conntoppr contoppr
11-Aug-15 cnvhmpha  hmeocnv
11-Aug-15 hmeomap   hmeof1o
11-Aug-15 ishomeo   ishmeo
11-Aug-15 homeofval hmeofval
11-Aug-15 df-homeo  df-hmeo
11-Aug-15 chomeo    chmph
11-Aug-15 chomeosm  chmeo
11-Aug-15 ---       ---         df-imas, df-divs theorems: hypothesis revised
11-Aug-15 pcadd2    [--same--]  hypothesis removed
11-Aug-15 pcadd     [--same--]  hypothesis removed
11-Aug-15 pcz       [--same--]  hypothesis removed
11-Aug-15 pc11      [--same--]  revised
11-Aug-15 pc2dvds   [--same--]  revised
11-Aug-15 pcabs     [--same--]  hypothesis removed
11-Aug-15 pcneg     [--same--]  hypothesis removed
11-Aug-15 pcdvdsb   [--same--]  revised
11-Aug-15 df-pc     [--same--]  revised
11-Aug-15 dmenr     ---         deleted; see enrer
11-Aug-15 dmenq     ---         deleted; see enqer
11-Aug-15 ---       ---         otoscl ~ otosen deleted; see df-oi
11-Aug-15 r0weon    [--same--]  revised
11-Aug-15 hta       [--same--]  revised
11-Aug-15 onssr1    [--same--]  revised
11-Aug-15 uniwf     [--same--]  revised
11-Aug-15 unwf      [--same--]  revised
11-Aug-15 pwwf      [--same--]  revised
11-Aug-15 rankr1ag  [--same--]  revised
11-Aug-15 r1val1    [--same--]  revised
11-Aug-15 oieu      [--same--]  revised
11-Aug-15 oicl      [--same--]  revised
11-Aug-15 ordtype   [--same--]  revised
11-Aug-15 oiex      oiexg       revised
11-Aug-15 df-oi     [--same--]  revised
11-Aug-15 domssex2  [--same--]  hypothesis added
11-Aug-15 domss2    [--same--]  hypothesis added
11-Aug-15 en3       [--same--]  hypothesis added
11-Aug-15 en2       [--same--]  hypothesis added
11-Aug-15 en3d      [--same--]  hypothesis added
11-Aug-15 en2d      [--same--]  hypothesis added
11-Aug-15 ixpssmapg [--same--]  variables renamed
11-Aug-15 qsss      [--same--]  revised
11-Aug-15 uniqs2    [--same--]  revised
11-Aug-15 ereldmb   [--same--]  revised
11-Aug-15 ereldm    [--same--]  revised
11-Aug-15 erth2     [--same--]  revised
11-Aug-15 erth      [--same--]  revised
11-Aug-15 ecss      [--same--]  revised
11-Aug-15 erref     [--same--]  revised
11-Aug-15 tz7.44-3  [--same--]  revised
11-Aug-15 tz7.44-2  [--same--]  revised
11-Aug-15 tz7.44-1  [--same--]  revised
11-Aug-15 smoge     [--same--]  deleted; use smogt
11-Aug-15 fnwe      [--same--]  revised
11-Aug-15 weniso    [--same--]  revised
11-Aug-15 epne3     [--same--]  revised
11-Aug-15 fr3nr     [--same--]  revised
11-Aug-15 wereucl   ---         deleted; use wereu and reucl
11-Aug-15 efrn2lp   [--same--]  revised
11-Aug-15 fr2nr     [--same--]  revised
11-Aug-15 frirr     [--same--]  revised
11-Aug-15 frc       [--same--]  revised
11-Aug-15 dffr2     [--same--]  revised
 9-Aug-15 ---       ---         df-fbas, df-fg, df-fil, and df-fm revised.
                                Individual changes not noted; version with *OLD
                                is set.mm@5db2041
29-Jul-15 ax10      ax10from10o
29-Jul-15 ax9       ax9from9o
19-Jun-15 uvcf1     [--same--]  (in SO's mathbox) revised
19-Jun-15 pwssnf1o  [--same--]  moved from SO's mathbox to main set.mm
19-Jun-15 mapsnf1o  [--same--]  moved from SO's mathbox to main set.mm
19-Jun-15 ixpsnf1o  [--same--]  moved from SO's mathbox to main set.mm
19-Jun-15 elixpsn   [--same--]  moved from SO's mathbox to main set.mm
19-Jun-15 ---       ---         df-gim ~ lmicsym moved from SO's mathbox
                                to main set.mm
19-Jun-15 isfld     isfldOLD
19-Jun-15 df-zn     [--same--]  moved from MC's mathbox to main set.mm; revised
19-Jun-15 df-q2r    df-z2r      moved from MC's mathbox to main set.mm; revised
19-Jun-15 ---       ---         df-lgs ~ lgssq2 moved from MC's mathbox
                                to main set.mm
19-Jun-15 evlval    [--same--]  hypothesis removed
19-Jun-15 vr1val    [--same--]  hypothesis removed
19-Jun-15 df-evl1   [--same--]  revised
19-Jun-15 abvn0b    [--same--]  revised
19-Jun-15 isdomn2   [--same--]  revised
19-Jun-15 isdomn    [--same--]  revised
19-Jun-15 df-idom   [--same--]  revised
19-Jun-15 df-domn   [--same--]  revised
19-Jun-15 lsppropd  [--same--]  revised
19-Jun-15 lsspropd  [--same--]  revised
19-Jun-15 isrhmd    [--same--]  hypothesis reordered
19-Jun-15 unitdvcl  [--same--]  hypothesis removed
19-Jun-15 rngel1ne0 rngelznr    revised
19-Jun-15 eqgval    [--same--]  hypothesis removed
19-Jun-15 eqgval    [--same--]  hypothesis removed
19-Jun-15 mhmpropd  [--same--]  revised
19-Jun-15 fznn      [--same--]  revised
13-Jun-15 ---       ---         rlmfn ~ ply1pid moved from SO's mathbox
                                to main set.mm
13-Jun-15 ---       ---         strfvi ~ grpsubpropd moved from SO's mathbox
                                to main set.mm
13-Jun-15 ---       ---         pwsdiagel ~ pwsdiagrhm moved from SO's mathbox
                                to main set.mm
13-Jun-15 pwselbasb [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 ---       ---         sraval ~ issubrngd2 moved from SO's mathbox
                                to main set.mm
13-Jun-15 ---       ---         df-odu ~ mreclatdemo moved from SO's mathbox
                                to main set.mm
13-Jun-15 ---       ---         subsubrg2 ~ dvdsr02 moved from SO's mathbox
                                to main set.mm
13-Jun-15 gsumpt    [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 rngel1ne0 [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 suppfif1  [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 ---       ---         nnfi ~ suppssof1 moved from SO's mathbox
                                to main set.mm
13-Jun-15 ---       ---         fco2 ~ fvco4i moved from SO's mathbox
                                to main set.mm
13-Jun-15 fnfvof    [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 ---       ---         fneqeql ~ fncoeqres moved from SO's mathbox
                                to main set.mm
13-Jun-15 fnimaeq0  [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 supxrss   [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 rabun2    [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 elin3     [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 elin2     [--same--]  moved from SO's mathbox to main set.mm
13-Jun-15 ---       ---         rint0 ~ elrint2 moved from SO's mathbox
                                to main set.mm
13-Jun-15 wilth     [--same--]  moved from MC's mathbox to main set.mm
13-Jun-15 ---       ---         df-od ~ sylow3 moved from MC's mathbox
                                to main set.mm
13-Jun-15 grpinvpropd [--same--] revised
13-Jun-15 grpsubfval [--same--] revised
13-Jun-15 cardval2  [--same--]  revised
13-Jun-15 cardsdomel [--same--] revised
13-Jun-15 cardsdomel2 cardsdomel revised
13-Jun-15 coires1   [--same--]  revised
 4-Jun-15 tpaaa     tpidm       moved from DAW's mathbox to main set.mm
 4-Jun-15 tpabb     tpidm23     moved from DAW's mathbox to main set.mm
 4-Jun-15 tpaba     tpidm13     moved from DAW's mathbox to main set.mm
 4-Jun-15 tpaab     tpidm12     moved from DAW's mathbox to main set.mm
 4-Jun-15 ifnefalse [--same--]  moved from DAW's mathbox to main set.mm
 4-Jun-15 ptolemy   [--same--]  moved from DAW's mathbox to main set.mm
 4-Jun-15 cosmul    [--same--]  moved from DAW's mathbox to main set.mm
 4-Jun-15 sinmul    [--same--]  moved from DAW's mathbox to main set.mm
 4-Jun-15 dfac1     dfac3       moved from SO's mathbox to main set.mm
 4-Jun-15 dfac3     dfac9       moved from SO's mathbox to main set.mm
 4-Jun-15 dfaccard  dfac10      moved from SO's mathbox to main set.mm
 4-Jun-15 dfac10b   [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 axac      [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 dfac10    dfac10c     moved from SO's mathbox to main set.mm
 4-Jun-15 df-ac     [--same--]  moved from SO's mathbox to main set.mm; revised
 4-Jun-15 df-recs   [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 marypha2  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 marypha1  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 ---       ---         df-har ~ hsmex3 moved from SO's mathbox
                                to main set.mm
 4-Jun-15 domunfican [--same--] moved from SO's mathbox to main set.mm
 4-Jun-15 domunsncan [--same--] moved from SO's mathbox to main set.mm
 4-Jun-15 domdifsn  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 wemoiso2  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 wemoiso   [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 weniso    [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 fodomfi2  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 fipreimaNEW fipreima  moved from SO's mathbox to main set.mm
 4-Jun-15 imafi     [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 f1ssr     [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 imainrect [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 f1eqcocnv [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 foeqcnvco [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 fococnv2  [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 fnunirn   [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 fvmpt3    [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 mpt20     [--same--]  moved from SO's mathbox to main set.mm; revised
 4-Jun-15 iunopab   [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 pwidg     [--same--]  moved from SO's mathbox to main set.mm
 4-Jun-15 uffixfr   [--same--]  moved from JGH's mathbox to main set.mm;revised
 4-Jun-15 ---       ---         df-ufil ~ ufildr moved from JH's mathbox
                                to main set.mm
 4-Jun-15 filfinnfr [--same--]  moved from JH's mathbox to main set.mm
 4-Jun-15 csdfil    [--same--]  moved from FL's mathbox to main set.mm
 4-Jun-15 rcfpfil   cfinfil     moved from FL's mathbox to main set.mm
 4-Jun-15 excxor    [--same--]  moved from FL's mathbox to main set.mm
 4-Jun-15 assxor    [--same--]  moved from FL's mathbox to main set.mm
 4-Jun-15 df-xor    [--same--]  moved from FL's mathbox to main set.mm
 4-Jun-15 ---       ---         lukshef-ax1 ~ re2luk3 moved from AH's mathbox
                                to main set.mm
 4-Jun-15 FFSid     falnanfal   moved from AH's mathbox to main set.mm
 4-Jun-15 FTSid     falnantru   moved from AH's mathbox to main set.mm
 4-Jun-15 TFSid     trunanfal   moved from AH's mathbox to main set.mm
 4-Jun-15 TTSid     trunantru   moved from AH's mathbox to main set.mm
 4-Jun-15 FFBid     falbifal    moved from AH's mathbox to main set.mm
 4-Jun-15 FTBid     falbitru    moved from AH's mathbox to main set.mm
 4-Jun-15 TFBid     trubifal    moved from AH's mathbox to main set.mm
 4-Jun-15 TTBid     trubitru    moved from AH's mathbox to main set.mm
 4-Jun-15 FNid      notfal      moved from AH's mathbox to main set.mm
 4-Jun-15 TNid      nottru      moved from AH's mathbox to main set.mm
 4-Jun-15 FFIid     falimfal    moved from AH's mathbox to main set.mm
 4-Jun-15 FTIid     falimtru    moved from AH's mathbox to main set.mm
 4-Jun-15 TFIid     truimfal    moved from AH's mathbox to main set.mm
 4-Jun-15 TTIid     truimtru    moved from AH's mathbox to main set.mm
 4-Jun-15 FFOid     falorfal    moved from AH's mathbox to main set.mm
 4-Jun-15 FTOid     falortru    moved from AH's mathbox to main set.mm
 4-Jun-15 TFOid     truorfal    moved from AH's mathbox to main set.mm
 4-Jun-15 TTOid     truortru    moved from AH's mathbox to main set.mm
 4-Jun-15 FFAid     falanfal    moved from AH's mathbox to main set.mm
 4-Jun-15 FTAid     falantru    moved from AH's mathbox to main set.mm
 4-Jun-15 TFAid     truanfal    moved from AH's mathbox to main set.mm
 4-Jun-15 TTAid     truantru    moved from AH's mathbox to main set.mm
 4-Jun-15 AiT       a1tru       moved from AH's mathbox to main set.mm
 4-Jun-15 FiA       falim       moved from AH's mathbox to main set.mm
 4-Jun-15 falvar    nbfal       moved from AH's mathbox to main set.mm
 4-Jun-15 truvar    tbtru       moved from AH's mathbox to main set.mm
 4-Jun-15 ordsucuniel [--same--] moved from SF's mathbox to main set.mm
 4-Jun-15 mpt2fun   [--same--]  moved from SF's mathbox to main set.mm
 4-Jun-15 ccnf      ccnfn
 4-Jun-15 ltbval    [--same--]  revised
 4-Jun-15 df-ltbag  [--same--]  revised
 4-Jun-15 pwcfsdom  [--same--]  revised
 4-Jun-15 zornn0    [--same--]  revised
 4-Jun-15 zorn      [--same--]  revised
 4-Jun-15 aceqkm    dfackm      revised
 4-Jun-15 aceq8     dfac8       revised
 4-Jun-15 aceq7     dfac7       revised
 4-Jun-15 aceq6     dfac2       revised
 4-Jun-15 aceq6a    dfac2a      revised
 4-Jun-15 aceq5     dfac5       revised
 4-Jun-15 aceq4     dfac4       revised
 4-Jun-15 aceq3     dfac3       revised
 4-Jun-15 alephfp   [--same--]  revised
 4-Jun-15 aceq8c    dfac8c
 4-Jun-15 aceq8b    dfac8b
 4-Jun-15 aceq8a    dfac8a
 4-Jun-15 ondomcard harcard     revised
 4-Jun-15 df-aleph  [--same--]  revised
 4-Jun-15 finsschain [--same--] revised
 4-Jun-15 fipreima  [--same--]  hypothesis removed
 4-Jun-15 oeworde   [--same--]  revised
 4-Jun-15 oeword    [--same--]  revised
 4-Jun-15 oecan     [--same--]  revised
 4-Jun-15 oeord     [--same--]  revised
 4-Jun-15 oeordi    [--same--]  revised
 4-Jun-15 omeu      [--same--]  revised
 4-Jun-15 oarec     [--same--]  revised
 4-Jun-15 rdgval    [--same--]  revised
 4-Jun-15 df-rdg    [--same--]  revised
 4-Jun-15 tfr3      [--same--]  revised
 4-Jun-15 tfr2      [--same--]  revised
 4-Jun-15 tfr1      [--same--]  revised
 4-Jun-15 notfal    fal
 4-Jun-15 nic-justbi nanbi
 4-Jun-15 nic-justneg nannot
 4-Jun-15 nic-justim nanim
 4-Jun-15 nic-justlem nannan
 4-Jun-15 df-nand   df-nan
 4-Jun-15 wnand     wnan
23-May-15 grpinvnzcl [--same--] moved from SO's mathbox to main set.mm
23-May-15 grpinvnz  [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 dihopellsm [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 xihopellsm [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 dihopcl   [--same--]  (in NM's mathbox) hypothesis removed
 7-May-15 dihopelvalb [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 diblsmopel [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 dibopelval3 [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 dibopelval2 [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 dibopelval [--same--] (in NM's mathbox) hypothesis removed
 7-May-15 df-ocomp  [--same--]  (in NM's mathbox) revised
 7-May-15 phlfun    [--same--]  (in NM's mathbox) revised
 7-May-15 phlfn     [--same--]  (in NM's mathbox) revised
 7-May-15 srngfn    [--same--]  (in NM's mathbox) revised
 7-May-15 bnj96     [--same--]  (in JBN's mathbox) hypothesis added
 7-May-15 bnj536    [--same--]  (in JBN's mathbox) hypothesis removed
 7-May-15 bnj142    [--same--]  (in JBN's mathbox) hypothesis removed
 7-May-15 bnj136    [--same--]  (in JBN's mathbox) hypothesis removed
 7-May-15 addcomgi  [--same--]  (in AS's mathbox) hypothesis removed
 7-May-15 lmiclbs   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmimlbs   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmmmlem   ---         (in SO's mathbox) deleted; use lmhmlmod2
 7-May-15 lnmlmic   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lnmepi    [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmhmfgima [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 kercvrlsm [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmicsym   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmimcnv   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmimf1o   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 islmim    [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 gicsubgen [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 gicen     [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 gimcnv    [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 lmhmf1o   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 subggim   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 gimf1o    [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 isgim     [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 gimlem2   ---         (in SO's mathbox) deleted
 7-May-15 elovmpt2  [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 infpssALT [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 infpssen1 [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 infpssr   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 fidomtri2 [--same--]  moved from SO's mathbox to main set.mm; revised
 7-May-15 pw2f1oval2 [--same--] (in SO's mathbox) hypothesis removed
 7-May-15 pw2f1oval [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 mapfzcons2 [--same--] (in SO's mathbox) hypothesis removed
 7-May-15 mapfzcons1cl [--same--] (in SO's mathbox) hypothesis removed
 7-May-15 mapfzcons1 [--same--] (in SO's mathbox) hypothesis removed
 7-May-15 elmapssres [--same--] (in SO's mathbox) hypothesis removed
 7-May-15 mapco2    [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 mapco2g   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 elmapex2  ---         (in SO's mathbox) deleted
 7-May-15 constmap  [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 xpwdomg   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 unwdomg   [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 brwdom3i  [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 wdomndom  ---         (in SO's mathbox) deleted; use brrelex12
 7-May-15 brwdomn0  [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 numth3    [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 isnum2    [--same--]  moved from SO's mathbox to main set.mm; hyp rem
 7-May-15 isghmd    [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 difsnen   [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fsnunres  [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fsnunfv   [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fsnunf2   [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fsnunf    [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fnsnsplit [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 ralxpmap  [--same--]  (in SO's mathbox) hypothesis removed
 7-May-15 reldmmap  [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fconst6g  [--same--]  moved from SO's mathbox to main set.mm
 7-May-15 fconst6   [--same--]  moved from JM's mathbox to main set.mm
 7-May-15 xrletr2   [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 mlteqer   [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 csdfil    [--same--]  (in FL's mathbox) revised
 7-May-15 curgrpact [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 rngapm    [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 gapm2     [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 nfwpr4c   [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 prltub    [--same--]  (in FL's mathbox) hypothesis removed
 7-May-15 domtri2   domtri3     (in FL's mathbox)
 7-May-15 brtxp2    [--same--]  (in SF's mathbox) hypothesis removed
 7-May-15 predfz    [--same--]  (in SF's mathbox) hypothesis removed
 7-May-15 brtp      [--same--]  (in SF's mathbox) hypothesis removed
 7-May-15 epelg     [--same--]  moved from SF's mathbox to main set.mm
 7-May-15 epelcNEW  epelc       moved from SF's mathbox to main set.mm
 7-May-15 eupath    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupath2   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupap1    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupares   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupaseg   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupapf    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupafi    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupaf1o   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupacl    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 eupai     [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 iseupa    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgraun   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgrares  [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgraex   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgrafi   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgrale   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgran0   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgrass   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgraf    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 umgraf2   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmfo     [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmlift   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmliftmo [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmliftmoi [--same--] (in MC's mathbox) hypothesis removed
 7-May-15 cvmsiota  [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmseu    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmscld   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmsf1o   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmcov    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 cvmtop2   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 iscvm     [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 sylow2    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 slwhash   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 slwpgp    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 slwpss    [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 slwispgp  [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 slwsubg   [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 isslw     [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 ispgp     [--same--]  (in MC's mathbox) hypothesis removed
 7-May-15 hlimunii  hlimuni     hypothesis removed
 7-May-15 hlimadd   [--same--]  hypothesis removed
 7-May-15 hvsubopr  hbsubf
 7-May-15 bpos1     [--same--]  revised
 7-May-15 logcnss   logdmss
 7-May-15 itgulm    [--same--]  hypothesis removed
 7-May-15 mbfulm    [--same--]  hypothesis removed
 7-May-15 ulmdv     [--same--]  hypothesis removed
 7-May-15 ulmcn     [--same--]  hypothesis removed
 7-May-15 ulmbdd    [--same--]  hypothesis removed
 7-May-15 ulmss     [--same--]  hypothesis removed
 7-May-15 ulmshft   [--same--]  hypothesis removed
 7-May-15 ulmres    [--same--]  hypothesis removed
 7-May-15 ulmclm    [--same--]  hypothesis removed
 7-May-15 ulmi      [--same--]  hypothesis removed
 7-May-15 ulmcl     [--same--]  hypothesis removed
 7-May-15 ulmval    [--same--]  revised
 7-May-15 dvlm      [--same--]  hypothesis removed
 7-May-15 dvcl      [--same--]  hypothesis removed
 7-May-15 eldv      [--same--]  hypothesis removed
 7-May-15 mbflim    [--same--]  hypothesis removed
 7-May-15 cncfco    [--same--]  hypothesis removed
 7-May-15 climcncf  [--same--]  hypothesis removed
 7-May-15 cncffvrn  [--same--]  revised
 7-May-15 rescncf   [--same--]  hypothesis removed
 7-May-15 cncfi     [--same--]  hypothesis removed
 7-May-15 cncff     [--same--]  hypothesis removed
 7-May-15 cncfrss2  [--same--]  hypothesis removed
 7-May-15 nvlmcl    [--same--]  hypothesis removed
 7-May-15 nvvcop    [--same--]  revised
 7-May-15 nvss      [--same--]  revised
 7-May-15 caublcls  [--same--]  hypothesis removed
 7-May-15 metelcls  [--same--]  hypothesis removed
 7-May-15 lmclimf   [--same--]  hypothesis removed
 7-May-15 lmclim    [--same--]  hypothesis removed
 7-May-15 lmle      [--same--]  hypothesis removed
 7-May-15 lmmbrf    [--same--]  hypothesis removed
 7-May-15 lmmcvg    [--same--]  hypothesis removed
 7-May-15 lmmbr3    [--same--]  hypothesis removed
 7-May-15 lmmbr2    [--same--]  hypothesis removed
 7-May-15 lmmbr     [--same--]  hypothesis removed
 7-May-15 lincmb01icc icccvx
 7-May-15 resubtop  rerest
 7-May-15 subtopmet metrest
 7-May-15 qtopsubsp qtoprest
 7-May-15 lmcn2     [--same--]  hypothesis removed
 7-May-15 txlm      [--same--]  hypothesis removed
 7-May-15 txsubsp   txrest
 7-May-15 hauspwdom [--same--]  revised
 7-May-15 1stcelcls [--same--]  hypothesis removed
 7-May-15 lly1stc   [--same--]  revised
 7-May-15 nllyidm   [--same--]  revised
 7-May-15 llyidm    [--same--]  revised
 7-May-15 nllysubsp nllyrest
 7-May-15 llysubsp  llyrest
 7-May-15 subsplly  restlly
 7-May-15 subspnlly restnlly
 7-May-15 2ndcsubsp 2ndcrest
 7-May-15 1stcsubsp 1stcrest
 7-May-15 lmmo      [--same--]  hypothesis removed
 7-May-15 subsphaus resthaus
 7-May-15 lmcn      [--same--]  hypothesis removed
 7-May-15 lmcld     [--same--]  hypothesis removed
 7-May-15 lmcls     [--same--]  hypothesis removed
 7-May-15 lmres     [--same--]  hypothesis removed
 7-May-15 lmcl      [--same--]  hypothesis removed
 7-May-15 lmfss     [--same--]  hypothesis removed
 7-May-15 lmfpm     [--same--]  hypothesis removed
 7-May-15 cnpsubsp2 cnprest2
 7-May-15 cnpsubsp  cnprest
 7-May-15 cnpsubspi cnpresti
 7-May-15 cnsubsp2r cnrest2r
 7-May-15 cnsubsp2  cnrest2
 7-May-15 cnsubsp   cnrest
 7-May-15 lmbrf     [--same--]  hypothesis removed
 7-May-15 lmbr2     [--same--]  hypothesis removed
 7-May-15 lmbr      [--same--]  hypothesis removed
 7-May-15 subntr    restntr
 7-May-15 subcls    restcls
 7-May-15 subspdis  restdis
 7-May-15 subspsubbas restsubbas
 7-May-15 tgsubsp   tgrest
 7-May-15 subspopn2 restopn2
 7-May-15 sssubsp   ssrest      hypothesis removed
 7-May-15 subspopnb restopnb
 7-May-15 subspcld2 restcldr
 7-May-15 subspcld  restcldi
 7-May-15 subcld    restcld
 7-May-15 subspsn2  restsn2
 7-May-15 subspsn   restsn
 7-May-15 subsp0    rest0
 7-May-15 subspuni2 restuni2
 7-May-15 subspint  restin      hypothesis generalized
 7-May-15 subsubtop restabs     hypothesis generalized
 7-May-15 subspco   restco      revised
 7-May-15 stoig     [--same--]  revised
 7-May-15 subspuni  restuni     revised
 7-May-15 subsptop  resttop
 7-May-15 subsprcl  restrcl     revised
 7-May-15 subspid   restid      hypothesis generalized
 7-May-15 elsubspr  elrestr     hypothesis generalized
 7-May-15 elsubsp   elrest      hypothesis generalized
 7-May-15 subspval  restval     hypothesis generalized
 7-May-15 df-subsp  df-rest     arguments were swapped; revisions due to the
                                new form factor are not noted
 7-May-15 csubsp    crest
 7-May-15 reslmhm   [--same--]  hypothesis removed
 7-May-15 lmhmkerlss [--same--] hypothesis removed
 7-May-15 lmhmrnlss [--same--]  hypothesis removed
 7-May-15 lmhmlsp   [--same--]  hypothesis removed
 7-May-15 lmhmima   [--same--]  hypothesis removed
 7-May-15 lmhmlin   [--same--]  hypothesis removed
 7-May-15 lmhmf     [--same--]  hypothesis removed
 7-May-15 lmhmlmod2 [--same--]  hypothesis removed
 7-May-15 lmhmsca   [--same--]  hypothesis removed
 7-May-15 islmhm2   [--same--]  hypothesis removed
 7-May-15 islmhm    [--same--]  hypothesis removed
 7-May-15 dvdsrneg  [--same--]  revised
 7-May-15 dvdsrmul1 [--same--]  revised
 7-May-15 dvdsrid   [--same--]  revised
 7-May-15 dvdsr2    [--same--]  hypothesis removed
 7-May-15 dvdsr     [--same--]  hypothesis removed
 7-May-15 dvdsrval  [--same--]  hypothesis removed
 7-May-15 gsumhomo  ---         deleted; use gsummhm
 7-May-15 lactghmga [--same--]  hypothesis removed
 7-May-15 galactghm [--same--]  hypothesis removed
 7-May-15 orbsta2   [--same--]  hypothesis removed
 7-May-15 orbsta    [--same--]  hypothesis removed
 7-May-15 orbstaval [--same--]  hypothesis removed
 7-May-15 orbstaeu  [--same--]  hypothesis removed
 7-May-15 gastacos  [--same--]  hypothesis removed
 7-May-15 gastacl   [--same--]  hypothesis removed
 7-May-15 gaorber   [--same--]  hypothesis removed
 7-May-15 gaorb     [--same--]  hypothesis removed
 7-May-15 gapm      [--same--]  hypothesis removed
 7-May-15 gacan     [--same--]  hypothesis removed
 7-May-15 galcan    [--same--]  hypothesis removed
 7-May-15 gasubg    [--same--]  hypothesis removed
 7-May-15 gass      [--same--]  hypothesis removed
 7-May-15 gaass     [--same--]  hypothesis removed
 7-May-15 gafo      [--same--]  hypothesis removed
 7-May-15 gaf       [--same--]  hypothesis removed
 7-May-15 gagrpid   [--same--]  hypothesis removed
 7-May-15 isga      [--same--]  hypothesis removed
 7-May-15 ghmf1o    [--same--]  hypothesis removed
 7-May-15 ghmf1     [--same--]  hypothesis removed
 7-May-15 ghmeqker  [--same--]  hypothesis removed
 7-May-15 ghmker    [--same--]  hypothesis removed
 7-May-15 ghmsub    [--same--]  hypothesis removed
 7-May-15 ghmima    [--same--]  hypothesis removed
 7-May-15 resghm    [--same--]  hypothesis removed
 7-May-15 ghmrn     [--same--]  hypothesis removed
 7-May-15 ghminv    [--same--]  hypothesis removed
 7-May-15 ghmid     [--same--]  hypothesis removed
 7-May-15 ghmlin    [--same--]  hypothesis removed
 7-May-15 ghmgrp2   [--same--]  hypothesis removed
 7-May-15 ghmf      [--same--]  hypothesis removed
 7-May-15 isghm2    ---         deleted; use isghm
 7-May-15 isghm     [--same--]  hypothesis removed
 7-May-15 spwpr4c   [--same--]  hypothesis removed
 7-May-15 spwpr4    [--same--]  hypothesis removed
 7-May-15 prdmvalfun [--same--] revised
 7-May-15 posfn     [--same--]  revised
 7-May-15 tpsfn     [--same--]  revised
 7-May-15 ressvsca  [--same--]  hypothesis added
 7-May-15 resssca   [--same--]  hypothesis added
 7-May-15 algfun    [--same--]  revised
 7-May-15 algfn     [--same--]  revised
 7-May-15 lmodfun   [--same--]  revised
 7-May-15 lmodfn    [--same--]  revised
 7-May-15 ressmulr  [--same--]  hypothesis added
 7-May-15 rngfn     [--same--]  revised
 7-May-15 ressplusg [--same--]  hypothesis added
 7-May-15 grpfn     [--same--]  revised
 7-May-15 strlemor3 [--same--]  revised
 7-May-15 strlemor2 [--same--]  revised
 7-May-15 strlemor1 [--same--]  revised
 7-May-15 strlemor0 [--same--]  revised
 7-May-15 df-ds     [--same--]  revised
 7-May-15 resslem2  ---         deleted
 7-May-15 resslem   [--same--]  revised
 7-May-15 strfvd    [--same--]  hypothesis removed
 7-May-15 strfv     [--same--]  hypothesis removed
 7-May-15 setscom   [--same--]  hypothesis added
 7-May-15 setsabs   [--same--]  hypothesis added
 7-May-15 setsval   [--same--]  hypothesis added
 7-May-15 --        ---         11prm ~ 4001prm revised for base 10
 7-May-15 gcdi      [--same--]  revised
 7-May-15 modsubi   [--same--]  revised
 7-May-15 mod2xnegi [--same--]  revised
 7-May-15 modxp1i   [--same--]  revised
 7-May-15 mod2xi    [--same--]  revised
 7-May-15 modxai    [--same--]  revised
 7-May-15 --        ---         dec2dvds1 ~ dec2nprm revised for base 10
 7-May-15 iserodd   [--same--]  revised
 7-May-15 maxprmfct [--same--]  revised
 7-May-15 nprmi     [--same--]  revised
 7-May-15 1nprm     [--same--]  revised
 7-May-15 algrflem  [--same--]  hypothesis added
 7-May-15 ndvdsi    [--same--]  revised
 7-May-15 climfsum  [--same--]  hypothesis removed
 7-May-15 cvgcmpub  [--same--]  hypothesis removed
 7-May-15 iserabs   [--same--]  hypothesis removed
 7-May-15 isumclim  [--same--]  hypothesis removed
 7-May-15 climim    [--same--]  hypothesis removed
 7-May-15 climre    [--same--]  hypothesis removed
 7-May-15 climcj    [--same--]  hypothesis removed
 7-May-15 climabs   [--same--]  hypothesis removed
 7-May-15 isercoll2 [--same--]  hypothesis removed
 7-May-15 isercoll  [--same--]  hypothesis removed
 7-May-15 isershft  [--same--]  hypothesis removed
 7-May-15 iserle    [--same--]  hypothesis removed
 7-May-15 isermulc2 [--same--]  hypothesis removed
 7-May-15 iserex    [--same--]  hypothesis removed
 7-May-15 clim2ser2 [--same--]  hypothesis removed
 7-May-15 clim2ser  [--same--]  hypothesis removed
 7-May-15 rlimdiv   [--same--]  hypothesis removed
 7-May-15 rlimmul   [--same--]  hypothesis removed
 7-May-15 rlimsub   [--same--]  hypothesis removed
 7-May-15 rlimadd   [--same--]  hypothesis removed
 7-May-15 climsqz2  [--same--]  hypothesis removed
 7-May-15 climsqz   [--same--]  hypothesis removed
 7-May-15 climle    [--same--]  hypothesis removed
 7-May-15 climsubc2 [--same--]  hypothesis removed
 7-May-15 climsubc1 [--same--]  hypothesis removed
 7-May-15 climmulc2 [--same--]  hypothesis removed
 7-May-15 climaddc2 [--same--]  hypothesis removed
 7-May-15 climaddc1 [--same--]  hypothesis removed
 7-May-15 climsub   [--same--]  hypothesis removed
 7-May-15 climmul   [--same--]  hypothesis removed
 7-May-15 climadd   [--same--]  hypothesis removed
 7-May-15 climrecl  [--same--]  hypothesis removed
 7-May-15 climshft2 [--same--]  hypothesis removed
 7-May-15 climshft  [--same--]  hypothesis removed
 7-May-15 climres   [--same--]  hypothesis removed
 7-May-15 climmpt2  [--same--]  hypothesis removed
 7-May-15 2clim     [--same--]  hypothesis removed
 7-May-15 climmpt   [--same--]  hypothesis removed
 7-May-15 rlimeq    [--same--]  hypothesis removed
 7-May-15 climeq    [--same--]  hypothesis removed
 7-May-15 rlimuni   [--same--]  hypothesis removed
 7-May-15 rlimresb  [--same--]  hypothesis removed
 7-May-15 rlimres2  [--same--]  hypothesis removed
 7-May-15 rlimres   [--same--]  hypothesis removed
 7-May-15 climreu   [--same--]  hypothesis removed
 7-May-15 climeu    [--same--]  hypothesis removed
 7-May-15 climuni   [--same--]  hypothesis removed
 7-May-15 rlimi     [--same--]  hypothesis removed
 7-May-15 climi2    [--same--]  hypothesis removed
 7-May-15 climi     [--same--]  hypothesis removed
 7-May-15 clim2     [--same--]  hypothesis removed
 7-May-15 rlimcl    [--same--]  hypothesis removed
 7-May-15 climcl    [--same--]  hypothesis removed
 7-May-15 rlim      [--same--]  hypothesis removed
 7-May-15 clim      [--same--]  hypothesis removed
 7-May-15 seqcoll2  [--same--]  hypothesis removed
 7-May-15 hashfacen [--same--]  hypothesis removed
 7-May-15 hashdom   [--same--]  hypothesis generalized
 7-May-15 hasheni   [--same--]  hypothesis removed
 7-May-15 hashinf   [--same--]  revised
 7-May-15 permnn    [--same--]  hypothesis removed
 7-May-15 bccl2     [--same--]  hypothesis removed
 7-May-15 bcp1nk    [--same--]  hypothesis removed
 7-May-15 bcp1n     [--same--]  hypothesis removed
 7-May-15 bcm1k     [--same--]  hypothesis removed
 7-May-15 bcrpcl    [--same--]  hypothesis removed
 7-May-15 bcval2    [--same--]  hypothesis removed
 7-May-15 fseqsupubi [--same--] hypothesis removed
 7-May-15 fsequb2   [--same--]  hypothesis removed
 7-May-15 fsequb    [--same--]  hypothesis removed
 7-May-15 fznuz     [--same--]  hypothesis removed
 7-May-15 fz2ex     ---         deleted
 7-May-15 fzrev3i   [--same--]  hypothesis removed
 7-May-15 fzrev3    [--same--]  hypothesis removed
 7-May-15 fzrev2i   [--same--]  hypothesis removed
 7-May-15 fzp1disj  [--same--]  hypothesis removed
 7-May-15 fzelp1i   ---         deleted; use fzelp1
 7-May-15 fzp1elp1  [--same--]  hypothesis removed
 7-May-15 fzelp1    [--same--]  hypothesis removed
 7-May-15 fzp1ss    [--same--]  hypothesis removed
 7-May-15 fzssp1    [--same--]  hypothesis removed
 7-May-15 fzss1     [--same--]  hypothesis removed
 7-May-15 fzopth    [--same--]  hypothesis removed
 7-May-15 fznn0sub2 [--same--]  hypothesis removed
 7-May-15 fznn0sub  [--same--]  hypothesis removed
 7-May-15 elfz3nn0  [--same--]  hypothesis removed
 7-May-15 elfz2nn0  [--same--]  hypothesis removed
 7-May-15 fzdisj    [--same--]  hypothesis removed
 7-May-15 fzsplit   [--same--]  hypothesis removed
 7-May-15 fzn0      [--same--]  revised
 7-May-15 peano2fzr [--same--]  hypothesis removed
 7-May-15 elfzuz2   [--same--]  hypothesis removed
 7-May-15 elfzle3   [--same--]  hypothesis removed
 7-May-15 elfzel2g  ---         deleted; use elfzel2
 7-May-15 elfzel2i  elfzel2     hypothesis removed
 7-May-15 elfzuz3   [--same--]  hypothesis removed
 7-May-15 elfzuzb   [--same--]  hypothesis removed
 7-May-15 elfz2     [--same--]  hypothesis removed
 7-May-15 iccss2    [--same--]  hypothesis removed
 7-May-15 iccssioo  [--same--]  hypothesis removed
 7-May-15 iccss     [--same--]  hypothesis removed
 7-May-15 elioo4g   [--same--]  hypothesis removed
 7-May-15 iooss2    [--same--]  hypothesis removed
 7-May-15 iooss1    [--same--]  hypothesis removed
 7-May-15 elioo3g   [--same--]  hypothesis removed
 7-May-15 ixxss12   [--same--]  hypothesis removed
 7-May-15 ixxss2    [--same--]  hypothesis removed
 7-May-15 ixxss1    [--same--]  hypothesis removed
 7-May-15 ixxssixx  [--same--]  revised
 7-May-15 elixx3g   [--same--]  hypothesis removed
 7-May-15 uzsupss   [--same--]  revised
 7-May-15 0p1e1     1e0p1
 7-May-15 ---       ---         deccl ~ decbin3 revised for base 10
 7-May-15 znn0sub2  ---         deleted; use znn0sub or uznn0sub
 7-May-15 lt01      0lt1
 7-May-15 subopr    subf
 7-May-15 ax-ltxr   [--same--]  revised
 7-May-15 ax-mulopr ax-mulf
 7-May-15 ax-addopr ax-addf
 7-May-15 axmulopr  axmulf
 7-May-15 axaddopr  axaddf
 7-May-15 ---       ---         addcompi ~ ltresr: hypothesis removed
 7-May-15 fodomnumg ---         deleted; use fodomnum
 7-May-15 tskwe2    [--same--]  revised
 7-May-15 unictb    [--same--]  hypothesis removed
 7-May-15 iunctb    [--same--]  hypothesis removed
 7-May-15 infpss    [--same--]  hypothesis removed
 7-May-15 infmap1   [--same--]  deleted; use mappwen
 7-May-15 infxpidm  [--same--]  hypothesis removed
 7-May-15 carddomi  ---         deleted; use carddomi2 or carddom
 7-May-15 cardid    [--same--]  hypothesis added
 7-May-15 cardval   [--same--]  hypothesis added
 7-May-15 brdom4    [--same--]  hypothesis removed
 7-May-15 brdom5    [--same--]  hypothesis removed
 7-May-15 brdom3    [--same--]  hypothesis removed
 7-May-15 fodomb    [--same--]  hypothesis removed
 7-May-15 numth2    [--same--]  hypothesis added
 7-May-15 infmap2   infmap      hypothesis removed
 7-May-15 infxp     [--same--]  revised
 7-May-15 csdfillem infunsdom1  revised
 7-May-15 infxpabs  [--same--]  revised
 7-May-15 infxpdom  [--same--]  revised
 7-May-15 infdif2   [--same--]  revised
 7-May-15 infdif    [--same--]  revised
 7-May-15 infcda    [--same--]  revised
 7-May-15 infunabs  [--same--]  revised
 7-May-15 infcdaabs [--same--]  revised
 7-May-15 cardacda  [--same--]  revised
 7-May-15 cdainf    [--same--]  hypothesis removed
 7-May-15 cdadom3   [--same--]  revised: sethood antecedent
 7-May-15 cdadom2   [--same--]  hypothesis removed
 7-May-15 cdadom1   [--same--]  hypothesis removed
 7-May-15 mapcdaen  [--same--]  revised: sethood antecedent
 7-May-15 xpcdaen   [--same--]  revised: sethood antecedent
 7-May-15 cdaassen  [--same--]  revised: sethood antecedent
 7-May-15 cdacomen  [--same--]  hypothesis removed
 7-May-15 xp2cda    [--same--]  revised: sethood antecedent
 7-May-15 xp1en     [--same--]  revised: sethood antecedent
 7-May-15 cda0en    [--same--]  revised: sethood antecedent
 7-May-15 cdaeng    ---         deleted; use cdaen
 7-May-15 cdaen     [--same--]  hypothesis removed
 7-May-15 cdaung    cdaun
 7-May-15 cdaung    cdaun
 7-May-15 cda2en    [--same--]  revised: sethood antecedent
 7-May-15 cdaun     [--same--]  revised: sethood antecedent
 7-May-15 uncdadom  [--same--]  revised: sethood antecedent
 7-May-15 cdavali   [--same--]  deleted; use cdaval
 7-May-15 fodomnum  [--same--]  revised
 7-May-15 onssnum   [--same--]  revised
 7-May-15 ondomen   [--same--]  revised
 7-May-15 ween      [--same--]  revised
 7-May-15 aceq8b    [--same--]  revised
 7-May-15 aceq8a    [--same--]  revised
 7-May-15 mappwen   [--same--]  revised
 7-May-15 infxpidm2 [--same--]  revised
 7-May-15 fidomtri  [--same--]  hypothesis added
 7-May-15 ficardsdom cardsdom2  revised
 7-May-15 ficarddom carddom2    revised
 7-May-15 ficarden  carden2     revised
 7-May-15 carddom2  [--same--]  revised
 7-May-15 carddomi2 [--same--]  revised
 7-May-15 carden2b  [--same--]  hypothesis removed
 7-May-15 cardnueq0 [--same--]  revised
 7-May-15 cardid2   [--same--]  revised
 7-May-15 cardval3b ---         deleted; use ndmfv
 7-May-15 cardval3a ---         deleted; use cardval3
 7-May-15 cardval3  [--same--]  revised
 7-May-15 isfinite3 isfinite
 7-May-15 card2inf  [--same--]  hypothesis added
 7-May-15 fisup2g   fisupcl
 7-May-15 unbnn2    [--same--]  revised
 7-May-15 unbnn     [--same--]  revised
 7-May-15 f1finf1o  [--same--]  revised
 7-May-15 isfinite1 isfiniteg   revised
 7-May-15 omsdomnn  nnsdomg     revised
 7-May-15 unxpdom2  [--same--]  hypothesis removed
 7-May-15 0sdom1dom [--same--]  hypothesis removed
 7-May-15 sucdom    [--same--]  hypothesis removed
 7-May-15 sucdom2   [--same--]  hypothesis removed
 7-May-15 ssenen    [--same--]  hypothesis removed
 7-May-15 mapunen   [--same--]  revised: sethood antecedent
 7-May-15 mapxpen   [--same--]  revised: sethood antecedent
 7-May-15 mapdom2   [--same--]  hypothesis removed
 7-May-15 mapdom1   [--same--]  hypothesis removed
 7-May-15 mapen     [--same--]  hypothesis removed
 7-May-15 xpnum     [--same--]  revised
 7-May-15 xpeng     [--same--]  deleted; use xpen
 7-May-15 xpen      [--same--]  hypothesis removed
 7-May-15 tskwe     [--same--]  revised
 7-May-15 domssex   [--same--]  hypothesis removed
 7-May-15 fodomr    [--same--]  hypothesis removed
 7-May-15 onenon    [--same--]  revised
 7-May-15 sdomen2   [--same--]  hypothesis removed
 7-May-15 sdomen1   [--same--]  hypothesis removed
 7-May-15 domen2    [--same--]  hypothesis removed
 7-May-15 domen1    [--same--]  hypothesis removed
 7-May-15 enen2     [--same--]  hypothesis removed
 7-May-15 enen1     [--same--]  hypothesis removed
 7-May-15 sdomex    ---         deleted; use brrelex12
 7-May-15 sdomentr  [--same--]  hypothesis removed
 7-May-15 sdomdomtr [--same--]  hypothesis removed
 7-May-15 0dom      [--same--]  hypothesis added
 7-May-15 sbthbg    sbthb       hypothesis removed
 7-May-15 xpdom3    [--same--]  hypothesis added
 7-May-15 xpdom1    [--same--]  hypothesis removed
 7-May-15 xpdom1g   [--same--]  hypothesis removed
 7-May-15 xpdom2    [--same--]  hypothesis removed
 7-May-15 undom     [--same--]  hypothesis removed
 7-May-15 finnum    [--same--]  revised
 7-May-15 map1      [--same--]  revised: sethood antecedent
 7-May-15 mapsnen   [--same--]  hypothesis added
 7-May-15 2dom      [--same--]  hypothesis removed
 7-May-15 entr4i    [--same--]  hypothesis removed
 7-May-15 entr3i    [--same--]  hypothesis removed
 7-May-15 entr2i    [--same--]  hypothesis removed
 7-May-15 ensymi    [--same--]  hypothesis removed
 7-May-15 ensym     [--same--]  hypothesis removed
 7-May-15 ensymg    ---         deleted; use ensym
 7-May-15 ssdom2g   ssdomg
 7-May-15 ssdomg    [--same--]  revised
 7-May-15 dom3      dom2
 7-May-15 dom2      [--same--]  revised
 7-May-15 dom3d     dom2d
 7-May-15 dom2d     [--same--]  revised
 7-May-15 f1dom     [--same--]  revised
 7-May-15 f1dom2g   f1domg
 7-May-15 f1domg    [--same--]  revised
 7-May-15 bren      [--same--]  hypothesis removed
 7-May-15 breng     ---         deleted; use bren
 7-May-15 ixpssmap  [--same--]  hypothesis removed
 7-May-15 ixpssmapg [--same--]  hypothesis removed
 7-May-15 mapss     [--same--]  revised: sethood antecedent
 7-May-15 map0b     [--same--]  hypothesis removed
 7-May-15 map0e     [--same--]  revised: sethood antecedent
 7-May-15 mapsspw   [--same--]  hypothesis removed
 7-May-15 pmresg    [--same--]  hypothesis removed
 7-May-15 elmapi    [--same--]  hypothesis removed
 7-May-15 elmapex1  elmapex     revised
 7-May-15 eceqoveq  [--same--]  hypothesis removed
 7-May-15 ecopovtrn [--same--]  hypothesis removed
 7-May-15 ecopovsym [--same--]  hypothesis removed
 7-May-15 brecop2   [--same--]  hypothesis removed
 7-May-15 errsym    [--same--]  hypothesis removed
 7-May-15 curry2val [--same--]  hypothesis removed
 7-May-15 curry1val [--same--]  hypothesis removed
 7-May-15 eqop      [--same--]  hypothesis removed
 7-May-15 ot2ndg    [--same--]  hypothesis added
 7-May-15 ot1stg    [--same--]  hypothesis added
 7-May-15 op1stg    [--same--]  hypothesis added
 7-May-15 op1st     [--same--]  hypothesis added
 7-May-15 caovmo    [--same--]  hypothesis removed
 7-May-15 ndmovordi [--same--]  hypothesis removed
 7-May-15 ndmovord  [--same--]  hypothesis removed
 7-May-15 ndmovdistr [--same--] hypothesis removed
 7-May-15 ndmovass  [--same--]  hypothesis removed
 7-May-15 ndmovcom  [--same--]  hypothesis removed
 7-May-15 ndmovrcl  [--same--]  hypothesis removed
 7-May-15 ndmov     [--same--]  hypothesis removed
 7-May-15 ndmovcl   [--same--]  revised
 7-May-15 ndmovg    [--same--]  hypothesis removed
 7-May-15 fnopovb   fnotovb     revised; hypothesis removed
 7-May-15 ovprc2if  ---         deleted
 7-May-15 ovprc2    [--same--]  revised
 7-May-15 fvopab3   fvopab3g    revised: sethood antecedent
 7-May-15 fniniseg  [--same--]  hypothesis removed
 7-May-15 funbrfv2bg funbrfv2b  hypothesis removed
 7-May-15 funbrfvbg ---         deleted; use funbrfvb
 7-May-15 funopfvb  [--same--]  hypothesis removed
 7-May-15 funbrfvb  [--same--]  hypothesis removed
 7-May-15 fnbrfvb   [--same--]  hypothesis removed
 7-May-15 fnbrfvbg  ---         deleted; use fnbrfvb
 7-May-15 funopfvg  ---         deleted; use funopfv
 7-May-15 funopfv   [--same--]  hypothesis removed
 7-May-15 funbrfv   [--same--]  hypothesis removed
 7-May-15 opelf     [--same--]  hypothesis added
 7-May-15 fnunsn    [--same--]  hypothesis added; deduction form
 7-May-15 fntp      [--same--]  hypothesis added
 7-May-15 fnprg     [--same--]  hypothesis added
 7-May-15 fnsn      [--same--]  hypothesis added
 7-May-15 funtp     [--same--]  hypothesis added
 7-May-15 funpr     [--same--]  hypothesis added
 7-May-15 funprg    [--same--]  hypothesis added
 7-May-15 funsng    [--same--]  hypothesis added
 7-May-15 funsn     [--same--]  hypothesis added
 7-May-15 funopg    [--same--]  hypothesis added
 7-May-15 rnsnop    [--same--]  hypothesis removed
 7-May-15 cnvsn     [--same--]  hypothesis added
 7-May-15 op1sta    [--same--]  hypothesis added
 7-May-15 dmtpop    [--same--]  hypothesis added
 7-May-15 dmprop    [--same--]  hypothesis added
 7-May-15 dmsnop    [--same--]  hypothesis added
 7-May-15 irrexi    ---         deleted; use brrelex12
 7-May-15 relelrng  [--same--]  hypothesis removed
 7-May-15 breldmg   [--same--]  hypothesis added
 7-May-15 breldm    [--same--]  hypothesis added
 7-May-15 opeldm    [--same--]  hypothesis added
 7-May-15 issetid   [--same--]  revised
 7-May-15 opelxpex2 ---         deleted; use opelxp2
 7-May-15 opeliunxp2 [--same--] hypothesis removed
 7-May-15 relsnop   [--same--]  hypothesis added
 7-May-15 brinxp2   [--same--]  hypothesis removed
 7-May-15 opeliunxpg opeliunxp  hypothesis removed
 7-May-15 brel      [--same--]  hypothesis removed
 7-May-15 brelg     ---         deleted; use brel
 7-May-15 opprc4b   ---         deleted
 7-May-15 opelvv    [--same--]  hypothesis added
 7-May-15 opelxpv   ---         deleted
 7-May-15 brxp      [--same--]  hypothesis removed
 7-May-15 opelxpg   ---         deleted; use opelxp
 7-May-15 opelxp    [--same--]  hypothesis removed
 7-May-15 vtoclribr ---         deleted; use vtoclr
 7-May-15 vtoclrbr  ---         deleted; use vtoclr
 7-May-15 vtoclr    [--same--]  hypothesis removed
 7-May-15 op1stb    [--same--]  hypothesis added
 7-May-15 wereucl   [--same--]  revised: sethood antecedent
 7-May-15 wereu     [--same--]  revised: sethood antecedent
 7-May-15 epelc     [--same--]  hypothesis removed
 7-May-15 uniopel   [--same--]  hypothesis added
 7-May-15 uniop     [--same--]  hypothesis added
 7-May-15 euop2     [--same--]  hypothesis added
 7-May-15 opeqpr    [--same--]  hypothesis added
 7-May-15 moop2     [--same--]  hypothesis added
 7-May-15 opcom     [--same--]  hypothesis added
 7-May-15 opth2     ---         deleted; use opth or opth2
 7-May-15 oteqex    [--same--]  revised
 7-May-15 opeqex    [--same--]  revised
 7-May-15 opprc3    ---         deleted
 7-May-15 opprc1b   0nelop      revised
 7-May-15 opnz      [--same--]  hypothesis added; revised (use opnz or opnzi)
 7-May-15 otthg     otth        hypothesis removed
 7-May-15 otthg2    otth2       hypothesis removed
 7-May-15 opthgg    opthg       hypothesis removed
 7-May-15 opthg2    ---         deleted; use opth2
 7-May-15 opthg     ---         deleted; use opth
 7-May-15 opth      [--same--]  hypothesis removed
 7-May-15 opth1     [--same--]  hypothesis added
 7-May-15 opi2      [--same--]  hypothesis added
 7-May-15 opi1      [--same--]  hypothesis added
 7-May-15 elop      [--same--]  hypothesis added
 7-May-15 brprc     ---         deleted
 7-May-15 opprc2if  ---         deleted
 7-May-15 opprc2    [--same--]  revised
 7-May-15 opprc1    [--same--]  revised
 7-May-15 opid      [--same--]  hypothesis added
 7-May-15 ralsng    ralsns
 7-May-15 ralsn     [--same--]  revised
 7-May-15 raltp     [--same--]  revised
 7-May-15 rexpr     [--same--]  revised
 7-May-15 ralpr     [--same--]  revised
 7-May-15 rexprg    [--same--]  revised
 7-May-15 ralprg    [--same--]  revised
 7-May-15 df-op     [--same--]  revised; see dfop or dfopg
14-Apr-15 mptiniseg [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 mptcnvima mptpreima   moved from SO's mathbox to main set.mm
14-Apr-15 resmpt3   [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 fidomtri  [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 ficardsdom [--same--] moved from SO's mathbox to main set.mm
14-Apr-15 euen1     [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 reuen1    [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 dvdsadd2b [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 riincld   [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 cmpfii    [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 tgdom     [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 eltg4i    [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 fopwdom   [--same--]  moved from SO's mathbox to main set.mm
14-Apr-15 fclsfcn   cnfcf       (in JGH's mathbox)
14-Apr-15 fclsfcnp  cnpfcf      (in JGH's mathbox)
14-Apr-15 fclsfneii fcfneii     (in JGH's mathbox)
14-Apr-15 fclsfelbas fcfelbas   (in JGH's mathbox)
14-Apr-15 fclusfnei fcfnei      (in JGH's mathbox)
14-Apr-15 isfclusf  isfcf       (in JGH's mathbox)
14-Apr-15 sfclusf   fcfval      (in JGH's mathbox) revised
14-Apr-15 fclusff   ---         (in JGH's mathbox) deleted; use fcfval
14-Apr-15 ufcomp    ufilcmp     (in JGH's mathbox) revised
14-Apr-15 fcluscomp fclscmp     (in JGH's mathbox) revised
14-Apr-15 fcluscn   fclscn      (in JGH's mathbox) revised
14-Apr-15 fcluscnp  fclscnp     (in JGH's mathbox) revised
14-Apr-15 uffclsflim [--same--] (in JGH's mathbox) revised
14-Apr-15 flimfnfcls [--same--] (in JGH's mathbox) revised
14-Apr-15 fclsfnflim [--same--] (in JGH's mathbox) revised
14-Apr-15 flimfcls  [--same--]  (in JGH's mathbox) revised
14-Apr-15 fcluscf   fclscf      (in JGH's mathbox)
14-Apr-15 fclusss   fclsss2     (in JGH's mathbox) revised
14-Apr-15 fclusbas  fclsopn     (in JGH's mathbox) revised
14-Apr-15 fclusneii fclsneii    (in JGH's mathbox) revised
14-Apr-15 fclselbas [--same--]  (in JGH's mathbox) revised
14-Apr-15 fclusnei  fclsnei     (in JGH's mathbox)
14-Apr-15 isfclus   isfcls      (in JGH's mathbox) revised
14-Apr-15 filclus   fclsval     (in JGH's mathbox) revised
14-Apr-15 sfcls     ---         (in JGH's mathbox) deleted; use fclsval
14-Apr-15 flimfcn   cnflf       moved from JGH's mathbox to main set.mm;revised
14-Apr-15 flimfcnp  cnpflf      moved from JGH's mathbox to main set.mm;revised
14-Apr-15 flimfbas  [--same--]  (in JGH's mathbox) revised
14-Apr-15 fmfnfm    [--same--]  (in JGH's mathbox) revised
14-Apr-15 rnelfmlem [--same--]  (in JGH's mathbox) revised
14-Apr-15 imaelfm   [--same--]  moved from JGH's mathbox to main set.mm
14-Apr-15 cnfillim  cnflf       moved from JGH's mathbox to main set.mm;revised
14-Apr-15 cnpfillim cnpflf      moved from JGH's mathbox to main set.mm;revised
14-Apr-15 flimcls   [--same--]  moved from JGH's mathbox to main set.mm;revised
14-Apr-15 limfilcf  flimcf      moved from JGH's mathbox to main set.mm;revised
14-Apr-15 neiplim   neiflim     moved from JGH's mathbox to main set.mm;revised
14-Apr-15 df-fclusf df-fcf      (in JGH's mathbox)
14-Apr-15 df-fclus  df-fcls     (in JGH's mathbox)
14-Apr-15 cfclusf   cfcf        (in JGH's mathbox)
14-Apr-15 cfclus    cfcls       (in JGH's mathbox)
14-Apr-15 ---       ---         df-1stc ~ 2ndcctbss moved from JGH's mathbox to
                                main set.mm
14-Apr-15 fictb     [--same--]  moved from JGH's mathbox to main set.mm
14-Apr-15 uncon     [--same--]  moved from FL's mathbox to main set.mm
14-Apr-15 iuncon    [--same--]  moved from FL's mathbox to main set.mm
14-Apr-15 flimfneicn flfneicn   (in FL's mathbox)
14-Apr-15 flimfneic flfneic     (in FL's mathbox)
14-Apr-15 flimfnein flfnein     (in FL's mathbox)
14-Apr-15 clindistop indiscld   moved from FL's mathbox to main set.mm
14-Apr-15 clsingemp sn0cld      moved from FL's mathbox to main set.mm
14-Apr-15 dtt2      dishaus     moved from FL's mathbox to main set.mm; revised
14-Apr-15 dtopcl    discld      moved from FL's mathbox to main set.mm; revised
14-Apr-15 flimfnei2 flfnei2     (in FL's mathbox)
14-Apr-15 cnpfillim4 cnpflf4    (in FL's mathbox) revised
14-Apr-15 conttnf   cnpflf2     moved from FL's mathbox to main set.mm; revised
14-Apr-15 flimfneih flfneih     (in FL's mathbox)
14-Apr-15 trnei     [--same--]  moved from FL's mathbox to main set.mm; revised
14-Apr-15 trfil     ---         moved from FL's mathbox to main set.mm; revised
                                (split into trfil1, trfil2)
14-Apr-15 fbfgss2   fil2ss      (in FL's mathbox)
14-Apr-15 fbaslim2  fbflim2     moved from FL's mathbox to main set.mm; revised
14-Apr-15 elfilnemp fileln0     moved from FL's mathbox to main set.mm
14-Apr-15 distopg   distop      moved from FL's mathbox to main set.mm
14-Apr-15 neindisj2 [--same--]  moved from FL's mathbox to main set.mm
14-Apr-15 surjsec   fcofo       moved from FL's mathbox to main set.mm
14-Apr-15 injrec    fcof1       moved from FL's mathbox to main set.mm
14-Apr-15 pw2eng    [--same--]  moved from FL's mathbox to main set.mm
14-Apr-15 surrc2    cocan2      moved from FL's mathbox to main set.mm
14-Apr-15 njtlc     cocan1      moved from FL's mathbox to main set.mm; revised
14-Apr-15 tanord    [--same--]  revised
14-Apr-15 dvmptco   [--same--]  revised
14-Apr-15 dvmptim   [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptre   [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptcj   [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptsub  [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptneg  [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptcmul [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptres  [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptres2 [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptmul  [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptadd  [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmptcl   [--same--]  revised: eliminated hypothesis
14-Apr-15 dvcof     [--same--]  revised
14-Apr-15 dvco      [--same--]  revised
14-Apr-15 dvcobr    [--same--]  revised
14-Apr-15 dvcmulf   [--same--]  revised: eliminated hypothesis
14-Apr-15 dvmulf    [--same--]  revised: eliminated hypothesis
14-Apr-15 dvaddf    [--same--]  revised: eliminated hypothesis
14-Apr-15 ovolmgt0  ovolmge0    revised
14-Apr-15 ---       ---         df-ovol ~ ovolgelb revised
14-Apr-15 isphtpc   [--same--]  revised
14-Apr-15 df-phtpc  [--same--]  revised
14-Apr-15 phtpyco   phtpycc     revised
14-Apr-15 isphtpy   [--same--]  revised
14-Apr-15 df-phtpy  [--same--]  revised
14-Apr-15 holimf2   hausflf2
14-Apr-15 holimf    hausflf
14-Apr-15 hausflim2 hausflimi
14-Apr-15 flimfelbas flfelbas
14-Apr-15 isflimf   isflf
14-Apr-15 flimfneii flfneii
14-Apr-15 flimfnei  flfnei
14-Apr-15 fbfgfmeq  fmfg
14-Apr-15 fmbas     fmuni       swapped equality arguments
14-Apr-15 fmval     [--same--]  revised
14-Apr-15 fmfval    [--same--]  revised
14-Apr-15 df-fm     [--same--]  revised
14-Apr-15 fbaslim   fbflim      revised
14-Apr-15 limfilss  flimss2     revised
14-Apr-15 df-flim   [--same--]  revised ( ( fLim ` J ) ` F ) -> ( J fLim F )
                                (affects all flim* theorems)
14-Apr-15 filrn     [--same--]  revised
14-Apr-15 fgid      fgfil
14-Apr-15 fgfil     fgcl
14-Apr-15 fbfgss    fgss2
14-Apr-15 fgbas     fguni
14-Apr-15 fbssfg    ssfg
14-Apr-15 fgf       fgval
14-Apr-15 emnfil    filn0
14-Apr-15 fipfil2   filintn0
14-Apr-15 fipfil    filinn0
14-Apr-15 filusb    filtop
14-Apr-15 filint    filin
14-Apr-15 fillsb    filss       rearranged hypotheses
14-Apr-15 filesn    0nelfil
14-Apr-15 nconsubb  [--same--]  revised
14-Apr-15 nconsuba  ---         deleted; use nconsubb
14-Apr-15 consuba   ---         deleted; use connsub or nconsubb
14-Apr-15 usinuniop ---         deleted; use dfcon2 or conndisj
14-Apr-15 iscon     [--same--]  revised
14-Apr-15 stoig2    subspuni
14-Apr-15 stoig3    subsptop
14-Apr-15 neiuni    unnei       swapped equality arguments
14-Apr-15 distop    [--same--]  revised
14-Apr-15 prdmbasex [--same--]  revised
14-Apr-15 rlimi     [--same--]  revised
14-Apr-15 rlim0lt   [--same--]  revised
14-Apr-15 rlim0     [--same--]  revised
14-Apr-15 rlim3     [--same--]  revised
14-Apr-15 rlim2lt   [--same--]  revised
14-Apr-15 rlim2     [--same--]  revised
14-Apr-15 recvalzi  recval      revised
14-Apr-15 fzsdom2   [--same--]  revised
14-Apr-15 hashfz    [--same--]  revised
14-Apr-15 hashfn    [--same--]  revised: eliminated hypothesis
14-Apr-15 iccss     [--same--]  revised
14-Apr-15 iooss2    [--same--]  revised
14-Apr-15 iooss1    [--same--]  revised
14-Apr-15 ixxss2    [--same--]  revised
14-Apr-15 ixxss1    [--same--]  revised
14-Apr-15 pwen      [--same--]  revised: eliminated hypothesis
14-Apr-15 mpt2eq123 [--same--]  revised
12-Apr-15 sneqbg    [--same--]  moved from SF's mathbox to main set.mm
12-Apr-15 sneqrg    [--same--]  moved from SF's mathbox to main set.mm
 9-Apr-15 lspsnvsel lspsneli
 9-Apr-15 lmodvsinv lmodvsneg   moved from SO's mathbox to main set.mm; revised
 7-Apr-15 grpsubinv grpinvsub
22-Mar-15 lspsneli  [--same--]  obsolete; use lspsnvsel
21-Mar-15 lspsnmul  lspsnvsel
21-Mar-15 lvecmulcan2 lvecvscan2
21-Mar-15 lvecmulcan lvecvscan
21-Mar-15 lvecmuln0 lvecvsn0
21-Mar-15 lvecmul0or lvecvs0or
12-Mar-15 0vid      lmod0vid
12-Mar-15 0vrid     lmod0vrid
12-Mar-15 0vlid     lmod0vlid
12-Mar-15 0vcl      lmod0vcl
28-Feb-15 cnvcan    funcocnv2   moved from JM's mathbox to main set.mm
17-Feb-15 hauseqlcld [--same--] moved from SO's mathbox to main set.mm
17-Feb-15 hausdiag  [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 eltpt2    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 xpssres   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 c1lip3    [--same--]  (in SO's mathbox) revised
17-Feb-15 c1lip2    [--same--]  (in SO's mathbox) revised
17-Feb-15 c1lip     [--same--]  (in SO's mathbox) revised
17-Feb-15 plycpn    [--same--]  (in SO's mathbox) revised
17-Feb-15 dvnply    [--same--]  (in SO's mathbox) revised
17-Feb-15 cpnord    [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 elcpn     [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 fncpn     [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvnbss    [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvnf      [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvnp1     [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvn0      [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvf2      dvf         moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvply2    [--same--]  (in SO's mathbox) revised
17-Feb-15 dvply1    [--same--]  (in SO's mathbox) revised
17-Feb-15 dvexp2    [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 dvmptfsum [--same--]  moved from SO's mathbox to main set.mm; revised
17-Feb-15 wemapso   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 wemappo   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 soltmin   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 somin2    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 somincom  [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 somin1    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 poltletr  [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 poleloe   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 fresaunres2 [--same--] moved from SO's mathbox to main set.mm
17-Feb-15 fresaun   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 resasplit [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 elmapi    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 elmapex1  [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 fndmin    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 fndmdifeq0 [--same--] moved from SO's mathbox to main set.mm
17-Feb-15 fndmdifcom [--same--] moved from SO's mathbox to main set.mm
17-Feb-15 fndmdif   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 ralima    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 rexima    [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 fvssunirn [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 fvelrn0   fvrn0       moved from SO's mathbox to main set.mm
17-Feb-15 fvbr0     [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 difopab   [--same--]  moved from SO's mathbox to main set.mm
17-Feb-15 df-maxidl [--same--]  moved from JM's mathbox to main set.mm
17-Feb-15 df-pridl  [--same--]  moved from JM's mathbox to main set.mm
17-Feb-15 df-idl    [--same--]  moved from JM's mathbox to main set.mm
17-Feb-15 conntoppr [--same--]  moved from JGH's mathbox to main set.mm
17-Feb-15 cnconn    [--same--]  moved from JGH's mathbox to main set.mm
17-Feb-15 alexsub   [--same--]  moved from JGH's mathbox to main set.mm
17-Feb-15 finsschain [--same--] moved from JGH's mathbox to main set.mm
17-Feb-15 nconsubb  [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 nconsuba  [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 consuba   [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 istos     [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 df-toset  [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 unprj     undifixp    moved from FL's mathbox to main set.mm
17-Feb-15 eltpg     [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 inpreima2 intpreima   moved from FL's mathbox to main set.mm
17-Feb-15 inpreima5 iinpreima   moved from FL's mathbox to main set.mm
17-Feb-15 fveq12i   [--same--]  moved from FL's mathbox to main set.mm
17-Feb-15 fvrn0     [--same--]  moved from SF's mathbox to main set.mm
17-Feb-15 ---       ---         dvaddbr ~ itgsubst revised
17-Feb-15 dvaddbr   [--same--]  revised
19-Jan-15 ---       ---         df-dv ~ dvcn revised
17-Feb-15 df-dv     [--same--]  revised
17-Feb-15 pi1set    ---         deleted; use pi1bval
17-Feb-15 pi1gp     [--same--]  revised
17-Feb-15 pi1val    pi1pval     revised
17-Feb-15 pi1f      [--same--]  revised
17-Feb-15 pi1fval   [--same--]  revised
17-Feb-15 pi1bvalqs [--same--]  revised
17-Feb-15 elpi1i    [--same--]  revised
17-Feb-15 elpi1     [--same--]  revised
17-Feb-15 pi1bval   [--same--]  revised
17-Feb-15 df-pi1    [--same--]  revised
17-Feb-15 df-pi1b   ---         deleted; use df-pi1
17-Feb-15 iscmp     [--same--]  revised
17-Feb-15 symgcl    [--same--]  revised
17-Feb-15 symgov    [--same--]  revised
17-Feb-15 symgplusg [--same--]  revised
17-Feb-15 symgbas   [--same--]  revised
17-Feb-15 proplem2  [--same--]  revised
17-Feb-15 df-pt     [--same--]  revised
17-Feb-15 ---       ---         math token "tP" changed to "Xt_"
17-Feb-15 mapixp    ---         deleted; use ixpconst
 8-Feb-15 posprs    posprsr     (in FL's mathbox)
 8-Feb-15 isprs     isprsr      (in FL's mathbox)
 8-Feb-15 cpreset   [--same--]  moved from FL's mathbox to main set.mm
 8-Feb-15 df-preset [--same--]  moved from FL's mathbox to main set.mm
28-Jan-15 strssd    [--same--]  moved from NM's mathbox to main set.mm
28-Jan-15 strfvd    [--same--]  moved from NM's mathbox to main set.mm
28-Jan-15 strfvnd   [--same--]  moved from NM's mathbox to main set.mm
28-Jan-15 r1omNEW   r1om        moved from SO's mathbox to main set.mm
28-Jan-15 ackbij2   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 ackbij1b  [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 ackbij1   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 onpsssuc  [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 f1opw     [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 djudisj   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 djussxp   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 xpsnen2g  [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 nnunifi   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 fzsdom2   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 hashfz    [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 isinffi   [--same--]  moved from SO's mathbox to main set.mm
28-Jan-15 isprj2    [--same--]  (in FL's mathbox) revised
28-Jan-15 prdmbasex [--same--]  revised
28-Jan-15 ixpexg    [--same--]  revised
19-Jan-15 ---       ---         strlemor0 ~ prdmlmodd moved from SO's mathbox
                                to main set.mm
19-Jan-15 lspf      [--same--]  moved from SO's mathbox to main set.mm
19-Jan-15 lsslsp    [--same--]  moved from SO's mathbox to main set.mm
19-Jan-15 lsslss    [--same--]  moved from SO's mathbox to main set.mm
19-Jan-15 ---       ---         cghm ~ reslmhm moved from SO's mathbox to main
                                set.mm
19-Jan-15 elfz1end  [--same--]  moved from SO's mathbox to main set.mm
19-Jan-15 curgrpact [--same--]  (in FL's mathbox) revised
19-Jan-15 rngapm    [--same--]  (in FL's mathbox) revised
19-Jan-15 gapm2     [--same--]  (in FL's mathbox) revised
19-Jan-15 gaplc     galcan      moved from FL's mathbox to main set.mm; revised
19-Jan-15 symgfo    [--same--]  (in FL's mathbox) revised
19-Jan-15 ltlga     gaid2       moved from FL's mathbox to main set.mm; revised
19-Jan-15 cayleyth  [--same--]  moved from PC's mathbox to main set.mm; revised
19-Jan-15 cayleyi   cayley      moved from PC's mathbox to main set.mm; revised
19-Jan-15 symggrp   [--same--]  moved from PC's mathbox to main set.mm; revised
19-Jan-15 tgss      [--same--]  revised
19-Jan-15 unitg     [--same--]  revised
19-Jan-15 bastg     [--same--]  revised
19-Jan-15 tg2       [--same--]  revised
19-Jan-15 tg1       [--same--]  revised
19-Jan-15 eltg2b    [--same--]  revised
19-Jan-15 eltg2     [--same--]  revised
19-Jan-15 eltg      [--same--]  revised
19-Jan-15 tgval2    [--same--]  revised
19-Jan-15 tgval     [--same--]  revised
19-Jan-15 df-topgen [--same--]  revised
19-Jan-15 symgidi   symgid      revised
19-Jan-15 symggrpi  symggrp     revised
19-Jan-15 symgov    [--same--]  revised
19-Jan-15 symgval   symgplusg   revised
19-Jan-15 elsymgrn  elsymgbas   revised
19-Jan-15 df-symg   [--same--]  revised
19-Jan-15 gapm      [--same--]  revised
19-Jan-15 gacan     [--same--]  revised
19-Jan-15 gaass     [--same--]  revised
19-Jan-15 gagrpid   [--same--]  revised
19-Jan-15 gaf       [--same--]  revised
19-Jan-15 gagrp     [--same--]  revised
19-Jan-15 ssga      subgga      revised
19-Jan-15 gaid      [--same--]  revised
19-Jan-15 ga0       [--same--]  revised
19-Jan-15 isga2     ---         deleted; use isga
19-Jan-15 gafo      [--same--]  revised
19-Jan-15 isga      [--same--]  revised
19-Jan-15 df-ga     [--same--]  revised
19-Jan-15 grplactf1o [--same--] revised
19-Jan-15 grplactval [--same--] revised
19-Jan-15 grplactfval [--same--] revised
19-Jan-15 islbs2    islbs3      revised
19-Jan-15 lbspss    [--same--]  revised
19-Jan-15 lbsind    lbsind2     revised
19-Jan-15 lbssp     [--same--]  revised
19-Jan-15 lbsel     [--same--]  revised
19-Jan-15 lbsss     [--same--]  revised
19-Jan-15 islbs     [--same--]  revised; see also islbs2
19-Jan-15 lbsval    ---         deleted; use islbs
19-Jan-15 df-lbs    [--same--]  revised
19-Jan-15 lssne0    [--same--]  revised
19-Jan-15 lsscl     [--same--]  revised
19-Jan-15 lssn0     [--same--]  revised
19-Jan-15 lssel     [--same--]  revised
19-Jan-15 lssss     [--same--]  revised
19-Jan-15 islssd    [--same--]  revised
19-Jan-15 islss     [--same--]  revised
19-Jan-15 lagsubglem2 lagsubg2  revised
19-Jan-15 lagsubglem1 eqger     revised
19-Jan-15 issubg2   [--same--]  revised
19-Jan-15 odphi     odzphi
19-Jan-15 oddvds    odzdvds
19-Jan-15 odid      odzid
19-Jan-15 odcl      odzcl
19-Jan-15 odcllem   odzcllem
19-Jan-15 odval     odzval
19-Jan-15 df-od     df-odz
19-Jan-15 cod       codz
19-Jan-15 ---       ---         math token "od" changed to "odZ"
10-Jan-15 lsmss1xxx lsmss2
10-Jan-15 lsmss1    lsmss2
10-Jan-15 lsmss2    lsmss1xxx
 9-Jan-15 mpbiran   [--same--]  changed hypothesis order
 9-Jan-15 mpbiran2  [--same--]  changed hypothesis order
 9-Jan-15 mpbir2an  [--same--]  changed hypothesis order
 9-Jan-15 mpbi2and  [--same--]  changed hypothesis order
 9-Jan-15 mpbir2and [--same--]  changed hypothesis order
 9-Jan-15 mpbir3an  [--same--]  changed hypothesis order
 9-Jan-15 mpbir3and [--same--]  changed hypothesis order
 8-Jan-15 lsmmod    [--same--]  swapped equality arguments
 8-Jan-15 ficarddom [--same--]  swapped biconditional arguments
 7-Jan-15 algvsca   [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algsca    [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algmulr   [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algaddg   [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algbase   [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algfun    [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 algfn     [--same--]  moved from SO's mathbox to main set.mm
 7-Jan-15 crngcom   crngocom
 7-Jan-15 ---       ---         math token "CRing" changed to "CRingOps"
 7-Jan-15 df-mnd2   df-mnd      moved from FL's mathbox to main set.mm
 7-Jan-15 mndass2   mndoass2
 7-Jan-15 mndass    mndoass
 7-Jan-15 mndio     mndoio
 7-Jan-15 mndid     mndoid
 7-Jan-15 mndisass  mndoisass
 7-Jan-15 df-tsms   rngomndo
 7-Jan-15 rngomnd   rngomndo
 7-Jan-15 grpomnd   grpomndo
 7-Jan-15 ismnd2    ismndo2
 7-Jan-15 ismnd1    ismndo1
 7-Jan-15 ismnd     ismndo
 7-Jan-15 mndmgmid  mndomgmid
 7-Jan-15 mndismgm  mndoismgm
 7-Jan-15 mndisexid mndoisexid
 7-Jan-15 mndissmgrp mndoissmgrp
 7-Jan-15 df-mnd    df-mndo
 7-Jan-15 cmnd      cmndo
 7-Jan-15 ---       ---         math token "Mnd" changed to "MndOp"
 7-Jan-15 grp2grpo  ---         deleted (commented out)
 7-Jan-15 unitpropd [--same--]  revised: eliminated hypothesis
 7-Jan-15 dvdsrpropd [--same--] revised: eliminated hypothesis
 7-Jan-15 dvdsrmul2 dvdsrmul1   revised
 7-Jan-15 dvdsrmul  [--same--]  revised
 7-Jan-15 dvdsr2    [--same--]  revised
 7-Jan-15 dvdsr     [--same--]  revised
 7-Jan-15 dvdsrval  [--same--]  revised
 7-Jan-15 df-dvdsr  [--same--]  revised (changed from left-divisible to right)
 7-Jan-15 ringi     [--same--]  revised
 7-Jan-15 isring    [--same--]  revised
 7-Jan-15 df-ring   [--same--]  revised
 7-Jan-15 gsum2d    [--same--]  revised
 7-Jan-15 ---       ---         all gsum* theorems revised for CMnd
 7-Jan-15 mulgnndi  mulgnn0di   revised
 7-Jan-15 abl4      cmn4        revised
 7-Jan-15 abl32     cmn32       revised
 7-Jan-15 isabld    [--same--]  reordered hypotheses
 7-Jan-15 isabl     isabl2
 7-Jan-15 df-abl    [--same--]  revised
 7-Jan-15 mulgnn0ass [--same--] revised
 7-Jan-15 mulgnnass [--same--]  revised
 7-Jan-15 mulgnn0dir [--same--] revised
 7-Jan-15 mulgnndir [--same--]  revised
 7-Jan-15 mulgnn0z  [--same--]  revised
 7-Jan-15 mulgnn0cl [--same--]  revised
 7-Jan-15 mulgnncl  [--same--]  revised
 7-Jan-15 mulgnn0p1 [--same--]  revised
 7-Jan-15 grpinv    ---         deleted; use grplinv, grprinv
 7-Jan-15 isgrpid   ---         deleted; use ismgmid
 7-Jan-15 grpidinv2 ---         deleted; use grplid, grprid, grpinvex
 7-Jan-15 isgrpi    [--same--]  revised: eliminated hypothesis
 7-Jan-15 isgrpiOLD ---         deleted
 7-Jan-15 isgrpdOLD ---         deleted
 7-Jan-15 isgrprd   ---         deleted
 7-Jan-15 isgrpd    [--same--]  revised: eliminated hypothesis
 7-Jan-15 grppropOLD ---        deleted; use grpprop
 7-Jan-15 elgrp     ---         deleted; use isgrp
 7-Jan-15 grpideu2  ---         deleted; use grpideu or grpridd
 7-Jan-15 grpidinv  ---         deleted; use grpinvex
 7-Jan-15 ---       ---         grpidinvlem1 - grpidinvlem4 deleted
 7-Jan-15 grplidinv             deleted; use grpinvex
 7-Jan-15 grplem1   ---         deleted
 7-Jan-15 isgrp2    ---         deleted; use isgrp
 7-Jan-15 isgrp     [--same--]  revised
 7-Jan-15 df-grp    [--same--]  revised
 7-Jan-15 df-mpq    [--same--]  revised
 7-Jan-15 df-plpq   [--same--]  revised
 7-Jan-15 fineqv    [--same--]  revised
 7-Jan-15 erovlem   [--same--]  revised
 7-Jan-15 eroveu    [--same--]  revised
 7-Jan-15 ovmpt2    [--same--]  changed distinct vars
 7-Jan-15 ovmpt2g   [--same--]  changed distinct vars
 7-Jan-15 grplidd   grpridd     revised
 7-Jan-15 grplinvd  grprinvd    revised
 7-Jan-15 grplinvlem2 ---       deleted
 7-Jan-15 grplinvlem1 grprinvlem revised
 7-Jan-15 caovcld   caovclg
 7-Jan-15 posn      [--same--]  revised
 7-Jan-15 sbcbidv   sbcbidgv
 7-Jan-15 sbcbid    sbcbidg
28-Dec-14 grpnegprop ---        (in SO's mathbox) deleted; use grpinvpropd
28-Dec-14 grpidprop ---         (in SO's mathbox) deleted; use grpidpropd
28-Dec-14 fvco4     fvco2       moved from SO's mathbox to main set.mm
28-Dec-14 injrec    [--same--]  (in FL's mathbox) revised
28-Dec-14 subrgugrp [--same--]  revised
28-Dec-14 drngid    [--same--]  revised
28-Dec-14 drngmgrp  [--same--]  revised
28-Dec-14 isdrng2   [--same--]  revised
28-Dec-14 invrfval  [--same--]  revised
28-Dec-14 df-invr   [--same--]  revised
28-Dec-14 unitgrpid [--same--]  revised
28-Dec-14 unitgrp   [--same--]  revised
28-Dec-14 rngidval  [--same--]  revised
28-Dec-14 df-ur     [--same--]  revised
28-Dec-14 df-gsum   [--same--]  revised
28-Dec-14 grpsubval [--same--]  revised: eliminated hypothesis
28-Dec-14 grpidval  [--same--]  revised
28-Dec-14 grpproplem proplem
28-Dec-14 grpproplem2 proplem2
28-Dec-14 grpideu   grpideu2
28-Dec-14 df-0g     [--same--]  revised
28-Dec-14 algrflem  [--same--]  revised: eliminated hypothesis
28-Dec-14 fvco3     [--same--]  revised: eliminated hypothesis
28-Dec-14 fvco2     [--same--]  revised: eliminated hypothesis
28-Dec-14 fvco      [--same--]  revised: eliminated hypothesis
28-Dec-14 hbcsb1    [--same--]  revised: eliminated hypothesis
28-Dec-14 hbsbc1    hbsbc1g2
27-Dec-14 a1i12     a1ii
27-Dec-14 fmpt2d    [--same--]  revised: weakened hypothesis
 5-Dec-14 df-cnfld  [--same--]  moved from SO's mathbox to main set.mm
 5-Dec-14 grppropd  [--same--]  moved from SO's mathbox to main set.mm
 5-Dec-14 df-ress   [--same--]  moved from SO's mathbox to main set.mm
 5-Dec-14 ghsubg    ghsubgo
 5-Dec-14 zaddsubg  zaddsubgo
 5-Dec-14 readdsubg readdsubgo
 5-Dec-14 subgablo  subgoablo
 5-Dec-14 issubgi   issubgoi
 5-Dec-14 subginv   subgoinv
 5-Dec-14 subgid    subgoid
 5-Dec-14 subgrnss  subgornss
 5-Dec-14 subgov    subgoov
 5-Dec-14 subgres   subgores
 5-Dec-14 issubg    issubgo
 5-Dec-14 df-subg   df-subgo
 5-Dec-14 csubg     csubgo
 5-Dec-14 isabvd    [--same--]  revised
 5-Dec-14 rngdvcan1 [--same--]  revised
 5-Dec-14 rngdvcl   [--same--]  revised
 5-Dec-14 rngdvval  [--same--]  revised
 5-Dec-14 rngdvfval [--same--]  revised
 5-Dec-14 rngnegrmul rngmneg2   revised
 5-Dec-14 rngneglmul rngmneg1   revised
 5-Dec-14 isrngd    [--same--]  revised
 5-Dec-14 isrng     [--same--]  revised
 5-Dec-14 df-ring   [--same--]  revised
 5-Dec-14 lagsubg   [--same--]  revised
 5-Dec-14 grpn0     grpbn0
 5-Dec-14 setsval   [--same--]  revised
 5-Dec-14 df-sets   [--same--]  revised
10-Nov-14 dford3    dford5reg   (in SF's mathbox)
10-Nov-14 fvun2     [--same--]  moved from SF's mathbox to main set.mm
10-Nov-14 fvun1     [--same--]  moved from SF's mathbox to main set.mm
10-Nov-14 twsvbdop  oprab4      moved from FL's mathbox to main set.mm
10-Nov-14 ra42e     [--same--]  moved from FL's mathbox to main set.mm
10-Nov-14 dmmptss   [--same--]  moved from SF's mathbox to main set.mm
10-Nov-14 rabxm     [--same--]  moved from JM's mathbox to main set.mm
10-Nov-14 rabnc     [--same--]  moved from JM's mathbox to main set.mm
10-Nov-14 absz      [--same--]  moved from JM's mathbox to main set.mm
10-Nov-14 absmod0   [--same--]  moved from JM's mathbox to main set.mm
10-Nov-14 negmod0   [--same--]  moved from JM's mathbox to main set.mm
13-Oct-14 qredeu    [--same--]  moved from JGH's mathbox to main set.mm
13-Oct-14 qredeq    [--same--]  moved from JGH's mathbox to main set.mm
25-Sep-14 otthg     otthg2      otthg now uses ordered triple definition
23-Sep-14 logcl     logrncl
23-Sep-14 divcnlem  reccn2      revised
23-Sep-14 climsqueeze2 climsqz2
23-Sep-14 climsqueeze climsqz
21-Sep-14 elqs2     ---         (in RM's mathbox) deleted; same as elqsg
21-Sep-14 cnss      ---         (in JM's mathbox) deleted; same as cnsubsp2r
21-Sep-14 elnnr     ---         (in JM's mathbox) deleted; same as elrege0
21-Sep-14 zmodfzcl  ---         (in JM's mathbox) deleted; same as zmodfz
21-Sep-14 subtareqbe [--same--] (in FL's mathbox) revised
21-Sep-14 subtsm    [--same--]  (in FL's mathbox) revised
21-Sep-14 pwtsm     [--same--]  (in FL's mathbox) revised
21-Sep-14 tmpts     tskmcl      moved from FL's mathbox to main set.mm; revised
21-Sep-14 intrtael  tskint      moved from FL's mathbox to main set.mm; revised
21-Sep-14 intartar  inttsk      moved from FL's mathbox to main set.mm
21-Sep-14 inttar1   ---         (in FL's mathbox) deleted; see 0tsk
21-Sep-14 elttar    tskmid      moved from FL's mathbox to main set.mm
21-Sep-14 btmp      eltskm      moved from FL's mathbox to main set.mm; revised
21-Sep-14 bpmp      sstskm      moved from FL's mathbox to main set.mm; revised
21-Sep-14 tarval2g  tskmval     moved from FL's mathbox to main set.mm; revised
21-Sep-14 tarval2   ---         (in FL's mathbox) deleted; see tskmval
21-Sep-14 df-tskmp  df-tskm     moved from FL's mathbox to main set.mm; revised
21-Sep-14 ctarskim  ctskm
21-Sep-14 tarsuc3   ---         (in FL's mathbox) deleted; see tsktrss
21-Sep-14 tarsuc2   tsksuc      moved from FL's mathbox to main set.mm; revised
21-Sep-14 tarsuc1   ---         (in FL's mathbox) deleted; see tsksuc, tsktrss
21-Sep-14 sexptrt   tskmap      moved from FL's mathbox to main set.mm; revised
21-Sep-14 cptarc    tskxp       moved from FL's mathbox to main set.mm; revised
21-Sep-14 tclinf    ---         (in FL's mathbox) deleted; same as tskinf
21-Sep-14 tartord   ---         (in FL's mathbox) deleted; see tsktrss
21-Sep-14 tartrel   tsktrss     moved from FL's mathbox to main set.mm
21-Sep-14 elcartr   ---         (in FL's mathbox) deleted; see trss
21-Sep-14 tarax3d4  ---         (in FL's mathbox) deleted; see tsksdom
21-Sep-14 tarax3d3  ---         (in FL's mathbox) deleted; see tsksdom
21-Sep-14 tarax3c   ---         (in FL's mathbox) deleted; see tsken
21-Sep-14 tarax3b   ---         (in FL's mathbox) deleted; see tsken
21-Sep-14 tarax3a   ---         (in FL's mathbox) deleted; same as tsken
21-Sep-14 inacint   tskin       moved from FL's mathbox to main set.mm; revised
21-Sep-14 elincin   ---         (in FL's mathbox) deleted; same as tskss
21-Sep-14 letri31   ---         (in FL's mathbox) deleted; same as xrletri3
21-Sep-14 elioooord ---         (in FL's mathbox) deleted; same as eliooord
21-Sep-14 elioc3    ---         (in FL's mathbox) deleted; same as elioc2
21-Sep-14 elico3    ---         (in FL's mathbox) deleted; same as elico2
21-Sep-14 omslim2   ---         (in FL's mathbox) deleted; same as dfom5
21-Sep-14 omslim    ---         (in FL's mathbox) deleted; see dfom5
21-Sep-14 ltwefz    [--same--]  moved from SF's mathbox to main set.mm
21-Sep-14 ltwenn    [--same--]  moved from SF's mathbox to main set.mm
21-Sep-14 ltweuz    [--same--]  moved from SF's mathbox to main set.mm
21-Sep-14 sqrrpcl   ---         deleted; same as rpsqrcl
21-Sep-14 ltfrn     ltweuz
21-Sep-14 zmodcl2   zmodfz
21-Sep-14 tskssel2  ---         deleted; see tskssel
21-Sep-14 eltsk2    ---         deleted; see eltsk2g
21-Sep-14 eltsk     ---         deleted; see eltskg
21-Sep-14 dftsk2    ---         deleted; see eltsk2g
21-Sep-14 omsubinit alephinit
21-Sep-14 infenomsub infenaleph
21-Sep-14 omsubindss ---        deleted; same as alephle
21-Sep-14 omsublim  ---         deleted; see alephislim
21-Sep-14 omsubdmss alephdom2
21-Sep-14 elomsubsd alephsdom
21-Sep-14 omsubss   ---         deleted; same as alephord3
21-Sep-14 omsubel   ---         deleted; same as alephord2
21-Sep-14 omsubdom  alephdom
21-Sep-14 omsubsdom ---         deleted; same as alephordi
21-Sep-14 omsubsdomlem2 ---     deleted; see alephordi
21-Sep-14 omsubsdomlem1 ---     deleted; same as alephordilem1
21-Sep-14 omsubsuc2 ---         deleted; same as alephsuc2
21-Sep-14 omsubsuc  ---         deleted; same as alephsuc
19-Sep-14 clfsebs2  ---         (in FL's mathbox) deleted; same as clfsebsr
15-Sep-14 ostth     [--same--]  revised
15-Sep-14 wlogle    [--same--]  revised
11-Sep-14 infmrgelbOLD ---      (in JM's mathbox) deleted; see infmrgelb
11-Sep-14 lbleinfOLD ---        (in JGH's mathbox) deleted; see infmrgelb
11-Sep-14 suplub2   supwlub     (in FL's mathbox)
11-Sep-14 nmfnleub  [--same--]  revised
11-Sep-14 nmopub    [--same--]  revised
11-Sep-14 itg2leub  [--same--]  revised
11-Sep-14 mbfmono   mbfsup      revised
11-Sep-14 ovolshftlem2 [--same--] revised
11-Sep-14 nmoubi    [--same--]  revised
11-Sep-14 pcid      pcidlem
11-Sep-14 caurcvg   [--same--]  revised
11-Sep-14 caurcvglem [--same--] revised
11-Sep-14 limsupcl  [--same--]  revised
11-Sep-14 limsupval [--same--]  revised
11-Sep-14 expcl2lem [--same--]  revised
11-Sep-14 infmxrgelb [--same--] revised
11-Sep-14 infmrgelb [--same--]  revised
11-Sep-14 suprleubii [--same--] revised
11-Sep-14 suprnubii [--same--]  revised
11-Sep-14 suprlubii [--same--]  revised
11-Sep-14 suprleub  [--same--]  revised
11-Sep-14 suprnub   [--same--]  revised
11-Sep-14 suprlub   [--same--]  revised
 2-Sep-14 grpohlem5 grpohmlem5  (in FL's mathbox)
 2-Sep-14 grpohlem3 grpohmlem3  (in FL's mathbox)
 2-Sep-14 ditgsplit [--same--]  revised
 2-Sep-14 ditgswap  [--same--]  revised
 2-Sep-14 ditgcl    [--same--]  revised
 2-Sep-14 ditgneg   [--same--]  revised
 2-Sep-14 ditgpos   [--same--]  revised
 2-Sep-14 mbfeq     mbfeqa      revised
 2-Sep-14 ivthicc   [--same--]  revised
 2-Sep-14 ivthle2   [--same--]  revised
 2-Sep-14 ivthle    [--same--]  revised
 2-Sep-14 ivth2     [--same--]  revised
 2-Sep-14 ivth      [--same--]  revised
 2-Sep-14 negfcncf  [--same--]  revised
 2-Sep-14 cncfco    [--same--]  revised
 2-Sep-14 cncffvrn  [--same--]  revised
 2-Sep-14 rescncf   [--same--]  revised
 2-Sep-14 cncffvelrn ---        deleted; see cncff
 2-Sep-14 cncfi     [--same--]  revised
 2-Sep-14 cncffvelrnOLD ---     deleted; see cncff
 2-Sep-14 cncff     [--same--]  revised
 2-Sep-14 ---       ---         changed math symbol from "Itgbl" to "L^1"
18-Aug-14 reheibor  [--same--]  (in JM's mathbox) revised
18-Aug-14 itgcnval  [--same--]  revised
18-Aug-14 iblre     iblrelem
18-Aug-14 itg0      itgz
18-Aug-14 mbfneg    [--same--]  revised
18-Aug-14 mbfmulc2  mbfmulc2re  revised
18-Aug-14 iccst     ---         deleted; see resubmet
18-Aug-14 stioo     ---         deleted; see resubmet
14-Aug-14 rexxfr    [--same--]  revised to be more general
14-Aug-14 ralxfr    [--same--]  revised to be more general
14-Aug-14 rexxfrd   [--same--]  revised to be more general
14-Aug-14 ralxfrd   [--same--]  revised to be more general
10-Aug-14 subntr    [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 subcls    [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 subsubtop [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 ntrin     [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 epr       [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 epos      [--same--]  moved from JGH's mathbox to main set.mm
10-Aug-14 imrescl   resima2     moved from FL's mathbox to main set.mm
10-Aug-14 dmdcan    [--same--]  moved from SF's mathbox to main set.mm
10-Aug-14 bposlem6  [--same--]  revised
10-Aug-14 bposlem5  [--same--]  revised
10-Aug-14 hashpwlem ---         deleted
30-Jul-14 hasheq0   [--same--]  revised
30-Jul-14 ifswap    ifnot
30-Jul-14 ifor      ifeqor
23-Jul-14 reptertr4 ---         (in FL's mathbox) deleted; see fmptco
23-Jul-14 reptertr3 ---         (in FL's mathbox) deleted; see fmptco
23-Jul-14 reptertr2 ---         (in FL's mathbox) deleted; see fmptco
23-Jul-14 eflti     ---         deleted; see eflt
23-Jul-14 fsumcllem [--same--]  revised
23-Jul-14 fsumcl2lem [--same--] revised
16-Jul-14 cbvrex2v  [--same--]  moved from FL's mathbox to main set.mm
16-Jul-14 df-subg   [--same--]  revised
16-Jul-14 imcj      imval2
16-Jul-14 recj      reval
16-Jul-14 hashf     [--same--]  revised
16-Jul-14 df-hash   [--same--]  revised
16-Jul-14 crmuli    ---         deleted (contents moved to remullem)
14-Jul-14 riota4    riotasbc
14-Jul-14 reiota4   reiotasbc
14-Jul-14 reuuni4   reuunisbc
14-Jul-14 elabs     elabsbc
12-Jul-14 lssdisj   lssdisj1
11-Jul-14 0nelqs2   elqsn0      moved from RM's mathbox to main set.mm; revised
11-Jul-14 erdisj3   qsdisj      moved from RM's mathbox to main set.mm; revised
11-Jul-14 df-subg   [--same--]  revised
11-Jul-14 subgov    [--same--]  revised
11-Jul-14 df-subg   [--same--]  revised
11-Jul-14 hash0     hasheq0
11-Jul-14 dmmulnq   mulnqf      revised
11-Jul-14 dmaddnq   addnqf      revised
11-Jul-14 df-rq     [--same--]  revised
11-Jul-14 ecelqsdm  [--same--]  revised
11-Jul-14 0nelqs    elqsn0      revised
11-Jul-14 uniqs     [--same--]  revised
11-Jul-14 qsexg     [--same--]  revised
11-Jul-14 ecelqsg   [--same--]  changed variable names
11-Jul-14 ecdmn0    [--same--]  revised
11-Jul-14 erdisj2   erdisj      revised
11-Jul-14 erdisj    [--same--]  revised
11-Jul-14 ereldm    ereldmb     revised
11-Jul-14 erthdmr   erth2       revised
11-Jul-14 erthdmg   erth        revised
11-Jul-14 erthdm    erth        revised
11-Jul-14 erth      [--same--]  revised
11-Jul-14 erthi     [--same--]  revised
11-Jul-14 ecdmn0    [--same--]  revised
11-Jul-14 eceq2     eceq1       (these labels should be
11-Jul-14 eceq1     eceq2        exchanged at the same time)
11-Jul-14 erdmrn    [--same--]  revised
11-Jul-14 erref     [--same--]  revised
11-Jul-14 errtr     [--same--]  revised
11-Jul-14 erref2    erref       revised
11-Jul-14 ertr      [--same--]  revised
11-Jul-14 errsym    [--same--]  revised
11-Jul-14 ersymb    [--same--]  revised
11-Jul-14 ersym     [--same--]  revised
11-Jul-14 ster      iser
11-Jul-14 dfec2     [--same--]  revised
11-Jul-14 so        isso2i      revised
11-Jul-14 itlso     issoi
 7-Jul-14 difxpOLD  ---         deleted; see difxp
 7-Jul-14 clsrebb   iccssxr     moved from FL's mathbox to main set.mm; revised
 7-Jul-14 iooirrsa  ioossre     moved from FL's mathbox to main set.mm; revised
 7-Jul-14 elicore2  icossre     moved from FL's mathbox to main set.mm
 7-Jul-14 elicore   icossxr     moved from FL's mathbox to main set.mm; revised
 7-Jul-14 eliocreb2 iocssre     moved from FL's mathbox to main set.mm
 7-Jul-14 eliocreb  iocssxr     moved from FL's mathbox to main set.mm; revised
 7-Jul-14 eliccre2b iccssre     moved from FL's mathbox to main set.mm
 7-Jul-14 eliccreb  iccssxr     moved from FL's mathbox to main set.mm; revised
 7-Jul-14 islvecd   ---         deleted; see islmodd and islvec2
 7-Jul-14 islmodd   [--same--]  revised
 7-Jul-14 islmod    [--same--]  revised
 7-Jul-14 df-lmod   [--same--]  revised (change g e. Abel to g e. Grp)
 7-Jul-14 fsump1i   [--same--]  revised
 7-Jul-14 difxp     [--same--]  revised
 2-Jul-14 difeq12   [--same--]  moved from FL's mathbox to main set.mm
 2-Jul-14 rngneg1   rngnegl     revised
 1-Jul-14 abl4pnp   ablo4pnp    (in JM's mathbox)
 1-Jul-14 ablinvop  abloinvop   (in JM's mathbox)
 1-Jul-14 ablcomgrp ablocomgrp  (in JM's mathbox)
 1-Jul-14 hhssabl   hhssablo
 1-Jul-14 hhssabli  hhssabloi
 1-Jul-14 hilabl    hilablo
 1-Jul-14 nvabl     nvablo
 1-Jul-14 vcabl     vcablo
 1-Jul-14 ablmul    ablomul
 1-Jul-14 ablsn     ablosn
 1-Jul-14 subgabl   subgablo
 1-Jul-14 isablda   isabloda
 1-Jul-14 ablnnncan1 ablonnncan1
 1-Jul-14 ablnncan  ablonncan
 1-Jul-14 ablnnncan ablonnncan
 1-Jul-14 abldivdiv4 ablodivdiv4
 1-Jul-14 abldivdiv ablodivdiv
 1-Jul-14 ablmuldiv ablomuldiv
 1-Jul-14 cabl      cablo
24-Jun-14 df-lmod   [--same--]  revised, and all affected definitions and
                                theorems were revised accordingly (156
                                statements in main set.mm, 4 in FL's mathbox,
                                257 in NM's mathbox, 417 total)
23-Jun-14 ---       ---         moved from JM's mathbox to main set.mm:
                                cphtpy cphtpc phtpy phtpyfval phtpyval isphtpy
                                phtpycom phtpyid phtpyco phtpc phtpcval
                                phtpcrel isphtpc phtpcdm phtpcer reparphti
                                reparpht cpi1b cpco cpi1 pco pi1b pi1 pcofval
                                pcoval pcovalg pcoval1 pco0 pco1 pcoval2 pcocn
                                pcoloopf pcohtpylem pcohtpy pcopt pcoass
                                pcorevlem pcorev pi1bval elpi1 elpi1i pi1bvalqs
                                pi1fval pi1flem pi1f pi1val pi1gplem pi1gp
                                pi1set
23-Jun-14 isablod   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 isablda   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 isgrpod   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 isgrpda   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 cnmpt2pc  [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 paste     [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 ---       ---         moved from JM's mathbox to main set.mm:
                                iccsplit iccshftr iccshftri iccshftl iccshftli
                                iccdil iccdili icccntr icccntri cii ii iitop
                                iiuni dfii2 dfii3 iicmp cnmptre iirev iirevcn
                                iihalf1 iihalf1cn iihalf2 iihalf2cn elii1 elii2
                                iimulcl iimulcn iccst icoopnst iocopnst
                                lincmb01cmp lincmb01icc oprpiece1res1
                                oprpiece1res2
23-Jun-14 subspcld2 [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 subspcld  [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 eroprf2   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 erov2     [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 eroprf    [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 erov      [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 eroveu    [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 erovlem   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 ecelqsg   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 erthdmg   [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 oprabrexex2 [--same--] moved from JM's mathbox to main set.mm
23-Jun-14 oprabvalg ovg         moved from JM's mathbox to main set.mm

23-Jun-14 ---       ---         moved from SF's mathbox to main set.mm:
                                gcdmultiple rprimemulgcd rprimelpwr rprimepwr
                                gcd12 gcddiv gcdmultiplez dvdssqim sqgcd
                                dvdssqlem dvdssq divgcdodd gcdadd pythagtrip
                                trirecip
23-Jun-14 dvdsgcdid ---         (in SF's mathbox) deleted; see gcdeq
23-Jun-14 dvdsprime [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 ---       ---         moved from SF's mathbox to main set.mm:
                                gcdabs1 gcdabs2 dvdsgcdb gcdass mulgcdr
                                coprimeprodsq coprimeprodsq2 odd2np1lem odd2np1
                                opoe omoe opeo omeo
23-Jun-14 abssq     [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 zsqcl     [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 sqrlt     [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 nnsqcl    [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 1elunit   [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 0elunit   [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 binom2subi [--same--] moved from SF's mathbox to main set.mm
23-Jun-14 binom2sub [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 elicc2i   [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 preq12bg  [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 bfplem    bfplem2     (in JM's mathbox)
23-Jun-14 stioo     [--same--]  moved from JM's mathbox to main set.mm
23-Jun-14 elrege0   [--same--]  moved from SF's mathbox to main set.mm
23-Jun-14 clint3OLD icccld
23-Jun-14 eltop2    [--same--]  revised
23-Jun-14 ivthlem   ivthlem3
23-Jun-14 difreicc  [--same--]  revised
23-Jun-14 imaiun    imauni
16-Jun-14 icccmp    icccmpALT   (in JM's mathbox)
16-Jun-14 compfipin0 cmpfi      moved from JGH's mathbox to main set.mm
16-Jun-14 compfipin0lem cmpfilem moved from JGH's mathbox to main set.mm
16-Jun-14 hscptsscld hauscmp    moved from JGH's mathbox to main set.mm
16-Jun-14 hscptsscldlem hauscmplem moved from JGH's mathbox to main set.mm
16-Jun-14 uncomp    uncmp       moved from JGH's mathbox to main set.mm
16-Jun-14 cptclsscpt cmpcld     moved from JGH's mathbox to main set.mm
16-Jun-14 compsub   cmpsub      moved from JGH's mathbox to main set.mm
16-Jun-14 compsublem cmpsublem  moved from JGH's mathbox to main set.mm
16-Jun-14 compcov   cmpcov      moved from JGH's mathbox to main set.mm
16-Jun-14 comptop   cmptop      moved from JGH's mathbox to main set.mm
16-Jun-14 opncldf3  [--same--]  moved from JGH's mathbox to main set.mm
16-Jun-14 opncldf2  [--same--]  moved from JGH's mathbox to main set.mm
16-Jun-14 opncldf1  [--same--]  moved from JGH's mathbox to main set.mm
16-Jun-14 icc0      [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 ioc0      [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 ico0      [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 lbico1    [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 ubioc1    [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 cmptop    [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 sinempcomp 0cmp       moved from FL's mathbox to main set.mm
16-Jun-14 sbincgt   tgfiss      moved from FL's mathbox to main set.mm
16-Jun-14 neffopo   fiinopn     moved from FL's mathbox to main set.mm
16-Jun-14 rnxpid    [--same--]  moved from FL's mathbox to main set.mm
16-Jun-14 mayete3OLDi mayete3iOLD
16-Jun-14 df-toset  df-ts
16-Jun-14 ccha      ctsr
16-Jun-14 fintopcomp fincmp
16-Jun-14 comptoppr cmptoppr
16-Jun-14 cncomp    cncmp
16-Jun-14 iscomp    iscmp
16-Jun-14 df-comp   df-cmp
16-Jun-14 ccomp     ccmp
16-Jun-14 subbas2   ---         deleted; see fiuni
16-Jun-14 subbas    ---         deleted; see fibas
16-Jun-14 invrrOLD  ---         deleted; see drnginvrr
16-Jun-14 invrlOLD  ---         deleted; see drnginvrl
16-Jun-14 invrclOLD invrcllem
16-Jun-14 isumcmpss isumless
16-Jun-14 isumcmp   isumle
16-Jun-14 fsumtscop [--same--]  revised
16-Jun-14 fsumcmp   fsumle
16-Jun-14 fsumcmpss fsumless
16-Jun-14 isercmp   iserle
16-Jun-14 climcmpc2 climlec2
16-Jun-14 climcmp   climle
16-Jun-14 sercmp    serle
16-Jun-14 serdistr  seqdistr
16-Jun-14 serf1o    seqf1o
16-Jun-14 serf1olem2 seqf1olem2
16-Jun-14 serf1olem1 seqf1olem1
16-Jun-14 sercaopr  seqcaopr
16-Jun-14 sercaopr2 seqcaopr2
16-Jun-14 ioojoin   [--same--]  revised
16-Jun-14 snunioo   [--same--]  revised
16-Jun-14 snunioolem ---        deleted
16-Jun-14 icoun     [--same--]  revised
16-Jun-14 icounlem  ---         deleted
16-Jun-14 elico2    [--same--]  revised
16-Jun-14 elioc2    [--same--]  revised
16-Jun-14 elixx2    ---         deleted; see elioo2, elico2, elioc2, elicc2
16-Jun-14 ixxssicc  ixxssixx    revised
16-Jun-14 uzwo3lem2 ---         deleted
16-Jun-14 uzwo3lem1 ---         deleted
16-Jun-14 uzwo5OLD  ---         deleted
16-Jun-14 uzwo4OLD  ---         deleted
16-Jun-14 fmptd     [--same--]  revised
15-Jun-14 pwtr      [--same--]  moved from AS's mathbox to main set.mm; revised
15-Jun-14 pwtrr     pwtr        moved from AS's mathbox to main set.mm; revised
12-Jun-14 eroprv2   erov2       (in JM's mathbox)
12-Jun-14 eroprv    erov        (in JM's mathbox)
12-Jun-14 eropreu   eroveu      (in JM's mathbox)
12-Jun-14 eroprlem  erovlem     (in JM's mathbox)
12-Jun-14 eloprvdm2 elovdm2     (in JM's mathbox)
12-Jun-14 eloprvdm  elovdm      (in JM's mathbox)
12-Jun-14 oprabval4gc ov4gc     (in FL's mathbox)
12-Jun-14 oprabval2gc ov2gc     (in FL's mathbox)
12-Jun-14 opreq123i oveq123i    (in FL's mathbox)
12-Jun-14 fnoprvrn2 fnovrn2     (in FL's mathbox)
12-Jun-14 fnoprvpop fnovpop     (in FL's mathbox)
12-Jun-14 oprssoprvg oprssopvg  (in FL's mathbox)
12-Jun-14 symgoprv  symgov
12-Jun-14 subgopr   subgov
12-Jun-14 ecoprdi   ecovdi
12-Jun-14 ecoprass  ecovass
12-Jun-14 ecoprcom  ecovcom
12-Jun-14 oprec     ovec
12-Jun-14 eceqopreq eceqoveq
12-Jun-14 ecopoprer ecopover
12-Jun-14 ecopoprtrn ecopovtrn
12-Jun-14 ecopoprsym ecopovsym
12-Jun-14 ecopoprdm ecopovdm
12-Jun-14 ecopopreq ecopoveq
12-Jun-14 onopriun  onoviun
12-Jun-14 onopruni  onovuni
12-Jun-14 fnopr2v   fnov2
12-Jun-14 caoprmo   caovmo
12-Jun-14 caoprlem2 caovlem2
12-Jun-14 caoprdilem caovdilem
12-Jun-14 caoprdistrr caovdistrr
12-Jun-14 caopr42   caov42
12-Jun-14 caopr411  caov411
12-Jun-14 caopr4    caov4
12-Jun-14 caopr13   caov13
12-Jun-14 caopr31   caov31
12-Jun-14 caopr12   caov12
12-Jun-14 caopr32   caov32
12-Jun-14 caoprdistr caovdistr
12-Jun-14 caoprdistrg caovdistrg
12-Jun-14 caoprord3 caovord3
12-Jun-14 caoprord2 caovord2
12-Jun-14 caoprord  caovord
12-Jun-14 caoprcan  caovcan
12-Jun-14 caoprass  caovass
12-Jun-14 caoprassg caovassg
12-Jun-14 caoprcom  caovcom
12-Jun-14 caoprcomg caovcomg
12-Jun-14 caoprcl   caovcl
12-Jun-14 caoprcld  caovcld
12-Jun-14 ndmordi   ndmovordi
12-Jun-14 ndmord    ndmovord
12-Jun-14 ndmoprdistr ndmovdistr
12-Jun-14 ndmoprass ndmovass
12-Jun-14 ndmoprcom ndmovcom
12-Jun-14 ndmoprrcl ndmovrcl
12-Jun-14 ndmopr    ndmov
12-Jun-14 ndmoprcl  ndmovcl
12-Jun-14 ndmoprg   ndmovg
12-Jun-14 oprvconst2 ovconst2
12-Jun-14 oprelimab ovelimab
12-Jun-14 funimass4b funimassov
12-Jun-14 oprvelrn  ovelrn
12-Jun-14 fnoprvrn  fnovrn
12-Jun-14 fooprv    foov
12-Jun-14 fnrnoprv  fnrnov
12-Jun-14 foprrn    fovrn
12-Jun-14 oprssoprv oprssov
12-Jun-14 oprvres   ovres
12-Jun-14 oprabval6g ov6g
12-Jun-14 oprabval4gALT ov4gALT
12-Jun-14 oprabval4g ov4g
12-Jun-14 oprabval3 ov3
12-Jun-14 oprabval5 ov5
12-Jun-14 oprabval2 ov2
12-Jun-14 oprabval2g ov2g
12-Jun-14 oprabval2ag ov2ag
12-Jun-14 oprabval2gf ov2gf
12-Jun-14 oprabvalig ovig
12-Jun-14 oprabvaligg ovigg
12-Jun-14 oprabval  ov
12-Jun-14 foprv     fov
12-Jun-14 fnoprv    fnov
12-Jun-14 eqfnoprv2 eqfnov2
12-Jun-14 eqfnoprv  eqfnov
12-Jun-14 foprcl    fovcl
12-Jun-14 ffnoprv   ffnov
12-Jun-14 elimdeloprv elimdelov
12-Jun-14 fnotoprb  fnopovb
12-Jun-14 rcla4eopr rcla4eov
12-Jun-14 csbopr2g  csbov2g
12-Jun-14 csbopr1g  csbov1g
12-Jun-14 csbopr12g csbov12g
12-Jun-14 csboprg   csbovg
12-Jun-14 oprprc2   ovprc2
12-Jun-14 oprprc1   ovprc1
12-Jun-14 oprex     ovex
12-Jun-14 hboprd    hbovd
12-Jun-14 hbopr     hbov
12-Jun-14 opreq123d oveq123d
12-Jun-14 opreqan12rd oveqan12rd
12-Jun-14 opreqan12d oveqan12d
12-Jun-14 opreq12d  oveq12d
12-Jun-14 opreqd    oveqd
12-Jun-14 opreq2d   oveq2d
12-Jun-14 opreq1d   oveq1d
12-Jun-14 opreqi    oveqi
12-Jun-14 opreq12i  oveq12i
12-Jun-14 opreq2i   oveq2i
12-Jun-14 opreq1i   oveq1i
12-Jun-14 opreq12   oveq12
12-Jun-14 opreq2    oveq2
12-Jun-14 opreq1    oveq1
12-Jun-14 opreq     oveq
12-Jun-14 df-opr    df-ov
11-Jun-14 pi1val    [--same--]  (in JM's mathbox) revised
11-Jun-14 pi1f      [--same--]  (in JM's mathbox) revised
11-Jun-14 pi1fval   [--same--]  (in JM's mathbox) revised
11-Jun-14 pi1bvalqs [--same--]  (in JM's mathbox) revised
11-Jun-14 pcorev    [--same--]  (in JM's mathbox) revised
11-Jun-14 pcorevlem [--same--]  (in JM's mathbox) revised
11-Jun-14 pcoass    [--same--]  (in JM's mathbox) revised
11-Jun-14 pcohtpy   [--same--]  (in JM's mathbox) revised
11-Jun-14 ---       ---         pcohtpylem1 - pcohtpylem3 deleted
11-Jun-14 pco1      [--same--]  (in JM's mathbox) revised
11-Jun-14 pco0      [--same--]  (in JM's mathbox) revised
11-Jun-14 pcocn     [--same--]  (in JM's mathbox) revised
11-Jun-14 pcoval2   [--same--]  (in JM's mathbox) revised
11-Jun-14 pcoval1   [--same--]  (in JM's mathbox) revised
11-Jun-14 pcoval    [--same--]  (in JM's mathbox) revised
11-Jun-14 pcofval   [--same--]  (in JM's mathbox) revised
11-Jun-14 df-pco    [--same--]  (in JM's mathbox) revised
11-Jun-14 reparpht  [--same--]  (in JM's mathbox) revised
11-Jun-14 ---       ---         reparphtlem1 - reparphtlem2 deleted
11-Jun-14 isphtpc2  ---         (in JM's mathbox) deleted; see isphtpc
11-Jun-14 isphtpc   [--same--]  (in JM's mathbox) revised
11-Jun-14 df-phtpc  [--same--]  (in JM's mathbox) revised
11-Jun-14 phtpyco   [--same--]  (in JM's mathbox) revised
11-Jun-14 ---       ---         phtpycolem1 - phtpycolem5 deleted
11-Jun-14 phtpycom  [--same--]  (in JM's mathbox) revised
11-Jun-14 phtpyid   [--same--]  (in JM's mathbox) revised
11-Jun-14 isphtpy   [--same--]  (in JM's mathbox) revised
11-Jun-14 phtpyval  [--same--]  (in JM's mathbox) revised
11-Jun-14 phtpyfval [--same--]  (in JM's mathbox) revised
11-Jun-14 df-phtpy  [--same--]  (in JM's mathbox) revised
11-Jun-14 ismrer1   [--same--]  (in JM's mathbox) revised
11-Jun-14 rrnval    [--same--]  (in JM's mathbox) revised
11-Jun-14 df-rrn    [--same--]  (in JM's mathbox) revised
11-Jun-14 bfp       [--same--]  (in JM's mathbox) revised
11-Jun-14 ---       ---         bfplem1 - bfplem11 deleted
11-Jun-14 heiborlem8 [--same--] (in JM's mathbox) revised
11-Jun-14 heibor1lem [--same--] (in JM's mathbox) revised
11-Jun-14 mulcntx   mulcn       moved from JM's mathbox to main set.mm
11-Jun-14 subcntx   subcn       moved from JM's mathbox to main set.mm
11-Jun-14 addcntx   addcn       moved from JM's mathbox to main set.mm
11-Jun-14 txcc      [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 txmet     [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 cnoprab2c ---         (in JM's mathbox) deleted; see cnmpt2nd,cnmpt21
11-Jun-14 cnoprab1c ---         (in JM's mathbox) deleted; see cnmpt1st,cnmpt21
11-Jun-14 cnoprab2  ---         (in JM's mathbox) deleted; see cnmpt2nd,cnmpt21
11-Jun-14 cnoprab1  ---         (in JM's mathbox) deleted; see cnmpt1st,cnmpt21
11-Jun-14 cnoproprabcoc ---     (in JM's mathbox) deleted; see cnmpt22f
11-Jun-14 cnoproprabco ---      (in JM's mathbox) deleted; see cnmpt22f
11-Jun-14 cnopropabcoc ---      (in JM's mathbox) deleted; see cnmpt12f
11-Jun-14 cnopropabco ---       (in JM's mathbox) deleted; see cnmpt12f
11-Jun-14 cnresoprab2 ---       (in JM's mathbox) deleted; see cnmpt2res
11-Jun-14 cnresoprab ---        (in JM's mathbox) deleted; see cnmpt2res
11-Jun-14 txsubsp   [--same--]  moved from JM's mathbox to main set.mm
11-Jun-14 txcnoprab ---         (in JM's mathbox) deleted; see cnmpt2t
11-Jun-14 lmtlm     ---         (in JM's mathbox) deleted
11-Jun-14 tlmconst  ---         (in JM's mathbox) deleted; see lmconst
11-Jun-14 haustlmu  ---         (in JM's mathbox) deleted; see lmmo
11-Jun-14 tlmbrf    ---         (in JM's mathbox) deleted; see lmbrf
11-Jun-14 tlmbr     ---         (in JM's mathbox) deleted; see lmbr
11-Jun-14 tlmval    ---         (in JM's mathbox) deleted; see lmfval
11-Jun-14 df-tlm    ---         (in JM's mathbox) deleted; see df-lm
11-Jun-14 ctlm      ---         (in JM's mathbox) deleted
11-Jun-14 hmeocnv   ---         (in JM's mathbox) deleted; see cnvhmpha
11-Jun-14 hmeocn    ---         (in JM's mathbox) deleted; see hmeobc
11-Jun-14 ishomeo2  ishomeo     moved from JM's mathbox to main set.mm
11-Jun-14 piececn   cnmpt2pc    (in JM's mathbox) revised
11-Jun-14 cnres     ---         (in JM's mathbox) deleted; see cnsubsp
11-Jun-14 cnimass   ---         (in JM's mathbox) deleted; see cnsubsp2
11-Jun-14 cncfco    [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 metdcn    [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 caures    [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 caushft   [--same--]  (in JM's mathbox) revised
11-Jun-14 lmclim2   [--same--]  (in JM's mathbox) revised
11-Jun-14 geomcau   [--same--]  (in JM's mathbox) revised
11-Jun-14 mettrifi2 ---         (in JM's mathbox) deleted; see mettrifi
11-Jun-14 mettrifi  [--same--]  (in JM's mathbox) revised
11-Jun-14 csbrni    [--same--]  (in JM's mathbox) revised
11-Jun-14 trirni    ---         (in JM's mathbox) deleted; see isumshft
11-Jun-14 csbrni    csbrn       (in JM's mathbox) revised
11-Jun-14 fsumlt1   fsumge1     moved from JM's mathbox to main set.mm; revised
11-Jun-14 isumshft2 ---         (in JM's mathbox) deleted; see isumshft
11-Jun-14 iserzshft2 ---        (in JM's mathbox) deleted; see isershft
11-Jun-14 isumclf   ---         (in JM's mathbox) deleted; see isumcl
11-Jun-14 fsumleisum ---        (in JM's mathbox) deleted; see isumless
11-Jun-14 fsumleisumi ---       (in JM's mathbox) deleted; see isumless
11-Jun-14 fsumleisumii ---      (in JM's mathbox) deleted; see isumless
11-Jun-14 fsumltisum isumltss   moved from JM's mathbox to main set.mm; revised
11-Jun-14 fsumltisumi ---       (in JM's mathbox) deleted; see isumltss
11-Jun-14 fsumltisumii ---      (in JM's mathbox) deleted; see isumltss
11-Jun-14 fsumlt    [--same--]  moved from JM's mathbox to main set.mm; revised
11-Jun-14 fsum00OLD ---         (in JM's mathbox) deleted
11-Jun-14 seq1eq2   ---         (in JM's mathbox) deleted; see seqfveq
11-Jun-14 sdc       [--same--]  (in JM's mathbox) revised
11-Jun-14 sdclem2   [--same--]  (in JM's mathbox) revised
11-Jun-14 sdclem1   [--same--]  (in JM's mathbox) revised
11-Jun-14 seq1seqzgOLD ---      (in JM's mathbox) deleted
11-Jun-14 seqzp1gOLD ---        (in JM's mathbox) deleted
11-Jun-14 seqz1gOLD ---         (in JM's mathbox) deleted
11-Jun-14 seq1p1gOLD ---        (in JM's mathbox) deleted
11-Jun-14 seq11gOLD ---         (in JM's mathbox) deleted
11-Jun-14 divexp    expdiv      moved from JM's mathbox to main set.mm; revised
11-Jun-14 acdc5g    ---         (in JM's mathbox) deleted; see axdc4uz
11-Jun-14 acdc3g    ---         (in JM's mathbox) deleted; see axdc3
11-Jun-14 acdcg     ---         (in JM's mathbox) deleted; see axdc2
11-Jun-14 hbixp1    [--same--]  moved from JM's mathbox to main set.mm
11-Jun-14 cbvixpv   [--same--]  moved from JM's mathbox to main set.mm
11-Jun-14 cbvixp    [--same--]  moved from JM's mathbox to main set.mm
11-Jun-14 cnsubsp2  [--same--]  moved from JGH's mathbox to main set.mm
11-Jun-14 cnsubsp   [--same--]  moved from JGH's mathbox to main set.mm
11-Jun-14 avgle2    [--same--]  moved from JGH's mathbox to main set.mm
11-Jun-14 cntrsetlem ---        (in FL's mathbox) deleted
11-Jun-14 topgrpsubcnlem ---    (in FL's mathbox) deleted
11-Jun-14 exopcopn  [--same--]  (in FL's mathbox) revised
11-Jun-14 ttcn2     ---         (in FL's mathbox) deleted; see cnmpt1t
11-Jun-14 ttcn      ---         (in FL's mathbox) deleted; see cnmpt1t
11-Jun-14 eltpt     [--same--]  moved from FL's mathbox to main set.mm
11-Jun-14 eqindhome [--same--]  (in FL's mathbox) revised
11-Jun-14 hmeogrp   [--same--]  (in FL's mathbox) revised
11-Jun-14 rnhmpha   [--same--]  (in FL's mathbox) revised
11-Jun-14 dmhmpha   [--same--]  (in FL's mathbox) revised
11-Jun-14 cnvhmphb  ---         (in FL's mathbox) deleted; see cnvhmph
11-Jun-14 df-mmat   [--same--]  (in FL's mathbox) revised
11-Jun-14 df-expsg  [--same--]  (in FL's mathbox) revised
11-Jun-14 seqzp2    [--same--]  (in FL's mathbox) revised
11-Jun-14 isppm     [--same--]  (in FL's mathbox) revised
11-Jun-14 fprod1ib  fprod2      (in FL's mathbox) revised
11-Jun-14 fprod1i2  ---         (in FL's mathbox) deleted; see fprod1i
11-Jun-14 relsumprd fsumprd     (in FL's mathbox) revised
11-Jun-14 fprodp1s1 ---         (in FL's mathbox) deleted; see fprodp1s
11-Jun-14 fprodp1s1 ---         (in FL's mathbox) deleted; see fprodp1s
11-Jun-14 fprodp1s  [--same--]  (in FL's mathbox) revised
11-Jun-14 fprodp1slem ---       (in FL's mathbox) deleted
11-Jun-14 fprodp1fi [--same--]  (in FL's mathbox) revised
11-Jun-14 fprod1s1  ---         (in FL's mathbox) deleted; see fprod1s
11-Jun-14 fprod1s2  fprod1s     (in FL's mathbox) revised
11-Jun-14 fprod1slem ---        (in FL's mathbox) deleted
11-Jun-14 fprod1fi  [--same--]  (in FL's mathbox) revised
11-Jun-14 fprodp1i  [--same--]  (in FL's mathbox) revised
11-Jun-14 fprod1i   [--same--]  (in FL's mathbox) revised
11-Jun-14 fprodserzfi fprodserf (in FL's mathbox) revised
11-Jun-14 fprodserz fprodser    (in FL's mathbox) revised
11-Jun-14 dffprod   [--same--]  (in FL's mathbox) revised
11-Jun-14 prodeqfv  [--same--]  (in FL's mathbox) revised
11-Jun-14 prodeq3d  [--same--]  (in FL's mathbox) revised
11-Jun-14 prodeq123d [--same--] (in FL's mathbox) revised
11-Jun-14 prodeq123i [--same--] (in FL's mathbox) revised
11-Jun-14 prodeq3   prodeq2     (in FL's mathbox) (these labels should be
11-Jun-14 prodeq2   prodeq3     (in FL's mathbox)  exchanged at the same time)
11-Jun-14 valproemset prod0     (in FL's mathbox)
11-Jun-14 df-prod2  ---         (in FL's mathbox) deleted; see df-prod
11-Jun-14 df-prod   [--same--]  (in FL's mathbox) revised
11-Jun-14 cprd2     ---         (in FL's mathbox) deleted
11-Jun-14 cprd      [--same--]  (in FL's mathbox) revised
11-Jun-14 seq0p1g   ---         (in FL's mathbox) deleted; see seqp1
11-Jun-14 seq00g    ---         (in FL's mathbox) deleted; see seq1
11-Jun-14 iserzmulc1b ---       (in FL's mathbox) deleted; see isermulc2
11-Jun-14 prjnpl    resixp      moved from FL's mathbox to main set.mm
11-Jun-14 cbicp     [--same--]  (in FL's mathbox) revised
11-Jun-14 cbicplem  ---         (in FL's mathbox) deleted
11-Jun-14 isprj2    [--same--]  (in FL's mathbox) revised
11-Jun-14 isprj1    [--same--]  (in FL's mathbox) revised
11-Jun-14 hbcp      ---         (in FL's mathbox) deleted; see hbixp1
11-Jun-14 valpr     [--same--]  (in FL's mathbox) changed variable names
11-Jun-14 prmapcp3  ---         (in FL's mathbox) deleted; see prmapcp2
11-Jun-14 prmapcp2  [--same--]  (in FL's mathbox) changed variable names
11-Jun-14 ispr1     [--same--]  (in FL's mathbox) revised
11-Jun-14 df-prj    [--same--]  (in FL's mathbox) revised
11-Jun-14 df-pro    [--same--]  (in FL's mathbox) revised
11-Jun-14 dffn5b    ---         (in FL's mathbox) deleted; see dffn5v
11-Jun-14 fopabco3  fmptco      moved from FL's mathbox to main set.mm
11-Jun-14 riemtn    ---         (in FL's mathbox) deleted; see mptresid
11-Jun-14 riecb     ---         (in FL's mathbox) deleted; see opabresid
11-Jun-14 cmpran    ---         (in FL's mathbox) deleted; see rnmpt
11-Jun-14 fopab2a   ---         (in FL's mathbox) deleted; see fmpt
11-Jun-14 fopab2ga  ---         (in FL's mathbox) deleted; see fnmpt
11-Jun-14 cmpbvb    ---         (in FL's mathbox) deleted; see cbvmptv
11-Jun-14 fmptb     ---         (in FL's mathbox) deleted; see fmpt2
11-Jun-14 seq0clg   ---         (in FL's mathbox) deleted; see seqcl
11-Jun-14 bpolydiflem2 ---      (in SF's mathbox) deleted
11-Jun-14 bpolydiflem1 ---      (in SF's mathbox) deleted
11-Jun-14 bernpolycl bpolycl    (in SF's mathbox)
11-Jun-14 bernpoly1 bpoly1      (in SF's mathbox)
11-Jun-14 bernpolynn ---        (in SF's mathbox) deleted; see bpolyval
11-Jun-14 bernpoly0 bpoly0      (in SF's mathbox)
11-Jun-14 bernpolyval bpolyval  (in SF's mathbox) revised
11-Jun-14 df-bernpoly df-bpoly  (in SF's mathbox) revised
11-Jun-14 cbernpoly cbp         (in SF's mathbox)
11-Jun-14 fsumsq    ---         (in SF's mathbox) deleted; see fsumge0
11-Jun-14 trirecip  [--same--]  (in SF's mathbox) revised
11-Jun-14 trireciplem [--same--] (in SF's mathbox) revised
11-Jun-14 arisum4   ---         (in SF's mathbox) deleted; see arisum
11-Jun-14 arisum3   ---         (in SF's mathbox) deleted; see arisum
11-Jun-14 arisum2   ---         (in SF's mathbox) deleted; see arisum
11-Jun-14 arisum    [--same--]  moved from SF's mathbox to main set.mm; revised
11-Jun-14 binomp1m1 [--same--]  moved from SF's mathbox to main set.mm
11-Jun-14 binom21   [--same--]  moved from SF's mathbox to main set.mm
11-Jun-14 binom1dif [--same--]  moved from SF's mathbox to main set.mm
11-Jun-14 binom1    ---         (in SF's mathbox) deleted; see binom1p
11-Jun-14 binom     [--same--]  moved from SF's mathbox to main set.mm
11-Jun-14 bcsum     ---         (in SF's mathbox) deleted; see binom11
11-Jun-14 fsumtelescope2 fsumtscop moved from SF's mathbox to main set.mm
11-Jun-14 fsumtelescope ---     (in SF's mathbox) deleted; see fsumtscop
11-Jun-14 fsumsplitlast ---     (in SF's mathbox) deleted; see fsump1
11-Jun-14 fseq1cl   ---         (in PC's mathbox) deleted; see seqcl
11-Jun-14 seq1resval2 ---       (in PC's mathbox) deleted; see seqfveq
11-Jun-14 seq1resval ---        (in PC's mathbox) deleted; see seqfveq
11-Jun-14 seqzresval2 ---       (in PC's mathbox) deleted; see seqfveq
11-Jun-14 ---       ---         circumlem1 - circumlem3 deleted
11-Jun-14 sindivcvg sinccvg     (in PC's mathbox)
11-Jun-14 ---       ---         sindivcvglem1 - sindivcvglem8 deleted
11-Jun-14 efexple   [--same--]  (in MC's mathbox) revised
11-Jun-14 bclbnd2   bclbnd      (in MC's mathbox)
11-Jun-14 bclbnd    ---         (in MC's mathbox) deleted
11-Jun-14 elpjrnch  elpjch
11-Jun-14 elpjch    [--same--]  revised
11-Jun-14 pjhmopidm [--same--]  revised
11-Jun-14 hmopidmpj [--same--]  revised
11-Jun-14 hmopidmch [--same--]  revised
11-Jun-14 hmopidmpji [--same--] revised
11-Jun-14 hmopidmchi [--same--] revised
11-Jun-14 hmopidmchlem ---      deleted
11-Jun-14 opsqrlem6 [--same--]  revised
11-Jun-14 opsqrlem5 [--same--]  revised
11-Jun-14 opsqrlem4 [--same--]  revised
11-Jun-14 opsqrlem3 [--same--]  revised
11-Jun-14 opsqrlem2 [--same--]  revised
11-Jun-14 chso      pjth
11-Jun-14 ---       ---         osumlem1 - osumlem8 deleted
11-Jun-14 pjtheu2i  pjtheu2     revised
11-Jun-14 pjeq2     ---         deleted; see pjeq
11-Jun-14 pjtheui   ---         deleted; see pjtheu
11-Jun-14 pjth      [--same--]  revised
11-Jun-14 pjthi     ---         deleted; see pjth
11-Jun-14 ---       ---         pjthlem3 - pjthlem14 deleted
11-Jun-14 pjthlem2  [--same--]  revised
11-Jun-14 pjthlem1  [--same--]  revised
11-Jun-14 projlemHIL ---        deleted
11-Jun-14 projlem   ---         deleted
11-Jun-14 ---       ---         projlem1 - projlem31 deleted
11-Jun-14 occli     ---         deleted; see occl
11-Jun-14 ---       ---         occllem1 - occllem8 deleted
11-Jun-14 hlimeui   [--same--]  revised
11-Jun-14 hlimreui  [--same--]  revised
11-Jun-14 hlimuniii ---         deleted; see hlimunii
11-Jun-14 hlimcauii ---         deleted; see hlimcaui
11-Jun-14 hilcmpl   [--same--]  revised
11-Jun-14 hhcmpl    [--same--]  revised
11-Jun-14 hhlm      [--same--]  revised
11-Jun-14 hilcau    ---         deleted; see hhcau
11-Jun-14 hillim    ---         deleted; see hhlm
11-Jun-14 hlim2     [--same--]  revised
11-Jun-14 hlimconvi [--same--]  revised
11-Jun-14 hlimi     [--same--]  revised
11-Jun-14 hcau2     ---         deleted; see hcau
11-Jun-14 seq1hcau  [--same--]  revised
11-Jun-14 hcaucvg   [--same--]  revised
11-Jun-14 hcau      [--same--]  revised
11-Jun-14 h2hlm     [--same--]  revised
11-Jun-14 df-hcau   [--same--]  revised
11-Jun-14 df-hlim   [--same--]  revised
11-Jun-14 hmph      [--same--]  revised
11-Jun-14 hmeobc    [--same--]  revised
11-Jun-14 ishomeo   [--same--]  revised
11-Jun-14 df-hmph   [--same--]  revised
11-Jun-14 relogexp  [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 reexplog  [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 explog    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 pilog     logm1       revised
11-Jun-14 resslogrn relogrn     revised
11-Jun-14 logrn     [--same--]  revised
11-Jun-14 df-log    [--same--]  revised
11-Jun-14 eff1o     [--same--]  revised
11-Jun-14 eff1oi    eff1olem    revised
11-Jun-14 effoi     ---         deleted; see eff1o
11-Jun-14 eff1i     ---         deleted; see eff1o
11-Jun-14 eff1lem   ---         deleted
11-Jun-14 shftefif1o ---        deleted; see efif1o
11-Jun-14 shftefif1olem ---     deleted
11-Jun-14 circgrp   [--same--]  revised
11-Jun-14 efielcirc ---         deleted
11-Jun-14 efif1o    [--same--]  revised
11-Jun-14 efif1     ---         deleted; see efif1o
11-Jun-14 ---       ---         efif1lem1 - efif1lem7 deleted
11-Jun-14 efifo     ---         deleted; see efif1o
11-Jun-14 ---       ---         efifolem1 - efifolem7 deleted
11-Jun-14 efif      ---         deleted; see efif1o
11-Jun-14 efghgrpi  efghgrp     revised
11-Jun-14 efghgrpilem ---       deleted
11-Jun-14 efgh      [--same--]  revised
11-Jun-14 cosh111   cos11       revised
11-Jun-14 ---       ---         cosh111lem1 - cosh111lem3 deleted
11-Jun-14 sineq0re  ---         deleted; see sineq0
11-Jun-14 sineq0OLD ---         deleted; see sineq0
11-Jun-14 sineq0    [--same--]  revised
11-Jun-14 sinq12gt0t sinq12gt0
11-Jun-14 sinperlem2 ---        deleted
11-Jun-14 sinperlem1 ---        deleted
11-Jun-14 pilem4    ---         deleted; see pilem3
11-Jun-14 pilem3    [--same--]  revised
11-Jun-14 pilem2    [--same--]  revised
11-Jun-14 pilem1    [--same--]  revised
11-Jun-14 cosco     ---         deleted
11-Jun-14 sinco     ---         deleted
11-Jun-14 sincnlem  ---         deleted
11-Jun-14 sincolem  ---         deleted
11-Jun-14 hlcompl   [--same--]  revised
11-Jun-14 minvecex2 ---         deleted; see minvec
11-Jun-14 minveclem39 ---       deleted
11-Jun-14 minvecle  ---         deleted; see minvec
11-Jun-14 minvecdist ---        deleted; see minvec
11-Jun-14 minveccl  ---         deleted; see minvec
11-Jun-14 minveceu   minvec     revised
11-Jun-14 ---       ---         minveclem35 - minveclem38 deleted
11-Jun-14 minvecex  ---         deleted; see minvec
11-Jun-14 ---       ---         minveclem10 - minveclem33 deleted
11-Jun-14 minvec34   ---        deleted
11-Jun-14 minveclem7 [--same--] revised
11-Jun-14 minveclem6 [--same--] revised
11-Jun-14 minveclem5 [--same--] revised
11-Jun-14 minveclem4 [--same--] revised
11-Jun-14 minveclem3 [--same--] revised
11-Jun-14 minveclem2 [--same--] revised
11-Jun-14 minveclem1 [--same--] revised
11-Jun-14 ipasslem7 [--same--]  revised
11-Jun-14 ipasslem6 ---         deleted
11-Jun-14 ip1cni    ---         deleted; see ipcn
11-Jun-14 ---       ---         ip1cnilem1 - ip1cnilem6 deleted
11-Jun-14 ipval2lem1 ---        deleted
11-Jun-14 sm1cni    ---         deleted; see smcn
11-Jun-14 sm1cnilem ---         deleted
11-Jun-14 va1cn     ---         deleted; see vacn and cnmpt12
11-Jun-14 va1cnlem  ---         deleted
11-Jun-14 vacn      [--same--]  revised
11-Jun-14 ---       ---         vacnlem1 - vacnlem6 deleted
11-Jun-14 nvlmle    [--same--]  revised
11-Jun-14 nvlmcl    [--same--]  revised
11-Jun-14 ghsubgi   ghsubg      revised
11-Jun-14 ghgrpi    ghgrp       revised
11-Jun-14 ---       ---         ghgrpilem1 - ghgrpilem4 deleted
11-Jun-14 bcthlem3  [--same--]  revised
11-Jun-14 cmsss     [--same--]  revised
11-Jun-14 lmcau     [--same--]  revised
11-Jun-14 iscms2i   iscms3i     revised
11-Jun-14 iscms2    iscms3      revised
11-Jun-14 ---       ---         iscms2lem3 - iscms2lem5 deleted
11-Jun-14 fsumcn    [--same--]  revised
11-Jun-14 fsumcnlem ---         deleted
11-Jun-14 mulcn     [--same--]  revised
11-Jun-14 subcn     [--same--]  revised
11-Jun-14 addcn     [--same--]  revised
11-Jun-14 bopcn     ---         deleted; see metcn4
11-Jun-14 ---       ---         bopcnlem1 - bopcnlem4 deleted
11-Jun-14 opr1scn   ---         deleted; see cnmpt12f and cnmptid, cnmptc
11-Jun-14 opr2cn    ---         deleted; see cnmpt12f and cnmptc
11-Jun-14 opr1cn    ---         deleted; see cnmpt12f and cnmptc
11-Jun-14 oprcn     ---         deleted; see cnmpt12f
11-Jun-14 xpcn      ---         deleted; see cnmpt1t
11-Jun-14 xplm      ---         deleted; see txlm
11-Jun-14 xplmi2    ---         deleted; see txlm
11-Jun-14 xplmi     ---         deleted; see txlm
11-Jun-14 metcnp4   [--same--]  revised
11-Jun-14 metcnp4lem2 ---       deleted
11-Jun-14 metcnp4lem1 ---       deleted
11-Jun-14 caublcls  [--same--]  revised
11-Jun-14 metcld    [--same--]  revised
11-Jun-14 metcls    ---         deleted; see metelcls
11-Jun-14 metelcls  [--same--]  revised
11-Jun-14 metcls2   ---         deleted; see lmcls
11-Jun-14 lmclimnn  lmclimf     revised
11-Jun-14 lmclim    [--same--]  revised
11-Jun-14 lmle      [--same--]  revised
11-Jun-14 lmfex     ---         deleted
11-Jun-14 lmfexlem3 ---         deleted
11-Jun-14 lmfexlem2 ---         deleted
11-Jun-14 lmfexlem1 ---         deleted
11-Jun-14 caussi    [--same--]  revised
11-Jun-14 lmss      [--same--]  revised
11-Jun-14 lmsslem   ---         deleted
11-Jun-14 lmuni     lmmo        revised
11-Jun-14 caufss    caufpm      revised
11-Jun-14 lmcl      [--same--]  revised
11-Jun-14 lmfss     [--same--]  revised
11-Jun-14 cmscvg    [--same--]  revised
11-Jun-14 iscms     [--same--]  revised
11-Jun-14 iscaunns  ---         deleted; see iscauf
11-Jun-14 lmcvgnns  ---         deleted; see lmmcvg
11-Jun-14 lmbrnns   ---         deleted; see iscauf
11-Jun-14 iscau5    ---         deleted; see iscauf
11-Jun-14 iscau4    [--same--]  revised
11-Jun-14 iscauf    [--same--]  revised
11-Jun-14 iscau3    [--same--]  revised
11-Jun-14 iscau2    [--same--]  revised
11-Jun-14 iscau     [--same--]  revised
11-Jun-14 lmnn      [--same--]  revised
11-Jun-14 lmconst   [--same--]  revised
11-Jun-14 lmcvg2    ---         deleted; see lmcvg
11-Jun-14 lmcvg     [--same--]  revised
11-Jun-14 lmbrf2    ---         deleted; see lmbrf
11-Jun-14 lmbrf     [--same--]  revised
11-Jun-14 lmbr2     [--same--]  revised
11-Jun-14 lmbr      [--same--]  revised
11-Jun-14 lmrel     [--same--]  revised
11-Jun-14 caufval   [--same--]  revised
11-Jun-14 lmfval    [--same--]  revised
11-Jun-14 df-cmet   [--same--]  revised
11-Jun-14 df-cau    [--same--]  revised
11-Jun-14 df-lm     [--same--]  revised
11-Jun-14 clm       [--same--]  revised
11-Jun-14 dscmet    [--same--]  revised
11-Jun-14 cn2met    [--same--]  revised
11-Jun-14 metdnsconst ---       deleted; see dnsconst
11-Jun-14 metxp     [--same--]  revised
11-Jun-14 metxplem4 [--same--]  revised
11-Jun-14 metxpcl   [--same--]  revised
11-Jun-14 metxpfval [--same--]  revised
11-Jun-14 metxptval [--same--]  revised
11-Jun-14 metxpdval [--same--]  revised
11-Jun-14 2txcn     ---         deleted; see cnmpt2t
11-Jun-14 txcnopab  txcnmpt     revised
11-Jun-14 txcn      [--same--]  revised
11-Jun-14 tx2cn     [--same--]  revised
11-Jun-14 tx1cn     [--same--]  revised
11-Jun-14 txcld     [--same--]  revised
11-Jun-14 txopn     [--same--]  revised
11-Jun-14 txuni     [--same--]  revised
11-Jun-14 txtop     [--same--]  revised
11-Jun-14 subspuni    [--same--]  revised
11-Jun-14 1arith2   [--same--]  revised
11-Jun-14 1arith    [--same--]  revised
11-Jun-14 ---       ---         1arithlem4 - 1arithlem31 deleted
11-Jun-14 1arithlem4 [--same--] revised
11-Jun-14 1arithlem3 [--same--] revised
11-Jun-14 1arithlem2 [--same--] revised
11-Jun-14 1arithlem1 [--same--] revised
11-Jun-14 ---       ---         mulgcdlem1 - mulgcdlem7 deleted
11-Jun-14 eucalg    [--same--]  revised
11-Jun-14 eucalgcvga [--same--] revised
11-Jun-14 eucalglt  [--same--]  revised
11-Jun-14 eucalginv [--same--]  revised
11-Jun-14 eucalgf   [--same--]  revised
11-Jun-14 eucalgval2 [--same--] revised
11-Jun-14 eucalgval [--same--]  revised
11-Jun-14 algfx     [--same--]  revised
11-Jun-14 algcvga   [--same--]  revised
11-Jun-14 algcvg    [--same--]  revised
11-Jun-14 alginv    [--same--]  revised
11-Jun-14 algrp1    [--same--]  revised
11-Jun-14 algrp1lem ---         deleted
11-Jun-14 algr0     [--same--]  revised
11-Jun-14 algrf     [--same--]  revised
11-Jun-14 ruclem39  ruclem13
11-Jun-14 ---       ---         ruclem13 - ruclem38 deleted
11-Jun-14 ruclem12  [--same--]  revised
11-Jun-14 ruclem11  [--same--]  revised
11-Jun-14 ruclem10  [--same--]  revised
11-Jun-14 ruclem9   [--same--]  revised
11-Jun-14 ruclem8   [--same--]  revised
11-Jun-14 ruclem7   [--same--]  revised
11-Jun-14 ruclem6   [--same--]  revised
11-Jun-14 ruclem5   [--same--]  revised
11-Jun-14 ruclem4   [--same--]  revised
11-Jun-14 ruclem3   [--same--]  revised
11-Jun-14 ruclem2   [--same--]  revised
11-Jun-14 ruclem1   [--same--]  revised
11-Jun-14 rpnnen2lem11 [--same--] revised
11-Jun-14 rpnnen2lem10 [--same--] revised
11-Jun-14 rpnnen2lem9 [--same--] revised
11-Jun-14 rpnnen2lem8 [--same--] revised
11-Jun-14 rpnnen2lem7 [--same--] revised
11-Jun-14 rpnnen2lem6 [--same--] revised
11-Jun-14 rpnnen2lem5 [--same--] revised
11-Jun-14 rpnnen2lem4 [--same--] revised
11-Jun-14 rpnnen2lem3 [--same--] revised
11-Jun-14 rpnnen2lem2 [--same--] revised
11-Jun-14 rpnnen2lem1 [--same--] revised
11-Jun-14 acdcALT   ---         deleted; see axdc2
11-Jun-14 acdc      ---         deleted; see axdc2
11-Jun-14 acdclem   ---         deleted
11-Jun-14 acdc5     ---         deleted; see axdc4
11-Jun-14 acdc5lem2 ---         deleted
11-Jun-14 acdc5lem1 ---         deleted
11-Jun-14 acdc2     ---         deleted; see axdc4
11-Jun-14 acdc2lem2 ---         deleted
11-Jun-14 acdc2lem1 ---         deleted
11-Jun-14 acdc4lem1 ---         deleted
11-Jun-14 acdc3     ---         deleted; see axdc3
11-Jun-14 acdc3lem  ---         deleted
11-Jun-14 demoivre  ---         generalized antecedent to N e. ZZ
11-Jun-14 ---       ---         cos01bndlem2 - cos01bndlem3 deleted
11-Jun-14 ---       ---         sin01bndlem1 - sin01bndlem3 deleted
11-Jun-14 cos2OLD   ---         deleted; see cos2t
11-Jun-14 subcos    [--same--]  revised
11-Jun-14 cosaddi   ---         deleted; see cosadd
11-Jun-14 sinaddi   ---         deleted; see sinadd
11-Jun-14 sin0ALT   ---         deleted; see sin0
11-Jun-14 efi4p     [--same--]  revised
11-Jun-14 reeff1olem2 ---       deleted
11-Jun-14 reeff1olem1 ---       deleted
11-Jun-14 ---       ---         efcnlem1 - efcnlem1 deleted
11-Jun-14 efm1legeo ---         deleted
11-Jun-14 efm1legeoi ---        deleted
11-Jun-14 eflegeo   [--same--]  revised
11-Jun-14 eflegeoi  ---         deleted
11-Jun-14 eflegeolem2 ---       deleted
11-Jun-14 eflegeolem1 ---       deleted
11-Jun-14 absefm1lei ---        deleted
11-Jun-14 efm1limi  ---         deleted
11-Jun-14 efltbi    ---         deleted; see eflt
11-Jun-14 eflti     [--same--]  revised
11-Jun-14 efgt0i    ---         deleted; see efgt0
11-Jun-14 efgt0i    ---         deleted; see efgt0
11-Jun-14 efgt1pi   efgt1p      revised
11-Jun-14 efgt1i    efgt1       revised
11-Jun-14 efge1pi   ---         deleted; see efgt1p
11-Jun-14 efge1i    ---         deleted; see efgt1
11-Jun-14 ef4p      [--same--]  revised
11-Jun-14 ef4pi     ---         deleted; see ef4p
11-Jun-14 eft0vali  eft0val     revised
11-Jun-14 effsumlei effsumlt    revised
11-Jun-14 efsepi    efsep       revised
11-Jun-14 abspef01tlubi ---     deleted; see eftlub
11-Jun-14 elt3OLD   ---         deleted; see egt2lt3
11-Jun-14 egt2OLD   ---         deleted; see egt2lt3
11-Jun-14 ---       ---         eirrlem1 - eirrlem5 deleted
11-Jun-14 absef01tlubi eftlub   revised
11-Jun-14 absef01tllem ---      deleted
11-Jun-14 ef01tlubi ---         deleted; see eftlub
11-Jun-14 ef01tllem2OLD ---     deleted
11-Jun-14 ef01tllem2 ---        deleted
11-Jun-14 ef01tllem1 ---        deleted
11-Jun-14 ef1tlubi  ---         deleted; see eftlub
11-Jun-14 ef1tllem  ---         deleted
11-Jun-14 reeftlcl  [--same--]  revised
11-Jun-14 eftlcl    [--same--]  revised
11-Jun-14 eftlex    eftlcvg     revised
11-Jun-14 eftlexiOLD ---        deleted
11-Jun-14 eftlubcl  ---         deleted
11-Jun-14 eftabsi   eftabs      revised
11-Jun-14 efnn0val  efzval      generalized antecedent to N e. ZZ
11-Jun-14 efexp     [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 efaddi    ---         deleted; see efadd
11-Jun-14 ---       ---         efaddlem1 - efaddlem28 deleted
11-Jun-14 efcji     ---         deleted; see efcj
11-Jun-14 ege2le3   [--same--]  revised; see egt2lt3
11-Jun-14 ele3      ---         deleted; see egt2lt3
11-Jun-14 ege2      ---         deleted; see egt2lt3
11-Jun-14 ereALT    ---         deleted; see ere
11-Jun-14 ege2le3lem2 ---       deleted
11-Jun-14 ege2lem2  ---         deleted
11-Jun-14 ege2le3lem1 ---       deleted
11-Jun-14 ele3lem   ---         deleted
11-Jun-14 ---       ---         erelem1 - erelem7 deleted
11-Jun-14 reefcli   ---         deleted; see reefcl
11-Jun-14 eftval    [--same--]  revised
11-Jun-14 efcvgfsum [--same--]  revised
11-Jun-14 efcvg     [--same--]  revised
11-Jun-14 efseq0ex  ---         deleted; see efcllem
11-Jun-14 ef0lem    [--same--]  revised
11-Jun-14 dfef2i    ---         deleted
11-Jun-14 efseq1ex  ---         deleted; see efcllem
11-Jun-14 efcltlem2 ---         deleted; see ef0lem
11-Jun-14 efcltlem1 ---         deleted; see efcllem
11-Jun-14 df-pi     [--same--]  revised
11-Jun-14 df-tan    [--same--]  revised
11-Jun-14 dsupivthi ivth2       revised
11-Jun-14 dsupivthlem ---       deleted
11-Jun-14 isupivthi ivth        revised
11-Jun-14 ---       ---         ivthlem1 - ivthlem9 deleted
11-Jun-14 divccncf  [--same--]  revised
11-Jun-14 mulc1cncf [--same--]  revised
11-Jun-14 abscncflem ---        deleted
11-Jun-14 negfcncfi negfcncf    revised
11-Jun-14 fsum0diag4 ---        deleted; see fsum0diag
11-Jun-14 fsum0diag3 ---        deleted; see fsum0diag
11-Jun-14 fsum0diag2 ---        deleted; see fsum0diag
11-Jun-14 fsum0diag [--same--]  revised
11-Jun-14 fsum0diaglem2 ---     deleted
11-Jun-14 fsum0diaglem1 ---     deleted
11-Jun-14 cvgrati   cvgrat      revised
11-Jun-14 ---       ---         cvgratlem1 - cvgratlem5 deleted
11-Jun-14 ---       ---         cvgratlem1ALT - cvgratlem3ALT deleted
11-Jun-14 geosum2i  ---         deleted; see geoser
11-Jun-14 geosumi   ---         deleted; see geoser
11-Jun-14 georeclim [--same--]  revised
11-Jun-14 geolim1   ---         deleted; see geolim2
11-Jun-14 geolim1i  ---         deleted; see geolim2
11-Jun-14 geolim    [--same--]  revised
11-Jun-14 geolimi   ---         deleted; see geolim
11-Jun-14 geolimilem ---        deleted
11-Jun-14 geoseri   geoser      revised
11-Jun-14 explecnv  [--same--]  revised
11-Jun-14 expcnv    [--same--]  revised
11-Jun-14 ---       ---         expcnvlem1 - expcnvlem6 deleted
11-Jun-14 arisumi   arisum      revised
11-Jun-14 arisumilem ---        deleted
11-Jun-14 supcvg    [--same--]  revised
11-Jun-14 supcvglem ---         deleted
11-Jun-14 reccnv    divcnv      revised
11-Jun-14 binom11i  binom11
11-Jun-14 binom1pi  binom1p     revised
11-Jun-14 binomi    binom       revised
11-Jun-14 ---       ---         binomlem1 - binomlem6 deleted
11-Jun-14 ser0cji   ---         deleted; see sercj
11-Jun-14 serzcji   sercj       revised
11-Jun-14 serzimi   serim       revised
11-Jun-14 serzrei   serre       revised
11-Jun-14 serzrelem ---         deleted
11-Jun-14 ser1mulci ---         deleted; see seqdistr
11-Jun-14 ser0mulci ---         deleted; see seqdistr
11-Jun-14 serzmulci ---         deleted; see seqdistr
11-Jun-14 serzmulc1 ---         deleted; see seqdistr
11-Jun-14 serzsplit ---         deleted; see seqsplit
11-Jun-14 serzcmp0  serge0      revised
11-Jun-14 serzcmp   sercmp      revised
11-Jun-14 serz0     ser0        revised
11-Jun-14 serz1p    seq1p       revised
11-Jun-14 serzrefi  serfre      revised
11-Jun-14 serzrecl  ---         deleted; see serfre
11-Jun-14 serzcl2   ---         deleted; see serf
11-Jun-14 ser1ser0i ---         deleted; see seq1p
11-Jun-14 ser1cl    ---         deleted; see seqcl
11-Jun-14 ser0cl    ---         deleted; see seqcl
11-Jun-14 serzcl    ---         deleted; see seqcl
11-Jun-14 fsumabs2mul ---       deleted; see fsum2mul and fsumabs
11-Jun-14 fsumabs   [--same--]  revised
11-Jun-14 fsum00    [--same--]  revised
11-Jun-14 fsumcmpndx2 fsumcmpss revised
11-Jun-14 fsumcmp0  fsumge0     revised
11-Jun-14 fsumcmp   [--same--]  revised
11-Jun-14 fsum0     ---         deleted; see sumz
11-Jun-14 fsumconst [--same--]  revised
11-Jun-14 fsum2mul  [--same--]  revised
11-Jun-14 fsumsub   [--same--]  revised
11-Jun-14 fsumneg   [--same--]  revised
11-Jun-14 fsumdivcALT ---       deleted
11-Jun-14 fsumdivc  [--same--]  revised
11-Jun-14 fsummulc2 fsummulc1   revised
11-Jun-14 fsummulc1 fsummulc2   revised
11-Jun-14 fsumshftm [--same--]  revised
11-Jun-14 fsumshft  [--same--]  revised
11-Jun-14 fsumrev2  [--same--]  revised
11-Jun-14 fsumrev   [--same--]  revised
11-Jun-14 fsumcom   [--same--]  revised
11-Jun-14 csbfsum   [--same--]  deleted; see sumeq2sdv
11-Jun-14 csbfsumlem [--same--] deleted
11-Jun-14 fsum4     [--same--]  deleted; see fsump1i
11-Jun-14 fsum3     [--same--]  deleted; see fsump1i
11-Jun-14 fsum2     [--same--]  deleted; see fsump1i
11-Jun-14 fsumadd   [--same--]  revised
11-Jun-14 fsumid2   ---         deleted; see fsumss
11-Jun-14 fsum0split ---        deleted; see fsumsplit
11-Jun-14 fsumsplit [--same--]  revised
11-Jun-14 fsum1p    [--same--]  revised
11-Jun-14 fsum1ps   ---         deleted; see fsum1p
11-Jun-14 fsumrecl  [--same--]  revised
11-Jun-14 fsum0cl   ---         deleted; see fsumcl
11-Jun-14 fsumcl    [--same--]  revised
11-Jun-14 fsumcllem [--same--]  revised; see this or fsumcl2lem
11-Jun-14 fsump1s   ---         deleted; see fsump1
11-Jun-14 fsump1slem ---        deleted
11-Jun-14 fsump1fi  ---         deleted; see fsump1
11-Jun-14 fsum1s2   ---         deleted; see sumsns
11-Jun-14 fsum1s    ---         deleted; see sumsns
11-Jun-14 fsum1slem ---         deleted
11-Jun-14 fsum1fi   ---         deleted; see fsum1
11-Jun-14 fsump1i   fsump1      revised
11-Jun-14 fsum1i    fsum1       revised
11-Jun-14 serzfsum  ---         deleted; see fsumser
11-Jun-14 fsumserz2 ---         deleted; see fsumser
11-Jun-14 fsumser1fi ---        deleted; see fsumser
11-Jun-14 fsumser0fi ---        deleted; see fsumser
11-Jun-14 fsumserzfi ---        deleted; see fsumser
11-Jun-14 fsumserz  fsumser     revised
11-Jun-14 dffsum    ---         deleted; see fsumser
11-Jun-14 sumeqfv   sumfc       revised
11-Jun-14 df-sum    [--same--]  revised
11-Jun-14 cvgcmp3ce cvgcmpce    revised
11-Jun-14 cvgcmp3cetlem2 ---    deleted
11-Jun-14 cvgcmp3cetlem1 ---    deleted
11-Jun-14 cvgcmp3cei ---        deleted; see cvgcmpce
11-Jun-14 cvgcmp3ci ---         deleted; see cvgcmpce
11-Jun-14 cvgcmpubi cvgcmpub    revised
11-Jun-14 cvgcmpi   cvgcmp      revised
11-Jun-14 cvgcmp2ci ---         deleted; see cvgcmp
11-Jun-14 cvgcmp2clemOLD ---    deleted
11-Jun-14 cvgcmp2clem ---       deleted
11-Jun-14 cvgcmp2i  ---         deleted; see cvgcmp
11-Jun-14 cvgcmp2lem ---        deleted
11-Jun-14 iserzabsi iserabs     revised
11-Jun-14 iserzabslem ---       deleted
11-Jun-14 ser1cmp2i ---         deleted
11-Jun-14 ser1cmp2lem ---       deleted
11-Jun-14 ser1cmp0i ---         deleted; see serge0
11-Jun-14 ser1cmpi  ---         deleted; see serle
11-Jun-14 ser1clim0 ---         deleted; see serclim0
11-Jun-14 ser10     ---         deleted; see ser0
11-Jun-14 ser1consti ser1const  revised
11-Jun-14 ser1f0i   ---         deleted; see serf0
11-Jun-14 serzf0i   serf0       revised
11-Jun-14 caucvg3   caucvg      revised
11-Jun-14 caucvg3i  ---         deleted; see caucvg
11-Jun-14 caucvg3lem ---        deleted
11-Jun-14 caucvg2i  caurcvg2    revised
11-Jun-14 caucvg3ai ---         deleted; see caucvg
11-Jun-14 caucvgi   caurcvg     revised
11-Jun-14 ---       ---         caucvglem1 - caucvglem6 deleted
11-Jun-14 climcaui  climcau     revised
11-Jun-14 climsupi  climsup     revised
11-Jun-14 climubi   ---         deleted; see monoord
11-Jun-14 climubii  ---         deleted; see monoord
11-Jun-14 climimi   climim      revised
11-Jun-14 climrei   climre      revised
11-Jun-14 climcji   climcj      revised
11-Jun-14 climabsi  climabs     revised
11-Jun-14 climabslem climcn1lem revised
11-Jun-14 climserzlei climserle revised
11-Jun-14 iserzexi  ---         deleted; see iserex
11-Jun-14 clim2serzi ---        deleted; see clim2ser
11-Jun-14 iserzshfti isershft   revised
11-Jun-14 iserzcmp0 iserge0     revised
11-Jun-14 iserzcmp  isercmp     revised
11-Jun-14 climsqueeze2 [--same--] revised
11-Jun-14 climsqueeze [--same--] revised
11-Jun-14 climcmpc1 climcmpc2   revised
11-Jun-14 climcmp   [--same--]  revised
11-Jun-14 climcmplem ---        deleted
11-Jun-14 iserzmulc1 isermulc2  revised
11-Jun-14 iserzex   iserex      revised
11-Jun-14 clim2serz clim2ser    revised
11-Jun-14 climmulci ---         deleted; see climmulc2
11-Jun-14 climaddci ---         deleted; see climaddc2
11-Jun-14 climsubc2 [--same--]  revised
11-Jun-14 climsub   [--same--]  revised
11-Jun-14 climmulc2 [--same--]  revised
11-Jun-14 climmul   [--same--]  revised
11-Jun-14 ---       ---         climmullem1 - climmullem8 deleted
11-Jun-14 climaddc2 [--same--]  revised
11-Jun-14 climaddc1 [--same--]  revised
11-Jun-14 climadd   [--same--]  revised
11-Jun-14 ---       ---         climaddlem1 - climaddlem3 deleted
11-Jun-14 climabs0i climabs0    revised
11-Jun-14 climge0   [--same--]  revised
11-Jun-14 climfnrcli ---        deleted; see climrecl
11-Jun-14 climrecl  [--same--]  revised
11-Jun-14 serzclim0 serclim0    revised
11-Jun-14 climuz0i  ---         deleted; see climconst2
11-Jun-14 iserzshft2i ---       deleted; see isershft
11-Jun-14 climshft2 [--same--]  revised
11-Jun-14 sershft   isershft
11-Jun-14 climshft  [--same--]  revised
11-Jun-14 climres   [--same--]  revised
11-Jun-14 2climnn0  ---         deleted; see 2clim
11-Jun-14 2climnn   ---         deleted; see 2clim
11-Jun-14 climeq    [--same--]  revised
11-Jun-14 climunii  ---         deleted; see climuni
11-Jun-14 clim0     climz
11-Jun-14 climconst3 ---        deleted; see climconst2
11-Jun-14 climconst2 [--same--] revised
11-Jun-14 climconsti climconst  revised
11-Jun-14 clmfnn    ---         deleted; see clim2c
11-Jun-14 climfnn   ---         deleted; see clim2c
11-Jun-14 clmi2a    ---         deleted; see climi2
11-Jun-14 clm4a     ---         deleted; see clim2c
11-Jun-14 clm0ii    ---         deleted; see climi0
11-Jun-14 clmi2rpi  ---         deleted; see climi2
11-Jun-14 clmi2i    ---         deleted; see climi2
11-Jun-14 clmi1i    ---         deleted; see climi
11-Jun-14 clm0nnsi  ---         deleted; see clim0c
11-Jun-14 clmnnsi   ---         deleted; see clim2c
11-Jun-14 clm0i     ---         deleted; see clim0c
11-Jun-14 clm4fi    ---         deleted; see clim2c
11-Jun-14 clm4lei   ---         deleted; see clim2c
11-Jun-14 clm3i     ---         deleted; see clim2c
11-Jun-14 clm2i     ---         deleted; see clim2
11-Jun-14 clm1i     ---         deleted; see clim2
11-Jun-14 climcl    [--same--]  changed variable names
11-Jun-14 clim      [--same--]  revised
11-Jun-14 ser1absdifi ---       deleted; see fsumabs or seqabs
11-Jun-14 ser1absdiflem ---     deleted
11-Jun-14 cauimi    ---         deleted
11-Jun-14 caurei    ---         deleted
11-Jun-14 caubndi   caubnd      revised
11-Jun-14 cvganuzi  rexanuz2    revised
11-Jun-14 cvganz    rexanuz     revised
11-Jun-14 cvg3i     ---         deleted; see rexuz3
11-Jun-14 cvg2i     ---         deleted
11-Jun-14 cvg1      ---         deleted
11-Jun-14 cvg1i     ---         deleted
11-Jun-14 cau5i     ---         deleted; see rexuz3
11-Jun-14 cau4ii    ---         deleted; see rexuz3
11-Jun-14 cau5ii    ---         deleted; see rexuz3
11-Jun-14 cau3i     cau3        revised
11-Jun-14 cau3iri   ---         deleted; see cau3
11-Jun-14 cau3ii    ---         deleted
11-Jun-14 cau2i     ---         deleted
11-Jun-14 seq1ubi   ---         deleted; see fimaxre3 and suprub
11-Jun-14 seq1ublem ---         deleted
11-Jun-14 seq1bndi  ---         deleted; see fimaxre3
11-Jun-14 sqsqr     resqrth
11-Jun-14 discrlem  discr       revised
11-Jun-14 ---       ---         discrlem1 - discrlem3 deleted
11-Jun-14 expnlbnd2 [--same--]  revised
11-Jun-14 expword2i [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expord2   [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expwordi  [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expord    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expcan    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expordi   [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expm1     [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expsubOLD ---         deleted; see expsub
11-Jun-14 expsub    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 exprecOLD ---         deleted; see exprec
11-Jun-14 exprec    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expgt0    [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expne0i   [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 1exp      [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 rpexpcl   [--same--]  generalized antecedent to N e. ZZ
11-Jun-14 expval    [--same--]  revised
11-Jun-14 df-exp    [--same--]  revised
11-Jun-14 ser0p1i   ---         deleted; see seqp1i
11-Jun-14 ser00i    ---         deleted; see seq1i
11-Jun-14 ser0fi    ---         deleted; see serf
11-Jun-14 ser0cl1i  ---         deleted; see serf
11-Jun-14 serzcl1i  ---         deleted; see serf
11-Jun-14 seq1resval2g ---      deleted; see seqfveq
11-Jun-14 seqzresval2g ---      deleted; see seqfveq
11-Jun-14 seq1alcl  ---         deleted; see seqcl
11-Jun-14 seqzalcl  ---         deleted; see seqcl
11-Jun-14 seq0cl    ---         deleted; see seqf
11-Jun-14 seqzres2  ---         deleted; see seqres
11-Jun-14 seqzres   ---         deleted; see seqres
11-Jun-14 seqzresval ---        deleted; see seqfveq
11-Jun-14 seqzcl    ---         deleted; see seqf
11-Jun-14 seqzrn    ---         deleted; see seqf
11-Jun-14 seqzrn2   ---         deleted; see seqf2
11-Jun-14 seqzfveqg ---         deleted; see seqfveq
11-Jun-14 seqzeq    ---         deleted; see seqfeq
11-Jun-14 seqzfveq  ---         deleted; see seqfveq
11-Jun-14 seq1seqzg ---         deleted
11-Jun-14 seqzp1g   ---         deleted; see seqp1
11-Jun-14 seqz1g    ---         deleted; see seq1
11-Jun-14 seq01     ---         deleted; see seqp1i
11-Jun-14 seqzm1    ---         deleted; see seqm1
11-Jun-14 seq1shftid ---        deleted; see seqfeq
11-Jun-14 ser1addi  ---         deleted; see seradd
11-Jun-14 ser1add2i ---         deleted; see seradd
11-Jun-14 ser1monoi ---         deleted; see sermono
11-Jun-14 ser1p1i   ---         deleted; see seqp1i
11-Jun-14 ser11i    ---         deleted; see seq1i
11-Jun-14 ser1f2i   ---         deleted; see serf
11-Jun-14 ser1cl2i  ---         deleted; see serf
11-Jun-14 ser1refi  ---         deleted; see serfre
11-Jun-14 ser1recli ---         deleted; see serfre
11-Jun-14 ser1cl1i  ---         deleted; see serf
11-Jun-14 ser1fi    ---         deleted; see serf
11-Jun-14 ser1f     ---         deleted; see serf
11-Jun-14 seq1p1g   ---         deleted; see seqp1
11-Jun-14 seq11g    ---         deleted; see seq1
11-Jun-14 seq1res   ---         deleted; see seqres
11-Jun-14 seq1cl2   ---         deleted; see seqcl2
11-Jun-14 seq1cl    ---         deleted; see seqcl
11-Jun-14 seq1f2    ---         deleted; see seqf2
11-Jun-14 seq1f     ---         deleted; see seqf
11-Jun-14 seq1rn    ---         deleted; see seqf
11-Jun-14 seq1rn2   ---         deleted; see seqf2
11-Jun-14 seq1m1    ---         deleted; see seqm1
11-Jun-14 seq1lem2  ---         deleted
11-Jun-14 seq0p1    ---         deleted; see seqp1
11-Jun-14 seq00     ---         deleted; see seq1
11-Jun-14 seqzp1    ---         deleted; see seqp1
11-Jun-14 seqz1     ---         deleted; see seq1
11-Jun-14 seq0fn    ---         deleted; see seqfn
11-Jun-14 seq0seqz  ---         deleted
11-Jun-14 seq1seqz  ---         deleted
11-Jun-14 seqzfn    ---         deleted; see seqfn
11-Jun-14 seqzfval  ---         deleted
11-Jun-14 seq0fval  ---         deleted
11-Jun-14 seq1fn    ---         deleted; see seqfn
11-Jun-14 seq1p1    ---         deleted; see seqp1
11-Jun-14 seq11     ---         deleted; see seq1
11-Jun-14 seq1fval  ---         deleted
11-Jun-14 df-seqz   ---         deleted; see df-seq
11-Jun-14 df-seq0   ---         deleted; see df-seq
11-Jun-14 df-seq1   ---         deleted; see df-seq
11-Jun-14 cseqz     ---         deleted                - use seq theorems
11-Jun-14 cseq0     ---         deleted                  in place of seq1, etc.
11-Jun-14 cseq1     ---         deleted
11-Jun-14 sercmp    [--same--]  revised
11-Jun-14 ser0      [--same--]  revised
11-Jun-14 serdistr  [--same--]  revised
11-Jun-14 seqhomo   [--same--]  revised
11-Jun-14 seqid2    [--same--]  revised
11-Jun-14 seqid     [--same--]  revised
11-Jun-14 sersub    [--same--]  revised
11-Jun-14 seradd    [--same--]  revised
11-Jun-14 serf1o    [--same--]  revised
11-Jun-14 serf1olem2 [--same--] revised
11-Jun-14 serf1olem1 [--same--] revised
11-Jun-14 sercaopr  [--same--]  revised
11-Jun-14 seq1p     [--same--]  revised
11-Jun-14 seqsplit  [--same--]  revised
11-Jun-14 sermono   [--same--]  revised
11-Jun-14 monoord   [--same--]  revised
11-Jun-14 serfre    [--same--]  revised
11-Jun-14 serf      [--same--]  revised
11-Jun-14 seqres    [--same--]  revised
11-Jun-14 seqshft2  [--same--]  revised
11-Jun-14 seqfeq    [--same--]  revised
11-Jun-14 seqfveq   [--same--]  revised
11-Jun-14 seqfeq2   [--same--]  revised
11-Jun-14 seqfveq2  [--same--]  revised
11-Jun-14 seqf      [--same--]  revised
11-Jun-14 seqcl     [--same--]  revised
11-Jun-14 seqf2     [--same--]  revised
11-Jun-14 seqcl2    [--same--]  revised
11-Jun-14 caoprassg [--same--]  revised
11-Jun-14 caoprcomg [--same--]  revised
11-Jun-14 fvunsn    [--same--]  eliminate unnecessary hypothesis
29-May-14 iccss2    [--same--]  moved from JM's mathbox to main set.mm
29-May-14 iccss     [--same--]  moved from JM's mathbox to main set.mm
29-May-14 iccconn   [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 retopcon  [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconn    [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconnlem5 [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconnlem4 [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconnlem3 [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconnlem2 [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 reconnlem1 [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 connsub   [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 dfcon2    [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 ioodisj   [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 ccid      [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 imp511    [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 imp55     [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 imp5g     [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 mtord     [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 eqeu      [--same--]  moved from JGH's mathbox to main set.mm
29-May-14 uznnssnn  [--same--]  moved from SF's mathbox to main set.mm
22-May-14 dmnrng    dmnrngo     (in FL's mathbox)
22-May-14 smprngpr  smprngopr   (in FL's mathbox)
22-May-14 prrngrng  prrngorngo  (in FL's mathbox)
22-May-14 isprrng   isprrngo    (in FL's mathbox)
22-May-14 df-prrng  df-prrngo   (in FL's mathbox)
22-May-14 0ring     0rngo       (in FL's mathbox)
22-May-14 rngidl    rngoidl     (in FL's mathbox)
22-May-14 crnghomfo crngohomfo  (in FL's mathbox)
22-May-14 crngrng   crngorngo   (in FL's mathbox)
22-May-14 iscring2  iscrngo2    (in FL's mathbox)
22-May-14 iscring   iscrngo     (in FL's mathbox)
22-May-14 df-cring  df-crngo    (in FL's mathbox)
22-May-14 rngisoco  rngoisoco   (in FL's mathbox)
22-May-14 rngisocnv rngoisocnv  (in FL's mathbox)
22-May-14 rngisohom rngoisohom  (in FL's mathbox)
22-May-14 rngiso1o  rngoiso1o   (in FL's mathbox)
22-May-14 isrngiso  isrngoiso   (in FL's mathbox)
22-May-14 rngisoval rngoisoval  (in FL's mathbox)
22-May-14 df-rngiso df-rngoiso  (in FL's mathbox)
22-May-14 rngkerinj rngokerinj  (in FL's mathbox)
22-May-14 rnghomco  rngohomco   (in FL's mathbox)
22-May-14 rnghomsub rngohomsub  (in FL's mathbox)
22-May-14 rnghom0   rngohom0    (in FL's mathbox)
22-May-14 rnggrphom rngogrphom  (in FL's mathbox)
22-May-14 rnghommul rngohommul  (in FL's mathbox)
22-May-14 rnghomadd rngohomadd  (in FL's mathbox)
22-May-14 rnghom1   rngohom1    (in FL's mathbox)
22-May-14 rnghomcl  rngohomcl   (in FL's mathbox)
22-May-14 rnghomf   rngohomf    (in FL's mathbox)
22-May-14 isrnghom  isrngohom   (in FL's mathbox)
22-May-14 rnghomval rngohomval  (in FL's mathbox)
22-May-14 df-rnghom df-rngohom  (in FL's mathbox)
22-May-14 isdivrng3 isdrngo3    (in FL's mathbox)
22-May-14 isdivrng2 isdrngo2    (in FL's mathbox)
22-May-14 isdivrng1 isdrngo1    (in FL's mathbox)
22-May-14 ringsubdir rngosubdir (in FL's mathbox)
22-May-14 ringsubdi rngosubdi   (in FL's mathbox)
22-May-14 ringnegrmul rngonegrmul (in FL's mathbox)
22-May-14 ringneglmul rngoneglmul (in FL's mathbox)
22-May-14 ringnegmn1r rngonegmn1r (in FL's mathbox)
22-May-14 ringnegmn1l rngonegmn1l (in FL's mathbox)
22-May-14 ringsub   rngosub     (in FL's mathbox)
22-May-14 ringaddneg2 rngoaddneg2 (in FL's mathbox)
22-May-14 ringaddneg1 rngoaddneg1 (in FL's mathbox)
22-May-14 ringnegcl rngonegcl   (in FL's mathbox)
22-May-14 df-toprng df-toprngo  (in FL's mathbox)
22-May-14 glmring   glmrngo     (in FL's mathbox)
22-May-14 rngridfz  rngoridfz   (in FL's mathbox)
22-May-14 rngunval2 rngounval2  (in FL's mathbox)
22-May-14 rnginvcl  rngoinvcl   (in FL's mathbox)
22-May-14 rnplrnml3 rngodmeqrn  (in FL's mathbox)
22-May-14 rngdmdmrn rngodmdmrn  (in FL's mathbox)
22-May-14 uznzr     rngoueqz
22-May-14 ring1cl   rngo1cl
22-May-14 on1el6    rngosn6
22-May-14 on1el4    rngosn4
22-May-14 on1el3    rngosn3
22-May-14 ringoridm rngoridm
22-May-14 ringolidm rngolidm
22-May-14 ringoidmlem rngoidmlem
22-May-14 fora      rngoablo2
22-May-14 fora2     rngoablo2lem2
22-May-14 fora1     rngoablo2lem1
22-May-14 unmnd     rngomnd
22-May-14 rnplrnml  rngorn1eq
22-May-14 rnplrnml2 rngorn1
22-May-14 rnplrnml0 rngodm1dm2
22-May-14 rngn0     rngon0
22-May-14 drngi     drngoi
22-May-14 ringsn    rngosn
22-May-14 cnring    cnrngo
22-May-14 ringorz   rngorz
22-May-14 ringolz   rngolz
22-May-14 ring0lid  rngo0lid
22-May-14 ring0rid  rngo0rid
22-May-14 ring0cl   rngo0cl
22-May-14 ringlcan  rngolcan
22-May-14 ringrcan  rngorcan
22-May-14 ringa4    rngoa4
22-May-14 ringa32   rngoa32
22-May-14 ringaass  rngoaass
22-May-14 ringcom   rngocom
22-May-14 ringgcl   rngogcl
22-May-14 ringogrpo rngogrpo
22-May-14 ringoablo rngoablo
22-May-14 ring2     rngo2
22-May-14 ringoass  rngoass
22-May-14 ringodir  rngodir
22-May-14 ringodi   rngodi
22-May-14 ringoideu rngoideu
22-May-14 ringid    rngoid
22-May-14 ringocl   rngocl
22-May-14 ringsm    rngosm
22-May-14 ringoi    rngoi
22-May-14 isringod  isrngod
22-May-14 isringo   isrngo
22-May-14 relrng    relrngo
22-May-14 df-ringo  df-rngo
22-May-14 cring     crngo
21-May-14 infmrgelb [--same--]  moved from JM's mathbox to main set.mm; revised
21-May-14 infmrlb   [--same--]  moved from JM's mathbox to main set.mm; revised
21-May-14 fienf1f1o ---         deleted; use f1finf1o
21-May-14 lbleinf   infmrgelb   moved from JGH's mathbox to main set.mm
21-May-14 divcan7   [--same--]  moved from JGH's mathbox to main set.mm
21-May-14 blhalf    [--same--]  moved from JM's mathbox to main set.mm
21-May-14 lt0nnn0   [--same--]  revised
17-May-14 oprabval2ga ---       deleted; use ovmpt2g
17-May-14 mpt2fng   ---         deleted; use fnmpt2
17-May-14 rngop     rnmpt2
17-May-14 fnoprab2ga fnmpt2
17-May-14 fnoprab2a fnmpt2i
17-May-14 dmoprab2a dmmpt2
17-May-14 foprab2a  fmpt2
17-May-14 oprabex2ga mpt2exg
17-May-14 mpt2exg   mpt2exga
17-May-14 dmmpt2    dmmpt
17-May-14 dmmpt     dmmptg
17-May-14 visset    vex
17-May-14 elisseti  elexi
17-May-14 elissetxx elisset
17-May-14 elisset   elex
17-May-14 elex      elissetxx
17-May-14 syl111anc syl3anc
17-May-14 syl11anc  syl2anc
11-Mar-14 syl2anc   syl2anr
 7-May-14 peano5uztiOLD ---     deleted
 7-May-14 peano5uziOLD ---      deleted
 7-May-14 dfnn2     dfnn3
 7-May-14 dfnn3     ---         deleted from JH's mathbox; see df-n
19-Apr-14 mod0      [--same--]  moved from JM's mathbox to main set.mm
19-Apr-14 invrcl    ---         deleted; use drnginvrcl and drnginvn0
16-Apr-14 grpkerinj grpokerinj  (in JM's mathbox)
16-Apr-14 grpeqdivid grpoeqdivid (in JM's mathbox)
16-Apr-14 grphm     grpohm      (in FL's mathbox)
16-Apr-14 grphlem5  grpohlem5   (in FL's mathbox)
16-Apr-14 grphmlem4 grpohmlem4  (in FL's mathbox)
16-Apr-14 grphlem3  grpohlem3   (in FL's mathbox)
16-Apr-14 grphmlem2 grpohmlem2  (in FL's mathbox)
16-Apr-14 grphmlem1 grpohmlem1  (in FL's mathbox)
16-Apr-14 grpdivzer grpodivzer  (in FL's mathbox)
16-Apr-14 grpdlcan  grpodlcan   (in FL's mathbox)
16-Apr-14 grpdrcan  grpodrcan   (in FL's mathbox)
16-Apr-14 grpdivfo  grpodivfo   (in FL's mathbox)
16-Apr-14 grpdivone grpodivone  (in FL's mathbox)
16-Apr-14 grpmnd    grpomnd     (in FL's mathbox)
16-Apr-14 grplactf1o grpolactf1o
16-Apr-14 grpnpncan grponpncan
16-Apr-14 grpnnncan2 grponnncan2
16-Apr-14 grppnpcan2 grpopnpcan2
16-Apr-14 grpnpcan  grponpcan
16-Apr-14 grppncan  grpopncan
16-Apr-14 grpdivid  grpodivid
16-Apr-14 grpmuldivass grpomuldivass
16-Apr-14 grpdivdiv grpodivdiv
16-Apr-14 grpdivcl  grpodivcl
16-Apr-14 grpdivf   grpodivf
16-Apr-14 grpdivval grpodivval
16-Apr-14 grpdivfval grpodivfval
16-Apr-14 grpinvdiv grpoinvdiv
16-Apr-14 grpdivinv grpodivinv
16-Apr-14 grpinvop  grpoinvop
16-Apr-14 grpinvf   grpoinvf
16-Apr-14 grp2inv   grpo2inv
16-Apr-14 grpasscan2 grpoasscan2
16-Apr-14 grpasscan1 grpoasscan1
16-Apr-14 grpsn     grposn
16-Apr-14 grprn     grporn
16-Apr-14 grprndm   grporndm
16-Apr-14 grpfo     grpofo
16-Apr-14 grp2grp   grpo2grp
 2-Apr-14 ---       ---         math token "Cgr" changed to "=="
 2-Apr-14 ---       ---         math token "(++)" changed to "(+)"
 2-Apr-14 ---       ---         math token "(+)" changed to "\/_"
31-Mar-14 grpinvcl  [--same--]  removed redundant hypothesis
31-Mar-14 ---       ---         math token "-g" changed to "invg"
23-Mar-14 hbequid2  ---         deleted; use hbequid
22-Mar-14 firnfi4   ---         deleted from JM's mathbox; see abrexfi
22-Mar-14 firnfi3   ---         deleted from JM's mathbox; see abrexfi
22-Mar-14 firnfi2   ---         deleted from JM's mathbox; see abrexfi
22-Mar-14 firnfi    ---         deleted from JM's mathbox; see abrexfi
22-Mar-14 cvol      clvol
22-Mar-14 fimaxre2  [--same--]  moved from JM's mathbox to main set.mm; revised
22-Mar-14 fimaxre   [--same--]  moved from JM's mathbox to main set.mm
15-Mar-14 reef11i   ---         deleted; see reef11
15-Mar-14 fsumsub   [--same--]  moved from SF's mathbox to main set.mm
15-Mar-14 fsumneg   [--same--]  moved from SF's mathbox to main set.mm
15-Mar-14 bccmpl    [--same--]  revised
15-Mar-14 ---       ---         fseq1p1m1lem1 - fseq1p1m1lem3 deleted
15-Mar-14 fz1eqblem ---         deleted
15-Mar-14 fzsuc     [--same--]  revised; see also fzsuc2
15-Mar-14 uz2m1nn   [--same--]  moved from PC's mathbox to main set.mm
15-Mar-14 elnn00nn  ---         deleted; see elnn0
15-Mar-14 npncan3   [--same--]  moved from SF's mathbox to main set.mm
15-Mar-14 npncan2   [--same--]  moved from SF's mathbox to main set.mm
12-Mar-14 copsexgb  coprsexg
 9-Mar-14 grpid     [--same--]  revised
 2-Mar-14 bnj1150   unssd       moved from JBN's mathbox to main set.mm
28-Feb-14 f1oeq23   [--same--]  moved from FL's mathbox to main set.mm
28-Feb-14 fzp1elp1  [--same--]  moved from JM's mathbox to main set.mm
28-Feb-14 divides2  [--same--]  moved from JGH's mathbox to main set.mm
28-Feb-14 fzfi2     ---         deleted from JM's mathbox; see fzfi
28-Feb-14 fzfi      [--same--]  moved from JM's mathbox; revised
28-Feb-14 fz1fi     ---         deleted; see fzfi
25-Feb-14 biadan2   [--same--]  moved from JM's mathbox to main set.mm
23-Feb-14 op1steq   [--same--]  generalized antecedent from _V X. _V to V X. W
23-Feb-14 eqop      [--same--]  generalized antecedent from _V X. _V to V X. W
23-Feb-14 eqopi     [--same--]  generalized antecedent from _V X. _V to V X. W
20-Feb-14 eqreldv2  [--same--]  moved from RM's mathbox to main set.mm; revised
20-Feb-14 eqreldv   [--same--]  moved from RM's mathbox to main set.mm
17-Feb-14 qnnenOLD  ---         deleted; see qnnen
17-Feb-14 divvali   divval      revised
17-Feb-14 receui    receu       revised
17-Feb-14 recexi    ---         deleted; see recex
17-Feb-14 ax-cnex   ---         deleted; see cnex
17-Feb-14 axcnex    ---         deleted; see cnex
17-Feb-14 srex      ---         deleted
 4-Feb-14 abl23     ablo32
 4-Feb-14 abl4      ablo4
 4-Feb-14 abldiv23  ablodiv32
 4-Feb-14 nvadd23   nvadd32
 4-Feb-14 vca23     vca32
 4-Feb-14 ringa23   ringa32
 4-Feb-14 divdiv23i divdiv32i
 4-Feb-14 divdiv23  divdiv32
 4-Feb-14 sub23     sub32
 4-Feb-14 dif23     dif32
 4-Feb-14 or23      or32
30-Jan-14 heibor    [--same--]  revised
30-Jan-14 ---       ---         heiborlem11 - heiborlem42 deleted
30-Jan-14 heiborlem10 [--same--] revised
30-Jan-14 heiborlem9 [--same--] revised
30-Jan-14 heiborlem8 [--same--] revised
30-Jan-14 heiborlem7 [--same--] revised
30-Jan-14 heiborlem6 [--same--] revised
30-Jan-14 heiborlem5 [--same--] revised
30-Jan-14 heiborlem4 [--same--] revised
30-Jan-14 heiborlem3 [--same--] revised
30-Jan-14 heiborlem2 [--same--] revised
30-Jan-14 heiborlem1 [--same--] revised
30-Jan-14 ismtyhmeolem [--same--] revised
30-Jan-14 hmopbdopiHIL ---      deleted; see hmopbdoptHIL
30-Jan-14 htthi     htth        revised
30-Jan-14 ---       ---         htthlem1 - htthlem12 deleted
30-Jan-14 ubthi     ubth        revised
30-Jan-14 ubthii    ---         deleted; see ubth
30-Jan-14 ---       ---         ubthlem4 - ubthlem14 deleted
30-Jan-14 ubthlem3  [--same--]  revised
30-Jan-14 ubthlem2  [--same--]  revised
30-Jan-14 ubthlem1  [--same--]  revised
30-Jan-14 bcth      [--same--]  revised
30-Jan-14 ---       ---         bcthlem6 - bcthlem33 deleted
30-Jan-14 bcthlem5  [--same--]  revised
30-Jan-14 bcthlem4  [--same--]  revised
30-Jan-14 bcthlem3  [--same--]  revised
30-Jan-14 bcthlem2  [--same--]  revised
30-Jan-14 bcthlem1  [--same--]  revised
30-Jan-14 fimax     ---         deleted; see fimaxg
30-Jan-14 ac6sfilem3 ---        deleted
30-Jan-14 ac6sfilem2 ---        deleted
30-Jan-14 ac6sfilem1 ---        deleted
30-Jan-14 metdcn    [--same--]  revised
30-Jan-14 ---       ---         metnrmlem4 - metnrmlem6 deleted
30-Jan-14 metnrmlem3 [--same--] revised
30-Jan-14 metnrmlem2 [--same--] revised
30-Jan-14 metnrmlem1 [--same--] revised
30-Jan-14 altretoplem2 ---      deleted
30-Jan-14 altretoplem1 ---      deleted
30-Jan-14 bsi3      bsi
30-Jan-14 bsi2      ---         deleted; see bsi
30-Jan-14 bsi       [--same--]  revised
30-Jan-14 subtopmetlem ---      deleted
30-Jan-14 basmetres ---         deleted; see metssba2
30-Jan-14 nvcnpi4   ---         deleted; see metcnpi4
30-Jan-14 nvcnpi3   ---         deleted; see metcnpi3
30-Jan-14 nmcn3     ---         deleted; see nmcn
30-Jan-14 nmcn2     ---         deleted; see nmcn
30-Jan-14 nmcni     ---         deleted; see nmcn
30-Jan-14 nmcnilem  ---         deleted
30-Jan-14 sqcn2     ---         deleted; see sqcn
30-Jan-14 sqcn      [--same--]  revised
30-Jan-14 nvcni3    ---         deleted; see metcni
30-Jan-14 nvcni2    ---         deleted; see metcni
30-Jan-14 nvcni     ---         deleted; see metcni
30-Jan-14 nvcnpf    ---         deleted; see metcnpf
30-Jan-14 nvcnf     ---         deleted; see metcnf
30-Jan-14 nvelbl2   [--same--]  revised
30-Jan-14 nvelbl    [--same--]  revised
30-Jan-14 metcnp4OLD ---        deleted
30-Jan-14 metcnp4lem2 [--same--] revised
30-Jan-14 metelclsOLD ---       deleted
30-Jan-14 tgioolem  ---         deleted
30-Jan-14 bl2ioo    [--same--]  revised
30-Jan-14 metcnp3   [--same--]  revised
30-Jan-14 metcni2   [--same--]  revised
30-Jan-14 metcni    [--same--]  revised
30-Jan-14 metcnpi4  [--same--]  revised
30-Jan-14 metcnpi3  [--same--]  revised
30-Jan-14 metcnpi2  [--same--]  revised
30-Jan-14 metcnpi   [--same--]  revised
30-Jan-14 metcn     [--same--]  revised
30-Jan-14 metcnp2   [--same--]  revised
30-Jan-14 metcnp    [--same--]  revised
30-Jan-14 metcnplem [--same--]  revised
30-Jan-14 metequiv  [--same--]  revised
30-Jan-14 lpbl      [--same--]  revised
30-Jan-14 blnei     [--same--]  revised
30-Jan-14 metnei    [--same--]  revised
30-Jan-14 neibl     [--same--]  revised
30-Jan-14 blopn     [--same--]  revised
30-Jan-14 tgbl      ---         deleted; see opnval
30-Jan-14 opni3     [--same--]  revised
30-Jan-14 opni2     [--same--]  revised
30-Jan-14 isopn4    [--same--]  revised
30-Jan-14 uniopn2   [--same--]  revised
30-Jan-14 opnfval   ---         deleted
30-Jan-14 ssblex    [--same--]  revised
30-Jan-14 ssbl      [--same--]  revised
30-Jan-14 blssex    [--same--]  revised
30-Jan-14 blss      [--same--]  revised
30-Jan-14 blin      [--same--]  revised
30-Jan-14 rnblssm   ---         deleted; see blssm
30-Jan-14 blssm     [--same--]  revised
30-Jan-14 blex      ---         deleted; see unirnbl
30-Jan-14 blelrn    [--same--]  revised
30-Jan-14 blrn3     ---         deleted; see blrn
30-Jan-14 bln0      [--same--]  revised
30-Jan-14 blcntr    [--same--]  revised
30-Jan-14 blf       [--same--]  revised
30-Jan-14 bl2in     [--same--]  revised
30-Jan-14 blrn2     ---         deleted; see blrn
30-Jan-14 blrn      [--same--]  revised
30-Jan-14 elbl3     [--same--]  revised
30-Jan-14 elbl2     [--same--]  revised
30-Jan-14 elbl      [--same--]  revised
30-Jan-14 blval     [--same--]  revised
30-Jan-14 metdmdm   ---         deleted; see a1i
30-Jan-14 df-opn    [--same--]  revised
30-Jan-14 uniretop  [--same--]  revised
30-Jan-14 unirnioo  [--same--]  revised
30-Jan-14 qjust     ---         deleted
30-Jan-14 df-q      [--same--]  revised
30-Jan-14 unifo     iunfo       revised
30-Jan-14 oprelimab [--same--]  revised
30-Jan-14 oprvelrn  [--same--]  revised
16-Jan-14 resex     [--same--]  moved from JM's mathbox to main set.mm
16-Jan-14 ifeq2da   [--same--]  moved from JM's mathbox to main set.mm
16-Jan-14 ifeq1da   [--same--]  moved from JM's mathbox to main set.mm
16-Jan-14 fvif      [--same--]  moved from JM's mathbox to main set.mm
15-Jan-14 ifclda    [--same--]  moved from JM's mathbox to main set.mm
14-Jan-14 wl-adnestantdALT embantd moved from WL's mathbox to main set.mm
14-Jan-14 rabbirdv  rabbi2dva   revised hypothesis
13-Jan-14 19.23aexi exlimexi    (in AS's mathbox)
13-Jan-14 r19.23aib rexlimib    (in FL's mathbox)
13-Jan-14 r19.23advv rexlimdvv
13-Jan-14 r19.23aivv rexlimivv
13-Jan-14 r19.23adva rexlimdva
13-Jan-14 r19.23adv rexlimdv
13-Jan-14 r19.23ad2 rexlimd2
13-Jan-14 r19.23ad  rexlimd
13-Jan-14 r19.23aivw rexlimivw
13-Jan-14 r19.23aiva rexlimiva
13-Jan-14 r19.23aiv rexlimiv
13-Jan-14 r19.23ai  rexlimi
13-Jan-14 19.23advv exlimdvv
13-Jan-14 19.23aivv exlimivv
13-Jan-14 19.23aiv  exlimiv
13-Jan-14 19.23adv  exlimdv
13-Jan-14 19.23ad   exlimd
13-Jan-14 19.23ai   exlimi
13-Jan-14 19.21a3con13v alrim3con13v (In AS's mathbox)
13-Jan-14 r19.21advva ralrimdvva
13-Jan-14 r19.21advv ralrimdvv
13-Jan-14 r19.21aivva ralrimivva
13-Jan-14 r19.21aivv ralrimivv
13-Jan-14 r19.21adva ralrimdva
13-Jan-14 r19.21adv ralrimdv
13-Jan-14 r19.21ad  ralrimd
13-Jan-14 r19.21aiva ralrimiva
13-Jan-14 r19.21aiv ralrimiv
13-Jan-14 r19.21ai  ralrimi
13-Jan-14 19.21adv  alrimdv
13-Jan-14 19.21aivv alrimivv
13-Jan-14 19.21aiv  alrimiv
13-Jan-14 19.21ad   alrimd
13-Jan-14 19.21ai   alrimi
 9-Jan-14 dvrngprop drngprop
 9-Jan-14 dvrngid2  drngid2
 9-Jan-14 divrngunz drngunz
 9-Jan-14 divrngid  drngid
 9-Jan-14 divrngidlem drngidlem
 9-Jan-14 divrngmcl drngmcl
 9-Jan-14 divrngmgrp drngmgrp
 9-Jan-14 isdivrngrd isdrngrd
 9-Jan-14 isdivrngd isdrngd
 9-Jan-14 divrnggrp drnggrp
 9-Jan-14 divrngring drngrng
 9-Jan-14 isdivrng  isdrng
 9-Jan-14 cdivring  cdr
 9-Jan-14 ringrz    rngrz
 9-Jan-14 ringlz    rnglz
 9-Jan-14 isringd   isrngd
 9-Jan-14 isringid  isrngid
 9-Jan-14 ringridm  rngridm
 9-Jan-14 ringlidm  rnglidm
 9-Jan-14 ringidmlem rngidmlem
 9-Jan-14 ringgrp   rnggrp
 9-Jan-14 ringabl   rngabl
 9-Jan-14 ringidcl  rngidcl
 9-Jan-14 ringdir   rngdir
 9-Jan-14 ringdi    rngdi
 9-Jan-14 ringideu  rngideu
 9-Jan-14 ringass   rngass
 9-Jan-14 ringcl    rngcl
 9-Jan-14 ringi     rngi
 9-Jan-14 isring    isrng
 9-Jan-14 ringidval rngidval
23-Dec-13 cvimarndm cnvimarndm
23-Dec-13 cnvresima [--same--]  moved from JGH's mathbox to main set.mm
23-Dec-13 hstel     ishst
23-Dec-13 stel      isst        revised
23-Dec-13 df-hst    [--same--]  revised
23-Dec-13 df-st     [--same--]  revised
23-Dec-13 shsumval3i shsval3i
23-Dec-13 shsumval2i shsval2i
23-Dec-13 dfchj3    sshjval3    revised
23-Dec-13 dfchj2    sshjval2    revised
23-Dec-13 dfchsup2  ---         deleted; see hsupval2
23-Dec-13 shsumval  shsval      revised
23-Dec-13 df-chsup  [--same--]  revised
23-Dec-13 df-chj    [--same--]  revised
23-Dec-13 df-span   [--same--]  revised
23-Dec-13 df-shsum  df-shs      revised
23-Dec-13 dfch2     [--same--]  revised
23-Dec-13 ch2       isch3
23-Dec-13 chcmhi    ---         deleted; see isch3
23-Dec-13 chsscmi   ---         deleted; see isch3
23-Dec-13 closedsub isch2
23-Dec-13 df-ch     [--same--]  revised
23-Dec-13 sh2       issh3
23-Dec-13 sh        issh2
23-Dec-13 df-sh     [--same--]  revised
23-Dec-13 pjmval    pjfval      revised
23-Dec-13 df-pj     [--same--]  revised
23-Dec-13 df-oc     [--same--]  revised
23-Dec-13 dfhnorm2  [--same--]  revised
23-Dec-13 df-hvsub  [--same--]  revised
23-Dec-13 df-hnorm  [--same--]  revised
23-Dec-13 nvmfval   [--same--]  revised
23-Dec-13 iscringd  [--same--]  (in JM's mathbox) revised
23-Dec-13 flddivrng [--same--]  moved from JM's mathbox to main set.mm; revised
23-Dec-13 isringod  [--same--]  moved from JM's mathbox to main set.mm; revised
23-Dec-13 exidreslem [--same--] (in JM's mathbox) revised
23-Dec-13 extopgrp  [--same--]  (in FL's mathbox) revised
23-Dec-13 invtrgrp  ginvsn      moved from FL's mathbox to main set.mm; revised
23-Dec-13 idtrgrp   gidsn       moved from FL's mathbox to main set.mm; revised
23-Dec-13 zrfld     [--same--]  (in FL's mathbox) revised
23-Dec-13 fldi      [--same--]  (in FL's mathbox) revised
23-Dec-13 rngunval2 [--same--]  (in FL's mathbox) revised
23-Dec-13 ununr     [--same--]  (in FL's mathbox) revised
23-Dec-13 mndid     [--same--]  (in FL's mathbox) (in FL's mathbox) revised
23-Dec-13 zrdivrng  [--same--]  revised
23-Dec-13 rngmgmbs4 [--same--]  revised
23-Dec-13 ismnd2    [--same--]  revised
23-Dec-13 ismnd1    [--same--]  revised
23-Dec-13 ismnd     [--same--]  revised
23-Dec-13 isexid2   [--same--]  revised
23-Dec-13 isexid    [--same--]  revised
23-Dec-13 df-exid   [--same--]  revised
23-Dec-13 0vfval    [--same--]  revised
23-Dec-13 ringoideu [--same--]  revised
23-Dec-13 ringid    [--same--]  revised
23-Dec-13 ringoi    [--same--]  revised
23-Dec-13 isringo   [--same--]  revised
23-Dec-13 df-ringo  [--same--]  revised
23-Dec-13 gxnval    [--same--]  revised
23-Dec-13 gxpval    [--same--]  revised
23-Dec-13 gxval     [--same--]  revised
23-Dec-13 gxoprval  gxfval      revised
23-Dec-13 grpdivfval [--same--] revised
23-Dec-13 grpoinvval [--same--] revised
23-Dec-13 grpoinvfval [--same--] revised
23-Dec-13 grpoidval [--same--]  revised
23-Dec-13 grpidvallem ---       deleted
23-Dec-13 fungid    fngid       revised
23-Dec-13 gid0      ---         deleted
23-Dec-13 grprlidrid ---        deleted
23-Dec-13 df-gx     [--same--]  revised
23-Dec-13 df-gdiv   [--same--]  revised
23-Dec-13 df-ginv   [--same--]  revised
23-Dec-13 df-gid    [--same--]  revised
22-Dec-13 df-igen   [--same--]  (in JM's mathbox) revised
22-Dec-13 pcoval    [--same--]  (in JM's mathbox) revised
22-Dec-13 pcofval   [--same--]  (in JM's mathbox) revised
22-Dec-13 df-pi1    [--same--]  (in JM's mathbox) revised
22-Dec-13 df-pi1b   [--same--]  (in JM's mathbox) revised
22-Dec-13 df-pco    [--same--]  (in JM's mathbox) revised
22-Dec-13 txsubsp   [--same--]  (in JM's mathbox) revised
22-Dec-13 subspabs  ---         (in JM's mathbox) deleted; use subspco
22-Dec-13 subspopn  [--same--]  (in JM's mathbox) revised
22-Dec-13 fzm1      [--same--]  moved from JM's mathbox to main set.mm
22-Dec-13 elfzp12   [--same--]  moved from JM's mathbox to main set.mm
22-Dec-13 zornn0    [--same--]  moved from JM's mathbox to main set.mm
22-Dec-13 inficl    [--same--]  moved from JM's mathbox to main set.mm; revised
22-Dec-13 resoprab2 [--same--]  moved from JM's mathbox to main set.mm
22-Dec-13 oprabval2a ovmpt2x    moved from JM's mathbox to main set.mm; revised
22-Dec-13 eqfnoprv2 [--same--]  moved from JM's mathbox to main set.mm
22-Dec-13 filnetlem5 [--same--] (in JGH's mathbox) revised
22-Dec-13 filnetlem4 [--same--] (in JGH's mathbox) revised
22-Dec-13 filnetlem3 [--same--] (in JGH's mathbox) revised
22-Dec-13 filnetlem2 [--same--] (in JGH's mathbox) revised
22-Dec-13 filnetlem1 [--same--] (in JGH's mathbox) revised
22-Dec-13 tailmap   tailf       (in JGH's mathbox)
22-Dec-13 istail    tailval     (in JGH's mathbox) revised
22-Dec-13 tailf     tailfval    (in JGH's mathbox) revised
22-Dec-13 fmfnfm    [--same--]  (in JGH's mathbox) revised
22-Dec-13 fmfnfmlem4 [--same--] (in JGH's mathbox) revised
22-Dec-13 fmfnfmlem3 [--same--] (in JGH's mathbox) revised
22-Dec-13 fmfnfmlem2 [--same--] (in JGH's mathbox) revised
22-Dec-13 fmfnfmlem1 [--same--] (in JGH's mathbox) revised
22-Dec-13 ufcondr   ufildr      (in JGH's mathbox) revised
22-Dec-13 uffinfix  [--same--]  (in JGH's mathbox) revised
22-Dec-13 fixufil   [--same--]  (in JGH's mathbox) changed variable names
22-Dec-13 uffixfr   [--same--]  (in JGH's mathbox) revised
22-Dec-13 ufileulem ---         (in JGH's mathbox) deleted
22-Dec-13 filssufillem ---      (in JGH's mathbox) deleted
22-Dec-13 supfil    [--same--]  (in JGH's mathbox) revised
22-Dec-13 fbasfip   [--same--]  moved from JGH's mathbox to main set.mm;revised
22-Dec-13 subsubtop ---         (in JGH's mathbox) to be deleted; use subspco
22-Dec-13 ssntr     [--same--]  moved from JGH's mathbox to main set.mm;revised
22-Dec-13 elfiun    [--same--]  moved from JGH's mathbox to main set.mm;revised
22-Dec-13 isrocatset [--same--] (in FL's mathbox) revised
22-Dec-13 df-rocatset [--same--] (in FL's mathbox) revised
22-Dec-13 singcon   ---         (in FL's mathbox) deleted
22-Dec-13 topsinind topsn       moved from FL's mathbox to main set.mm; revised
22-Dec-13 empcon    ---         (in FL's mathbox) deleted
22-Dec-13 intopcon  [--same--]  (in FL's mathbox) revised
22-Dec-13 clindistop [--same--] (in FL's mathbox) revised
22-Dec-13 stfincomp [--same--]  (in FL's mathbox) revised
22-Dec-13 cmptop    [--same--]  (in FL's mathbox) revised
22-Dec-13 subsincomp ---        (in FL's mathbox) deleted
22-Dec-13 subempcomp ---        (in FL's mathbox) deleted
22-Dec-13 limfillem2 ---        (in FL's mathbox) deleted
22-Dec-13 limfillem1 ---        (in FL's mathbox) deleted
22-Dec-13 trnei2    trnei       (in FL's mathbox) revised
22-Dec-13 trfil     [--same--]  (in FL's mathbox) revised
22-Dec-13 rcfpfil   [--same--]  (in FL's mathbox) revised
22-Dec-13 rcfpfillem6 ---       (in FL's mathbox) deleted
22-Dec-13 rcfpfillem5 ---       (in FL's mathbox) deleted
22-Dec-13 rcfpfillem4 ---       (in FL's mathbox) deleted
22-Dec-13 rcfpfillem3 ---       (in FL's mathbox) deleted
22-Dec-13 rcfpfillem2 ---       (in FL's mathbox) deleted
22-Dec-13 rcfpfillem1 ---       (in FL's mathbox) deleted
22-Dec-13 efilcp2   efilcp      (in FL's mathbox) revised
22-Dec-13 efilcp    [--same--]  (in FL's mathbox) revised
22-Dec-13 fgsb      ---         (in FL's mathbox) deleted; use fsubbas,fgfil
22-Dec-13 ptincpw   ---         (in FL's mathbox) deleted; use topgele
22-Dec-13 topge     ---         (in FL's mathbox) deleted; use pwuni
22-Dec-13 topgele   [--same--]  moved from FL's mathbox to main set.mm; revised
22-Dec-13 subtopsin2 subspsn2   moved from FL's mathbox to main set.mm; revised
22-Dec-13 stoig2b   ---         (in FL's mathbox) deleted; use subspuni
22-Dec-13 sbtpsines subspsn     moved from FL's mathbox to main set.mm; revised
22-Dec-13 subspemp2 subsp0      moved from FL's mathbox to main set.mm; revised
22-Dec-13 subspemp  ---         (in FL's mathbox) deleted; use subsp0
22-Dec-13 intopcoaconlem3 [--same--] (in FL's mathbox) revised
22-Dec-13 bintop3   ---         (in FL's mathbox) deleted; use fibas
22-Dec-13 bintop    ---         (in FL's mathbox) deleted; use fibas
22-Dec-13 topindis  ---         (in FL's mathbox) deleted; use topgele
22-Dec-13 rngop     [--same--]  moved from FL's mathbox to main set.mm
22-Dec-13 relcnvfld [--same--]  moved from FL's mathbox to main set.mm
22-Dec-13 ficli     ---         (in FL's mathbox) deleted; use fiin
22-Dec-13 fiiu      ---         (in FL's mathbox) deleted; use fipwuni
22-Dec-13 infi1     ---         (in FL's mathbox) deleted; use fiin
22-Dec-13 mpteq2dvg mpteq2dvgOLD (in FL's mathbox)
22-Dec-13 uzf       [--same--]  moved from SF's mathbox to main set.mm; revised
22-Dec-13 fzf       [--same--]  moved from SF's mathbox to main set.mm; revised
22-Dec-13 elfzm1b   [--same--]  moved from PC's mathbox to main set.mm
22-Dec-13 hashgaddOLD ---       (in PC's mathbox) deleted
22-Dec-13 ---       ---         nmcopexlem1 - nmcopexlem6 deleted
22-Dec-13 eigval1   eigvalval
22-Dec-13 kbvalval  kbval
22-Dec-13 kbval     kbfval      revised
22-Dec-13 bravalval braval
22-Dec-13 braval    brafval     revised
22-Dec-13 cnfnc     [--same--]  revised
22-Dec-13 elnlfn    [--same--]  revised
22-Dec-13 cnopc     [--same--]  revised
22-Dec-13 eigvalval eigvalfval  revised
22-Dec-13 eigvecval [--same--]  revised
22-Dec-13 elcnfn    [--same--]  revised
22-Dec-13 nlfnval   [--same--]  revised
22-Dec-13 dfbdop2   df-bdop
22-Dec-13 elcnop    [--same--]  revised
22-Dec-13 df-spec   [--same--]  revised
22-Dec-13 df-eigval [--same--]  revised
22-Dec-13 df-eigvec [--same--]  revised
22-Dec-13 df-kb     [--same--]  revised
22-Dec-13 df-bra    [--same--]  revised
22-Dec-13 df-lnfn   [--same--]  revised
22-Dec-13 df-cnfn   [--same--]  revised
22-Dec-13 df-nlfn   [--same--]  revised
22-Dec-13 df-nmfn   [--same--]  revised
22-Dec-13 df-hmop   [--same--]  revised
22-Dec-13 df-bdop   [--same--]  revised
22-Dec-13 df-lnop   [--same--]  revised
22-Dec-13 df-cnop   [--same--]  revised
22-Dec-13 df-nmop   [--same--]  revised
22-Dec-13 hfsval    [--same--]  revised
22-Dec-13 hfmmval   [--same--]  revised
22-Dec-13 hfsmval   [--same--]  revised
22-Dec-13 hodmval   [--same--]  revised
22-Dec-13 hommval   [--same--]  revised
22-Dec-13 hosmval   [--same--]  revised
22-Dec-13 df-hfmul  [--same--]  revised
22-Dec-13 df-hsum   [--same--]  revised
22-Dec-13 df-hodif  [--same--]  revised
22-Dec-13 df-homul  [--same--]  revised
22-Dec-13 df-hosum  [--same--]  revised
22-Dec-13 tosdir    [--same--]  revised
22-Dec-13 dirge     [--same--]  changed variable names
22-Dec-13 dirtr     [--same--]  changed variable names
22-Dec-13 dirref    [--same--]  changed variable names
22-Dec-13 dirdm     [--same--]  changed variable names
22-Dec-13 reldir    [--same--]  changed variable names
22-Dec-13 isdir     [--same--]  revised
22-Dec-13 df-tail   [--same--]  revised
22-Dec-13 df-dir    [--same--]  revised
22-Dec-13 contop    [--same--]  revised
22-Dec-13 hausfillim2 hausflim2
22-Dec-13 sflimf    flfval
22-Dec-13 flimff    flffval     revised
22-Dec-13 elfilmap3 elfm3
22-Dec-13 elfilmap2 elfm2
22-Dec-13 elfilmap  elfm
22-Dec-13 fmf       fmfil
22-Dec-13 filmapss  fmss        changed variable names
22-Dec-13 isfilmap  fmval       changed variable names
22-Dec-13 filmapf   fmfval      revised
22-Dec-13 df-flimf  df-flf      revised
22-Dec-13 df-filmap df-fm       revised
22-Dec-13 cflimf    cflf
22-Dec-13 cfilmap   cfm
22-Dec-13 hausfillim hausflim
22-Dec-13 isfillim  elflim
22-Dec-13 limfil    flimval
22-Dec-13 sfvlim    flimfval    revised
22-Dec-13 df-flim1  df-flim     revised
22-Dec-13 cflim1    cflim       revised
22-Dec-13 fbunfip   [--same--]  revised
22-Dec-13 fsubbas   [--same--]  revised
22-Dec-13 infi      fiin        revised
22-Dec-13 0nelfb    [--same--]  revised
22-Dec-13 oefil2    snfil
22-Dec-13 filintf   infil       revised
22-Dec-13 emnfil    [--same--]  revised
22-Dec-13 isfil     isfil2      revised
22-Dec-13 df-fil    [--same--]  revised
22-Dec-13 df-fg     [--same--]  revised
22-Dec-13 subsptop    [--same--]  revised
22-Dec-13 stoigOLD  ---         deleted
22-Dec-13 stoiglem  ---         deleted
22-Dec-13 stoiglemOLD ---       deleted
22-Dec-13 elsubsp   elsubspr    revised
22-Dec-13 issubspt  elsubsp     revised
22-Dec-13 issubsplem1 ---       deleted
22-Dec-13 issubsp   ---         deleted
22-Dec-13 subsp     subspval    revised
22-Dec-13 subspi    [--same--]  revised
22-Dec-13 df-subsp  [--same--]  revised
22-Dec-13 df-homeo  [--same--]  revised
22-Dec-13 fibas     [--same--]  revised
22-Dec-13 fiiu2     fipwuni     revised
22-Dec-13 sppfi     elfi        revised
22-Dec-13 spfi      ---         deleted
22-Dec-13 abfi2     ssfii
22-Dec-13 abfi      ---         deleted
22-Dec-13 inficlALT inficl
22-Dec-13 fine2     fi0         revised
22-Dec-13 fine      ---         deleted
22-Dec-13 fiv       fival       revised
22-Dec-13 df-fi     [--same--]  revised
22-Dec-13 istoset   istoset3    revised
22-Dec-13 df-toset  [--same--]  revised
22-Dec-13 symgval   [--same--]  revised
22-Dec-13 symgoprab ---         deleted
22-Dec-13 df-symgrp df-symg     revised
22-Dec-13 csymgrp   csymg
22-Dec-13 pilem3    [--same--]  revised
22-Dec-13 spwpr4OLD ---         deleted
22-Dec-13 spwex     [--same--]  changed variable names
22-Dec-13 spwcl     [--same--]  changed variable names
22-Dec-13 spwnex    ---         deleted
22-Dec-13 spwval3   ---         deleted
22-Dec-13 spwval    [--same--]  revised
22-Dec-13 spwval2   [--same--]  revised
22-Dec-13 df-spw    [--same--]  revised
22-Dec-13 ipblnfi   [--same--]  revised
22-Dec-13 nmofval   [--same--]  revised
22-Dec-13 lnolin    [--same--]  revised
22-Dec-13 islno     [--same--]  revised
22-Dec-13 lnoval    [--same--]  revised
22-Dec-13 df-hmo    [--same--]  revised
22-Dec-13 df-aj     [--same--]  revised
22-Dec-13 df-0o     [--same--]  revised
22-Dec-13 df-blo    [--same--]  revised
22-Dec-13 df-nmo    [--same--]  revised
22-Dec-13 df-lno    [--same--]  revised
22-Dec-13 df-ssp    [--same--]  revised
22-Dec-13 ipfval    [--same--]  revised
22-Dec-13 df-ip     [--same--]  revised
22-Dec-13 df-ims    [--same--]  revised
22-Dec-13 df-ba     [--same--]  revised
22-Dec-13 opnfval   [--same--]  revised
22-Dec-13 ismsg     ---         deleted
22-Dec-13 mscl      ---         deleted
22-Dec-13 msf       ---         deleted
22-Dec-13 msflem    ---         deleted
22-Dec-13 msrel     ---         deleted
22-Dec-13 df-opn    [--same--]  revised
22-Dec-13 df-ball   [--same--]  revised
22-Dec-13 df-met    [--same--]  revised
22-Dec-13 cnpfval   [--same--]  revised
22-Dec-13 df-cnp    [--same--]  revised
22-Dec-13 df-cn     [--same--]  revised
22-Dec-13 lpfval    [--same--]  revised
22-Dec-13 df-lp     [--same--]  revised
22-Dec-13 neival    [--same--]  revised
22-Dec-13 neifval   [--same--]  revised
22-Dec-13 df-nei    [--same--]  revised
22-Dec-13 ntrval    [--same--]  revised
22-Dec-13 clsfval   [--same--]  revised
22-Dec-13 ntrfval   [--same--]  revised
22-Dec-13 cldval    [--same--]  revised
22-Dec-13 df-cls    [--same--]  revised
22-Dec-13 df-ntr    [--same--]  revised
22-Dec-13 df-cld    [--same--]  revised
22-Dec-13 df-tx     [--same--]  revised
22-Dec-13 df-topgen [--same--]  revised
22-Dec-13 df-top    [--same--]  revised
22-Dec-13 unbenlem  [--same--]  revised
22-Dec-13 df-gcd    [--same--]  revised
22-Dec-13 reeff1o2  reeff1o
22-Dec-13 reeff1o   [--same--]  revised
22-Dec-13 reeff1    [--same--]  revised
22-Dec-13 df-pi     [--same--]  revised
22-Dec-13 df-cos    [--same--]  revised
22-Dec-13 df-sin    [--same--]  revised
22-Dec-13 df-ef     [--same--]  revised
22-Dec-13 cncfval   [--same--]  revised
22-Dec-13 df-cncf   [--same--]  revised
22-Dec-13 climshft2i climshft2  revised
22-Dec-13 climresi  ---         deleted
22-Dec-13 climshfti ---         deleted
22-Dec-13 clim      [--same--]  revised
22-Dec-13 df-clim   [--same--]  revised
22-Dec-13 hashgadd  [--same--]  revised
22-Dec-13 hashenOLDOLD ---      deleted
22-Dec-13 hashenOLD ---         deleted
22-Dec-13 hashfz1OLD ---        deleted
22-Dec-13 hashginvOLD ---       deleted
22-Dec-13 hashgvalOLD ---       deleted
22-Dec-13 hashginv  [--same--]  revised
22-Dec-13 hashgval  [--same--]  revised
22-Dec-13 fz1fiOLD  ---         deleted
22-Dec-13 hashgf1o  [--same--]  revised
22-Dec-13 df-hash   [--same--]  revised
22-Dec-13 bccl2     [--same--]  revised
22-Dec-13 bcpasci   ---         deleted
22-Dec-13 bcpasc2   ---         deleted
22-Dec-13 bcpasc2i  ---         deleted
22-Dec-13 bcnp11    bcn1        revised
22-Dec-13 bccmpl    [--same--]  revised
22-Dec-13 bcval3    [--same--]  revised
22-Dec-13 bcval2    [--same--]  revised
22-Dec-13 bcval     [--same--]  revised
22-Dec-13 df-bc     [--same--]  revised
22-Dec-13 df-abs    [--same--]  revised
22-Dec-13 cjval     remim
22-Dec-13 imval     [--same--]  revised
22-Dec-13 reval     [--same--]  revised
22-Dec-13 df-im     [--same--]  revised
22-Dec-13 df-re     [--same--]  revised
22-Dec-13 df-cj     [--same--]  revised
22-Dec-13 df-limsup [--same--]  revised
22-Dec-13 shftf     [--same--]  revised
22-Dec-13 shftval   [--same--]  revised
22-Dec-13 shftresval ---        deleted
22-Dec-13 shftres   ---         deleted
22-Dec-13 shftfn    [--same--]  revised
22-Dec-13 shftfval  [--same--]  revised
22-Dec-13 df-shft   [--same--]  revised
22-Dec-13 cardfz    [--same--]  revised
22-Dec-13 fzennn    [--same--]  revised
22-Dec-13 uzrdgsuci [--same--]  revised
22-Dec-13 uzrdg0i   [--same--]  revised
22-Dec-13 uzrdgfni  [--same--]  revised
22-Dec-13 uzrdglem  [--same--]  revised
22-Dec-13 om2uzrdg  [--same--]  revised
22-Dec-13 om2uzisoi [--same--]  revised
22-Dec-13 om2uzf1oi [--same--]  revised
22-Dec-13 om2uzrani [--same--]  revised
22-Dec-13 om2uzlt2i [--same--]  revised
22-Dec-13 om2uzlti  [--same--]  revised
22-Dec-13 om2uzuzi  [--same--]  revised
22-Dec-13 om2uzsuci [--same--]  revised
22-Dec-13 om2uz0i   [--same--]  revised
22-Dec-13 df-fz     [--same--]  revised
22-Dec-13 df-uz     [--same--]  revised
22-Dec-13 df-icc    [--same--]  revised
22-Dec-13 df-ico    [--same--]  revised
22-Dec-13 df-ioc    [--same--]  revised
22-Dec-13 df-ioo    [--same--]  revised
22-Dec-13 df-mod    [--same--]  revised
22-Dec-13 df-fl     [--same--]  revised
22-Dec-13 df-div    [--same--]  revised
22-Dec-13 df-sub    [--same--]  revised
22-Dec-13 cflim     cflm
22-Dec-13 cffnon    cff         revised
22-Dec-13 df-cda    [--same--]  revised
22-Dec-13 alephlim  [--same--]  changed variable names
22-Dec-13 df-cf     [--same--]  revised
22-Dec-13 df-aleph  [--same--]  revised
22-Dec-13 df-card   [--same--]  revised
22-Dec-13 df-rank   [--same--]  revised
22-Dec-13 df-r1     [--same--]  revised
22-Dec-13 abfii5    ---         deleted; use dffi2
22-Dec-13 abfii4    ---         deleted; use dffi2
22-Dec-13 abfii3    ---         deleted; use dffi2
22-Dec-13 abfii2    ---         deleted; use dffi2
22-Dec-13 abfii1    ---         deleted; use dffi2
22-Dec-13 df-pm     [--same--]  revised
22-Dec-13 df-map    [--same--]  revised
22-Dec-13 oev2      [--same--]  revised
22-Dec-13 df-oexp   [--same--]  revised
22-Dec-13 df-omul   [--same--]  revised
22-Dec-13 df-oadd   [--same--]  revised
22-Dec-13 frsucmpt2 ---         deleted
22-Dec-13 frsucopab ---         deleted
22-Dec-13 rdglimi   ---         deleted
22-Dec-13 rdgsuci   ---         deleted
22-Dec-13 rdgval    [--same--]  revised
22-Dec-13 rdglem2   ---         deleted
22-Dec-13 dfrdg2    ---         deleted
22-Dec-13 df-rdg    [--same--]  revised
22-Dec-13 tz7.44-3  [--same--]  revised
22-Dec-13 tz7.44-2  [--same--]  revised
22-Dec-13 tz7.44-1  [--same--]  revised
22-Dec-13 foprab2a  [--same--]  revised
22-Dec-13 df-2nd    [--same--]  revised
22-Dec-13 df-1st    [--same--]  revised
22-Dec-13 resmpt2   resmpt
22-Dec-13 mpteq2dvaf mpteq2da
22-Dec-13 mpteqi    mpteq12i
22-Dec-13 oprabval2gfOLD ---    deleted
22-Dec-13 oprabval2gf ---       deleted
22-Dec-13 oprabval2gfNEW oprabval2gf revised
22-Dec-13 oprabvali ---         deleted
22-Dec-13 oprabvaligg [--same--] revised
22-Dec-13 oprabvalig [--same--] revised
25-Nov-13 eq2ab     ---         obsolete; use abbi instead
14-Nov-13 sb19.21   sbrim
11-Nov-13 alrot3    [--same--]  moved from ATS's mathbox to main set.mm
11-Nov-13 pm11.53   [--same--]  moved from ATS's mathbox to main set.mm
 4-Nov-13 ispos     [--same--]  removed nonempty base set requirement
 4-Nov-13 df-poset  [--same--]  removed nonempty base set requirement
17-Oct-13 mpt2eqdv  mpt2eqdva
17-Oct-13 mpt2eqdvg mpt2eqdvaf  moved from FL's mathbox to main set.mm
 6-Oct-13 ipid      ipidsq
 5-Oct-13 plusgval  ---         obsolete; use grpplusg
 5-Oct-13 divrngmgrp [--same--] eliminated hard-coded structure indices
 5-Oct-13 divrngid  [--same--]  eliminated hard-coded structure indices
 5-Oct-13 divrngidlem [--same--] eliminated hard-coded structure indices
 5-Oct-13 invrfval  [--same--]  eliminated hard-coded structure indices
 5-Oct-13 divrngid  [--same--]  eliminated hard-coded structure indices
 5-Oct-13 divrngidlem [--same--] eliminated hard-coded structure indices
 5-Oct-13 divrngmgrp [--same--] eliminated hard-coded structure indices
 5-Oct-13 isdivrng  [--same--]  eliminated hard-coded structure indices
 5-Oct-13 df-drng   [--same--]  eliminated hard-coded structure indices
 5-Oct-13 ndxargi   ndxarg
 5-Oct-13 strcval   strfvn
 3-Oct-13 ringmulr  rngmulr     eliminated unnecessary hypotheses
 3-Oct-13 ringplusg rngplusg    eliminated unnecessary hypotheses
 3-Oct-13 ringbase  rngbase     eliminated unnecessary hypotheses
 3-Oct-13 grpplusgg ---         obsolete; use grpplusg
 3-Oct-13 grpbaseg  ---         obsolete; use grpbase
 3-Oct-13 grpplusg  [--same--]  eliminated unnecessary antecedent
 3-Oct-13 grpbase   [--same--]  eliminated unnecessary antecedent
 3-Oct-13 str3v3    ---         obsolete; use strfv
 3-Oct-13 str3v2    ---         obsolete; use strfv
 3-Oct-13 str3v1    ---         obsolete; use strfv
 3-Oct-13 str2v2    ---         obsolete; use strfv
 3-Oct-13 str2v1    ---         obsolete; use strfv
 3-Oct-13 str3v3x   ---         obsolete; use strfv
 3-Oct-13 str3v2x   ---         obsolete; use strfv
 3-Oct-13 str3v1x   ---         obsolete; use strfv
 3-Oct-13 str2v2x   ---         obsolete; use strfv
 3-Oct-13 str2v1x   ---         obsolete; use strfv
 3-Oct-12 tpshyp    ---         obsolete; use tpslem
 3-Oct-13 ringhyp   ---         obsolete; use rnglem
 3-Oct-13 grphyp    ---         obsolete; use grplem
 3-Oct-13 poshyp    ---         obsolete; use poslem
 3-Oct-13 poslem    posi
 2-Oct-13 isfinite  ---         obsolete; use isfinite3
 1-Oct-13 ressnop0  [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fvtp3     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fvtp2     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fvtp1     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fvpr2     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fvpr1     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fntp      [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 fnprg     [--same--]  eliminated unnecessary antecedents
 1-Oct-13 fnsn      [--same--]  eliminated unnecessary hypothesis
 1-Oct-13 funtp     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 funpr     [--same--]  eliminated unnecessary hypotheses
 1-Oct-13 funprg    [--same--]  eliminated unnecessary antecedents
 1-Oct-13 funsng    [--same--]  eliminated unnecessary antecedent
 1-Oct-13 funsn     [--same--]  eliminated unnecessary hypothesis
30-Sep-13 ltneii    [--same--]  swapped conclusion vars for ltnei compatibility
25-Sep-13 2nalexn   [--same--]  moved from ATS's mathbox to main set.mm
25-Sep-13 2exnexn   [--same--]  moved from ATS's mathbox to main set.mm
24-Sep-13 supeq2    [--same--]  moved from JM's mathbox to main set.mm
24-Sep-13 ixpfi     [--same--]  moved from JM's mathbox to main set.mm
24-Sep-13 mapfi     [--same--]  moved from JM's mathbox to main set.mm
24-Sep-13 enf1f1o   fienf1f1o   moved from JM's mathbox to main set.mm
24-Sep-13 nnaun2    ficardun2
24-Sep-13 nnaun     ficardun
24-Sep-13 relsn     relsnop
24-Sep-13 difdisj   disjdif
20-Sep-13 imdistanda [--same--] moved from JM's mathbox to main set.mm
20-Sep-13 rnoprab2  [--same--]  moved from SF's mathbox to main set.mm
20-Sep-13 eqfunfv   [--same--]  moved from SF's mathbox to main set.mm
20-Sep-13 pm5.21ndd [--same--]  moved from PC's mathbox to main set.mm
20-Sep-13 div2neg   [--same--]  moved from PC's mathbox to main set.mm
16-Sep-13 oprabexd  [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 fsum00    [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 fzdisj    [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 fzsplit   [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 fzn0      [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 fz10      [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 addsubeq4 [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 add20     [--same--]  moved from JM's mathbox to main set.mm
16-Sep-13 f1elima   [--same--]  moved from JM's mathbox to main set.mm
15-Sep-13 hashpw    [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashpwlem [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashxp    [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashxplem [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashunsng [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashun    [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 hashgadd  [--same--]  moved from PC's mathbox to main set.mm
15-Sep-13 2ne3      ---         obsolete (use 2lt3 + ltneii instead)
15-Sep-13 1ne9      ---         obsolete (use 1lt9 + ltneii instead)
15-Sep-13 1ne3      ---         obsolete (use 1lt3 + ltneii instead)
10-Sep-13 exp5c     [--same--]  moved from JGH's mathbox to main set.mm
10-Sep-13 snelpwr   snelpwi     moved from AS's mathbox to main set.mm
 8-Sep-13 df-exp    [--same--]  revised definition
 8-Sep-13 df-fac    [--same--]  revised definition
 8-Sep-13 df-seq0   [--same--]  revised definition
 8-Sep-13 df-seq1   [--same--]  revised definition
 8-Sep-13 df-seqz   [--same--]  revised definition
 8-Sep-13 df-sqr    [--same--]  revised definition
 8-Sep-13 expval    [--same--]  revised theorem statement
 8-Sep-13 facnn     [--same--]  revised theorem statement
 8-Sep-13 fzp1ss    [--same--]  revised theorem statement
 8-Sep-13 fzss1     [--same--]  revised theorem statement
 8-Sep-13 fzss2     [--same--]  revised theorem statement
 8-Sep-13 fzssp1    [--same--]  revised theorem statement
 8-Sep-13 om2uzf1oi [--same--]  revised theorem statement
 8-Sep-13 om2uzisoi [--same--]  revised theorem statement
 8-Sep-13 om2uzrani [--same--]  revised theorem statement
 8-Sep-13 om2uzuzi  [--same--]  revised theorem statement
 8-Sep-13 seq0fval  [--same--]  revised theorem statement
 8-Sep-13 seqzfval  [--same--]  revised theorem statement
 8-Sep-13 sqrlem1   [--same--]  revised theorem statement
 8-Sep-13 sqrlem2   [--same--]  revised theorem statement
 8-Sep-13 sqrlem3   [--same--]  revised theorem statement
 8-Sep-13 sqrlem4   [--same--]  revised theorem statement
 8-Sep-13 sqrlem5   [--same--]  revised theorem statement
 8-Sep-13 sqrlem6   [--same--]  revised theorem statement
 8-Sep-13 sqrlem7   [--same--]  revised theorem statement
 8-Sep-13 sqrval    [--same--]  revised theorem statement
 8-Sep-13 uzrdgsuci [--same--]  revised theorem statement
 8-Sep-13 sqrcl     resqrcl     (new sqrcl is complex version)
 8-Sep-13 dfseq0    ---         obsolete
 8-Sep-13 expnnval  ---         obsolete
 8-Sep-13 seq0valt  ---         obsolete
 8-Sep-13 seq11lem  ---         obsolete
 8-Sep-13 seq1fnlem ---         obsolete
 8-Sep-13 seq1lem1  ---         obsolete
 8-Sep-13 seq1rval  ---         obsolete
 8-Sep-13 seq1seq0  ---         obsolete
 8-Sep-13 seq1seq01 ---         obsolete
 8-Sep-13 seq1seq02 ---         obsolete
 8-Sep-13 seq1suclem ---        obsolete
 8-Sep-13 seq1val   ---         obsolete
 8-Sep-13 seq1val2  ---         obsolete
 8-Sep-13 seqzfval2 ---         obsolete
 8-Sep-13 seqzval   ---         obsolete
 8-Sep-13 seqzval2  ---         obsolete
 8-Sep-13 ---       ---         sqrlem10 - sqrlem24 and sqrlem26 obsolete
 8-Sep-13 sqrlem8   ---         obsolete
 8-Sep-13 sqrlem9   ---         obsolete
 8-Sep-13 uzrdgfnuzi ---        obsolete
 8-Sep-13 uzrdginii ---         obsolete
 8-Sep-13 uzrdginip1i ---       obsolete
 8-Sep-13 uzrdgvali ---         obsolete
 8-Sep-13 ---       ---         math token "seq" changed to "seqz"
 2-Sep-13 ltfrn     [--same--]  revised theorem statement
 2-Sep-13 ltfrn     [--same--]  moved from ATS's mathbox to main set.mm
 2-Sep-13 eluzsub   [--same--]  moved from JM's mathbox to main set.mm
 2-Sep-13 eluzadd   [--same--]  moved from JM's mathbox to main set.mm
 2-Sep-13 rdgeq12   [--same--]  moved from SF's mathbox to main set.mm
 1-Sep-13 raffsp    craffsp     (in FL's mathbox)
 1-Sep-13 ptdfc     cptdfc      (in ATS's mathbox)
 1-Sep-13 rr3c      crr3c       (in ATS's mathbox)
 1-Sep-13 psc       cpsc        (in NM's mathbox)
 1-Sep-13 wgcdOLD   cgcdOLD     (in JH's mathbox)
 1-Sep-13 plusrc    cplusr      (in ATS's mathbox)
 1-Sep-13 minusrc   cminusr     (in ATS's mathbox)
 1-Sep-13 timesrc   ctimesr     (in ATS's mathbox)
 1-Sep-13 csmo      wsmo
 1-Sep-13 syn-bnj17 w-bnj17     (in JBN's mathbox)
 1-Sep-13 syn-bnj16 c-bnj16     (in JBN's mathbox)
 1-Sep-13 syn-bnj14 c-bnj14     (in JBN's mathbox)
 1-Sep-13 syn-bnj13 w-bnj13     (in JBN's mathbox)
 1-Sep-13 syn-bnj15 w-bnj15     (in JBN's mathbox)
 1-Sep-13 syn-bnj18 c-bnj18     (in JBN's mathbox)
 1-Sep-13 syn-bnj19 w-bnj19     (in JBN's mathbox)
 1-Sep-13 vd1       wvd1        (in AS's mathbox)
 1-Sep-13 vd2       wvd2        (in AS's mathbox)
 1-Sep-13 vd3       wvd3        (in AS's mathbox)
31-Aug-13 trcl-df   df-trcl     (in FL's mathbox)
31-Aug-13 rtrcl-df  df-rtrcl    (in FL's mathbox)
31-Aug-13 orHom-df  df-orHom    (in FL's mathbox)
31-Aug-13 orIso-df  df-orIso    (in FL's mathbox)
31-Aug-13 decfun-df df-decfun   (in FL's mathbox)
31-Aug-13 expsg-df  df-expsg    (in FL's mathbox)
29-Aug-13 clsbldneg notab       moved from FL's mathbox to main set.mm
18-Aug-13 oprabval2gf [--same--] added bound var hypotheses
10-Aug-13 vtocl2gf  [--same--]  added bound var hypotheses
 7-Aug-13 ringidval [--same--]  changed iota to iota_
 7-Aug-13 df-1r     [--same--]  changed iota to iota_
 7-Aug-13 grpidcl   [--same--]  changed variable names
 7-Aug-13 grpid     [--same--]  changed variable names
 7-Aug-13 grpinveu  [--same--]  changed variable names
 7-Aug-13 grpinvid  [--same--]  changed variable names
 7-Aug-13 grpinvid2 [--same--]  changed variable names
 7-Aug-13 grpinvid1 [--same--]  changed variable names
 7-Aug-13 grprinv   [--same--]  changed variable names
 7-Aug-13 grplinv   [--same--]  changed variable names
 7-Aug-13 grpinv    [--same--]  changed variable names
 7-Aug-13 grpinvval [--same--]  changed iota to iota_
 7-Aug-13 grpinvfval [--same--] changed iota to iota_
 7-Aug-13 df-minusg [--same--]  changed iota to iota_
 7-Aug-13 grprid    [--same--]  changed variable names
 7-Aug-13 grplid    [--same--]  changed variable names
 7-Aug-13 grpidinv2 [--same--]  changed variable names
 7-Aug-13 grpidval  [--same--]  changed iota to iota_
 7-Aug-13 df-0g     [--same--]  changed iota to iota_
 6-Aug-13 isabld    isablod     (in JM's mathbox)
 2-Aug-13 isringd   isringod    (in JM's mathbox)
30-Jul-13 riemtn    mptresid    moved from FL's mathbox to main set.mm
30-Jul-13 riecb     opabresid   moved from FL's mathbox to main set.mm
25-Jul-13 sbcne12g  [--same--]  moved from ATS's mathbox to main set.mm
25-Jul-13 sbcnel12g [--same--]  moved from ATS's mathbox to main set.mm
17-Jul-13 fvopab4s  [--same--]  eliminated redundant hypothesis
30-Jun-13 bnj1263   syl5sseqr   moved from JBN's mathbox to main set.mm
30-Jun-13 bnj1264   syl5sseq    moved from JBN's mathbox to main set.mm
30-Jun-13 bnj1141   syl6ss      moved from JBN's mathbox to main set.mm
24-Jun-13 onsubcum  onssr1      moved from FL's mathbox to main set.mm
21-Jun-13 19.40-2   [--same--]  moved from ATS's mathbox to main set.mm
21-Jun-13 hbxfr     hbxfreq
21-Jun-13 ssopab2   ssopab2b
18-Jun-13 boe       enpr1g      moved from FL's mathbox to main set.mm
18-Jun-13 unpde2eg2 pr2nelem    moved from FL's mathbox to main set.mm
18-Jun-13 unpde2eg22 pr2ne      moved from FL's mathbox to main set.mm
18-Jun-13 unpam2    prdom2      moved from FL's mathbox to main set.mm
18-Jun-13 uncum     r1tr2       moved from FL's mathbox to main set.mm
18-Jun-13 ctarski   ctsk        moved from FL's mathbox to main set.mm
18-Jun-13 cgruni    cgru        moved from FL's mathbox to main set.mm
18-Jun-13 df-tsk    [--same--]  moved from FL's mathbox to main set.mm
18-Jun-13 taralt    dftsk2      moved from FL's mathbox to main set.mm
18-Jun-13 tarval    eltsk       moved from FL's mathbox to main set.mm
18-Jun-13 tarvalg   eltskg      moved from FL's mathbox to main set.mm
18-Jun-13 tarval1   eltsk2      moved from FL's mathbox to main set.mm
18-Jun-13 tarval1g  eltsk2g     moved from FL's mathbox to main set.mm
18-Jun-13 tarax1    tskpwss     moved from FL's mathbox to main set.mm
18-Jun-13 tarax2    tskpw       moved from FL's mathbox to main set.mm
18-Jun-13 tarax3    tsken       moved from FL's mathbox to main set.mm
18-Jun-13 empistar  0tsk        moved from FL's mathbox to main set.mm
18-Jun-13 tarax3d2  tsksdom     moved from FL's mathbox to main set.mm
18-Jun-13 tarax3e   tskssel2    moved from FL's mathbox to main set.mm
18-Jun-13 tarax3f   tskssel     moved from FL's mathbox to main set.mm
18-Jun-13 tarsin    tsksn       moved from FL's mathbox to main set.mm
18-Jun-13 emptar    tsk0        moved from FL's mathbox to main set.mm
18-Jun-13 tarone    tsk1        moved from FL's mathbox to main set.mm
18-Jun-13 tartwo    tsk2        moved from FL's mathbox to main set.mm
18-Jun-13 tarmrtwo  2domtsk     moved from FL's mathbox to main set.mm
18-Jun-13 tarunpa   tskpr       moved from FL's mathbox to main set.mm
18-Jun-13 tarorpa   tskop       moved from FL's mathbox to main set.mm
18-Jun-13 tarcrpr   tskxpss     moved from FL's mathbox to main set.mm
18-Jun-13 ixpssmapg [--same--]  moved from JM's mathbox to main set.mm
18-Jun-13 bnj572    hbxfrbi     moved from JBN's mathbox to main set.mm
 5-Jun-13 isgrpd    isgrpod     (in JM's mathbox)
24-May-13 pm2.01bd  pm2.18d     moved from FL's mathbox to main set.mm
23-May-13 r19.3zvb  r19.3z      moved from FL's mathbox to main set.mm
22-May-13 son2lpi   [--same--]  eliminated redundant hypotheses
22-May-13 sotri     [--same--]  eliminated redundant hypotheses
22-May-13 soirri    [--same--]  eliminated redundant hypothesis
22-May-13 suprnubii [--same--]  eliminated redundant hypothesis
22-May-13 suprleubii [--same--]  eliminated redundant hypothesis
20-May-13 suprnub   [--same--]  eliminated redundant antecedent
20-May-13 suprleub  [--same--]  eliminated redundant antecedent
20-May-13 noinfep   [--same--]  eliminated redundant antecedent
18-May-13 pre-axlttri axpre-lttri
18-May-13 pre-axlttrn axpre-lttrn
18-May-13 pre-axltadd axpre-ltadd
18-May-13 pre-axmulgt0 axpre-mulgt0
18-May-13 pre-axsup  axpre-sup
16-May-13 3ne0      [--same--]  moved from FL's mathbox to main set.mm
16-May-13 3cn       [--same--]  moved from FL's mathbox to main set.mm
16-May-13 ltaddpos2tb ltaddrp   moved from FL's mathbox to main set.mm
16-May-13 ltsubpostb ltsubrp    moved from FL's mathbox to main set.mm
16-May-13 r19.26t   r19.26-3    moved from FL's mathbox to main set.mm
16-May-13 uzp1      [--same--]  moved from JM's mathbox to main set.mm
16-May-13 uzm1      [--same--]  moved from JM's mathbox to main set.mm
16-May-13 r1subsuc  r1sssuc     moved from FL's mathbox to main set.mm
15-May-13 impbidd   [--same--]  moved from RM's mathbox to main set.mm
26-Apr-13 domint    dmiin       moved from FL's mathbox to main set.mm
26-Apr-13 inpartelt iinss2      moved from FL's mathbox to main set.mm
25-Apr-13 ssiing    ssiinf      moved from FL's mathbox to main set.mm
24-Apr-13 cnvintcnv cnviin      moved from FL's mathbox to main set.mm
23-Apr-13 eqrelrivg eqrelriv    moved from FL's mathbox to main set.mm
23-Apr-13 eqrelriv  eqrelriiv
22-Apr-13 coeq12d   [--same--]  moved from FL's mathbox to main set.mm
21-Apr-13 coeq12i   [--same--]  moved from FL's mathbox to main set.mm
20-Apr-13 cexint2   iinexg      moved from FL's mathbox to main set.mm
19-Apr-13 fnimapr   [--same--]  moved from JM's mathbox to main set.mm
18-Apr-13 foco2     [--same--]  moved from JM's mathbox to main set.mm
17-Apr-13 pm11.07   [--same--]  moved from ATS's mathbox to main set.mm
16-Apr-13 rcla4t    [--same--]  moved from ATS's mathbox to main set.mm
15-Apr-13 cla4gft   [--same--]  moved from ATS's mathbox to main set.mm
14-Apr-13 isseta    issetf      moved from ATS's mathbox to main set.mm
12-Apr-13 orkurss   opid        moved from FL's mathbox to main set.mm
11-Apr-13 cmpinj    f1cocnv1    moved from FL's mathbox to main set.mm
11-Apr-13 cmpinj2   f1cocnv2    moved from FL's mathbox to main set.mm
10-Apr-13 cnvinj    f1cnv       moved from FL's mathbox to main set.mm
10-Apr-13 f1cnv     f1cnvcnv
 9-Apr-13 reltrncnv relcnvtr    moved from FL's mathbox to main set.mm
 9-Apr-13 fmptd     [--same--]  added "F =" hypothesis
 9-Apr-13 fnmpt     funmpt
 8-Apr-13 cnveq2    cnveqb      moved from FL's mathbox to main set.mm
 7-Apr-13 prnzg     [--same--]  moved from FL's mathbox to main set.mm
 6-Apr-13 resrelfld relresfld   moved from FL's mathbox to main set.mm
 5-Apr-13 cmprelid2 relcoi1     moved from FL's mathbox to main set.mm
 5-Apr-13 cmprelid1 relcoi2     moved from FL's mathbox to main set.mm
 5-Apr-13 inclrel   coss1       moved from FL's mathbox to main set.mm
 5-Apr-13 cmpdia    coires1     moved from FL's mathbox to main set.mm
 4-Apr-13 findcard2s [--same--]  moved from PC's mathbox to main set.mm
 3-Apr-13 prmexpb   [--same--]  moved from PC's mathbox to main set.mm
 3-Apr-13 prmdvdsexpb [--same--]  moved from PC's mathbox to main set.mm
 2-Apr-13 imimorb   [--same--]  moved from PC's mathbox to main set.mm
 1-Apr-13 ac6sg     [--same--]  antecedent now has V instead of _V
 1-Apr-13 clint3    ---         obsolete; use icccld instead
 1-Apr-13 clicls    icccld
 1-Apr-13 lemul2aALT ---        obsolete; use lemul2a instead
 1-Apr-13 cdrci     difreicc
 1-Apr-13 rabeq0    [--same--]  moved from JM's mathbox to main set.mm
31-Mar-13 difin2    [--same--]  moved from JM's mathbox to main set.mm
30-Mar-13 respreima [--same--]  moved from JM's mathbox to main set.mm
29-Mar-13 unpreima  [--same--]  moved from JM's mathbox to main set.mm
28-Mar-13 inpreima  [--same--]  moved from JM's mathbox to main set.mm
27-Mar-13 elpri     [--same--]  moved from SF's mathbox to main set.mm
26-Mar-13 indifdi   indifdir    moved from SF's mathbox to main set.mm
25-Mar-13 r19.30    [--same--]  moved from SF's mathbox to main set.mm
24-Mar-13 r19.21    [--same--]  moved from SF's mathbox to main set.mm
23-Mar-13 19.41vvvv [--same--]  moved from FL's mathbox to main set.mm
23-Mar-13 disjr     [--same--]  moved from JM's mathbox to main set.mm
22-Mar-13 smores2   smores3
22-Mar-13 soxp      [--same--]  changed hypotheses to antecedents
22-Mar-13 poxp      [--same--]  changed hypotheses to antecedents
22-Mar-13 frxp      [--same--]  changed hypotheses to antecedents
22-Mar-13 wexp      [--same--]  changed hypotheses to antecedents
22-Mar-13 soxp      [--same--]  moved from SF's mathbox to main set.mm
22-Mar-13 poxp      [--same--]  moved from SF's mathbox to main set.mm
22-Mar-13 frxp      [--same--]  moved from SF's mathbox to main set.mm
22-Mar-13 wexp      [--same--]  moved from SF's mathbox to main set.mm
22-Mar-13 mapdom1   [--same--]  removed redundant hypothesis
22-Mar-13 mapen     [--same--]  removed redundant hypotheses
22-Mar-13 mapsnen   [--same--]  removed redundant hypothesis
22-Mar-13 xpen      [--same--]  removed redundant hypotheses
22-Mar-13 xpeng     [--same--]  removed redundant antecedents
21-Mar-13 3reeanv   [--same--]  moved from JM's mathbox to main set.mm
20-Mar-13 rexrab    [--same--]  moved from JM's mathbox to main set.mm
19-Mar-13 ee01      mpsyl       moved from AS's mathbox to main set.mm
19-Mar-13 morex     [--same--]  moved from JM's mathbox to main set.mm
18-Mar-13 cbviota   [--same--]  moved from ATS's mathbox to main set.mm
18-Mar-13 cbviotaf  [--same--]  moved from ATS's mathbox to main set.mm
17-Mar-13 raleqfn   [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 xporderlem [--same--]  moved from SF's mathbox to main set.mm
16-Mar-13 3an6      [--same--]  moved from SF's mathbox to main set.mm
16-Mar-13 3or6      [--same--]  moved from SF's mathbox to main set.mm
16-Mar-13 elres     [--same--]  moved from SF's mathbox to main set.mm
16-Mar-13 elsnres   [--same--]  moved from SF's mathbox to main set.mm
16-Mar-13 issmo     [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smoeq     [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smodm     [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smores    [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smores3   [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 iordsmo   [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smo0      [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smofvon   [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smoel     [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smoiun    [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smoiso    [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 smoge     [--same--]  moved from ATS's mathbox to main set.mm
16-Mar-13 supeut    [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 fisup2g   [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 fimax2g   [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 wofi      [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 frfi      [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 pofun     [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 frminex   [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 xpeng     [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 fimax     [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 fimaxg    [--same--]  moved from JM's mathbox to main set.mm
16-Mar-13 fisupg    [--same--]  moved from JM's mathbox to main set.mm
15-Mar-13 trint0    [--same--]  moved from ATS's mathbox to main set.mm
15-Mar-13 ordintdif [--same--]  moved from ATS's mathbox to main set.mm
14-Mar-13 ne0f      n0f
 1-Mar-13 eupickbi  [--same--]  moved from ATS's mathbox to main set.mm
 1-Mar-13 dvelimfALT2 [--same--] moved from ATS's mathbox to main set.mm
 1-Mar-13 ax12      a12study2   moved from ATS's mathbox to main set.mm
24-Feb-13 sbceq2dig sbceq2g
24-Feb-13 sbceq1dig sbceq1g
24-Feb-13 sbceqdig  sbceqg
24-Feb-13 sbcbidig  sbcbig
21-Feb-13 ---       ---         See http://us.metamath.org/mpegif/mmnotes.txt
21-Feb-13 ---       ---         entry of 21-Feb-13 for instructions for
21-Feb-13 ---       ---         the changes below.
21-Feb-13 sylan     [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanb    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanbr   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylan2    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylan2b   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylan2br  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl2an    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl2anb   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl2anbr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syland    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylan2d   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl2and   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanl1   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanl2   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanr1   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanr2   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylani    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylan2i   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl2ani   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylancl   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylancr   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylanbrc  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylancb   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 sylancbr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an1   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an2   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an3   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an1b  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an2b  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an3b  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an1br [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an2br [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an3br [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3an    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anb   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anbr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syld3an3  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syld3an1  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syld3an2  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anl1  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anl2  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anl3  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anl   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anr1  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anr2  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl3anr3  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5com   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5      [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5d     [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5ib    syl5bi      reordered hypotheses for better logical flow
21-Feb-13 syl5ibr   syl5bir     reordered hypotheses for better logical flow
21-Feb-13 syl5bi    syl5ib      reordered hypotheses for better logical flow
21-Feb-13 syl5cbi   syl5ibcom   reordered hypotheses for better logical flow
21-Feb-13 syl5bir   syl5ibr     reordered hypotheses for better logical flow
21-Feb-13 syl5cbir  syl5ibrcom  reordered hypotheses for better logical flow
21-Feb-13 syl5bb    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5rbb   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5bbr   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5rbbr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eq    [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5req   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eqr   [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5reqr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eqel  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eqelr [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eleq  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eleqr [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eqner [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5ss    syl5eqss    reordered hypotheses for better logical flow
21-Feb-13 syl5ssr   syl5eqssr   reordered hypotheses for better logical flow
21-Feb-13 syl5eqbr  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5eqbrr [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5breq  [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl5breqr [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl7      [--same--]  reordered hypotheses for better logical flow
21-Feb-13 syl7ib    syl7bi      reordered hypotheses for better logical flow
21-Feb-13 syl6ss    syl6sseq
21-Feb-13 syl6ssr   syl6sseqr
19-Feb-13 fv4       fv4         moved from ATS's mathbox to main set.mm
11-Feb-13 fvopab2b  fvmpt2      moved from FL's mathbox to main set.mm
11-Feb-13 isfinite3 [--same--]  moved from FL's mathbox to main set.mm
 4-Feb-13 remcon    difabs      moved from FL's mathbox to main set.mm
 4-Feb-13 foelrn    [--same--]  moved from JM's mathbox to main set.mm
 4-Feb-13 xpeq2d    [--same--]  moved from JM's mathbox to main set.mm
 4-Feb-13 xpeq1d    [--same--]  moved from JM's mathbox to main set.mm
31-Jan-13 opabex3   [--same--]  moved from JM's mathbox to main set.mm
31-Jan-13 ressn0    ressnop0    moved from SF's mathbox to main set.mm
31-Jan-13 valfunun  fvun        moved from FL's mathbox to main set.mm
20-Jan-13 sucdomi   ---         obsolete; use sucdom instead
20-Jan-13 omsucdom  ---         obsolete; use sucdom instead
20-Jan-13 fisucdom  ---         obsolete; use sucdom instead
20-Jan-13 cardennn  [--same--]  eliminated redundant antecedent
20-Jan-13 oncardon  ---         obsolete; use cardon instead
20-Jan-13 weth      [--same--]  made hypothesis into antecedent
20-Jan-13 tz7.49    [--same--]  changed hypotheses
20-Jan-13 tz7.49c   [--same--]  changed hypotheses
20-Jan-13 r19.23aivr r19.23aivw  moved from FL's mathbox to main set.mm
 4-Jan-13 mul23     mul32
 4-Jan-13 mul23i    mul32i
 4-Jan-13 add23     add32
 4-Jan-13 add23i    add32i
 4-Jan-13 cbvralcsf [--same--]  moved from ATS's mathbox to main set.mm
 4-Jan-13 cbvrexcsf [--same--]  moved from ATS's mathbox to main set.mm
 4-Jan-13 cbvreucsf [--same--]  moved from ATS's mathbox to main set.mm
 4-Jan-13 cbvrabcsf [--same--]  moved from ATS's mathbox to main set.mm
 3-Jan-13 ax0id     addid1
 3-Jan-13 ax1id     mulid1
10-Dec-12 elimant   ---         obsolete (renamed elimantOLD, to be deleted)
 1-Dec-12 fixp      xpfi
 1-Dec-12 xpfi      xpfir
 1-Dec-12 finsucdom fisucdom
 1-Dec-12 setwoe    en1eqsn
 1-Dec-12 sfseqeq   fisseneq
 1-Dec-12 islfin    difinf
 1-Dec-12 unfin     unfir
 1-Dec-12 finfin    diffi
 1-Dec-12 twpar2    uneqdifeq
 1-Dec-12 findcard2 [--same--]  moved from JM's mathbox to main set.mm
27-Nov-12 an1s      an12s
27-Nov-12 an1rs     an32s
27-Nov-12 ancom13s  an13s
27-Nov-12 ancom31s  an31s
19-Nov-12 ee11      ---         obsolete; same as sylc
17-Nov-12 seq11g    [--same--]  moved from JM's mathbox to main set.mm
17-Nov-12 seq1p1g   [--same--]  moved from JM's mathbox to main set.mm
17-Nov-12 seqz1g    [--same--]  moved from JM's mathbox to main set.mm
17-Nov-12 seqzp1g   [--same--]  moved from JM's mathbox to main set.mm
17-Nov-12 seq1seqzg [--same--]  moved from JM's mathbox to main set.mm
16-Nov-12 ordelordaxr ordelordALT
12-Nov-12 funimadisj fnimadisj
 4-Nov-12 ---       ---         math token "0vNEW" changed to "0v"
 4-Nov-12 ---       ---         math token "0v" changed to "0vec"
 4-Nov-12 ---       ---         math token "1rNEW" changed to "1r"
 4-Nov-12 ---       ---         math token "TopSet" changed to "TopOpen"
 4-Nov-12 ---       ---         math token "Toset" changed to "TosetRel"
 4-Nov-12 ---       ---         math token "Dir" changed to "DirRel"
 4-Nov-12 ---       ---         math token "LatNEW" changed to "Lat"
 4-Nov-12 ---       ---         math token "Lat" changed to "LatRel"
 4-Nov-12 ---       ---         math token "PosetNEW" changed to "Poset"
 4-Nov-12 ---       ---         math token "Poset" changed to "PosetRel"
 4-Nov-12 ---       ---         math token "DivRingNEW" changed to "DivRing"
 4-Nov-12 ---       ---         math token "DivRing" changed to "DivRingOps"
 4-Nov-12 ---       ---         math token "RingNEW" changed to "Ring"
 4-Nov-12 ---       ---         math token "Ring" changed to "RingOps"
 4-Nov-12 ---       ---         math token "SubGrp" changed to "SubGrpOp"
 4-Nov-12 ---       ---         math token "AbelNEW" changed to "Abel"
 4-Nov-12 ---       ---         math token "Abel" changed to "AbelOp"
 4-Nov-12 ---       ---         math token "GrpNEW" changed to "Grp"
 4-Nov-12 ---       ---         math token "Grp" changed to "GrpOp"
 4-Nov-12 ---       ---         math token "Open" changed to "MetOpen"
 4-Nov-12 grpNEW2grp grp2grpo
 4-Nov-12 grpNEWstr grpstr
 4-Nov-12 grpNEWprop grpprop
 4-Nov-12 grp2grpNEW grp2grp
 4-Nov-12 postrNEW  postr
 4-Nov-12 isdivrngNEW isdivrng
 4-Nov-12 df-drngNEW df-drng
 4-Nov-12 cdivringNEW cdivring
 4-Nov-12 ringrzNEW ringrz
 4-Nov-12 ringlzNEW ringlz
 4-Nov-12 ringridmNEW ringridm
 4-Nov-12 ringlidmNEW ringlidm
 4-Nov-12 ringidmlemNEW ringidmlem
 4-Nov-12 ringgrpNEW ringgrp
 4-Nov-12 ringablNEW ringabl
 4-Nov-12 ringdirNEW ringdir
 4-Nov-12 ringdiNEW ringdi
 4-Nov-12 ringideuNEW ringideu
 4-Nov-12 ringassNEW ringass
 4-Nov-12 ringclNEW ringcl
 4-Nov-12 ringiNEW  ringi
 4-Nov-12 isringNEW isring
 4-Nov-12 cnaddablNEW cnaddabl
 4-Nov-12 ablcomNEW ablcom
 4-Nov-12 ablgrpNEW ablgrp
 4-Nov-12 isabliNEW isabli
 4-Nov-12 isablNEW  isabl
 4-Nov-12 grplcanNEW grplcan
 4-Nov-12 grpinvidNEW grpinvid
 4-Nov-12 grpinvid2NEW grpinvid2
 4-Nov-12 grpinvid1NEW grpinvid1
 4-Nov-12 grprinvNEW grprinv
 4-Nov-12 grplinvNEW grplinv
 4-Nov-12 grpinvNEW grpinv
 4-Nov-12 grpinvclNEW grpinvcl
 4-Nov-12 grpinvvalNEW grpinvval
 4-Nov-12 grpinvfvalNEW grpinvfval
 4-Nov-12 grpidNEW  grpid
 4-Nov-12 grpinveuNEW grpinveu
 4-Nov-12 grprcanNEW grprcan
 4-Nov-12 grpridNEW grprid
 4-Nov-12 grplidNEW grplid
 4-Nov-12 grpidinv2NEW grpidinv2
 4-Nov-12 grpidclNEW grpidcl
 4-Nov-12 grpidvalNEW grpidval
 4-Nov-12 isgrpiNEW isgrpi
 4-Nov-12 grpn0NEW  grpn0
 4-Nov-12 grpideuNEW grpideu
 4-Nov-12 grpidinvNEW grpidinv
 4-Nov-12 grpidinvlem4NEW grpidinvlem4
 4-Nov-12 grpidinvlem3NEW grpidinvlem3
 4-Nov-12 grpidinvlem2NEW grpidinvlem2
 4-Nov-12 grpidinvlem1NEW grpidinvlem1
 4-Nov-12 grplidinvNEW grplidinv
 4-Nov-12 grpassNEW grpass
 4-Nov-12 grpclNEW  grpcl
 4-Nov-12 elgrpNEW  elgrp
 4-Nov-12 isgrp2NEW isgrp2
 4-Nov-12 isgrpNEW  isgrp
 4-Nov-12 df-ringNEW df-ring
 4-Nov-12 df-ablNEW df-abl
 4-Nov-12 df-grpNEW df-grp
 4-Nov-12 crgNEW    crg
 4-Nov-12 cabelNEW  cabel
 4-Nov-12 cgrpNEW   cgrp
 4-Nov-12 postr     posreltr
 4-Nov-12 isdivrng  isdivrngo
 4-Nov-12 df-drng   df-drngo
 4-Nov-12 ringrz    ringorz
 4-Nov-12 ringlz    ringolz
 4-Nov-12 ringridm  ringoridm
 4-Nov-12 ringlidm  ringolidm
 4-Nov-12 ringidmlem ringoidmlem
 4-Nov-12 ringgrp   ringogrpo
 4-Nov-12 ringabl   ringoablo
 4-Nov-12 ringdir   ringodir
 4-Nov-12 ringdi    ringodi
 4-Nov-12 ringideu  ringoideu
 4-Nov-12 ringass   ringoass
 4-Nov-12 ringcl    ringocl
 4-Nov-12 ringi     ringoi
 4-Nov-12 isring    isringo
 4-Nov-12 cnaddabl  cnaddablo
 4-Nov-12 ablcom    ablocom
 4-Nov-12 ablgrp    ablogrpo
 4-Nov-12 isabli    isabloi
 4-Nov-12 isabl     isablo
 4-Nov-12 grplcan   grpolcan
 4-Nov-12 grpinvid  grpoinvid
 4-Nov-12 grpinvid2 grpoinvid2
 4-Nov-12 grpinvid1 grpoinvid1
 4-Nov-12 grprinv   grporinv
 4-Nov-12 grplinv   grpolinv
 4-Nov-12 grpinv    grpoinv
 4-Nov-12 grpinvcl  grpoinvcl
 4-Nov-12 grpinvval grpoinvval
 4-Nov-12 grpinvfval grpoinvfval
 4-Nov-12 grpid     grpoid
 4-Nov-12 grpinveu  grpoinveu
 4-Nov-12 grprcan   grporcan
 4-Nov-12 grprid    grporid
 4-Nov-12 grplid    grpolid
 4-Nov-12 grpidinv2 grpoidinv2
 4-Nov-12 grpidcl   grpoidcl
 4-Nov-12 grpidval  grpoidval
 4-Nov-12 isgrpi    isgrpoi
 4-Nov-12 grpn0     grpon0
 4-Nov-12 grpideu   grpoideu
 4-Nov-12 grpidinv  grpoidinv
 4-Nov-12 grpidinvlem4 grpoidinvlem4
 4-Nov-12 grpidinvlem3 grpoidinvlem3
 4-Nov-12 grpidinvlem2 grpoidinvlem2
 4-Nov-12 grpidinvlem1 grpoidinvlem1
 4-Nov-12 grplidinv grpolidinv
 4-Nov-12 grpass    grpoass
 4-Nov-12 grpcl     grpocl
 4-Nov-12 isgrp2    isgrpo2
 4-Nov-12 isgrp     isgrpo
 4-Nov-12 df-ring   df-ringo
 4-Nov-12 df-abl    df-ablo
 4-Nov-12 df-grp    df-grpo
 4-Nov-12 1r        1sr
29-Oct-12 ralimdvaa ralimdva
28-Oct-12 mptfn     mptfng
26-Oct-12 raleqi    [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 fneq12d   [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 feq23i    [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 reseq2i   [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 reseq2d   [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 ifbieq2d  [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 supeq1d   [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 supeq1i   [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 emfin     0fin        moved from PC's mathbox to main set.mm
26-Oct-12 fz1n      [--same--]  moved from PC's mathbox to main set.mm
26-Oct-12 nn0lt10b  [--same--]  moved from PC's mathbox to main set.mm
25-Oct-12 fnoprab2ga [--same--]  moved from FL's mathbox to main set.mm
25-Oct-12 fnoprab2a [--same--]  moved from FL's mathbox to main set.mm
25-Oct-12 dmoprab2a [--same--]  moved from FL's mathbox to main set.mm
25-Oct-12 foprab2a  [--same--]  moved from FL's mathbox to main set.mm
25-Oct-12 oprabval2ga [--same--]  moved from FL's mathbox to main set.mm
25-Oct-12 oprabex2ga [--same--]  moved from FL's mathbox to main set.mm
22-Oct-12 ---       ---         math token "Bases" was changed to "TopBases"
21-Oct-12 stoi      [--same--]  converted to new structure scheme
21-Oct-12 topgele   [--same--]  converted to new structure scheme
21-Oct-12 subtopsin2 [--same--] converted to new structure scheme
21-Oct-12 topindis  [--same--]  converted to new structure scheme
21-Oct-12 subsptop    [--same--]  converted to new structure scheme
21-Oct-12 subspuni    [--same--]  converted to new structure scheme
21-Oct-12 stoig     [--same--]  converted to new structure scheme
21-Oct-12 stoiglem  [--same--]  converted to new structure scheme
20-Oct-12 retps     [--same--]  converted to new structure scheme
20-Oct-12 distps    [--same--]  converted to new structure scheme
20-Oct-12 indistps  [--same--]  converted to new structure scheme
20-Oct-12 istps5    [--same--]  converted to new structure scheme
20-Oct-12 istps4    [--same--]  converted to new structure scheme
20-Oct-12 istps3    [--same--]  converted to new structure scheme
20-Oct-12 istps2    [--same--]  converted to new structure scheme
20-Oct-12 istps     [--same--]  converted to new structure scheme
20-Oct-12 tpsex     ---         obsolete
20-Oct-12 istps     [--same--]  converted to new structure scheme
20-Oct-12 df-topsp  [--same--]  converted to new structure scheme
20-Oct-12 subsp2    subsp       moved from FL's mathbox to main set.mm
20-Oct-12 subsp     subspi
19-Oct-12 mpteqi    [--same--]  moved from SF's mathbox to main set.mm
19-Oct-12 mpteq2dva  [--same--]  moved from FL's mathbox to main set.mm
19-Oct-12 empntop   0ntop       moved from FL's mathbox to main set.mm
19-Oct-12 mp4an     [--same--]  moved from JM's mathbox to main set.mm
18-Oct-12 df-struct ---         obsolete; affected theorems reproved
18-Oct-12 df-strbldr ---        obsolete; affected theorems reproved
15-Oct-12 cbviin    [--same--]  moved from JGH's mathbox to main set.mm
15-Oct-12 cbviinv   [--same--]  moved from JGH's mathbox to main set.mm
15-Oct-12 txtopi    [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 txunii    [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 euuni2    [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 difxp     [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 unopn     [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 incld     [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 txopn     [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 txcld     [--same--]  moved from JM's mathbox to main set.mm
15-Oct-12 opnnei    [--same--]  moved from JGH's mathbox to main set.mm
 7-Oct-12 3ioran    [--same--]  moved from SF's mathbox to main set.mm
27-Aug-12 in23      in32
21-Jul-12 simplim   [--same--]  unnecessary negation removed
20-Jul-12 ---       ---         math token "base" was changed to "Base"
25-Jun-12 nelne     nelne1
24-Jun-12 an23      an32
22-Mar-12 simplld   simpld
21-May-12 fiss      [--same--]  moved from JGH's mathbox to main set.mm
21-May-12 inficlALT [--same--]  moved from JGH's mathbox to main set.mm
21-May-12 fitop     [--same--]  moved from JGH's mathbox to main set.mm
21-May-12 abrexex2g [--same--]  moved from JM's mathbox to main set.mm
16-Apr-12 rexcom4a  [--same--]  moved from JM's mathbox to main set.mm
16-Apr-12 rexcom4b  [--same--]  moved from JM's mathbox to main set.mm
16-Apr-12 eqfnfv3   [--same--]  moved from JM's mathbox to main set.mm
16-Apr-12 fibas     [--same--]  moved from JGH's mathbox to main set.mm
16-Apr-12 indexfi   [--same--]  moved from JM's mathbox to main set.mm
16-Apr-12 fipreima  [--same--]  moved from JM's mathbox to main set.mm
14-Apr-12 int2rel   brin
12-Apr-12 dif2rel   brdif       moved from SF's mathbox to main set.mm
25-Mar-12 syl3an2c  syl13anc    old hypothesis 1 is now hypothesis 5
25-Mar-12 syl3anc   syl111anc   old hypothesis 1 is now hypothesis 4
22-Mar-12 sylc      [--same--]  old hypothesis 1 is now hypothesis 4
22-Mar-12 sylanc    syl11anc    old hypothesis 1 is now hypothesis 4
22-Mar-12 syl2anr   syl22anc    old hypothesis 1 is now hypothesis 5
22-Mar-12 sylan31c  syl21anc    order of variables is different
22-Mar-12 sylan32c  syl12anc    order of variables is different
22-Mar-12 pm3.26im  simplim
22-Mar-12 pm3.27im  simprim
22-Mar-12 pm3.26    simpl
22-Mar-12 pm3.26i   simpli
22-Mar-12 pm3.26d   simpld
22-Mar-12 pm3.26bi  simplbi
22-Mar-12 pm3.27    simpr
22-Mar-12 pm3.27i   simpri
22-Mar-12 pm3.27d   simprd
22-Mar-12 pm3.27bi  simprbi
22-Mar-12 pm3.26bda simprbda
22-Mar-12 pm3.27bda simplbda
22-Mar-12 pm3.26bi2 simplbi2
22-Mar-12 pm3.26bi2VD simplbi2VD
22-Mar-12 3simp1    simp1
22-Mar-12 3simp2    simp2
22-Mar-12 3simp3    simp3
22-Mar-12 3simpl1   simpl1
22-Mar-12 3simpl2   simpl2
22-Mar-12 3simpl3   simpl3
22-Mar-12 3simpr1   simpr1
22-Mar-12 3simpr2   simpr2
22-Mar-12 3simpr3   simpr3
22-Mar-12 3simp1i   simp1i
22-Mar-12 3simp2i   simp2i
22-Mar-12 3simp3i   simp3i
22-Mar-12 3simp1d   simp1d
22-Mar-12 3simp2d   simp2d
22-Mar-12 3simp3d   simp3d
22-Mar-12 3simp1bi  simp1bi
22-Mar-12 3simp2bi  simp2bi
22-Mar-12 3simp3bi  simp3bi
22-Mar-12 3simp1l   simp1l
22-Mar-12 3simp1r   simp1r
22-Mar-12 3simp2l   simp2l
22-Mar-12 3simp2r   simp2r
22-Mar-12 3simp3l   simp3l
22-Mar-12 3simp3r   simp3r
22-Mar-12 3simp11   simp11
22-Mar-12 3simp12   simp12
22-Mar-12 3simp13   simp13
22-Mar-12 3simp21   simp21
22-Mar-12 3simp22   simp22
22-Mar-12 3simp23   simp23
22-Mar-12 3simp31   simp31
22-Mar-12 3simp32   simp32
22-Mar-12 3simp33   simp33
20-Mar-12 truni     [--same--]  moved from SF's mathbox to main set.mm
20-Mar-12 trsuc2    [--same--]  moved from SF's mathbox to main set.mm
20-Mar-12 trint     [--same--]  moved from SF's mathbox to main set.mm
20-Mar-12 trintss   [--same--]  moved from SF's mathbox to main set.mm
 4-Mar-12 ralunb    [--same--]  moved from SF's mathbox to main set.mm
20-Feb-12 3orcomb   [--same--]  moved from SF's mathbox to main set.mm
29-Jan-12 sbmo      [--same--]  moved from JM's mathbox to main set.mm
29-Jan-12 2ralor    [--same--]  moved from JM's mathbox to main set.mm
29-Jan-12 rexun     [--same--]  moved from JM's mathbox to main set.mm
29-Jan-12 ralun     [--same--]  moved from JM's mathbox to main set.mm
29-Jan-12 rexsn     [--same--]  moved from JM's mathbox to main set.mm
16-Jan-12 reuuninegi reuunineg
16-Jan-12 riotaund  riotaundb
 3-Jan-12 ee111     syl3c       moved from AS's mathbox to main set.mm
 3-Jan-12 ee12      sylsyld     moved from AS's mathbox to main set.mm
 3-Jan-12 ee20      syl6mpi     moved from AS's mathbox to main set.mm
22-Nov-11 eqfnfv3   [--same--]  moved from JM's mathbox to main set.mm
 6-Nov-11 cm        cmap
 4-Nov-11 hashgf1o  [--same--]  moved from PC's mathbox to main set.mm
 4-Nov-11 hashgval  [--same--]  moved from PC's mathbox to main set.mm
 4-Nov-11 hashginv  [--same--]  moved from PC's mathbox to main set.mm
 4-Nov-11 hashfz1   [--same--]  moved from PC's mathbox to main set.mm
 4-Nov-11 hashen    [--same--]  moved from PC's mathbox to main set.mm
 4-Nov-11 fz1fi     [--same--]  moved from PC's mathbox to main set.mm
20-Oct-11 ralab     [--same--]  moved from JM's mathbox to main set.mm
20-Oct-11 ralrab    [--same--]  moved from JM's mathbox to main set.mm
20-Sep-11 ifbieq2i  [--same--]  moved from PC's mathbox to main set.mm
20-Sep-11 dfiin2g   [--same--]  moved from JGH's mathbox to main set.mm
20-Sep-11 oprvex    ab2rexex    generalized oper. value to be arbitrary class
16-Sep-11 riotass2  reiotass2
16-Sep-11 riota2    reiota2
16-Sep-11 riota2f   reiota2f
16-Sep-11 riota1    reiota1
16-Sep-11 riotasbc    reiotasbc
16-Sep-11 riotacl   reiotacl
16-Sep-11 riotacl2  reiotacl2
15-Sep-11 19.22-2   2exim
15-Sep-11 19.20-2   2alim
15-Sep-11 19.20ii2  2al2imi
15-Sep-11 19.20ian2 2alanimi
15-Sep-11 sbc19.20dv sbcimdv
15-Sep-11 r19.22dva reximdva
15-Sep-11 r19.22sdv reximdv
15-Sep-11 r19.22dv  reximdvai
15-Sep-11 r19.22dv2 reximdv2
15-Sep-11 r19.22d   reximdai
15-Sep-11 r19.22si  reximi
15-Sep-11 r19.22i2  reximi2
15-Sep-11 r19.22i   reximia
15-Sep-11 r19.22OLD reximOLD
15-Sep-11 r19.22    rexim
15-Sep-11 r19.20dv2 ralimdv2
15-Sep-11 r19.20sdv ralimdv
15-Sep-11 r19.20dva ralimdva
15-Sep-11 r19.20da  ralimdaa
15-Sep-11 r19.20sii ral2imi
15-Sep-11 r19.20si  ralimi
15-Sep-11 r19.20ia  ralimiaa
15-Sep-11 r19.20i   ralimia
15-Sep-11 r19.20i2  ralimi2
15-Sep-11 r19.20    ralim
15-Sep-11 19.22dvv  2eximdv
15-Sep-11 19.20dvv  2alimdv
15-Sep-11 19.22dv   eximdv
15-Sep-11 19.20dv   alimdv
15-Sep-11 19.22d    eximd
15-Sep-11 19.22i2   2eximi
15-Sep-11 19.22i    eximi
15-Sep-11 19.22     exim
15-Sep-11 19.20d    alimd
15-Sep-11 19.20ian  alanimi
15-Sep-11 19.20ii   al2imi
15-Sep-11 19.20     alim
15-Sep-11 19.20i2   2alimi
15-Sep-11 19.20i    alimi
15-Sep-11 rexeqd    rexeqbi1dv
15-Sep-11 rexeq1d   rexeqdv
15-Sep-11 rexeq1    rexeq
15-Sep-11 rexeq1f   rexeqf
15-Sep-11 raleq1i   raleqi
15-Sep-11 raleqd    raleqbi1dv
15-Sep-11 raleq1d   raleqdv
15-Sep-11 raleq1    raleq
15-Sep-11 raleq1f   raleqf
15-Sep-11 rabeq12d  rabeqbidv   moved from JM's mathbox to main set.mm
15-Sep-11 19.18-2   2exbi
15-Sep-11 19.15-2   2albi
15-Sep-11 r19.15    ralbi
15-Sep-11 19.18     exbi
15-Sep-11 19.15     albi
15-Sep-11 2albi     2albiim
15-Sep-11 albi      albiim
14-Sep-11 ciota     cio
14-Sep-11 rabbii    rabbiia
14-Sep-11 rabbisdv  rabbidv
14-Sep-11 rabbidv   rabbidva
14-Sep-11 tpi3      tpid3
14-Sep-11 tpi2      tpid2
14-Sep-11 tpi1      tpid1
13-Sep-11 dmfnwdm2  fnprgOLD       moved from FL's mathbox to main set.mm
13-Sep-11 s2pf      funprgOLD      moved from FL's mathbox to main set.mm
12-Sep-11 mptexg    [--same--]  swapped variables "B" and "C"
 9-Sep-11 hbcmpt    hbmpt1      moved from FL's mathbox to main set.mm
 9-Sep-11 bnj1344   simp3bi    moved from JBN's mathbox to main set.mm
 9-Sep-11 bnj1301   simp2bi    moved from JBN's mathbox to main set.mm
 9-Sep-11 bnj1206   simp1bi    moved from JBN's mathbox to main set.mm
 8-Sep-11 syl3an2c  [--same--]  moved from JM's mathbox to main set.mm
 8-Sep-11 eqfnfvALT eqfnfv2
 8-Sep-11 uridm2    ringoridm
 8-Sep-11 uridm1    ringolidm
 8-Sep-11 uridm     ringoidmlem
 8-Sep-11 zerab2    ringorz
 8-Sep-11 zerab     ringolz
 7-Sep-11 euunian   iota4an     moved from ATS's mathbox to main set.mm
 7-Sep-11 iota3     iota4       (because it's analogous to reuunisbc / riota4)
 6-Sep-11 pm13.181  [--same--]  moved from ATS's mathbox to main set.mm
 6-Sep-11 pm13.18   [--same--]  moved from ATS's mathbox to main set.mm
 6-Sep-11 trutru    tru         moved from AH's mathbox to main set.mm
 6-Sep-11 nofaltru  notfal      moved from AH's mathbox to main set.mm
 4-Sep-11 feq1i     [--same--]  moved from PC's mathbox to main set.mm
 4-Sep-11 fneq1i    [--same--]  moved from PC's mathbox to main set.mm
 4-Sep-11 fneq2d    [--same--]  moved from PC's mathbox to main set.mm
 4-Sep-11 fneq1d    [--same--]  moved from PC's mathbox to main set.mm
 3-Sep-11 prf       fpr         moved from JM's mathbox to main set.mm
 3-Sep-11 prfv2     fvpr2       moved from JM's mathbox to main set.mm
 3-Sep-11 prfv1     fvpr1       moved from JM's mathbox to main set.mm
 3-Sep-11 prfun     funpr       moved from JM's mathbox to main set.mm
30-Aug-11 eqfnfvf2  eqfnfv2f
30-Aug-11 xp11a     xpcan2      xp11a (obsolete) was a special case of xpcan2
30-Aug-11 xp11b     xpcan       xp11b (obsolete) was a special case of xpcan
26-Aug-11 dmsdtriord domtriord  moved from JGH's mathbox to main set.mm
26-Aug-11 impbid3   impcon4bid  moved from JGH's mathbox to main set.mm
26-Aug-11 cbvcsb    [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 cbvcsb    [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 ordiso    [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem1 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem2 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem3 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem4 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem5 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem6 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtypelem7 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 ordtype   [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 hartoglem [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 hartog    [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 onsdom    [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubsuc  [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubsuc2 [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubsdomlem1 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 omsubsdomlem2 [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 omsubsdom [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubdom  [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubel   [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubss   [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 elomsubsd [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubdmss [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsublim  [--same--]  moved from JGH's mathbox to main set.mm
26-Aug-11 omsubindss [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 infenomsub [--same--] moved from JGH's mathbox to main set.mm
26-Aug-11 omsubinit [--same--]  moved from JGH's mathbox to main set.mm
20-Aug-11 iotaval   [--same--]  swapped order of equality in consequent
20-Aug-11 iotaequ   [--same--]  swapped order of equality in consequent
20-Aug-11 iotanul   [--same--]  swapped order of equality
18-Aug-11 mpset     mptexg      moved from FL's mathbox to main set.mm
18-Aug-11 hbiota    hbiota1     moved from ATS's mathbox to main set.mm
18-Aug-11 iotacl    [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 iota3     [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 iotaex    [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 iotanul   [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 iotaequ   [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 iotaval   [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 sbeqalb   [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 sbceqal   [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 eqsbc3    [--same--]  moved from ATS's mathbox to main set.mm
18-Aug-11 19.20ian  [--same--]  moved from ATS's mathbox to main set.mm
17-Aug-11 mpt2g     ovmpt2g
17-Aug-11 mptg      fvmptg
17-Aug-11 bnj1226   imorri      moved from JBN's mathbox to main set.mm
17-Aug-11 jad       [--same--]  moved from SF's mathbox to main set.mm
13-Aug-11 ceqsex3v  ---         (RM's mathbox) - obsolete; use ceqsexgv
13-Aug-11 ceqsex3   ---         (RM's mathbox) - obsolete; use ceqsexg
13-Aug-11 ceqsex2v  [--same--]  reformatted to use triple conjunction
13-Aug-11 ceqsex2   [--same--]  reformatted to use triple conjunction
 9-Aug-11 feq2d     [--same--]  moved from PC's mathbox to main set.mm
 9-Aug-11 bnj1456   snssd       moved from JBN's mathbox to main set.mm
 9-Aug-11 snssd     [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 fbaslim   [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 fbfgss    [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 fgid      [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 cnpnei    [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 limfilss  [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 fbfgfmeq  [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 fgss      [--same--]  moved from JGH's mathbox to main set.mm
 9-Aug-11 filmapss  [--same--]  moved from JGH's mathbox to main set.mm
18-Jul-11 ompfl3    3anibar
18-Jul-11 rexeq12d  rexeqbidv
18-Jul-11 raleq12d  raleqbidv
18-Jul-11 ralbieq1dv ---        obsolete; use raleqbidv
18-Jul-11 exan2     exsimpl
 8-Jul-11 brab1     [--same--]  changed set var "y" to class var "A"
29-Jun-11 exan2     [--same--]  moved from RM's mathbox to main set.mm
29-Jun-11 wfal      [--same--]  moved from AH's mathbox to main set.mm
29-Jun-11 df-fal    [--same--]  moved from AH's mathbox to main set.mm
29-Jun-11 wtru      [--same--]  moved from AH's mathbox to main set.mm
29-Jun-11 df-tru    [--same--]  moved from AH's mathbox to main set.mm
29-Jun-11 mptfn     [--same--]  moved from SF's mathbox to main set.mm
29-Jun-11 rnmpt     [--same--]  moved from SF's mathbox to main set.mm
29-Jun-11 dford2    [--same--]  moved from SF's mathbox to main set.mm
29-Jun-11 funsngxx  funsngOLD      changed "e. _V" to "e. C", "e. D" in antec.
29-Jun-11 bnj94     funsngxx    moved from JBN's mathbox to main set.mm
29-Jun-11 bnj928    fnsnOLD        moved from JBN's mathbox to main set.mm
29-Jun-11 bnj1257   eleq2s      moved from JBN's mathbox to main set.mm
29-Jun-11 bnj1495   funeqi      moved from JBN's mathbox to main set.mm
29-Jun-11 erdisj2   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 cass      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-ass    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 isass     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 isexid    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ismgm     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 opidon    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rngopid   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 opidon2   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 isexid2   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 exidu1    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 idrval    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 iorlid    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 cmpidelt  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 csem      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-sgr    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 smgrpismgm [--same--] moved from FL's mathbox to main set.mm
29-Jun-11 issmgrp   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 smgrpmgm  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 smgrpass  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 cmnd      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-mnd    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 mndissmgrp [--same--] moved from FL's mathbox to main set.mm
29-Jun-11 mndisexid [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 mndismgm  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 mndmgmid  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ismnd     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ismnd1    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 relrng    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rngn0     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rngmgmbs4 [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rnplrnml0 [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rnplrnml2 [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 rnplrnml  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 unmnd     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 fora1     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 fora2     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 fora      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 uridm     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 uridm1    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 zerab     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 zerab2    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 on1el3    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 on1el4    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 on1el6    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ring1cl   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 uznzr     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 isdivrngo  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 zrdivrng  [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 dvrunz    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 clmgm     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 uridm2    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 grpmnd    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 iscom2    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ismnd2    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 difeq12   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 setwoe    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 sfseqeq   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 opreq123d [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 oprabvaligg [--same--] moved from FL's mathbox to main set.mm
29-Jun-11 cexid     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-exid   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 cmagm     [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-mgm    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 ccm2      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-com2   [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 cfld      [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 df-fld    [--same--]  moved from FL's mathbox to main set.mm
29-Jun-11 imp5a     [--same--]  moved from JGH's mathbox to main set.mm
29-Jun-11 iccleub   [--same--]  moved from JGH's mathbox to main set.mm
29-Jun-11 expl      [--same--]  moved from JGH's mathbox to main set.mm
29-Jun-11 ghomid    [--same--]  moved from PC's mathbox to main set.mm
29-Jun-11 ghomlin   [--same--]  moved from PC's mathbox to main set.mm
28-Jun-11 infmssuzle [--same--] removed redundant antecedent S =/= (/)
22-Jun-11 xpeq12    [--same--]  moved from FL's mathbox to main set.mm
22-Jun-11 xpeq12i   [--same--]  moved from FL's mathbox to main set.mm
21-Jun-11 axnul2    axnulALT
25-Mar-11 ntunte    inuni
 8-Mar-11 ssxp      xpss12
 8-Mar-11 bepart    elelpwi
 8-Mar-11 intprd    intprg      changed "e. _V" to "e. C", "e. D" in antec.
 2-Mar-11 equnamo   n0moeu
21-Feb-11 muln0b    mulne0b
21-Feb-11 muln0i    mulne0i
16-Jan-11 grothinf  grothomex
13-Jan-11 hbequid   hbequid2
10-Dec-10 nexnoti   nexr
31-Oct-10 reu3xxx   reu6
31-Oct-10 reu6      reu3
31-Oct-10 reu3      reu3xxx
30-Oct-10 eusn      euabsn
26-Oct-10 raaan     raaanv
18-Oct-10 ---       ---         changed math symbol from "C=" to "C_"
 3-Oct-10 ---       ---         added variables E, e, I, i, V
 3-Oct-10 ---       ---         changed math symbol from "P~" to "~P"
 3-Oct-10 ---       ---         changed math symbol from "H~" to "~H"
 3-Oct-10 ---       ---         changed math symbol from "(_" to "C="
 3-Oct-10 ---       ---         changed math symbol from "(." to "C."
 3-Oct-10 ---       ---         changed math symbol from "C." to "_C"
 3-Oct-10 ---       ---         changed math symbol from "E" to "_E"
 3-Oct-10 ---       ---         changed math symbol from "e" to "_e"
 3-Oct-10 ---       ---         changed math symbol from "I" to "_I"
 3-Oct-10 ---       ---         changed math symbol from "i" to "_i"
 3-Oct-10 ---       ---         changed math symbol from "V" to "_V"
24-Jul-09 sandbox   mathbox
12-Jun-09 mulge0    [--same--]  rearranged antecedent
12-Jun-09 mulgt0    [--same--]  rearranged antecedent
12-May-09 ---       ---         changed math symbol from "ZZ_>" to "ZZ>="
 2-May-09 snsspr    snsspr1
 2-May-09 axpow     zfpow
 2-May-09 axac      zfac
 2-May-09 axun      zfun
27-Apr-09 pm4.22    bitr
24-Apr-09 axinf     zfinf
24-Apr-09 zfinf     zfinf2
 2-Apr-09 infmssuzle [--same--] changed -. S = (/) to S =/= (/)
23-Mar-09 eqfnfvf   ---         obsolete; use eqfnfvf2 instead
23-Mar-09 ffnoprval ffnoprv
23-Mar-09 eqfnoprval eqfnoprv
23-Mar-09 fnoprval  fnoprv
23-Mar-09 foprval   foprv
23-Mar-09 oprvalres oprvres
23-Mar-09 oprssoprval oprssoprv
23-Mar-09 fnrnoprval fnrnoprv
23-Mar-09 fooprval  fooprv
23-Mar-09 fnoprvalrn fnoprvrn
23-Mar-09 oprvalelrn oprvelrn
23-Mar-09 oprvalconst2 oprvconst2
23-Mar-09 oprvalex  oprvex
23-Mar-09 symgoprval symgoprv
23-Mar-09 fnoprvalrn2 fnoprvrn2
22-Mar-09 icoshf    icoshft
 8-Mar-09 nnont     nnon
 7-Mar-09 eluzsubii eluzsubi
 7-Mar-09 eluzaddii eluzaddi
 7-Mar-09 divexp    expdiv
 7-Mar-09 recexp    exprec
 7-Mar-09 ---       ---         changed math symbol from "ZZ>" to "ZZ_>"
27-Feb-09 lediv23   [--same--]  rearranged antecedent
27-Feb-09 ltdiv23   [--same--]  rearranged antecedent
 3-Jan-09 muln0     mulne0
 3-Jan-09 vne0      vn0
 3-Jan-09 n0        neq0
 3-Jan-09 ne0       n0
 3-Jan-09 ssne0     ssn0
 3-Jan-09 onne0     onn0
 3-Jan-09 dmsnne0   dmsnn0
 3-Jan-09 rnsnne0   rnsnn0
 3-Jan-09 1ne0      1n0
 3-Jan-09 metne0    metn0
 3-Jan-09 blne0     bln0
 2-Jan-08 flrecl    reflcl
30-Dec-08 letrdi    letrd
30-Dec-08 lelttrdi  lelttrd
30-Dec-08 ltletrdi  ltletrd
30-Dec-08 lttrdi    lttrd
29-Dec-08 hbnegi    hbneg
29-Dec-08 hbnegdi   hbnegd
29-Dec-08 hbsumi    hbsum
29-Dec-08 hbsum1i   hbsum1
28-Dec-08 negnei    negne0i
28-Dec-08 negne0i   negne0bi
28-Dec-08 lemul2    [--same--]  rearranged antecedent
28-Dec-08 lemul1    [--same--]  rearranged antecedent
28-Dec-08 ltmul2    [--same--]  rearranged antecedent
28-Dec-08 ltmul1    [--same--]  rearranged antecedent
28-Dec-08 ecdmn0    [--same--]  changed -. ... = to =/=
27-Dec-08 divdiv24  [--same--]  rearranged antecedent
27-Dec-08 divdiv13  [--same--]  rearranged antecedent
27-Dec-08 divadddiv [--same--]  rearranged antecedent
27-Dec-08 divdivdiv [--same--]  rearranged antecedent
27-Dec-08 recndi    recnd
27-Dec-08 divdivmul divdiv1
27-Dec-08 divdiv23  [--same--]  rearranged antecedent
27-Dec-08 dmsnsn0   ---         obsolete; use the more general dmsn0el
25-Dec-08 div12     [--same--]  rearranged antecedent
25-Dec-08 div13     [--same--]  rearranged antecedent
25-Dec-08 div23     [--same--]  rearranged antecedent
25-Dec-08 expm1     expm1t
25-Dec-08 divmuldiv [--same--]  rearranged antecedent
25-Dec-08 recexp    [--same--]  rearranged antecedent
25-Dec-08 expne0i   [--same--]  rearranged antecedent
25-Dec-08 expsub    [--same--]  rearranged antecedent
25-Dec-08 divexp    [--same--]  rearranged antecedent
21-Dec-08 imaun2    imaundir
21-Dec-08 imaun     imaundi
19-Dec-08 sbhyp     ---         obsolete; use sbhypf
19-Dec-08 opelcog   opelco2g
18-Dec-08 fsumspl   fsumsplit
18-Dec-08 fsum0spl  fsum0split
18-Dec-08 fsumshf   fsumshft
18-Dec-08 fsumcons  fsumconst
18-Dec-08 dmco2     dmco
17-Dec-08 ---       ---         the math token "Base" was changed to "BaseSet"
17-Dec-08 ssxpr     ---         obsolete; use ssxpb
17-Dec-08 nicodraw  ---         obsolete; use nic-ax
17-Dec-08 nicodmpraw ---        obsolete; use nic-mp
17-Dec-08 3exbi     3exbii
17-Dec-08 relssdr   relssdmrn
16-Dec-08 dfoprab4  dfoprab5s
16-Dec-08 dfoprab5  dfoprab4s
16-Dec-08 dffxxx    dff2
16-Dec-08 dff4      dff3
16-Dec-08 dff3      dff4
16-Dec-08 dff4      dffxxx
16-Dec-08 dffunmo   dffun6
16-Dec-08 dffun6    dffun7
16-Dec-08 dffun7    dffun8
16-Dec-08 dffun8    dffun9
16-Dec-08 dffunmof  dffun6f
16-Dec-08 fnopabfv  dffn5
16-Dec-08 fnforn    dffn4
16-Dec-08 fnfrn     dffn3
16-Dec-08 fnf       dffn2
16-Dec-08 f1fvf     dff13f
16-Dec-08 f1fv      dff13
16-Dec-08 f11       dff12
16-Dec-08 f1ofv     dff1o6
16-Dec-08 f1o5      dff1o5
16-Dec-08 f1o4      dff1o4
16-Dec-08 f1o3      dff1o3
16-Dec-08 f1o2      dff1o2
15-Dec-08 pm4.2d    biidd
15-Dec-08 pm4.2     biid
15-Dec-08 pm4.1     con34b
15-Dec-08 bi2.15    con1b
15-Dec-08 bi2.03    con2b
15-Dec-08 a3d       con4d
15-Dec-08 a3i       con4i
13-Dec-08 2climnni  2climnn
13-Dec-08 2climnn0i 2climnn0
12-Dec-08 reeftlclti reeftlcl
12-Dec-08 eftlclti  eftlcl
12-Dec-08 eftlexti  eftlex
12-Dec-08 fnsmnti   arisumi
12-Dec-08 nn0le2msqti nn0le2msqi
12-Dec-08 reccnvi   reccnv
12-Dec-08 expcnvi   expcnv
11-Dec-08 isummulc1i isummulc1
11-Dec-08 iserzgt0i iserzgt0
11-Dec-08 isumreclti isumrecl
11-Dec-08 isumclti  isumcl
11-Dec-08 isumnn0nni isumnn0nn
11-Dec-08 isum1pi   isum1p
11-Dec-08 isumnuli  isumnul
11-Dec-08 isumclim5ti isumclim5
11-Dec-08 isumclim4ti isumclim4
11-Dec-08 isumclim3ti isumclim3
11-Dec-08 isumclim2ti isumclim2
11-Dec-08 isumclim2tfi isumclim2f
11-Dec-08 isum1climi isum1clim
11-Dec-08 isumclimti isumclim
11-Dec-08 isumval2ti isumval2
11-Dec-08 isumvalti isumval
11-Dec-08 cvgcmp3ceti cvgcmp3ce
11-Dec-08 iserzcmp0i iserzcmp0
11-Dec-08 iserzcmpi iserzcmp
11-Dec-08 climsqueeze2i climsqueeze2
11-Dec-08 climsqueezei climsqueeze
11-Dec-08 climcmpc1i climcmpc1
11-Dec-08 climcmpi  climcmp
11-Dec-08 iserzmulc1i iserzmulc1
11-Dec-08 iserzexti iserzex
11-Dec-08 clim2serzti clim2serz
11-Dec-08 climsubc2i climsubc2
11-Dec-08 climsubi  climsub
11-Dec-08 climmulc2i climmulc2
11-Dec-08 climmuli  climmul
11-Dec-08 climaddc2i climaddc2
11-Dec-08 climaddc1i climaddc1
11-Dec-08 climaddi  climadd
11-Dec-08 climge0i  climge0
11-Dec-08 climrecli climrecl
11-Dec-08 climreui  climreu
11-Dec-08 climeui   climeu
11-Dec-08 climuniii climunii
11-Dec-08 climunii  climuni
11-Dec-08 clm4ati   clm4a
11-Dec-08 serzmulc1i serzmulc1
11-Dec-08 serzspliti serzsplit
11-Dec-08 serzcmp0i serzcmp0
11-Dec-08 serzcmpi  serzcmp
11-Dec-08 serz1pi   serz1p
11-Dec-08 serzreclti serzrecl
11-Dec-08 serzcl2ti serzcl2
11-Dec-08 ser1clti  ser1cl
11-Dec-08 ser0clti  ser0cl
11-Dec-08 serzclti  serzcl
11-Dec-08 fsum4i    fsum4
11-Dec-08 fsum3i    fsum3
11-Dec-08 fsum2i    fsum2
11-Dec-08 fsum0spli fsum0spl
11-Dec-08 fsumspli  fsumspl
11-Dec-08 serzfsumi serzfsum
11-Dec-08 fsumserz2i fsumserz2
11-Dec-08 fsumserzi fsumserz
11-Dec-08 cvg1ii    cvg1i
11-Dec-08 cvg1i     cvg1
11-Dec-08 seqzres2i seqzres2
11-Dec-08 seqzresi  seqzres
11-Dec-08 seqzresvali seqzresval
11-Dec-08 seqzcli   seqzcl
11-Dec-08 seqzrni   seqzrn
11-Dec-08 seqzrn2i  seqzrn2
11-Dec-08 seqzeqi   seqzeq
11-Dec-08 seqzfveqi seqzfveq
11-Dec-08 seqzval2ti seqzval2
11-Dec-08 seq01i    seq01
11-Dec-08 seq0p1i   seq0p1
11-Dec-08 seq00i    seq00
11-Dec-08 seqzm1i   seqzm1
11-Dec-08 seqzp1i   seqzp1
11-Dec-08 seqz1i    seqz1
11-Dec-08 seq0fni   seq0fn
11-Dec-08 seq1seq0i seq1seq0
11-Dec-08 seq1seq0ti seq1seq01
11-Dec-08 seq1seq02ti seq1seq02
11-Dec-08 seq0seqzi seq0seqz
11-Dec-08 seq1seqzi seq1seqz
11-Dec-08 seqzvalti seqzval
11-Dec-08 seqzfni   seqzfn
11-Dec-08 seqzfval2i seqzfval2
11-Dec-08 seqzfvali seqzfval
11-Dec-08 seq0valti seq0valt
11-Dec-08 seq0fvali seq0fval
11-Dec-08 seq1shftidi seq1shftid
11-Dec-08 shftidti  shftidt
11-Dec-08 shftcan1ti shftcan1
11-Dec-08 shftcan2ti shftcan2
11-Dec-08 shftfi    shftf
11-Dec-08 shftval5ti shftval5
11-Dec-08 shftval4ti shftval4
11-Dec-08 shftval3ti shftval3
11-Dec-08 shftval2ti shftval2
11-Dec-08 shftvalti shftval
11-Dec-08 shftresvalti shftresval
11-Dec-08 shftresi  shftres
11-Dec-08 shftfni   shftfn
11-Dec-08 shftfvali shftfval
11-Dec-08 seq1resi  seq1res
11-Dec-08 seq1cl2i  seq1cl2
11-Dec-08 seq1cli   seq1cl
11-Dec-08 seq1f2i   seq1f2
11-Dec-08 seq1fi    seq1f
11-Dec-08 seq1rni   seq1rn
11-Dec-08 seq1rn2i  seq1rn2
11-Dec-08 seq1fni   seq1fn
11-Dec-08 seq1m1i   seq1m1
11-Dec-08 seq1p1i   seq1p1
11-Dec-08 seq11i    seq11
11-Dec-08 seq1val2i seq1val2
11-Dec-08 seq1vali  seq1val
11-Dec-08 seq1rvali seq1rval
11-Dec-08 uznegi    uzneg
 9-Dec-08 nvelv     vprc
 9-Dec-08 inelv     iprc
 9-Dec-08 fipr      fiprc
 9-Dec-08 ecqs      [--same--]  eliminated redundant hypothesis A e. _V
18-Nov-08 ---       ---         See mmnotes.txt entry of 18-Nov-2008
18-Nov-08 cdavalt   cdaval
18-Nov-08 cdaval    cdavali
18-Nov-08 unbnnt    unbnn3
18-Nov-08 frsuct    frsuc
18-Nov-08 fr0t      fr0g
18-Nov-08 rdg0t     rdg0g
18-Nov-08 ssonunit  ssonuni
18-Nov-08 ssonuni   ssonunii
18-Nov-08 eqtr3t    eqtr3
18-Nov-08 eqtr2t    eqtr2
18-Nov-08 eqtrt     eqtr
18-Nov-08 3eqtr4r   3eqtr4ri
18-Nov-08 3eqtr3r   3eqtr3ri
18-Nov-08 3eqtr2r   3eqtr2ri
18-Nov-08 3eqtr4r   3eqtr4ri
18-Nov-08 3eqtr3r   3eqtr3ri
18-Nov-08 3bitr3r   3bitr3ri
18-Nov-08 3bitr4r   3bitr4ri
18-Nov-08 3bitr2r   3bitr2ri
18-Nov-08 biimpr    biimpri
18-Nov-08 biimp     biimpi
18-Nov-08 impbi     impbii
18-Nov-08 ---       ---         See mmnotes.txt entry of 17-Nov-2008
17-Nov-08 ---       ---         Remember that substitutions are
17-Nov-08 ---       ---         made in _reverse_ order.
17-Nov-08 efi4pt    efi4p
17-Nov-08 resin4pt  resin4p
17-Nov-08 recos4pt  recos4p
17-Nov-08 ef4pt     ef4p
17-Nov-08 addclt    addcl
17-Nov-08 readdclt  readdcl
17-Nov-08 mulclt    mulcl
17-Nov-08 remulclt  remulcl
17-Nov-08 addcomt   addcom
17-Nov-08 mulcomt   mulcom
17-Nov-08 addasst   addass
17-Nov-08 mulasst   mulass
17-Nov-08 adddit    adddi
17-Nov-08 addid1t   addid1
17-Nov-08 mulid1t   mulid1
17-Nov-08 recnt     recn
17-Nov-08 adddirt   adddir
17-Nov-08 addid2t   addid2
17-Nov-08 add12t    add12
17-Nov-08 add23t    add23
17-Nov-08 add4t     add4
17-Nov-08 add42t    add42
17-Nov-08 cnegext   cnegex
17-Nov-08 cnegextlem1 cnegexlem1
17-Nov-08 cnegextlem2 cnegexlem2
17-Nov-08 cnegextlem3 cnegexlem3
17-Nov-08 addcant   addcan
17-Nov-08 addcan2t  addcan2
17-Nov-08 subvalt   subval
17-Nov-08 subclt    subcl
17-Nov-08 negclt    negcl
17-Nov-08 subaddt   subadd
17-Nov-08 subsub23t subsub23
17-Nov-08 pncan3t   pncan3
17-Nov-08 negidt    negid
17-Nov-08 negsubt   negsub
17-Nov-08 addsubasst addsubass
17-Nov-08 addsubt   addsub
17-Nov-08 subadd23t subadd23
17-Nov-08 addsub12t addsub12
17-Nov-08 2addsubt  2addsub
17-Nov-08 negnegt   negneg
17-Nov-08 subnegt   subneg
17-Nov-08 subidt    subid
17-Nov-08 subid1t   subid1
17-Nov-08 pncant    pncan
17-Nov-08 pncan2t   pncan2
17-Nov-08 npcant    npcan
17-Nov-08 npncant   npncan
17-Nov-08 nppcant   nppcan
17-Nov-08 subcan2t  subcan2
17-Nov-08 subeq0t   subeq0
17-Nov-08 neg11t    neg11
17-Nov-08 negcon1t  negcon1
17-Nov-08 negcon2t  negcon2
17-Nov-08 subcant   subcan
17-Nov-08 mulid2t   mulid2
17-Nov-08 mul12t    mul12
17-Nov-08 mul23t    mul23
17-Nov-08 mul4t     mul4
17-Nov-08 muladdt   muladd
17-Nov-08 muladd11t muladd11
17-Nov-08 subdit    subdi
17-Nov-08 subdirt   subdir
17-Nov-08 renegclt  renegcl
17-Nov-08 resubclt  resubcl
17-Nov-08 mul01t    mul01
17-Nov-08 mul02t    mul02
17-Nov-08 mulneg1t  mulneg1
17-Nov-08 mulneg2t  mulneg2
17-Nov-08 mulneg12t mulneg12
17-Nov-08 mul2negt  mul2neg
17-Nov-08 negdit    negdi
17-Nov-08 negdi2t   negdi2
17-Nov-08 negsubdit negsubdi
17-Nov-08 negsubdi2t negsubdi2
17-Nov-08 neg2subt  neg2sub
17-Nov-08 submul2t  submul2
17-Nov-08 subsub2t  subsub2
17-Nov-08 subsubt   subsub
17-Nov-08 subsub3t  subsub3
17-Nov-08 subsub4t  subsub4
17-Nov-08 sub23t    sub23
17-Nov-08 nnncant   nnncan
17-Nov-08 nnncan1t  nnncan1
17-Nov-08 nnncan2t  nnncan2
17-Nov-08 nncant    nncan
17-Nov-08 nppcan2t  nppcan2
17-Nov-08 mulm1t    mulm1
17-Nov-08 addsub4t  addsub4
17-Nov-08 subadd4t  subadd4
17-Nov-08 sub4t     sub4
17-Nov-08 mulsubt   mulsub
17-Nov-08 pnpcant   pnpcan
17-Nov-08 pnpcan2t  pnpcan2
17-Nov-08 pnncant   pnncan
17-Nov-08 ppncant   ppncan
17-Nov-08 ltxrt     ltxr
17-Nov-08 rexrt     rexr
17-Nov-08 ltxrltt   ltxrlt
17-Nov-08 xrlenltt  xrlenlt
17-Nov-08 xrltnlet  xrltnle
17-Nov-08 lttrt     lttr
17-Nov-08 mulgt0t   mulgt0
17-Nov-08 lenltt    lenlt
17-Nov-08 ltnlet    ltnle
17-Nov-08 lttri2t   lttri2
17-Nov-08 lttri3t   lttri3
17-Nov-08 lttri4t   lttri4
17-Nov-08 ltnet     ltne
17-Nov-08 letri3t   letri3
17-Nov-08 leloet    leloe
17-Nov-08 eqleltt   eqlelt
17-Nov-08 ltlet     ltle
17-Nov-08 leltnet   leltne
17-Nov-08 ltlent    ltlen
17-Nov-08 lelttrt   lelttr
17-Nov-08 ltletrt   ltletr
17-Nov-08 letrt     letr
17-Nov-08 ltnrt     ltnr
17-Nov-08 leidt     leid
17-Nov-08 ltnsymt   ltnsym
17-Nov-08 ltnsym2t  ltnsym2
17-Nov-08 renepnft  renepnf
17-Nov-08 renemnft  renemnf
17-Nov-08 xrltnrt   xrltnr
17-Nov-08 ltpnft    ltpnf
17-Nov-08 mnfltt    mnflt
17-Nov-08 mnfltxrt  mnfltxr
17-Nov-08 pnfnltt   pnfnlt
17-Nov-08 nltmnft   nltmnf
17-Nov-08 pnfget    pnfge
17-Nov-08 mnflet    mnfle
17-Nov-08 xrltnsymt xrltnsym
17-Nov-08 xrltnsym2t xrltnsym2
17-Nov-08 xrlttrit  xrlttri
17-Nov-08 xrlttrt   xrlttr
17-Nov-08 xrlttri2t xrlttri2
17-Nov-08 xrlttri3t xrlttri3
17-Nov-08 xrleloet  xrleloe
17-Nov-08 xrleltnet xrleltne
17-Nov-08 xrltlet   xrltle
17-Nov-08 xrleidt   xrleid
17-Nov-08 xrletrit  xrletri
17-Nov-08 xrlelttrt xrlelttr
17-Nov-08 xrltletrt xrltletr
17-Nov-08 xrletrt   xrletr
17-Nov-08 xrltnet   xrltne
17-Nov-08 nltpnftt  nltpnft
17-Nov-08 ngtmnftt  ngtmnft
17-Nov-08 xrrebndt  xrrebnd
17-Nov-08 xrret     xrre
17-Nov-08 xrre2t    xrre2
17-Nov-08 eqlet     eqle
17-Nov-08 msqgt0t   msqgt0
17-Nov-08 msqge0t   msqge0
17-Nov-08 gt0ne0t   gt0ne0
17-Nov-08 ne0gt0t   ne0gt0
17-Nov-08 letrit    letric
17-Nov-08 lelttrit  lelttric
17-Nov-08 ltadd1t   ltadd1
17-Nov-08 ltadd2t   ltadd2
17-Nov-08 leadd1t   leadd1
17-Nov-08 leadd2t   leadd2
17-Nov-08 ltsubaddt ltsubadd
17-Nov-08 ltsubadd2t ltsubadd2
17-Nov-08 lesubaddt lesubadd
17-Nov-08 lesubadd2t lesubadd2
17-Nov-08 ltaddsubt ltaddsub
17-Nov-08 ltaddsub2t ltaddsub2
17-Nov-08 leaddsubt leaddsub
17-Nov-08 leaddsub2t leaddsub2
17-Nov-08 sublet    suble
17-Nov-08 lesubt    lesub
17-Nov-08 ltsub23t  ltsub23
17-Nov-08 ltsub13t  ltsub13
17-Nov-08 lt2addt   lt2add
17-Nov-08 le2addt   le2add
17-Nov-08 ltleaddt  ltleadd
17-Nov-08 leltaddt  leltadd
17-Nov-08 addgt0t   addgt0
17-Nov-08 addgegt0t addgegt0
17-Nov-08 addgtge0t addgtge0
17-Nov-08 addge0t   addge0
17-Nov-08 ltaddpost ltaddpos
17-Nov-08 ltaddpos2t ltaddpos2
17-Nov-08 ltsubpost ltsubpos
17-Nov-08 posdift   posdif
17-Nov-08 ltnegt    ltneg
17-Nov-08 ltnegcon1t ltnegcon1
17-Nov-08 lenegt    leneg
17-Nov-08 lenegcon1t lenegcon1
17-Nov-08 lenegcon2t lenegcon2
17-Nov-08 lesub1t   lesub1
17-Nov-08 lesub2t   lesub2
17-Nov-08 ltsub1t   ltsub1
17-Nov-08 ltsub2t   ltsub2
17-Nov-08 lt0neg1t  lt0neg1
17-Nov-08 lt0neg2t  lt0neg2
17-Nov-08 le0neg1t  le0neg1
17-Nov-08 le0neg2t  le0neg2
17-Nov-08 addge01t  addge01
17-Nov-08 addge02t  addge02
17-Nov-08 subge0t   subge0
17-Nov-08 suble0t   suble0
17-Nov-08 subge02t  subge02
17-Nov-08 lesub0t   lesub0
17-Nov-08 mulge0t   mulge0
17-Nov-08 recext    recex
17-Nov-08 mulcant   mulcan
17-Nov-08 mulcan2t  mulcan2
17-Nov-08 mul0ort   mul0or
17-Nov-08 muln0bt   mulne0b
17-Nov-08 muln0t    muln0
17-Nov-08 muleqaddt muleqadd
17-Nov-08 divmult   divmul
17-Nov-08 divmul2t  divmul2
17-Nov-08 divmul3t  divmul3
17-Nov-08 divclt    divcl
17-Nov-08 recclt    reccl
17-Nov-08 divcan1t  divcan1
17-Nov-08 divcan2t  divcan2
17-Nov-08 divne0bt  divne0b
17-Nov-08 divne0t   divne0
17-Nov-08 recne0t   recne0
17-Nov-08 recidt    recid
17-Nov-08 recid2t   recid2
17-Nov-08 divrect   divrec
17-Nov-08 divrec2t  divrec2
17-Nov-08 divasst   divass
17-Nov-08 div23t    div23
17-Nov-08 div13t    div13
17-Nov-08 div12t    div12
17-Nov-08 divdirt   divdir
17-Nov-08 divcan3t  divcan3
17-Nov-08 divcan4t  divcan4
17-Nov-08 div11t    div11
17-Nov-08 dividt    divid
17-Nov-08 div0t     div0
17-Nov-08 diveq0t   diveq0
17-Nov-08 div1t     div1
17-Nov-08 divnegt   divneg
17-Nov-08 divsubdirt divsubdir
17-Nov-08 recrect   recrec
17-Nov-08 rec11rt   rec11r
17-Nov-08 divmuldivt divmuldiv
17-Nov-08 divcan5t  divcan5
17-Nov-08 divmul13t divmul13
17-Nov-08 divmul24t divmul24
17-Nov-08 divadddivt divadddiv
17-Nov-08 divdivdivt divdivdiv
17-Nov-08 recdivt   recdiv
17-Nov-08 divcan6t  divcan6
17-Nov-08 divdiv23t divdiv23
17-Nov-08 divdivmult divdivmul
17-Nov-08 recdiv2t  recdiv2
17-Nov-08 conjmult  conjmul
17-Nov-08 redivclt  redivcl
17-Nov-08 rerecclt  rereccl
17-Nov-08 eqnegt    eqneg
17-Nov-08 negeq0t   negeq0
17-Nov-08 ltp1t     ltp1
17-Nov-08 lep1t     lep1
17-Nov-08 ltm1t     ltm1
17-Nov-08 letrp1t   letrp1
17-Nov-08 p1let     p1le
17-Nov-08 prodgt0t  prodgt0
17-Nov-08 prodgt02t prodgt02
17-Nov-08 prodge0t  prodge0
17-Nov-08 prodge02t prodge02
17-Nov-08 ltmul1t   ltmul1
17-Nov-08 ltmul2t   ltmul2
17-Nov-08 lemul1t   lemul1
17-Nov-08 lemul2t   lemul2
17-Nov-08 lemul1it  lemul1a
17-Nov-08 lemul2it  lemul2a
17-Nov-08 ltmul12it ltmul12a
17-Nov-08 lemul12ait lemul12b
17-Nov-08 lemul12it lemul12a
17-Nov-08 mulgt1t   mulgt1
17-Nov-08 ltmulgt11t ltmulgt11
17-Nov-08 ltmulgt12t ltmulgt12
17-Nov-08 lemulge11t lemulge11
17-Nov-08 ltdiv1t   ltdiv1
17-Nov-08 lediv1t   lediv1
17-Nov-08 gt0divt   gt0div
17-Nov-08 ge0divt   ge0div
17-Nov-08 divgt0t   divgt0
17-Nov-08 divge0t   divge0
17-Nov-08 recgt0t   recgt0
17-Nov-08 ltmuldivt ltmuldiv
17-Nov-08 ltmuldiv2t ltmuldiv2
17-Nov-08 ltdivmult ltdivmul
17-Nov-08 ledivmult ledivmul
17-Nov-08 ltdivmul2t ltdivmul2
17-Nov-08 lt2mul2divt lt2mul2div
17-Nov-08 ledivmul2t ledivmul2
17-Nov-08 lemuldivt lemuldiv
17-Nov-08 lemuldiv2t lemuldiv2
17-Nov-08 ltrect    ltrec
17-Nov-08 lerect    lerec
17-Nov-08 lt2msqt   lt2msq
17-Nov-08 ltdiv2t   ltdiv2
17-Nov-08 ltrec1t   ltrec1
17-Nov-08 lerec2t   lerec2
17-Nov-08 ledivdivt ledivdiv
17-Nov-08 lediv2t   lediv2
17-Nov-08 ltdiv23t  ltdiv23
17-Nov-08 lediv23t  lediv23
17-Nov-08 lediv12it lediv12a
17-Nov-08 lediv2it  lediv2a
17-Nov-08 reclt1t   reclt1
17-Nov-08 recgt1t   recgt1
17-Nov-08 recgt1it  recgt1i
17-Nov-08 recrecltt recreclt
17-Nov-08 le2msqt   le2msq
17-Nov-08 ledivp1t  ledivp1
17-Nov-08 xrmaxltt  xrmaxlt
17-Nov-08 xrltmint  xrltmin
17-Nov-08 maxlet    maxle
17-Nov-08 lemint    lemin
17-Nov-08 maxltt    maxlt
17-Nov-08 ltmint    ltmin
17-Nov-08 nnret     nnre
17-Nov-08 nncnt     nncn
17-Nov-08 nnaddclt  nnaddcl
17-Nov-08 nnmulclt  nnmulcl
17-Nov-08 nn2get    nn2ge
17-Nov-08 nnge1t    nnge1
17-Nov-08 nngt1ne1t nngt1ne1
17-Nov-08 nnle1eq1t nnle1eq1
17-Nov-08 nngt0t    nngt0
17-Nov-08 nnne0t    nnne0
17-Nov-08 nnrecret  nnrecre
17-Nov-08 nnrecgt0t nnrecgt0
17-Nov-08 nnleltp1t nnleltp1
17-Nov-08 nnltp1let nnltp1le
17-Nov-08 nnsubt    nnsub
17-Nov-08 nnaddm1clt nnaddm1cl
17-Nov-08 nndivt    nndiv
17-Nov-08 nndivtrt  nndivtr
17-Nov-08 2timest   2times
17-Nov-08 times2t   times2
17-Nov-08 halfclt   halfcl
17-Nov-08 rehalfclt rehalfcl
17-Nov-08 half0t    half0
17-Nov-08 halfpost  halfpos
17-Nov-08 halfpos2t halfpos2
17-Nov-08 halfnneg2t halfnneg2
17-Nov-08 2halvest  2halves
17-Nov-08 halfaddsubt halfaddsub
17-Nov-08 lt2halvest lt2halves
17-Nov-08 avglet    avgle
17-Nov-08 rpret     rpre
17-Nov-08 rpcnt     rpcn
17-Nov-08 rpgt0t    rpgt0
17-Nov-08 rpge0t    rpge0
17-Nov-08 rpregt0t  rpregt0
17-Nov-08 rpne0t    rpne0
17-Nov-08 rprene0t  rprene0
17-Nov-08 rpcnne0t  rpcnne0
17-Nov-08 rpaddclt  rpaddcl
17-Nov-08 rpmulclt  rpmulcl
17-Nov-08 rpdivclt  rpdivcl
17-Nov-08 rerpdivclt rerpdivcl
17-Nov-08 rpnegt    rpneg
17-Nov-08 nnreclt   nnrecl
17-Nov-08 nnnn0t    nnnn0
17-Nov-08 nn0ret    nn0re
17-Nov-08 nn0cnt    nn0cn
17-Nov-08 nn0ge0t   nn0ge0
17-Nov-08 nn0le0eq0t nn0le0eq0
17-Nov-08 nn0addclt nn0addcl
17-Nov-08 nn0mulclt nn0mulcl
17-Nov-08 nnnn0addclt nnnn0addcl
17-Nov-08 nn0nnaddclt nn0nnaddcl
17-Nov-08 nn0ltp1let nn0ltp1le
17-Nov-08 nn0leltp1t nn0leltp1
17-Nov-08 nn0ltlem1t nn0ltlem1
17-Nov-08 nn0addge1t nn0addge1
17-Nov-08 nn0addge2t nn0addge2
17-Nov-08 zret      zre
17-Nov-08 zcnt      zcn
17-Nov-08 nnzt      nnz
17-Nov-08 nn0zt     nn0z
17-Nov-08 znnnlt1t  znnnlt1
17-Nov-08 nn0subt   nn0sub
17-Nov-08 nn0sub2t  nn0sub2
17-Nov-08 znegclt   znegcl
17-Nov-08 zaddclt   zaddcl
17-Nov-08 zsubclt   zsubcl
17-Nov-08 zrevaddclt zrevaddcl
17-Nov-08 nn0p1nnt  nn0p1nn
17-Nov-08 nnm1nn0t  nnm1nn0
17-Nov-08 znnsubt   znnsub
17-Nov-08 znn0subt  znn0sub
17-Nov-08 znn0sub2t znn0sub2
17-Nov-08 zmulclt   zmulcl
17-Nov-08 zltp1let  zltp1le
17-Nov-08 zleltp1t  zleltp1
17-Nov-08 zlem1ltt  zlem1lt
17-Nov-08 zltlem1t  zltlem1
17-Nov-08 nn0lem1ltt nn0lem1lt
17-Nov-08 nnlem1ltt nnlem1lt
17-Nov-08 nnltlem1t nnltlem1
17-Nov-08 zdivt     zdiv
17-Nov-08 zdivaddt  zdivadd
17-Nov-08 zdivmult  zdivmul
17-Nov-08 z2get     z2ge
17-Nov-08 zextlet   zextle
17-Nov-08 zextltt   zextlt
17-Nov-08 recnzt    recnz
17-Nov-08 btwnnzt   btwnnz
17-Nov-08 gtndivt   gtndiv
17-Nov-08 primet    prime
17-Nov-08 nneot     nneo
17-Nov-08 zeot      zeo
17-Nov-08 qret      qre
17-Nov-08 zqt       zq
17-Nov-08 nnqt      nnq
17-Nov-08 qcnt      qcn
17-Nov-08 qaddclt   qaddcl
17-Nov-08 qnegclt   qnegcl
17-Nov-08 qmulclt   qmulcl
17-Nov-08 qsubclt   qsubcl
17-Nov-08 qrecclt   qreccl
17-Nov-08 qdivclt   qdivcl
17-Nov-08 qrevaddclt qrevaddcl
17-Nov-08 nnrecqt   nnrecq
17-Nov-08 irraddt   irradd
17-Nov-08 irrmult   irrmul
17-Nov-08 flvalt    flval
17-Nov-08 flclt     flcl
17-Nov-08 flreclt   flrecl
17-Nov-08 flleltt   fllelt
17-Nov-08 fllet     flle
17-Nov-08 flltp1t   flltp1
17-Nov-08 fraclt1t  fraclt1
17-Nov-08 fracge0t  fracge0
17-Nov-08 flget     flge
17-Nov-08 flltt     fllt
17-Nov-08 flidt     flid
17-Nov-08 flidmt    flidm
17-Nov-08 flidzt    flidz
17-Nov-08 flwordit  flwordi
17-Nov-08 flval2t   flval2
17-Nov-08 flval3t   flval3
17-Nov-08 flbit     flbi
17-Nov-08 flbi2t    flbi2
17-Nov-08 flge0nn0t flge0nn0
17-Nov-08 flge1nnt  flge1nn
17-Nov-08 fladdzt   fladdz
17-Nov-08 btwnzge0t btwnzge0
17-Nov-08 flhalft   flhalf
17-Nov-08 ceiclt    ceicl
17-Nov-08 ceiget    ceige
17-Nov-08 ceim1lt   ceim1l
17-Nov-08 ceilet    ceile
17-Nov-08 fldivt    fldiv
17-Nov-08 fldiv2t   fldiv2
17-Nov-08 modvalt   modval
17-Nov-08 modclt    modcl
17-Nov-08 modge0t   modge0
17-Nov-08 modltt    modlt
17-Nov-08 modfract  modfrac
17-Nov-08 flmodt    flmod
17-Nov-08 modcyct   modcyc
17-Nov-08 modcyc2t  modcyc2
17-Nov-08 modadd1t  modadd1
17-Nov-08 modmul1t  modmul1
17-Nov-08 moddit    moddi
17-Nov-08 modirrt   modirr
17-Nov-08 ioovalt   iooval
17-Nov-08 iooval2t  iooval2
17-Nov-08 ioo0t     ioo0
17-Nov-08 ioon0t    ioon0
17-Nov-08 iooint    iooin
17-Nov-08 iocvalt   iocval
17-Nov-08 icovalt   icoval
17-Nov-08 iccvalt   iccval
17-Nov-08 elioo1t   elioo1
17-Nov-08 elioo2t   elioo2
17-Nov-08 elioc1t   elioc1
17-Nov-08 elico1t   elico1
17-Nov-08 elicc1t   elicc1
17-Nov-08 elioo5t   elioo5
17-Nov-08 eliooret  elioore
17-Nov-08 eliooxrt  eliooxr
17-Nov-08 eliooordt eliooord
17-Nov-08 elioc2t   elioc2
17-Nov-08 elico2t   elico2
17-Nov-08 elicc2t   elicc2
17-Nov-08 iooshft   iooshf
17-Nov-08 iccssret  iccssre
17-Nov-08 lbicc2t   lbicc2
17-Nov-08 ubicc2t   ubicc2
17-Nov-08 ioonegt   iooneg
17-Nov-08 iccnegt   iccneg
17-Nov-08 icoshft   icoshf
17-Nov-08 ioojoint  ioojoin
17-Nov-08 uzvalt    uzval
17-Nov-08 eluz1t    eluz1
17-Nov-08 eluz2t    eluz2
17-Nov-08 eluzt     eluz
17-Nov-08 uzidt     uzid
17-Nov-08 uznegit   uznegi
17-Nov-08 uz11t     uz11
17-Nov-08 eluzp1m1t eluzp1m1
17-Nov-08 eluzp1lt  eluzp1l
17-Nov-08 eluzp1p1t eluzp1p1
17-Nov-08 uzaddclt  uzaddcl
17-Nov-08 fzvalt    fzval
17-Nov-08 elfz1t    elfz1
17-Nov-08 elfzt     elfz
17-Nov-08 elfz2t    elfz2
17-Nov-08 elfz5t    elfz5
17-Nov-08 elfz4t    elfz4
17-Nov-08 eluzfzt   eluzfz
17-Nov-08 elfzuz3t  elfzuz3
17-Nov-08 elfzuz2t  elfzuz2
17-Nov-08 eluzfz1t  eluzfz1
17-Nov-08 elfzuzt   elfzuz
17-Nov-08 eluzfz2t  eluzfz2
17-Nov-08 elfz3t    elfz3
17-Nov-08 elfz1eqt  elfz1eq
17-Nov-08 fznt      fzn
17-Nov-08 elfznnt   elfznn
17-Nov-08 elfz2nn0t elfz2nn0
17-Nov-08 elfznn0t  elfznn0
17-Nov-08 elfz3nn0t elfz3nn0
17-Nov-08 fznn0subt fznn0sub
17-Nov-08 fznn0sub2t fznn0sub2
17-Nov-08 fzaddelt  fzaddel
17-Nov-08 fzsubelt  fzsubel
17-Nov-08 fzoptht   fzopth
17-Nov-08 fzss1t    fzss1
17-Nov-08 fzss2t    fzss2
17-Nov-08 fzssuzt   fzssuz
17-Nov-08 fzssp1t   fzssp1
17-Nov-08 fzp1sst   fzp1ss
17-Nov-08 fzelp1t   fzelp1
17-Nov-08 fzrevt    fzrev
17-Nov-08 fzrev2t   fzrev2
17-Nov-08 fzrev2it  fzrev2i
17-Nov-08 fzrev3t   fzrev3
17-Nov-08 fzrev3it  fzrev3i
17-Nov-08 fznn0t    fznn0
17-Nov-08 fz1sbct   fz1sbc
17-Nov-08 fzneuzt   fzneuz
17-Nov-08 fzrevralt fzrevral
17-Nov-08 fzrevral2t fzrevral2
17-Nov-08 fzrevral3t fzrevral3
17-Nov-08 fzshftralt fzshftral
17-Nov-08 ser1ft    ser1f
17-Nov-08 limsupvalt limsupval
17-Nov-08 limsupclt limsupcl
17-Nov-08 expvalt   expval
17-Nov-08 exp0t     exp0
17-Nov-08 expnnvalt expnnval
17-Nov-08 exp1t     exp1
17-Nov-08 expp1t    expp1
17-Nov-08 nnexpclt  nnexpcl
17-Nov-08 nn0expclt nn0expcl
17-Nov-08 zexpclt   zexpcl
17-Nov-08 qexpclt   qexpcl
17-Nov-08 reexpclt  reexpcl
17-Nov-08 expclt    expcl
17-Nov-08 rpexpclt  rpexpcl
17-Nov-08 expm1t    expm1
17-Nov-08 1expt     1exp
17-Nov-08 expeq0t   expeq0
17-Nov-08 expne0t   expne0
17-Nov-08 expne0it  expne0i
17-Nov-08 expgt0t   expgt0
17-Nov-08 0expt     0exp
17-Nov-08 expge0t   expge0
17-Nov-08 expgt1t   expgt1
17-Nov-08 expge1t   expge1
17-Nov-08 mulexpt   mulexp
17-Nov-08 recexpt   recexp
17-Nov-08 expaddt   expadd
17-Nov-08 expmult   expmul
17-Nov-08 expsubt   expsub
17-Nov-08 divexpt   divexp
17-Nov-08 expordit  expordi
17-Nov-08 expcant   expcan
17-Nov-08 expordt   expord
17-Nov-08 expwordit expwordi
17-Nov-08 expord2t  expord2
17-Nov-08 expword2it expword2i
17-Nov-08 expmwordit expmwordi
17-Nov-08 exple1t   exple1
17-Nov-08 expubndt  expubnd
17-Nov-08 sqvalt    sqval
17-Nov-08 sqnegt    sqneg
17-Nov-08 sqclt     sqcl
17-Nov-08 sqmult    sqmul
17-Nov-08 sqeq0t    sqeq0
17-Nov-08 sqne0t    sqne0
17-Nov-08 resqclt   resqcl
17-Nov-08 sqgt0t    sqgt0
17-Nov-08 sq11t     sq11
17-Nov-08 lt2sqt    lt2sq
17-Nov-08 le2sqt    le2sq
17-Nov-08 le2sqit   le2sq2
17-Nov-08 sqge0t    sqge0
17-Nov-08 sqlecant  sqlecan
17-Nov-08 subsqt    subsq
17-Nov-08 subsq2t   subsq2
17-Nov-08 sqeqort   sqeqor
17-Nov-08 binom2t   binom2
17-Nov-08 sq01t     sq01
17-Nov-08 expnbndt  expnbnd
17-Nov-08 expnlbndt expnlbnd
17-Nov-08 expnlbnd2t expnlbnd2
17-Nov-08 nn0opth2t nn0opth2
17-Nov-08 sqrclt    sqrcl
17-Nov-08 sqrgt0t   sqrgt0
17-Nov-08 sqrge0t   sqrge0
17-Nov-08 sqrlet    sqrle
17-Nov-08 sqr00t    sqr00
17-Nov-08 rpsqrclt  rpsqrcl
17-Nov-08 sqrsqt    sqrsq
17-Nov-08 sqsqrt    sqsqr
17-Nov-08 crut      cru
17-Nov-08 revalt    reval
17-Nov-08 imvalt    imval
17-Nov-08 reclt     recl
17-Nov-08 imclt     imcl
17-Nov-08 replimt   replim
17-Nov-08 absvalt   absval
17-Nov-08 cjvalt    cjval
17-Nov-08 cjclt     cjcl
17-Nov-08 crret     crre
17-Nov-08 crimt     crim
17-Nov-08 imret     imre
17-Nov-08 reim0t    reim0
17-Nov-08 reim0bt   reim0b
17-Nov-08 rerebt    rereb
17-Nov-08 mulret    mulre
17-Nov-08 reret     rere
17-Nov-08 cjrebt    cjreb
17-Nov-08 cjmulrclt cjmulrcl
17-Nov-08 cjmulvalt cjmulval
17-Nov-08 cjmulge0t cjmulge0
17-Nov-08 renegt    reneg
17-Nov-08 readdt    readd
17-Nov-08 resubt    resub
17-Nov-08 imnegt    imneg
17-Nov-08 imaddt    imadd
17-Nov-08 imsubt    imsub
17-Nov-08 cjret     cjre
17-Nov-08 cjcjt     cjcj
17-Nov-08 cjaddt    cjadd
17-Nov-08 cjmult    cjmul
17-Nov-08 cjnegt    cjneg
17-Nov-08 addcjt    addcj
17-Nov-08 cjsubt    cjsub
17-Nov-08 cjexpt    cjexp
17-Nov-08 recjt     recj
17-Nov-08 imcjt     imcj
17-Nov-08 cjreimt   cjreim
17-Nov-08 cjreim2t  cjreim2
17-Nov-08 cj11t     cj11
17-Nov-08 cjne0t    cjne0
17-Nov-08 absnegt   absneg
17-Nov-08 absclt    abscl
17-Nov-08 abscjt    abscj
17-Nov-08 absvalsqt absvalsq
17-Nov-08 absvalsq2t absvalsq2
17-Nov-08 sqabsaddt sqabsadd
17-Nov-08 sqabssubt sqabssub
17-Nov-08 absval2t  absval2
17-Nov-08 abs00t    abs00
17-Nov-08 absge0t   absge0
17-Nov-08 absrpclt  absrpcl
17-Nov-08 absreimsqt absreimsq
17-Nov-08 absreimt  absreim
17-Nov-08 absmult   absmul
17-Nov-08 absdivt   absdiv
17-Nov-08 absidt    absid
17-Nov-08 absnidt   absnid
17-Nov-08 leabst    leabs
17-Nov-08 absort    absor
17-Nov-08 absret    absre
17-Nov-08 absresqt  absresq
17-Nov-08 absexpt   absexp
17-Nov-08 absrelet  absrele
17-Nov-08 absimlet  absimle
17-Nov-08 nn0absclt nn0abscl
17-Nov-08 absltt    abslt
17-Nov-08 abslet    absle
17-Nov-08 abssubne0t abssubne0
17-Nov-08 absdifltt absdiflt
17-Nov-08 absdiflet absdifle
17-Nov-08 lenegsqt  lenegsq
17-Nov-08 releabst  releabs
17-Nov-08 cjdivt    cjdiv
17-Nov-08 absidmt   absidm
17-Nov-08 absgt0t   absgt0
17-Nov-08 abssubt   abssub
17-Nov-08 abssubge0t abssubge0
17-Nov-08 abssuble0t abssuble0
17-Nov-08 absmaxt   absmax
17-Nov-08 abstrit   abstri
17-Nov-08 abs3dift  abs3dif
17-Nov-08 abs2dift  abs2dif
17-Nov-08 abs2difabst abs2difabs
17-Nov-08 recant    recan
17-Nov-08 abs3lemt  abs3lem
17-Nov-08 facnnt    facnn
17-Nov-08 facp1t    facp1
17-Nov-08 facnn2t   facnn2
17-Nov-08 facclt    faccl
17-Nov-08 facne0t   facne0
17-Nov-08 facdivt   facdiv
17-Nov-08 facndivt  facndiv
17-Nov-08 facwordit facwordi
17-Nov-08 facavgt   facavg
17-Nov-08 bcvalt    bcval
17-Nov-08 bcval2t   bcval2
17-Nov-08 bcval3t   bcval3
17-Nov-08 bcval4t   bcval4
17-Nov-08 bccmplt   bccmpl
17-Nov-08 bcn0t     bcn0
17-Nov-08 bcnnt     bcnn
17-Nov-08 bcnp11t   bcnp11
17-Nov-08 bcnp1nt   bcnp1n
17-Nov-08 bcpasc2t  bcpasc2
17-Nov-08 bcpasct   bcpasc
17-Nov-08 bccl2t    bccl2
17-Nov-08 bcclt     bccl
17-Nov-08 permnnt   permnn
17-Nov-08 fsumclt   fsumcl
17-Nov-08 fsum0clt  fsum0cl
17-Nov-08 fsumreclt fsumrecl
17-Nov-08 fsumsplit fsumspli
17-Nov-08 fsum0split fsum0spli
17-Nov-08 fsumshft  fsumshf
17-Nov-08 fsumconst fsumcons
17-Nov-08 clmi2at   clmi2a
17-Nov-08 caucvg3t  caucvg3
17-Nov-08 eftclt    eftcl
17-Nov-08 efvalt    efval
17-Nov-08 efclt     efcl
17-Nov-08 reefclt   reefcl
17-Nov-08 efcjt     efcj
17-Nov-08 efaddt    efadd
17-Nov-08 efcant    efcan
17-Nov-08 efne0t    efne0
17-Nov-08 efsubt    efsub
17-Nov-08 efexpt    efexp
17-Nov-08 efnn0valt efnn0val
17-Nov-08 reeftclt  reeftcl
17-Nov-08 eftlubclt eftlubcl
17-Nov-08 efgt0t    efgt0
17-Nov-08 reef11t   reef11
17-Nov-08 eflegeot  eflegeo
17-Nov-08 efm1legeot efm1legeo
17-Nov-08 sinvalt   sinval
17-Nov-08 cosvalt   cosval
17-Nov-08 sinclt    sincl
17-Nov-08 cosclt    coscl
17-Nov-08 resinvalt resinval
17-Nov-08 recosvalt recosval
17-Nov-08 resinclt  resincl
17-Nov-08 recosclt  recoscl
17-Nov-08 sinnegt   sinneg
17-Nov-08 cosnegt   cosneg
17-Nov-08 efivalt   efival
17-Nov-08 efmivalt  efmival
17-Nov-08 efeult    efeul
17-Nov-08 sinaddt   sinadd
17-Nov-08 cosaddt   cosadd
17-Nov-08 sinsubt   sinsub
17-Nov-08 cossubt   cossub
17-Nov-08 addsint   addsin
17-Nov-08 subsint   subsin
17-Nov-08 addcost   addcos
17-Nov-08 subcost   subcos
17-Nov-08 sincossqt sincossq
17-Nov-08 sin2tt    sin2t
17-Nov-08 cos2tt    cos2t
17-Nov-08 cos2tsint cos2tsin
17-Nov-08 sinbndt   sinbnd
17-Nov-08 cosbndt   cosbnd
17-Nov-08 absefit   absefi
17-Nov-08 abseft    absef
17-Nov-08 absefibt  absefib
17-Nov-08 cosh111t  cosh111
17-Nov-08 logclt    logcl
17-Nov-08 relogclt  relogcl
17-Nov-08 eflogt    eflog
17-Nov-08 reeflogt  reeflog
17-Nov-08 logeft    logef
17-Nov-08 relogeft  relogef
17-Nov-08 relogmult relogmul
17-Nov-08 relogdivt relogdiv
17-Nov-08 explogt   explog
17-Nov-08 reexplogt reexplog
17-Nov-08 relogexpt relogexp
17-Nov-08 logltbt   logltb
17-Nov-08 1p1times  1p1timesi
17-Nov-08 2climnn   2climnni
17-Nov-08 2climnn0  2climnn0i
17-Nov-08 2shft     2shfti
17-Nov-08 2times    2timesi
17-Nov-08 abs00     abs00i
17-Nov-08 abs1m     abs1mi
17-Nov-08 abs3dif   abs3difi
17-Nov-08 abscj     abscji
17-Nov-08 abscl     abscli
17-Nov-08 absdivz   absdivzi
17-Nov-08 absef01tlub absef01tlubi
17-Nov-08 absefm1le absefm1lei
17-Nov-08 absge0    absge0i
17-Nov-08 absgt0    absgt0i
17-Nov-08 absid     absidi
17-Nov-08 absle     abslei
17-Nov-08 abslt     abslti
17-Nov-08 absmul    absmuli
17-Nov-08 absneg    absnegi
17-Nov-08 absnid    absnidi
17-Nov-08 absor     absori
17-Nov-08 abspef01tlub abspef01tlubi
17-Nov-08 absre     absrei
17-Nov-08 abssub    abssubi
17-Nov-08 abstri    abstrii
17-Nov-08 absval2   absval2i
17-Nov-08 absvalsq  absvalsqi
17-Nov-08 absvalsq2 absvalsq2i
17-Nov-08 add12     add12i
17-Nov-08 add20     add20i
17-Nov-08 add23     add23i
17-Nov-08 add4      add4i
17-Nov-08 add42     add42i
17-Nov-08 addass    addassi
17-Nov-08 addcan    addcani
17-Nov-08 addcan2   addcan2i
17-Nov-08 addcj     addcji
17-Nov-08 addcl     addcli
17-Nov-08 addcom    addcomi
17-Nov-08 adddi     adddii
17-Nov-08 adddir    adddiri
17-Nov-08 addge0    addge0i
17-Nov-08 addgegt0  addgegt0i
17-Nov-08 addgt0    addgt0i
17-Nov-08 addgt0i   addgt0ii
17-Nov-08 addid1    addid1i
17-Nov-08 addid2    addid2i
17-Nov-08 addsub    addsubi
17-Nov-08 addsub4   addsub4i
17-Nov-08 addsubass addsubassi
17-Nov-08 bcpasc    bcpasci
17-Nov-08 bcpasc2   bcpasc2i
17-Nov-08 binom     binomi
17-Nov-08 binom1p   binom1pi
17-Nov-08 binom2    binom2i
17-Nov-08 binom2a   binom2ai
17-Nov-08 cau2      cau2i
17-Nov-08 cau3      cau3i
17-Nov-08 cau3i     cau3ii
17-Nov-08 cau3ir    cau3iri
17-Nov-08 cau4i     cau4ii
17-Nov-08 cau5      cau5i
17-Nov-08 cau5i     cau5ii
17-Nov-08 caubnd    caubndi
17-Nov-08 caucvg    caucvgi
17-Nov-08 caucvg2   caucvg2i
17-Nov-08 caucvg3   caucvg3i
17-Nov-08 caucvg3a  caucvg3ai
17-Nov-08 cauim     cauimi
17-Nov-08 caure     caurei
17-Nov-08 cbvsum    cbvsumi
17-Nov-08 cjadd     cjaddi
17-Nov-08 cjcj      cjcji
17-Nov-08 cjcl      cjcli
17-Nov-08 cjdiv     cjdivi
17-Nov-08 cjmul     cjmuli
17-Nov-08 cjmulge0  cjmulge0i
17-Nov-08 cjmulrcl  cjmulrcli
17-Nov-08 cjmulval  cjmulvali
17-Nov-08 cjneg     cjnegi
17-Nov-08 cjreb     cjrebi
17-Nov-08 clim2serz clim2serzi
17-Nov-08 clim2serzt clim2serzti
17-Nov-08 climabs   climabsi
17-Nov-08 climabs0  climabs0i
17-Nov-08 climadd   climaddi
17-Nov-08 climaddc  climaddci
17-Nov-08 climaddc1 climaddc1i
17-Nov-08 climaddc2 climaddc2i
17-Nov-08 climcau   climcaui
17-Nov-08 climcj    climcji
17-Nov-08 climcmp   climcmpi
17-Nov-08 climcmpc1 climcmpc1i
17-Nov-08 climconst climconsti
17-Nov-08 climeu    climeui
17-Nov-08 climfnrcl climfnrcli
17-Nov-08 climge0   climge0i
17-Nov-08 climim    climimi
17-Nov-08 climmul   climmuli
17-Nov-08 climmulc  climmulci
17-Nov-08 climmulc2 climmulc2i
17-Nov-08 climre    climrei
17-Nov-08 climrecl  climrecli
17-Nov-08 climres   climresi
17-Nov-08 climreu   climreui
17-Nov-08 climserzle climserzlei
17-Nov-08 climshft  climshfti
17-Nov-08 climshft2 climshft2i
17-Nov-08 climsqueeze climsqueezei
17-Nov-08 climsqueeze2 climsqueeze2i
17-Nov-08 climsub   climsubi
17-Nov-08 climsubc2 climsubc2i
17-Nov-08 climsup   climsupi
17-Nov-08 climub    climubi
17-Nov-08 climubi   climubii
17-Nov-08 climuni   climunii
17-Nov-08 climunii  climuniii
17-Nov-08 climuz0   climuz0i
17-Nov-08 clm0      clm0i
17-Nov-08 clm0i     clm0ii
17-Nov-08 clm0nns   clm0nnsi
17-Nov-08 clm1      clm1i
17-Nov-08 clm2      clm2i
17-Nov-08 clm3      clm3i
17-Nov-08 clm4      clm4i
17-Nov-08 clm4at    clm4ati
17-Nov-08 clm4f     clm4fi
17-Nov-08 clm4le    clm4lei
17-Nov-08 clmi1     clmi1i
17-Nov-08 clmi2     clmi2i
17-Nov-08 clmi2rp   clmi2rpi
17-Nov-08 clmnns    clmnnsi
17-Nov-08 cnegex    cnegexi
17-Nov-08 cosadd    cosaddi
17-Nov-08 crim      crimi
17-Nov-08 crmul     crmuli
17-Nov-08 crne0     crne0i
17-Nov-08 crre      crrei
17-Nov-08 crrecz    crreczi
17-Nov-08 cru       crui
17-Nov-08 cvg1      cvg1i
17-Nov-08 cvg1i     cvg1ii
17-Nov-08 cvg2      cvg2i
17-Nov-08 cvg3      cvg3i
17-Nov-08 cvganuz   cvganuzi
17-Nov-08 cvgcmp    cvgcmpi
17-Nov-08 cvgcmp2   cvgcmp2i
17-Nov-08 cvgcmp2c  cvgcmp2ci
17-Nov-08 cvgcmp3c  cvgcmp3ci
17-Nov-08 cvgcmp3ce cvgcmp3cei
17-Nov-08 cvgcmp3cet cvgcmp3ceti
17-Nov-08 cvgcmpub  cvgcmpubi
17-Nov-08 cvgrat    cvgrati
17-Nov-08 dfef2     dfef2i
17-Nov-08 dfuz      dfuzi
17-Nov-08 div0      div0i
17-Nov-08 div1      div1i
17-Nov-08 div11     div11i
17-Nov-08 div23     div23i
17-Nov-08 divadddiv divadddivi
17-Nov-08 divass    divassi
17-Nov-08 divassz   divasszi
17-Nov-08 divcan1   divcan1i
17-Nov-08 divcan1z  divcan1zi
17-Nov-08 divcan2   divcan2i
17-Nov-08 divcan2z  divcan2zi
17-Nov-08 divcan3   divcan3i
17-Nov-08 divcan3z  divcan3zi
17-Nov-08 divcan4   divcan4i
17-Nov-08 divcan4z  divcan4zi
17-Nov-08 divcl     divcli
17-Nov-08 divclz    divclzi
17-Nov-08 divdir    divdiri
17-Nov-08 divdirz   divdirzi
17-Nov-08 divdiv23  divdiv23i
17-Nov-08 divdiv23z divdiv23zi
17-Nov-08 divdivdiv divdivdivi
17-Nov-08 divge0    divge0i
17-Nov-08 divgt0    divgt0i
17-Nov-08 divgt0i   divgt0ii
17-Nov-08 divgt0i2  divgt0i2i
17-Nov-08 divid     dividi
17-Nov-08 divmul    divmuli
17-Nov-08 divmul13  divmul13i
17-Nov-08 divmuldiv divmuldivi
17-Nov-08 divmulz   divmulzi
17-Nov-08 divne0    divne0i
17-Nov-08 divrec    divreci
17-Nov-08 divrecz   divreczi
17-Nov-08 divval    divvali
17-Nov-08 dsupivth  dsupivthi
17-Nov-08 ef01tlub  ef01tlubi
17-Nov-08 ef1tlub   ef1tlubi
17-Nov-08 ef4p      ef4pi
17-Nov-08 efadd     efaddi
17-Nov-08 efcj      efcji
17-Nov-08 effsumle  effsumlei
17-Nov-08 efge1     efge1i
17-Nov-08 efge1p    efge1pi
17-Nov-08 efgt0     efgt0i
17-Nov-08 efgt1     efgt1i
17-Nov-08 eflegeo   eflegeoi
17-Nov-08 eflt      eflti
17-Nov-08 efltb     efltbi
17-Nov-08 efm1legeo efm1legeoi
17-Nov-08 efm1lim   efm1limi
17-Nov-08 efsep     efsepi
17-Nov-08 eft0val   eft0vali
17-Nov-08 eftabs    eftabsi
17-Nov-08 eftlclt   eftlclti
17-Nov-08 eftlext   eftlexti
17-Nov-08 elcncf1d  elcncf1di
17-Nov-08 elcncf1i  elcncf1ii
17-Nov-08 elfzel2   elfzel2i
17-Nov-08 elrpi     elrpii
17-Nov-08 eluz1     eluz1i
17-Nov-08 eluzaddi  eluzaddii
17-Nov-08 eluzsubi  eluzsubii
17-Nov-08 eqle      eqlei
17-Nov-08 eqneg     eqnegi
17-Nov-08 expcnv    expcnvi
17-Nov-08 fnsmnt    fnsmnti
17-Nov-08 fseqsupub fseqsupubi
17-Nov-08 fsum1     fsum1i
17-Nov-08 fsum1f    fsum1fi
17-Nov-08 fsum2     fsum2i
17-Nov-08 fsum3     fsum3i
17-Nov-08 fsum4     fsum4i
17-Nov-08 fsump1    fsump1i
17-Nov-08 fsump1f   fsump1fi
17-Nov-08 fsumser0f fsumser0fi
17-Nov-08 fsumser1f fsumser1fi
17-Nov-08 fsumserz  fsumserzi
17-Nov-08 fsumserz2 fsumserz2i
17-Nov-08 fsumserzf fsumserzfi
17-Nov-08 fzelp1    fzelp1i
17-Nov-08 geoser    geoseri
17-Nov-08 geosum    geosumi
17-Nov-08 gt0ne0    gt0ne0i
17-Nov-08 gt0ne0i   gt0ne0ii
17-Nov-08 halfpos   halfposi
17-Nov-08 hbneg     hbnegi
17-Nov-08 hbnegd    hbnegdi
17-Nov-08 hbsum     hbsumi
17-Nov-08 hbsum1    hbsum1i
17-Nov-08 icoshftf1oi icoshftf1oii
17-Nov-08 imadd     imaddi
17-Nov-08 imcj      imcji
17-Nov-08 imcl      imcli
17-Nov-08 immul     immuli
17-Nov-08 imneg     imnegi
17-Nov-08 infcvg    infcvgiOLD
17-Nov-08 infcvgaux1 infcvgaux1i
17-Nov-08 infcvgaux2 infcvgaux2i
17-Nov-08 ipcn      ipcni
17-Nov-08 iserzabs  iserzabsi
17-Nov-08 iserzcmp  iserzcmpi
17-Nov-08 iserzcmp0 iserzcmp0i
17-Nov-08 iserzex   iserzexi
17-Nov-08 iserzext  iserzexti
17-Nov-08 iserzgt0  iserzgt0i
17-Nov-08 iserzmulc1 iserzmulc1i
17-Nov-08 iserzshft iserzshfti
17-Nov-08 iserzshft2 iserzshft2i
17-Nov-08 isum0split isum0spliti
17-Nov-08 isum1clim isum1climi
17-Nov-08 isum1p    isum1pi
17-Nov-08 isumclim2t isumclim2ti
17-Nov-08 isumclim2tf isumclim2tfi
17-Nov-08 isumclim3t isumclim3ti
17-Nov-08 isumclim4t isumclim4ti
17-Nov-08 isumclim5t isumclim5ti
17-Nov-08 isumclimt isumclimti
17-Nov-08 isumclimtf isumclimtfi
17-Nov-08 isumclt   isumclti
17-Nov-08 isumcmpi  isumcmpii
17-Nov-08 isummulc1 isummulc1i
17-Nov-08 isummulc1ALT isummulc1iALT
17-Nov-08 isummulc1a isummulc1ai
17-Nov-08 isumnn0nn isumnn0nni
17-Nov-08 isumnn0nna isumnn0nnai
17-Nov-08 isumnul   isumnuli
17-Nov-08 isumreclt isumreclti
17-Nov-08 isumshft  isumshfti
17-Nov-08 isumshft2 isumshft2i
17-Nov-08 isumsplit isumspliti
17-Nov-08 isumval2t isumval2ti
17-Nov-08 isumvalt  isumvalti
17-Nov-08 isumvaltf isumvaltfi
17-Nov-08 isupivth  isupivthi
17-Nov-08 le2add    le2addi
17-Nov-08 le2msq    le2msqi
17-Nov-08 le2sq     le2sqi
17-Nov-08 le2tri3   le2tri3i
17-Nov-08 leabs     leabsi
17-Nov-08 leadd1    leadd1i
17-Nov-08 leadd2    leadd2i
17-Nov-08 lecase    lecasei
17-Nov-08 ledivp1   ledivp1i
17-Nov-08 leid      leidi
17-Nov-08 leloe     leloei
17-Nov-08 lelttr    lelttri
17-Nov-08 lelttrd   lelttrdi
17-Nov-08 lemul1    lemul1i
17-Nov-08 lemul2    lemul2i
17-Nov-08 leneg     lenegi
17-Nov-08 lenegcon1 lenegcon1i
17-Nov-08 lenlt     lenlti
17-Nov-08 lerec     lereci
17-Nov-08 lesub0    lesub0i
17-Nov-08 lesubadd  lesubaddi
17-Nov-08 lesubadd2 lesubadd2i
17-Nov-08 letr      letri
17-Nov-08 letrd     letrdi
17-Nov-08 letri     letrii
17-Nov-08 letri3    letri3i
17-Nov-08 lt2add    lt2addi
17-Nov-08 lt2msq    lt2msqi
17-Nov-08 lt2sq     lt2sqi
17-Nov-08 ltadd1    ltadd1i
17-Nov-08 ltadd2    ltadd2i
17-Nov-08 ltaddpos  ltaddposi
17-Nov-08 ltaddsub  ltaddsubi
17-Nov-08 ltdiv1    ltdiv1i
17-Nov-08 ltdiv1i   ltdiv1ii
17-Nov-08 ltdiv23   ltdiv23i
17-Nov-08 ltdiv23i  ltdiv23ii
17-Nov-08 ltdivp1   ltdivp1i
17-Nov-08 ltle      ltlei
17-Nov-08 ltlei     ltleii
17-Nov-08 ltlen     ltleni
17-Nov-08 ltletr    ltletri
17-Nov-08 ltletrd   ltletrdi
17-Nov-08 ltmul1    ltmul1i
17-Nov-08 ltmul1i   ltmul1ii
17-Nov-08 ltmul2    ltmul2i
17-Nov-08 ltmuldiv  ltmuldivi
17-Nov-08 ltne      ltnei
17-Nov-08 ltneg     ltnegi
17-Nov-08 ltnegcon1 ltnegcon1i
17-Nov-08 ltnegcon2 ltnegcon2i
17-Nov-08 ltnle     ltnlei
17-Nov-08 ltnr      ltnri
17-Nov-08 ltnsym    ltnsymi
17-Nov-08 ltp1      ltp1i
17-Nov-08 ltrec     ltreci
17-Nov-08 ltreci    ltrecii
17-Nov-08 ltsubadd  ltsubaddi
17-Nov-08 ltsubadd2 ltsubadd2i
17-Nov-08 lttr      lttri
17-Nov-08 lttrd     lttrdi
17-Nov-08 lttri2    lttri2i
17-Nov-08 lttri3    lttri3i
17-Nov-08 msq0      msq0i
17-Nov-08 msq11     msq11i
17-Nov-08 msqge0    msqge0i
17-Nov-08 msqgt0    msqgt0i
17-Nov-08 mul01     mul01i
17-Nov-08 mul02     mul02i
17-Nov-08 mul0or    mul0ori
17-Nov-08 mul12     mul12i
17-Nov-08 mul23     mul23i
17-Nov-08 mul2neg   mul2negi
17-Nov-08 mul4      mul4i
17-Nov-08 muladd    muladdi
17-Nov-08 mulass    mulassi
17-Nov-08 mulcan    mulcani
17-Nov-08 mulcant2  mulcant2i
17-Nov-08 mulcl     mulcli
17-Nov-08 mulcom    mulcomi
17-Nov-08 mulge0    mulge0i
17-Nov-08 mulgt0    mulgt0i
17-Nov-08 mulgt0i   mulgt0ii
17-Nov-08 mulid1    mulid1i
17-Nov-08 mulid2    mulid2i
17-Nov-08 mulm1     mulm1i
17-Nov-08 muln0     mulne0i
17-Nov-08 mulneg1   mulneg1i
17-Nov-08 mulneg2   mulneg2i
17-Nov-08 neg11     neg11i
17-Nov-08 negcl     negcli
17-Nov-08 negcon1   negcon1i
17-Nov-08 negcon2   negcon2i
17-Nov-08 negdi     negdii
17-Nov-08 negeu     negeui
17-Nov-08 negfcncf  negfcncfi
17-Nov-08 negid     negidi
17-Nov-08 negn0     negn0i
17-Nov-08 negne0    negne0i
17-Nov-08 negneg    negnegi
17-Nov-08 negreb    negrebi
17-Nov-08 negsub    negsubi
17-Nov-08 negsubdi  negsubdii
17-Nov-08 negsubdi2 negsubdi2i
17-Nov-08 nn0addcl  nn0addcli
17-Nov-08 nn0addge1 nn0addge1i
17-Nov-08 nn0addge2 nn0addge2i
17-Nov-08 nn0cn     nn0cni
17-Nov-08 nn0ge0    nn0ge0i
17-Nov-08 nn0le2msqt nn0le2msqti
17-Nov-08 nn0le2x   nn0le2xi
17-Nov-08 nn0lele2x nn0lele2xi
17-Nov-08 nn0mulcl  nn0mulcli
17-Nov-08 nn0opth   nn0opthi
17-Nov-08 nn0opth2  nn0opth2i
17-Nov-08 nn0re     nn0rei
17-Nov-08 nncn      nncni
17-Nov-08 nneo      nneoi
17-Nov-08 nnesq     nnesqi
17-Nov-08 nngt0     nngt0i
17-Nov-08 nnlesq    nnlesqi
17-Nov-08 nnne0     nnne0i
17-Nov-08 nnnn0     nnnn0i
17-Nov-08 nnre      nnrei
17-Nov-08 nnsqcl    nnsqcli
17-Nov-08 nnsub     nnsubi
17-Nov-08 om2uz0    om2uz0i
17-Nov-08 om2uzf1o  om2uzf1oi
17-Nov-08 om2uziso  om2uzisoi
17-Nov-08 om2uzlt   om2uzlti
17-Nov-08 om2uzlt2  om2uzlt2i
17-Nov-08 om2uzran  om2uzrani
17-Nov-08 om2uzsuc  om2uzsuci
17-Nov-08 om2uzuz   om2uzuzi
17-Nov-08 peano2zd  peano2zdi
17-Nov-08 peano5nn  peano5nni
17-Nov-08 peano5uz  peano5uzi
17-Nov-08 peano5uzt peano5uzti
17-Nov-08 pm2.61ltle pm2.61ltlei
17-Nov-08 pncan3    pncan3i
17-Nov-08 pnncan    pnncani
17-Nov-08 posdif    posdifi
17-Nov-08 posex     posexi
17-Nov-08 prodge0   prodge0i
17-Nov-08 prodgt0   prodgt0i
17-Nov-08 readd     readdi
17-Nov-08 readdcl   readdcli
17-Nov-08 rec11     rec11i
17-Nov-08 rec11i    rec11ii
17-Nov-08 reccl     reccli
17-Nov-08 recclz    recclzi
17-Nov-08 reccnv    reccnvi
17-Nov-08 receu     receui
17-Nov-08 recex     recexi
17-Nov-08 recgt0    recgt0i
17-Nov-08 recgt0i   recgt0ii
17-Nov-08 recid     recidi
17-Nov-08 recidz    recidzi
17-Nov-08 recj      recji
17-Nov-08 recl      recli
17-Nov-08 recn      recni
17-Nov-08 recnd     recndi
17-Nov-08 recne0z   recne0zi
17-Nov-08 recrec    recreci
17-Nov-08 recvalz   recvalzi
17-Nov-08 redivcl   redivcli
17-Nov-08 redivclz  redivclzi
17-Nov-08 reef11    reef11i
17-Nov-08 reefcl    reefcli
17-Nov-08 reeftlclt reeftlclti
17-Nov-08 reim0b    reim0bi
17-Nov-08 releabs   releabsi
17-Nov-08 remul     remuli
17-Nov-08 remulcl   remulcli
17-Nov-08 reneg     renegi
17-Nov-08 renegcl   renegcli
17-Nov-08 replim    replimi
17-Nov-08 rereb     rerebi
17-Nov-08 rereccl   rereccli
17-Nov-08 rerecclz  rerecclzi
17-Nov-08 resqcl    resqcli
17-Nov-08 resubcl   resubcli
17-Nov-08 reuunineg reuunineg
17-Nov-08 seq00     seq00i
17-Nov-08 seq01     seq01i
17-Nov-08 seq0fn    seq0fni
17-Nov-08 seq0fval  seq0fvali
17-Nov-08 seq0p1    seq0p1i
17-Nov-08 seq0seqz  seq0seqzi
17-Nov-08 seq0valt  seq0valti
17-Nov-08 seq11     seq11i
17-Nov-08 seq1bnd   seq1bndi
17-Nov-08 seq1cl    seq1cli
17-Nov-08 seq1cl2   seq1cl2i
17-Nov-08 seq1f     seq1fi
17-Nov-08 seq1f2    seq1f2i
17-Nov-08 seq1fn    seq1fni
17-Nov-08 seq1m1    seq1m1i
17-Nov-08 seq1p1    seq1p1i
17-Nov-08 seq1res   seq1resi
17-Nov-08 seq1rn    seq1rni
17-Nov-08 seq1rn2   seq1rn2i
17-Nov-08 seq1rval  seq1rvali
17-Nov-08 seq1seq0  seq1seq0i
17-Nov-08 seq1seq02t seq1seq02ti
17-Nov-08 seq1seq0t seq1seq0ti
17-Nov-08 seq1seqz  seq1seqzi
17-Nov-08 seq1shftid seq1shftidi
17-Nov-08 seq1ub    seq1ubi
17-Nov-08 seq1val   seq1vali
17-Nov-08 seq1val2  seq1val2i
17-Nov-08 seqz1     seqz1i
17-Nov-08 seqzcl    seqzcli
17-Nov-08 seqzeq    seqzeqi
17-Nov-08 seqzfn    seqzfni
17-Nov-08 seqzfval  seqzfvali
17-Nov-08 seqzfval2 seqzfval2i
17-Nov-08 seqzfveq  seqzfveqi
17-Nov-08 seqzm1    seqzm1i
17-Nov-08 seqzp1    seqzp1i
17-Nov-08 seqzres   seqzresi
17-Nov-08 seqzres2  seqzres2i
17-Nov-08 seqzresval seqzresvali
17-Nov-08 seqzrn    seqzrni
17-Nov-08 seqzrn2   seqzrn2i
17-Nov-08 seqzval2t seqzval2ti
17-Nov-08 seqzvalt  seqzvalti
17-Nov-08 ser00     ser00i
17-Nov-08 ser0cj    ser0cji
17-Nov-08 ser0cl1   ser0cl1i
17-Nov-08 ser0clt   ser0clti
17-Nov-08 ser0f     ser0fi
17-Nov-08 ser0mulc  ser0mulci
17-Nov-08 ser0p1    ser0p1i
17-Nov-08 ser11     ser11i
17-Nov-08 ser1absdif ser1absdifi
17-Nov-08 ser1add   ser1addi
17-Nov-08 ser1add2  ser1add2i
17-Nov-08 ser1cl1   ser1cl1i
17-Nov-08 ser1cl2   ser1cl2i
17-Nov-08 ser1clt   ser1clti
17-Nov-08 ser1cmp   ser1cmpi
17-Nov-08 ser1cmp0  ser1cmp0i
17-Nov-08 ser1cmp2  ser1cmp2i
17-Nov-08 ser1const ser1consti
17-Nov-08 ser1f     ser1fi
17-Nov-08 ser1f0    ser1f0i
17-Nov-08 ser1f2    ser1f2i
17-Nov-08 ser1mono  ser1monoi
17-Nov-08 ser1mulc  ser1mulci
17-Nov-08 ser1p1    ser1p1i
17-Nov-08 ser1recl  ser1recli
17-Nov-08 ser1ref   ser1refi
17-Nov-08 ser1ser0  ser1ser0i
17-Nov-08 serz1p    serz1pi
17-Nov-08 serzcj    serzcji
17-Nov-08 serzcl1   serzcl1i
17-Nov-08 serzcl2t  serzcl2ti
17-Nov-08 serzclt   serzclti
17-Nov-08 serzcmp   serzcmpi
17-Nov-08 serzcmp0  serzcmp0i
17-Nov-08 serzf0    serzf0i
17-Nov-08 serzfsum  serzfsumi
17-Nov-08 serzim    serzimi
17-Nov-08 serzmulc  serzmulci
17-Nov-08 serzmulc1 serzmulc1i
17-Nov-08 serzre    serzrei
17-Nov-08 serzreclt serzreclti
17-Nov-08 serzref   serzrefi
17-Nov-08 serzsplit serzspliti
17-Nov-08 shftcan1t shftcan1ti
17-Nov-08 shftcan2t shftcan2ti
17-Nov-08 shftf     shftfi
17-Nov-08 shftfn    shftfni
17-Nov-08 shftfval  shftfvali
17-Nov-08 shftidt   shftidti
17-Nov-08 shftres   shftresi
17-Nov-08 shftresvalt shftresvalti
17-Nov-08 shftval2t shftval2ti
17-Nov-08 shftval3t shftval3ti
17-Nov-08 shftval4t shftval4ti
17-Nov-08 shftval5t shftval5ti
17-Nov-08 shftvalt  shftvalti
17-Nov-08 sinadd    sinaddi
17-Nov-08 sq11      sq11i
17-Nov-08 sqabsadd  sqabsaddi
17-Nov-08 sqabssub  sqabssubi
17-Nov-08 sqcl      sqcli
17-Nov-08 sqdiv     sqdivi
17-Nov-08 sqeq0     sqeq0i
17-Nov-08 sqeqor    sqeqori
17-Nov-08 sqge0     sqge0i
17-Nov-08 sqgt0     sqgt0i
17-Nov-08 sqmul     sqmuli
17-Nov-08 sqr11     sqr11i
17-Nov-08 sqrcl     sqrcli
17-Nov-08 sqreci    sqrecii
17-Nov-08 sqrge0    sqrge0i
17-Nov-08 sqrgt0    sqrgt0i
17-Nov-08 sqrgt0i   sqrgt0ii
17-Nov-08 sqrle     sqrlei
17-Nov-08 sqrlt     sqrlti
17-Nov-08 sqrmsq    sqrmsqi
17-Nov-08 sqrmsq2   sqrmsq2i
17-Nov-08 sqrmul    sqrmuli
17-Nov-08 sqrmuli   sqrmulii
17-Nov-08 sqrsq     sqrsqi
17-Nov-08 sqrth     sqrthi
17-Nov-08 sqsqr     sqsqri
17-Nov-08 sqval     sqvali
17-Nov-08 subadd    subaddi
17-Nov-08 subadd2   subadd2i
17-Nov-08 subaddri  subaddrii
17-Nov-08 subcan    subcani
17-Nov-08 subcan2   subcan2i
17-Nov-08 subcl     subcli
17-Nov-08 subdi     subdii
17-Nov-08 subdir    subdiri
17-Nov-08 subeq0    subeq0i
17-Nov-08 subge0    subge0i
17-Nov-08 subid     subidi
17-Nov-08 subid1    subid1i
17-Nov-08 subneg    subnegi
17-Nov-08 subsq     subsqi
17-Nov-08 subsq0    subsq0i
17-Nov-08 subsub23  subsub23i
17-Nov-08 sumsqne0  sumsqne0i
17-Nov-08 sup3i     sup3ii
17-Nov-08 suprcli   suprclii
17-Nov-08 suprleubi suprleubii
17-Nov-08 suprlubi  suprlubii
17-Nov-08 suprnubi  suprnubii
17-Nov-08 suprubi   suprubii
17-Nov-08 times2    times2i
17-Nov-08 uzinfm    uzinfmi
17-Nov-08 uzrdgfnuz uzrdgfnuzi
17-Nov-08 uzrdgini  uzrdginii
17-Nov-08 uzrdginip1 uzrdginip1i
17-Nov-08 uzrdgsuc  uzrdgsuci
17-Nov-08 uzrdgval  uzrdgvali
17-Nov-08 zre       zrei
17-Nov-08 abs3lem   abs3lemi
17-Nov-08 abs2difabs abs2difabsi
17-Nov-08 abs2dif   abs2difi
17-Nov-08 2basgent  2basgen
17-Nov-08 basgent   basgen
17-Nov-08 basgen2t  basgen2
17-Nov-08 tgss3t    tgss3
17-Nov-08 tgss2t    tgss2
17-Nov-08 tgsst     tgss
17-Nov-08 tgtop11t  tgtop11
17-Nov-08 bastopt   bastop
17-Nov-08 bastop    bastop1
17-Nov-08 tgidmt    tgidm
17-Nov-08 eltop3t   eltop3
17-Nov-08 eltop2t   eltop2
17-Nov-08 eltopt    eltop
17-Nov-08 tgtopt    tgtop
17-Nov-08 topbast   topbas
17-Nov-08 eltg3t    eltg3
17-Nov-08 tgval3t   tgval3
17-Nov-08 tgclt     tgcl
17-Nov-08 unitgt    unitg
17-Nov-08 bastgt    bastg
17-Nov-08 tg2t      tg2
17-Nov-08 tg1t      tg1
17-Nov-08 eltg2t    eltg2
17-Nov-08 eltgt     eltg
17-Nov-08 tgval2t   tgval2
17-Nov-08 tgvalt    tgval
17-Nov-08 basis2t   basis2
17-Nov-08 basis1t   basis1
17-Nov-08 0opnt     0opn
17-Nov-08 inopnt    inopn
17-Nov-08 iunopnt   iunopn
17-Nov-08 uniopnt   uniopn
17-Nov-08 uniopn    uniopn2
17-Nov-08 entrt     entr
17-Nov-08 entr4     entr4i
17-Nov-08 entr3     entr3i
17-Nov-08 entr2     entr2i
17-Nov-08 entr      entri
17-Nov-08 entri     entric
17-Nov-08 rdglimt   rdglim
17-Nov-08 onelpsst  onelpss
17-Nov-08 rdgsuct   rdgsuc
17-Nov-08 on0eqelt  on0eqel
17-Nov-08 onelsst   onelss
17-Nov-08 onsst     onss
17-Nov-08 rdglim    rdglimi
17-Nov-08 rdgsuc    rdgsuci
17-Nov-08 nnon      nnoni
17-Nov-08 onsucss   onsucssi
17-Nov-08 onun      onun2i
17-Nov-08 onssel    onsseli
17-Nov-08 onuninsuc onuninsuci
17-Nov-08 onuniorsuc onuniorsuci
17-Nov-08 onunisuc  onunisuci
17-Nov-08 onsuc     onsuci
17-Nov-08 onelun    oneluni
17-Nov-08 onelin    onelini
17-Nov-08 onssneli2 onssnel2i
17-Nov-08 onelss    onelssi
17-Nov-08 onss      onssi
17-Nov-08 onel      oneli
17-Nov-08 onirr     onirri
17-Nov-08 ontrc     ontrci
17-Nov-08 onord     onordi
17-Nov-08 ---       ---         The *tr inferences were changed to *tri,
17-Nov-08 ---       ---         for consistency with *tr*d
17-Nov-08 bitr      bitri
17-Nov-08 bitr2     bitr2i
17-Nov-08 bitr3     bitr3i
17-Nov-08 bitr4     bitr4i
17-Nov-08 3bitr     3bitri
17-Nov-08 3bitrr    3bitrri
17-Nov-08 3bitr2    3bitr2i
17-Nov-08 3bitr3    3bitr3i
17-Nov-08 3bitr4    3bitr4i
17-Nov-08 3imtr3    3imtr3i
17-Nov-08 3imtr4    3imtr4i
17-Nov-08 eqtr      eqtri
17-Nov-08 eqtr2     eqtr2i
17-Nov-08 eqtr3     eqtr3i
17-Nov-08 eqtr4     eqtr4i
17-Nov-08 3eqtr     3eqtri
17-Nov-08 3eqtrr    3eqtrri
17-Nov-08 3eqtr2    3eqtr2i
17-Nov-08 3eqtr3    3eqtr3i
17-Nov-08 3eqtr4    3eqtr4i
17-Nov-08 eq2tr     eq2tri
17-Nov-08 eqeltr    eqeltri
17-Nov-08 eqeltrr   eqeltrri
17-Nov-08 eleqtr    eleqtri
17-Nov-08 eleqtrr   eleqtrri
17-Nov-08 eqsstr    eqsstri
17-Nov-08 eqsstr3   eqsstr3i
17-Nov-08 sseqtr    sseqtri
17-Nov-08 sseqtr4   sseqtr4i
17-Nov-08 3sstr3    3sstr3i
17-Nov-08 3sstr4    3sstr4i
17-Nov-08 eqbrtr    eqbrtri
17-Nov-08 eqbrtrr   eqbrtrri
17-Nov-08 breqtr    breqtri
17-Nov-08 breqtrr   breqtrri
17-Nov-08 3brtr3    3brtr3i
17-Nov-08 3brtr4    3brtr4i
16-Nov-08 opabsb    opelopabsb
14-Nov-08 zfext2    axext3
14-Nov-08 axext     axext2
14-Nov-08 nega      notnot2
14-Nov-08 negai     notnotri
14-Nov-08 negb      notnot1
14-Nov-08 negbi     notnoti
14-Nov-08 negbii    notbii
14-Nov-08 negbid    notbid
14-Nov-08 pm4.13    notnot
14-Nov-08 pm4.11    notbi
11-Nov-08 divmul3t  [--same--]  rearranged antecedent; renamed variables
11-Nov-08 divmul2t  [--same--]  rearranged antecedent; renamed variables
11-Nov-08 divmult   [--same--]  rearranged antecedent; renamed variables
11-Nov-08 elqsi     [--same--]  changed E. x ( x e. A /\ ...  to E. x e. A ...
11-Nov-08 elqs      [--same--]  changed E. x ( x e. A /\ ...  to E. x e. A ...
 8-Nov-08 indistop  [--same--]  eliminated hypothesis A e. _V
 8-Nov-08 pri2      prid2
 8-Nov-08 pri1      prid1
 7-Nov-08 qdivclt   [--same--]  antecedent changed to use triple conjunction
 6-Nov-08 rcfpfil   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem6 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem5 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem4 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem3 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem2 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 rcfpfillem1 [--same--] changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fisub     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 filint2   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 efilcp    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fgsb      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fipfil2   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 sppfi     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fiv       [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 df-fi     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 0fin     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 ficli     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fiiu      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 abfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fine      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 infi1     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 spfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fctop     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 subbas2   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 subbas    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 istps5    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 istps4    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 istop2g   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 isfinite  [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 pwfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 pwfilem   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 iunfi     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fofi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fodomfib  [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 fodomfi   [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 abfii5    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Nov-08 abfii4    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 isfinite1 [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 domfi     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 unifi     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 abfii1    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 abfii2    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
31-Sep-08 abfii3    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
10-Sep-08 isfinite2 [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 9-Sep-08 fisucdom  [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 7-Sep-08 ominf     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Sep-08 onfin     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Sep-08 pssinf    {--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 6-Sep-08 divsubdirt [--same--] changed hyp. order
 3-Sep-08 php3      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 2-Sep-08 fiint     [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
 1-Sep-08 prfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
30-Aug-08 unfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
29-Aug-08 snfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
29-Aug-08 ssnnfi    [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
29-Aug-08 ssfi      [--same--]  changed "E. ... e. om ... ~~ ..." to "e. Fin"
24-Aug-08 mulcant   [--same--]  changed antecendent order; swapped var. names
24-Aug-08 mulcan2t  [--same--]  changed antecendent order; swapped var. names
24-Aug-08 mulcant2  [--same--]  changed hyp. order; swapped var. names
24-Aug-08 mulcan    [--same--]  changed hyp. order; swapped var. names
23-Aug-08 divcan4t  [--same--]  changed antecendent order; swapped var. names
23-Aug-08 divcan4z  [--same--]  changed hyp. order; swapped var. names
23-Aug-08 divcan3t  [--same--]  changed antecendent order; swapped var. names
23-Aug-08 divcan3z  [--same--]  changed hyp. order; swapped var. names
22-Aug-08 ssnn      ssnnfi
22-Aug-08 divcan4   [--same--]  changed hyp. order; swapped var. names
22-Aug-08 divcan3   [--same--]  changed hyp. order; swapped var. names
21-Aug-08 pm4.2i    biidd
21-Aug-08 divcan2t  [--same--]  changed antecendent order; swapped var. names
21-Aug-08 divcan2z  [--same--]  changed hyp. order; swapped var. names
20-Aug-08 divdirt   [--same--]  changed hyp. order
18-Aug-08 divcan2   [--same--]  changed hyp. order; swapped var. names
18-Aug-08 divcan1t  [--same--]  changed antecendent order; swapped var. names
18-Aug-08 divcan1z  [--same--]  changed hyp. order; swapped var. names
18-Aug-08 divcan1   [--same--]  changed hyp. order; swapped var. names
17-Aug-08 ltmuldiv2t [--same--] changed antecedent grouping
17-Aug-08 ltdivmult [--same--]  changed antecedent grouping
17-Aug-08 ledivmult [--same--]  changed antecedent grouping
17-Aug-08 ltdivmul2t [--same--] changed antecedent grouping
17-Aug-08 ledivmul2t [--same--] changed antecedent grouping
17-Aug-08 lemuldivt [--same--]  changed antecedent grouping
17-Aug-08 lemuldiv2t [--same--] changed antecedent grouping
16-Aug-08 ltmuldivt [--same--]  changed antecedent grouping
15-Aug-08 bii       dfbi1
15-Aug-08 biigb     dfbi1gb
15-Aug-08 bi        dfbi2
15-Aug-08 dfbi      dfbi3
14-Aug-08 lediv1t   [--same--]  changed antecedent grouping
14-Aug-08 ltdiv1t   [--same--]  changed antecedent grouping
10-Jul-08 expne0t   [--same--]  swapped biconditional
10-Jul-08 sq0t      sqeq0t
10-Jul-08 sq00      sqeq0
 7-Jul-08 syl3dan3  syld3an3
 7-Jul-08 syl3dan2  syld3an2
31-May-08 isnvi     [--same--]  eliminated hypotheses G e. V, S e. _V
31-May-08 isnvg     ---         obsolete; use isnv
31-May-08 isvcg     ---         obsolete; use isvc
31-May-08 ideq      [--same--]  eliminated hypothesis A e. _V
31-May-08 ideqg     [--same--]  eliminated first antecedent A e. C
28-May-08 opelxpex  ---         obsolete; use opelxp1
22-May-08 ax9a      ax9
22-May-08 ax9       ax9o
21-May-08 ax6-2     ax6
21-May-08 ax6-3     ax6o
21-May-08 ax-6      ax-6o
21-May-08 ax-5      ax-5o
17-May-08 ax-10     ax-10o
16-May-08 er2       dfer2
16-May-08 er2       dfer2
16-May-08 sb7       dfsb7
13-May-08 cla4e2v   cla42ev
13-May-08 cla4e2gv  cla42egv
12-May-08 a4w1      a4eiv
12-May-08 a4w       a4imev
12-May-08 a4c1      a4imed
12-May-08 a4c       a4ime
12-May-08 a4b1      a4v
12-May-08 a4b       a4imv
12-May-08 a4at      a4imt
12-May-08 a4a       a4im
11-May-08 sbea4     a4sbe
11-May-08 sbia4     a4sbim
11-May-08 sbba4     a4sbbi
 6-May-08 inf4      axinf2
 6-May-08 minfnre   mnfnre
27-Apr-08 sb6y      sb6f
27-Apr-08 sb5y      sb5f
17-Apr-08 sbn2      ---         obsolete; use sbn
17-Apr-08 sbn1      ---         obsolete; use sbn
 9-Apr-08 isvci     [--same--]  weakened hyp from G : ... to dom G = ...
 9-Apr-08 isabli    [--same--]  weakened hyp from G : ... to dom G = ...
 2-Apr-08 19.2      [--same--]  generalized to use 2 set variables
30-Mar-08 grprn     [--same--]  weakened hyp from G : ... to dom G = ...
11-Mar-08 absefimt  absefit
11-Mar-08 axcnre    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 cnegexlem2 [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 cnegext   [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 recextlem1 [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 recextlem2 [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 recext    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crulem    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 cru       [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crut      [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crne0     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crmul     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crrecz    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 creur     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 creui     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 rimul     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 df-re     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 df-im     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 revalt    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 imvalt    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 replimt   [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 df-cj     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 cjvalt    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 replim    [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crret     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crimt     [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crre      [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 crim      [--same--]  changed 'x. i' to 'i x.'
11-Mar-08 efit4pt   efi4pt      changed 'x. i' to 'i x.'
10-Mar-08 fabex     [--same--]  added 3rd hypothesis
 6-Mar-08 pm2.36    [--same--]  corrected to match Principia Mathematica
 6-Mar-08 pm2.37    [--same--]  corrected to match Principia Mathematica
 6-Mar-08 pm2.38    [--same--]  corrected to match Principia Mathematica
 2-Mar-08 csbiet    csbiegft
 2-Mar-08 csbie2g   csbie2t
 2-Mar-08 vsbcint   sbhyp
 2-Mar-08 cbvsbcv   cbvralsv
 1-Mar-08 sbcrex    sbcrexg
 1-Mar-08 sbcral    sbcralg
 1-Mar-08 19.23g    19.23t
 1-Mar-08 19.21g    19.21t
 1-Mar-08 minusex   negex
 1-Mar-08 negext    cnegext
 1-Mar-08 negex     cnegex
29-Feb-08 hbneq     hbne
29-Feb-08 hbne      hbn
29-Feb-08 csbiet    csbiegft
29-Feb-08 sbciet    sbciegft
29-Feb-08 elabt     elabgt
29-Feb-08 vtoclefg  vtoclegft
23-Feb-08 sqdif0    subsq0
23-Feb-08 binom2a   ---         obsolete; use subsq
12-Feb-08 cnhl      [--same--]  added hypothesis to assign vector space to var
 9-Feb-08 oneirr    onirr
 9-Feb-08 ordeirr   ordirr
 9-Feb-08 eirr      elirr
 9-Feb-08 eirrv     elirrv
29-Jan-08 oibabs    [--same--]  swapped sides of biconditional
24-Jan-08 cos2t     ---         obsolete; use cos2tt
20-Jan-08 ffvrni    ffvelrni
20-Jan-08 ffvrn     ffvelrn
20-Jan-08 fnfvrn    fnfvelrn
20-Jan-08 fvrn      fvelrn
20-Jan-08 fvelrn    fvelrnb
18-Jan-08 arch      [--same--]  changed x to n, changing $f hypothesis order
18-Jan-08 cos1lem4  8th4div3
18-Jan-08 eftlex    ---         obsolete; use eftlext
18-Jan-08 sin2t     ---         obsolete; use sin2tt
15-Jan-08 explt1t   expord2t
15-Jan-08 eft0vallem eft0val
15-Jan-08 effsumlelem ---       obsolete; use reeftclt
15-Jan-08 eftvallem eftval
15-Jan-08 efpartex  eftlex
15-Jan-08 efcltlem4 efseq0ex
15-Jan-08 efcltlem2a ef0lem
15-Jan-08 dfef2lem  dfef2
15-Jan-08 efcltlem3 efseq1ex
15-Jan-08 eftcltlem eftclt
15-Jan-08 eftabslem eftabs
12-Jan-08 rgen2xxx  rgen2a
12-Jan-08 rgen2a    rgen2
12-Jan-08 rgen2     rgen2xxx
12-Jan-08 cnbn      [--same--]  added hypothesis to assign vector space to var
12-Jan-08 cnph      [--same--]  added hypothesis to assign vector space to var
12-Jan-08 cnims     [--same--]  reorganized hypotheses and conclusion
14-Jan-08 rgen3     [--same--]  generalized for 3 different class variables
12-Jan-08 cnnv      [--same--]  added hypothesis to assign vector space to var
10-Jan-08 zneo      [--same--]  changed -. ... = to =/=
 3-Jan-08 ax7-467   ax467to7
 3-Jan-08 ax6-467   ax467to6
 3-Jan-08 ax4-467   ax467to4
 3-Jan-08 ax6-67    ax67to6
 3-Jan-08 ax7-67    ax67to7
 3-Jan-08 ax4-46    ax46to4
 3-Jan-08 ax5-46    ax46to5
29-Dec-07 eftvallem [--same--]  added hypothesis
22-Dec-07 zfnuleu   [--same--]  added $e hypothesis to remove ax-nul dependency
 8-Dec-07 supxrre2  [--same--]  changed -. ... = to =/=
23-Nov-07 sub4      addsub4
23-Nov-07 sub4t     addsub4t
17-Nov-07 climres   [--same--]  generalized antecedent from A e. CC to A e. B
12-Nov-07 climle    climcmp
11-Nov-07 eqneqi    necon3bii
11-Nov-07 eqneqd    necon3bid
10-Nov-07 ser0cj    [--same--]  weakened hypotheses
 9-Nov-07 ser1cj    ---         obsolete; derive from serzcj (as in ser0cj)
 9-Nov-07 ser0re    ---         obsolete; derive from serzre (as in ser0cj)
 9-Nov-07 ser1re    ---         obsolete; derive from serzre (as in ser0cj)
 8-Nov-07 mp3dan    mp3dan23
23-Oct-07 pm3.27bd  simprbi
23-Oct-07 pm3.26bd  simplbi
16-Oct-07 expbndt   expubndt
16-Oct-07 expge1t   [--same--]  strengthened from N e. NN to N e. NN0
12-Oct-07 kmlem15   [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem14   [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem13   [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem10   [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem9    [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem7    [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem5    [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem4    [--same--]  changed -. ... = to =/=
12-Oct-07 kmlem3    [--same--]  changed -. ... = to =/=
 5-Oct-07 1open     topopn
 5-Oct-07 1clsd     topcld
 3-Oct-07 intss3    ntrss3
 2-Oct-07 isopen3   isopn3
 2-Oct-07 isopen2   isopn2
 2-Oct-07 cmclsopen cmclsopn
 2-Oct-07 snclsd    sncld
 2-Oct-07 clsdlp    cldlp
 2-Oct-07 isclsd3   iscld3
 2-Oct-07 cmntrclsd cmntrcld
 2-Oct-07 clsclsd   clscld
 2-Oct-07 clsdcls   cldcls
 2-Oct-07 unclsd    uncld
 2-Oct-07 intclsd   intcld
 2-Oct-07 iinclsd   iincld
 2-Oct-07 0clsd     0cld
 2-Oct-07 openclsd  opncld
 2-Oct-07 clsdopen  cldopn
 2-Oct-07 clsdss    cldss
 2-Oct-07 isclsd2   iscld2
 2-Oct-07 isclsd    iscld
 2-Oct-07 clsdval   cldval
 2-Oct-07 df-clsd   df-cld
 2-Oct-07 isopn2    isopn4
28-Sep-07 ---       ---         changed math symbol from "floor" to "|_"
26-Sep-07 ser0cl    ser0cl1
26-Sep-07 ser1cl    ser1cl1
25-Sep-07 ser1re2   ser1re
25-Sep-07 ser1re    ser1ref
23-Sep-07 df-fac    [--same--]  swapped arguments of union
23-Sep-07 seqzrnx   seqzrn
23-Sep-07 seqzrn    seqzrn2
23-Sep-07 seqzrn2   seqzrnx
23-Sep-07 seq1rnx   seq1rn
23-Sep-07 seq1rn    seq1rn2
23-Sep-07 seq1rn2   seq1rnx
17-Sep-07 pm2.21nd  pm2.24d
17-Sep-07 pm2.21ni  pm2.24i
16-Sep-07 dvelimf2  dvelimfALT
 8-Sep-07 lemul2it  [--same--]  rearranged antecedent
 8-Sep-07 lemul1it  [--same--]  rearranged antecedent
 7-Sep-07 0vval     0vfval
 4-Sep-07 ---       ---         Many changes after df-ms, described in the
                                  4-Sep-2007 entry of
                                  us.metamath.org/mpegif/mmnotes.txt
 4-Sep-07 elssab    ---         obsolete; use elssabg
 4-Sep-07 nvc       nvvc
 4-Sep-07 ---       ---         changed math symbol from "Met" to "MetSp"
 4-Sep-07 ---       ---         changed math symbol from "CMet" to "CMetSp"
25-Aug-07 fopabco   fopabcos
21-Aug-07 xrltnet   [--same--]  changed -. A = B to B =/= A; triple conjunction
21-Aug-07 lttri2    [--same--]  changed -. A = B to A =/= B
21-Aug-07 lttri2t   [--same--]  changed -. A = B to A =/= B
15-Aug-07 sbccsbg   sbccsb2g
11-Aug-07 recdivt   [--same--]  rearranged antecedent
 9-Aug-07 funopabex2g opabex2g
 9-Aug-07 funopabex2 opabex2
 9-Aug-07 funopabex opabex
 9-Aug-07 cnco      [--same--]  swapped 2nd & 3rd args in 1st triple conj
 6-Aug-07 ---       ---         changed "ncv" to "nv" in the labels of:
                                  cncv df-ncv ncvss ncvrel ncvop ncvvop
                                  isncvg isncvi ncvi ncvv ncvgcl
                                  ncvscl ncvf ncvcl ncvcli ncvdm ncvs
                                  ncvm1 ncvdif ncvpi ncvz0 ncvz ncvtri
                                  ncvabs ncvge0 cnncv cnncv0 elimncvu
                                  ncvnd phncv bnncv hlncv hilncv
 4-Aug-07 subval    ---         obsolete; use subvalt
31-Jul-07 divge0t   [--same--]  rearranged antecedent
31-Jul-07 divgt0t   [--same--]  rearranged antecedent
31-Jul-07 ltne      [--same--]  changed -. A = B to B =/= A
31-Jul-07 ltnet     [--same--]  changed -. A = B to B =/= A; triple conjunction
31-Jul-07 ltlen     [--same--]  changed -. A = B to B =/= A
31-Jul-07 ltlent    [--same--]  changed -. A = B to B =/= A
22-Jul-07 xrleltnet [--same--]  changed -. A = B to B =/= A
20-Jul-07 nngt1ne1t [--same--]  changed -. A = 1 to A =/= 1
18-Jul-07 leltnet   [--same--]  changed -. A = B to B =/= A
15-Ju1-07 zornx     zorn
15-Ju1-07 zorn      zorn2
15-Ju1-07 zorn2     zornx
18-Jun-07 caucvglem2 [--same--]  changed -. S = (/) to S =/= (/)
17-Jun-07 seq1ublem [--same--]  changed -. ... = (/) to =/= (/)
17-Jun-07 suppr     supexpr
17-Jun-07 ruclem33  [--same--]  changed -. ... = (/) to =/= (/)
16-Jun-07 ltrec1t   [--same--]  rearranged antecedent
15-Jun-07 lerec2t   [--same--]  rearranged antecedent
 3-Jun-07 nordeq    [--same--]  changed -. A = B to A =/= B
 3-Jun-07 xpsndisj  [--same--]  changed -. A = B to A =/= B
 2-Jun-07 peano3    [--same--]  changed -. A = (/) to A =/= (/)
 2-Jun-07 disjsn2   [--same--]  changed -. A = B to A =/= B
 2-Jun-07 fun2ssres [--same--]  antecedent changed to use triple conjunction
 2-Jun-07 onelpsst  [--same--]  changed -. A = B to A =/= B
 1-Jun-07 ordelssne [--same--]  changed -. A = B to A =/= B
 1-Jun-07 suprleubi [--same--]  changed -. A = (/) to A =/= (/)
31-May-07 suprnubi  [--same--]  changed -. A = (/) to A =/= (/)
30-Mar-07 onssmin   [--same--]  changed -. A = (/) to A =/= (/)
29-May-07 suprlub   [--same--]  changed -. A = (/) to A =/= (/)
29-May-07 funssfv   [--same--]  antecedent changed to use triple conjunction
29-May-07 limuni3   [--same--]  changed -. A = (/) to A =/= (/)
29-May-07 ordge1n0  [--same--]  changed -. A = (/) to A =/= (/)
28-May-07 onmindif2 [--same--]  changed -. A = (/) to A =/= (/)
28-May-07 suprleub  [--same--]  changed -. A = (/) to A =/= (/)
28-May-07 tz7.7     [--same--]  changed -. B = A to B =/= A
27-May-07 nnullss   [--same--]  changed -. ... = (/) to =/= (/)
27-May-07 supxrre2  [--same--]  changed -. A = (/) to A =/= (/)
27-May-07 fodomfib  [--same--]  changed -. A = (/) to A =/= (/)
26-May-07 supxrre1  [--same--]  changed -. A = (/) to A =/= (/)
24-May-07 supxrgtmnf [--same--]  changed -. A = (/) to A =/= (/)
23-May-07 ltmsqt    ---         obsolete; use msqgt0t
23-May-07 msqgt0    [--same--]  changed -. A = (/) to A =/= (/)
22-May-07 supxrbnd  [--same--]  changed -. A = (/) to A =/= (/)
21-May-07 suprnub   [--same--]  changed -. A = (/) to A =/= (/)
21-May-07 19.3r     ---         obsolete; use 19.3
21-May-07 19.9rv    ---         obsolete; use 19.9v
20-May-07 19.9r     ---         obsolete; use 19.9
17-May-07 iunn0     [--same--]  changed -. ... = (/) to =/= (/)
17-May-07 iinon     [--same--]  changed -. A = (/) to A =/= (/)
17-May-07 map0      [--same--]  changed -. B = (/) to B =/= (/)
16-May-07 infmrcl   [--same--]  changed -. A = (/) to A =/= (/)
16-May-07 suprub    [--same--]  changed -. A = (/) to A =/= (/)
16-May-07 suprcli   [--same--]  changed -. A = (/) to A =/= (/)
16-May-07 suprubi   [--same--]  changed -. A = (/) to A =/= (/)
16-May-07 suprlubi  [--same--]  changed -. A = (/) to A =/= (/)
14-May-07 sup3i     [--same--]  changed -. A = (/) to A =/= (/)
13-May-07 kmlemxx   kmlem8      changed -. ... = (/) to =/= (/)
13-May-07 kmlem8    kmlem9
13-May-07 kmlem9    kmlem10
13-May-07 kmlem10   kmlem11
13-May-07 kmlem11   kmlem12     changed -. ... = to =/=
13-May-07 kmlem12   kmlem13     changed -. ... = to =/=
13-May-07 kmlem13   kmlemxx
13-May-07 supxrre   [--same--]  changed -. A = (/) to A =/= (/)
13-May-07 infmsup   [--same--]  changed -. A = (/) to A =/= (/)
13-May-07 suprcl    [--same--]  changed -. A = (/) to A =/= (/)
12-May-07 kmlem1    [--same--]  changed -. ... = to =/=
12-May-07 kmlem3    [--same--]  changed -. ... = to =/=
12-May-07 kmlem6    [--same--]  changed -. ... = to =/=
12-May-07 kmlem7    [--same--]  changed -. ... = to =/=
11-May-07 infm3     [--same--]  changed -. A = (/) to A =/= (/)
11-May-07 sup3      [--same--]  changed -. A = (/) to A =/= (/)
10-May-07 oneqmin   [--same--]  changed -. B = (/) to B =/= (/)
10-May-07 infmssuzcl [--same--]  changed -. S = (/) to S =/= (/)
 5-May-07 xpexr2    [--same--]  changed -. ... = (/) to =/= (/)
 5-May-07 tz7.49c   [--same--]  changed -. ... = to =/=
 4-May-07 tz7.49    [--same--]  changed -. ... = to =/=
 4-May-07 funimass2 [--same--]  conjoined antecedents in hypothesis
 3-May-07 ac4c      [--same--]  changed -. x = (/) to x =/= (/)
30-Apr-07 aceq6b    [--same--]  changed -. z = (/) to z =/= (/)
30-Apr-07 disjpss   [--same--]  changed -. B = (/) to B =/= (/)
30-Apr-07 infxpidmlem10 [--same--]  changed -. g = (/) to g =/= (/)
30-Apr-07 1ne0      [--same--]  changed -. 1o = (/) to 1o =/= (/)
30-Apr-07 ac5b      [--same--]  changed -. x = (/) to x =/= (/)
30-Apr-07 aceq6a    [--same--]  changed -. z = (/) to z =/= (/)
30-Apr-07 on0eln0   [--same--]  changed -. A = (/) to A =/= (/)
28-Apr-07 tz7.2     [--same--]  changed -. B = A to B =/= A; triple conjunction
25-Apr-07 ac5       [--same--]  changed -. x = (/) to x =/= (/)
23-Apr-07 ac4       [--same--]  changed -. z = (/) to z =/= (/)
22-Apr-07 ac8       [--same--]  changed -. ... = to =/=
22-Apr-07 uzwo2     [--same--]  changed -. S = (/) to S =/= (/)
21-Apr-07 aceq5     [--same--]  changed -. ... = to =/=
21-Apr-07 epfrc     [--same--]  -. B = (/) to B =/= (/); triple conjunction
20-Apr-07 dfepfr    [--same--]  changed -. x = (/) to x =/= (/)
19-Apr-07 xpnz      [--same--]  changed -. ... = (/) to =/= (/)
18-Apr-07 ltexprlem1 [--same--]  changed -. C = (/) to C =/= (/)
17-Apr-07 uzwo      [--same--]  changed -. S = (/) to S =/= (/)
17-Apr-07 aceq4     [--same--]  changed -. z = (/) to z =/= (/)
17-Apr-07 prn0      [--same--]  changed -. A = (/) to A =/= (/)
15-Apr-07 elni      [--same--]  changed -. A = (/) to A =/= (/)
14-Apr-07 aceq3lem  [--same--]  changed -. z = (/) to z =/= (/)
14-Apr-07 aceq3     [--same--]  changed -. z = (/) to z =/= (/)
13-Apr-07 tpnz      [--same--]  changed -. ... = (/) to =/= (/)
13-Apr-07 0nep0     [--same--]  changed -. (/) = { (/) } to (/) =/= { (/) }
12-Apr-07 1cn       ax1cn
12-Apr-07 ax1re     1re
11-Apr-07 zfreg     [--same--]  changed -. A = (/) to A =/= (/)
11-Apr-07 zfreg2    [--same--]  changed -. A = (/) to A =/= (/)
11-Apr-07 inf1      [--same--]  changed -. x = (/) to x =/= (/)
11-Apr-07 inf2      [--same--]  changed -. x = (/) to x =/= (/)
11-Apr-07 zorn2lem6  [--same--]  changed -. H = (/) to H =/= (/)
11-Apr-07 zorn2lem5  [--same--]  changed -. H = (/) to H =/= (/)
11-Apr-07 zorn2lem3  [--same--]  changed -. D = (/) to D =/= (/)
11-Apr-07 zorn2lem2  [--same--]  changed -. D = (/) to D =/= (/)
11-Apr-07 zorn2lem1  [--same--]  changed -. D = (/) to D =/= (/)
11-Apr-07 inf3lem2  [--same--]  changed -. ... = to =/=
11-Apr-07 inf3lem3  [--same--]  changed -. ... = to =/=
11-Apr-07 inf3lem4  [--same--]  changed -. -. x = (/) to x =/= (/)
11-Apr-07 inf3lem5  [--same--]  changed -. -. x = (/) to x =/= (/)
11-Apr-07 inf3lem6  [--same--]  changed -. -. x = (/) to x =/= (/)
11-Apr-07 inf3lem7  [--same--]  changed -. -. x = (/) to x =/= (/)
11-Apr-07 inf3      [--same--]  changed -. -. x = (/) to x =/= (/)
10-Apr-07 htalem    [--same--]  changed -. A = (/) to A =/= (/)
 9-Apr-07 ac3       [--same--]  changed -. z = (/) to z =/= (/)
 9-Apr-07 rnxp      [--same--]  changed -. A = (/) to A =/= (/)
 7-Apr-07 aceq2     [--same--]  changed -. z = (/) to z =/= (/)
 6-Apr-07 tz6.12i   [--same--]  changed -. B = (/) to B =/= (/)
 6-Apr-07 scott0s   [--same--]  changed -. .. = (/) to =/= { (/) }
 6-Apr-07 dmxp      [--same--]  changed -. A = (/) to A =/= (/)
 6-Apr-07 nnsuc     [--same--]  changed -. A = (/) to A =/= (/)
 5-Apr-07 onne0     [--same--]  changed -. On = (/) to On =/= (/)
 5-Apr-07 ord0eln0  [--same--]  changed -. A = (/) to A =/= (/)
 5-Apr-07 wereu     [--same--]  -. B = (/) to B =/= (/); triple conjunction
 3-Apr-07 aceq5lem5 [--same--]  changed -. u = (/) to u =/= (/)
 3-Apr-07 aceq5lem4 [--same--]  changed -. u = (/) to u =/= (/)
 3-Apr-07 aceq5lem3 [--same--]  changed -. u = (/) to u =/= (/)
 3-Apr-07 aceq5lem2 [--same--]  changed -. u = (/) to u =/= (/)
 3-Apr-07 pssdifn0  [--same--]  changed -. ... = to =/=
 3-Apr-07 fri       [--same--]  changed -. ... = (/) to ... =/= (/)
 2-Apr-07 cplem1    [--same--]  changed -. ... = (/) to =/= (/)
 2-Apr-07 cplem2    [--same--]  changed -. ... = (/) to =/= (/)
 2-Apr-07 0pss      [--same--]  changed -. A = (/) to A =/= (/)
 2-Apr-07 inelcm    [--same--]  changed -. ... = (/) to =/= (/)
 2-Apr-07 snnz      [--same--]  changed -. A = (/) to A =/= (/)
 2-Apr-07 inf0      [--same--]  changed conclusion to match ax-inf exactly
 2-Apr-07 n0f       ---         obsolete; use n0f
26-Mar-07 df-lim    [--same--]  changed -. A = (/) to A =/= (/)
26-Mar-07 pwen      [--same--]  eliminated redundant hypotheses
26-Mar-07 ssundif   undif
23-Mar-07 fo2       dffo2
23-Mar-07 fofv      dffo3
22-Mar-07 fnbr      [--same--]  eliminated redundant hypotheses
22-Mar-07 fnop      [--same--]  eliminated redundant hypotheses
21-Mar-07 kardex    [--same--]  eliminated redundant hypothesis
21-Mar-07 qsid      [--same--]  eliminated redundant hypothesis
21-Mar-07 0nelqs    [--same--]  eliminated redundant hypothesis
21-Mar-07 brecop2   [--same--]  eliminated redundant hypothesis
21-Mar-07 ecelqsdm  [--same--]  eliminated redundant hypothesis
18-Mar-07 map0b     [--same--]  changed -. A = (/) to A =/= (/)
17-Mar-07 oninton   [--same--]  changed -. A = (/) to A =/= (/)
17-Mar-07 wefrc     [--same--]  -. B = (/) to B =/= (/); triple conjunction
17-Mar-07 onint     [--same--]  changed -. A = (/) to A =/= (/)
17-Mar-07 tz7.5     [--same--]  -. B = (/) to B =/= (/); triple conjunction
17-Mar-07 fiint     [--same--]  changed -. x = (/) to x =/= (/)
16-Mar-07 ishlg     [--same--]  changed hypothesis from X = dom N to X = ran G
16-Mar-07 unitopt   ---         obsolete; use topopn
16-Mar-07 peano3nn0 nn0p1nnt
15-Mar-07 intex     [--same--]  changed -. A = (/) to A =/= (/)
 4-Mar-07 opthreg   [--same--]  added converse:  ->  to  <->
15-Feb-07 qbtwnre   [--same--]  antecedent changed to use triple conjunction
13-Feb-07 rcla42ev  [--same--]  antecedent changed to use triple conjunction
10-Feb-07 fodomb    [--same--]  changed -. A = (/) to A =/= (/)
 7-Feb-07 rabbidv   [--same--]  conjoined antecedents in hypothesis
 5-Feb-07 equidALT  equid1
 5-Feb-07 ax-11     ax-11o
 2-Feb-07 ax11a     ax11v
 1-Feb-07 frc       [--same--]  -. = (/) to =/= (/); conjoined antecedents
31-Jan-07 itimesi   ixi
31-Jan-07 isqm1     i2
30-Jan-07 dffr2     [--same--]  changed -. ... = (/) to ... =/= (/)
30-Jan-07 df-fr     [--same--]  changed -. ... = (/) to ... =/= (/)
30-Jan-07 f1oeng    [--same--]  conjoined antecedents
29-Jan-07 2sumeq2d  ---         obsolete; use 2sumeq2dv
29-Jan-07 sumeq12d  ---         obsolete; use sumeq12dv
29-Jan-07 sumeq12rd ---         obsolete; use sumeq12rdv
29-Jan-07 eval      [--same--]  ( 1 ^ k ) changed to 1
22-Jan-07 ax11el    [--same--]  generalized with less restrictive variables
18-Jan-07 climcvgc1 ---         obsolete; use clmi1
18-Jan-07 climcvg1  ---         obsolete; use clmi2
18-Jan-07 clim1     ---         obsolete; use clm2
18-Jan-07 clim1a    ---         obsolete; use clm3
18-Jan-07 clim2a    ---         obsolete; use clm2
18-Jan-07 clim2     ---         obsolete; use clm4
18-Jan-07 climcvg2  ---         obsolete; use clmi2
18-Jan-07 climcvg2z ---         obsolete; use clmi2
18-Jan-07 climcvgc2z ---        obsolete; use clmi1
18-Jan-07 climcvg2zb ---        obsolete; use clmi2
18-Jan-07 clim2az   ---         obsolete; use clm3
18-Jan-07 clim3az   ---         obsolete; use clm3
18-Jan-07 clim3a    ---         obsolete; use clm3
18-Jan-07 clim3     ---         obsolete; use clm4
18-Jan-07 clim3b    ---         obsolete; use clm2
18-Jan-07 climcvg3  ---         obsolete; use clmi2
18-Jan-07 climcvg3z ---         obsolete; use clmi2
18-Jan-07 clim4a    ---         obsolete; use clm3
18-Jan-07 clim4     ---         obsolete; use clm4
18-Jan-07 climcvg4  ---         obsolete; use clmi2
18-Jan-07 climcvgc4z ---        obsolete; use clmi1
18-Jan-07 climcvg4z ---         obsolete; use clmi2
18-Jan-07 clim0cvg4z ---        obsolete; use clm0i
18-Jan-07 climcvgc5z ---        obsolete; use clmi1
18-Jan-07 climcvg5z ---         obsolete; use clmi2
18-Jan-07 clim0cvg5z ---        obsolete; use clm0i
18-Jan-07 climnn0   ---         obsolete; use clm4
18-Jan-07 climnn    ---         obsolete; use clm4
18-Jan-07 clim0nn   ---         obsolete; use clm0
18-Jan-07 climcvgnn ---         obsolete; use clmi2
18-Jan-07 climcvgnn0 ---        obsolete; use clmi2
18-Jan-07 clim0cvgnn0 ---       obsolete; use clm0i
18-Jan-07 climcvg2nn0 ---       obsolete; use clmi2
18-Jan-07 clim0cvg2nn0 ---      obsolete; use clm0i
18-Jan-07 climnn0le ---         obsolete; use clm4le
18-Jan-07 clim0nn0le ---        obsolete; use clm4le and clm0
16-Jan-07 abn0      [--same--]  changed -. ... = (/) to ... =/= (/)
16-Jan-07 rabn0     [--same--]  changed -. ... = (/) to ... =/= (/)
16-Jan-07 nsuceq0   [--same--]  changed -. ... = (/) to ... =/= (/)
16-Jan-07 iin0      [--same--]  changed -. A = (/) to A =/= (/)
16-Jan-07 fint      [--same--]  changed -. B = (/) to B =/= (/)
14-Jan-07 clim3z    clm4at
12-Jan-07 climconst [--same--]  made M e. ZZ a hypothesis instead of antecedent
11-Jan-07 climres2  ---         obsolete; use climres
 4-Jan-07 iunconst  [--same--]  changed -. A = (/) to A =/= (/)
21-Dec-06 intssuni2 [--same--]  changed -. A = (/) to A =/= (/)
21-Dec-06 intssuni  [--same--]  changed -. A = (/) to A =/= (/)
21-Dec-06 prer2     preqr2
20-Dec-06 ccms      cnms
20-Dec-06 ccims     cnims
20-Dec-06 ccmsval   cnimsval
18-Dec-06 cvgannn   ---         obsolete; use cvganuz
18-Dec-06 cvgannn0  ---         obsolete; use cvganuz
14-Dec-06 cleqreli  eqrelriv
14-Dec-06 cleqrel   eqrel
12-Dec-06 rnco      rncoss
12-Dec-06 dmco      dmcoss
 5-Dec-06 r19.2z    [--same--]  -. A = (/) to A =/= (/); conjoined antecendents
24-Nov-06 infn0     [--same--]  changed -. A = (/) to A =/= (/)
24-Nov-06 0sdom     [--same--]  changed -. A = (/) to A =/= (/)
24-Nov-06 0sdomg    [--same--]  changed -. A = (/) to A =/= (/)
24-Nov-06 infxpabs  [--same--]  -. B = (/) to B =/= (/); use w3a for antec.
24-Nov-06 xpdom3    [--same--]  changed antecedent from -. B = (/) to B =/= (/)
14-Nov-06 zfnul     axnul
14-Nov-06 zfaus     axsep
28-Oct-06 inv       inv1
25-Oct-06 orcana    ---         obsolete; use pm5.6
10-Oct-06 oprec     [--same--]  changed order of $f hypotheses
10-Oct-06 ecoprdi   [--same--]  changed order of $f hypotheses
10-Oct-06 ecoprass  [--same--]  changed order of $f hypotheses
 9-Oct-06 unisseq   ---         obsolete; use unimax
 8-Oct-06 notzfaus  [--same--]  more meaningful first hypothesis
 8-Oct-06 intmin    [--same--]  swapped arguments of = sign
 8-Oct-06 intmin2   [--same--]  swapped arguments of = sign
 5-Oct-06 expcant   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 expsubt   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 divexpt   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 expwordit [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 explt1t   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 recexpt   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 expordt   [--same--]  generalized antecedent from e. NN to e. NN0
 5-Oct-06 iineq2dv  [--same--]  conjoined antecedents in hypothesis
 5-Oct-06 iuneq2dv  [--same--]  conjoined antecedents in hypothesis
 5-Oct-06 r19.9rzv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 r19.45zv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 r19.27zv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 r19.36zv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 iindif2   [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 r19.28zv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 5-Oct-06 r19.3rzv  [--same--]  changed antecedent from -. A = (/) to A =/= (/)
 2-Oct-06 phplem5   phplem4
 2-Oct-06 phplem4   phplem3
 2-Oct-06 phplem3   phplem2
 2-Oct-06 phplem2   phplem1
 2-Oct-06 phplem1   ---         obsolete; use difsnid
29-Sep-06 uniord    orduni
29-Sep-06 onunit    ssonuni
29-Sep-06 onuni     ssonunii
29-Sep-06 ac6s2     ac6s3
29-Sep-06 ac6c      ---         obsolete; use ac6s5
21-Sep-06 rankuni   rankuni2
20-Sep-06 npnz      [--same--]  strengthened by adding converse
20-Sep-06 onsucuni2 [--same--]  swapped arguments of = sign
19-Sep-06 nlimsuc   ---         obsolete; use nlimsucg
19-Sep-06 limuni2   limuni3
15-Sep-06 ranklon   rankval4
13-Sep-06 cbvop     rexxp
11-Sep-06 zfaus     zfauscl
10-Sep-06 fex       [--same--]  antecedent changed to use conjunction & swapped
10-Sep-06 f1dmex    [--same--]  antecedent changed to use conjunction & swapped
10-Sep-06 fnex      [--same--]  antecedent changed to use conjunction & swapped
10-Sep-06 ssexg     [--same--]  antecedent changed to use conjunction & swapped
10-Sep-06 funimaexg [--same--]  antecedent changed to use conjunction & swapped
10-Sep-06 resfunexg [--same--]  antecedent changed to use conjunction & swapped
 9-Sep-06 funex     [--same--]  antecedent changed to use conjunction & swapped
 8-Sep-06 cls       clsp
29-Aug-06 elab3g    elab3
26-Aug-06 unop      uniop
26-Aug-06 unpr      unipr
26-Aug-06 unictb    [--same--]  removed irrelevant hypothesis
16-Aug-06 ssrab     ssrab2
16-Aug-06 rabss     rabss2
16-Aug-06 ssab      ssab2
13-Aug-06 fvco3     [--same--]  antecedent changed to use triple conjunction
13-Aug-06 fvco2     [--same--]  antecedent changed to use triple conjunction
 6-Jun-06 sq0       sq00
 1-Jun-06 infpn     infpn2
27-May-06 ---       ---         exp was changed to ex to prevent matching
27-May-06 ---       ---           math token 'exp'.
27-May-06 exp       ex
26-May-06 f1ocnvfvb [--same--]  antecedent changed to use triple conjunction
22-Apr-06 fvco      [--same--]  antecedent changed to use triple conjunction
10-Apr-06 plus1let  p1let
10-Apr-06 leplus1t  lep1t
10-Apr-06 ltplus1   ltp1
10-Apr-06 ltplus1t  ltp1t
29-Mar-06 xpdom2    [--same--]  eliminated the A e. _V hypothesis
29-Mar-06 xpdom1    [--same--]  eliminated the A e. _V hypothesis
28-Mar-06 sspr      [--same--]  eliminated both $e hypotheses
26-Mar-06 fnfvop    fnopfvb
26-Mar-06 fnfvbr    fnbrfvb
26-Mar-06 eqri      eqriv
26-Mar-06 eqrd      eqrdv
26-Mar-06 nn0z      nn0zrab
26-Mar-06 nnz       nnzrab
24-Mar-06 fodomb    [--same--]  eliminated the B e. _V hypothesis
24-Mar-06 eldmg     eldm2g
22-Mar-06 prprc     prprc1
22-Mar-06 sqrsqet   sqrsqt
22-Mar-06 sqrsqe    sqrsq
22-Mar-06 sqrsq     sqrmsq2
21-Mar-06 nn0le2sqet nn0le2msqt
21-Mar-06 le2sqet   le2sqt
21-Mar-06 le2sqt    le2msqt
21-Mar-06 lt2sqet   lt2sqt
21-Mar-06 lt2sqt    lt2msqt
21-Mar-06 le2sqe    le2sq
21-Mar-06 le2sq     le2msq
21-Mar-06 lt2sqe    lt2sq
21-Mar-06 lt2sq     lt2msq
21-Mar-06 ltsqt     ltmsqt
13-Mar-06 sq11t     [--same--]  rearranged antecedent
11-Mar-06 sqrecl    resqcl
11-Mar-06 sqreclt   resqclt
11-Mar-06 ---       ---         'sq' is normal square (A ^ 2)
11-Mar-06 sqe0      sqeq0
11-Mar-06 sqe11     sq11
11-Mar-06 sqegt0    sqgt0
11-Mar-06 sqege0    sqge0
11-Mar-06 sqe11t    sq11t
11-Mar-06 sqege0t   sqge0t
11-Mar-06 ---       ---         'msq' is square represented by mult. (A x. A)
11-Mar-06 sqeq0      msq0
11-Mar-06 sqgt0     msqgt0
11-Mar-06 sqge0     msqge0
11-Mar-06 sq11      msq11
11-Mar-06 sqznn     msqznn
11-Mar-06 sqrsqid   sqrmsq
11-Mar-06 sqeq0      msq0
24-Feb-06 lerect    [--same--]  rearranged antecedent
24-Feb-06 ltrect    [--same--]  rearranged antecedent
24-Feb-06 lt2sqet   [--same--]  rearranged antecedent
24-Feb-06 le2sqet   [--same--]  rearranged antecedent
24-Feb-06 lt2sqt    [--same--]  rearranged antecedent
24-Feb-06 le2sqt    [--same--]  rearranged antecedent
20-Feb-06 funfvopi  funopfv
20-Feb-06 funopfv   funfvop
20-Feb-06 funfvop   funopfvb
 9-Feb-06 divneq0bt divne0bt
 9-Feb-06 divneq0   divne0
 9-Feb-06 recneq0z  recne0z
 9-Feb-06 pm2.61an2 pm2.61dan
 9-Feb-06 pm2.61an1 pm2.61ian
28-Jan-06 cleqfvf   eqfnfvf
26-Jan-06 fri       [--same--]  changed to closed theorem instead of inference
17-Jan-06 relin     relin1
17-Jan-06 ssrelqqq  relss
17-Jan-06 relss     ssrel
17-Jan-06 ssrel     ssrelqqq
16-Jan-06 elrnqqq   elrn2
16-Jan-06 elrn2     elrn
16-Jan-06 elrn      elrnqqq
12-Jan-06 df-ef     [--same--]  revised to use new df-sum
 9-Jan-06 rabeqbi2i rabeq2i
 9-Jan-06 abeqbi2   abeq2
 9-Jan-06 abeqbi1   abeq1
 9-Jan-06 abeqbi2i  abeq2i
 9-Jan-06 abeqbi1i  abeq1i
 9-Jan-06 abeqbi2d  abeq2d
 9-Jan-06 abbieq2i  abbi2i
 9-Jan-06 abbieqi   abbii
 9-Jan-06 abbieqd   abbid
 9-Jan-06 abbieqdv  abbidv
 9-Jan-06 abbieq2dv abbi2dv
 9-Jan-06 abbieq1dv abbi1dv
 9-Jan-06 rabbieqi  rabbii
 9-Jan-06 rabbieqdv rabbidv
 9-Jan-06 rabbieqsdv rabbisdv
 9-Jan-06 rabbieqrdv rabbirdv
 9-Jan-06 opabbieqd opabbid
 9-Jan-06 opabbieqdv opabbidv
 9-Jan-06 oprabbieqd oprabbid
 9-Jan-06 oprabbieqdv oprabbidv
 9-Jan-06 oprabbieqi oprabbii
 9-Jan-06 abeqbi2   abeq2
 9-Jan-06 abeqbi2i  abeq2i
 9-Jan-06 abeqbi1   abeq1
 9-Jan-06 abeqbi2d  abeq2d
 9-Jan-06 abeqbi1i  abeq1i
 9-Jan-06 rabeqbi2i rabeq2i
 9-Jan-06 oprabbieqi oprabbii
 7-Jan-06 divgt0lem divgt0i2
 5-Jan-06 lep1t  letrp1t
 4-Jan-06 nnegdift  ---         obsolete; use subge0t (swapped biconditional)
 2-Jan-06 opabbii.2 opabbii
 1-Jan-06 negdi2    negsubdi
 1-Jan-06 negdi2t   negsubdit
 1-Jan-06 negdi3    negsubdi2t
 1-Jan-06 negdi3t   negsubdi2t
17-Dec-05 msca      ---         obsolete; now embedded inside equs4 proof
16-Dec-05 1expt     [--same--]  antecedent extended from NN to NN0
16-Dec-05 nnexpclt  [--same--]  antecedent extended from NN to NN0
16-Dec-05 nn0expclt [--same--]  antecedent extended from NN to NN0
16-Dec-05 zexpclt   [--same--]  antecedent extended from NN to NN0
16-Dec-05 qexpclt   [--same--]  antecedent extended from NN to NN0
16-Dec-05 reexpclt  [--same--]  antecedent extended from NN to NN0
16-Dec-05 expclt    [--same--]  antecedent extended from NN to NN0
16-Dec-05 expcllem  [--same--]  antecedent extended from NN to NN0; + 3rd hyp.
16-Dec-05 expp1t    [--same--]  antecedent extended from NN to NN0
16-Dec-05 expvalt   expnnvalt
13-Dec-05 sbcco     sbccog
 1-Dec-05 subneg2t  subnegt
 1-Dec-05 subnegt   ---         obsolete; use negsubt (swapped equality)
 1-Dec-05 subneg    ---         obsolete; use negsub (swapped equality)
 1-Dec-05 reueq     reueq1
 1-Dec-05 rexeq     rexeq1
 1-Dec-05 raleq     raleq1
 1-Dec-05 reueqf    reueq1f
 1-Dec-05 rexeqf    rexeq1f
 1-Dec-05 raleqf    raleq1f
 1-Dec-05 ad2antxx  ad2antrr
 1-Dec-05 ad2antrr  ad2antll
 1-Dec-05 ad2antll  ad2antxx
29-Nov-05 sbcel2    sbcel2gv
29-Nov-05 sbcel1    sbcel1gv
28-Nov-05 sbcn      sbcng
28-Nov-05 sbcim     sbcimg
28-Nov-05 sbcbi     sbcbig
28-Nov-05 sbcor     sbcorg
28-Nov-05 sbcan     sbcang
28-Nov-05 sbcal     sbcalg
28-Nov-05 sbcex     sbcexg
28-Nov-05 sbceq1    sbceq1a
21-Nov-05 2o        2on
21-Nov-05 1o        1on
19-Nov-05 zfrep3    axrep5
19-Nov-05 zfrep2    axrep4
19-Nov-05 axrep     axrep2
18-Nov-05 hbsbcg    hbsbc1g
18-Nov-05 hbsbc     hbsbc1
18-Nov-05 hbsbcv    hbsbc1v
18-Nov-05 ---       ---         More changes to the bixx series below -
18-Nov-05 ---       ---         changed to xxbix to be analogous to the xxeqx
18-Nov-05 ---       ---         series e.g. uneq12d.  Also, the bi(r)abxx were
18-Nov-05 ---       ---         changed to (r)abbieqxx: "bi" in hyp. and
18-Nov-05 ---       ---         "eq" in conclusion.
18-Nov-05 bial      albii
18-Nov-05 bi2al     2albii
18-Nov-05 biex      exbii
18-Nov-05 bi2ex     2exbii
18-Nov-05 bi3ex     3exbi
18-Nov-05 biald     albid
18-Nov-05 biexd     exbid
18-Nov-05 bisb      sbbii
18-Nov-05 bisbd     sbbid
18-Nov-05 bialdv    albidv
18-Nov-05 biexdv    exbidv
18-Nov-05 bi2aldv   2albidv
18-Nov-05 bi2exdv   2exbidv
18-Nov-05 bi3exdv   3exbidv
18-Nov-05 bi4exdv   4exbidv
18-Nov-05 bieud     eubid
18-Nov-05 bieudv    eubidv
18-Nov-05 bieu      eubii
18-Nov-05 bimod     mobid
18-Nov-05 bimo      mobii
18-Nov-05 biralda   ralbida
18-Nov-05 birexda   rexbida
18-Nov-05 biraldva  ralbidva
18-Nov-05 birexdva  rexbidva
18-Nov-05 birald    ralbid
18-Nov-05 birexd    rexbid
18-Nov-05 biraldv   ralbidv
18-Nov-05 birexdv   rexbidv
18-Nov-05 biraldv2  ralbidv2
18-Nov-05 birexdv2  rexbidv2
18-Nov-05 biral     ralbii
18-Nov-05 birex     rexbii
18-Nov-05 bi2ral    2ralbii
18-Nov-05 bi2rex    2rexbii
18-Nov-05 biral2    ralbii2
18-Nov-05 birex2    rexbii2
18-Nov-05 birala    ralbiia
18-Nov-05 birexa    rexbiia
18-Nov-05 bi2rexa   2rexbiia
18-Nov-05 bi2ralda  2ralbida
18-Nov-05 bi2raldva 2ralbidva
18-Nov-05 bi2rexdva 2rexbidva
18-Nov-05 bireudva  reubidva
18-Nov-05 bireudv   reubidv
18-Nov-05 bireua    reubiia
18-Nov-05 bireu     reubii
18-Nov-05 bisbcdv   sbcbidv
18-Nov-05 bisbc     sbcbii
18-Nov-05 eqrabi    rabeqbi2i
18-Nov-05 eqab      abeqbi2
18-Nov-05 eqabr     abeqbi1
18-Nov-05 eqabi     abeqbi2i
18-Nov-05 eqabri    abeqbi1i
18-Nov-05 eqabd     abeqbi2d
18-Nov-05 biabri    abbieq2i
18-Nov-05 biabi     abbieqi
18-Nov-05 biabd     abbieqd
18-Nov-05 biabdv    abbieqdv
18-Nov-05 biabrdv   abbieq2dv
18-Nov-05 biabldv   abbieq1dv
18-Nov-05 birabi    rabbieqi
18-Nov-05 birabdv   rabbieqdv
18-Nov-05 birabsdv  rabbieqsdv
18-Nov-05 birabrdv  rabbieqrdv
18-Nov-05 biopabd   opabbieqd
18-Nov-05 biopabdv  opabbieqdv
18-Nov-05 bioprabd  oprabbieqd
18-Nov-05 bioprabdv oprabbieqdv
18-Nov-05 bioprabi  oprabbieqi
18-Nov-05 bicon1i   con1bii
18-Nov-05 bicon2i   con2bii
18-Nov-05 bicon4i   con4bii
18-Nov-05 bicon4d   con4bid
18-Nov-05 bicon2    con2bi
18-Nov-05 bicon2d   con2bid
18-Nov-05 bicon1d   con1bid
18-Nov-05 bisyl7    syl7ib
18-Nov-05 bisyl8    syl8ib
11-Nov-05 sbcbidv   [--same--]  swapped antecedents
21-Oct-05 ciin      [--same--]  "|^|" changed to "|^|_"
21-Oct-05 cuin      [--same--]  "U." changed to "U_"
21-Oct-05 ---SYMBOL CHANGE----  Changed "|^|" to "|^|_" in thm's using ciin
21-Oct-05 ---SYMBOL CHANGE----  Changed "U." to "U_" in thm's using ciun
20-Oct-05 rax5      ra5
20-Oct-05 rax4      ---         obsolete; use ra4sbc
20-Oct-05 reuuni2f  [--same--]  weakened its hypotheses
19-Oct-05 reuss     [--same--]  antecedent changed to use triple conjunction
10-Oct-05 uzwo      [--same--]  changed to use ZZ>= notation
10-Oct-05 uzwo2     [--same--]  changed to use ZZ>= notation
 1-Oct-05 nnncant   nnncan1t
13-Sep-05 leltnet   [--same--]  antecedent changed to use triple conjunction
10-Sep-05 ifel      ifcl
 6-Sep-05 dmopab2   dmopab3
 5-Sep-05 peano2uz  peano2uz2
 1-Sep-05 cleqfv    eqfnfv
 1-Sep-05 df-seq    df-seq1
 1-Sep-05 cseqz     cseq1
 1-Sep-05 serft     ser1ft
 1-Sep-05 serf      ser1f
 1-Sep-05 sercl     ser1cl
 1-Sep-05 serrecl   ser1recl
 1-Sep-05 serre     ser1re
 1-Sep-05 sercl2    ser1cl2
 1-Sep-05 serf2     ser1f2
 1-Sep-05 ser12     ser11
 1-Sep-05 sersuc2   ser1p1
 1-Sep-05 sermono   ser1mono
 1-Sep-05 seradd2   ser1add2
 1-Sep-05 seradd    ser1add
 1-Sep-05 serdir    ser1dir
 1-Sep-05 serabsdiflem ser1absdiflem
 1-Sep-05 serabsdif ser1absdif
 1-Sep-05 serre2    ser1re2
 1-Sep-05 sercj     ser1cj
 1-Sep-05 serconst  ser1const
 1-Sep-05 sertrunclem ser1trunclem
 1-Sep-05 sercmp    ser1cmp
 1-Sep-05 sercmp0   ser1cmp0
 1-Sep-05 sercmp2lem ser1cmp2lem
 1-Sep-05 sercmp2   ser1cmp2
 1-Sep-05 seqlem1   seq1lem1
 1-Sep-05 seqlem2   seq1lem2
 1-Sep-05 seqrval   seq1rval
 1-Sep-05 seqval    seq1val
 1-Sep-05 seqfnlem  seq1fnlem
 1-Sep-05 seqval2   seq1val2
 1-Sep-05 seq1lem   seq11lem
 1-Sep-05 seqsuclem seq1suclem
 1-Sep-05 seqp1     seq1p1
 1-Sep-05 seqm1     seq1m1
 1-Sep-05 seqfn     seq1fn
 1-Sep-05 seqrn     seq1rn2
 1-Sep-05 seqrn2    seq1rn
 1-Sep-05 seqcl     seq1cl
 1-Sep-05 seqres    seq1res
 1-Sep-05 seqbnd    seq1bnd
 1-Sep-05 sequblem  seq1ublem
 1-Sep-05 sequb     seq1ub
 1-Sep-05 seqhcau   seq1hcau
 1-Sep-05 ---SYMBOL CHANGE----  Changed math symbol 'seq' to 'seq1'
 1-Sep-05 seq1      seq11       Warning: do _before_ the symbol change above
17-Aug-05 df-clim   [--same--]  The old df-clim, df-shft, and df-seq0, and
17-Aug-05 df-shft   [--same--]      all derived theorems, have been scrapped
17-Aug-05 df-seq0   [--same--]      or rederived from the new definitions.
30-Jul-05 ---       ---         syl* changes below were sugg'ed by Scott Fenton
30-Jul-05 syl34d    imim12d
30-Jul-05 syl4d     imim1d
30-Jul-05 syl3d     imim2d
30-Jul-05 syl34     imim112i
30-Jul-05 syl4      imim1i
30-Jul-05 syl3      imim2i
30-Jul-05 syl2      imim1
30-Jul-05 syl1      imim2
27-Jul-05 uzind     [--same--]  weaker basis hyp.; different mand. hyp. order
13-Jul-05 mp3an11   mp3anl1
13-Jul-05 mp3an12   mp3anl2
13-Jul-05 mp3an13   mp3anl3
13-Jul-05 syl3an11  syl3anl1
13-Jul-05 syl3an12  syl3anl2
13-Jul-05 syl3an13  syl3anl3
13-Jul-05 mpan11    mpanl1
13-Jul-05 mpan12    mpanl2
13-Jul-05 mpan21    mpanr1
13-Jul-05 mpan22    mpanr2
13-Jul-05 sylan11   sylanl1
13-Jul-05 sylan12   sylanl2
13-Jul-05 sylan21   sylanr1
13-Jul-05 sylan22   sylanr2
13-Jul-05 mpan121   mpanlr1
13-Jul-05 ecased    ---         obsolete; use ecase23d (diff. hyp. order)
11-Jul-05 lelt      lenlt
11-Jul-05 leltt     lenltt
11-Jul-05 lenltt    eqleltt
10-Jul-05 bcpasc    bcpasc2
10-Jul-05 bcvalt    bcval2t
 9-Jul-05 sermconst ---         obsolete; use ser1mulc
 9-Jul-05 seqsuc    seq1p1
 3-Jul-05 peano5c   ---         obsolete; use peano5nn (restr. qntfr.)
 3-Jul-05 df-n      [--same--]  shortened with restricted quantifier
 2-Jul-05 mulge0t   [--same--]  conjoined antecedents
 2-Jul-05 prodgt02t [--same--]  swapped A e. RR and B e. RR
27-Jun-05 syl3an    [--same--]  changed order of hypotheses
25-Jun-05 ecoprcom  [--same--]  changed order of $f hypotheses
21-Jun-05 nn0ltlem1 nn0ltlem1t
21-Jun-05 subsub    subsub23
17-Jun-05 ecoprdist ---         obsolete; use ecoprdi
16-Jun-05 binom     binom2
12-Jun-05 oel       orabs
30-May-05 ltdiv23t  [--same--]  conjoined antecedents
30-May-05 ledivt    lediv1t
23-May-05 rcla42v   [--same--]  swapped antecedents
23-May-05 rcla4v    [--same--]  swapped antecedents
23-May-05 rcla4     [--same--]  swapped antecedents
10-May-05 mpbiranr  mpbiran2
 8-May-05 funfv2    [--same--]  changed to A F y instead of <. A , y >. e. F
 8-May-05 imasn     ---         obsolete; use relimasn (A R y instead of o.p.)
 3-May-05 nndiv     nndivt
 2-May-05 subaddeq  pncan3
 2-May-05 subaddeqt pncan3t
 1-May-05 divne0bt  [--same--]  changed antecedent to triple conjunction
 1-May-05 divcan2t  [--same--]  changed antecedent to triple conjunction
 1-May-05 divcan1t  [--same--]  changed antecedent to triple conjunction
30-Apr-05 divnegt   [--same--]  changed antecedent to triple conjunction
30-Apr-05 divrect   [--same--]  changed antecedent to triple conjunction
30-Apr-05 divcan3t  [--same--]  changed antecedent to triple conjunction
30-Apr-05 divcan4t  [--same--]  changed antecedent to triple conjunction
29-Apr-05 crut      [--same--]  generalized -> to <->
29-Apr-05 cru       [--same--]  generalized -> to <->
29-Apr-05 isqm1     itimesi
29-Apr-05 crmult    crmul       changed hypotheses from real to complex
29-Apr-05 redivclt  [--same--]  changed antecedent to triple conjunction
29-Apr-05 divclt    [--same--]  changed antecedent to triple conjunction
28-Apr-05 ine0      [--same--]  changed -. and = to =/=
27-Apr-05 ltdivt    ltdiv1t
27-Apr-05 ltdiv     ltdiv1
27-Apr-05 ltdivi    ltdiv1i
24-Apr-05 prodgt0   [--same--]  strengthened 0 < A to 0 <_ A
24-Apr-05 prodgt0i  prodgt0lem
 7-Apr-05 equs2     ---         obsolete; use equs5
 7-Apr-05 equs1     ---         obsolete; use equs4
 6-Apr-05 absltt    [--same--]  swapped & contraposed conjunct with -u
 6-Apr-05 absle     [--same--]  swapped & contraposed conjunct with -u
 6-Apr-05 abslt     [--same--]  swapped & contraposed conjunct with -u
26-Mar-05 abscj     [--same--]  swapped arguments of = sign
18-Mar-05 reim0     reim0b
18-Mar-05 rere      rereb
18-Mar-05 cjre      cjreb
18-Mar-05 negre     negreb
11-Mar-05 frsuc     frsuc
10-Mar-05 nn0addge2 [--same--]  Generalized 1st hyp from NN0 to RR
10-Mar-05 nn0addge1 [--same--]  Generalized 1st hyp from NN0 to RR
 5-Mar-05 chv       chvarv
 5-Mar-05 chv2      chvar
 4-Mar-05 divdistr  divdir
 4-Mar-05 divdistrz divdirz
 4-Mar-05 divge0t   [--same--]  conjoined the two left-most antecedents
 4-Mar-05 divgt0t   [--same--]  conjoined the two left-most antecedents
 4-Mar-05 absgt0t   [--same--]  changed  -. A = 0  to  A =/= 0
 4-Mar-05 absgt0    [--same--]  changed  -. A = 0  to  A =/= 0
24-Feb-05 absidt    [--same--]  conjoined the two left-most antecedents
27-Feb-05 del34     ---         obsolete; use dral1 instead
27-Feb-05 del35     ---         obsolete; use dral1 instead
27-Feb-05 del34b    dral1
27-Feb-05 del36     ---         obsolete; use dral2 instead
27-Feb-05 del40     ---         obsolete; use drex1 instead
27-Feb-05 del41     ---         obsolete; use drex1 instead
27-Feb-05 del42     ---         obsolete; use drex2 instead
27-Feb-05 del43     ---         obsolete; use drsb1 instead
27-Feb-05 del43b    drsb1
27-Feb-05 del44     ---         obsolete; use drsb2 instead
27-Feb-05 del45     ---         obsolete; use drsb2 instead
27-Feb-05 ddelimf2  dvelimf2
27-Feb-05 ddelimf   dvelimf
27-Feb-05 ddelimdf  dvelimdf
27-Feb-05 ddelim    dvelim
27-Feb-05 ddeeq1    dveeq1
27-Feb-05 ddeeq2    dveeq2
27-Feb-05 ddeel1    dveel1
27-Feb-05 ddeel2    dveel2
24-Feb-05 bi3ord    3orbi123d
24-Feb-05 im3ord    3orim123d
24-Feb-05 bi3or     3orbi123i
24-Feb-05 bi3an     3anbi123i
24-Feb-05 bi3and    3anbi123d
24-Feb-05 im3an     3anim123i
24-Feb-05 divdistrt divdirt
24-Feb-05 ltdiv1t   [--same--]  conjoined the two left-most antecedents
24-Feb-05 lediv1t   [--same--]  conjoined the two left-most antecedents
24-Feb-05 ltmuldivt [--same--]  conjoined the two left-most antecedents
24-Feb-05 ltdivmult [--same--]  conjoined the two left-most antecedents
24-Feb-05 ltmuldiv2t [--same--]  conjoined the two left-most antecedents
24-Feb-05 gt0ne0t   [--same--]  conjoined the two left-most antecedents
24-Feb-05 ltrect    [--same--]  conjoined the two left-most antecedents
24-Feb-05 recgt0t   [--same--]  conjoined the two left-most antecedents
24-Feb-05 lerect    [--same--]  conjoined the two left-most antecedents
21-Feb-05 nn0ge0i   nn0ge0
21-Feb-05 rdgzer    rdg0
21-Feb-05 rdgzert   rdg0g
21-Feb-05 frzer     fr0g
21-Feb-05 mulzer1   mul01
21-Feb-05 mulzer2   mul02
21-Feb-05 mulzer1t  mul01t
21-Feb-05 mulzer2t  mul02t
21-Feb-05 divzer    div0
19-Feb-05 ax0re     0re
13-Feb-05 cardcard  cardidm
13-Feb-05 exp2t     sqvalt
13-Feb-05 uzind2    ---         Obsolete; use uzind3
 5-Feb-05 ---       ---         We will adopt "equ" (vs. old "eq") for
 5-Feb-05 ---       ---         set variable equality and "eq" (vs. old
 5-Feb-05 ---       ---         "cleq") for class equality.  (Remember it
 5-Feb-05 ---       ---         is important to do these in REVERSE order
 5-Feb-05 ---       ---         below!)
 5-Feb-05 cleqri    eqri
 5-Feb-05 cleqrd    eqrd
 5-Feb-05 cleqid    eqid
 5-Feb-05 cleqcom   eqcom
 5-Feb-05 cleqcomi  eqcomi
 5-Feb-05 cleqcomd  eqcomd
 5-Feb-05 cleq1     eqeq1
 5-Feb-05 cleq2     eqeq2
 5-Feb-05 cleq1i    eqeq1i
 5-Feb-05 cleq2i    eqeq2i
 5-Feb-05 cleq1d    eqeq1d
 5-Feb-05 cleq2d    eqeq2d
 5-Feb-05 cleq12    eqeq12
 5-Feb-05 cleq12i   eqeq12i
 5-Feb-05 cleq12d   eqeq12d
 5-Feb-05 cleqan12d eqeqan12d
 5-Feb-05 cleqan12rd eqeqan12rd
 5-Feb-05 cleqtr    eqtr
 5-Feb-05 cleq2tr   eq2tri
 5-Feb-05 cleqab    abeqbi2
 5-Feb-05 cleqabi   abeqbi2i
 5-Feb-05 cleqabr   abeqbi1
 5-Feb-05 cleqabd   abeqbi2d
 5-Feb-05 cleqabri  abeqbi1i
 5-Feb-05 cleq2ab   eq2ab
 5-Feb-05 cleqrabi  rabeqbi2i
 5-Feb-05 clneq     nelneq
 5-Feb-05 clneq2    nelneq2
 5-Feb-05 sbeq2     equsb2
 5-Feb-05 sbeq1     equsb1
 5-Feb-05 eqvin.l2  ---           obsolete; use equvin instead
 5-Feb-05 eqvin     equvin
 5-Feb-05 eqvin.l1  equvini
 5-Feb-05 eqsal     equsal
 5-Feb-05 eqsex     equsex
 5-Feb-05 eqs5      equs5
 5-Feb-05 eqs4      equs4
 5-Feb-05 eqs3      equs3
 5-Feb-05 eqs2      equs2
 5-Feb-05 eqs1      equs1
 5-Feb-05 eq6s      hbnaes
 5-Feb-05 eq6       hbnae
 5-Feb-05 eq5s      hbaes
 5-Feb-05 eq5       hbae
 5-Feb-05 eq4ds     nalequcoms
 5-Feb-05 eq4s      alequcoms
 5-Feb-05 eq4       ax-10
 5-Feb-05 a14b      elequ2
 5-Feb-05 a13b      elequ1
 5-Feb-05 eqt2b     equequ2
 5-Feb-05 a8b       equequ1
 5-Feb-05 eqt       equtr
 5-Feb-05 eqt2      equtrr
 5-Feb-05 eqan      equtr2
 5-Feb-05 eqcom     equcomi
 5-Feb-05 eqcomb    equcom
 5-Feb-05 eqcoms    equcoms
 5-Feb-05 eqid      equid
 3-Feb-05 sb5f1     sb6rf
21-Jan-05 mulcanxx  mulcant2
21-Jan-05 mulcant2  mulcant
21-Jan-05 mulcant   mulcanxx
10-Jan-05 add41r3   add42
10-Jan-05 caopr41r3 caopr42
10-Jan-05 an41r3s   an42s
10-Jan-05 an41r3    an42
 8-Jan-05 ---       ---         The imxx series was changed analogously
 8-Jan-05 ---       ---         to the bixx series change.
 8-Jan-05 im2an     anim12i
 8-Jan-05 imran     anim1i
 8-Jan-05 imlan     anim2i
 8-Jan-05 im2or     orim12i
 8-Jan-05 imror     orim1i
 8-Jan-05 imlor     orim2i
 8-Jan-05 im2and    anim12d
 8-Jan-05 imrand    anim1d
 8-Jan-05 imland    anim2d
 8-Jan-05 im2ord    orim12d
 8-Jan-05 imrord    orim1d
 8-Jan-05 imlord    orim2d
 8-Jan-05 ---       ---         The bixx series was changed to be analogous
 8-Jan-05 ---       ---         to the xxeqx series e.g. uneq12d.
 8-Jan-05 ---       ---         (Suggested by Raph Levien.)
 8-Jan-05 bi2and    anbi12d
 8-Jan-05 birand    anbi1d
 8-Jan-05 biland    anbi2d
 8-Jan-05 bi2imd    imbi12d
 8-Jan-05 birimd    imbi1d
 8-Jan-05 bilimd    imbi2d
 8-Jan-05 bi2ord    orbi12d
 8-Jan-05 birord    orbi1d
 8-Jan-05 bilord    orbi2d
 8-Jan-05 bi2bid    bibi12d
 8-Jan-05 birbid    bibi1d
 8-Jan-05 bilbid    bibi2d
 8-Jan-05 binegd    negbid
 8-Jan-05 bi2an     anbi12i
 8-Jan-05 biran     anbi1i
 8-Jan-05 bilan     anbi2i
 8-Jan-05 bi2im     imbi12i
 8-Jan-05 birim     imbi1i
 8-Jan-05 bilim     imbi2i
 8-Jan-05 bi2or     orbi12i
 8-Jan-05 biror     orbi1i
 8-Jan-05 bilor     orbi2i
 8-Jan-05 bi2bi     bibi12i
 8-Jan-05 birbi     bibi1i
 8-Jan-05 bilbi     bibi2i
 8-Jan-05 bineg     negbii
 3-Jan-05 pm5.41    imdi
 1-Jan-05 iundif    iundif2
 1-Jan-05 iindif    iindif2
 1-Jan-05 iunin     iunin2
 1-Jan-05 iinin     iinin2
 1-Jan-05 sylan13br sylancbr
 1-Jan-05 sylan13b  sylancb
 1-Jan-05 sylan13   sylanc
 1-Jan-05 syl13     sylc
26-Dec-04 0ne1o     ---         obsolete; use 1ne0
19-Dec-04 sbequ6    [--same--]  swapped biconditional order
19-Dec-04 sbequ5    [--same--]  swapped biconditional order
15-Dec-04 syl2and   syl2ani
15-Dec-04 sylan2d   sylan2i
15-Dec-04 syland    sylani
12-Dec-04 nnordex   nnaordex
12-Dec-04 nnwordex  nnawordex
12-Dec-04 mpand     mpdan
12-Dec-04 ontr      ontr1
 6-Dec-04 on0eqel   on0eqelt
30-Nov-04 exp2      sqvalt
30-Nov-04 1exp      1expt
30-Nov-04 0exp      0expt
30-Nov-04 exp1      exp1t
30-Nov-04 expp1     expp1t
18-Nov-04 divrclz   redivclz
18-Nov-04 divrclt   redivclt
18-Nov-04 subrclt   resubclt
18-Nov-04 negrclt   renegclt
18-Nov-04 mulrclt   remulclt
18-Nov-04 divrcl    redivcl
18-Nov-04 subrcl    resubcl
18-Nov-04 negrcl    renegcl
18-Nov-04 mulrcl    remulcl
18-Nov-04 addrcl    readdcl
18-Nov-04 ltdivmul  ---         obsolete; use ltmuldiv instead
18-Nov-04 ltdivmult ---         obsolete; use ltmuldivt instead (note: there
                                is a new ltdivmult that is unrelated)
18-Nov-04 distr2t   adddirt
18-Nov-04 distr2    adddir
18-Nov-04 distr     adddi
18-Nov-04 subdistr  subdir
17-Nov-04 nnrect    nnrecgt0t
17-Nov-04 posdif    [--same--]  swapped biconditional and variable order
15-Nov-04 negdistt3 negdi3t
15-Nov-04 negdistt2 negdi2t
15-Nov-04 negdistt  negdit
15-Nov-04 negdist3  negdi3
15-Nov-04 negdist2  negdi2
11-Nov-04 reuunis   reuuni2
11-Nov-04 reuuni    reuuni1
 9-Nov-04 zlelt1    zleltp1t
 9-Nov-04 zltle1    zltp1let
 7-Sep-04 arch      [--same--]  removed quantifier, changed set var. to class
 2-Nov-04 dfom2     dfom3
 2-Nov-04 dfom3     dfom4
29-Oct-04 df-ded    df-if
29-Oct-04 dedeq1    ifeq1
29-Oct-04 dedeq2    ifeq2
29-Oct-04 dedeq12   ifeq12
29-Oct-04 dedbi     ifbi
29-Oct-04 dedlem1   iftrue
29-Oct-04 dedlem2   iffalse
29-Oct-04 dedex     ifex
29-Oct-04 cded      cif
29-Oct-04 ---SYMBOL CHANGE----  Changed math symbol 'ded' to 'if'
28-Oct-04 cmulc     cmul
20-Oct-04 oprabex   oprabex2
14-Oct-04 nn0lelt1  nn0leltp1t
14-Oct-04 nn0ltle1  nn0ltp1let
14-Oct-04 nnlelt1   nnleltp1t
14-Oct-04 nnltle1   nnltp1let
14-Oct-04 rnoel3    rabn0
14-Oct-04 noel3     abn0
14-Oct-04 noel2     n0i
14-Oct-04 peano2c   peano2nn
12-Oct-04 supeu     supeui
12-Oct-04 supcl     supcli
12-Oct-04 supub     supubi
12-Oct-04 suplub    suplubi
12-Oct-04 supnub    supnubi
12-Oct-04 suprcl    suprcli
12-Oct-04 suprub    suprubi
12-Oct-04 pm4.12    con2bi
12-Oct-04 bicon4    con4bii
12-Oct-04 con2bi    con2bii
12-Oct-04 bicon1    con1bii
12-Oct-04 pm2.11    exmid
11-Oct-04 sbf1      ---         obsolete; use sbf instead
11-Oct-04 ceqsexg   ceqex
 9-Oct-04 fvco2     fvco3
 8-Oct-04 indif0    disjdif
 8-Oct-04 biopab    opabbii.2
 8-Oct-04 bioprab   oprabbieqi
 7-Oct-04 ssii      sselii
 6-Oct-04 op2nd     op2ndb
 6-Oct-04 op1st     op1stb
 3-Oct-04 ind       nnind
 3-Oct-04 sylan5    sylan2
 3-Oct-04 sylan5b   sylan2b
 3-Oct-04 sylan5br  sylan2br
 3-Oct-04 sylan5d   sylan2i
 3-Oct-04 zind      ---         obsolete; use uzind
30-Sep-04 fvop      funfvop
30-Sep-04 funfvop   funopfv
30-Sep-04 pm4.21    bicom
30-Sep-04 bicom     bicomi
30-Sep-04 entr      entri
30-Sep-04 sstr2qqq  sstr
30-Sep-04 sstr      sstr2
30-Sep-04 sstr2     sstr2qqq
29-Sep-04 xp0qqq    xp0r
29-Sep-04 xp0r      xp0
29-Sep-04 xp0       xp0qqq
28-Sep-04 xpdom     xpdom2      changed variable names
28-Sep-04 xpdom2    xpdom3
26-Sep-04 xpindi    inxp
26-Sep-04 xpun1     xpundi
26-Sep-04 xpun2     xpundir
25-Sep-04 entr      entrt
23-Sep-04 ssfnres   ---         obsolete; use fnssres instead
23-Sep-04 resun     resundi
21-Sep-04 f11       [--same--]  changed o.p. membership to binary relation
21-Sep-04 unisuc    [--same--]  swapped arguments of = sign
21-Sep-04 onunisuc  [--same--]  swapped arguments of = sign
21-Sep-04 undif3    ---         obsolete; use undif
21-Sep-04 ssequn2   [--same--]  swapped arguments of = sign
21-Sep-04 sseqin2   [--same--]  swapped arguments of = sign
21-Sep-04 onelun    [--same--]  swapped arguments of = sign
21-Sep-04 dfss4     [--same--]  swapped arguments of = sign
21-Sep-04 ordunisuc ordunisssuc
21-Sep-04 ssfun     funss
15-Sep-04 19.6      alex
15-Sep-04 alex      alexeq
15-Sep-04 19.11     excom
15-Sep-04 19.11a    excomim
15-Sep-04 19.5      alcom
15-Sep-04 19.7      alnex
15-Sep-04 19.14     exnal
15-Sep-04 alnex     alinexa
15-Sep-04 exnal     exanali
15-Sep-04 dmsn      dmsnop
15-Sep-04 rnsn      rnsnop
13-Sep-04 ppnull    pwpw0
13-Sep-04 pwnull    pw0
13-Sep-04 zfnull2   zfnul
13-Sep-04 nullpss   0pss
13-Sep-04 nullss    0ss
13-Sep-04 nulleq    eq0
13-Sep-04 nnull     n0
13-Sep-04 nnullf    n0f
13-Sep-04 xpdisj    xpsndisj
13-Sep-04 subdist   subdi
13-Sep-04 negdist   negdi
13-Sep-04 nndist    nndi
13-Sep-04 xpindist  inxp
11-Sep-04 ssd       sseld
11-Sep-04 ssi       sseli
11-Sep-04 vtoclab   elab2
11-Sep-04 vtoclabg  elab2g
11-Sep-04 elab2g    elab3g
 6-Sep-04 comm      com12
 4-Sep-04 opabval   fvopab3
 4-Sep-04 opabvalig fvopab3ig
 4-Sep-04 opabval2g fvopab4g
 4-Sep-04 opabval2  fvopab4
 3-Sep-04 undif2    difun2
 1-Sep-04 dedlem2   [--same--]  swapped arguments of = sign
 1-Sep-04 dedlem1   [--same--]  swapped arguments of = sign
31-Aug-04 pm2.16d   con3d
31-Aug-04 pm2.03d   con2d
31-Aug-04 pm2.15d   con1d
31-Aug-04 pm2.16    con3
31-Aug-04 pm2.03    con2
31-Aug-04 pm2.15    con1
31-Aug-04 con3      con3i
31-Aug-04 con2      con2i
31-Aug-04 con1      con1i
29-Aug-04 oprabelrn elrnoprab
27-Aug-04 ssequn1   [--same--]  swapped arguments of = sign
27-Aug-04 df-ss     dfss
27-Aug-04 imdistanb ---         obsolete; use imdistan
27-Aug-04 imdistan  [--same--]  now includes converse
17-Aug-04 difun2    [--same--]  swapped arguments of = sign
17-Aug-04 undif1    [--same--]  swapped arguments of = sign and union
17-Aug-04 difin     [--same--]  swapped arguments of = sign
17-Aug-04 unindistr undir
17-Aug-04 unindist  undi
17-Aug-04 inundistr indir
17-Aug-04 inundist  indi
17-Aug-04 indist    inindi
16-Aug-04 ss2un     unss12      order of variables changed
15-Aug-04 funmo,dffunmof,dffunmo
                    [--same--]  ordered pair membership -> binary relation
15-Aug-04 dfrel2    [--same--]  swapped arguments of = sign
12-Aug-04 unxp      xpundir
11-Aug-04 elima2    elima3
11-Aug-04 reluni    [--same--]  restricted quantifier and added converse
 9-Aug-04 imun      imaun
 3-Aug-04 1id       om1
 3-Aug-04 oalim     [--same--]  conjoined antecedents; now uses indexed union
 3-Aug-04 divdiv23  divdiv23z
 3-Aug-04 divdiv23i divdiv23
 2-Aug-04 divrec,divrecz [--same--] swapped A and B
 2-Aug-04 zq        zqt
 2-Aug-04 qre       qret
 1-Aug-04 mulcant  [--same--]  swapped conjunct in antecedent
 1-Aug-04 axrecex,axrrecex,divclt,divcan1t,divcan2t,recidt,divdistrt,divrclt
                    [--same--]  conjoined the two left-most antecedents
 1-Aug-04 peano1c   1nn
 1-Aug-04 1nn       1onn
28-Jul-04 sbco0     sbid2
28-Jul-04 sbid2     sbid2v
26-Jul-04 cardonval oncardval
15-Jun-04 ssin      [--same--]  swapped biconditional order
15-Jun-04 unss      [--same--]  swapped biconditional order
11-Jun-04 dfun2     df-un
11-Jun-04 df-un     dfun2
11-Jun-04 dfin2     df-in
11-Jun-04 df-in     dfin2
 3-Jun-04 ssintss   intss
 3-Jun-04 intss     intss1
30-May-04 r1clos    r1pwcl      now uses antecedent instead of hypothesis
30-May-04 r1powt    r1pw
28-May-04 sqvalt    ---         obsolete; use exp2
28-May-04 expntwo   exp2
28-May-04 expnone   ---         obsolete; use expp1t
28-May-04 expnsuc   ---         obsolete; use expp1t
28-May-04 expnzer   ---         obsolete; use exp0t
26-May-04 ontrt     ---         obsolete; use onelon instead
26-May-04 ddelim*   [--same--]  (*=wildcard) changed order of hypotheses
21-May-04 fvcnvb    f1ocnvfvb
21-May-04 fvcnv     f1ocnvfv
21-May-04 sbcb      sbcbig    now uses antecedent instead of hypothesis
21-May-04 sbci      sbcimg
21-May-04 sbb       sbbi
21-May-04 sbo       sbor
21-May-04 sbi       sbim
21-May-04 sbim      sbimi
21-May-04 sba       sban
21-May-04 fvelrn    [--same--]  changed to restricted quantifier
 8-Feb-04 zfpowb    pwexb
 8-Feb-04 zfpowcl   pwex
 8-Feb-04 zfnull    0ex
 8-Feb-04 limelon   [--same--]  changed first -> to /\ in antecedent


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                           2. Quick "How To"
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

How to use this file under Windows 95/98/NT/2K/XP/Vista:

1. Download the program metamath.exe per the instructions on the
   Metamath home page (http://us.metamath.org) and put it in the same
   directory as this file (set.mm).
2. In Windows Explorer, double-click on metamath.exe.
3. Type "read set.mm" and press Enter.
4. Type "help" for a list of help topics, and "help demo" for some
   command examples.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                             3. Bibliography
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Bibliographical references are made by bracketing an identifer in a theorem's
comment, such as [RussellWhitehead].  These refer to HTML tags on the following
web pages:

  Logic and set theory - see http://us.metamath.org/mpegif/mmset.html#bib
  Hilbert space - see http://us.metamath.org/mpegif/mmhil.html#ref


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                      4. Metamath syntax summary
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The HELP LANGUAGE command in the Metamath program will give you a quick
overview of Metamath.  Syntax summary:

          $c ... $. - Constant declaration
          $v ... $. - Variable declaration
          $d ... $. - Disjoint (distinct) variable restriction
  <label> $f ... $. - "Floating" hypothesis (i.e. variable type declaration)
  <label> $e ... $. - "Essential" hypothesis (i.e. a logical assumption for a
                      theorem or axiom)
  <label> $a ... $. - Axiom or definition or syntax construction
  <label> $p ... $= ... $. - Theorem and its proof
          ${ ... $} - Block for defining the scope of the above statements
                      (except $a, $p which are forever active)
$)        $( ... $)
$(                  - Comments (may not be nested); see HELP LANGUAGE
                      for markup features
          $[ ... $] - Include a file

The above two-character sequences beginning with "$" are the only primitives
built into the Metamath language.  The only "logic" Metamath uses in its proof
verification algorithm is the substitution of expressions for variables while
checking for distinct variable violations.  Everything else, including the
axioms for logic, is defined in this database file.

Here is some more detail about the syntax.  There are two kinds of user-defined
syntax elements, called math symbols (or just symbols) and labels.  A symbol
may contain any non-whitespace printable character except "$".  A label may
contain only alphanumeric characters and the characters "."  (period), "-"
(hyphen), and "_" (underscore).  Tokens and labels are case-sensitive.  All
labels (except in proofs) must be distinct.  A label may not have the same name
as a token (to simplify the coding of certain parsers and translators).

  $c <symbollist> $.
      <symbollist> is a (whitespace-separated) list of distinct symbols that
      haven't been used before.
  $v <symbollist> $.
      <symbollist> is a list of distinct symbols that haven't been used yet
      in the current scope (see ${ ... $} below).
  $d <symbollist> $.
      <symbollist> is a (whitespace-separated) list of distinct symbols
      previously declared with $v in current scope.  It means that
      substitutions into these symbols may not have variables in common.
  <label> $f <symbollist> $.
      <symbollist> is a list of 2 symbols, the first of which must be
      previously declared with $c in the current scope.
  <label> $e <symbollist> $.
      <symbollist> is a list of 2 or more symbols, the first of which must be
      previously declared with $c in the current scope.
  <label> $a <symbollist> $.
      <symbollist> is a list of 2 or more symbols, the first of which must be
      previously declared with $c in the current scope.
  <label> $p <symbollist> $= <proof> $.
      <symbollist> is a list of 2 or more symbols, the first of which must be
      previously declared with $c in the current scope.  <proof> is either a
      whitespace-delimited sequence of previous labels (created by
      SAVE PROOF <label> /NORMAL) or a compressed proof (created by
      SAVE PROOF <label> /COMPRESSED).  After using SAVE PROOF, use
      WRITE SOURCE to save the database file to disk.
  ${ ... $}
      Block for scoping the above statements (except $a, $p which are forever
      active).  Currently, $c may not occur inside of a block.
$)
  $( <any text> $)
$(    Comment.  Note: <any text> may not contain adjacent "$" and ")"
      characters.
  $[ <filename> $]
      Insert contents of <filename> at this point.  If <filename> is current
      file or has been already been inserted, it will not be inserted again.

Inside of comments, it is recommended that labels be preceded with a tilde (~)
and math symbol tokens be enclosed in grave accents (` `).  This way the LaTeX
and HTML rendition of comments will be accurate, and (future) tools to globally
change labels and math symbols will also change them in comments.  Note that ``
inside of grave accents is interpreted as a single ` .  A special comment
containing $ t defines LaTeX and HTML symbols.  See HELP LANGUAGE and
HELP HTML for other markup features in comments.

The proofs in this file are in "compressed" format for storage efficiency.  The
Metamath program reads the compressed format directly.  This format is
described in an Appendix of the Metamath book.  It is not intended to be read
by humans.  For viewing proofs you should use the various SHOW PROOF commands
described in the Metamath book (or the on-line HELP).

The Metamath program does not normally affect any content of this file (set.mm)
other than proofs, i.e. tokens between "$=" and "$.".  All other content is
user-created.  Proofs are created or modified with the PROVE command.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          5. Other notes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

1. It is recommended that you be familiar with chapters 2 and 4 of the
'Metamath' book to understand the Metamath language.  Chapters 2, 3 and 5
explain how to use the program.  Chapter 3 gives you an informal overview of
what this source file is all about.  Appendix A shows you the standard
mathematical symbols corresponding to some of the ASCII tokens in this file.

The ASCII tokens may seem cryptic at first, even if you are familiar with set
theory, but a review of the definition summary in Chapter 3 should quickly
enable you to see the correspondence to standard mathematical notation.  To
easily find the definition of a token, search for the first occurrences of the
token surrounded by spaces.  Some odd-looking ones include "-." for "not", and
"C_" for "is a subset of."  (HELP TEX tells you how to obtain a LaTeX output to
see the real mathematical symbols.)  Let me know if you have better suggestions
for naming ASCII tokens.

2. Logic and set theory provide a foundation for all of mathematics.  To learn
about them, you should study one or more of the references listed below.  The
textbooks provide a motivation for what we are doing, whereas Metamath lets you
see in detail all hidden and implicit steps.  Most standard theorems are
accompanied by citations.  Some closely followed texts include the following:

  Axioms of propositional calculus - [Margaris].
  Axioms of predicate calculus - [Megill] (System S3' in the article
      referenced).
  Theorems of propositional calculus - [WhiteheadRussell].
  Theorems of pure predicate calculus - [Margaris].
  Theorems of equality and substitution - [Monk2], [Tarski], [Megill].
  Axioms of set theory - [BellMachover].
  Development of set theory - [TakeutiZaring].  (The first part of [Quine]
      has a good explanation of the powerful device of "virtual" or
      class abstractions, which is essential to our development.)
  Construction of real and complex numbers - [Gleason]
  Theorems about real numbers - [Apostol]

3. Convention:  All $a statements starting with "|-" have labels
starting with "ax-" (axioms) or "df-" (definitions).  "ax-" corresponds
to what is traditionally called an axiom.  "df-" introduces new symbols
or a new relationship among symbols that can be eliminated; they always
extend the definition of a wff or class.  Metamath blindly treats $a
statements as new given facts but does not try to justify them.  The
mmj2 program will justify the definitions as sound, except for 5 (df-bi,
df-cleq, df-clel, df-clab, df-sbc) that require a more complex metalogical
justification by hand.

4. Our method of definition, the axioms for predicate calculus, and the
development of substitution are somewhat different from those found in standard
texts.  The axioms were designed for direct derivation of standard results
without excessive use of metatheorems.  (See Theorem 9.7 of [Megill] for a
rigorous justification.)  Typically we are minimalist when introducing new
definitions; they are introduced only when a clear advantage becomes apparent
for reducing the number of symbols, shortening proofs, etc.  We generally avoid
the introduction of gratuitous definitions because each one requires associated
theorems and additional elimination steps in proofs.

5. Where possible, the notation attempts to conform to modern conventions, with
variations due to our choice of the axiom system or to make proofs shorter.
Listed below are some important conventions and how they correspond to textbook
language.  The notation is usually explained in more detail when first
introduced.

  Typically, Greek letters (ph = phi, ps = psi, ch = chi, etc.) are used for
      propositional (wff) variables; x,y,z,... for individual (i.e. set)
      variables; and A,B,C,... for class variables.
  "|-", meaning "It is provable that," is the first token of all assertions
      and hypotheses that aren't syntax constructions.  This is a standard
      convention in logic.  For us, it also prevents any ambiguity with
      statements that are syntax constructions, such as "wff -. ph".
  "$e |- ( ph -> A. x ph ) $." should be read "Assume variable x is
      (effectively) not free in wff phi."  Literally, this says "Assume it is
      provable that phi implies for all x phi."
  "|- ( -. A. x x = y -> ..." should be read "If x and y are distinct
      variables, then..."  This antecedent provides us with a technical
      device (called a "distinctor" in [Megill]) to avoid the need for the
      $d statement early in our development of predicate calculus, permitting
      unrestricted substitituions as conceptually simple as those in
      propositional calculus.  However, the $d eventually becomes a
      requirement, and after that this device is rarely used.
  "[ y / x ] ph" should be read "the wff that results when y is properly
      substituted for x in ph."
  "$d x y $." should be read "Assume x and y are distinct variables."
  "$d x ph $." should be read "Assume x does not occur in phi $."  Sometimes
      a theorem is proved with "$e |- ( ph -> A. x ph ) $." in place of
      "$d x ph $." when a more general result is desired; ~ ax-17 can be used
      to derive the $d version.  For an example of how to get from the $d
      version back to the $e version, see the proof of ~ euf from ~ df-eu .
  "$d x A $." should be read "Assume x is not a variable occurring in class A."
  "$d x A $.  $d x ps $.  $e |- ( x = A -> ( ph <-> ps ) ) $." is an idiom
      often used instead of explicit substitution, meaning "Assume psi results
      from the substitution of A for x in phi."
  "$e |- A e. _V $." should be read "Assume class A is a set (i.e. exists)."
      This is a convenient convention used by [Quine].
  "$d x y $.  $e |- y e. A -> A. x y e. A $." should be read "Assume x is
      (effectively) not a free variable in class A."
  "`' R" should be read "converse of (relation) R" and is the same as the more
      standard notation R^{-1}.
  "( f ` x )" should be read "the value of function f at x" and is the same as
      the more familiar f(x).
  The Deduction Theorem of standard logic is never used.  Instead, in set
      theory, we use other tricks to make a $e hypothesis become an antecedent.
      See the comment for theorem ~ dedth below.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           6. Acceptable shorter proofs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Shorter proofs are welcome, and any shorter proof I accept will be acknowledged
in the theorem's description.  However, in some cases a proof may be "shorter"
or not depending on how it is formatted.  This section provides general
guidelines.

Usually I will automatically accept shorter proofs that (1) shorten the set.mm
file (with compressed proofs), (2) reduce the size of the HTML file generated
with SHOW STATEMENT xx / HTML, (3) use only existing, unmodified theorems in
the database (the order of theorems may be changed, though), and (4) use no
additional axioms.

Usually I will also automatically accept a _new_ theorem that is used to
shorten multiple proofs, if the total size of set.mm (including the comment of
the new theorem, not including the acknowledgment) decreases as a result.

In borderline cases, I typically place more importance on the number of
compressed proof steps and less on the length of the label section (since the
names are in principal arbitrary).  If two proofs have the same number of
compressed proof steps, I will typically give preference to the one with the
smaller number of different labels, or if these numbers are the same, the proof
with the fewest number of characters that the proofs happen to have by chance
when label lengths are included.

A few theorems have a longer proof than necessary in order to avoid the use of
certain axioms, for pedagogical purposes, and for other reasons.  Usually this
is clear from the theorem's description.  For example, id1 shows a proof
directly from axioms.  Shorter proofs for such cases won't be accepted, of
course, unless the criteria described continues to be satisfied.

$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Future:  ideas for possible axiom renaming
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

     old    possible new name(s)          description

     ax-1   ax-k     Axiom Simp (principal type scheme for combinator K)
     ax-2   ax-s     Axiom Frege (principal type scheme for combinator S)
     ax-3   ax-t     Axiom Transp
     ax-mp  ax-mp    Rule of Modus Ponens

     ax-5   ax-qim  ax-qi  ax-q1  ax-4   Axiom of Quantified Implication
     ax-6   ax-qne  ax-qn  ax-q2  ax-5   Axiom of Quantified Negation
     ax-7   ax-qqc  ax-qq  ax-q3  ax-6   Axiom of Quantifier Commutation
     ax-gen ax-gen  ax-gen        ax-gen Rule of Generalization
     ax-8   ax-eq1  ax-e1  ax-e1  ax-7   Axiom of Equality (1)
     ax-9   ax-exi  ax-ex  ax-e2  ax-8   Axiom of Existence
     ax-10  ax-sbq  ax-qs  ax-e3  ax-9   Axiom of Quantifier Substitution
     ax-11  ax-sbv  ax-vs  ax-e4  ax-10  Axiom of Variable Substitution
     ax-12  ax-qi1  ax-qe  ax-e5  ax-11  Axiom of Quantifier Introduction (1)
     ax-13  ax-eq2  ax-e2  ax-e6  ax-12  Axiom of Equality (2)
     ax-14  ax-eq3  ax-e3  ax-e7  ax-13  Axiom of Equality (3)
     ax-17  ax-qi2  ax-qi  ax-qi  ax-14  Axiom of Quantifier Introduction (2)

     obsolete versions or redundant:
     ax-4   ax-spc  ax-sp  ax-q4  ax-15  Axiom of Specialization
     ax-5o  ax-qimo ax-qio ax-q5  ax-4o  Axiom of Quantified Implication
     ax-6o  ax-qneo ax-qno ax-q6  ax-5o  Axiom of Quantified Negation
     ax-9o  ax-exio ax-exo ax-e8  ax-8o  Axiom of Existence
     ax-10o ax-sbqo ax-sqo ax-e9  ax-9o  Axiom of Quantifier Substitution
     ax-11o ax-sbvo ax-svo ax-e10 ax-10o Axiom of Variable Substitution
     ax-15  ax-qi3  ax-q3  ax-e11 ax-16  Axiom of Quantifier Introduction
     ax-16  ax-qi4  ax-dv  ax-e12 ax-17  Axiom of Distinct Variables
$)


$(
###############################################################################
            CLASSICAL FIRST ORDER LOGIC WITH EQUALITY
###############################################################################

  Logic can be defined as the "study of the principles of correct reasoning"
  (Merrilee H. Salmon's 1991 "Informal Reasoning and Informal Logic" in
  _Informal Reasoning and Education_ ) or as "a formal system using symbolic
  techniques and mathematical methods to establish truth-values" (the Oxford
  English Dictionary).

  This section formally defines the logic system we will use.  In particular,
  it defines symbols for declaring truthful statements, along with rules for
  deriving truthful statements from other truthful statements.  The system
  defined here is classical first order logic with equality (the most common
  logic system used by mathematicians).

  We begin with a few housekeeping items in pre-logic, and then introduce
  propositional calculus (both its axioms and important theorems that can be
  derived from them).  Propositional calculus deals with general truths about
  well-formed formulas (wffs) regardless of how they are constructed.  This is
  followed by proofs that other axiomatizations of classical propositional
  calculus can be derived from the axioms we have chosen to use.

  We then define predicate calculus, which adds additional symbols and rules
  useful for discussing objects (beyond simply true or false).  In particular
  it introduces the symbols ` = ` ("equals"), ` e. ` ("is a member of"), and `
  A. ` ("for all").  The first two are called "predicates."  A predicate
  specifies a true or false relationship between its two arguments.

$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Pre-logic
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

  This section includes a few "housekeeping" mechanisms before we begin
  defining the basics of logic.

$)

  $( Declare the primitive constant symbols for propositional calculus. $)
  $c ( $.  $( Left parenthesis $)
  $c ) $.  $( Right parenthesis $)
  $c -> $. $( Right arrow (read:  "implies") $)
  $c -. $. $( Right handle (read:  "not") $)
  $c wff $. $( Well-formed formula symbol (read:  "the following symbol
               sequence is a wff") $)
  ${ $v ph $. wff.TOP.1 $f wff ph $. wff.TOP $a IS_TOPLEVEL wff ph $. $}
  $c |- $. $( Turnstile (read:  "the following symbol sequence is provable" or
              'a proof exists for") $)
  ${ $v ph $. turnstile.TOP.1 $f wff ph $. turnstile.TOP $a IS_TOPLEVEL |- ph $. $}

  $( wff variable sequence:  ph ps ch th ta et ze si rh mu la ka $)
  $( Introduce some variable names we will use to represent well-formed
     formulas (wff's). $)
  $v ph $.  $( Greek phi $)
  $v ps $.  $( Greek psi $)
  $v ch $.  $( Greek chi $)
  $v th $.  $( Greek theta $)
  $v ta $.  $( Greek tau $)
  $v et $.  $( Greek eta $)
  $v ze $.  $( Greek zeta $)
  $v si $.  $( Greek sigma $)
  $v rh $.  $( Greek rho $)
  $v mu $.  $( Greek mu $)
  $v la $.  $( Greek lambda $)
  $v ka $.  $( Greek kappa $)

  $( Specify some variables that we will use to represent wff's.
     The fact that a variable represents a wff is relevant only to a theorem
     referring to that variable, so we may use $f hypotheses.  The symbol
     ` wff ` specifies that the variable that follows it represents a wff. $)
  $( Let variable ` ph ` be a wff. $)
  wph $f wff ph $.
  $( Let variable ` ps ` be a wff. $)
  wps $f wff ps $.
  $( Let variable ` ch ` be a wff. $)
  wch $f wff ch $.
  $( Let variable ` th ` be a wff. $)
  wth $f wff th $.
  $( Let variable ` ta ` be a wff. $)
  wta $f wff ta $.
  $( Let variable ` et ` be a wff. $)
  wet $f wff et $.
  $( Let variable ` ze ` be a wff. $)
  wze $f wff ze $.
  $( Let variable ` si ` be a wff. $)
  wsi $f wff si $.
  $( Let variable ` rh ` be a wff. $)
  wrh $f wff rh $.
  $( Let variable ` mu ` be a wff. $)
  wmu $f wff mu $.
  $( Let variable ` la ` be a wff. $)
  wla $f wff la $.
  $( Let variable ` ka ` be a wff. $)
  wka $f wff ka $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Inferences for assisting proof development
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    dummylink.1 $e |- ph $.
    dummylink.2 $e |- ps $.
    $( (_Note_:  This inference rule and the next one, ~ idi , will normally
       never appear in a completed proof.  It can be ignored if you are using
       this database to assist learning logic - please start with the statement
       ~ wn instead.)

       This is a technical inference to assist proof development.  It provides
       a temporary way to add an independent subproof to a proof under
       development, for later assignment to a normal proof step.

       The metamath program's Proof Assistant requires proofs to be developed
       backwards from the conclusion with no gaps, and it has no mechanism that
       lets the user to work on isolated subproofs.  This inference provides a
       workaround for this limitation.  It can be inserted at any point in a
       proof to allow an independent subproof to be developed on the side, for
       later use as part of the final proof.

       _Instructions_:  (1) Assign this inference to any unknown step in the
       proof.  Typically, the last unknown step is the most convenient, since
       'assign last' can be used.  This step will be replicated in hypothesis
       dummylink.1, from where the development of the main proof can continue.
       (2) Develop the independent subproof backwards from hypothesis
       dummylink.2.  If desired, use a 'let' command to pre-assign the
       conclusion of the independent subproof to dummylink.2.  (3) After the
       independent subproof is complete, use 'improve all' to assign it
       automatically to an unknown step in the main proof that matches it.  (4)
       After the entire proof is complete, use 'minimize *' to clean up
       (discard) all dummylink references automatically.

       This inference was originally designed to assist importing partially
       completed Proof Worksheets from the mmj2 Proof Assistant GUI, but it can
       also be useful on its own.  Interestingly, no axioms are required for
       its proof. $)
    dummylink $p |- ph $=
      (  ) C $.
      $( [7-Feb-2006] $)
  $}

  ${
    idi.1 $e |- ph $.
    $( Inference form of ~ id .  This inference rule, which requires no axioms
       for its proof, is useful as a copy-paste mechanism during proof
       development in mmj2.  It is normally not referenced in the final version
       of a proof, since it is always redundant and can be removed using the
       'minimize *' command in the metamath program's Proof Assistant.
       (Contributed by Alan Sare, 31-Dec-2011.) $)
    idi $p |- ph $=
      (  ) B $.
      $( [31-Dec-2011] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                           Propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

  Propositional calculus deals with general truths about well-formed formulas
  (wffs) regardless of how they are constructed.  The simplest propositional
  truth is ` ( ph -> ph ) ` , which can be read "if something is true, then it
  is true" - rather trivial and obvious, but nonetheless it must be proved from
  the axioms (see theorem ~ id ).

  Our system of propositional calculus consists of three basic axioms and
  another axiom that defines the modus-ponens inference rule.  It is attributed
  to Jan Lukasiewicz (pronounced woo-kah-SHAY-vitch) and was popularized by
  Alonzo Church, who called it system P2.  (Thanks to Ted Ulrich for this
  information.)  These axioms are ~ ax-1 , ~ ax-2 , ~ ax-3 , and (for modus
  ponens) ~ ax-mp . Some closely followed texts include [Margaris] for the
  axioms and [WhiteheadRussell] for the theorems.

  The propositional calculus used here is the classical system widely used by
  mathematicians.  In particular, this logic system accepts the "law of the
  excluded middle" as proven in ~ exmid , which says that a logical statement
  is either true or not true.  This is an essential distinction of classical
  logic and is not a theorem of intuitionistic logic.

$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Recursively define primitive wffs for propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( If ` ph ` is a wff, so is ` -. ph ` or "not ` ph ` ."  Part of the
     recursive definition of a wff (well-formed formula).  In classical logic
     (which is our logic), a wff is interpreted as either true or false.  So if
     ` ph ` is true, then ` -. ph ` is false; if ` ph ` is false, then
     ` -. ph ` is true.  Traditionally, Greek letters are used to represent
     wffs, and we follow this convention.  In propositional calculus, we define
     only wffs built up from other wffs, i.e. there is no starting or "atomic"
     wff.  Later, in predicate calculus, we will extend the basic wff
     definition by including atomic wffs ( ~ weq and ~ wel ). $)
  wn $a wff -. ph $.

  $( If ` ph ` and ` ps ` are wff's, so is ` ( ph -> ps ) ` or " ` ph ` implies
     ` ps ` ."  Part of the recursive definition of a wff.  The resulting wff
     is (interpreted as) false when ` ph ` is true and ` ps ` is false; it is
     true otherwise.  Think of the truth table for an OR gate with input ` ph `
     connected through an inverter.  After we define the axioms of
     propositional calculus ( ~ ax-1 , ~ ax-2 , ~ ax-3 , and ~ ax-mp ), the
     biconditional ( ~ df-bi ), the constant true ` T. ` ( ~ df-tru ), and the
     constant false ` F. ` ( ~ df-fal ), we will be able to prove these truth
     table values: ` ( ( T. -> T. ) <-> T. ) ` ( ~ truimtru ),
     ` ( ( T. -> F. ) <-> F. ) ` ( ~ truimfal ), ` ( ( F. -> T. ) <-> T. ) `
     ( ~ falimtru ), and ` ( ( F. -> F. ) <-> T. ) ` ( ~ falimfal ).  These
     have straightforward meanings, for example, ` ( ( T. -> T. ) <-> T. ) `
     just means "the value of ` T. -> T. ` is ` T. ` ".

     The left-hand wff is called the antecedent, and the right-hand wff is
     called the consequent.  In the case of ` ( ph -> ( ps -> ch ) ) ` , the
     middle ` ps ` may be informally called either an antecedent or part of the
     consequent depending on context.  Contrast with ` <-> ` ( ~ df-bi ),
     ` /\ ` ( ~ df-an ), and ` \/ ` ( ~ df-or ). $)
  wi $a wff ( ph -> ps ) $.

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The axioms of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  Postulate the three axioms of classical propositional calculus.

  Propositional calculus (axioms ~ ax-1 through ~ ax-3 and rule ~ ax-mp ) can
  be thought of as asserting formulas that are universally "true" when their
  variables are replaced by any combination of "true" and "false."
  Propositional calculus was first formalized by Frege in 1879, using as his
  axioms (in addition to rule ~ ax-mp ) the wffs ~ ax-1 , ~ ax-2 , ~ pm2.04 ,
  ~ con3 , ~ notnot2 , and ~ notnot1 . Around 1930, Lukasiewicz simplified the
  system by eliminating the third (which follows from the first two, as you can
  see by looking at the proof of ~ pm2.04 ) and replacing the last three with
  our ~ ax-3 . (Thanks to Ted Ulrich for this information.)

  The theorems of propositional calculus are also called _tautologies_.
  Tautologies can be proved very simply using truth tables, based on the
  true/false interpretation of propositional calculus.  To do this, we assign
  all possible combinations of true and false to the wff variables and verify
  that the result (using the rules described in ~ wi and ~ wn ) always
  evaluates to true.  This is called the _semantic_ approach.  Our approach is
  called the _syntactic_ approach, in which everything is derived from axioms.
  A metatheorem called the Completeness Theorem for Propositional Calculus
  shows that the two approaches are equivalent and even provides an algorithm
  for automatically generating syntactic proofs from a truth table.  Those
  proofs, however, tend to be long, since truth tables grow exponentially with
  the number of variables, and the much shorter proofs that we show here were
  found manually.

$)

  $( Axiom _Simp_.  Axiom A1 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  The 3 axioms are also given as Definition 2.1 of
     [Hamilton] p. 28.  This axiom is called _Simp_ or "the principle of
     simplification" in _Principia Mathematica_ (Theorem *2.02 of
     [WhiteheadRussell] p. 100) because "it enables us to pass from the joint
     assertion of ` ph ` and ` ps ` to the assertion of ` ph ` simply." $)
  ax-1 $a |- ( ph -> ( ps -> ph ) ) $.

  $( Axiom _Frege_.  Axiom A2 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It "distributes" an antecedent over two
     consequents.  This axiom was part of Frege's original system and is known
     as _Frege_ in the literature.  It is also proved as Theorem *2.77 of
     [WhiteheadRussell] p. 108.  The other direction of this axiom also turns
     out to be true, as demonstrated by ~ pm5.41 . $)
  ax-2 $a |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $.

  $( Axiom _Transp_.  Axiom A3 of [Margaris] p. 49.  One of the 3 axioms of
     propositional calculus.  It swaps or "transposes" the order of the
     consequents when negation is removed.  An informal example is that the
     statement "if there are no clouds in the sky, it is not raining" implies
     the statement "if it is raining, there are clouds in the sky."  This axiom
     is called _Transp_ or "the principle of transposition" in _Principia
     Mathematica_ (Theorem *2.17 of [WhiteheadRussell] p. 103).  We will also
     use the term "contraposition" for this principle, although the reader is
     advised that in the field of philosophical logic, "contraposition" has a
     different technical meaning. $)
  ax-3 $a |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $.

  $(
     Postulate the modus ponens rule of inference.
  $)

  ${
    $( Minor premise for modus ponens. $)
    min $e |- ph $.
    $( Major premise for modus ponens. $)
    maj $e |- ( ph -> ps ) $.
    $( Rule of Modus Ponens.  The postulated inference rule of propositional
       calculus.  See e.g.  Rule 1 of [Hamilton] p. 73.  The rule says, "if
       ` ph ` is true, and ` ph ` implies ` ps ` , then ` ps ` must also be
       true."  This rule is sometimes called "detachment," since it detaches
       the minor premise from the major premise.

       Note:  In some web page displays such as the Statement List, the symbols
       "&" and "=>" informally indicate the relationship between the hypotheses
       and the assertion (conclusion), abbreviating the English words "and" and
       "implies."  They are not part of the formal language. $)
    ax-mp $a |- ps $.
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical implication
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  The results in this section are based on implication only, and avoid ax-3.
  In an implication, the wff before the arrow is called the "antecedent" and
  the wff after the arrow is called the "consequent."

  We will use the following descriptive terms very loosely:  A "closed form" or
  "tautology" has no $e hypotheses.  An "inference" has one or more $e
  hypotheses.  A "deduction" is an inference in which the hypotheses and the
  conclusion share the same antecedent.

$)

  ${
    mp2b.1 $e |- ph $.
    mp2b.2 $e |- ( ph -> ps ) $.
    mp2b.3 $e |- ( ps -> ch ) $.
    $( A double modus ponens inference.  (Contributed by Mario Carneiro,
       24-Jan-2013.) $)
    mp2b $p |- ch $=
      ( ax-mp ) BCABDEGFG $.
      $( [24-Jan-2013] $)
  $}

  ${
    $( Premise for ~ a1i . $)
    a1i.1 $e |- ph $.
    $( Inference derived from axiom ~ ax-1 .  See ~ a1d for an explanation of
       our informal use of the terms "inference" and "deduction."  See also the
       comment in ~ syld . $)
    a1i $p |- ( ps -> ph ) $=
      ( wi ax-1 ax-mp ) ABADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mp1i.a $e |- ph $.
    mp1i.b $e |- ( ph -> ps ) $.
    $( Drop and replace an antecedent.  (Contributed by Stefan O'Rear,
       29-Jan-2015.) $)
    mp1i $p |- ( ch -> ps ) $=
      ( ax-mp a1i ) BCABDEFG $.
      $( [29-Jan-2015] $)
  $}

  ${
    $( Premise for ~ a2i . $)
    a2i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference derived from axiom ~ ax-2 . $)
    a2i $p |- ( ( ph -> ps ) -> ( ph -> ch ) ) $=
      ( wi ax-2 ax-mp ) ABCEEABEACEEDABCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim2i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common antecedents in an implication. $)
    imim2i $p |- ( ( ch -> ph ) -> ( ch -> ps ) ) $=
      ( wi a1i a2i ) CABABECDFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpd.1 $e |- ( ph -> ps ) $.
    mpd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A modus ponens deduction. $)
    mpd $p |- ( ph -> ch ) $=
      ( wi a2i ax-mp ) ABFACFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( First of 2 premises for ~ syl . $)
    syl.1 $e |- ( ph -> ps ) $.
    $( Second of 2 premises for ~ syl . $)
    syl.2 $e |- ( ps -> ch ) $.
    $( An inference version of the transitive laws for implication ~ imim2 and
       ~ imim1 , which Russell and Whitehead call "the principle of the
       syllogism...because...the syllogism in Barbara is derived from them"
       (quote after Theorem *2.06 of [WhiteheadRussell] p. 101).  Some authors
       call this law a "hypothetical syllogism."  (The proof was shortened by
       O'Cat, 20-Oct-2011.)  (The proof was shortened by Wolf Lammen,
       26-Jul-2012.)

       (A bit of trivia: this is the most commonly referenced assertion in our
       database.  In second place is ~ eqid , followed by ~ syl2anc ,
       ~ adantr , ~ syl3anc , and ~ ax-mp .  The Metamath program command 'show
       usage' shows the number of references.) $)
    syl $p |- ( ph -> ch ) $=
      ( wi a1i mpd ) ABCDBCFAEGH $.
      $( [27-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mpi.1 $e |- ps $.
    mpi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A nested modus ponens inference.  (The proof was shortened by Stefan
       Allan, 20-Mar-2006.) $)
    mpi $p |- ( ph -> ch ) $=
      ( a1i mpd ) ABCBADFEG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    mp2.1 $e |- ph $.
    mp2.2 $e |- ps $.
    mp2.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A double modus ponens inference.  (The proof was shortened by Wolf
       Lammen, 23-Jul-2013.) $)
    mp2 $p |- ch $=
      ( mpi ax-mp ) ACDABCEFGH $.
      $( [23-Jul-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    3syl.1 $e |- ( ph -> ps ) $.
    3syl.2 $e |- ( ps -> ch ) $.
    3syl.3 $e |- ( ch -> th ) $.
    $( Inference chaining two syllogisms. $)
    3syl $p |- ( ph -> th ) $=
      ( syl ) ACDABCEFHGH $.
      $( [5-Aug-1993] $)
  $}

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  For
     another version of the proof directly from axioms, see ~ id1 .  (The proof
     was shortened by Stefan Allan, 20-Mar-2006.) $)
  id $p |- ( ph -> ph ) $=
    ( wi ax-1 mpd ) AAABZAAACAECD $.
    $( [20-Mar-2006] $)

  $( Principle of identity.  Theorem *2.08 of [WhiteheadRussell] p. 101.  This
     version is proved directly from the axioms for demonstration purposes.
     This proof is a popular example in the literature and is identical, step
     for step, to the proofs of Theorem 1 of [Margaris] p. 51, Example 2.7(a)
     of [Hamilton] p. 31, Lemma 10.3 of [BellMachover] p. 36, and Lemma 1.8 of
     [Mendelson] p. 36.  It is also "Our first proof" in Hirst and Hirst's _A
     Primer for Logic and Proof_ p. 17 (PDF p. 23) at
     ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .  For a shorter
     version of the proof that takes advantage of previously proved theorems,
     see ~ id . $)
  id1 $p |- ( ph -> ph ) $=
    ( wi ax-1 ax-2 ax-mp ) AAABZBZFAACAFABBGFBAFCAFADEE $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  idd $p |- ( ph -> ( ps -> ps ) ) $=
    ( wi id a1i ) BBCABDE $.
    $( [26-Nov-1995] $)

  ${
    a1d.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing an embedded antecedent.  (The proof was revised by
       Stefan Allan, 20-Mar-2006.)

       _Naming convention_:  We often call a theorem a "deduction" and suffix
       its label with "d" whenever the hypotheses and conclusion are each
       prefixed with the same antecedent.  This allows us to use the theorem in
       places where (in traditional textbook formalizations) the standard
       Deduction Theorem would be used; here ` ph ` would be replaced with a
       conjunction ( ~ df-an ) of the hypotheses of the would-be deduction.  By
       contrast, we tend to call the simpler version with no common antecedent
       an "inference" and suffix its label with "i"; compare theorem ~ a1i .
       Finally, a "theorem" would be the form with no hypotheses; in this case
       the "theorem" form would be the original axiom ~ ax-1 .  We usually show
       the theorem form without a suffix on its label (e.g. ~ pm2.43 vs.
       ~ pm2.43i vs. ~ pm2.43d ).  When an inference is converted to a theorem
       by eliminating an "is a set" hypothesis, we sometimes suffix the theorem
       form with "g" (for "more general") as in ~ uniex vs. ~ uniexg . $)
    a1d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wi ax-1 syl ) ABCBEDBCFG $.
      $( [20-Mar-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    a2d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Deduction distributing an embedded antecedent. $)
    a2d $p |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $=
      ( wi ax-2 syl ) ABCDFFBCFBDFFEBCDGH $.
      $( [23-Jun-1994] $)
  $}

  ${
    a1ii.1 $e |- ch $.
    $( Add two antecedents to a wff.  (Contributed by Jeff Hankins,
       4-Aug-2009.)  (The proof was shortened by Wolf Lammen, 23-Jul-2013.) $)
    a1ii $p |- ( ph -> ( ps -> ch ) ) $=
      ( a1i a1d ) ACBCADEF $.
      $( [23-Jul-2013] $) $( [4-Aug-2009] $)
  $}

  ${
    sylcom.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylcom.2 $e |- ( ps -> ( ch -> th ) ) $.
    $( Syllogism inference with commutation of antecedents.  (The proof was
       shortened by O'Cat, 2-Feb-2006.)  (The proof was shortened by Stefan
       Allan, 23-Feb-2006.) $)
    sylcom $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2i syl ) ABCGBDGEBCDFHI $.
      $( [23-Feb-2006] $) $( [29-Aug-2004] $)
  $}

  ${
    syl5com.1 $e |- ( ph -> ps ) $.
    syl5com.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl5com $p |- ( ph -> ( ch -> th ) ) $=
      ( a1d sylcom ) ACBDABCEGFH $.
      $( [24-May-2005] $)
  $}

  ${
    $( Premise for ~ com12 .  See ~ pm2.04 for the theorem form. $)
    com12.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference that swaps (commutes) antecedents in an implication.  (The
       proof was shortened by Wolf Lammen, 4-Aug-2012.) $)
    com12 $p |- ( ps -> ( ph -> ch ) ) $=
      ( id syl5com ) BBACBEDF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl5.1 $e |- ( ph -> ps ) $.
    syl5.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the second antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 25-May-2013.) $)
    syl5 $p |- ( ch -> ( ph -> th ) ) $=
      ( syl5com com12 ) ACDABCDEFGH $.
      $( [25-May-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    syl6.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6.2 $e |- ( ch -> th ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 30-Jul-2012.) $)
    syl6 $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i sylcom ) ABCDECDGBFHI $.
      $( [31-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl56.1 $e |- ( ph -> ps ) $.
    syl56.2 $e |- ( ch -> ( ps -> th ) ) $.
    syl56.3 $e |- ( th -> ta ) $.
    $( Combine ~ syl5 and ~ syl6 . $)
    syl56 $p |- ( ch -> ( ph -> ta ) ) $=
      ( syl6 syl5 ) ABCEFCBDEGHIJ $.
      $( [14-Nov-2013] $)
  $}

  ${
    syl6com.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6com.2 $e |- ( ch -> th ) $.
    $( Syllogism inference with commuted antecedents. $)
    syl6com $p |- ( ps -> ( ph -> th ) ) $=
      ( syl6 com12 ) ABDABCDEFGH $.
      $( [25-May-2005] $)
  $}

  ${
    mpcom.1 $e |- ( ps -> ph ) $.
    mpcom.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus ponens inference with commutation of antecedents. $)
    mpcom $p |- ( ps -> ch ) $=
      ( com12 mpd ) BACDABCEFG $.
      $( [17-Mar-1996] $)
  $}

  ${
    syli.1 $e |- ( ps -> ( ph -> ch ) ) $.
    syli.2 $e |- ( ch -> ( ph -> th ) ) $.
    $( Syllogism inference with common nested antecedent. $)
    syli $p |- ( ps -> ( ph -> th ) ) $=
      ( com12 sylcom ) BACDECADFGH $.
      $( [4-Nov-2004] $)
  $}

  ${
    syl2im.1 $e |- ( ph -> ps ) $.
    syl2im.2 $e |- ( ch -> th ) $.
    syl2im.3 $e |- ( ps -> ( th -> ta ) ) $.
    $( Replace two antecedents.  Implication-only version of ~ syl2an .
       (Contributed by Wolf Lammen, 14-May-2013.) $)
    syl2im $p |- ( ph -> ( ch -> ta ) ) $=
      ( wi syl5 syl ) ABCEIFCDBEGHJK $.
      $( [14-May-2013] $)
  $}

  $( This theorem, called "Assertion," can be thought of as closed form of
     modus ponens ~ ax-mp .  Theorem *2.27 of [WhiteheadRussell] p. 104. $)
  pm2.27 $p |- ( ph -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi id com12 ) ABCZABFDE $.
    $( [5-Aug-1993] $)

  ${
    mpdd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    mpdd.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpdd $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a2d mpd ) ABCGBDGEABCDFHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpid.1 $e |- ( ph -> ch ) $.
    mpid.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction. $)
    mpid $p |- ( ph -> ( ps -> th ) ) $=
      ( a1d mpdd ) ABCDACBEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    mpdi.1 $e |- ( ps -> ch ) $.
    mpdi.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A nested modus ponens deduction.  (The proof was shortened by O'Cat,
       15-Jan-2008.) $)
    mpdi $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1i mpdd ) ABCDBCGAEHFI $.
      $( [15-Jan-2008] $) $( [16-Apr-2005] $)
  $}

  ${
    mpii.1 $e |- ch $.
    mpii.2 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A doubly nested modus ponens inference.  (The proof was shortened by
       Wolf Lammen, 31-Jul-2012.) $)
    mpii $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpdi ) ABCDCBEGFH $.
      $( [31-Jul-2012] $) $( [31-Dec-1993] $)
  $}

  ${
    syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Syllogism deduction.  (The proof was shortened by O'Cat, 19-Feb-2008.)
       (The proof was shortened by Wolf Lammen, 3-Aug-2012.)

       Notice that ~ syld has the same form as ~ syl with ` ph ` added in front
       of each hypothesis and conclusion.  When all theorems referenced in a
       proof are converted in this way, we can replace ` ph ` with a hypothesis
       of the proof, allowing the hypothesis to be eliminated with ~ id and
       become an antecedent.  The Deduction Theorem for propositional calculus,
       e.g.  Theorem 3 in [Margaris] p. 56, tells us that this procedure is
       always possible. $)
    syld $p |- ( ph -> ( ps -> th ) ) $=
      ( wi a1d mpdd ) ABCDEACDGBFHI $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mp2d.1 $e |- ( ph -> ps ) $.
    mp2d.2 $e |- ( ph -> ch ) $.
    mp2d.3 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( A double modus ponens deduction.  (The proof was shortened by Wolf
       Lammen, 23-Jul-2013.) $)
    mp2d $p |- ( ph -> th ) $=
      ( mpid mpd ) ABDEABCDFGHI $.
      $( [23-Jul-2013] $) $( [23-May-2013] $)
  $}

  ${
    a1dd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction introducing a nested embedded antecedent.  (The proof was
       shortened by O'Cat, 15-Jan-2008.) $)
    a1dd $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wi ax-1 syl6 ) ABCDCFECDGH $.
      $( [15-Jan-2008] $) $( [17-Dec-2004] $)
  $}

  ${
    pm2.43i.1 $e |- ( ph -> ( ph -> ps ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43i $p |- ( ph -> ps ) $=
      ( id mpd ) AABADCE $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.43d.1 $e |- ( ph -> ( ps -> ( ps -> ch ) ) ) $.
    $( Deduction absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43d $p |- ( ph -> ( ps -> ch ) ) $=
      ( id mpdi ) ABBCBEDF $.
      $( [29-Nov-2008] $) $( [18-Aug-1993] $)
  $}

  ${
    pm2.43a.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent.  (The proof was shortened by
       O'Cat, 28-Nov-2008.) $)
    pm2.43a $p |- ( ps -> ( ph -> ch ) ) $=
      ( id mpid ) BABCBEDF $.
      $( [29-Nov-2008] $) $( [7-Nov-1995] $)
  $}

  ${
    pm2.43b.1 $e |- ( ps -> ( ph -> ( ps -> ch ) ) ) $.
    $( Inference absorbing redundant antecedent. $)
    pm2.43b $p |- ( ph -> ( ps -> ch ) ) $=
      ( pm2.43a com12 ) BACABCDEF $.
      $( [31-Oct-1995] $)
  $}

  $( Absorption of redundant antecedent.  Also called the "Contraction" or
     "Hilbert" axiom.  Theorem *2.43 of [WhiteheadRussell] p. 106.  (The proof
     was shortened by O'Cat, 15-Aug-2004.) $)
  pm2.43 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi pm2.27 a2i ) AABCBABDE $.
    $( [15-Aug-2004] $) $( [5-Aug-1993] $)

  ${
    imim2d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested antecedents. $)
    imim2d $p |- ( ph -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi a1d a2d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)
  $}

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.05 of
     [WhiteheadRussell] p. 100.  (The proof was shortened by Wolf Lammen,
     6-Sep-2012.) $)
  imim2 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi id imim2d ) ABDZABCGEF $.
    $( [6-Sep-2012] $) $( [5-Aug-1993] $)

  ${
    embantd.1 $e |- ( ph -> ps ) $.
    embantd.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Deduction embedding an antecedent.  (Contributed by Wolf Lammen,
       4-Oct-2013.) $)
    embantd $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi imim2d mpid ) ABCGBDEACDBFHI $.
      $( [15-Jan-2014] $) $( [4-Oct-2013] $)
  $}

  ${
    3syld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3syld.2 $e |- ( ph -> ( ch -> th ) ) $.
    3syld.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( Triple syllogism deduction.  (Contributed by Jeff Hankins,
       4-Aug-2009.) $)
    3syld $p |- ( ph -> ( ps -> ta ) ) $=
      ( syld ) ABDEABCDFGIHI $.
      $( [24-Sep-2010] $) $( [4-Aug-2009] $)
  $}

  ${
    sylsyld.1 $e |- ( ph -> ps ) $.
    sylsyld.2 $e |- ( ph -> ( ch -> th ) ) $.
    sylsyld.3 $e |- ( ps -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e12 without virtual deduction symbols.
       (Contributed by Alan Sare, 20-Apr-2011.) $)
    sylsyld $p |- ( ph -> ( ch -> ta ) ) $=
      ( wi syl syld ) ACDEGABDEIFHJK $.
      $( [20-Apr-2011] $)
  $}

  ${
    imim12i.1 $e |- ( ph -> ps ) $.
    imim12i.2 $e |- ( ch -> th ) $.
    $( Inference joining two implications.  (The proof was shortened by O'Cat,
       29-Oct-2011.) $)
    imim12i $p |- ( ( ps -> ch ) -> ( ph -> th ) ) $=
      ( wi imim2i syl5 ) ABBCGDECDBFHI $.
      $( [29-Oct-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    imim1i.1 $e |- ( ph -> ps ) $.
    $( Inference adding common consequents in an implication, thereby
       interchanging the original antecedent and consequent.  (The proof was
       shortened by Wolf Lammen, 4-Aug-2012.) $)
    imim1i $p |- ( ( ps -> ch ) -> ( ph -> ch ) ) $=
      ( id imim12i ) ABCCDCEF $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    imim3i.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference adding three nested antecedents. $)
    imim3i $p |- ( ( th -> ph ) -> ( ( th -> ps ) -> ( th -> ch ) ) ) $=
      ( wi imim2i a2d ) DAFDBCABCFDEGH $.
      $( [19-Dec-2006] $)
  $}

  ${
    sylc.1 $e |- ( ph -> ps ) $.
    sylc.2 $e |- ( ph -> ch ) $.
    sylc.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( A syllogism inference combined with contraction. $)
    sylc $p |- ( ph -> th ) $=
      ( syl2im pm2.43i ) ADABACDEFGHI $.
      $( [13-Jul-2013] $) $( [4-May-1994] $)
  $}

  ${
    syl3c.1 $e |- ( ph -> ps ) $.
    syl3c.2 $e |- ( ph -> ch ) $.
    syl3c.3 $e |- ( ph -> th ) $.
    syl3c.4 $e |- ( ps -> ( ch -> ( th -> ta ) ) ) $.
    $( A syllogism inference combined with contraction. ~ e111 without virtual
       deductions.  (Contributed by Alan Sare, 7-Jul-2011.) $)
    syl3c $p |- ( ph -> ta ) $=
      ( wi sylc mpd ) ADEHABCDEJFGIKL $.
      $( [7-Jul-2011] $)
  $}

  ${
    syl6mpi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6mpi.2 $e |- th $.
    syl6mpi.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e20 without virtual deductions.  (Contributed by Alan Sare,
       8-Jul-2011.)  (The proof was shortened by Wolf Lammen, 13-Sep-2012.) $)
    syl6mpi $p |- ( ph -> ( ps -> ta ) ) $=
      ( mpi syl6 ) ABCEFCDEGHIJ $.
      $( [13-Sep-2012] $) $( [8-Jul-2011] $)
  $}

  ${
    mpsyl.1 $e |- ph $.
    mpsyl.2 $e |- ( ps -> ch ) $.
    mpsyl.3 $e |- ( ph -> ( ch -> th ) ) $.
    $( Modus ponens combined with a syllogism inference.  (Contributed by Alan
       Sare, 20-Apr-2011.) $)
    mpsyl $p |- ( ps -> th ) $=
      ( a1i sylc ) BACDABEHFGI $.
      $( [20-Apr-2011] $)
  $}

  ${
    syl6c.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6c.2 $e |- ( ph -> ( ps -> th ) ) $.
    syl6c.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Inference combining ~ syl6 with contraction.  (Contributed by Alan Sare,
       2-May-2011.) $)
    syl6c $p |- ( ph -> ( ps -> ta ) ) $=
      ( wi syl6 mpdd ) ABDEGABCDEIFHJK $.
      $( [2-May-2011] $)
  $}

  ${
    syldd.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syldd.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    $( Nested syllogism deduction.  (The proof was shortened by Wolf Lammen,
       11-May-2013.) $)
    syldd $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi imim2 syl6c ) ABDEHCDHCEHGFDECIJ $.
      $( [11-May-2013] $) $( [12-Dec-2004] $)
  $}

  ${
    syl5d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl5d.2 $e |- ( ph -> ( th -> ( ch -> ta ) ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl5d $p |- ( ph -> ( th -> ( ps -> ta ) ) ) $=
      ( wi a1d syldd ) ADBCEABCHDFIGJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl7.1 $e |- ( ph -> ps ) $.
    syl7.2 $e |- ( ch -> ( th -> ( ps -> ta ) ) ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the third antecedent of the first premise.  (The proof was shortened by
       Wolf Lammen, 3-Aug-2012.) $)
    syl7 $p |- ( ch -> ( th -> ( ph -> ta ) ) ) $=
      ( wi a1i syl5d ) CABDEABHCFIGJ $.
      $( [3-Aug-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    syl6d.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl6d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( A nested syllogism deduction.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000 and shortened further by O'Cat, 2-Feb-2006.) $)
    syl6d $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1d syldd ) ABCDEFADEHBGIJ $.
      $( [3-Feb-2006] $) $( [5-Aug-1993] $)
  $}

  ${
    syl8.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8.2 $e |- ( th -> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise.  (The proof was shortened by Wolf
       Lammen, 3-Aug-2012.) $)
    syl8 $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( wi a1i syl6d ) ABCDEFDEHAGIJ $.
      $( [3-Aug-2012] $) $( [1-Aug-1994] $)
  $}

  ${
    syl9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents.  (The proof was
       shortened by Josh Purinton, 29-Dec-2000.) $)
    syl9 $p |- ( ph -> ( th -> ( ps -> ta ) ) ) $=
      ( wi a1i syl5d ) ABCDEFDCEHHAGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( A nested syllogism inference with different antecedents. $)
    syl9r $p |- ( th -> ( ph -> ( ps -> ta ) ) ) $=
      ( wi syl9 com12 ) ADBEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    imim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    imim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Deduction combining antecedents and consequents.  (The proof was
       shortened by O'Cat, 30-Oct-2011.) $)
    imim12d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) $=
      ( wi imim2d syl5d ) ABCCDHEFADECGIJ $.
      $( [3-Nov-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    imim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding nested consequents.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2012.) $)
    imim1d $p |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) $=
      ( idd imim12d ) ABCDDEADFG $.
      $( [12-Sep-2012] $) $( [3-Apr-1994] $)
  $}

  $( A closed form of syllogism (see ~ syl ).  Theorem *2.06 of
     [WhiteheadRussell] p. 100.  (The proof was shortened by Wolf Lammen,
     25-May-2013.) $)
  imim1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi id imim1d ) ABDZABCGEF $.
    $( [25-May-2013] $) $( [5-Aug-1993] $)

  $( Theorem *2.83 of [WhiteheadRussell] p. 108. $)
  pm2.83 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ( ch -> th ) ) ->
                ( ph -> ( ps -> th ) ) ) ) $=
    ( wi imim1 imim3i ) BCECDEBDEABCDFG $.
    $( [3-Jan-2005] $)

  ${
    com3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Commutation of antecedents.  Swap 2nd and 3rd.  (The proof was shortened
       by Wolf Lammen, 4-Aug-2012.) $)
    com23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( wi pm2.27 syl9 ) ABCDFCDECDGH $.
      $( [4-Aug-2012] $) $( [5-Aug-1993] $)

    $( Commutation of antecedents.  Rotate right. $)
    com3r $p |- ( ch -> ( ph -> ( ps -> th ) ) ) $=
      ( wi com23 com12 ) ACBDFABCDEGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 3rd.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com13 $p |- ( ch -> ( ps -> ( ph -> th ) ) ) $=
      ( com3r com23 ) CABDABCDEFG $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       Wolf Lammen, 28-Jul-2012.) $)
    com3l $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( com3r ) CABDABCDEFF $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)
  $}

  $( Swap antecedents.  Theorem *2.04 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 12-Sep-2012.) $)
  pm2.04 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi id com23 ) ABCDDZABCGEF $.
    $( [12-Sep-2012] $) $( [5-Aug-1993] $)

  ${
    com4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Commutation of antecedents.  Swap 3rd and 4th. $)
    com34 $p |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) $=
      ( wi pm2.04 syl6 ) ABCDEGGDCEGGFCDEHI $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate left.  (The proof was shortened by
       O'Cat, 15-Aug-2004.) $)
    com4l $p |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) $=
      ( wi com3l com34 ) BCADEABCDEGFHI $.
      $( [15-Aug-2004] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate twice. $)
    com4t $p |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) $=
      ( com4l ) BCDAEABCDEFGG $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Rotate right. $)
    com4r $p |- ( th -> ( ph -> ( ps -> ( ch -> ta ) ) ) ) $=
      ( com4t com4l ) CDABEABCDEFGH $.
      $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 2nd and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com24 $p |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) $=
      ( wi com4t com13 ) CDABEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)

    $( Commutation of antecedents.  Swap 1st and 4th.  (The proof was shortened
       by Wolf Lammen, 28-Jul-2012.) $)
    com14 $p |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) $=
      ( wi com4l com3r ) BCDAEGABCDEFHI $.
      $( [28-Jul-2012] $) $( [25-Apr-1994] $)
  $}

  ${
    com5.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( Commutation of antecedents.  Swap 4th and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com45 $p |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) $=
      ( wi pm2.04 syl8 ) ABCDEFHHEDFHHGDEFIJ $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 3rd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com35 $p |- ( ph -> ( ps -> ( ta -> ( th -> ( ch -> et ) ) ) ) ) $=
      ( wi com34 com45 ) ABDECFHABDCEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 2nd and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com25 $p |- ( ph -> ( ta -> ( ch -> ( th -> ( ps -> et ) ) ) ) ) $=
      ( wi com24 com45 ) ADCEBFHADCBEFABCDEFHGIJI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left.  (Contributed by Jeff Hankins,
       28-Jun-2009.)  (The proof was shortened by Wolf Lammen, 29-Jul-2012.) $)
    com5l $p |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) $=
      ( wi com4l com45 ) BCDAEFABCDEFHGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Swap 1st and 5th.  (Contributed by Jeff
       Hankins, 28-Jun-2009.)  (The proof was shortened by Wolf Lammen,
       29-Jul-2012.) $)
    com15 $p |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) $=
      ( wi com5l com4r ) BCDEAFHABCDEFGIJ $.
      $( [29-Jul-2012] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate left twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52l $p |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) $=
      ( com5l ) BCDEAFABCDEFGHH $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right twice.  (Contributed by Jeff
       Hankins, 28-Jun-2009.) $)
    com52r $p |- ( th -> ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) ) $=
      ( com52l com5l ) CDEABFABCDEFGHI $.
      $( [18-Apr-2010] $) $( [28-Jun-2009] $)

    $( Commutation of antecedents.  Rotate right.  (Contributed by Wolf Lammen,
       29-Jul-2012.) $)
    com5r $p |- ( ta -> ( ph -> ( ps -> ( ch -> ( th -> et ) ) ) ) ) $=
      ( com52l ) CDEABFABCDEFGHH $.
      $( [29-Jul-2012] $)
  $}

  $( Elimination of a nested antecedent as a kind of reversal of inference
     ~ ja .  (Contributed by Wolf Lammen, 9-May-2013.) $)
  jarr $p |- ( ( ( ph -> ps ) -> ch ) -> ( ps -> ch ) ) $=
    ( wi ax-1 imim1i ) BABDCBAEF $.
    $( [9-May-2013] $)

  ${
    pm2.86i.1 $e |- ( ( ph -> ps ) -> ( ph -> ch ) ) $.
    $( Inference based on ~ pm2.86 .  (The proof was shortened by Wolf Lammen,
       3-Apr-2013.) $)
    pm2.86i $p |- ( ph -> ( ps -> ch ) ) $=
      ( wi ax-1 syl com12 ) BACBABEACEBAFDGH $.
      $( [3-Apr-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.86d.1 $e |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) $.
    $( Deduction based on ~ pm2.86 .  (The proof was shortened by Wolf Lammen,
       3-Apr-2013.) $)
    pm2.86d $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi ax-1 syl5 com23 ) ACBDCBCFABDFCBGEHI $.
      $( [3-Apr-2013] $) $( [29-Jun-1995] $)
  $}

  $( Converse of axiom ~ ax-2 .  Theorem *2.86 of [WhiteheadRussell] p. 108.
     (The proof was shortened by Wolf Lammen, 3-Apr-2013.) $)
  pm2.86 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
              ( ph -> ( ps -> ch ) ) ) $=
    ( wi id pm2.86d ) ABDACDDZABCGEF $.
    $( [3-Apr-2013] $) $( [25-Apr-1994] $)

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  This version of ~ loolin does not use ~ ax-3 , meaning
     that this theorem is intuitionistically valid.  (Contributed by O'Cat,
     12-Aug-2004.) $)
  loolinALT $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi jarr pm2.43d ) ABCBACZCBAABFDE $.
    $( [21-Sep-2013] $) $( [12-Aug-2004] $)

  $( An alternate for the Linearity Axiom of the infinite-valued sentential
     logic (L-infinity) of Lukasiewicz, due to Barbara Wozniakowska, _Reports
     on Mathematical Logic_ 10, 129-137 (1978).  (Contributed by O'Cat,
     8-Aug-2004.) $)
  loowoz $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) ->
                 ( ( ps -> ph ) -> ( ps -> ch ) ) ) $=
    ( wi jarr a2d ) ABDACDZDBACABGEF $.
    $( [20-Sep-2013] $) $( [8-Aug-2004] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical negation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  This section makes our first use of the third axiom of propositonal calculus.

$)

  ${
    con4d.1 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( Deduction derived from axiom ~ ax-3 . $)
    con4d $p |- ( ph -> ( ch -> ps ) ) $=
      ( wn wi ax-3 syl ) ABECEFCBFDBCGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    pm2.21d.1 $e |- ( ph -> -. ps ) $.
    $( A contradiction implies anything.  Deduction from ~ pm2.21 . $)
    pm2.21d $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn a1d con4d ) ACBABECEDFG $.
      $( [10-Feb-1996] $)
  $}

  $( From a wff and its negation, anything is true.  Theorem *2.21 of
     [WhiteheadRussell] p. 104.  Also called the Duns Scotus law.  (The proof
     was shortened by Wolf Lammen, 14-Sep-2012.) $)
  pm2.21 $p |- ( -. ph -> ( ph -> ps ) ) $=
    ( wn id pm2.21d ) ACZABFDE $.
    $( [14-Sep-2012] $) $( [5-Aug-1993] $)

  $( Theorem *2.24 of [WhiteheadRussell] p. 104. $)
  pm2.24 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn pm2.21 com12 ) ACABABDE $.
    $( [3-Jan-2005] $)

  $( Proof by contradiction.  Theorem *2.18 of [WhiteheadRussell] p. 103.  Also
     called the Law of Clavius. $)
  pm2.18 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi pm2.21 a2i con4d pm2.43i ) ABZACZAIAIHAIBZAJDEFG $.
    $( [5-Aug-1993] $)

  ${
    pm2.18d.1 $e |- ( ph -> ( -. ps -> ps ) ) $.
    $( Deduction based on reductio ad absurdum.  (Contributed by FL,
       12-Jul-2009.)  (The proof was shortened by Andrew Salmon,
       7-May-2011.) $)
    pm2.18d $p |- ( ph -> ps ) $=
      ( wn wi pm2.18 syl ) ABDBEBCBFG $.
      $( [7-May-2011] $) $( [12-Jul-2009] $)
  $}

  $( Converse of double negation.  Theorem *2.14 of [WhiteheadRussell] p. 102.
     (The proof was shortened by David Harvey, 5-Sep-1999.  An even shorter
     proof found by Josh Purinton, 29-Dec-2000.) $)
  notnot2 $p |- ( -. -. ph -> ph ) $=
    ( wn pm2.21 pm2.18d ) ABZBAEACD $.
    $( [5-Aug-1993] $)

  ${
    negai.1 $e |- -. -. ph $.
    $( Inference from double negation. $)
    notnotri $p |- ph $=
      ( wn notnot2 ax-mp ) ACCABADE $.
      $( [27-Feb-2008] $)
  $}

  ${
    con2d.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2d $p |- ( ph -> ( ch -> -. ps ) ) $=
      ( wn notnot2 syl5 con4d ) ABEZCIEBACEBFDGH $.
      $( [12-Feb-2013] $) $( [19-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *2.03 of [WhiteheadRussell] p. 100.  (The proof
     was shortened by Wolf Lammen, 12-Feb-2013.) $)
  con2 $p |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) $=
    ( wn wi id con2d ) ABCDZABGEF $.
    $( [12-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    mt2d.1 $e |- ( ph -> ch ) $.
    mt2d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens deduction. $)
    mt2d $p |- ( ph -> -. ps ) $=
      ( wn con2d mpd ) ACBFDABCEGH $.
      $( [4-Jul-1994] $)
  $}

  ${
    mt2i.1 $e |- ch $.
    mt2i.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt2i $p |- ( ph -> -. ps ) $=
      ( a1i mt2d ) ABCCADFEG $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)
  $}

  ${
    nsyl3.1 $e |- ( ph -> -. ps ) $.
    nsyl3.2 $e |- ( ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl3 $p |- ( ch -> -. ph ) $=
      ( wn wi a1i mt2d ) CABEABFGCDHI $.
      $( [13-Jun-2013] $) $( [1-Dec-1995] $)
  $}

  ${
    con2i.a $e |- ( ph -> -. ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.)  (The proof was shortened by Wolf Lammen, 13-Jun-2013.) $)
    con2i $p |- ( ps -> -. ph ) $=
      ( id nsyl3 ) ABBCBDE $.
      $( [13-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    nsyl.1 $e |- ( ph -> -. ps ) $.
    nsyl.2 $e |- ( ch -> ps ) $.
    $( A negated syllogism inference.  (The proof was shortened by Wolf Lammen,
       2-Mar-2013.) $)
    nsyl $p |- ( ph -> -. ch ) $=
      ( nsyl3 con2i ) CAABCDEFG $.
      $( [2-Mar-2013] $) $( [31-Dec-1993] $)
  $}

  $( Converse of double negation.  Theorem *2.12 of [WhiteheadRussell] p. 101.
     (The proof was shortened by Wolf Lammen, 2-Mar-2013.) $)
  notnot1 $p |- ( ph -> -. -. ph ) $=
    ( wn id con2i ) ABZAECD $.
    $( [2-Mar-2013] $) $( [5-Aug-1993] $)

  ${
    negbi.1 $e |- ph $.
    $( Infer double negation. $)
    notnoti $p |- -. -. ph $=
      ( wn notnot1 ax-mp ) AACCBADE $.
      $( [27-Feb-2008] $)
  $}

  ${
    con1d.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con1d $p |- ( ph -> ( -. ch -> ps ) ) $=
      ( wn notnot1 syl6 con4d ) ABCEZABECIEDCFGH $.
      $( [12-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    mt3d.1 $e |- ( ph -> -. ch ) $.
    mt3d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens deduction. $)
    mt3d $p |- ( ph -> ps ) $=
      ( wn con1d mpd ) ACFBDABCEGH $.
      $( [26-Mar-1995] $)
  $}

  ${
    mt3i.1 $e |- -. ch $.
    mt3i.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mt3i $p |- ( ph -> ps ) $=
      ( wn a1i mt3d ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [26-Mar-1995] $)
  $}

  ${
    nsyl2.1 $e |- ( ph -> -. ps ) $.
    nsyl2.2 $e |- ( -. ch -> ps ) $.
    $( A negated syllogism inference. $)
    nsyl2 $p |- ( ph -> ch ) $=
      ( wn wi a1i mt3d ) ACBDCFBGAEHI $.
      $( [19-Jun-2013] $) $( [26-Jun-1994] $)
  $}

  $( Contraposition.  Theorem *2.15 of [WhiteheadRussell] p. 102.  (The proof
     was shortened by Wolf Lammen, 12-Feb-2013.) $)
  con1 $p |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) $=
    ( wn wi id con1d ) ACBDZABGEF $.
    $( [12-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    con1i.a $e |- ( -. ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.)  (The proof was shortened by Wolf Lammen, 19-Jun-2013.) $)
    con1i $p |- ( -. ps -> ph ) $=
      ( wn id nsyl2 ) BDZBAGECF $.
      $( [19-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con4i.1 $e |- ( -. ph -> -. ps ) $.
    $( Inference rule derived from axiom ~ ax-3 .  (The proof was shortened by
       Wolf Lammen, 21-Jun-2013.) $)
    con4i $p |- ( ps -> ph ) $=
      ( wn notnot1 nsyl2 ) BBDABECF $.
      $( [21-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.21i.1 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.21 . $)
    pm2.21i $p |- ( ph -> ps ) $=
      ( wn a1i con4i ) BAADBDCEF $.
      $( [16-Sep-1993] $)
  $}

  ${
    pm2.24ii.1 $e |- ph $.
    pm2.24ii.2 $e |- -. ph $.
    $( A contradiction implies anything.  Inference from ~ pm2.24 . $)
    pm2.24ii $p |- ps $=
      ( pm2.21i ax-mp ) ABCABDEF $.
      $( [27-Feb-2008] $)
  $}

  ${
    con3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( A contraposition deduction. $)
    con3d $p |- ( ph -> ( -. ch -> -. ps ) ) $=
      ( wn notnot2 syl5 con1d ) ABEZCIEBACBFDGH $.
      $( [13-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103.  (The proof
     was shortened by Wolf Lammen, 13-Feb-2013.) $)
  con3 $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi id con3d ) ABCZABFDE $.
    $( [13-Feb-2013] $) $( [5-Aug-1993] $)

  ${
    con3i.a $e |- ( ph -> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       20-Jun-2013.) $)
    con3i $p |- ( -. ps -> -. ph ) $=
      ( wn id nsyl ) BDZBAGECF $.
      $( [20-Jun-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con3rr3.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Rotate through consequent right.  (Contributed by Wolf Lammen,
       3-Nov-2013.) $)
    con3rr3 $p |- ( -. ch -> ( ph -> -. ps ) ) $=
      ( wn con3d com12 ) ACEBEABCDFG $.
      $( [3-Nov-2013] $)
  $}

  ${
    mt4.1 $e |- ph $.
    mt4.2 $e |- ( -. ps -> -. ph ) $.
    $( The rule of modus tollens.  (Contributed by Wolf Lammen,
       12-May-2013.) $)
    mt4 $p |- ps $=
      ( con4i ax-mp ) ABCBADEF $.
      $( [12-May-2013] $)
  $}

  ${
    mt4d.1 $e |- ( ph -> ps ) $.
    mt4d.2 $e |- ( ph -> ( -. ch -> -. ps ) ) $.
    $( Modus tollens deduction. $)
    mt4d $p |- ( ph -> ch ) $=
      ( con4d mpd ) ABCDACBEFG $.
      $( [9-Jun-2006] $)
  $}

  ${
    mt4i.1 $e |- ch $.
    mt4i.2 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( Modus tollens inference.  (Contributed by Wolf Lammen, 12-May-2013.) $)
    mt4i $p |- ( ph -> ps ) $=
      ( a1i mt4d ) ACBCADFEG $.
      $( [10-Sep-2013] $) $( [12-May-2013] $)
  $}

  ${
    nsyld.1 $e |- ( ph -> ( ps -> -. ch ) ) $.
    nsyld.2 $e |- ( ph -> ( ta -> ch ) ) $.
    $( A negated syllogism deduction. $)
    nsyld $p |- ( ph -> ( ps -> -. ta ) ) $=
      ( wn con3d syld ) ABCGDGEADCFHI $.
      $( [9-Apr-2005] $)
  $}

  ${
    nsyli.1 $e |- ( ph -> ( ps -> ch ) ) $.
    nsyli.2 $e |- ( th -> -. ch ) $.
    $( A negated syllogism inference. $)
    nsyli $p |- ( ph -> ( th -> -. ps ) ) $=
      ( wn con3d syl5 ) DCGABGFABCEHI $.
      $( [3-May-1994] $)
  $}

  ${
    nsyl4.1 $e |- ( ph -> ps ) $.
    nsyl4.2 $e |- ( -. ph -> ch ) $.
    $( A negated syllogism inference. $)
    nsyl4 $p |- ( -. ch -> ps ) $=
      ( wn con1i syl ) CFABACEGDH $.
      $( [15-Feb-1996] $)
  $}

  ${
    pm2.24d.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ pm2.24 . $)
    pm2.24d $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wn a1d con1d ) ACBABCEDFG $.
      $( [30-Jan-2006] $)
  $}

  ${
    pm2.24i.1 $e |- ph $.
    $( Inference version of ~ pm2.24 . $)
    pm2.24i $p |- ( -. ph -> ps ) $=
      ( wn a1i con1i ) BAABDCEF $.
      $( [20-Aug-2001] $)
  $}

  $( Theorem *3.2 of [WhiteheadRussell] p. 111, expressed with primitive
     connectives.  (The proof was shortened by Josh Purinton, 29-Dec-2000.) $)
  pm3.2im $p |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) $=
    ( wn wi pm2.27 con2d ) AABCZDBAGEF $.
    $( [5-Aug-1993] $)

  $( Theorem 8 of [Margaris] p. 60.  (The proof was shortened by Josh Purinton,
     29-Dec-2000.) $)
  mth8 $p |- ( ph -> ( -. ps -> -. ( ph -> ps ) ) ) $=
    ( wi pm2.27 con3d ) AABCBABDE $.
    $( [5-Aug-1993] $)

  ${
    jc.1 $e |- ( ph -> ps ) $.
    jc.2 $e |- ( ph -> ch ) $.
    $( Inference joining the consequents of two premises. $)
    jc $p |- ( ph -> -. ( ps -> -. ch ) ) $=
      ( wn wi pm3.2im sylc ) ABCBCFGFDEBCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    impi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( An importation inference.  (The proof was shortened by Wolf Lammen,
       20-Jul-2013.) $)
    impi $p |- ( -. ( ph -> -. ps ) -> ch ) $=
      ( wn wi con3rr3 con1i ) CABEFABCDGH $.
      $( [20-Jul-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    expi.1 $e |- ( -. ( ph -> -. ps ) -> ch ) $.
    $( An exportation inference.  (The proof was shortened by O'Cat,
       28-Nov-2008.) $)
    expi $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn wi pm3.2im syl6 ) ABABEFECABGDH $.
      $( [29-Nov-2008] $) $( [5-Aug-1993] $)
  $}

  $( Simplification.  Similar to Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simprim $p |- ( -. ( ph -> -. ps ) -> ps ) $=
    ( idd impi ) ABBABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  $( Simplification.  Similar to Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 21-Jul-2012.) $)
  simplim $p |- ( -. ( ph -> ps ) -> ph ) $=
    ( wi pm2.21 con1i ) AABCABDE $.
    $( [23-Jul-2012] $) $( [5-Aug-1993] $)

  $( Theorem *2.5 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 9-Oct-2012.) $)
  pm2.5 $p |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) $=
    ( wi wn simplim pm2.24d ) ABCDABABEF $.
    $( [9-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.51 of [WhiteheadRussell] p. 107. $)
  pm2.51 $p |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) $=
    ( wi wn ax-1 con3i a1d ) ABCZDBDABHBAEFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.521 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.521 $p |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) $=
    ( wi wn simplim a1d ) ABCDABABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.52 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 8-Oct-2012.) $)
  pm2.52 $p |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) $=
    ( wi wn pm2.521 con3d ) ABCDBAABEF $.
    $( [8-Oct-2012] $) $( [3-Jan-2005] $)

  $( Exportation theorem expressed with primitive connectives. $)
  expt $p |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wn wi pm3.2im imim1d com12 ) AABDEDZCEBCEABICABFGH $.
    $( [5-Aug-1993] $)

  $( Importation theorem expressed with primitive connectives.  (The proof was
     shortened by Wolf Lammen, 20-Jul-2013.) $)
  impt $p |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) $=
    ( wi wn simprim simplim imim1i mpdi ) ABCDZDABEZDEZBCABFLAJAKGHI $.
    $( [20-Jul-2013] $) $( [25-Apr-1994] $)

  ${
    pm2.61d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d.2 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduction eliminating an antecedent.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2013.) $)
    pm2.61d $p |- ( ph -> ch ) $=
      ( wn con1d syld pm2.18d ) ACACFBCABCEGDHI $.
      $( [12-Sep-2013] $) $( [27-Apr-1994] $)
  $}

  ${
    pm2.61d1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61d1.2 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d1 $p |- ( ph -> ch ) $=
      ( wn wi a1i pm2.61d ) ABCDBFCGAEHI $.
      $( [15-Jul-2005] $)
  $}

  ${
    pm2.61d2.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    pm2.61d2.2 $e |- ( ps -> ch ) $.
    $( Inference eliminating an antecedent. $)
    pm2.61d2 $p |- ( ph -> ch ) $=
      ( wi a1i pm2.61d ) ABCBCFAEGDH $.
      $( [18-Aug-1993] $)
  $}

  ${
    ja.1 $e |- ( -. ph -> ch ) $.
    ja.2 $e |- ( ps -> ch ) $.
    $( Inference joining the antecedents of two premises.  (The proof was
       shortened by O'Cat, 19-Feb-2008.) $)
    ja $p |- ( ( ph -> ps ) -> ch ) $=
      ( wi imim2i pm2.61d1 ) ABFACBCAEGDH $.
      $( [19-Feb-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    jad.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    jad.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( Deduction form of ~ ja .  (Contributed by Scott Fenton, 13-Dec-2010.)
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    jad $p |- ( ph -> ( ( ps -> ch ) -> th ) ) $=
      ( wi wn com12 ja ) BCGADBCADGABHDEIACDFIJI $.
      $( [17-Sep-2011] $) $( [13-Dec-2010] $)
  $}

  $( Elimination of a nested antecedent as a kind of reversal of inference
     ~ ja .  (Contributed by Wolf Lammen, 10-May-2013.) $)
  jarl $p |- ( ( ( ph -> ps ) -> ch ) -> ( -. ph -> ch ) ) $=
    ( wn wi pm2.21 imim1i ) ADABECABFG $.
    $( [10-May-2013] $)

  ${
    pm2.61i.1 $e |- ( ph -> ps ) $.
    pm2.61i.2 $e |- ( -. ph -> ps ) $.
    $( Inference eliminating an antecedent.  (The proof was shortened by Wolf
       Lammen, 12-Sep-2013.) $)
    pm2.61i $p |- ps $=
      ( wi id ja ax-mp ) AAEBAFAABDCGH $.
      $( [12-Sep-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    pm2.61ii.1 $e |- ( -. ph -> ( -. ps -> ch ) ) $.
    pm2.61ii.2 $e |- ( ph -> ch ) $.
    pm2.61ii.3 $e |- ( ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by Josh
       Purinton, 29-Dec-2000.) $)
    pm2.61ii $p |- ch $=
      ( wn pm2.61d2 pm2.61i ) ACEAGBCDFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    pm2.61nii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.61nii.2 $e |- ( -. ph -> ch ) $.
    pm2.61nii.3 $e |- ( -. ps -> ch ) $.
    $( Inference eliminating two antecedents.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.)  (The proof was shortened by Wolf Lammen,
       13-Nov-2012.) $)
    pm2.61nii $p |- ch $=
      ( pm2.61d1 pm2.61i ) ACABCDFGEH $.
      $( [13-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    pm2.61iii.1 $e |- ( -. ph -> ( -. ps -> ( -. ch -> th ) ) ) $.
    pm2.61iii.2 $e |- ( ph -> th ) $.
    pm2.61iii.3 $e |- ( ps -> th ) $.
    pm2.61iii.4 $e |- ( ch -> th ) $.
    $( Inference eliminating three antecedents.  (The proof was shortened by
       Wolf Lammen, 22-Sep-2013.) $)
    pm2.61iii $p |- th $=
      ( wn wi a1d pm2.61ii pm2.61i ) CDHABCIZDJEADNFKBDNGKLM $.
      $( [22-Sep-2013] $) $( [2-Jan-2002] $)
  $}

  $( Reductio ad absurdum.  Theorem *2.01 of [WhiteheadRussell] p. 100.  (The
     proof was shortened by O'Cat, 21-Nov-2008.)  (The proof was shortened by
     Wolf Lammen, 31-Oct-2012.) $)
  pm2.01 $p |- ( ( ph -> -. ph ) -> -. ph ) $=
    ( wn id ja ) AABZEECZFD $.
    $( [31-Oct-2012] $) $( [18-Aug-1993] $)

  ${
    pm2.01d.1 $e |- ( ph -> ( ps -> -. ps ) ) $.
    $( Deduction based on reductio ad absurdum.  (The proof was shortened by
       Wolf Lammen, 5-Mar-2013.) $)
    pm2.01d $p |- ( ph -> -. ps ) $=
      ( wn id pm2.61d1 ) ABBDZCGEF $.
      $( [5-Mar-2013] $) $( [18-Aug-1993] $)
  $}

  $( Theorem *2.6 of [WhiteheadRussell] p. 107. $)
  pm2.6 $p |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wn wi id idd jad ) ACBDZABBHEHBFG $.
    $( [22-Sep-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.61 of [WhiteheadRussell] p. 107.  Useful for eliminating an
     antecedent.  (The proof was shortened by Wolf Lammen, 22-Sep-2013.) $)
  pm2.61 $p |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) $=
    ( wn wi pm2.6 com12 ) ACBDABDBABEF $.
    $( [22-Sep-2013] $) $( [5-Aug-1993] $)

  $( Theorem *2.65 of [WhiteheadRussell] p. 107.  Proof by contradiction.  (The
     proof was shortened by Wolf Lammen, 8-Mar-2013.) $)
  pm2.65 $p |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) $=
    ( wi wn idd con3 jad ) ABCZABDADZHIEABFG $.
    $( [8-Mar-2013] $) $( [5-Aug-1993] $)

  ${
    pm2.65i.1 $e |- ( ph -> ps ) $.
    pm2.65i.2 $e |- ( ph -> -. ps ) $.
    $( Inference rule for proof by contradiction.  (The proof was shortened by
       Wolf Lammen, 11-Sep-2013.) $)
    pm2.65i $p |- -. ph $=
      ( wn con2i con3i pm2.61i ) BAEABDFABCGH $.
      $( [11-Sep-2013] $) $( [18-May-1994] $)
  $}

  ${
    pm2.65d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    pm2.65d.2 $e |- ( ph -> ( ps -> -. ch ) ) $.
    $( Deduction rule for proof by contradiction.  (The proof was shortened by
       Wolf Lammen, 26-May-2013.) $)
    pm2.65d $p |- ( ph -> -. ps ) $=
      ( nsyld pm2.01d ) ABABCBEDFG $.
      $( [26-May-2013] $) $( [26-Jun-1994] $)
  $}

  ${
    mto.1 $e |- -. ps $.
    mto.2 $e |- ( ph -> ps ) $.
    $( The rule of modus tollens.  (The proof was shortened by Wolf Lammen,
       11-Sep-2013.) $)
    mto $p |- -. ph $=
      ( wn a1i pm2.65i ) ABDBEACFG $.
      $( [11-Sep-2013] $) $( [19-Aug-1993] $)
  $}

  ${
    mtod.1 $e |- ( ph -> -. ch ) $.
    mtod.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens deduction.  (The proof was shortened by Wolf Lammen,
       11-Sep-2013.) $)
    mtod $p |- ( ph -> -. ps ) $=
      ( wn a1d pm2.65d ) ABCEACFBDGH $.
      $( [11-Sep-2013] $) $( [3-Apr-1994] $)
  $}

  ${
    mtoi.1 $e |- -. ch $.
    mtoi.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Modus tollens inference.  (The proof was shortened by Wolf Lammen,
       15-Sep-2012.) $)
    mtoi $p |- ( ph -> -. ps ) $=
      ( wn a1i mtod ) ABCCFADGEH $.
      $( [15-Sep-2012] $) $( [5-Jul-1994] $)
  $}

  ${
    mt2.1 $e |- ps $.
    mt2.2 $e |- ( ph -> -. ps ) $.
    $( A rule similar to modus tollens.  (The proof was shortened by Wolf
       Lammen, 10-Sep-2013.) $)
    mt2 $p |- -. ph $=
      ( a1i pm2.65i ) ABBACEDF $.
      $( [10-Sep-2013] $) $( [19-Aug-1993] $)
  $}

  ${
    mt3.1 $e |- -. ps $.
    mt3.2 $e |- ( -. ph -> ps ) $.
    $( A rule similar to modus tollens.  (The proof was shortened by Wolf
       Lammen, 11-Sep-2013.) $)
    mt3 $p |- ph $=
      ( wn mto notnotri ) AAEBCDFG $.
      $( [11-Sep-2013] $) $( [18-May-1994] $)
  $}

  $( Peirce's axiom.  This odd-looking theorem is the "difference" between an
     intuitionistic system of propositional calculus and a classical system and
     is not accepted by intuitionists.  When Peirce's axiom is added to an
     intuitionistic system, the system becomes equivalent to our classical
     system ~ ax-1 through ~ ax-3 .  A curious fact about this theorem is that
     it requires ~ ax-3 for its proof even though the result has no negation
     connectives in it.  (The proof was shortened by Wolf Lammen,
     9-Oct-2012.) $)
  peirce $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi simplim id ja ) ABCAAABDAEF $.
    $( [9-Oct-2012] $) $( [5-Aug-1993] $)

  $( The Linearity Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  For a version not using ~ ax-3 , see ~ loolinALT .
     (Contributed by O'Cat, 12-Aug-2004.)  (The proof was shortened by Wolf
     Lammen, 2-Nov-2012.) $)
  loolin $p |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) $=
    ( wi pm2.521 id ja ) ABCBACZGABDGEF $.
    $( [2-Nov-2012] $) $( [12-Aug-2004] $)

  $( The Inversion Axiom of the infinite-valued sentential logic (L-infinity)
     of Lukasiewicz.  Using ~ dfor2 , we can see that this essentially
     expresses "disjunction commutes."  Theorem *2.69 of [WhiteheadRussell]
     p. 108. $)
  looinv $p |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ph ) ) $=
    ( wi imim1 peirce syl6 ) ABCZBCBACGACAGBADABEF $.
    $( [12-Aug-2004] $)

  $( Theorem used to justify definition of biconditional ~ df-bi .  (The proof
     was shortened by Josh Purinton, 29-Dec-2000.) $)
  bijust $p |- -. ( ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) )
                      -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
               -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) )
                      -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) $=
    ( wi wn id pm2.01 mt2 ) ABCBACDCDZHCZIDCIHEIFG $.
    $( [18-Nov-2013] $) $( [11-May-1999] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical equivalence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  The definition ~ df-bi in this section is our first definition, which
  introduces and defines the biconditional connective ` <-> ` . We define a wff
  of the form ` ( ph <-> ps ) ` as an abbreviation for
  ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ` .

  Unlike most traditional developments, we have chosen not to have a separate
  symbol such as "Df." to mean "is defined as."  Instead, we will later use the
  biconditional connective for this purpose ( ~ df-or is its first use), as it
  allows us to use logic to manipulate definitions directly.  This greatly
  simplifies many proofs since it eliminates the need for a separate mechanism
  for introducing and eliminating definitions.  Of course, we cannot use this
  mechanism to define the biconditional itself, since it hasn't been introduced
  yet.  Instead, we use a more general form of definition, described as
  follows.

  In its most general form, a definition is simply an assertion that introduces
  a new symbol (or a new combination of existing symbols, as in ~ df-3an ) that
  is eliminable and does not strengthen the existing language.  The latter
  requirement means that the set of provable statements not containing the new
  symbol (or new combination) should remain exactly the same after the
  definition is introduced.  Our definition of the biconditional may look
  unusual compared to most definitions, but it strictly satisfies these
  requirements.

  The justification for our definition is that if we mechanically replace
  ` ( ph <-> ps ) ` (the definiendum i.e. the thing being defined) with
  ` -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ` (the definiens i.e. the defining
  expression) in the definition, the definition becomes the previously proved
  theorem ~ bijust . It is impossible to use ~ df-bi to prove any statement
  expressed in the original language that can't be proved from the original
  axioms, because if we simply replace each instance of ~ df-bi in the proof
  with the corresponding ~ bijust instance, we will end up with a proof from
  the original axioms.

  Note that from Metamath's point of view, a definition is just another axiom -
  i.e. an assertion we claim to be true - but from our high level point of
  view, we are are not strengthening the language.  To indicate this fact, we
  prefix definition labels with "df-" instead of "ax-".  (This prefixing is an
  informal convention that means nothing to the Metamath proof verifier; it is
  just for human readability.)

$)

  $( Declare the biconditional connective. $)
  $c <-> $. $( Double arrow (read:  'if and only if' or
               'is logically equivalent to') $)

  $( Extend our wff definition to include the biconditional connective. $)
  wb $a wff ( ph <-> ps ) $.

  $( Define the biconditional (logical 'iff').

     After we define the constant true ` T. ` ( ~ df-tru ) and the constant
     false ` F. ` ( ~ df-fal ), we will be able to prove these truth table
     values: ` ( ( T. <-> T. ) <-> T. ) ` ( ~ trubitru ),
     ` ( ( T. <-> F. ) <-> F. ) ` ( ~ trubifal ), ` ( ( F. <-> T. ) <-> F. ) `
     ( ~ falbitru ), and ` ( ( F. <-> F. ) <-> T. ) ` ( ~ falbifal ).

     See ~ dfbi1 , ~ dfbi2 , and ~ dfbi3 for theorems suggesting typical
     textbook definitions of ` <-> ` , showing that our definition has the
     properties we expect.  Theorem ~ dfbi shows this definition rewritten in
     an abbreviated form after conjunction is introduced, for easier
     understanding.

     Contrast with ` \/ ` ( ~ df-or ), ` -> ` ( ~ wi ), ` -/\ ` ( ~ df-nan ),
     and ` \/_ ` ( ~ df-xor ) .  In some sense ` <-> ` returns true if two
     truth values are equal; ` = ` ( ~ df-cleq ) returns true if two classes
     are equal. $)
  df-bi $a |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) )
        -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $.

  $( Property of the biconditional connective. $)
  bi1 $p |- ( ( ph <-> ps ) -> ( ph -> ps ) ) $=
    ( wb wi wn df-bi simplim ax-mp syl ) ABCZABDZBADEZDEZKJMDZMJDEZDENABFNOGHKL
    GI $.
    $( [11-May-1999] $)

  $( Property of the biconditional connective. $)
  bi3 $p |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) $=
    ( wi wb wn df-bi simprim ax-mp expi ) ABCZBACZABDZLJKECEZCZMLCZECEOABFNOGHI
    $.
    $( [11-May-1999] $)

  ${
    impbii.1 $e |- ( ph -> ps ) $.
    impbii.2 $e |- ( ps -> ph ) $.
    $( Infer an equivalence from an implication and its converse. $)
    impbii $p |- ( ph <-> ps ) $=
      ( wi wb bi3 mp2 ) ABEBAEABFCDABGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    impbidd.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    impbidd.2 $e |- ( ph -> ( ps -> ( th -> ch ) ) ) $.
    $( Deduce an equivalence from two implications.  (Contributed by Rodolfo
       Medina, 12-Oct-2010.) $)
    impbidd $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi wb bi3 syl6c ) ABCDGDCGCDHEFCDIJ $.
      $( [12-Oct-2010] $)
  $}

  ${
    impbid21d.1 $e |- ( ps -> ( ch -> th ) ) $.
    impbid21d.2 $e |- ( ph -> ( th -> ch ) ) $.
    $( Deduce an equivalence from two implications.  (Contributed by Wolf
       Lammen, 12-May-2013.) $)
    impbid21d $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi a1i a1d impbidd ) ABCDBCDGGAEHADCGBFIJ $.
      $( [12-May-2013] $)
  $}

  ${
    impbid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Deduce an equivalence from two implications.  (Dependency on df-an
       removed by Wolf Lammen, 3-Nov-2012.) $)
    impbid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb impbid21d pm2.43i ) ABCFAABCDEGH $.
      $( [3-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  $( Relate the biconditional connective to primitive connectives.  See
     ~ dfbi1gb for an unusual version proved directly from axioms. $)
  dfbi1 $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wb wi wn df-bi simplim ax-mp bi3 impi impbii ) ABCZABDZBADZEDEZLODZOLDEZD
    EPABFPQGHMNLABIJK $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  $( This proof of ~ dfbi1 , discovered by Gregory Bush on 8-Mar-2004, has
     several curious properties.  First, it has only 17 steps directly from the
     axioms and ~ df-bi , compared to over 800 steps were the proof of ~ dfbi1
     expanded into axioms.  Second, step 2 demands only the property of "true";
     any axiom (or theorem) could be used.  It might be thought, therefore,
     that it is in some sense redundant, but in fact no proof is shorter than
     this (measured by number of steps).  Third, it illustrates how
     intermediate steps can "blow up" in size even in short proofs.  Fourth,
     the compressed proof is only 182 bytes (or 17 bytes in D-proof notation),
     but the generated web page is over 200kB with intermediate steps that are
     essentially incomprehensible to humans (other than Gregory Bush).  If
     there were an obfuscated code contest for proofs, this would be a
     contender. $)
  dfbi1gb $p |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) $=
    ( wch wth wb wi wn df-bi ax-1 ax-mp ax-3 ax-2 ) ABEZABFBAFGFGZFNMFGFGZMNEZA
    BHCDCFFZOPFZCDIRGZQGZFZQRFSPOFZSFZFZUASUBISUCTFZFZUDUAFUEUFTGZUCGZFZUEUHUIM
    NHUHUGIJTUCKJUESIJSUCTLJJRQKJJJ $.
    $( [10-Mar-2004] $)

  ${
    biimpi.1 $e |- ( ph <-> ps ) $.
    $( Infer an implication from a logical equivalence. $)
    biimpi $p |- ( ph -> ps ) $=
      ( wb wi bi1 ax-mp ) ABDABECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbi.1 $e |- ( ph <-> ps ) $.
    sylbi.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition. $)
    sylbi $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylib.1 $e |- ( ph -> ps ) $.
    sylib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional. $)
    sylib $p |- ( ph -> ch ) $=
      ( biimpi syl ) ABCDBCEFG $.
      $( [5-Aug-1993] $)
  $}

  $( Property of the biconditional connective.  (The proof was shortened by
     Wolf Lammen, 11-Nov-2012.) $)
  bi2 $p |- ( ( ph <-> ps ) -> ( ps -> ph ) ) $=
    ( wb wi wn dfbi1 simprim sylbi ) ABCABDZBADZEDEJABFIJGH $.
    $( [11-Nov-2012] $) $( [11-May-1999] $)

  $( Commutative law for equivalence.  (Contributed by Wolf Lammen,
     10-Nov-2012.) $)
  bicom1 $p |- ( ( ph <-> ps ) -> ( ps <-> ph ) ) $=
    ( wb bi2 bi1 impbid ) ABCBAABDABEF $.
    $( [10-Nov-2012] $)

  $( Commutative law for equivalence.  Theorem *4.21 of [WhiteheadRussell]
     p. 117. $)
  bicom $p |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) $=
    ( wb bicom1 impbii ) ABCBACABDBADE $.
    $( [11-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    bicomd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Commute two sides of a biconditional in a deduction. $)
    bicomd $p |- ( ph -> ( ch <-> ps ) ) $=
      ( wb bicom sylib ) ABCECBEDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bicomi.1 $e |- ( ph <-> ps ) $.
    $( Inference from commutative law for logical equivalence. $)
    bicomi $p |- ( ps <-> ph ) $=
      ( wb bicom1 ax-mp ) ABDBADCABEF $.
      $( [16-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    impbid1.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impbid1.2 $e |- ( ch -> ps ) $.
    $( Infer an equivalence from two implications. $)
    impbid1 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wi a1i impbid ) ABCDCBFAEGH $.
      $( [6-Mar-2007] $)
  $}

  ${
    impbid2.1 $e |- ( ps -> ch ) $.
    impbid2.2 $e |- ( ph -> ( ch -> ps ) ) $.
    $( Infer an equivalence from two implications.  (The proof was shortened by
       Wolf Lammen, 27-Sep-2013.) $)
    impbid2 $p |- ( ph -> ( ps <-> ch ) ) $=
      ( impbid1 bicomd ) ACBACBEDFG $.
      $( [27-Sep-2013] $) $( [6-Mar-2007] $)
  $}

  ${
    impcon4bid.1 $e |- ( ph -> ( ps -> ch ) ) $.
    impcon4bid.2 $e |- ( ph -> ( -. ps -> -. ch ) ) $.
    $( A variation on ~ impbid with contraposition.  (Contributed by Jeff
       Hankins, 3-Jul-2009.) $)
    impcon4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( con4d impbid ) ABCDABCEFG $.
      $( [3-Jul-2009] $)
  $}

  ${
    biimpri.1 $e |- ( ph <-> ps ) $.
    $( Infer a converse implication from a logical equivalence.  (The proof was
       shortened by Wolf Lammen, 16-Sep-2013.) $)
    biimpri $p |- ( ps -> ph ) $=
      ( bicomi biimpi ) BAABCDE $.
      $( [16-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    biimpd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce an implication from a logical equivalence. $)
    biimpd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb wi bi1 syl ) ABCEBCFDBCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbi.min $e |- ph $.
    mpbi.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbi $p |- ps $=
      ( biimpi ax-mp ) ABCABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbir.min $e |- ps $.
    mpbir.maj $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus ponens. $)
    mpbir $p |- ph $=
      ( biimpri ax-mp ) BACABDEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbid.min $e |- ( ph -> ps ) $.
    mpbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbid $p |- ( ph -> ch ) $=
      ( biimpd mpd ) ABCDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbii.min $e |- ps $.
    mpbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  (The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbii $p |- ( ph -> ch ) $=
      ( a1i mpbid ) ABCBADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    sylibr.1 $e |- ( ph -> ps ) $.
    sylibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting a consequent with a definition. $)
    sylibr $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylbir.1 $e |- ( ps <-> ph ) $.
    sylbir.2 $e |- ( ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication. $)
    sylbir $p |- ( ph -> ch ) $=
      ( biimpri syl ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylibd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( A syllogism deduction. $)
    sylibd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDEACDFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylbid.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbid $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syld ) ABCDABCEGFH $.
      $( [3-Aug-1994] $)
  $}

  ${
    mpbidi.min $e |- ( th -> ( ph -> ps ) ) $.
    mpbidi.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbidi $p |- ( th -> ( ph -> ch ) ) $=
      ( biimpd sylcom ) DABCEABCFGH $.
      $( [9-Aug-1994] $)
  $}

  ${
    syl5bi.1 $e |- ( ph <-> ps ) $.
    syl5bi.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded antecedent with a
       definition. $)
    syl5bi $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpi syl5 ) ABCDABEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bir.1 $e |- ( ps <-> ph ) $.
    syl5bir.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl5bir $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpri syl5 ) ABCDBAEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5ib.1 $e |- ( ph -> ps ) $.
    syl5ib.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A mixed syllogism inference. $)
    syl5ib $p |- ( ch -> ( ph -> th ) ) $=
      ( biimpd syl5 ) ABCDECBDFGH $.
      $( [5-Aug-1993] $)

    $( A mixed syllogism inference. $)
    syl5ibcom $p |- ( ph -> ( ch -> th ) ) $=
      ( syl5ib com12 ) CADABCDEFGH $.
      $( [19-Jun-2007] $)
  $}

  ${
    syl5ibr.1 $e |- ( ph -> th ) $.
    syl5ibr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A mixed syllogism inference. $)
    syl5ibr $p |- ( ch -> ( ph -> ps ) ) $=
      ( bicomd syl5ib ) ADCBECBDFGH $.
      $( [22-Sep-2013] $) $( [3-Apr-1994] $)

    $( A mixed syllogism inference. $)
    syl5ibrcom $p |- ( ph -> ( ch -> ps ) ) $=
      ( syl5ibr com12 ) CABABCDEFGH $.
      $( [20-Jun-2007] $)
  $}

  ${
    biimprd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce a converse implication from a logical equivalence.  (The proof
       was shortened by Wolf Lammen, 22-Sep-2013.) $)
    biimprd $p |- ( ph -> ( ch -> ps ) ) $=
      ( id syl5ibr ) CBACCEDF $.
      $( [22-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    biimpcd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduce a commuted implication from a logical equivalence.  (The proof
       was shortened by Wolf Lammen, 22-Sep-2013.) $)
    biimpcd $p |- ( ps -> ( ph -> ch ) ) $=
      ( id syl5ibcom ) BBACBEDF $.
      $( [22-Sep-2013] $) $( [3-May-1994] $)

    $( Deduce a converse commuted implication from a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    biimprcd $p |- ( ch -> ( ph -> ps ) ) $=
      ( id syl5ibrcom ) CBACCEDF $.
      $( [20-Dec-2013] $) $( [3-May-1994] $)
  $}

  ${
    syl6ib.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ib.2 $e |- ( ch <-> th ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional. $)
    syl6ib $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpi syl6 ) ABCDECDFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6ibr.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl6ibr.2 $e |- ( th <-> ch ) $.
    $( A mixed syllogism inference from a nested implication and a
       biconditional.  Useful for substituting an embedded consequent with a
       definition. $)
    syl6ibr $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpri syl6 ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}


  ${
    syl6bi.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bi.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bi $p |- ( ph -> ( ps -> th ) ) $=
      ( biimpd syl6 ) ABCDABCEGFH $.
      $( [2-Jan-1994] $)
  $}

  ${
    syl6bir.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    syl6bir.2 $e |- ( ch -> th ) $.
    $( A mixed syllogism inference. $)
    syl6bir $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syl6 ) ABCDACBEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    syl7bi.1 $e |- ( ph <-> ps ) $.
    syl7bi.2 $e |- ( ch -> ( th -> ( ps -> ta ) ) ) $.
    $( A mixed syllogism inference from a doubly nested implication and a
       biconditional. $)
    syl7bi $p |- ( ch -> ( th -> ( ph -> ta ) ) ) $=
      ( biimpi syl7 ) ABCDEABFHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl8ib.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    syl8ib.2 $e |- ( th <-> ta ) $.
    $( A syllogism rule of inference.  The second premise is used to replace
       the consequent of the first premise. $)
    syl8ib $p |- ( ph -> ( ps -> ( ch -> ta ) ) ) $=
      ( biimpi syl8 ) ABCDEFDEGHI $.
      $( [1-Aug-1994] $)
  $}

  ${
    mpbird.min $e |- ( ph -> ch ) $.
    mpbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, related to modus ponens. $)
    mpbird $p |- ( ph -> ps ) $=
      ( biimprd mpd ) ACBDABCEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    mpbiri.min $e |- ch $.
    mpbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a nested biconditional, related to modus ponens.  (The
       proof was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mpbiri $p |- ( ph -> ps ) $=
      ( a1i mpbird ) ABCCADFEG $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    sylibrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylibrd.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( A syllogism deduction. $)
    sylibrd $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDEADCFGH $.
      $( [3-Aug-1994] $)
  $}

  ${
    sylbird.1 $e |- ( ph -> ( ch <-> ps ) ) $.
    sylbird.2 $e |- ( ph -> ( ch -> th ) ) $.
    $( A syllogism deduction. $)
    sylbird $p |- ( ph -> ( ps -> th ) ) $=
      ( biimprd syld ) ABCDACBEGFH $.
      $( [3-Aug-1994] $)
  $}

  $( Principle of identity for logical equivalence.  Theorem *4.2 of
     [WhiteheadRussell] p. 117. $)
  biid $p |- ( ph <-> ph ) $=
    ( id impbii ) AAABZDC $.
    $( [5-Aug-1993] $)

  $( Principle of identity with antecedent. $)
  biidd $p |- ( ph -> ( ps <-> ps ) ) $=
    ( wb biid a1i ) BBCABDE $.
    $( [25-Nov-1995] $)

  $( Two propositions are equivalent if they are both true.  Closed form of
     ~ 2th .  Equivalent to a ~ bi1 -like version of the xor-connective.  This
     theorem stays true, no matter how you permute its operands.  This is
     evident from its sharper version
     ` ( ph <-> ( ps <-> ( ph <-> ps ) ) ) ` .  (Contributed by Wolf Lammen,
     12-May-2013.) $)
  pm5.1im $p |- ( ph -> ( ps -> ( ph <-> ps ) ) ) $=
    ( ax-1 impbid21d ) ABABBACABCD $.
    $( [12-May-2013] $)

  ${
    2th.1 $e |- ph $.
    2th.2 $e |- ps $.
    $( Two truths are equivalent. $)
    2th $p |- ( ph <-> ps ) $=
      ( a1i impbii ) ABBADEABCEF $.
      $( [18-Aug-1993] $)
  $}

  ${
    2thd.1 $e |- ( ph -> ps ) $.
    2thd.2 $e |- ( ph -> ch ) $.
    $( Two truths are equivalent (deduction rule). $)
    2thd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb pm5.1im sylc ) ABCBCFDEBCGH $.
      $( [29-Jan-2013] $) $( [3-Jun-2012] $)
  $}

  ${
    ibi.1 $e |- ( ph -> ( ph <-> ps ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibi $p |- ( ph -> ps ) $=
      ( biimpd pm2.43i ) ABAABCDE $.
      $( [17-Oct-2003] $)
  $}

  ${
    ibir.1 $e |- ( ph -> ( ps <-> ph ) ) $.
    $( Inference that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibir $p |- ( ph -> ps ) $=
      ( bicomd ibi ) ABABACDE $.
      $( [22-Jul-2004] $)
  $}

  ${
    ibd.1 $e |- ( ph -> ( ps -> ( ps <-> ch ) ) ) $.
    $( Deduction that converts a biconditional implied by one of its arguments,
       into an implication. $)
    ibd $p |- ( ph -> ( ps -> ch ) ) $=
      ( wb bi1 syli ) BABCECDBCFG $.
      $( [26-Jun-2004] $)
  $}

  $( Distribution of implication over biconditional.  Theorem *5.74 of
     [WhiteheadRussell] p. 126.  (The proof was shortened by Wolf Lammen,
     11-Apr-2013.) $)
  pm5.74 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph -> ps ) <-> ( ph -> ch ) ) ) $=
    ( wb wi bi1 imim3i bi2 impbid pm2.86d impbidd impbii ) ABCDZEZABEZACEZDZNOP
    MBCABCFGMCBABCHGIQABCQABCOPFJQACBOPHJKL $.
    $( [11-Apr-2013] $) $( [1-Aug-1994] $)

  ${
    pm5.74i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.74i $p |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $=
      ( wb wi pm5.74 mpbi ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74ri.1 $e |- ( ( ph -> ps ) <-> ( ph -> ch ) ) $.
    $( Distribution of implication over biconditional (reverse inference
       rule). $)
    pm5.74ri $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wb wi pm5.74 mpbir ) ABCEFABFACFEDABCGH $.
      $( [1-Aug-1994] $)
  $}

  ${
    pm5.74d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74d $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb wi pm5.74 sylib ) ABCDFGBCGBDGFEBCDHI $.
      $( [21-Mar-1996] $)
  $}

  ${
    pm5.74rd.1 $e |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74rd $p |- ( ph -> ( ps -> ( ch <-> th ) ) ) $=
      ( wi wb pm5.74 sylibr ) ABCFBDFGBCDGFEBCDHI $.
      $( [19-Mar-1997] $)
  $}

  ${
    bitri.1 $e |- ( ph <-> ps ) $.
    bitri.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence.  (The proof
       was shortened by Wolf Lammen, 13-Oct-2012.) $)
    bitri $p |- ( ph <-> ch ) $=
      ( biimpi sylib biimpri sylibr impbii ) ACABCABDFEGCBABCEHDIJ $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    bitr2i.1 $e |- ( ph <-> ps ) $.
    bitr2i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr2i $p |- ( ch <-> ph ) $=
      ( bitri bicomi ) ACABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr3i.1 $e |- ( ps <-> ph ) $.
    bitr3i.2 $e |- ( ps <-> ch ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr3i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCBADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4i.1 $e |- ( ph <-> ps ) $.
    bitr4i.2 $e |- ( ch <-> ps ) $.
    $( An inference from transitive law for logical equivalence. $)
    bitr4i $p |- ( ph <-> ch ) $=
      ( bicomi bitri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitri .  (The proof was shortened by Wolf Lammen,
       14-Apr-2013.) $)
    bitrd $p |- ( ph -> ( ps <-> th ) ) $=
      ( wi pm5.74i bitri pm5.74ri ) ABDABGACGADGABCEHACDFHIJ $.
      $( [14-Apr-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr2d.2 $e |- ( ph -> ( ch <-> th ) ) $.
    $( Deduction form of ~ bitr2i . $)
    bitr2d $p |- ( ph -> ( th <-> ps ) ) $=
      ( bitrd bicomd ) ABDABCDEFGH $.
      $( [9-Jun-2004] $)
  $}

  ${
    bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    $( Deduction form of ~ bitr3i . $)
    bitr3d $p |- ( ph -> ( ch <-> th ) ) $=
      ( bicomd bitrd ) ACBDABCEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bitr4d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    $( Deduction form of ~ bitr4i . $)
    bitr4d $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomd bitrd ) ABCDEADCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bb.1 $e |- ( ph <-> ps ) $.
    syl5bb.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bb $p |- ( ch -> ( ph <-> th ) ) $=
      ( wb a1i bitrd ) CABDABGCEHFI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbb.1 $e |- ( ph <-> ps ) $.
    syl5rbb.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbb $p |- ( ch -> ( th <-> ph ) ) $=
      ( syl5bb bicomd ) CADABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5bbr.1 $e |- ( ps <-> ph ) $.
    syl5bbr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5bbr $p |- ( ch -> ( ph <-> th ) ) $=
      ( bicomi syl5bb ) ABCDBAEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5rbbr.1 $e |- ( ps <-> ph ) $.
    syl5rbbr.2 $e |- ( ch -> ( ps <-> th ) ) $.
    $( A syllogism inference from two biconditionals. $)
    syl5rbbr $p |- ( ch -> ( th <-> ph ) ) $=
      ( bicomi syl5rbb ) ABCDBAEGFH $.
      $( [25-Nov-1994] $)
  $}

  ${
    syl6bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bb $p |- ( ph -> ( ps <-> th ) ) $=
      ( wb a1i bitrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbb.2 $e |- ( ch <-> th ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbb $p |- ( ph -> ( th <-> ps ) ) $=
      ( syl6bb bicomd ) ABDABCDEFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6bbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6bbr $p |- ( ph -> ( ps <-> th ) ) $=
      ( bicomi syl6bb ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6rbbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl6rbbr.2 $e |- ( th <-> ch ) $.
    $( A syllogism inference from two biconditionals. $)
    syl6rbbr $p |- ( ph -> ( th <-> ps ) ) $=
      ( bicomi syl6rbb ) ABCDEDCFGH $.
      $( [25-Nov-1994] $)
  $}

  ${
    3imtr3.1 $e |- ( ph -> ps ) $.
    3imtr3.2 $e |- ( ph <-> ch ) $.
    3imtr3.3 $e |- ( ps <-> th ) $.
    $( A mixed syllogism inference, useful for removing a definition from both
       sides of an implication. $)
    3imtr3i $p |- ( ch -> th ) $=
      ( sylbir sylib ) CBDCABFEHGI $.
      $( [10-Aug-1994] $)
  $}

  ${
    3imtr4.1 $e |- ( ph -> ps ) $.
    3imtr4.2 $e |- ( ch <-> ph ) $.
    3imtr4.3 $e |- ( th <-> ps ) $.
    $( A mixed syllogism inference, useful for applying a definition to both
       sides of an implication. $)
    3imtr4i $p |- ( ch -> th ) $=
      ( sylbi sylibr ) CBDCABFEHGI $.
      $( [5-Aug-1993] $)
  $}

  ${
    3imtr3d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3imtr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr3d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibd sylbird ) ADBEGABCEFHIJ $.
      $( [8-Apr-1996] $)
  $}

  ${
    3imtr4d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3imtr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting conditional
       definitions in a formula. $)
    3imtr4d $p |- ( ph -> ( th -> ta ) ) $=
      ( sylibrd sylbid ) ADBEGABCEFHIJ $.
      $( [26-Oct-1995] $)
  $}

  ${
    3imtr3g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr3g.2 $e |- ( ps <-> th ) $.
    3imtr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3imtr3i .  Useful for converting definitions
       in a formula.  (The proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    3imtr3g $p |- ( ph -> ( th -> ta ) ) $=
      ( syl5bir syl6ib ) ADCEDBACGFIHJ $.
      $( [20-Dec-2013] $) $( [20-May-1996] $)
  $}

  ${
    3imtr4g.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3imtr4g.2 $e |- ( th <-> ps ) $.
    3imtr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3imtr4i .  Useful for converting definitions
       in a formula.  (The proof was shortened by Wolf Lammen, 20-Dec-2013.) $)
    3imtr4g $p |- ( ph -> ( th -> ta ) ) $=
      ( syl5bi syl6ibr ) ADCEDBACGFIHJ $.
      $( [20-Dec-2013] $) $( [20-May-1996] $)
  $}

  ${
    3bitri.1 $e |- ( ph <-> ps ) $.
    3bitri.2 $e |- ( ps <-> ch ) $.
    3bitri.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitri $p |- ( ph <-> th ) $=
      ( bitri ) ABDEBCDFGHH $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitrri $p |- ( th <-> ph ) $=
      ( bitr2i bitr3i ) DCAGABCEFHI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2i.1 $e |- ( ph <-> ps ) $.
    3bitr2i.2 $e |- ( ch <-> ps ) $.
    3bitr2i.3 $e |- ( ch <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2i $p |- ( ph <-> th ) $=
      ( bitr4i bitri ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr2ri $p |- ( th <-> ph ) $=
      ( bitr4i bitr2i ) ACDABCEFHGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3i.1 $e |- ( ph <-> ps ) $.
    3bitr3i.2 $e |- ( ph <-> ch ) $.
    3bitr3i.3 $e |- ( ps <-> th ) $.
    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3i $p |- ( ch <-> th ) $=
      ( bitr3i bitri ) CBDCABFEHGI $.
      $( [19-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr3ri $p |- ( th <-> ch ) $=
      ( bitr3i ) DBCGBACEFHH $.
      $( [5-Aug-1993] $)
  $}

  ${
    3bitr4i.1 $e |- ( ph <-> ps ) $.
    3bitr4i.2 $e |- ( ch <-> ph ) $.
    3bitr4i.3 $e |- ( th <-> ps ) $.
    $( A chained inference from transitive law for logical equivalence.  This
       inference is frequently used to apply a definition to both sides of a
       logical equivalence. $)
    3bitr4i $p |- ( ch <-> th ) $=
      ( bitr4i bitri ) CADFABDEGHI $.
      $( [5-Aug-1993] $)

    $( A chained inference from transitive law for logical equivalence. $)
    3bitr4ri $p |- ( th <-> ch ) $=
      ( bitr4i bitr2i ) CADFABDEGHI $.
      $( [2-Sep-1995] $)
  $}

  ${
    3bitrd.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitrd.2 $e |- ( ph -> ( ch <-> th ) ) $.
    3bitrd.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitrd $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitrd ) ABDEABCDFGIHI $.
      $( [13-Aug-1999] $)

    $( Deduction from transitivity of biconditional. $)
    3bitrrd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr2d bitr3d ) ADEBHABCDFGIJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr2d.2 $e |- ( ph -> ( th <-> ch ) ) $.
    3bitr2d.3 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction from transitivity of biconditional. $)
    3bitr2d $p |- ( ph -> ( ps <-> ta ) ) $=
      ( bitr4d bitrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr2rd $p |- ( ph -> ( ta <-> ps ) ) $=
      ( bitr4d bitr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3d.2 $e |- ( ph -> ( ps <-> th ) ) $.
    3bitr3d.3 $e |- ( ph -> ( ch <-> ta ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr3d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr3d bitrd ) ADCEABDCGFIHJ $.
      $( [24-Apr-1996] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr3rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr3d ) ACEDHABCDFGII $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr4d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4d.2 $e |- ( ph -> ( th <-> ps ) ) $.
    3bitr4d.3 $e |- ( ph -> ( ta <-> ch ) ) $.
    $( Deduction from transitivity of biconditional.  Useful for converting
       conditional definitions in a formula. $)
    3bitr4d $p |- ( ph -> ( th <-> ta ) ) $=
      ( bitr4d bitrd ) ADBEGABCEFHIJ $.
      $( [18-Oct-1995] $)

    $( Deduction from transitivity of biconditional. $)
    3bitr4rd $p |- ( ph -> ( ta <-> th ) ) $=
      ( bitr4d ) AEBDAECBHFIGI $.
      $( [4-Aug-2006] $)
  $}

  ${
    3bitr3g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr3g.2 $e |- ( ps <-> th ) $.
    3bitr3g.3 $e |- ( ch <-> ta ) $.
    $( More general version of ~ 3bitr3i .  Useful for converting definitions
       in a formula. $)
    3bitr3g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bbr syl6bb ) ADCEDBACGFIHJ $.
      $( [4-Jun-1995] $)
  $}

  ${
    3bitr4g.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3bitr4g.2 $e |- ( th <-> ps ) $.
    3bitr4g.3 $e |- ( ta <-> ch ) $.
    $( More general version of ~ 3bitr4i .  Useful for converting definitions
       in a formula. $)
    3bitr4g $p |- ( ph -> ( th <-> ta ) ) $=
      ( syl5bb syl6bbr ) ADCEDBACGFIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    bi3ant.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Construct a bi-conditional in antecedent position.  (Contributed by Wolf
       Lammen, 14-May-2013.) $)
    bi3ant $p |- ( ( ( th -> ta ) -> ph ) -> ( ( ( ta -> th ) -> ps ) ->
                                                ( ( th <-> ta ) -> ch ) ) ) $=
      ( wi wb bi1 imim1i bi2 imim3i syl2im ) DEGZAGDEHZAGEDGZBGOBGOCGONADEIJOPB
      DEKJABCOFLM $.
      $( [14-May-2013] $)
  $}

  $( Express symmetries of theorems in terms of biconditionals.  (Contributed
     by Wolf Lammen, 14-May-2013.) $)
  bisym $p |- ( ( ( ph -> ps ) -> ( ch -> th ) ) -> ( ( ( ps -> ph )
      -> ( th -> ch ) ) -> ( ( ph <-> ps ) -> ( ch <-> th ) ) ) ) $=
    ( wi wb bi3 bi3ant ) CDEDCECDFABCDGH $.
    $( [14-May-2013] $)

  $( Double negation.  Theorem *4.13 of [WhiteheadRussell] p. 117. $)
  notnot $p |- ( ph <-> -. -. ph ) $=
    ( wn notnot1 notnot2 impbii ) AABBACADE $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Theorem *4.1 of [WhiteheadRussell] p. 116. $)
  con34b $p |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) $=
    ( wi wn con3 ax-3 impbii ) ABCBDADCABEBAFG $.
    $( [5-Aug-1993] $)

  ${
    con4bid.1 $e |- ( ph -> ( -. ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con4bid $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wn biimprd con4d biimpd impcon4bid ) ABCACBABEZCEZDFGAJKDHI $.
      $( [17-Sep-2013] $) $( [21-May-1994] $)
  $}

  ${
    notbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction negating both sides of a logical equivalence. $)
    notbid $p |- ( ph -> ( -. ps <-> -. ch ) ) $=
      ( wn notnot 3bitr3g con4bid ) ABEZCEZABCIEJEDBFCFGH $.
      $( [17-Sep-2013] $) $( [21-May-1994] $)
  $}

  $( Contraposition.  Theorem *4.11 of [WhiteheadRussell] p. 117.  (The proof
     was shortened by Wolf Lammen, 12-Jun-2013.) $)
  notbi $p |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) $=
    ( wb wn id notbid con4bid impbii ) ABCZADBDCZIABIEFJABJEGH $.
    $( [12-Jun-2013] $) $( [21-May-1994] $)

  ${
    notbii.1 $e |- ( ph <-> ps ) $.
    $( Negate both sides of a logical equivalence.  (The proof was shortened by
       Wolf Lammen, 19-May-2013.) $)
    notbii $p |- ( -. ph <-> -. ps ) $=
      ( wb wn notbi mpbi ) ABDAEBEDCABFG $.
      $( [19-May-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    con4bii.1 $e |- ( -. ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con4bii $p |- ( ph <-> ps ) $=
      ( wb wn notbi mpbir ) ABDAEBEDCABFG $.
      $( [21-May-1994] $)
  $}

  ${
    mtbi.1 $e |- -. ph $.
    mtbi.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 25-Oct-2012.) $)
    mtbi $p |- -. ps $=
      ( biimpri mto ) BACABDEF $.
      $( [25-Oct-2012] $) $( [15-Nov-1994] $)
  $}

  ${
    mtbir.1 $e |- -. ps $.
    mtbir.2 $e |- ( ph <-> ps ) $.
    $( An inference from a biconditional, related to modus tollens.  (The proof
       was shortened by Wolf Lammen, 14-Oct-2012.) $)
    mtbir $p |- -. ph $=
      ( bicomi mtbi ) BACABDEF $.
      $( [13-Oct-2012] $) $( [15-Nov-1994] $)
  $}

  ${
    mtbid.min $e |- ( ph -> -. ps ) $.
    mtbid.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbid $p |- ( ph -> -. ch ) $=
      ( biimprd mtod ) ACBDABCEFG $.
      $( [26-Nov-1995] $)
  $}

  ${
    mtbird.min $e |- ( ph -> -. ch ) $.
    mtbird.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( A deduction from a biconditional, similar to modus tollens. $)
    mtbird $p |- ( ph -> -. ps ) $=
      ( biimpd mtod ) ABCDABCEFG $.
      $( [10-May-1994] $)
  $}

  ${
    mtbii.min $e |- -. ps $.
    mtbii.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbii $p |- ( ph -> -. ch ) $=
      ( biimprd mtoi ) ACBDABCEFG $.
      $( [27-Nov-1995] $)
  $}

  ${
    mtbiri.min $e |- -. ch $.
    mtbiri.maj $e |- ( ph -> ( ps <-> ch ) ) $.
    $( An inference from a biconditional, similar to modus tollens. $)
    mtbiri $p |- ( ph -> -. ps ) $=
      ( biimpd mtoi ) ABCDABCEFG $.
      $( [24-Aug-1995] $)
  $}

  ${
    sylnib.1 $e |- ( ph -> -. ps ) $.
    sylnib.2 $e |- ( ps <-> ch ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       (Contributed by Wolf Lammen, 16-Dec-2013.) $)
    sylnib $p |- ( ph -> -. ch ) $=
      ( wb a1i mtbid ) ABCDBCFAEGH $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnibr.1 $e |- ( ph -> -. ps ) $.
    sylnibr.2 $e |- ( ch <-> ps ) $.
    $( A mixed syllogism inference from an implication and a biconditional.
       Useful for substituting an consequent with a definition.  (Contributed
       by Wolf Lammen, 16-Dec-2013.) $)
    sylnibr $p |- ( ph -> -. ch ) $=
      ( bicomi sylnib ) ABCDCBEFG $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnbi.1 $e |- ( ph <-> ps ) $.
    sylnbi.2 $e |- ( -. ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       Useful for substituting an antecedent with a definition.  (Contributed
       by Wolf Lammen, 16-Dec-2013.) $)
    sylnbi $p |- ( -. ph -> ch ) $=
      ( wn notbii sylbi ) AFBFCABDGEH $.
      $( [16-Dec-2013] $)
  $}

  ${
    sylnbir.1 $e |- ( ps <-> ph ) $.
    sylnbir.2 $e |- ( -. ps -> ch ) $.
    $( A mixed syllogism inference from a biconditional and an implication.
       (Contributed by Wolf Lammen, 16-Dec-2013.) $)
    sylnbir $p |- ( -. ph -> ch ) $=
      ( bicomi sylnbi ) ABCBADFEG $.
      $( [16-Dec-2013] $)
  $}

  ${
    xchnxbi.1 $e |- ( -. ph <-> ps ) $.
    xchnxbi.2 $e |- ( ph <-> ch ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchnxbi $p |- ( -. ch <-> ps ) $=
      ( wn notbii bitr3i ) CFAFBACEGDH $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchnxbir.1 $e |- ( -. ph <-> ps ) $.
    xchnxbir.2 $e |- ( ch <-> ph ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchnxbir $p |- ( -. ch <-> ps ) $=
      ( bicomi xchnxbi ) ABCDCAEFG $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchbinx.1 $e |- ( ph <-> -. ps ) $.
    xchbinx.2 $e |- ( ps <-> ch ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchbinx $p |- ( ph <-> -. ch ) $=
      ( wn notbii bitri ) ABFCFDBCEGH $.
      $( [27-Sep-2014] $)
  $}

  ${
    xchbinxr.1 $e |- ( ph <-> -. ps ) $.
    xchbinxr.2 $e |- ( ch <-> ps ) $.
    $( Replacement of a subexpression by an equivalent one.  (Contributed by
       Wolf Lammen, 27-Sep-2014.) $)
    xchbinxr $p |- ( ph <-> -. ch ) $=
      ( bicomi xchbinx ) ABCDCBEFG $.
      $( [27-Sep-2014] $)
  $}

  $( The next three rules are useful for building up wff's around a
     definition, in order to make use of the definition. $)

  ${
    bi.a $e |- ( ph <-> ps ) $.
    $( Introduce an antecedent to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 6-Feb-2013.) $)
    imbi2i $p |- ( ( ch -> ph ) <-> ( ch -> ps ) ) $=
      ( wb a1i pm5.74i ) CABABECDFG $.
      $( [6-Feb-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    bibi.a $e |- ( ph <-> ps ) $.
    $( Inference adding a biconditional to the left in an equivalence.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.)  (The proof was
       shortened by Wolf Lammen, 16-May-2013.) $)
    bibi2i $p |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) $=
      ( wb id syl6bb syl6bbr impbii ) CAEZCBEZJCABJFDGKCBAKFDHI $.
      $( [16-May-2013] $) $( [5-Aug-1993] $)

    $( Inference adding a biconditional to the right in an equivalence. $)
    bibi1i $p |- ( ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb bicom bibi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)

    ${
      bibi12.2 $e |- ( ch <-> th ) $.
      $( The equivalence of two equivalences. $)
      bibi12i $p |- ( ( ph <-> ch ) <-> ( ps <-> th ) ) $=
        ( wb bibi2i bibi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [5-Aug-1993] $)
    $}
  $}

  ${
    imbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding an antecedent to both sides of a logical
       equivalence. $)
    imbi2d $p |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) $=
      ( wb a1d pm5.74d ) ADBCABCFDEGH $.
      $( [5-Aug-1993] $)

    $( Deduction adding a consequent to both sides of a logical equivalence.
       (The proof was shortened by Wolf Lammen, 17-Sep-2013.) $)
    imbi1d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) $=
      ( wi biimprd imim1d biimpd impbid ) ABDFCDFACBDABCEGHABCDABCEIHJ $.
      $( [17-Sep-2013] $) $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the left in an equivalence.  (The
       proof was shortened by Wolf Lammen, 19-May-2013.) $)
    bibi2d $p |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) $=
      ( wb wi pm5.74i bibi2i pm5.74 3bitr4i pm5.74ri ) ADBFZDCFZADGZABGZFOACGZF
      AMGANGPQOABCEHIADBJADCJKL $.
      $( [19-May-2013] $) $( [5-Aug-1993] $)

    $( Deduction adding a biconditional to the right in an equivalence. $)
    bibi1d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) $=
      ( wb bibi2d bicom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    imbi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    imbi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       implications. $)
    imbi12d $p |- ( ph -> ( ( ps -> th ) <-> ( ch -> ta ) ) ) $=
      ( wi imbi1d imbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)
    $( Deduction joining two equivalences to form equivalence of
       biconditionals. $)
    bibi12d $p |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> ta ) ) ) $=
      ( wb bibi1d bibi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.84 of [WhiteheadRussell] p. 122. $)
  imbi1 $p |- ( ( ph <-> ps ) -> ( ( ph -> ch ) <-> ( ps -> ch ) ) ) $=
    ( wb id imbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.85 of [WhiteheadRussell] p. 122.  (The proof was shortened by
     Wolf Lammen, 19-May-2013.) $)
  imbi2 $p |- ( ( ph <-> ps ) -> ( ( ch -> ph ) <-> ( ch -> ps ) ) ) $=
    ( wb id imbi2d ) ABDZABCGEF $.
    $( [19-May-2013] $) $( [3-Jan-2005] $)

  ${
    imbi1i.1 $e |- ( ph <-> ps ) $.
    $( Introduce a consequent to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 17-Sep-2013.) $)
    imbi1i $p |- ( ( ph -> ch ) <-> ( ps -> ch ) ) $=
      ( wb wi imbi1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [17-Sep-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    imbi12i.1 $e |- ( ph <-> ps ) $.
    imbi12i.2 $e |- ( ch <-> th ) $.
    $( Join two logical equivalences to form equivalence of implications. $)
    imbi12i $p |- ( ( ph -> ch ) <-> ( ps -> th ) ) $=
      ( wi imbi2i imbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem *4.86 of [WhiteheadRussell] p. 122. $)
  bibi1 $p |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) $=
    ( wb id bibi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Contraposition.  Theorem *4.12 of [WhiteheadRussell] p. 117.  (The proof
     was shortened by Wolf Lammen, 3-Jan-2013.) $)
  con2bi $p |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) $=
    ( wn wb notbi notnot bibi2i bicom 3bitr2i ) ABCZDACZJCZDKBDBKDAJEBLKBFGKBHI
    $.
    $( [3-Jan-2013] $) $( [15-Apr-1995] $)

  ${
    con2bid.1 $e |- ( ph -> ( ps <-> -. ch ) ) $.
    $( A contraposition deduction. $)
    con2bid $p |- ( ph -> ( ch <-> -. ps ) ) $=
      ( wn wb con2bi sylibr ) ABCEFCBEFDCBGH $.
      $( [15-Apr-1995] $)
  $}

  ${
    con1bid.1 $e |- ( ph -> ( -. ps <-> ch ) ) $.
    $( A contraposition deduction. $)
    con1bid $p |- ( ph -> ( -. ch <-> ps ) ) $=
      ( wn bicomd con2bid ) ABCEACBABECDFGF $.
      $( [9-Oct-1999] $)
  $}

  ${
    con1bii.1 $e |- ( -. ph <-> ps ) $.
    $( A contraposition inference.  (The proof was shortened by Wolf Lammen,
       13-Oct-2012.) $)
    con1bii $p |- ( -. ps <-> ph ) $=
      ( wn notnot xchbinx bicomi ) ABDAADBAECFG $.
      $( [28-Sep-2014] $) $( [5-Aug-1993] $)
  $}

  ${
    con1biiOLD.1 $e |- ( -. ph <-> ps ) $.
    $( Obsolete proof of ~ con1bii as of 28-Sep-2014. $)
    con1biiOLD $p |- ( -. ps <-> ph ) $=
      ( wn notnot notbii bitr2i ) AADZDBDAEHBCFG $.
      $( [13-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    con2bii.1 $e |- ( ph <-> -. ps ) $.
    $( A contraposition inference. $)
    con2bii $p |- ( ps <-> -. ph ) $=
      ( wn bicomi con1bii ) ADBBAABDCEFE $.
      $( [5-Aug-1993] $)
  $}

  $( Contraposition.  Bidirectional version of ~ con1 . $)
  con1b $p |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) $=
    ( wn wi con1 impbii ) ACBDBCADABEBAEF $.
    $( [5-Aug-1993] $)

  $( Contraposition.  Bidirectional version of ~ con2 . $)
  con2b $p |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) $=
    ( wn wi con2 impbii ) ABCDBACDABEBAEF $.
    $( [5-Aug-1993] $)

  $( A wff is equivalent to itself with true antecedent. $)
  biimt $p |- ( ph -> ( ps <-> ( ph -> ps ) ) ) $=
    ( wi ax-1 pm2.27 impbid2 ) ABABCBADABEF $.
    $( [28-Jan-1996] $)

  $( Theorem *5.5 of [WhiteheadRussell] p. 125. $)
  pm5.5 $p |- ( ph -> ( ( ph -> ps ) <-> ps ) ) $=
    ( wi biimt bicomd ) ABABCABDE $.
    $( [3-Jan-2005] $)

  ${
    a1bi.1 $e |- ph $.
    $( Inference rule introducing a theorem as an antecedent.  The proof was
       shortened by Wolf Lammen, 11-Nov-2012.) $)
    a1bi $p |- ( ps <-> ( ph -> ps ) ) $=
      ( wi wb biimt ax-mp ) ABABDECABFG $.
      $( [11-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    mt2bi.1 $e |- ph $.
    $( A false consequent falsifies an antecedent.  (The proof was shortened by
       Wolf Lammen, 12-Nov-2012.) $)
    mt2bi $p |- ( -. ps <-> ( ps -> -. ph ) ) $=
      ( wn wi a1bi con2b bitri ) BDZAIEBADEAICFABGH $.
      $( [12-Nov-2012] $) $( [19-Aug-1993] $)
  $}

  $( Modus-tollens-like theorem.  (The proof was shortened by Wolf Lammen,
     12-Nov-2012.) $)
  mtt $p |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) $=
    ( wn wi biimt con34b syl6bbr ) ACZBCZHIDBADHIEBAFG $.
    $( [12-Nov-2012] $) $( [7-Apr-2001] $)

  $( Theorem *5.501 of [WhiteheadRussell] p. 125. $)
  pm5.501 $p |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) $=
    ( wb pm5.1im bi1 com12 impbid ) ABABCZABDHABABEFG $.
    $( [24-Jan-2013] $) $( [3-Jan-2005] $)

  $( Implication in terms of implication and biconditional.  (The proof was
     shortened by Wolf Lammen, 24-Jan-2013.) $)
  ibib $p |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) $=
    ( wb pm5.501 pm5.74i ) ABABCABDE $.
    $( [24-Jan-2013] $) $( [31-Mar-1994] $)

  $( Implication in terms of implication and biconditional.  (The proof was
     shortened by Wolf Lammen, 21-Dec-2013.) $)
  ibibr $p |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) $=
    ( wb pm5.501 bicom syl6bb pm5.74i ) ABBACZABABCHABDABEFG $.
    $( [21-Dec-2013] $) $( [29-Apr-2005] $)

  ${
    tbt.1 $e |- ph $.
    $( A wff is equivalent to its equivalence with truth.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    tbt $p |- ( ps <-> ( ps <-> ph ) ) $=
      ( wb ibibr pm5.74ri ax-mp ) ABBADZDCABHABEFG $.
      $( [16-May-2011] $) $( [18-Aug-1993] $)
  $}

  $( The negation of a wff is equivalent to the wff's equivalence to
     falsehood.  (Contributed by Juha Arpiainen, 19-Jan-2006.)  (The proof was
     shortened by Wolf Lammen, 28-Jan-2013.) $)
  nbn2 $p |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) $=
    ( wn wb pm5.501 notbi syl6bbr ) ACZBCZHIDABDHIEABFG $.
    $( [28-Jan-2013] $) $( [19-Jan-2006] $)

  $( Transfer negation via an equivalence.  (The proof was shortened by Wolf
     Lammen, 28-Jan-2013.) $)
  bibif $p |- ( -. ps -> ( ( ph <-> ps ) <-> -. ph ) ) $=
    ( wn wb nbn2 bicom syl6rbb ) BCACBADABDBAEBAFG $.
    $( [28-Jan-2013] $) $( [3-Oct-2007] $)

  ${
    nbn.1 $e |- -. ph $.
    $( The negation of a wff is equivalent to the wff's equivalence to
       falsehood.  (The proof was shortened by Wolf Lammen, 3-Oct-2013.) $)
    nbn $p |- ( -. ps <-> ( ps <-> ph ) ) $=
      ( wb wn bibif ax-mp bicomi ) BADZBEZAEIJDCBAFGH $.
      $( [3-Oct-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    nbn3.1 $e |- ph $.
    $( Transfer falsehood via equivalence. $)
    nbn3 $p |- ( -. ps <-> ( ps <-> -. ph ) ) $=
      ( wn notnoti nbn ) ADBACEF $.
      $( [11-Sep-2006] $)
  $}

  $( Two propositions are equivalent if they are both false.  Closed form of
     ~ 2false .  Equivalent to a ~ bi2 -like version of the xor-connective.
     (Contributed by Wolf Lammen, 13-May-2013.) $)
  pm5.21im $p |- ( -. ph -> ( -. ps -> ( ph <-> ps ) ) ) $=
    ( wn wb nbn2 biimpd ) ACBCABDABEF $.
    $( [13-May-2013] $)

  ${
    2false.1 $e |- -. ph $.
    2false.2 $e |- -. ps $.
    $( Two falsehoods are equivalent.  (The proof was shortened by Wolf Lammen,
       19-May-2013.) $)
    2false $p |- ( ph <-> ps ) $=
      ( wn 2th con4bii ) ABAEBECDFG $.
      $( [19-May-2013] $) $( [4-Apr-2005] $)
  $}

  ${
    2falsed.1 $e |- ( ph -> -. ps ) $.
    2falsed.2 $e |- ( ph -> -. ch ) $.
    $( Two falsehoods are equivalent (deduction rule). $)
    2falsed $p |- ( ph -> ( ps <-> ch ) ) $=
      ( pm2.21d impbid ) ABCABCDFACBEFG $.
      $( [11-Oct-2013] $)
  $}

  ${
    pm5.21ni.1 $e |- ( ph -> ps ) $.
    pm5.21ni.2 $e |- ( ch -> ps ) $.
    $( Two propositions implying a false one are equivalent.  (The proof was
       shortened by Wolf Lammen, 19-May-2013.) $)
    pm5.21ni $p |- ( -. ps -> ( ph <-> ch ) ) $=
      ( wn con3i 2falsed ) BFACABDGCBEGH $.
      $( [19-May-2013] $) $( [16-Feb-1996] $)

    ${
      pm5.21nii.3 $e |- ( ps -> ( ph <-> ch ) ) $.
      $( Eliminate an antecedent implied by each side of a biconditional. $)
      pm5.21nii $p |- ( ph <-> ch ) $=
        ( wb pm5.21ni pm2.61i ) BACGFABCDEHI $.
        $( [21-May-1999] $)
    $}
  $}

  ${
    pm5.21ndd.1 $e |- ( ph -> ( ch -> ps ) ) $.
    pm5.21ndd.2 $e |- ( ph -> ( th -> ps ) ) $.
    pm5.21ndd.3 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Eliminate an antecedent implied by each side of a biconditional,
       deduction version.  (Contributed by Paul Chapman, 21-Nov-2012.)  ( The
       proof was shortened by Wolf Lammen, 6-Oct-2013.) $)
    pm5.21ndd $p |- ( ph -> ( ch <-> th ) ) $=
      ( wb wn con3d pm5.21im syl6c pm2.61d ) ABCDHZGABICIDINACBEJADBFJCDKLM $.
      $( [6-Oct-2013] $) $( [21-Nov-2012] $)
  $}

  ${
    bija.1 $e |- ( ph -> ( ps -> ch ) ) $.
    bija.2 $e |- ( -. ph -> ( -. ps -> ch ) ) $.
    $( Combine antecedents into a single bi-conditional.  This inference,
       reminiscent of ~ ja , is reversible:  The hypotheses can be deduced from
       the conclusion alone (see ~ pm5.1im and ~ pm5.21im ).  (Contributed by
       Wolf Lammen, 13-May-2013.) $)
    bija $p |- ( ( ph <-> ps ) -> ch ) $=
      ( wb bi2 syli wn bi1 con3d pm2.61d ) ABFZBCBMACABGDHBIMAICMABABJKEHL $.
      $( [13-May-2013] $)
  $}

  $( Theorem *5.18 of [WhiteheadRussell] p. 124.  This theorem says that
     logical equivalence is the same as negated "exclusive-or."  (The proof was
     shortened by Andrew Salmon, 20-Jun-2011.)  (The proof was shortened by
     Wolf Lammen, 15-Oct-2013.) $)
  pm5.18 $p |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) $=
    ( wb wn pm5.501 con1bid bitr2d nbn2 pm2.61i ) AABCZABDZCZDZCAMBJABLAKEFABEG
    ADZMKJNKLAKHFABHGI $.
    $( [15-Oct-2013] $) $( [28-Jun-2002] $)

  $( Two ways to express "exclusive or." $)
  xor3 $p |- ( -. ( ph <-> ps ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb pm5.18 con2bii bicomi ) ABCDZABDZCIHABEFG $.
    $( [1-Jan-2006] $)

  $( Move negation outside of biconditional.  Compare Theorem *5.18 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     20-Sep-2013.) $)
  nbbn $p |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) $=
    ( wb wn xor3 con2bi bicom 3bitrri ) ABCDABDCBADZCIBCABEABFBIGH $.
    $( [20-Sep-2013] $) $( [27-Jun-2002] $)

  $( Associative law for the biconditional.  An axiom of system DS in Vladimir
     Lifschitz, "On calculational proofs", Annals of Pure and Applied Logic,
     113:207-224, 2002,
     ~ http://www.cs.utexas.edu/users/ai-lab/pub-view.php?PubID=26805 .
     Interestingly, this law was not included in _Principia Mathematica_ but
     was apparently first noted by Jan Lukasiewicz circa 1923.  (The proof was
     shortened by Juha Arpiainen, 19-Jan-2006.)  (The proof was shortened by
     Wolf Lammen, 21-Sep-2013.) $)
  biass $p |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) $=
    ( wb pm5.501 bibi1d bitr3d wn nbbn nbn2 syl5bbr pm2.61i ) AABDZCDZABCDZDZDA
    ONPABMCABEFAOEGAHZOHZNPRBHZCDQNBCIQSMCABJFKAOJGL $.
    $( [21-Sep-2013] $) $( [8-Jan-2005] $)

  $( Theorem *5.19 of [WhiteheadRussell] p. 124. $)
  pm5.19 $p |- -. ( ph <-> -. ph ) $=
    ( wb wn biid pm5.18 mpbi ) AABAACBCADAAEF $.
    $( [3-Jan-2005] $)

  $( Logical equivalence of commuted antecedents.  Part of Theorem *4.87 of
     [WhiteheadRussell] p. 122. $)
  bi2.04 $p |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) $=
    ( wi pm2.04 impbii ) ABCDDBACDDABCEBACEF $.
    $( [5-Aug-1993] $)

  $( Antecedent absorption implication.  Theorem *5.4 of [WhiteheadRussell]
     p. 125. $)
  pm5.4 $p |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) $=
    ( wi pm2.43 ax-1 impbii ) AABCZCGABDGAEF $.
    $( [5-Aug-1993] $)

  $( Distributive law for implication.  Compare Theorem *5.41 of
     [WhiteheadRussell] p. 125. $)
  imdi $p |- ( ( ph -> ( ps -> ch ) ) <->
               ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi ax-2 pm2.86 impbii ) ABCDDABDACDDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( Theorem *5.41 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 12-Oct-2012.) $)
  pm5.41 $p |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <->
                ( ph -> ( ps -> ch ) ) ) $=
    ( wi imdi bicomi ) ABCDDABDACDDABCEF $.
    $( [13-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.8 of [WhiteheadRussell] p. 122. $)
  pm4.8 $p |- ( ( ph -> -. ph ) <-> -. ph ) $=
    ( wn wi pm2.01 ax-1 impbii ) AABZCGADGAEF $.
    $( [3-Jan-2005] $)

  $( Theorem *4.81 of [WhiteheadRussell] p. 122. $)
  pm4.81 $p |- ( ( -. ph -> ph ) <-> ph ) $=
    ( wn wi pm2.18 pm2.24 impbii ) ABACAADAAEF $.
    $( [3-Jan-2005] $)

  $( Simplify an implication between two implications when the antecedent of
     the first is a consequence of the antecedent of the second.  The reverse
     form is useful in producing the successor step in induction proofs.
     (Contributed by Paul Chapman, 22-Jun-2011.)  (The proof was shortened by
     Wolf Lammen, 14-Sep-2013.) $)
  imim21b $p |- ( ( ps -> ph ) -> ( ( ( ph -> ch ) -> ( ps -> th ) ) <->
                                    ( ps -> ( ch -> th ) ) ) ) $=
    ( wi bi2.04 wb pm5.5 imbi1d imim2i pm5.74d syl5bb ) ACEZBDEEBMDEZEBAEZBCDEZ
    EMBDFOBNPANPGBAMCDACHIJKL $.
    $( [14-Sep-2013] $) $( [22-Jun-2011] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical disjunction and conjunction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  Here we define disjunction (logical 'or') ` \/ ` ( ~ df-or ) and conjunction
  (logical 'and') ` /\ ` ( ~ df-an ). We also define various rules for
  simplifying and applying them, e.g., ~ olc , ~ orc , and ~ orcom .

$)

  $( Declare connectives for disjunction ('or') and conjunction ('and'). $)
  $c \/ $. $( Vee (read:  'or') $)
  $c /\ $. $( Wedge (read:  'and') $)

  $( Extend wff definition to include disjunction ('or'). $)
  wo $a wff ( ph \/ ps ) $.
  $( Extend wff definition to include conjunction ('and'). $)
  wa $a wff ( ph /\ ps ) $.

  $( Define disjunction (logical 'or').  Definition of [Margaris] p. 49.  When
     the left operand, right operand, or both are true, the result is true;
     when both sides are false, the result is false.  For example, it is true
     that ` ( 2 = 3 \/ 4 = 4 ) ` ( ~ ex-or ).  After we define the constant
     true ` T. ` ( ~ df-tru ) and the constant false ` F. ` ( ~ df-fal ), we
     will be able to prove these truth table values:
     ` ( ( T. \/ T. ) <-> T. ) ` ( ~ truortru ), ` ( ( T. \/ F. ) <-> T. ) `
     ( ~ truorfal ), ` ( ( F. \/ T. ) <-> T. ) ` ( ~ falortru ), and
     ` ( ( F. \/ F. ) <-> F. ) ` ( ~ falorfal ).

     This is our first use of the biconditional connective in a definition; we
     use the biconditional connective in place of the traditional "<=def=>",
     which means the same thing, except that we can manipulate the
     biconditional connective directly in proofs rather than having to rely on
     an informal definition substitution rule.  Note that if we mechanically
     substitute ` ( -. ph -> ps ) ` for ` ( ph \/ ps ) ` , we end up with an
     instance of previously proved theorem ~ biid .  This is the justification
     for the definition, along with the fact that it introduces a new symbol
     ` \/ ` .  Contrast with ` /\ ` ( ~ df-an ), ` -> ` ( ~ wi ), ` -/\ `
     ( ~ df-nan ), and ` \/_ ` ( ~ df-xor ) . $)
  df-or $a |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) $.

  $( Define conjunction (logical 'and').  Definition of [Margaris] p. 49.  When
     both the left and right operand are true, the result is true; when either
     is false, the result is false.  For example, it is true that
     ` ( 2 = 2 /\ 3 = 3 ) ` .  After we define the constant true ` T. `
     ( ~ df-tru ) and the constant false ` F. ` ( ~ df-fal ), we will be able
     to prove these truth table values: ` ( ( T. /\ T. ) <-> T. ) `
     ( ~ truantru ), ` ( ( T. /\ F. ) <-> F. ) ` ( ~ truanfal ),
     ` ( ( F. /\ T. ) <-> F. ) ` ( ~ falantru ), and
     ` ( ( F. /\ F. ) <-> F. ) ` ( ~ falanfal ).

     Contrast with ` \/ ` ( ~ df-or ), ` -> ` ( ~ wi ), ` -/\ ` ( ~ df-nan ),
     and ` \/_ ` ( ~ df-xor ) . $)
  df-an $a |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) $.

  $( Theorem *4.64 of [WhiteheadRussell] p. 120. $)
  pm4.64 $p |- ( ( -. ph -> ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wi df-or bicomi ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.53 of [WhiteheadRussell] p. 107. $)
  pm2.53 $p |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) $=
    ( wo wn wi df-or biimpi ) ABCADBEABFG $.
    $( [23-Jul-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.54 of [WhiteheadRussell] p. 107. $)
  pm2.54 $p |- ( ( -. ph -> ps ) -> ( ph \/ ps ) ) $=
    ( wo wn wi df-or biimpri ) ABCADBEABFG $.
    $( [3-Jan-2005] $)

  ${
    ori.1 $e |- ( ph \/ ps ) $.
    $( Infer implication from disjunction. $)
    ori $p |- ( -. ph -> ps ) $=
      ( wo wn wi df-or mpbi ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    orri.1 $e |- ( -. ph -> ps ) $.
    $( Infer implication from disjunction. $)
    orri $p |- ( ph \/ ps ) $=
      ( wo wn wi df-or mpbir ) ABDAEBFCABGH $.
      $( [11-Jun-1994] $)
  $}

  ${
    ord.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Deduce implication from disjunction. $)
    ord $p |- ( ph -> ( -. ps -> ch ) ) $=
      ( wo wn wi df-or sylib ) ABCEBFCGDBCHI $.
      $( [18-May-1994] $)
  $}

  ${
    orrd.1 $e |- ( ph -> ( -. ps -> ch ) ) $.
    $( Deduce implication from disjunction. $)
    orrd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wn wi wo pm2.54 syl ) ABECFBCGDBCHI $.
      $( [27-Nov-1995] $)
  $}

  ${
    jaoi.1 $e |- ( ph -> ps ) $.
    jaoi.2 $e |- ( ch -> ps ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoi $p |- ( ( ph \/ ch ) -> ps ) $=
      ( wo wn pm2.53 syl6 pm2.61d2 ) ACFZABKAGCBACHEIDJ $.
      $( [13-Dec-2013] $) $( [5-Apr-1994] $)
  $}

  ${
    jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaod $p |- ( ph -> ( ( ps \/ th ) -> ch ) ) $=
      ( wo wi com12 jaoi ) BDGACBACHDABCEIADCFIJI $.
      $( [4-Apr-2013] $) $( [18-Aug-1994] $)
  $}

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.55 of
     [WhiteheadRussell] p. 107.  (The proof was shortened by Wolf Lammen,
     21-Jul-2012.) $)
  orel1 $p |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 com12 ) ABCADBABEF $.
    $( [23-Jul-2012] $) $( [12-Aug-1994] $)

  $( Elimination of disjunction by denial of a disjunct.  Theorem *2.56 of
     [WhiteheadRussell] p. 107.  (The proof was shortened by Wolf Lammen,
     5-Apr-2013.) $)
  orel2 $p |- ( -. ph -> ( ( ps \/ ph ) -> ps ) ) $=
    ( wn idd pm2.21 jaod ) ACZBBAGBDABEF $.
    $( [5-Apr-2013] $) $( [12-Aug-1994] $)

  $( Introduction of a disjunct.  Axiom *1.3 of [WhiteheadRussell] p. 96. $)
  olc $p |- ( ph -> ( ps \/ ph ) ) $=
    ( wn ax-1 orrd ) ABAABCDE $.
    $( [30-Aug-1993] $)

  $( Introduction of a disjunct.  Theorem *2.2 of [WhiteheadRussell] p. 104. $)
  orc $p |- ( ph -> ( ph \/ ps ) ) $=
    ( pm2.24 orrd ) AABABCD $.
    $( [30-Aug-1993] $)

  $( Axiom *1.4 of [WhiteheadRussell] p. 96. $)
  pm1.4 $p |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) $=
    ( wo olc orc jaoi ) ABACBABDBAEF $.
    $( [15-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for disjunction.  Theorem *4.31 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 15-Nov-2012.) $)
  orcom $p |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) $=
    ( wo pm1.4 impbii ) ABCBACABDBADE $.
    $( [15-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    orcomd.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Commutation of disjuncts in consequent. $)
    orcomd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( wo orcom sylib ) ABCECBEDBCFG $.
      $( [2-Dec-2010] $)
  $}

  ${
    orcoms.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Commutation of disjuncts in antecedent. $)
    orcoms $p |- ( ( ps \/ ph ) -> ch ) $=
      ( wo pm1.4 syl ) BAEABECBAFDG $.
      $( [2-Dec-2012] $)
  $}

  ${
    orci.1 $e |- ph $.
    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    orci $p |- ( ph \/ ps ) $=
      ( pm2.24i orri ) ABABCDE $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)

    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 14-Nov-2012.) $)
    olci $p |- ( ps \/ ph ) $=
      ( wn a1i orri ) BAABDCEF $.
      $( [14-Nov-2012] $) $( [19-Jan-2008] $)
  $}

  ${
    orcd.1 $e |- ( ph -> ps ) $.
    $( Deduction introducing a disjunct. $)
    orcd $p |- ( ph -> ( ps \/ ch ) ) $=
      ( wo orc syl ) ABBCEDBCFG $.
      $( [20-Sep-2007] $)

    $( Deduction introducing a disjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    olcd $p |- ( ph -> ( ch \/ ps ) ) $=
      ( orcd orcomd ) ABCABCDEF $.
      $( [3-Oct-2013] $) $( [11-Apr-2008] $)
  $}

  ${
    orcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct. _Notational convention_:  We sometimes
       suffix with "s" the label of an inference that manipulates an
       antecedent, leaving the consequent unchanged.  The "s" means that the
       inference eliminates the need for a syllogism ( ~ syl ) -type inference
       in a proof. $)
    orcs $p |- ( ph -> ch ) $=
      ( wo orc syl ) AABECABFDG $.
      $( [21-Jun-1994] $)
  $}

  ${
    olcs.1 $e |- ( ( ph \/ ps ) -> ch ) $.
    $( Deduction eliminating disjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    olcs $p |- ( ps -> ch ) $=
      ( orcoms orcs ) BACABCDEF $.
      $( [3-Oct-2013] $) $( [21-Jun-1994] $)
  $}

  $( Theorem *2.07 of [WhiteheadRussell] p. 101. $)
  pm2.07 $p |- ( ph -> ( ph \/ ph ) ) $=
    ( olc ) AAB $.
    $( [3-Jan-2005] $)

  $( Theorem *2.45 of [WhiteheadRussell] p. 106. $)
  pm2.45 $p |- ( -. ( ph \/ ps ) -> -. ph ) $=
    ( wo orc con3i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.46 of [WhiteheadRussell] p. 106. $)
  pm2.46 $p |- ( -. ( ph \/ ps ) -> -. ps ) $=
    ( wo olc con3i ) BABCBADE $.
    $( [3-Jan-2005] $)

  $( Theorem *2.47 of [WhiteheadRussell] p. 107. $)
  pm2.47 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ ps ) ) $=
    ( wo wn pm2.45 orcd ) ABCDADBABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.48 of [WhiteheadRussell] p. 107. $)
  pm2.48 $p |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDAABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.49 of [WhiteheadRussell] p. 107. $)
  pm2.49 $p |- ( -. ( ph \/ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wo wn pm2.46 olcd ) ABCDBDADABEF $.
    $( [3-Jan-2005] $)

  $( Slight generalization of Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67-2 $p |- ( ( ( ph \/ ch ) -> ps ) -> ( ph -> ps ) ) $=
    ( wo orc imim1i ) AACDBACEF $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.67 of [WhiteheadRussell] p. 107. $)
  pm2.67 $p |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) $=
    ( pm2.67-2 ) ABBC $.
    $( [9-Dec-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.25 of [WhiteheadRussell] p. 104. $)
  pm2.25 $p |- ( ph \/ ( ( ph \/ ps ) -> ps ) ) $=
    ( wo wi orel1 orri ) AABCBDABEF $.
    $( [3-Jan-2005] $)

  $( A wff is equivalent to its disjunction with falsehood.  Theorem *4.74 of
     [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     18-Nov-2012.) $)
  biorf $p |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wn wo olc orel1 impbid2 ) ACBABDBAEABFG $.
    $( [18-Nov-2012] $) $( [23-Mar-1995] $)

  $( A wff is equivalent to its negated disjunction with falsehood. $)
  biortn $p |- ( ph -> ( ps <-> ( -. ph \/ ps ) ) ) $=
    ( wn wo wb notnot1 biorf syl ) AACZCBIBDEAFIBGH $.
    $( [9-Jul-2012] $)

  ${
    biorfi.1 $e |- -. ph $.
    $( A wff is equivalent to its disjunction with falsehood. $)
    biorfi $p |- ( ps <-> ( ps \/ ph ) ) $=
      ( wn wo wb orc orel2 impbid2 ax-mp ) ADZBBAEZFCKBLBAGABHIJ $.
      $( [23-Mar-1995] $)
  $}

  $( Theorem *2.621 of [WhiteheadRussell] p. 107. $)
  pm2.621 $p |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) $=
    ( wi id idd jaod ) ABCZABBGDGBEF $.
    $( [13-Dec-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.62 of [WhiteheadRussell] p. 107.  (The proof was shortened by
     Wolf Lammen, 13-Dec-2013.) $)
  pm2.62 $p |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) $=
    ( wi wo pm2.621 com12 ) ABCABDBABEF $.
    $( [13-Dec-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.68 of [WhiteheadRussell] p. 108. $)
  pm2.68 $p |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) $=
    ( wi jarl orrd ) ABCBCABABBDE $.
    $( [21-Oct-2012] $) $( [3-Jan-2005] $)

  $( Logical 'or' expressed in terms of implication only.  Theorem *5.25 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     20-Oct-2012.) $)
  dfor2 $p |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) $=
    ( wo wi pm2.62 pm2.68 impbii ) ABCABDBDABEABFG $.
    $( [21-Oct-2012] $) $( [12-Aug-2004] $)

  $( Implication in terms of disjunction.  Theorem *4.6 of [WhiteheadRussell]
     p. 120. $)
  imor $p |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) $=
    ( wi wn wo notnot imbi1i df-or bitr4i ) ABCADZDZBCJBEAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  ${
    imori.1 $e |- ( ph -> ps ) $.
    $( Infer disjunction from implication. $)
    imori $p |- ( -. ph \/ ps ) $=
      ( wi wn wo imor mpbi ) ABDAEBFCABGH $.
      $( [12-Mar-2012] $)
  $}

  ${
    imorri.1 $e |- ( -. ph \/ ps ) $.
    $( Infer implication from disjunction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    imorri $p |- ( ph -> ps ) $=
      ( wi wn wo imor mpbir ) ABDAEBFCABGH $.
      $( [3-Jun-2011] $)
  $}

  $( Law of excluded middle, also called the principle of _tertium non datur_.
     Theorem *2.11 of [WhiteheadRussell] p. 101.  It says that something is
     either true or not true; there are no in-between values of truth.  This is
     an essential distinction of our classical logic and is not a theorem of
     intuitionistic logic. $)
  exmid $p |- ( ph \/ -. ph ) $=
    ( wn id orri ) AABZECD $.
    $( [5-Aug-1993] $)

  $( Theorem *2.1 of [WhiteheadRussell] p. 101.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.1 $p |- ( -. ph \/ ph ) $=
    ( id imori ) AAABC $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *2.13 of [WhiteheadRussell] p. 101. $)
  pm2.13 $p |- ( ph \/ -. -. -. ph ) $=
    ( wn notnot1 orri ) AABZBBECD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.62 of [WhiteheadRussell] p. 120. $)
  pm4.62 $p |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wn imor ) ABCD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.66 of [WhiteheadRussell] p. 120. $)
  pm4.66 $p |- ( ( -. ph -> -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn pm4.64 ) ABCD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.63 of [WhiteheadRussell] p. 120. $)
  pm4.63 $p |- ( -. ( ph -> -. ps ) <-> ( ph /\ ps ) ) $=
    ( wa wn wi df-an bicomi ) ABCABDEDABFG $.
    $( [3-Jan-2005] $)

  $( Express implication in terms of conjunction. $)
  imnan $p |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) $=
    ( wa wn wi df-an con2bii ) ABCABDEABFG $.
    $( [9-Apr-1994] $)

  $( Express implication in terms of conjunction.  Theorem 3.4(27) of [Stoll]
     p. 176.  (The proof was shortened by Wolf Lammen, 30-Oct-2012.) $)
  iman $p |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) $=
    ( wi wn wa notnot imbi2i imnan bitri ) ABCABDZDZCAJEDBKABFGAJHI $.
    $( [30-Oct-2012] $) $( [5-Aug-1993] $)

  $( Express conjunction in terms of implication. $)
  annim $p |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) $=
    ( wi wn wa iman con2bii ) ABCABDEABFG $.
    $( [2-Aug-1994] $)

  $( Theorem *4.61 of [WhiteheadRussell] p. 120. $)
  pm4.61 $p |- ( -. ( ph -> ps ) <-> ( ph /\ -. ps ) ) $=
    ( wn wa wi annim bicomi ) ABCDABECABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.65 of [WhiteheadRussell] p. 120. $)
  pm4.65 $p |- ( -. ( -. ph -> ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wn pm4.61 ) ACBD $.
    $( [3-Jan-2005] $)

  $( Theorem *4.67 of [WhiteheadRussell] p. 120. $)
  pm4.67 $p |- ( -. ( -. ph -> -. ps ) <-> ( -. ph /\ ps ) ) $=
    ( wn pm4.63 ) ACBD $.
    $( [3-Jan-2005] $)

  ${
    imp.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation inference.  (The proof was shortened by Eric Schmidt,
       22-Dec-2006.) $)
    imp $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa wn wi df-an impi sylbi ) ABEABFGFCABHABCDIJ $.
      $( [24-Mar-2013] $) $( [5-Aug-1993] $)

    $( Importation inference with commuted antecedents. $)
    impcom $p |- ( ( ps /\ ph ) -> ch ) $=
      ( com12 imp ) BACABCDEF $.
      $( [25-May-2005] $)
  $}

  ${
    imp3.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation deduction. $)
    imp3a $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wa wi com3l imp com12 ) BCFADBCADGABCDEHIJ $.
      $( [24-Mar-2013] $) $( [31-Mar-1994] $)

    $( An importation inference. $)
    imp31 $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( wa wi imp ) ABFCDABCDGEHH $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp32 $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wa imp3a imp ) ABCFDABCDEGH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Exportation inference.  (This theorem used to be labeled "exp" but was
       changed to "ex" so as not to conflict with the math token "exp", per the
       June 2006 Metamath spec change.)  (The proof was shortened by Eric
       Schmidt, 22-Dec-2006.) $)
    ex $p |- ( ph -> ( ps -> ch ) ) $=
      ( wn wi wa df-an sylbir expi ) ABCABEFEABGCABHDIJ $.
      $( [24-Mar-2013] $) $( [5-Aug-1993] $)

    $( Exportation inference with commuted antecedents. $)
    expcom $p |- ( ps -> ( ph -> ch ) ) $=
      ( ex com12 ) ABCABCDEF $.
      $( [25-May-2005] $)
  $}

  ${
    exp3a.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Exportation deduction. $)
    exp3a $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi wa com12 ex com3r ) BCADBCADFABCGDEHIJ $.
      $( [24-Mar-2013] $) $( [20-Aug-1993] $)

    $( A deduction version of exportation, followed by importation. $)
    expdimp $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp3a imp ) ABCDFABCDEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    impancom.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Mixed importation/commutation inference. $)
    impancom $p |- ( ( ph /\ ch ) -> ( ps -> th ) ) $=
      ( wi ex com23 imp ) ACBDFABCDABCDFEGHI $.
      $( [22-Jun-2013] $)
  $}

  $( Theorem *3.3 (Exp) of [WhiteheadRussell] p. 112.  (The proof was shortened
     by Wolf Lammen, 24-Mar-2013.) $)
  pm3.3 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi id exp3a ) ABDCEZABCHFG $.
    $( [24-Mar-2013] $) $( [3-Jan-2005] $)

  $( Theorem *3.31 (Imp) of [WhiteheadRussell] p. 112.  (The proof was
     shortened by Wolf Lammen, 24-Mar-2013.) $)
  pm3.31 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wi id imp3a ) ABCDDZABCGEF $.
    $( [24-Mar-2013] $) $( [3-Jan-2005] $)

  $( Import-export theorem.  Part of Theorem *4.87 of [WhiteheadRussell]
     p. 122.  (The proof was shortened by Wolf Lammen, 24-Mar-2013.) $)
  impexp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) $=
    ( wa wi pm3.3 pm3.31 impbii ) ABDCEABCEEABCFABCGH $.
    $( [24-Mar-2013] $) $( [5-Aug-1993] $)

  $( Join antecedents with conjunction.  Theorem *3.2 of [WhiteheadRussell]
     p. 111.  (The proof was shortened by Wolf Lammen, 12-Nov-2012.) $)
  pm3.2 $p |- ( ph -> ( ps -> ( ph /\ ps ) ) ) $=
    ( wa id ex ) ABABCZFDE $.
    $( [12-Nov-2012] $) $( [5-Aug-1993] $)

  $( Join antecedents with conjunction.  Theorem *3.21 of [WhiteheadRussell]
     p. 111. $)
  pm3.21 $p |- ( ph -> ( ps -> ( ps /\ ph ) ) ) $=
    ( wa pm3.2 com12 ) BABACBADE $.
    $( [5-Aug-1993] $)

  $( Theorem *3.22 of [WhiteheadRussell] p. 111.  (The proof was shortened by
     Wolf Lammen, 13-Nov-2012.) $)
  pm3.22 $p |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) $=
    ( wa pm3.21 imp ) ABBACABDE $.
    $( [13-Nov-2012] $) $( [3-Jan-2005] $)

  $( Commutative law for conjunction.  Theorem *4.3 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 4-Nov-2012.) $)
  ancom $p |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) $=
    ( wa pm3.22 impbii ) ABCBACABDBADE $.
    $( [4-Nov-2012] $) $( [25-Jun-1998] $)

  ${
    ancomd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Commutation of conjuncts in consequent.  (Contributed by Jeff Hankins,
       14-Aug-2009.) $)
    ancomd $p |- ( ph -> ( ch /\ ps ) ) $=
      ( wa ancom sylib ) ABCECBEDBCFG $.
      $( [18-Apr-2010] $) $( [14-Aug-2009] $)
  $}

  ${
    ancoms.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference commuting conjunction in antecedent. $)
    ancoms $p |- ( ( ps /\ ph ) -> ch ) $=
      ( expcom imp ) BACABCDEF $.
      $( [21-Apr-1994] $)
  $}

  ${
    ancomsd.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction commuting conjunction in antecedent. $)
    ancomsd $p |- ( ph -> ( ( ch /\ ps ) -> th ) ) $=
      ( wa ancom syl5bi ) CBFBCFADCBGEH $.
      $( [12-Dec-2004] $)
  $}

  ${
    pm3.2i.1 $e |- ph $.
    pm3.2i.2 $e |- ps $.
    $( Infer conjunction of premises. $)
    pm3.2i $p |- ( ph /\ ps ) $=
      ( wa pm3.2 mp2 ) ABABECDABFG $.
      $( [5-Aug-1993] $)
  $}

  $( Nested conjunction of antecedents. $)
  pm3.43i $p |- ( ( ph -> ps ) ->
                ( ( ph -> ch ) -> ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa pm3.2 imim3i ) BCBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Elimination of a conjunct.  Theorem *3.26 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpl $p |- ( ( ph /\ ps ) -> ph ) $=
    ( ax-1 imp ) ABAABCD $.
    $( [13-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    simpli.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpli $p |- ph $=
      ( wa simpl ax-mp ) ABDACABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simpld.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simpld $p |- ( ph -> ps ) $=
      ( wa simpl syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    simplbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simplbi $p |- ( ph -> ps ) $=
      ( wa biimpi simpld ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  $( Elimination of a conjunct.  Theorem *3.27 (Simp) of [WhiteheadRussell]
     p. 112.  (The proof was shortened by Wolf Lammen, 13-Nov-2012.) $)
  simpr $p |- ( ( ph /\ ps ) -> ps ) $=
    ( idd imp ) ABBABCD $.
    $( [13-Nov-2012] $)  $( [5-Aug-1993] $)

  ${
    simpri.1 $e |- ( ph /\ ps ) $.
    $( Inference eliminating a conjunct. $)
    simpri $p |- ps $=
      ( wa simpr ax-mp ) ABDBCABEF $.
      $( [15-Jun-1994] $)
  $}

  ${
    simprd.1 $e |- ( ph -> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct.  (The proof was shortened by Wolf
       Lammen, 3-Oct-2013.) $)
    simprd $p |- ( ph -> ch ) $=
      ( ancomd simpld ) ACBABCDEF $.
      $( [3-Oct-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    simprbi.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbi $p |- ( ph -> ch ) $=
      ( wa biimpi simprd ) ABCABCEDFG $.
      $( [27-May-1998] $)
  $}

  ${
    adantr.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the right of an antecedent. $)
    adantr $p |- ( ( ph /\ ch ) -> ps ) $=
      ( a1d imp ) ACBABCDEF $.
      $( [30-Aug-1993] $)
  $}

  ${
    adantl.1 $e |- ( ph -> ps ) $.
    $( Inference adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 23-Nov-2012.) $)
    adantl $p |- ( ( ch /\ ph ) -> ps ) $=
      ( adantr ancoms ) ACBABCDEF $.
      $( [23-Nov-2012] $) $( [30-Aug-1993] $)
  $}

  ${
    adantld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the left of an antecedent.  (The proof
       was shortened by Wolf Lammen, 20-Dec-2012.) $)
    adantld $p |- ( ph -> ( ( th /\ ps ) -> ch ) ) $=
      ( wa simpr syl5 ) DBFBACDBGEH $.
      $( [20-Dec-2012] $) $( [4-May-1994] $)
  $}

  ${
    adantrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction adding a conjunct to the right of an antecedent. $)
    adantrd $p |- ( ph -> ( ( ps /\ th ) -> ch ) ) $=
      ( wa simpl syl5 ) BDFBACBDGEH $.
      $( [4-May-1994] $)
  $}

  ${
    mpan9.1 $e |- ( ph -> ps ) $.
    mpan9.2 $e |- ( ch -> ( ps -> th ) ) $.
    $( Modus ponens conjoining dissimilar antecedents.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    mpan9 $p |- ( ( ph /\ ch ) -> th ) $=
      ( syl5 impcom ) CADABCDEFGH $.
      $( [12-May-2011] $) $( [1-Feb-2008] $)
  $}

  ${
    syldan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    syldan.2 $e |- ( ( ph /\ ch ) -> th ) $.
    $( A syllogism deduction with conjoined antecents.  (The proof was
       shortened by Wolf Lammen, 6-Apr-2013.) $)
    syldan $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa expcom adantrd mpcom ) CABGDECADBACDFHIJ $.
      $( [6-Apr-2013] $) $( [24-Feb-2005] $)
  $}

  ${
    sylan.1 $e |- ( ph -> ps ) $.
    sylan.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
       22-Nov-2012.) $)
    sylan $p |- ( ( ph /\ ch ) -> th ) $=
      ( expcom mpan9 ) ABCDEBCDFGH $.
      $( [22-Nov-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    sylanb.1 $e |- ( ph <-> ps ) $.
    sylanb.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylanb $p |- ( ( ph /\ ch ) -> th ) $=
      ( biimpi sylan ) ABCDABEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    sylanbr.1 $e |- ( ps <-> ph ) $.
    sylanbr.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylanbr $p |- ( ( ph /\ ch ) -> th ) $=
      ( biimpri sylan ) ABCDBAEGFH $.
      $( [18-May-1994] $)
  $}

  ${
    sylan2.1 $e |- ( ph -> ch ) $.
    sylan2.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference.  (The proof was shortened by Wolf Lammen,
       22-Nov-2012.) $)
    sylan2 $p |- ( ( ps /\ ph ) -> th ) $=
      ( adantl syldan ) BACDACBEGFH $.
      $( [22-Nov-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    sylan2b.1 $e |- ( ph <-> ch ) $.
    sylan2b.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylan2b $p |- ( ( ps /\ ph ) -> th ) $=
      ( biimpi sylan2 ) ABCDACEGFH $.
      $( [21-Apr-1994] $)
  $}

  ${
    sylan2br.1 $e |- ( ch <-> ph ) $.
    sylan2br.2 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference. $)
    sylan2br $p |- ( ( ps /\ ph ) -> th ) $=
      ( biimpri sylan2 ) ABCDCAEGFH $.
      $( [21-Apr-1994] $)
  $}

  ${
    syl2an.1 $e |- ( ph -> ps ) $.
    syl2an.2 $e |- ( ta -> ch ) $.
    syl2an.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2an $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylan sylan2 ) EACDGABCDFHIJ $.
      $( [31-Jan-1997] $)

    $( A double syllogism inference. $)
    syl2anr $p |- ( ( ta /\ ph ) -> th ) $=
      ( syl2an ancoms ) AEDABCDEFGHIJ $.
      $( [17-Sep-2013] $)
  $}

  ${
    syl2anb.1 $e |- ( ph <-> ps ) $.
    syl2anb.2 $e |- ( ta <-> ch ) $.
    syl2anb.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2anb $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylanb sylan2b ) EACDGABCDFHIJ $.
      $( [29-Jul-1999] $)
  $}

  ${
    syl2anbr.1 $e |- ( ps <-> ph ) $.
    syl2anbr.2 $e |- ( ch <-> ta ) $.
    syl2anbr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A double syllogism inference. $)
    syl2anbr $p |- ( ( ph /\ ta ) -> th ) $=
      ( sylanbr sylan2br ) EACDGABCDFHIJ $.
      $( [29-Jul-1999] $)
  $}

  ${
    syland.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syland.2 $e |- ( ph -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism deduction. $)
    syland $p |- ( ph -> ( ( ps /\ th ) -> ta ) ) $=
      ( wi exp3a syld imp3a ) ABDEABCDEHFACDEGIJK $.
      $( [15-Dec-2004] $)
  $}

  ${
    sylan2d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan2d.2 $e |- ( ph -> ( ( th /\ ch ) -> ta ) ) $.
    $( A syllogism deduction. $)
    sylan2d $p |- ( ph -> ( ( th /\ ps ) -> ta ) ) $=
      ( ancomsd syland ) ABDEABCDEFADCEGHIH $.
      $( [15-Dec-2004] $)
  $}

  ${
    syl2and.1 $e |- ( ph -> ( ps -> ch ) ) $.
    syl2and.2 $e |- ( ph -> ( th -> ta ) ) $.
    syl2and.3 $e |- ( ph -> ( ( ch /\ ta ) -> et ) ) $.
    $( A syllogism deduction. $)
    syl2and $p |- ( ph -> ( ( ps /\ th ) -> et ) ) $=
      ( sylan2d syland ) ABCDFGADECFHIJK $.
      $( [15-Dec-2004] $)
  $}

  ${
    biimpa.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Inference from a logical equivalence. $)
    biimpa $p |- ( ( ph /\ ps ) -> ch ) $=
      ( biimpd imp ) ABCABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpar $p |- ( ( ph /\ ch ) -> ps ) $=
      ( biimprd imp ) ACBABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimpac $p |- ( ( ps /\ ph ) -> ch ) $=
      ( biimpcd imp ) BACABCDEF $.
      $( [3-May-1994] $)

    $( Inference from a logical equivalence. $)
    biimparc $p |- ( ( ch /\ ph ) -> ps ) $=
      ( biimprcd imp ) CABABCDEF $.
      $( [3-May-1994] $)
  $}

  $( Negated conjunction in terms of disjunction (DeMorgan's law).  Theorem
     *4.51 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  ianor $p |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) $=
    ( wa wn wi wo imnan pm4.62 bitr3i ) ABCDABDZEADJFABGABHI $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Conjunction in terms of disjunction (DeMorgan's law).  Theorem *4.5 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     3-Nov-2012.) $)
  anor $p |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) $=
    ( wn wo wa ianor bicomi con2bii ) ACBCDZABEZJCIABFGH $.
    $( [3-Nov-2012] $) $( [5-Aug-1993] $)

  $( Negated disjunction in terms of conjunction (DeMorgan's law).  Compare
     Theorem *4.56 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  ioran $p |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wn wi wa wo pm4.61 pm4.64 xchnxbi ) ACZBDJBCEABFJBGABHI $.
    $( [28-Sep-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ ioran as of 28-Sep-2014. $)
  ioranOLD $p |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) $=
    ( wo wn wi wa df-or notbii annim bitr4i ) ABCZDADZBEZDLBDFKMABGHLBIJ $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.52 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.52 $p |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) $=
    ( wn wa wi wo annim imor xchbinx ) ABCDABEACBFABGABHI $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.53 of [WhiteheadRussell] p. 120. $)
  pm4.53 $p |- ( -. ( ph /\ -. ps ) <-> ( -. ph \/ ps ) ) $=
    ( wn wo wa pm4.52 con2bii bicomi ) ACBDZABCEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.54 of [WhiteheadRussell] p. 120.  (The proof was shortened by
     Wolf Lammen, 5-Nov-2012.) $)
  pm4.54 $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wi wo df-an pm4.66 xchbinx ) ACZBDJBCZEAKFJBGABHI $.
    $( [28-Sep-2014] $) $( [3-Jan-2005] $)

  $( Obsolete proof of ~ pm4.54 as of 28-Sep-2014. $)
  pm4.54OLD $p |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) $=
    ( wn wa wi wo pm4.67 pm4.66 notbii bitr3i ) ACZBDKBCZEZCALFZCABGMNABHIJ $.
    $( [5-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.55 of [WhiteheadRussell] p. 120. $)
  pm4.55 $p |- ( -. ( -. ph /\ ps ) <-> ( ph \/ -. ps ) ) $=
    ( wn wo wa pm4.54 con2bii bicomi ) ABCDZACBEZCJIABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *4.56 of [WhiteheadRussell] p. 120. $)
  pm4.56 $p |- ( ( -. ph /\ -. ps ) <-> -. ( ph \/ ps ) ) $=
    ( wo wn wa ioran bicomi ) ABCDADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Disjunction in terms of conjunction (DeMorgan's law).  Compare Theorem
     *4.57 of [WhiteheadRussell] p. 120.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  oran $p |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) $=
    ( wn wa wo pm4.56 con2bii ) ACBCDABEABFG $.
    $( [12-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem *4.57 of [WhiteheadRussell] p. 120. $)
  pm4.57 $p |- ( -. ( -. ph /\ -. ps ) <-> ( ph \/ ps ) ) $=
    ( wo wn wa oran bicomi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.1 of [WhiteheadRussell] p. 111. $)
  pm3.1 $p |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) $=
    ( wa wn wo anor biimpi ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.11 of [WhiteheadRussell] p. 111. $)
  pm3.11 $p |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) $=
    ( wa wn wo anor biimpri ) ABCADBDEDABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.12 of [WhiteheadRussell] p. 111. $)
  pm3.12 $p |- ( ( -. ph \/ -. ps ) \/ ( ph /\ ps ) ) $=
    ( wn wo wa pm3.11 orri ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.13 of [WhiteheadRussell] p. 111. $)
  pm3.13 $p |- ( -. ( ph /\ ps ) -> ( -. ph \/ -. ps ) ) $=
    ( wn wo wa pm3.11 con1i ) ACBCDABEABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *3.14 of [WhiteheadRussell] p. 111. $)
  pm3.14 $p |- ( ( -. ph \/ -. ps ) -> -. ( ph /\ ps ) ) $=
    ( wa wn wo pm3.1 con2i ) ABCADBDEABFG $.
    $( [3-Jan-2005] $)

  $( Introduction of antecedent as conjunct.  Theorem *4.73 of
     [WhiteheadRussell] p. 121. $)
  iba $p |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) $=
    ( wa pm3.21 simpl impbid1 ) ABBACABDBAEF $.
    $( [24-Mar-2013] $) $( [30-Mar-1994] $)

  $( Introduction of antecedent as conjunct. $)
  ibar $p |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) $=
    ( wa pm3.2 simpr impbid1 ) ABABCABDABEF $.
    $( [24-Mar-2013] $) $( [5-Dec-1995] $)
  ${
    biantru.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantru $p |- ( ps <-> ( ps /\ ph ) ) $=
      ( wa wb iba ax-mp ) ABBADECABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    biantrur.1 $e |- ph $.
    $( A wff is equivalent to its conjunction with truth. $)
    biantrur $p |- ( ps <-> ( ph /\ ps ) ) $=
      ( wa wb ibar ax-mp ) ABABDECABFG $.
      $( [3-Aug-1994] $)
  $}

  ${
    biantrud.1 $e |- ( ph -> ps ) $.
    $( A wff is equivalent to its conjunction with truth.  (The proof was
       shortened by Wolf Lammen, 23-Oct-2013.) $)
    biantrud $p |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) $=
      ( wa wb iba syl ) ABCCBEFDBCGH $.
      $( [23-Oct-2013] $) $( [2-Aug-1994] $)

    $( A wff is equivalent to its conjunction with truth.  (The proof was
       shortened by Andrew Salmon, 7-May-2011.) $)
    biantrurd $p |- ( ph -> ( ch <-> ( ps /\ ch ) ) ) $=
      ( wa wb ibar syl ) ABCBCEFDBCGH $.
      $( [12-May-2011] $) $( [1-May-1995] $)
  $}

  ${
    jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of two
       implications. $)
    jaao $p |- ( ( ph /\ th ) -> ( ( ps \/ ta ) -> ch ) ) $=
      ( wa wi adantr adantl jaod ) ADHBCEABCIDFJDECIAGKL $.
      $( [30-Sep-1999] $)

    $( Inference disjoining and conjoining the antecedents of two
       implications.  (Contributed by Stefan Allan, 1-Nov-2008.) $)
    jaoa $p |- ( ( ph \/ th ) -> ( ( ps /\ ta ) -> ch ) ) $=
      ( wa wi adantrd adantld jaoi ) ABEHCIDABCEFJDECBGKL $.
      $( [1-Nov-2008] $)
  $}

  $( Theorem *3.44 of [WhiteheadRussell] p. 113.  (The proof was shortened by
     Wolf Lammen, 3-Oct-2013.) $)
  pm3.44 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) ->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wi id jaao ) BADZBACADZCGEHEF $.
    $( [3-Oct-2013] $) $( [3-Jan-2005] $)

  $( Disjunction of antecedents.  Compare Theorem *3.44 of [WhiteheadRussell]
     p. 113.  (The proof was shortened by Wolf Lammen, 4-Apr-2013.) $)
  jao $p |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) $=
    ( wi wo pm3.44 ex ) ABDCBDACEBDBACFG $.
    $( [4-Apr-2013] $) $( [5-Apr-1994] $)

  $( Axiom *1.2 (Taut) of [WhiteheadRussell] p. 96. $)
  pm1.2 $p |- ( ( ph \/ ph ) -> ph ) $=
    ( id jaoi ) AAAABZDC $.
    $( [10-Mar-2013] $) $( [3-Jan-2005] $)

  $( Idempotent law for disjunction.  Theorem *4.25 of [WhiteheadRussell]
     p. 117.  (The proof was shortened by Andrew Salmon, 16-Apr-2011.)  (The
     proof was shortened by Wolf Lammen, 10-Mar-2013.) $)
  oridm $p |- ( ( ph \/ ph ) <-> ph ) $=
    ( wo pm1.2 pm2.07 impbii ) AABAACADE $.
    $( [10-Mar-2013] $) $( [5-Aug-1993] $)

  $( Theorem *4.25 of [WhiteheadRussell] p. 117. $)
  pm4.25 $p |- ( ph <-> ( ph \/ ph ) ) $=
    ( wo oridm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  ${
    orim12i.1 $e |- ( ph -> ps ) $.
    orim12i.2 $e |- ( ch -> th ) $.
    $( Disjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 25-Jul-2012.) $)
    orim12i $p |- ( ( ph \/ ch ) -> ( ps \/ th ) ) $=
      ( wo orcd olcd jaoi ) ABDGCABDEHCDBFIJ $.
      $( [25-Jul-2012] $) $( [6-Jun-1994] $)
  $}

  ${
    orim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce disjunct to both sides of an implication. $)
    orim1i $p |- ( ( ph \/ ch ) -> ( ps \/ ch ) ) $=
      ( id orim12i ) ABCCDCEF $.
      $( [6-Jun-1994] $)

    $( Introduce disjunct to both sides of an implication. $)
    orim2i $p |- ( ( ch \/ ph ) -> ( ch \/ ps ) ) $=
      ( id orim12i ) CCABCEDF $.
      $( [6-Jun-1994] $)
  $}

  ${
    orbi2i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding a left disjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 12-Dec-2012.) $)
    orbi2i $p |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) $=
      ( wo biimpi orim2i biimpri impbii ) CAECBEABCABDFGBACABDHGI $.
      $( [12-Dec-2012] $) $( [5-Aug-1993] $)

    $( Inference adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1i $p |- ( ( ph \/ ch ) <-> ( ps \/ ch ) ) $=
      ( wo orcom orbi2i 3bitri ) ACECAECBEBCEACFABCDGCBFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    orbi12i.1 $e |- ( ph <-> ps ) $.
    orbi12i.2 $e |- ( ch <-> th ) $.
    $( Infer the disjunction of two equivalences. $)
    orbi12i $p |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) $=
      ( wo orbi2i orbi1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Axiom *1.5 (Assoc) of [WhiteheadRussell] p. 96. $)
  pm1.5 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo orc olcd olc orim2i jaoi ) ABACDZDBCDAJBACEFCJBCAGHI $.
    $( [3-Jan-2005] $)

  $( Swap two disjuncts.  (The proof was shortened by Wolf Lammen,
     14-Nov-2012.) $)
  or12 $p |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) $=
    ( wo pm1.5 impbii ) ABCDDBACDDABCEBACEF $.
    $( [14-Nov-2012] $) $( [5-Aug-1993] $)

  $( Associative law for disjunction.  Theorem *4.33 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  orass $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orcom or12 orbi2i 3bitri ) ABDZCDCIDACBDZDABCDZDICECABFJKACBEGH $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Theorem *2.31 of [WhiteheadRussell] p. 104. $)
  pm2.31 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ( ph \/ ps ) \/ ch ) ) $=
    ( wo orass biimpri ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.32 of [WhiteheadRussell] p. 105. $)
  pm2.32 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ( ps \/ ch ) ) ) $=
    ( wo orass biimpi ) ABDCDABCDDABCEF $.
    $( [3-Jan-2005] $)

  $( A rearrangement of disjuncts.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  or32 $p |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ps ) ) $=
    ( wo orass or12 orcom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [18-Oct-1995] $)

  $( Rearrangement of 4 disjuncts. $)
  or4 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) $=
    ( wo or12 orbi2i orass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [12-Aug-1994] $)

  $( Rearrangement of 4 disjuncts. $)
  or42 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <->
                 ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) $=
    ( wo or4 orcom orbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [10-Jan-2005] $)

  $( Distribution of disjunction over disjunction. $)
  orordi $p |- ( ( ph \/ ( ps \/ ch ) ) <->
               ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) $=
    ( wo oridm orbi1i or4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [25-Feb-1995] $)

  $( Distribution of disjunction over disjunction. $)
  orordir $p |- ( ( ( ph \/ ps ) \/ ch ) <->
               ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) $=
    ( wo oridm orbi2i or4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [25-Feb-1995] $)

  ${
    jca.1 $e |- ( ph -> ps ) $.
    jca.2 $e |- ( ph -> ch ) $.
    $( Deduce conjunction of the consequents of two implications ("join
       consequents with 'and'").  (The proof was shortened by Wolf Lammen,
       25-Oct-2012.) $)
    jca $p |- ( ph -> ( ps /\ ch ) ) $=
      ( wa pm3.2 sylc ) ABCBCFDEBCGH $.
      $( [25-Oct-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    $( Deduction conjoining the consequents of two implications.  (The proof
       was shortened by Wolf Lammen, 23-Jul-2013.) $)
    jcad $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( wa pm3.2 syl6c ) ABCDCDGEFCDHI $.
      $( [23-Jul-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    jca31.1 $e |- ( ph -> ps ) $.
    jca31.2 $e |- ( ph -> ch ) $.
    jca31.3 $e |- ( ph -> th ) $.
    $( Join three consequents.  (Contributed by Jeff Hankins, 1-Aug-2009.) $)
    jca31 $p |- ( ph -> ( ( ps /\ ch ) /\ th ) ) $=
      ( wa jca ) ABCHDABCEFIGI $.
      $( [1-Aug-2009] $)

    $( Join three consequents.  (Contributed by FL, 1-Aug-2009.) $)
    jca32 $p |- ( ph -> ( ps /\ ( ch /\ th ) ) ) $=
      ( wa jca ) ABCDHEACDFGII $.
      $( [1-Aug-2009] $)
  $}

  ${
    jcai.1 $e |- ( ph -> ps ) $.
    jcai.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction replacing implication with conjunction. $)
    jcai $p |- ( ph -> ( ps /\ ch ) ) $=
      ( mpd jca ) ABCDABCDEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    jctil.1 $e |- ( ph -> ps ) $.
    jctil.2 $e |- ch $.
    $( Inference conjoining a theorem to left of consequent in an
       implication. $)
    jctil $p |- ( ph -> ( ch /\ ps ) ) $=
      ( a1i jca ) ACBCAEFDG $.
      $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to right of consequent in an
       implication. $)
    jctir $p |- ( ph -> ( ps /\ ch ) ) $=
      ( a1i jca ) ABCDCAEFG $.
      $( [31-Dec-1993] $)
  $}

  ${
    jctl.1 $e |- ps $.
    $( Inference conjoining a theorem to the left of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctl $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jctil ) AABADCE $.
      $( [25-Oct-2012] $) $( [31-Dec-1993] $)

    $( Inference conjoining a theorem to the right of a consequent.  (The proof
       was shortened by Wolf Lammen, 24-Oct-2012.) $)
    jctr $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jctir ) AABADCE $.
      $( [25-Oct-2012] $) $( [18-Aug-1993] $)
  $}

  ${
    jctild.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctild.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to left of consequent in an
       implication. $)
    jctild $p |- ( ph -> ( ps -> ( th /\ ch ) ) ) $=
      ( a1d jcad ) ABDCADBFGEH $.
      $( [21-Apr-2005] $)
  $}

  ${
    jctird.1 $e |- ( ph -> ( ps -> ch ) ) $.
    jctird.2 $e |- ( ph -> th ) $.
    $( Deduction conjoining a theorem to right of consequent in an
       implication. $)
    jctird $p |- ( ph -> ( ps -> ( ch /\ th ) ) ) $=
      ( a1d jcad ) ABCDEADBFGH $.
      $( [21-Apr-2005] $)
  $}

  $( Conjoin antecedent to left of consequent. $)
  ancl $p |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) $=
    ( wa pm3.2 a2i ) ABABCABDE $.
    $( [15-Aug-1994] $)

  $( Conjoin antecedent to left of consequent.  Theorem *4.7 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     24-Mar-2013.) $)
  anclb $p |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) $=
    ( wa ibar pm5.74i ) ABABCABDE $.
    $( [24-Mar-2013] $) $( [25-Jul-1999] $)

  $( Theorem *5.42 of [WhiteheadRussell] p. 125. $)
  pm5.42 $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa ibar imbi2d pm5.74i ) ABCDBACEZDACIBACFGH $.
    $( [3-Jan-2005] $)

  $( Conjoin antecedent to right of consequent. $)
  ancr $p |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) $=
    ( wa pm3.21 a2i ) ABBACABDE $.
    $( [15-Aug-1994] $)

  $( Conjoin antecedent to right of consequent.  (The proof was shortened by
     Wolf Lammen, 24-Mar-2013.) $)
  ancrb $p |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) $=
    ( wa iba pm5.74i ) ABBACABDE $.
    $( [24-Mar-2013] $) $( [25-Jul-1999] $)

  ${
    ancli.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to left of consequent. $)
    ancli $p |- ( ph -> ( ph /\ ps ) ) $=
      ( id jca ) AABADCE $.
      $( [12-Aug-1993] $)
  $}

  ${
    ancri.1 $e |- ( ph -> ps ) $.
    $( Deduction conjoining antecedent to right of consequent. $)
    ancri $p |- ( ph -> ( ps /\ ph ) ) $=
      ( id jca ) ABACADE $.
      $( [15-Aug-1994] $)
  $}

  ${
    ancld.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancld $p |- ( ph -> ( ps -> ( ps /\ ch ) ) ) $=
      ( idd jcad ) ABBCABEDF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)
  $}

  ${
    ancrd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 1-Nov-2012.) $)
    ancrd $p |- ( ph -> ( ps -> ( ch /\ ps ) ) ) $=
      ( idd jcad ) ABCBDABEF $.
      $( [1-Nov-2012] $) $( [15-Aug-1994] $)
  $}

  $( Conjoin antecedent to left of consequent in nested implication.  (The
     proof was shortened by Wolf Lammen, 14-Jul-2013.) $)
  anc2l $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) $=
    ( wi wa pm5.42 biimpi ) ABCDDABACEDDABCFG $.
    $( [14-Jul-2013] $) $( [10-Aug-1994] $)

  $( Conjoin antecedent to right of consequent in nested implication. $)
  anc2r $p |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) $=
    ( wi wa pm3.21 imim2d a2i ) ABCDBCAEZDACIBACFGH $.
    $( [15-Aug-1994] $)

  ${
    anc2li.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to left of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2li $p |- ( ph -> ( ps -> ( ph /\ ch ) ) ) $=
      ( id jctild ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [10-Aug-1994] $)
  $}

  ${
    anc2ri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction conjoining antecedent to right of consequent in nested
       implication.  (The proof was shortened by Wolf Lammen, 7-Dec-2012.) $)
    anc2ri $p |- ( ph -> ( ps -> ( ch /\ ph ) ) ) $=
      ( id jctird ) ABCADAEF $.
      $( [7-Dec-2012] $) $( [15-Aug-1994] $)
  $}

  $( Theorem *3.41 of [WhiteheadRussell] p. 113. $)
  pm3.41 $p |- ( ( ph -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpl imim1i ) ABDACABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.42 of [WhiteheadRussell] p. 113. $)
  pm3.42 $p |- ( ( ps -> ch ) -> ( ( ph /\ ps ) -> ch ) ) $=
    ( wa simpr imim1i ) ABDBCABEF $.
    $( [3-Jan-2005] $)

  $( Conjunction implies implication.  Theorem *3.4 of [WhiteheadRussell]
     p. 113. $)
  pm3.4 $p |- ( ( ph /\ ps ) -> ( ph -> ps ) ) $=
    ( wa simpr a1d ) ABCBAABDE $.
    $( [31-Jul-1995] $)

  $( Conjunction with implication.  Compare Theorem *4.45 of [WhiteheadRussell]
     p. 119. $)
  pm4.45im $p |- ( ph <-> ( ph /\ ( ps -> ph ) ) ) $=
    ( wi wa ax-1 ancli simpl impbii ) AABACZDAIABEFAIGH $.
    $( [17-May-1998] $)

  ${
    anim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction.  (The proof was
       shortened by Wolf Lammen, 18-Dec-2013.) $)
    anim12d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) $=
      ( wa idd syl2and ) ABCDECEHZFGAKIJ $.
      $( [18-Dec-2013] $) $( [3-Apr-1994] $)
  $}

  ${
    anim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Add a conjunct to right of antecedent and consequent in a deduction. $)
    anim1d $p |- ( ph -> ( ( ps /\ th ) -> ( ch /\ th ) ) ) $=
      ( idd anim12d ) ABCDDEADFG $.
      $( [3-Apr-1994] $)

    $( Add a conjunct to left of antecedent and consequent in a deduction. $)
    anim2d $p |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) $=
      ( idd anim12d ) ADDBCADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    anim12i.1 $e |- ( ph -> ps ) $.
    anim12i.2 $e |- ( ch -> th ) $.
    $( Conjoin antecedents and consequents of two premises.  (The proof was
       shortened by Wolf Lammen, 14-Dec-2013.) $)
    anim12i $p |- ( ( ph /\ ch ) -> ( ps /\ th ) ) $=
      ( wa id syl2an ) ABDBDGZCEFJHI $.
      $( [14-Dec-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    anim1i.1 $e |- ( ph -> ps ) $.
    $( Introduce conjunct to both sides of an implication. $)
    anim1i $p |- ( ( ph /\ ch ) -> ( ps /\ ch ) ) $=
      ( id anim12i ) ABCCDCEF $.
      $( [5-Aug-1993] $)

    $( Introduce conjunct to both sides of an implication. $)
    anim2i $p |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) $=
      ( id anim12i ) CCABCEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    anim12ii.1 $e |- ( ph -> ( ps -> ch ) ) $.
    anim12ii.2 $e |- ( th -> ( ps -> ta ) ) $.
    $( Conjoin antecedents and consequents in a deduction.  (The proof was
       shortened by Wolf Lammen, 19-Jul-2013.) $)
    anim12ii $p |- ( ( ph /\ th ) -> ( ps -> ( ch /\ ta ) ) ) $=
      ( wa wi adantr adantl jcad ) ADHBCEABCIDFJDBEIAGKL $.
      $( [19-Jul-2013] $) $( [11-Nov-2007] $)
  $}

  $( Theorem *3.47 of [WhiteheadRussell] p. 113.  It was proved by Leibniz, and
     it evidently pleased him enough to call it 'praeclarum theorema' (splendid
     theorem).  (The proof was shortened by Wolf Lammen, 7-Apr-2013.) $)
  prth $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
              ( ( ph /\ ch ) -> ( ps /\ th ) ) ) $=
    ( wi wa simpl simpr anim12d ) ABEZCDEZFABCDJKGJKHI $.
    $( [7-Apr-2013] $) $( [12-Aug-1993] $)

  $( Theorem *2.3 of [WhiteheadRussell] p. 104. $)
  pm2.3 $p |- ( ( ph \/ ( ps \/ ch ) ) -> ( ph \/ ( ch \/ ps ) ) ) $=
    ( wo pm1.4 orim2i ) BCDCBDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.41 of [WhiteheadRussell] p. 106. $)
  pm2.41 $p |- ( ( ps \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo olc id jaoi ) BABCZGBADGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.42 of [WhiteheadRussell] p. 106. $)
  pm2.42 $p |- ( ( -. ph \/ ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wn wi pm2.21 id jaoi ) ACABDZHABEHFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.4 of [WhiteheadRussell] p. 106. $)
  pm2.4 $p |- ( ( ph \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) $=
    ( wo orc id jaoi ) AABCZGABDGEF $.
    $( [3-Jan-2005] $)

  ${
    pm2.65da.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.65da.2 $e |- ( ( ph /\ ps ) -> -. ch ) $.
    $( Deduction rule for proof by contradiction. $)
    pm2.65da $p |- ( ph -> -. ps ) $=
      ( ex wn pm2.65d ) ABCABCDFABCGEFH $.
      $( [12-Jun-2014] $)
  $}

  $( Theorem *4.44 of [WhiteheadRussell] p. 119. $)
  pm4.44 $p |- ( ph <-> ( ph \/ ( ph /\ ps ) ) ) $=
    ( wa wo orc id simpl jaoi impbii ) AAABCZDAJEAAJAFABGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *4.14 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 23-Oct-2012.) $)
  pm4.14 $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wi wn wa con34b imbi2i impexp 3bitr4i ) ABCDZDACEZBEZDZDABFCDALFMDKNABCGH
    ABCIALMIJ $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem *3.37 (Transp) of [WhiteheadRussell] p. 112.  (The proof was
     shortened by Wolf Lammen, 23-Oct-2012.) $)
  pm3.37 $p |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) $=
    ( wa wi wn pm4.14 biimpi ) ABDCEACFDBFEABCGH $.
    $( [23-Oct-2012] $) $( [3-Jan-2005] $)

  $( Theorem to move a conjunct in and out of a negation. $)
  nan $p |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ph /\ ps ) -> -. ch ) ) $=
    ( wa wn wi impexp imnan imbi2i bitr2i ) ABDCEZFABKFZFABCDEZFABKGLMABCHIJ $.
    $( [9-Nov-2003] $)

  $( Theorem *4.15 of [WhiteheadRussell] p. 117.  (The proof was shortened by
     Wolf Lammen, 18-Nov-2012.) $)
  pm4.15 $p |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ( ps /\ ch ) -> -. ph ) ) $=
    ( wa wn wi con2b nan bitr2i ) BCDZAEFAJEFABDCEFJAGABCHI $.
    $( [18-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.78 of [WhiteheadRussell] p. 121.  (The proof was shortened by
     Wolf Lammen, 19-Nov-2012.) $)
  pm4.78 $p |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <->
                ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wo wi orordi imor orbi12i 3bitr4ri ) ADZBCEZEKBEZKCEZEALFABFZACFZEKBCG
    ALHOMPNABHACHIJ $.
    $( [19-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.79 of [WhiteheadRussell] p. 121.  (The proof was shortened by
     Wolf Lammen, 27-Jun-2013.) $)
  pm4.79 $p |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <->
                ( ( ps /\ ch ) -> ph ) ) $=
    ( wi wo wa id jaoa wn simplim pm3.3 syl5 orrd impbii ) BADZCADZEBCFADZOBAPC
    OGPGHQOPOIBQPBAJBCAKLMN $.
    $( [27-Jun-2013] $) $( [3-Jan-2005] $)

  $( Theorem *4.87 of [WhiteheadRussell] p. 122.  (The proof was shortened by
     Eric Schmidt, 26-Oct-2006.) $)
  pm4.87 $p |- ( ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\
                ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) /\
                ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ) $=
    ( wa wi wb impexp bi2.04 pm3.2i bicomi ) ABDCEABCEEZFZKBACEEZFZDMBADCEZFLNA
    BCGABCHIOMBACGJI $.
    $( [27-Oct-2006] $) $( [3-Jan-2005] $)

  $( Theorem *3.33 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.33 $p |- ( ( ( ph -> ps ) /\ ( ps -> ch ) ) -> ( ph -> ch ) ) $=
    ( wi imim1 imp ) ABDBCDACDABCEF $.
    $( [3-Jan-2005] $)

  $( Theorem *3.34 (Syll) of [WhiteheadRussell] p. 112. $)
  pm3.34 $p |- ( ( ( ps -> ch ) /\ ( ph -> ps ) ) -> ( ph -> ch ) ) $=
    ( wi imim2 imp ) BCDABDACDBCAEF $.
    $( [3-Jan-2005] $)

  $( Conjunctive detachment.  Theorem *3.35 of [WhiteheadRussell] p. 112. $)
  pm3.35 $p |- ( ( ph /\ ( ph -> ps ) ) -> ps ) $=
    ( wi pm2.27 imp ) AABCBABDE $.
    $( [14-Dec-2002] $)

  $( Theorem *5.31 of [WhiteheadRussell] p. 125. $)
  pm5.31 $p |- ( ( ch /\ ( ph -> ps ) ) -> ( ph -> ( ps /\ ch ) ) ) $=
    ( wi wa pm3.21 imim2d imp ) CABDABCEZDCBIACBFGH $.
    $( [3-Jan-2005] $)

  ${
    imp4.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( An importation inference. $)
    imp4a $p |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $=
      ( wi wa impexp syl6ibr ) ABCDEGGCDHEGFCDEIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4b $p |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi imp4a imp ) ABCDGEHABCDEFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4c $p |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $=
      ( wa wi imp3a ) ABCGDEABCDEHFII $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp4d $p |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $=
      ( wa imp4a imp3a ) ABCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp41 $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $=
      ( wa wi imp imp31 ) ABGCDEABCDEHHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp42 $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $=
      ( wa wi imp32 imp ) ABCGGDEABCDEHFIJ $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp43 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa imp4b imp ) ABGCDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp44 $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $=
      ( wa imp4c imp ) ABCGDGEABCDEFHI $.
      $( [26-Apr-1994] $)

    $( An importation inference. $)
    imp45 $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $=
      ( wa imp4d imp ) ABCDGGEABCDEFHI $.
      $( [26-Apr-1994] $)

  $}

  ${
    imp5.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $.
    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5a $p |- ( ph -> ( ps -> ( ch -> ( ( th /\ ta ) -> et ) ) ) ) $=
      ( wi wa pm3.31 syl8 ) ABCDEFHHDEIFHGDEFJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5d $p |- ( ( ( ph /\ ps ) /\ ch ) -> ( ( th /\ ta ) -> et ) ) $=
      ( wa wi imp31 imp3a ) ABHCHDEFABCDEFIIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp5g $p |- ( ( ph /\ ps ) -> ( ( ( ch /\ th ) /\ ta ) -> et ) ) $=
      ( wa wi imp imp4c ) ABHCDEFABCDEFIIIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp55 $p |- ( ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) /\ ta ) -> et ) $=
      ( wa wi imp4a imp42 ) ABCDHEFABCDEFIGJK $.
      $( [7-Jul-2009] $)

    $( An importation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    imp511 $p |- ( ( ph /\ ( ( ps /\ ( ch /\ th ) ) /\ ta ) ) -> et ) $=
      ( wa wi imp4a imp44 ) ABCDHEFABCDEFIGJK $.
      $( [7-Jul-2009] $)
  $}

  ${
    expimpd.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Exportation followed by a deduction version of importation. $)
    expimpd $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( wi ex imp3a ) ABCDABCDFEGH $.
      $( [6-Sep-2008] $)
  $}

  ${
    exp31.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An exportation inference. $)
    exp31 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wi wa ex ) ABCDFABGCDEHH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp32.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An exportation inference. $)
    exp32 $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( wa ex exp3a ) ABCDABCFDEGH $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4a.1 $e |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) $.
    $( An exportation inference. $)
    exp4a $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi impexp syl6ib ) ABCDGEHCDEHHFCDEIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4b.1 $e |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) $.
    $( An exportation inference.  (The proof was shortened by Wolf Lammen,
       23-Nov-2012.) $)
    exp4b $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa wi ex exp4a ) ABCDEABCDGEHFIJ $.
      $( [23-Nov-2012] $) $( [26-Apr-1994] $)
  $}

  ${
    exp4c.1 $e |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4c $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp3a ) ABCDEGABCHDEFII $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp4d.1 $e |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) $.
    $( An exportation inference. $)
    exp4d $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp3a exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp41.1 $e |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp41 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa ex exp31 ) ABCDEGABHCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp42.1 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An exportation inference. $)
    exp42 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp31 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp43.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp43 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa ex exp4b ) ABCDEABGCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp44.1 $e |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) $.
    $( An exportation inference. $)
    exp44 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi wa exp32 exp3a ) ABCDEGABCHDEFIJ $.
      $( [26-Apr-1994] $)
  $}

  ${
    exp45.1 $e |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) $.
    $( An exportation inference. $)
    exp45 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wa exp32 exp4a ) ABCDEABCDGEFHI $.
      $( [26-Apr-1994] $)
  $}

  ${
    expr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Export a wff from a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    expr $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi exp32 imp ) ABCDFABCDEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    exp5c.1 $e |- ( ph -> ( ( ps /\ ch ) -> ( ( th /\ ta ) -> et ) ) ) $.
    $( An exportation inference.  (Contributed by Jeff Hankins, 7-Jul-2009.) $)
    exp5c $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi wa exp4a exp3a ) ABCDEFHHABCIDEFGJK $.
      $( [7-Jul-2009] $)
  $}

  ${
    exp53.1 $e |- ( ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) /\ ta ) -> et ) $.
    $( An exportation inference.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    exp53 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi wa ex exp43 ) ABCDEFHABICDIIEFGJK $.
      $( [21-Feb-2011] $) $( [7-Jul-2009] $)
  $}

  ${
    expl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Export a wff from a left conjunct.  (Contributed by Jeff Hankins,
       28-Aug-2009.) $)
    expl $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( exp31 imp3a ) ABCDABCDEFG $.
      $( [28-Aug-2009] $)
  $}

  ${
    impr.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Import a wff into a right conjunct.  (Contributed by Jeff Hankins,
       30-Aug-2009.) $)
    impr $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( wi ex imp32 ) ABCDABCDFEGH $.
      $( [21-Feb-2011] $) $( [28-Aug-2009] $)
  $}

  ${
    impl.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Export a wff from a left conjunct.  (Contributed by Mario Carneiro,
       9-Jul-2014.) $)
    impl $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( exp3a imp31 ) ABCDABCDEFG $.
      $( [9-Jul-2014] $)
  $}

  ${
    impac.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Importation with conjunction in consequent. $)
    impac $p |- ( ( ph /\ ps ) -> ( ch /\ ps ) ) $=
      ( wa ancrd imp ) ABCBEABCDFG $.
      $( [9-Aug-1994] $)
  $}

  ${
    exbiri.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Inference form of ~ exbir .  This proof is ~ exbiriVD automatically
       translated and minimized.  (Contributed by Alan Sare, 31-Dec-2011.)
       (The proof was shortened by Wolf Lammen, 27-Jan-2013.) $)
    exbiri $p |- ( ph -> ( ps -> ( th -> ch ) ) ) $=
      ( wa biimpar exp31 ) ABDCABFCDEGH $.
      $( [27-Jan-2013] $) $( [31-Dec-2011] $)
  $}

  ${
    pm3.26bda.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    $( Deduction eliminating a conjunct. $)
    simprbda $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa biimpa simpld ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)

    $( Deduction eliminating a conjunct. $)
    simplbda $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa biimpa simprd ) ABFCDABCDFEGH $.
      $( [22-Oct-2007] $)
  $}

  ${
    pm3.26bi2.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Deduction eliminating a conjunct.  Automatically derived from
       ~ simplbi2VD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    simplbi2 $p |- ( ps -> ( ch -> ph ) ) $=
      ( wa biimpri ex ) BCAABCEDFG $.
      $( [31-Dec-2011] $)
  $}

  $( A theorem similar to the standard definition of the biconditional.
     Definition of [Margaris] p. 49. $)
  dfbi2 $p |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) $=
    ( wb wi wn wa dfbi1 df-an bitr4i ) ABCABDZBADZEDEJKFABGJKHI $.
    $( [5-Aug-1993] $)

  $( Definition ~ df-bi rewritten in an abbreviated form to help intuitive
     understanding of that definition.  Note that it is a conjunction of two
     implications; one which asserts properties that follow from the
     biconditional and one which asserts properties that imply the
     biconditional. $)
  dfbi $p |- ( ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) )
        /\ ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ) $=
    ( wb wi wa dfbi2 biimpi biimpri pm3.2i ) ABCZABDBADEZDKJDJKABFZGJKLHI $.
    $( [15-Aug-2008] $)

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120.  (The proof was shortened by Wolf Lammen,
     2-Dec-2012.) $)
  pm4.71 $p |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) $=
    ( wa wi wb simpl biantru anclb dfbi2 3bitr4i ) AABCZDZLKADZCABDAKEMLABFGABH
    AKIJ $.
    $( [2-Dec-2012] $) $( [5-Aug-1993] $)

  $( Implication in terms of biconditional and conjunction.  Theorem *4.71 of
     [WhiteheadRussell] p. 120 (with conjunct reversed). $)
  pm4.71r $p |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) $=
    ( wi wa wb pm4.71 ancom bibi2i bitri ) ABCAABDZEABADZEABFJKAABGHI $.
    $( [25-Jul-1999] $)

  ${
    pm4.71i.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71i $p |- ( ph <-> ( ph /\ ps ) ) $=
      ( wi wa wb pm4.71 mpbi ) ABDAABEFCABGH $.
      $( [4-Jan-2004] $)
  $}

  ${
    pm4.71ri.1 $e |- ( ph -> ps ) $.
    $( Inference converting an implication to a biconditional with
       conjunction.  Inference from Theorem *4.71 of [WhiteheadRussell] p. 120
       (with conjunct reversed). $)
    pm4.71ri $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wi wa wb pm4.71r mpbi ) ABDABAEFCABGH $.
      $( [1-Dec-2003] $)
  $}

  ${
    pm4.71rd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction converting an implication to a biconditional with
       conjunction.  Deduction from Theorem *4.71 of [WhiteheadRussell]
       p. 120. $)
    pm4.71rd $p |- ( ph -> ( ps <-> ( ch /\ ps ) ) ) $=
      ( wi wa wb pm4.71r sylib ) ABCEBCBFGDBCHI $.
      $( [10-Feb-2005] $)
  $}

  $( Distribution of implication over biconditional.  Theorem *5.32 of
     [WhiteheadRussell] p. 125. $)
  pm5.32 $p |- ( ( ph -> ( ps <-> ch ) ) <->
               ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wi wn wa notbi imbi2i pm5.74 3bitri df-an bibi12i bitr4i ) ABCDZEZABFZ
    EZFZACFZEZFZDZABGZACGZDPAQTDZERUADUCOUFABCHIAQTJRUAHKUDSUEUBABLACLMN $.
    $( [1-Aug-1994] $)

  ${
    pm5.32i.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32i $p |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) $=
      ( wb wi wa pm5.32 mpbi ) ABCEFABGACGEDABCHI $.
      $( [1-Aug-1994] $)

    $( Distribution of implication over biconditional (inference rule). $)
    pm5.32ri $p |- ( ( ps /\ ph ) <-> ( ch /\ ph ) ) $=
      ( wa pm5.32i ancom 3bitr4i ) ABEACEBAECAEABCDFBAGCAGH $.
      $( [12-Mar-1995] $)
  $}

  ${
    pm5.32d.1 $e |- ( ph -> ( ps -> ( ch <-> th ) ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32d $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb wi wa pm5.32 sylib ) ABCDFGBCHBDHFEBCDIJ $.
      $( [29-Oct-1996] $)

    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32rd $p |- ( ph -> ( ( ch /\ ps ) <-> ( th /\ ps ) ) ) $=
      ( wa pm5.32d ancom 3bitr4g ) ABCFBDFCBFDBFABCDEGCBHDBHI $.
      $( [25-Dec-2004] $)
  $}

  ${
    pm5.32da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.32da $p |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) $=
      ( wb ex pm5.32d ) ABCDABCDFEGH $.
      $( [9-Dec-2006] $)
  $}

  ${
    biadan2.1 $e |- ( ph -> ps ) $.
    biadan2.2 $e |- ( ps -> ( ph <-> ch ) ) $.
    $( Add a conjunction to an equivalence.  (Contributed by Jeff Madsen,
       20-Jun-2011.) $)
    biadan2 $p |- ( ph <-> ( ps /\ ch ) ) $=
      ( wa pm4.71ri pm5.32i bitri ) ABAFBCFABDGBACEHI $.
      $( [20-Jun-2011] $)
  $}

  $( Theorem *4.24 of [WhiteheadRussell] p. 117. $)
  pm4.24 $p |- ( ph <-> ( ph /\ ph ) ) $=
    ( id pm4.71i ) AAABC $.
    $( [14-Mar-2014] $) $( [3-Jan-2005] $)

  $( Idempotent law for conjunction.  (The proof was shortened by Wolf Lammen,
     14-Mar-2014.) $)
  anidm $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa pm4.24 bicomi ) AAABACD $.
    $( [14-Mar-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ anidm as of 14-Mar-2014. $)
  anidmOLD $p |- ( ( ph /\ ph ) <-> ph ) $=
    ( wa simpl id ancli impbii ) AABAAACAAADEF $.
    $( [6-Nov-2012] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ pm4.24 as of 14-Mar-2014. $)
  pm4.24OLD $p |- ( ph <-> ( ph /\ ph ) ) $=
    ( wa anidm bicomi ) AABAACD $.
    $( [3-Jan-2005] $)

  ${
    anidms.1 $e |- ( ( ph /\ ph ) -> ps ) $.
    $( Inference from idempotent law for conjunction. $)
    anidms $p |- ( ph -> ps ) $=
      ( ex pm2.43i ) ABAABCDE $.
      $( [15-Jun-1994] $)
  $}

  $( Conjunction idempotence with antecedent.  (Contributed by Roy F. Longton,
     8-Aug-2005.) $)
  anidmdbi $p |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) $=
    ( wa anidm imbi2i ) BBCBABDE $.
    $( [8-Aug-2005] $)

  ${
    anasss.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anasss $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( exp31 imp32 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  ${
    anassrs.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Associative law for conjunction applied to antecedent (eliminates
       syllogism). $)
    anassrs $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( exp32 imp31 ) ABCDABCDEFG $.
      $( [15-Nov-2002] $)
  $}

  $( Associative law for conjunction.  Theorem *4.32 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 24-Nov-2012.) $)
  anass $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( wa id anassrs anasss impbii ) ABDCDZABCDDZABCJJEFABCIIEGH $.
    $( [24-Nov-2012] $) $( [5-Aug-1993] $)

  ${
    sylanl1.1 $e |- ( ph -> ps ) $.
    sylanl1.2 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    sylanl1 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa anim1i sylan ) ACHBCHDEABCFIGJ $.
      $( [10-Mar-2005] $)
  $}

  ${
    sylanl2.1 $e |- ( ph -> ch ) $.
    sylanl2.2 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    sylanl2 $p |- ( ( ( ps /\ ph ) /\ th ) -> ta ) $=
      ( wa anim2i sylan ) BAHBCHDEACBFIGJ $.
      $( [1-Jan-2005] $)
  $}

  ${
    sylanr1.1 $e |- ( ph -> ch ) $.
    sylanr1.2 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
    $( A syllogism inference. $)
    sylanr1 $p |- ( ( ps /\ ( ph /\ th ) ) -> ta ) $=
      ( wa anim1i sylan2 ) ADHBCDHEACDFIGJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylanr2.1 $e |- ( ph -> th ) $.
    sylanr2.2 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
    $( A syllogism inference. $)
    sylanr2 $p |- ( ( ps /\ ( ch /\ ph ) ) -> ta ) $=
      ( wa anim2i sylan2 ) CAHBCDHEADCFIGJ $.
      $( [9-Apr-2005] $)
  $}

  ${
    sylani.1 $e |- ( ph -> ch ) $.
    sylani.2 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    sylani $p |- ( ps -> ( ( ph /\ th ) -> ta ) ) $=
      ( wi a1i syland ) BACDEACHBFIGJ $.
      $( [2-May-1996] $)
  $}

  ${
    sylan2i.1 $e |- ( ph -> th ) $.
    sylan2i.2 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    sylan2i $p |- ( ps -> ( ( ch /\ ph ) -> ta ) ) $=
      ( wi a1i sylan2d ) BADCEADHBFIGJ $.
      $( [1-Aug-1994] $)
  $}

  ${
    syl2ani.1 $e |- ( ph -> ch ) $.
    syl2ani.2 $e |- ( et -> th ) $.
    syl2ani.3 $e |- ( ps -> ( ( ch /\ th ) -> ta ) ) $.
    $( A syllogism inference. $)
    syl2ani $p |- ( ps -> ( ( ph /\ et ) -> ta ) ) $=
      ( sylan2i sylani ) ABCFEGFBCDEHIJK $.
      $( [3-Aug-1999] $)
  $}

  ${
    sylan9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents.  (The
       proof was shortened by Andrew Salmon, 7-May-2011.) $)
    sylan9 $p |- ( ( ph /\ th ) -> ( ps -> ta ) ) $=
      ( wi syl9 imp ) ADBEHABCDEFGIJ $.
      $( [12-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sylan9r.1 $e |- ( ph -> ( ps -> ch ) ) $.
    sylan9r.2 $e |- ( th -> ( ch -> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9r $p |- ( ( th /\ ph ) -> ( ps -> ta ) ) $=
      ( wi syl9r imp ) DABEHABCDEFGIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    mtand.1 $e |- ( ph -> -. ch ) $.
    mtand.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( A modus tollens deduction.  (Contributed by Jeff Hankins,
       19-Aug-2009.) $)
    mtand $p |- ( ph -> -. ps ) $=
      ( ex mtod ) ABCDABCEFG $.
      $( [21-Feb-2011] $) $( [15-Jul-2009] $)
  $}

  ${
    mtord.1 $e |- ( ph -> -. ch ) $.
    mtord.2 $e |- ( ph -> -. th ) $.
    mtord.3 $e |- ( ph -> ( ps -> ( ch \/ th ) ) ) $.
    $( A modus tollens deduction involving disjunction.  (Contributed by Jeff
       Hankins, 15-Jul-2009.) $)
    mtord $p |- ( ph -> -. ps ) $=
      ( wn wo wi df-or syl6ib mpid mtod ) ABDFABCHZDEABCDIODJGCDKLMN $.
      $( [15-Jul-2009] $)
  $}

  ${
    syl2anc.1 $e |- ( ph -> ps ) $.
    syl2anc.2 $e |- ( ph -> ch ) $.
    syl2anc.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with contraction. $)
    syl2anc $p |- ( ph -> th ) $=
      ( ex sylc ) ABCDEFBCDGHI $.
      $( [16-Mar-2012] $)
  $}

  ${
    sylancl.1 $e |- ( ph -> ps ) $.
    sylancl.2 $e |- ch $.
    sylancl.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancl $p |- ( ph -> th ) $=
      ( a1i syl2anc ) ABCDECAFHGI $.
      $( [18-Apr-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    sylancr.1 $e |- ps $.
    sylancr.2 $e |- ( ph -> ch ) $.
    sylancr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( Syllogism inference combined with modus ponens.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    sylancr $p |- ( ph -> th ) $=
      ( a1i syl2anc ) ABCDBAEHFGI $.
      $( [2-Sep-2009] $)
  $}

  ${
    sylanbrc.1 $e |- ( ph -> ps ) $.
    sylanbrc.2 $e |- ( ph -> ch ) $.
    sylanbrc.3 $e |- ( th <-> ( ps /\ ch ) ) $.
    $( Syllogism inference.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    sylanbrc $p |- ( ph -> th ) $=
      ( wa jca sylibr ) ABCHDABCEFIGJ $.
      $( [11-Oct-2010] $) $( [2-Sep-2009] $)
  $}

  ${
    sylancb.1 $e |- ( ph <-> ps ) $.
    sylancb.2 $e |- ( ph <-> ch ) $.
    sylancb.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference combined with contraction. $)
    sylancb $p |- ( ph -> th ) $=
      ( syl2anb anidms ) ADABCDAEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancbr.1 $e |- ( ps <-> ph ) $.
    sylancbr.2 $e |- ( ch <-> ph ) $.
    sylancbr.3 $e |- ( ( ps /\ ch ) -> th ) $.
    $( A syllogism inference combined with contraction. $)
    sylancbr $p |- ( ph -> th ) $=
      ( syl2anbr anidms ) ADABCDAEFGHI $.
      $( [3-Sep-2004] $)
  $}

  ${
    sylancom.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    sylancom.2 $e |- ( ( ch /\ ps ) -> th ) $.
    $( Syllogism inference with commutation of antecents. $)
    sylancom $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa simpr syl2anc ) ABGCBDEABHFI $.
      $( [2-Jul-2008] $)
  $}

  ${
    mpdan.1 $e |- ( ph -> ps ) $.
    mpdan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 22-Nov-2012.) $)
    mpdan $p |- ( ph -> ch ) $=
      ( id syl2anc ) AABCAFDEG $.
      $( [22-Nov-2012] $) $( [23-May-1999] $)
  $}

  ${
    mpancom.1 $e |- ( ps -> ph ) $.
    mpancom.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens with commutation of antecedents.
       (The proof was shortened by Wolf Lammen, 7-Apr-2013.) $)
    mpancom $p |- ( ps -> ch ) $=
      ( id syl2anc ) BABCDBFEG $.
      $( [7-Apr-2013] $) $( [28-Oct-2003] $)
  $}

  ${
    mpan.1 $e |- ph $.
    mpan.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpan $p |- ( ps -> ch ) $=
      ( a1i mpancom ) ABCABDFEG $.
      $( [7-Apr-2013] $) $( [30-Aug-1993] $)
  $}

  ${
    mpan2.1 $e |- ps $.
    mpan2.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2 $p |- ( ph -> ch ) $=
      ( a1i mpdan ) ABCBADFEG $.
      $( [19-Nov-2012] $) $( [16-Sep-1993] $)
  $}

  ${
    mp2an.1 $e |- ph $.
    mp2an.2 $e |- ps $.
    mp2an.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( An inference based on modus ponens. $)
    mp2an $p |- ch $=
      ( mpan ax-mp ) BCEABCDFGH $.
      $( [13-Apr-1995] $)
  $}

  ${
    mp4an.1 $e |- ph $.
    mp4an.2 $e |- ps $.
    mp4an.3 $e |- ch $.
    mp4an.4 $e |- th $.
    mp4an.5 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens.  (Contributed by Jeff Madsen,
       15-Jun-2011.) $)
    mp4an $p |- ta $=
      ( wa pm3.2i mp2an ) ABKCDKEABFGLCDHILJM $.
      $( [15-Jun-2010] $)
  $}

  ${
    mpan2d.1 $e |- ( ph -> ch ) $.
    mpan2d.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mpan2d $p |- ( ph -> ( ps -> th ) ) $=
      ( exp3a mpid ) ABCDEABCDFGH $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpand.1 $e |- ( ph -> ps ) $.
    mpand.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpand $p |- ( ph -> ( ch -> th ) ) $=
      ( ancomsd mpan2d ) ACBDEABCDFGH $.
      $( [7-Apr-2013] $) $( [12-Dec-2004] $)
  $}

  ${
    mpani.1 $e |- ps $.
    mpani.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpani $p |- ( ph -> ( ch -> th ) ) $=
      ( a1i mpand ) ABCDBAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)
  $}

  ${
    mpan2i.1 $e |- ch $.
    mpan2i.2 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 19-Nov-2012.) $)
    mpan2i $p |- ( ph -> ( ps -> th ) ) $=
      ( a1i mpan2d ) ABCDCAEGFH $.
      $( [19-Nov-2012] $) $( [10-Apr-1994] $)
  $}

  ${
    mp2ani.1 $e |- ps $.
    mp2ani.2 $e |- ch $.
    mp2ani.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( An inference based on modus ponens. $)
    mp2ani $p |- ( ph -> th ) $=
      ( mpani mpi ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mp2and.1 $e |- ( ph -> ps ) $.
    mp2and.2 $e |- ( ph -> ch ) $.
    mp2and.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( A deduction based on modus ponens. $)
    mp2and $p |- ( ph -> th ) $=
      ( mpand mpd ) ACDFABCDEGHI $.
      $( [12-Dec-2004] $)
  $}

  ${
    mpanl1.1 $e |- ph $.
    mpanl1.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpanl1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa jctl sylan ) BABGCDBAEHFI $.
      $( [7-Apr-2013] $) $( [16-Aug-1994] $)
  $}

  ${
    mpanl2.1 $e |- ps $.
    mpanl2.2 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanl2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( wa jctr sylan ) AABGCDABEHFI $.
      $( [22-Nov-2012] $) $( [16-Aug-1994] $)
  $}

  ${
    mpanl12.1 $e |- ph $.
    mpanl12.2 $e |- ps $.
    mpanl12.3 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanl12 $p |- ( ch -> th ) $=
      ( mpanl1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mpanr1.1 $e |- ps $.
    mpanr1.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    mpanr1 $p |- ( ( ph /\ ch ) -> th ) $=
      ( anassrs mpanl2 ) ABCDEABCDFGH $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr2.1 $e |- ch $.
    mpanr2.2 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.)  (The proof was shortened by Wolf Lammen,
       7-Apr-2013.) $)
    mpanr2 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa jctr sylan2 ) BABCGDBCEHFI $.
      $( [7-Apr-2013] $) $( [3-May-1994] $)

    $( Obsolete proof of ~ mpanr2 as of 7-Apr-2013.) $)
    mpanr2OLD $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa expr mpi ) ABGCDEABCDFHI $.
      $( [12-May-2011] $) $( [3-May-1994] $)
  $}

  ${
    mpanr12.1 $e |- ps $.
    mpanr12.2 $e |- ch $.
    mpanr12.3 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpanr12 $p |- ( ph -> th ) $=
      ( mpanr1 mpan2 ) ACDFABCDEGHI $.
      $( [24-Jul-2009] $)
  $}

  ${
    mpanlr1.1 $e |- ps $.
    mpanlr1.2 $e |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens.  (The proof was shortened by Wolf
       Lammen, 7-Apr-2013.) $)
    mpanlr1 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa jctl sylanl2 ) CABCHDECBFIGJ $.
      $( [7-Apr-2013] $) $( [30-Dec-2004] $)
  $}

  ${
    pm5.74da.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Distribution of implication over biconditional (deduction rule). $)
    pm5.74da $p |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) $=
      ( wb ex pm5.74d ) ABCDABCDFEGH $.
      $( [4-May-2007] $)
  $}

  $( Theorem *4.45 of [WhiteheadRussell] p. 119. $)
  pm4.45 $p |- ( ph <-> ( ph /\ ( ph \/ ps ) ) ) $=
    ( wo orc pm4.71i ) AABCABDE $.
    $( [3-Jan-2005] $)

  $( Distribution of implication with conjunction.  (The proof was shortened by
     Wolf Lammen, 6-Dec-2012.) $)
  imdistan $p |- ( ( ph -> ( ps -> ch ) ) <->
                ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wi wa pm5.42 impexp bitr4i ) ABCDDABACEZDDABEIDABCFABIGH $.
    $( [6-Dec-2012] $) $( [31-May-1999] $)

  ${
    imdistani.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistani $p |- ( ( ph /\ ps ) -> ( ph /\ ch ) ) $=
      ( wa anc2li imp ) ABACEABCDFG $.
      $( [1-Aug-1994] $)
  $}

  ${
    imdistanri.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Distribution of implication with conjunction. $)
    imdistanri $p |- ( ( ps /\ ph ) -> ( ch /\ ph ) ) $=
      ( com12 impac ) BACABCDEF $.
      $( [8-Jan-2002] $)
  $}

  ${
    imdistand.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Distribution of implication with conjunction (deduction rule). $)
    imdistand $p |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) $=
      ( wi wa imdistan sylib ) ABCDFFBCGBDGFEBCDHI $.
      $( [27-Aug-2004] $)
  $}

  ${
    imdistanda.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Distribution of implication with conjunction (deduction version with
       conjoined antecedent).  (Contributed by Jeff Madsen, 19-Jun-2011.) $)
    imdistanda $p |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) $=
      ( wi ex imdistand ) ABCDABCDFEGH $.
      $( [19-Jun-2011] $)
  $}

  ${
    bi.aa $e |- ( ph <-> ps ) $.
    $( Introduce a left conjunct to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi2i $p |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) $=
      ( wb a1i pm5.32i ) CABABECDFG $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Introduce a right conjunct to both sides of a logical equivalence.  (The
       proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi1i $p |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) $=
      ( wb a1i pm5.32ri ) CABABECDFG $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)
  $}

  ${
    anbi12.1 $e |- ( ph <-> ps ) $.
    anbi12.2 $e |- ( ch <-> th ) $.
    $( Conjoin both sides of two equivalences. $)
    anbi12i $p |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) $=
      ( wa anbi1i anbi2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    sylan9bb.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bb.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bb $p |- ( ( ph /\ th ) -> ( ps <-> ta ) ) $=
      ( wa wb adantr adantl bitrd ) ADHBCEABCIDFJDCEIAGKL $.
      $( [4-Mar-1995] $)
  $}

  ${
    sylan9bbr.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    sylan9bbr.2 $e |- ( th -> ( ch <-> ta ) ) $.
    $( Nested syllogism inference conjoining dissimilar antecedents. $)
    sylan9bbr $p |- ( ( th /\ ph ) -> ( ps <-> ta ) ) $=
      ( wb sylan9bb ancoms ) ADBEHABCDEFGIJ $.
      $( [4-Mar-1995] $)
  $}

  ${
    bid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding a left disjunct to both sides of a logical
       equivalence. $)
    orbi2d $p |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) $=
      ( wn wi wo imbi2d df-or 3bitr4g ) ADFZBGLCGDBHDCHABCLEIDBJDCJK $.
      $( [5-Aug-1993] $)

    $( Deduction adding a right disjunct to both sides of a logical
       equivalence. $)
    orbi1d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) $=
      ( wo orbi2d orcom 3bitr4g ) ADBFDCFBDFCDFABCDEGBDHCDHI $.
      $( [5-Aug-1993] $)

    $( Deduction adding a left conjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi2d $p |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) $=
      ( wb a1d pm5.32d ) ADBCABCFDEGH $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)

    $( Deduction adding a right conjunct to both sides of a logical
       equivalence.  (The proof was shortened by Wolf Lammen, 16-Nov-2013.) $)
    anbi1d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) $=
      ( wb a1d pm5.32rd ) ADBCABCFDEGH $.
      $( [16-Nov-2013] $) $( [5-Aug-1993] $)
  $}

  $( Theorem *4.37 of [WhiteheadRussell] p. 118. $)
  orbi1 $p |- ( ( ph <-> ps ) -> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) $=
    ( wb id orbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Introduce a right conjunct to both sides of a logical equivalence.
     Theorem *4.36 of [WhiteheadRussell] p. 118. $)
  anbi1 $p |- ( ( ph <-> ps ) -> ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ) $=
    ( wb id anbi1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  $( Introduce a left conjunct to both sides of a logical equivalence. $)
  anbi2 $p |- ( ( ph <-> ps ) -> ( ( ch /\ ph ) <-> ( ch /\ ps ) ) ) $=
    ( wb id anbi2d ) ABDZABCGEF $.
    $( [16-Nov-2013] $)

  $( Theorem *4.22 of [WhiteheadRussell] p. 117. $)
  bitr $p |- ( ( ( ph <-> ps ) /\ ( ps <-> ch ) ) -> ( ph <-> ch ) ) $=
    ( wb bibi1 biimpar ) ABDACDBCDABCEF $.
    $( [3-Jan-2005] $)

  ${
    bi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       disjunctions. $)
    orbi12d $p |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) $=
      ( wo orbi1d orbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    anbi12d $p |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) $=
      ( wa anbi1d anbi2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [5-Aug-1993] $)

  $}

  $( Theorem *5.3 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm5.3 $p |- ( ( ( ph /\ ps ) -> ch ) <->
               ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) $=
    ( wa wi impexp imdistan bitri ) ABDZCEABCEEIACDEABCFABCGH $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Theorem *5.61 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 30-Jun-2013.) $)
  pm5.61 $p |- ( ( ( ph \/ ps ) /\ -. ps ) <-> ( ph /\ -. ps ) ) $=
    ( wn wo biorf orcom syl6rbb pm5.32ri ) BCZABDZAIABADJBAEBAFGH $.
    $( [30-Jun-2013] $) $( [3-Jan-2005] $)

  ${
    adant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantll $p |- ( ( ( th /\ ph ) /\ ps ) -> ch ) $=
      ( wa simpr sylan ) DAFABCDAGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantlr $p |- ( ( ( ph /\ th ) /\ ps ) -> ch ) $=
      ( wa simpl sylan ) ADFABCADGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrl $p |- ( ( ph /\ ( th /\ ps ) ) -> ch ) $=
      ( wa simpr sylan2 ) DBFABCDBGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 24-Nov-2012.) $)
    adantrr $p |- ( ( ph /\ ( ps /\ th ) ) -> ch ) $=
      ( wa simpl sylan2 ) BDFABCBDGEH $.
      $( [24-Nov-2012] $) $( [4-May-1994] $)
  $}

  ${
    adantl2.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 2-Dec-2012.) $)
    adantlll $p |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpr sylanl1 ) EAGABCDEAHFI $.
      $( [2-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantllr $p |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) $=
      ( wa simpl sylanl1 ) AEGABCDAEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrl $p |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) $=
      ( wa simpr sylanl2 ) EBGABCDEBHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantlrr $p |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) $=
      ( wa simpl sylanl2 ) BEGABCDBEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)
  $}

  ${
    adantr2.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrll $p |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) $=
      ( wa simpr sylanr1 ) EBGABCDEBHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrlr $p |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) $=
      ( wa simpl sylanr1 ) BEGABCDBEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrl $p |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) $=
      ( wa simpr sylanr2 ) ECGABCDECHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)

    $( Deduction adding a conjunct to antecedent.  (The proof was shortened by
       Wolf Lammen, 4-Dec-2012.) $)
    adantrrr $p |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) $=
      ( wa simpl sylanr2 ) CEGABCDCEHFI $.
      $( [4-Dec-2012] $) $( [26-Dec-2004] $)
  $}

  ${
    ad2ant.1 $e |- ( ph -> ps ) $.
    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antrr $p |- ( ( ( ph /\ ch ) /\ th ) -> ps ) $=
      ( adantr adantlr ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Deduction adding 3 conjuncts to antecedent. $)
    ad3antrrr $p |- ( ( ( ( ph /\ ch ) /\ th ) /\ ta ) -> ps ) $=
      ( wa adantr ad2antrr ) ACGBDEABCFHI $.
      $( [28-Jul-2012] $)

    $( Deduction adding conjuncts to antecedent.  (The proof was shortened by
       Wolf Lammen, 20-Nov-2012.) $)
    ad2antlr $p |- ( ( ( ch /\ ph ) /\ th ) -> ps ) $=
      ( adantr adantll ) ADBCABDEFG $.
      $( [20-Nov-2012] $) $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antrl $p |- ( ( ch /\ ( ph /\ th ) ) -> ps ) $=
      ( wa adantr adantl ) ADFBCABDEGH $.
      $( [19-Oct-1999] $)

    $( Deduction adding conjuncts to antecedent. $)
    ad2antll $p |- ( ( ch /\ ( th /\ ph ) ) -> ps ) $=
      ( wa adantl ) DAFBCABDEGG $.
      $( [19-Oct-1999] $)
  $}

  ${
    ad2ant2.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2l $p |- ( ( ( th /\ ph ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantll ) AEBGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2r $p |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantlr ) ABEGCDABCEFHI $.
      $( [8-Jan-2006] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2lr $p |- ( ( ( th /\ ph ) /\ ( ps /\ ta ) ) -> ch ) $=
      ( wa adantrr adantll ) ABEGCDABCEFHI $.
      $( [23-Nov-2007] $)

    $( Deduction adding two conjuncts to antecedent. $)
    ad2ant2rl $p |- ( ( ( ph /\ th ) /\ ( ta /\ ps ) ) -> ch ) $=
      ( wa adantrl adantlr ) AEBGCDABCEFHI $.
      $( [24-Nov-2007] $)
  $}

  $( Simplification of a conjunction. $)
  simpll $p |- ( ( ( ph /\ ps ) /\ ch ) -> ph ) $=
    ( id ad2antrr ) AABCADE $.
    $( [18-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simplr $p |- ( ( ( ph /\ ps ) /\ ch ) -> ps ) $=
    ( id ad2antlr ) BBACBDE $.
    $( [20-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprl $p |- ( ( ph /\ ( ps /\ ch ) ) -> ps ) $=
    ( id ad2antrl ) BBACBDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction. $)
  simprr $p |- ( ( ph /\ ( ps /\ ch ) ) -> ch ) $=
    ( id ad2antll ) CCABCDE $.
    $( [21-Mar-2007] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ph ) $=
    ( wa simpl ad2antrr ) ABEACDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simpllr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ps ) $=
    ( wa simpr ad2antrr ) ABEBCDABFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrl $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ps ) $=
    ( wa simpl ad2antlr ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simplrr $p |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ch ) $=
    ( wa simpr ad2antlr ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprll $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ps ) $=
    ( wa simpl ad2antrl ) BCEBADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprlr $p |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ch ) $=
    ( wa simpr ad2antrl ) BCECADBCFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrl $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ch ) $=
    ( wa simpl ad2antll ) CDECABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Simplification of a conjunction.  (Contributed by Jeff Hankins,
     28-Jul-2009.) $)
  simprrr $p |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> th ) $=
    ( wa simpr ad2antll ) CDEDABCDFG $.
    $( [18-Apr-2010] $) $( [28-Jul-2009] $)

  $( Disjunction of antecedents.  Compare Theorem *4.77 of [WhiteheadRussell]
     p. 121.  (The proof was shortened by Wolf Lammen, 9-Dec-2012.) $)
  jaob $p |- ( ( ( ph \/ ch ) -> ps ) <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) $=
    ( wo wi wa pm2.67-2 olc imim1i jca pm3.44 impbii ) ACDZBEZABEZCBEZFNOPABCGC
    MBCAHIJBACKL $.
    $( [9-Dec-2012] $) $( [30-May-1994] $)

  ${
    jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    $( Inference disjoining the antecedents of two implications. $)
    jaoian $p |- ( ( ( ph \/ th ) /\ ps ) -> ch ) $=
      ( wo wi ex jaoi imp ) ADGBCABCHDABCEIDBCFIJK $.
      $( [23-Oct-2005] $)
  $}

  ${
    jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    $( Deduction disjoining the antecedents of two implications. $)
    jaodan $p |- ( ( ph /\ ( ps \/ th ) ) -> ch ) $=
      ( wo ex jaod imp ) ABDGCABCDABCEHADCFHIJ $.
      $( [14-Oct-2005] $)
  $}

  $( Theorem *4.77 of [WhiteheadRussell] p. 121. $)
  pm4.77 $p |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) <->
                ( ( ps \/ ch ) -> ph ) ) $=
    ( wo wi wa jaob bicomi ) BCDAEBAECAEFBACGH $.
    $( [3-Jan-2005] $)

  $( Theorem *2.63 of [WhiteheadRussell] p. 107. $)
  pm2.63 $p |- ( ( ph \/ ps ) -> ( ( -. ph \/ ps ) -> ps ) ) $=
    ( wo wn pm2.53 idd jaod ) ABCZADBBABEHBFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.64 of [WhiteheadRussell] p. 107. $)
  pm2.64 $p |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) $=
    ( wn wo wi ax-1 orel2 jaoi com12 ) ABCZDABDZAAKAEJAKFBAGHI $.
    $( [3-Jan-2005] $)

  ${
    pm2.61ian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61ian.2 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61ian $p |- ( ps -> ch ) $=
      ( wi ex wn pm2.61i ) ABCFABCDGAHBCEGI $.
      $( [1-Jan-2005] $)
  $}

  ${
    pm2.61dan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    pm2.61dan.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    $( Elimination of an antecedent. $)
    pm2.61dan $p |- ( ph -> ch ) $=
      ( ex wn pm2.61d ) ABCABCDFABGCEFH $.
      $( [1-Jan-2005] $)
  $}

  ${
    pm2.61ddan.1 $e |- ( ( ph /\ ps ) -> th ) $.
    pm2.61ddan.2 $e |- ( ( ph /\ ch ) -> th ) $.
    pm2.61ddan.3 $e |- ( ( ph /\ ( -. ps /\ -. ch ) ) -> th ) $.
    $( Elimination of two antecedents. $)
    pm2.61ddan $p |- ( ph -> th ) $=
      ( wn wa adantlr anassrs pm2.61dan ) ABDEABHZICDACDMFJAMCHDGKLL $.
      $( [9-Jul-2013] $)
  $}

  ${
    pm2.61dda.1 $e |- ( ( ph /\ -. ps ) -> th ) $.
    pm2.61dda.2 $e |- ( ( ph /\ -. ch ) -> th ) $.
    pm2.61dda.3 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Elimination of two antecedents. $)
    pm2.61dda $p |- ( ph -> th ) $=
      ( wa anassrs wn adantlr pm2.61dan ) ABDABHCDABCDGIACJDBFKLEL $.
      $( [9-Jul-2013] $)
  $}

  ${
    condan.1 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    condan.2 $e |- ( ( ph /\ -. ps ) -> -. ch ) $.
    $( Proof by contradiction.  (The proof was shortened by Wolf Lammen,
       19-Jun-2014.) $)
    condan $p |- ( ph -> ps ) $=
      ( wn pm2.65da notnot2 syl ) ABFZFBAJCDEGBHI $.
      $( [19-Jun-2014] $) $( [9-Feb-2006] $)
  $}

  $( Introduce one conjunct as an antecedent to the other.  "abai" stands for
     "and, biconditional, and, implication".  (The proof was shortened by Wolf
     Lammen, 7-Dec-2012.) $)
  abai $p |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) $=
    ( wi biimt pm5.32i ) ABABCABDE $.
    $( [7-Dec-2012] $) $( [12-Aug-1993] $)

  $( Theorem *5.53 of [WhiteheadRussell] p. 125. $)
  pm5.53 $p |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <->
                ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) $=
    ( wo wi wa jaob anbi1i bitri ) ABEZCEDFKDFZCDFZGADFBDFGZMGKDCHLNMADBHIJ $.
    $( [3-Jan-2005] $)

  $( Swap two conjuncts.  Note that the first digit (1) in the label refers to
     the outer conjunct position, and the next digit (2) to the inner conjunct
     position. $)
  an12 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ps /\ ( ph /\ ch ) ) ) $=
    ( wa ancom anbi1i anass 3bitr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH $.
    $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     25-Dec-2012.) $)
  an32 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) $=
    ( wa anass an12 ancom 3bitri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [25-Dec-2012] $) $( [12-Mar-1995] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     31-Dec-2012.) $)
  an13 $p |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ch /\ ( ps /\ ph ) ) ) $=
    ( wa an12 anass ancom 3bitr2i ) ABCDDBACDDBADZCDCIDABCEBACFICGH $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  $( A rearrangement of conjuncts.  (The proof was shortened by Wolf Lammen,
     31-Dec-2012.) $)
  an31 $p |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ch /\ ps ) /\ ph ) ) $=
    ( wa an13 anass 3bitr4i ) ABCDDCBADDABDCDCBDADABCEABCFCBAFG $.
    $( [31-Dec-2012] $) $( [24-Jun-2012] $)

  ${
    an12s.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Swap two conjuncts in antecedent.  The label suffix "s" means that
       ~ an12 is combined with ~ syl (or a variant). $)
    an12s $p |- ( ( ps /\ ( ph /\ ch ) ) -> th ) $=
      ( wa an12 sylbi ) BACFFABCFFDBACGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom2s $p |- ( ( ph /\ ( ch /\ ps ) ) -> th ) $=
      ( wa pm3.22 sylan2 ) CBFABCFDCBGEH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an13s $p |- ( ( ch /\ ( ps /\ ph ) ) -> th ) $=
      ( exp32 com13 imp32 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  ${
    an32s.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Swap two conjuncts in antecedent. $)
    an32s $p |- ( ( ( ph /\ ch ) /\ ps ) -> th ) $=
      ( wa an32 sylbi ) ACFBFABFCFDACBGEH $.
      $( [13-Mar-1996] $)

    $( Inference commuting a nested conjunction in antecedent.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    ancom1s $p |- ( ( ( ps /\ ph ) /\ ch ) -> th ) $=
      ( wa pm3.22 sylan ) BAFABFCDBAGEH $.
      $( [24-Nov-2012] $) $( [24-May-2006] $)

    $( Swap two conjuncts in antecedent. $)
    an31s $p |- ( ( ( ch /\ ps ) /\ ph ) -> th ) $=
      ( exp31 com13 imp31 ) CBADABCDABCDEFGH $.
      $( [31-May-2006] $)
  $}

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 16-Nov-2013.) $)
  anabs1 $p |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) $=
    ( wa simpl pm4.71i bicomi ) ABCZGACGAABDEF $.
    $( [16-Nov-2013] $) $( [4-Sep-1995] $)

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 9-Dec-2012.) $)
  anabs5 $p |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa ibar bicomd pm5.32i ) AABCZBABGABDEF $.
    $( [9-Dec-2012] $) $( [20-Jul-1996] $)

  $( Absorption into embedded conjunct.  (The proof was shortened by Wolf
     Lammen, 17-Nov-2013.) $)
  anabs7 $p |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) $=
    ( wa simpr pm4.71ri bicomi ) ABCZBGCGBABDEF $.
    $( [17-Nov-2013] $) $( [20-Jul-1996] $)

  ${
    anabsan.1 $e |- ( ( ( ph /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa pm4.24 sylanb ) AAAEBCAFDG $.
      $( [18-Nov-2013] $) $( [24-Mar-1996] $)
  $}

  ${
    anabss1.1 $e |- ( ( ( ph /\ ps ) /\ ph ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 31-Dec-2012.) $)
    anabss1 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an32s anabsan ) ABCABACDEF $.
      $( [19-Nov-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabss4.1 $e |- ( ( ( ps /\ ph ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction. $)
    anabss4 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabss1 ancoms ) BACBACDEF $.
      $( [20-Jul-1996] $)
  $}

  ${
    anabss5.1 $e |- ( ( ph /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 1-Jan-2013.) $)
    anabss5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabsan ) ABCAABCDEF $.
      $( [1-Jan-2013] $) $( [10-May-1994] $)
  $}

  ${
    anabsi5.1 $e |- ( ph -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 18-Nov-2013.) $)
    anabsi5 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wa imp anabss5 ) ABCAABECDFG $.
      $( [18-Nov-2013] $) $( [11-Jun-1995] $)
  $}

  ${
    anabsi6.1 $e |- ( ph -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi6 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( ancomsd anabsi5 ) ABCABACDEF $.
      $( [14-Aug-2000] $)
  $}

  ${
    anabsi7.1 $e |- ( ps -> ( ( ph /\ ps ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 18-Nov-2013.) $)
    anabsi7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabsi6 ancoms ) BACBACDEF $.
      $( [18-Nov-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabsi8.1 $e |- ( ps -> ( ( ps /\ ph ) -> ch ) ) $.
    $( Absorption of antecedent into conjunction. $)
    anabsi8 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anabsi5 ancoms ) BACBACDEF $.
      $( [26-Sep-1999] $)
  $}

  ${
    anabss7.1 $e |- ( ( ps /\ ( ph /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 19-Nov-2013.) $)
    anabss7 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anassrs anabss4 ) ABCBABCDEF $.
      $( [19-Nov-2013] $) $( [20-Jul-1996] $)
  $}

  ${
    anabsan2.1 $e |- ( ( ph /\ ( ps /\ ps ) ) -> ch ) $.
    $( Absorption of antecedent with conjunction. $)
    anabsan2 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( an12s anabss7 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [10-May-2004] $)
  $}

  ${
    anabss3.1 $e |- ( ( ( ph /\ ps ) /\ ps ) -> ch ) $.
    $( Absorption of antecedent into conjunction.  (The proof was shortened by
       Wolf Lammen, 1-Jan-2013.) $)
    anabss3 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( anasss anabsan2 ) ABCABBCDEF $.
      $( [1-Jan-2013] $) $( [20-Jul-1996] $)
  $}

  $( Rearrangement of 4 conjuncts. $)
  an4 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
              ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) $=
    ( wa an12 anbi2i anass 3bitr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHAC
    LHI $.
    $( [10-Jul-1994] $)

  $( Rearrangement of 4 conjuncts. $)
  an42 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                 ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) $=
    ( wa an4 ancom anbi2i bitri ) ABECDEEACEZBDEZEJDBEZEABCDFKLJBDGHI $.
    $( [7-Feb-1996] $)

  ${
    an4s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent. $)
    an4s $p |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) -> ta ) $=
      ( wa an4 sylbi ) ACGBDGGABGCDGGEACBDHFI $.
      $( [10-Aug-1995] $)
  $}

  ${
    an41r3s.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $.
    $( Inference rearranging 4 conjuncts in antecedent. $)
    an42s $p |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) $=
      ( wa an4s ancom2s ) ACGBDEABCDEFHI $.
      $( [10-Aug-1995] $)
  $}

  $( Distribution of conjunction over conjunction. $)
  anandi $p |- ( ( ph /\ ( ps /\ ch ) ) <->
               ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) $=
    ( wa anidm anbi1i an4 bitr3i ) ABCDZDAADZIDABDACDDJAIAEFAABCGH $.
    $( [14-Aug-1995] $)

  $( Distribution of conjunction over conjunction. $)
  anandir $p |- ( ( ( ph /\ ps ) /\ ch ) <->
               ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) $=
    ( wa anidm anbi2i an4 bitr3i ) ABDZCDICCDZDACDBCDDJCICEFABCCGH $.
    $( [24-Aug-1995] $)

  ${
    anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandis $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa an4s anabsan ) ABCFDABACDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    anandirs.1 $e |- ( ( ( ph /\ ch ) /\ ( ps /\ ch ) ) -> ta ) $.
    $( Inference that undistributes conjunction in the antecedent. $)
    anandirs $p |- ( ( ( ph /\ ps ) /\ ch ) -> ta ) $=
      ( wa an4s anabsan2 ) ABFCDACBCDEGH $.
      $( [7-Jun-2004] $)
  $}

  ${
    impbida.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    impbida.2 $e |- ( ( ph /\ ch ) -> ps ) $.
    $( Deduce an equivalence from two implications. $)
    impbida $p |- ( ph -> ( ps <-> ch ) ) $=
      ( ex impbid ) ABCABCDFACBEFG $.
      $( [17-Feb-2007] $)
  $}

  $( Theorem *3.48 of [WhiteheadRussell] p. 114. $)
  pm3.48 $p |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) ->
               ( ( ph \/ ch ) -> ( ps \/ th ) ) ) $=
    ( wi wo orc imim2i olc jaao ) ABEABDFZCDECBKABDGHDKCDBIHJ $.
    $( [1-Dec-2012] $) $( [28-Jan-1997] $)

  $( Theorem *3.45 (Fact) of [WhiteheadRussell] p. 113. $)
  pm3.45 $p |- ( ( ph -> ps ) -> ( ( ph /\ ch ) -> ( ps /\ ch ) ) ) $=
    ( wi id anim1d ) ABDZABCGEF $.
    $( [3-Jan-2005] $)

  ${
    im2an9.1 $e |- ( ph -> ( ps -> ch ) ) $.
    im2an9.2 $e |- ( th -> ( ta -> et ) ) $.
    $( Deduction joining nested implications to form implication of
       conjunctions. $)
    im2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi adantr adantl anim12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [29-Feb-1996] $)

    $( Deduction joining nested implications to form implication of
       conjunctions. $)
    im2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) $=
      ( wa wi im2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [29-Feb-1996] $)
  $}

  ${
    anim12dan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    anim12dan.2 $e |- ( ( ph /\ th ) -> ta ) $.
    $( Conjoin antecedents and consequents in a deduction.  (Contributed by
       Mario Carneiro, 12-May-2014.) $)
    anim12dan $p |- ( ( ph /\ ( ps /\ th ) ) -> ( ch /\ ta ) ) $=
      ( wa ex anim12d imp ) ABDHCEHABCDEABCFIADEGIJK $.
      $( [12-May-2014] $)
  $}

  ${
    orim12d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    orim12d.2 $e |- ( ph -> ( th -> ta ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim12d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) $=
      ( wi wo pm3.48 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [10-May-1994] $)
  $}

  ${
    orim1d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Disjoin antecedents and consequents in a deduction. $)
    orim1d $p |- ( ph -> ( ( ps \/ th ) -> ( ch \/ th ) ) ) $=
      ( idd orim12d ) ABCDDEADFG $.
      $( [23-Apr-1995] $)

    $( Disjoin antecedents and consequents in a deduction. $)
    orim2d $p |- ( ph -> ( ( th \/ ps ) -> ( th \/ ch ) ) ) $=
      ( idd orim12d ) ADDBCADFEG $.
      $( [23-Apr-1995] $)
  $}

  $( Axiom *1.6 (Sum) of [WhiteheadRussell] p. 97. $)
  orim2 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wi id orim2d ) BCDZBCAGEF $.
    $( [3-Jan-2005] $)

  $( Theorem *2.38 of [WhiteheadRussell] p. 105. $)
  pm2.38 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) $=
    ( wi id orim1d ) BCDZBCAGEF $.
    $( [6-Mar-2008] $)

  $( Theorem *2.36 of [WhiteheadRussell] p. 105. $)
  pm2.36 $p |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ch \/ ph ) ) ) $=
    ( wo wi pm1.4 pm2.38 syl5 ) ABDBADBCECADABFABCGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.37 of [WhiteheadRussell] p. 105. $)
  pm2.37 $p |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ph \/ ch ) ) ) $=
    ( wi wo pm2.38 pm1.4 syl6 ) BCDBAECAEACEABCFCAGH $.
    $( [6-Mar-2008] $)

  $( Theorem *2.73 of [WhiteheadRussell] p. 108. $)
  pm2.73 $p |- ( ( ph -> ps ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ps \/ ch ) ) ) $=
    ( wi wo pm2.621 orim1d ) ABDABEBCABFG $.
    $( [3-Jan-2005] $)

  $( Theorem *2.74 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.) $)
  pm2.74 $p |- ( ( ps -> ph ) -> ( ( ( ph \/ ps ) \/ ch ) ->
                ( ph \/ ch ) ) ) $=
    ( wi wo orel2 ax-1 ja orim1d ) BADABEZACBAJADBAFAJGHI $.
    $( [12-May-2011] $) $( [3-Jan-2005] $)

  $( Disjunction distributes over implication.  (Contributed by Wolf Lammen,
     5-Jan-2013.) $)
  orimdi $p |- ( ( ph \/ ( ps -> ch ) ) <->
                ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wn wi wo imdi df-or imbi12i 3bitr4i ) ADZBCEZEKBEZKCEZEALFABFZACFZEKBCGAL
    HOMPNABHACHIJ $.
    $( [5-Jan-2013] $)

  $( Theorem *2.76 of [WhiteheadRussell] p. 108. $)
  pm2.76 $p |- ( ( ph \/ ( ps -> ch ) ) ->
                ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) $=
    ( wi wo orimdi biimpi ) ABCDEABEACEDABCFG $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.75 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 4-Jan-2013.) $)
  pm2.75 $p |- ( ( ph \/ ps ) ->
                ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) $=
    ( wi wo pm2.76 com12 ) ABCDEABEACEABCFG $.
    $( [4-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.8 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 5-Jan-2013.) $)
  pm2.8 $p |- ( ( ph \/ ps ) -> ( ( -. ps \/ ch ) -> ( ph \/ ch ) ) ) $=
    ( wo wn pm2.53 con1d orim1d ) ABDZBEACIABABFGH $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *2.81 of [WhiteheadRussell] p. 108. $)
  pm2.81 $p |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) ->
                ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ) $=
    ( wi wo orim2 pm2.76 syl6 ) BCDEZEABFAJFACFADFEABJGACDHI $.
    $( [3-Jan-2005] $)

  $( Theorem *2.82 of [WhiteheadRussell] p. 108. $)
  pm2.82 $p |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ( ph \/ -. ch ) \/ th ) ->
                ( ( ph \/ ps ) \/ th ) ) ) $=
    ( wo wn wi ax-1 pm2.24 orim2d jaoi orim1d ) ABEZCEACFZEZMDMOMGCMOHCNBACBIJK
    L $.
    $( [3-Jan-2005] $)

  $( Theorem *2.85 of [WhiteheadRussell] p. 108.  (The proof was shortened by
     Wolf Lammen, 5-Jan-2013.) $)
  pm2.85 $p |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) ->
                ( ph \/ ( ps -> ch ) ) ) $=
    ( wi wo orimdi biimpri ) ABCDEABEACEDABCFG $.
    $( [5-Jan-2013] $) $( [3-Jan-2005] $)

  ${
    pm3.2ni.1 $e |- -. ph $.
    pm3.2ni.2 $e |- -. ps $.
    $( Infer negated disjunction of negated premises. $)
    pm3.2ni $p |- -. ( ph \/ ps ) $=
      ( wo id pm2.21i jaoi mto ) ABEACAABAFBADGHI $.
      $( [4-Apr-1995] $)
  $}

  $( Absorption of redundant internal disjunct.  Compare Theorem *4.45 of
     [WhiteheadRussell] p. 119.  (The proof was shortened by Wolf Lammen,
     28-Feb-2014.) $)
  orabs $p |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) $=
    ( wo orc pm4.71ri ) AABCABDE $.
    $( [28-Feb-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ orabs as of 28-Feb-2014. $)
  orabsOLD $p |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) $=
    ( wo wa orc ancri simpr impbii ) AABCZADAIABEFIAGH $.
    $( [5-Aug-1993] $)

  $( Absorb a disjunct into a conjunct.  (Contributed by Roy F. Longton
     23-Jun-2005.)  (The proof was shortened by Wolf Lammen, 10-Nov-2013.) $)
  oranabs $p |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) $=
    ( wn wo biortn orcom syl6rbb pm5.32ri ) BABCZDZABAIADJBAEIAFGH $.
    $( [10-Nov-2013] $) $( [23-Jun-2005] $)

  $( Two propositions are equivalent if they are both true.  Theorem *5.1 of
     [WhiteheadRussell] p. 123. $)
  pm5.1 $p |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) $=
    ( wb pm5.501 biimpa ) ABABCABDE $.
    $( [21-May-1994] $)

  $( Two propositions are equivalent if they are both false.  Theorem *5.21 of
     [WhiteheadRussell] p. 124. $)
  pm5.21 $p |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) $=
    ( wn wb pm5.21im imp ) ACBCABDABEF $.
    $( [19-May-2013] $) $( [21-May-1994] $)

  $( Theorem *3.43 (Comp) of [WhiteheadRussell] p. 113. $)
  pm3.43 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wi wa pm3.43i imp ) ABDACDABCEDABCFG $.
    $( [27-Nov-2013] $) $( [3-Jan-2005] $)

  $( Distributive law for implication over conjunction.  Compare Theorem *4.76
     of [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     27-Nov-2013.) $)
  jcab $p |- ( ( ph -> ( ps /\ ch ) ) <->
                ( ( ph -> ps ) /\ ( ph -> ch ) ) ) $=
    ( wa wi simpl imim2i simpr jca pm3.43 impbii ) ABCDZEZABEZACEZDMNOLBABCFGLC
    ABCHGIABCJK $.
    $( [27-Nov-2013] $) $( [3-Apr-1994] $)

  $( Distributive law for disjunction.  Theorem *4.41 of [WhiteheadRussell]
     p. 119.  (The proof was shortened by Andrew Salmon, 7-May-2011.)  (The
     proof was shortened by Wolf Lammen, 28-Nov-2013.) $)
  ordi $p |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) $=
    ( wn wa wi wo jcab df-or anbi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZELBC
    HAMIPNQOABIACIJK $.
    $( [28-Nov-2013] $) $( [5-Aug-1993] $)

  $( Distributive law for disjunction. $)
  ordir $p |- ( ( ( ph /\ ps ) \/ ch ) <->
              ( ( ph \/ ch ) /\ ( ps \/ ch ) ) ) $=
    ( wa wo ordi orcom anbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Obsolete proof of ~ jcab as of 27-Nov-2013 $)
  jcabOLD $p |- ( ( ph -> ( ps /\ ch ) ) <->
                 ( ( ph -> ps ) /\ ( ph -> ch ) ) ) $=
    ( wn wa wo wi ordi imor anbi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZELBCH
    AMIPNQOABIACIJK $.
    $( [3-Apr-1994] $)

  $( Obsolete proof of ~ pm3.43 as of 27-Nov-2013 $)
  pm3.43OLD $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab biimpri ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Theorem *4.76 of [WhiteheadRussell] p. 121. $)
  pm4.76 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <->
                ( ph -> ( ps /\ ch ) ) ) $=
    ( wa wi jcab bicomi ) ABCDEABEACEDABCFG $.
    $( [3-Jan-2005] $)

  $( Distributive law for conjunction.  Theorem *4.4 of [WhiteheadRussell]
     p. 118.  (The proof was shortened by Wolf Lammen, 5-Jan-2013.) $)
  andi $p |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) ) $=
    ( wo wa orc olc jaodan anim2i jaoi impbii ) ABCDZEZABEZACEZDZABPCNOFONGHNMO
    BLABCFICLACBGIJK $.
    $( [5-Jan-2013] $) $( [5-Aug-1993] $)

  $( Distributive law for conjunction. $)
  andir $p |- ( ( ( ph \/ ps ) /\ ch ) <->
              ( ( ph /\ ch ) \/ ( ps /\ ch ) ) ) $=
    ( wo wa andi ancom orbi12i 3bitr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMKNL
    ACGBCGHI $.
    $( [12-Aug-1994] $)

  $( Double distributive law for disjunction. $)
  orddi $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\
              ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) $=
    ( wa wo ordir ordi anbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Double distributive law for conjunction. $)
  anddi $p |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <->
              ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/
              ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) $=
    ( wo wa andir andi orbi12i bitri ) ABECDEZFAKFZBKFZEACFADFEZBCFBDFEZEABKGLN
    MOACDHBCDHIJ $.
    $( [12-Aug-1994] $)

  $( Prove formula-building rules for the biconditional connective. $)

  $( Theorem *4.39 of [WhiteheadRussell] p. 118. $)
  pm4.39 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph \/ ps ) <-> ( ch \/ th ) ) ) $=
    ( wb wa simpl simpr orbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  $( Theorem *4.38 of [WhiteheadRussell] p. 118. $)
  pm4.38 $p |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) ->
                ( ( ph /\ ps ) <-> ( ch /\ th ) ) ) $=
    ( wb wa simpl simpr anbi12d ) ACEZBDEZFACBDJKGJKHI $.
    $( [3-Jan-2005] $)

  ${
    bi2an9.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi2an9.2 $e |- ( th -> ( ta <-> et ) ) $.
    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9 $p |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa anbi1d anbi2d sylan9bb ) ABEICEIDCFIABCEGJDEFCHKL $.
      $( [31-Jul-1995] $)

    $( Deduction joining two equivalences to form equivalence of
       conjunctions. $)
    bi2anan9r $p |- ( ( th /\ ph ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) $=
      ( wa wb bi2anan9 ancoms ) ADBEICFIJABCDEFGHKL $.
      $( [19-Feb-1996] $)

    $( Deduction joining two biconditionals with different antecedents. $)
    bi2bian9 $p |- ( ( ph /\ th ) -> ( ( ps <-> ta ) <-> ( ch <-> et ) ) ) $=
      ( wa wb adantr adantl bibi12d ) ADIBCEFABCJDGKDEFJAHLM $.
      $( [12-May-2004] $)
  $}

  $( Implication in terms of biconditional and disjunction.  Theorem *4.72 of
     [WhiteheadRussell] p. 121.  (The proof was shortened by Wolf Lammen,
     30-Jan-2013.) $)
  pm4.72 $p |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wo wb olc pm2.621 impbid2 orc bi2 syl5 impbii ) ABCZBABDZEZMBNBAFABGHA
    NOBABIBNJKL $.
    $( [30-Jan-2013] $) $( [30-Aug-1993] $)

  $( Simplify an implication between implications.  (Contributed by Paul
     Chapman, 17-Nov-2012.)  (The proof was shortened by Wolf Lammen,
     3-Apr-2013.) $)
  imimorb $p |- ( ( ( ps -> ch ) -> ( ph -> ch ) ) <->
                  ( ph -> ( ps \/ ch ) ) ) $=
    ( wi wo bi2.04 dfor2 imbi2i bitr4i ) BCDZACDDAJCDZDABCEZDJACFLKABCGHI $.
    $( [3-Apr-2013] $) $( [17-Nov-2012] $)

  $( Theorem *5.33 of [WhiteheadRussell] p. 125. $)
  pm5.33 $p |- ( ( ph /\ ( ps -> ch ) ) <->
                ( ph /\ ( ( ph /\ ps ) -> ch ) ) ) $=
    ( wi wa ibar imbi1d pm5.32i ) ABCDABEZCDABICABFGH $.
    $( [3-Jan-2005] $)

  $( Theorem *5.36 of [WhiteheadRussell] p. 125. $)
  pm5.36 $p |- ( ( ph /\ ( ph <-> ps ) ) <-> ( ps /\ ( ph <-> ps ) ) ) $=
    ( wb id pm5.32ri ) ABCZABFDE $.
    $( [3-Jan-2005] $)

  ${
    bianabs.1 $e |- ( ph -> ( ps <-> ( ph /\ ch ) ) ) $.
    $( Absorb a hypothesis into the second member of a biconditional.
       (Contributed by FL, 15-Feb-2007.) $)
    bianabs $p |- ( ph -> ( ps <-> ch ) ) $=
      ( wa ibar bitr4d ) ABACECDACFG $.
      $( [22-May-2008] $) $( [15-Feb-2007] $)
  $}

  $( Absorption of disjunction into equivalence.  (The proof was shortened by
     Wolf Lammen, 3-Nov-2013.) $)
  oibabs $p |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) $=
    ( wo wb wi wn wa ioran pm5.21 sylbi id ja ax-1 impbii ) ABCZABDZEPOPPOFAFBF
    GPABHABIJPKLPOMN $.
    $( [3-Nov-2013] $)  $( [6-Aug-1995] $)

  $( Law of noncontradiction.  Theorem *3.24 of [WhiteheadRussell] p. 111 (who
     call it the "law of contradiction").  (The proof was shortened by Wolf
     Lammen, 24-Nov-2012.) $)
  pm3.24 $p |- -. ( ph /\ -. ph ) $=
    ( wi wn wa id iman mpbi ) AABAACDCAEAAFG $.
    $( [24-Nov-2012] $) $( [16-Sep-1993] $)

  $( Theorem *2.26 of [WhiteheadRussell] p. 104.  (The proof was shortened by
     Wolf Lammen, 23-Nov-2012.) $)
  pm2.26 $p |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) $=
    ( wi pm2.27 imori ) AABCBCABDE $.
    $( [23-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *5.11 of [WhiteheadRussell] p. 123. $)
  pm5.11 $p |- ( ( ph -> ps ) \/ ( -. ph -> ps ) ) $=
    ( wi wn pm2.5 orri ) ABCADBCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.12 of [WhiteheadRussell] p. 123. $)
  pm5.12 $p |- ( ( ph -> ps ) \/ ( ph -> -. ps ) ) $=
    ( wi wn pm2.51 orri ) ABCABDCABEF $.
    $( [3-Jan-2005] $)

  $( Theorem *5.14 of [WhiteheadRussell] p. 123. $)
  pm5.14 $p |- ( ( ph -> ps ) \/ ( ps -> ch ) ) $=
    ( wi wn ax-1 con3i pm2.21d orri ) ABDZBCDJEBCBJBAFGHI $.
    $( [3-Jan-2005] $)

  $( Theorem *5.13 of [WhiteheadRussell] p. 123.  (The proof was shortened by
     Wolf Lammen, 14-Nov-2012.) $)
  pm5.13 $p |- ( ( ph -> ps ) \/ ( ps -> ph ) ) $=
    ( pm5.14 ) ABAC $.
    $( [14-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *5.17 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 3-Jan-2013.) $)
  pm5.17 $p |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) $=
    ( wn wb wi wa wo bicom dfbi2 orcom df-or bitr2i imnan anbi12i 3bitrri ) ABC
    ZDPADPAEZAPEZFABGZABFCZFAPHPAIQSRTSBAGQABJBAKLABMNO $.
    $( [3-Jan-2013] $) $( [3-Jan-2005] $)

  $( Theorem *5.15 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 15-Oct-2013.) $)
  pm5.15 $p |- ( ( ph <-> ps ) \/ ( ph <-> -. ps ) ) $=
    ( wb wn xor3 biimpi orri ) ABCZABDCZHDIABEFG $.
    $( [15-Oct-2013] $) $( [3-Jan-2005] $)

  $( Theorem *5.16 of [WhiteheadRussell] p. 124.  (The proof was shortened by
     Wolf Lammen, 17-Oct-2013.) $)
  pm5.16 $p |- -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) $=
    ( wb wn wi wa pm5.18 biimpi imnan mpbi ) ABCZABDCZDZEKLFDKMABGHKLIJ $.
    $( [17-Oct-2013] $) $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or."  Theorem *5.22 of [WhiteheadRussell]
     p. 124.  (The proof was shortened by Wolf Lammen, 22-Jan-2013.) $)
  xor $p |- ( -. ( ph <-> ps ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wn wa wo wb wi iman anbi12i dfbi2 ioran 3bitr4ri con1bii ) ABCDZBACDZEZAB
    FZABGZBAGZDNCZOCZDQPCRTSUAABHBAHIABJNOKLM $.
    $( [22-Jan-2013] $) $( [3-Jan-2005] $)

  $( Two ways to express "exclusive or."  (The proof was shortened by Wolf
     Lammen, 24-Jan-2013.) $)
  xor2 $p |- ( -. ( ph <-> ps ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) $=
    ( wb wn wo wa xor3 pm5.17 bitr4i ) ABCDABDCABEABFDFABGABHI $.
    $( [24-Jan-2013] $) $( [3-Jan-2005] $)

  $( An alternate definition of the biconditional.  Theorem *5.23 of
     [WhiteheadRussell] p. 124.  (The proof was shortened by Wolf Lammen,
     3-Nov-2013.) $)
  dfbi3 $p |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) $=
    ( wn wb wa wo xor pm5.18 notnot anbi2i ancom orbi12i 3bitr4i ) ABCZDCANCZEZ
    NACZEZFABDABEZQNEZFANGABHSPTRBOABIJQNKLM $.
    $( [3-Nov-2013] $) $( [27-Jun-2002] $)

  $( Theorem *5.24 of [WhiteheadRussell] p. 124. $)
  pm5.24 $p |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <->
                ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wb wn wa wo xor dfbi3 xchnxbi ) ABCABDZEBADZEFABEKJEFABGABHI $.
    $( [3-Jan-2005] $)

  $( Conjunction distributes over exclusive-or, using ` -. ( ph <-> ps ) ` to
     express exclusive-or.  This is one way to interpret the distributive law
     of multiplication over addition in modulo 2 arithmetic. $)
  xordi $p |- ( ( ph /\ -. ( ps <-> ch ) ) <->
                -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) $=
    ( wb wn wa wi annim pm5.32 xchbinx ) ABCDZEFAKGABFACFDAKHABCIJ $.
    $( [3-Oct-2008] $)

  $( A wff is disjoined with truth is true. $)
  biort $p |- ( ph -> ( ph <-> ( ph \/ ps ) ) ) $=
    ( wo orc ax-1 impbid2 ) AAABCZABDAGEF $.
    $( [23-May-1999] $)

  $( Theorem *5.55 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 20-Jan-2013.) $)
  pm5.55 $p |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) $=
    ( wo wb biort bicomd wn biorf nsyl4 con1i orri ) ABCZADZLBDZNMAMNAALABEFAGB
    LABHFIJK $.
    $( [20-Jan-2013] $) $( [3-Jan-2005] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Miscellaneous theorems of propositional calculus
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    pm5.21nd.1 $e |- ( ( ph /\ ps ) -> th ) $.
    pm5.21nd.2 $e |- ( ( ph /\ ch ) -> th ) $.
    pm5.21nd.3 $e |- ( th -> ( ps <-> ch ) ) $.
    $( Eliminate an antecedent implied by each side of a biconditional.  (The
       proof was shortened by Wolf Lammen, 4-Nov-2013.) $)
    pm5.21nd $p |- ( ph -> ( ps <-> ch ) ) $=
      ( ex wb wi a1i pm5.21ndd ) ADBCABDEHACDFHDBCIJAGKL $.
      $( [4-Nov-2013] $) $( [20-Nov-2005] $)
  $}

  $( Theorem *5.35 of [WhiteheadRussell] p. 125. $)
  pm5.35 $p |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) ->
                ( ph -> ( ps <-> ch ) ) ) $=
    ( wi wa pm5.1 pm5.74rd ) ABDZACDZEABCHIFG $.
    $( [3-Jan-2005] $)

  $( Theorem *5.54 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 7-Nov-2013.) $)
  pm5.54 $p |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) $=
    ( wa wb iba bicomd adantl pm5.21ni orri ) ABCZADZJBDJKBBKABAJBAEFZGLHI $.
    $( [7-Nov-2013] $) $( [3-Jan-2005] $)

  ${
    baib.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baib $p |- ( ps -> ( ph <-> ch ) ) $=
      ( wa ibar syl6rbbr ) BCBCEABCFDG $.
      $( [13-May-1999] $)
  $}

  ${
    baibr.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Move conjunction outside of biconditional. $)
    baibr $p |- ( ps -> ( ch <-> ph ) ) $=
      ( baib bicomd ) BACABCDEF $.
      $( [11-Jul-1994] $)
  $}

  $( Theorem *5.44 of [WhiteheadRussell] p. 125. $)
  pm5.44 $p |- ( ( ph -> ps ) -> ( ( ph -> ch ) <->
                ( ph -> ( ps /\ ch ) ) ) ) $=
    ( wa wi jcab baibr ) ABCDEABEACEABCFG $.
    $( [3-Jan-2005] $)

  $( Conjunction in antecedent versus disjunction in consequent.  Theorem *5.6
     of [WhiteheadRussell] p. 125. $)
  pm5.6 $p |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) $=
    ( wn wa wi wo impexp df-or imbi2i bitr4i ) ABDZECFALCFZFABCGZFALCHNMABCIJK
    $.
    $( [22-Mar-2005] $) $( [8-Jun-1994] $)

  ${
    orcanai.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    $( Change disjunction in consequent to conjunction in antecedent. $)
    orcanai $p |- ( ( ph /\ -. ps ) -> ch ) $=
      ( wn ord imp ) ABECABCDFG $.
      $( [8-Jun-1994] $)
  $}


  ${
    intnan.1 $e |- -. ph $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnan $p |- -. ( ps /\ ph ) $=
      ( wa simpr mto ) BADACBAEF $.
      $( [16-Sep-1993] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanr $p |- -. ( ph /\ ps ) $=
      ( wa simpl mto ) ABDACABEF $.
      $( [3-Apr-1995] $)
  $}

  ${
    intnand.1 $e |- ( ph -> -. ps ) $.
    $( Introduction of conjunct inside of a contradiction. $)
    intnand $p |- ( ph -> -. ( ch /\ ps ) ) $=
      ( wa simpr nsyl ) ABCBEDCBFG $.
      $( [10-Jul-2005] $)

    $( Introduction of conjunct inside of a contradiction. $)
    intnanrd $p |- ( ph -> -. ( ps /\ ch ) ) $=
      ( wa simpl nsyl ) ABBCEDBCFG $.
      $( [10-Jul-2005] $)
  $}

  ${
    mpbiran.1 $e |- ps $.
    mpbiran.2 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Detach truth from conjunction in biconditional. $)
    mpbiran $p |- ( ph <-> ch ) $=
      ( wa biantrur bitr4i ) ABCFCEBCDGH $.
      $( [9-Jan-2015] $) $( [27-Feb-1996] $)
  $}

  ${
    mpbiran2.1 $e |- ch $.
    mpbiran2.2 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Detach truth from conjunction in biconditional. $)
    mpbiran2 $p |- ( ph <-> ps ) $=
      ( wa biantru bitr4i ) ABCFBECBDGH $.
      $( [9-Jan-2015] $) $( [22-Feb-1996] $)
  $}

  ${
    mpbir2an.1 $e |- ps $.
    mpbir2an.2 $e |- ch $.
    mpbiran2an.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( Detach a conjunction of truths in a biconditional. $)
    mpbir2an $p |- ph $=
      ( mpbiran mpbir ) ACEABCDFGH $.
      $( [9-Jan-2015] $) $( [10-May-2005] $)
  $}

  ${
    mpbi2and.1 $e |- ( ph -> ps ) $.
    mpbi2and.2 $e |- ( ph -> ch ) $.
    mpbi2and.3 $e |- ( ph -> ( ( ps /\ ch ) <-> th ) ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbi2and $p |- ( ph -> th ) $=
      ( wa jca mpbid ) ABCHDABCEFIGJ $.
      $( [9-Jan-2015] $) $( [6-Nov-2011] $)
  $}

  ${
    mpbir2and.1 $e |- ( ph -> ch ) $.
    mpbir2and.2 $e |- ( ph -> th ) $.
    mpbir2and.3 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    $( Detach a conjunction of truths in a biconditional.  (The proof was
       shortened by Wolf Lammen, 24-Nov-2012.) $)
    mpbir2and $p |- ( ph -> ps ) $=
      ( wa jca mpbird ) ABCDHACDEFIGJ $.
      $( [9-Jan-2015] $)  $( [6-Nov-2011] $)
  $}

  ${
    mpbiranOLD.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    ${
      mpbiranOLD.2 $e |- ps $.
      $( Obsolete version of ~ mpbiran as of 9-Jan-2015. $)
      mpbiranOLD $p |- ( ph <-> ch ) $=
        ( mpbiran ) ABCEDF $.
        $( [27-Feb-1996] $)
    $}

    ${
      mpbiran2OLD.2 $e |- ch $.
      $( Obsolete version of ~ mpbiran2 as of 9-Jan-2015. $)
      mpbiran2OLD $p |- ( ph <-> ps ) $=
        ( mpbiran2 ) ABCEDF $.
        $( [22-Feb-1996] $)
    $}

    ${
      mpbir2anOLD.2 $e |- ps $.
      mpbir2anOLD.3 $e |- ch $.
      $( Obsolete version of ~ mpbir2an as of 9-Jan-2015. $)
      mpbir2anOLD $p |- ph $=
        ( mpbir2an ) ABCEFDG $.
        $( [10-May-2005] $)
    $}
  $}

  ${
    mpbi2andOLD.1 $e |- ( ph -> ( ( ps /\ ch ) <-> th ) ) $.
    mpbi2andOLD.2 $e |- ( ph -> ps ) $.
    mpbi2andOLD.3 $e |- ( ph -> ch ) $.
    $( Obsolete version of ~ mpbi2and as of 9-Jan-2015. $)
    mpbi2andOLD $p |- ( ph -> th ) $=
      ( mpbi2and ) ABCDFGEH $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)
  $}

  ${
    mpbir2andOLD.1 $e |- ( ph -> ( ps <-> ( ch /\ th ) ) ) $.
    mpbir2andOLD.2 $e |- ( ph -> ch ) $.
    mpbir2andOLD.3 $e |- ( ph -> th ) $.
    $( Obsolete version of ~ mpbir2and as of 9-Jan-2015. $)
    mpbir2andOLD $p |- ( ph -> ps ) $=
      ( mpbir2and ) ABCDFGEH $.
      $( [24-Nov-2012] $) $( [6-Nov-2011] $)
  $}

  $( Theorem *5.62 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm5.62 $p |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ph \/ -. ps ) ) $=
    ( wa wn wo exmid ordir mpbiran2 ) ABCBDZEAIEBIEBFABIGH $.
    $( [21-Jun-2005] $)

  $( Theorem *5.63 of [WhiteheadRussell] p. 125.  (The proof was shortened by
     Wolf Lammen, 25-Dec-2012.) $)
  pm5.63 $p |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) $=
    ( wn wa wo exmid ordi mpbiran bicomi ) AACZBDEZABEZKAJELAFAJBGHI $.
    $( [25-Dec-2012] $) $( [3-Jan-2005] $)

  ${
    bianfi.1 $e |- -. ph $.
    $( A wff conjoined with falsehood is false.  (The proof was shortened by
       Wolf Lammen, 26-Nov-2012.) $)
    bianfi $p |- ( ph <-> ( ps /\ ph ) ) $=
      ( wa intnan 2false ) ABADCABCEF $.
      $( [26-Nov-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    bianfd.1 $e |- ( ph -> -. ps ) $.
    $( A wff conjoined with falsehood is false.  (The proof was shortened by
       Wolf Lammen, 5-Nov-2013.) $)
    bianfd $p |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) $=
      ( wa intnanrd 2falsed ) ABBCEDABCDFG $.
      $( [5-Nov-2013] $) $( [27-Mar-1995] $)
  $}

  $( Theorem *4.43 of [WhiteheadRussell] p. 119.  (The proof was shortened by
     Wolf Lammen, 26-Nov-2012.) $)
  pm4.43 $p |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) $=
    ( wn wa wo pm3.24 biorfi ordi bitri ) AABBCZDZEABEAJEDKABFGABJHI $.
    $( [26-Nov-2012] $) $( [3-Jan-2005] $)

  $( Theorem *4.82 of [WhiteheadRussell] p. 122. $)
  pm4.82 $p |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) <-> -. ph ) $=
    ( wi wn wa pm2.65 imp pm2.21 jca impbii ) ABCZABDZCZEADZKMNABFGNKMABHALHIJ
    $.
    $( [3-Jan-2005] $)

  $( Theorem *4.83 of [WhiteheadRussell] p. 122. $)
  pm4.83 $p |- ( ( ( ph -> ps ) /\ ( -. ph -> ps ) ) <-> ps ) $=
    ( wn wo wi wa exmid a1bi jaob bitr2i ) BAACZDZBEABEKBEFLBAGHABKIJ $.
    $( [3-Jan-2005] $)

  $( Negation inferred from embedded conjunct.  (The proof was shortened by
     Wolf Lammen, 25-Nov-2012.) $)
  pclem6 $p |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) $=
    ( wn wa wb ibar nbbn sylib con2i ) BABACZDZEZBJKELCBJFAKGHI $.
    $( [25-Nov-2012] $) $( [20-Aug-1993] $)

  $( A transitive law of equivalence.  Compare Theorem *4.22 of
     [WhiteheadRussell] p. 117. $)
  biantr $p |- ( ( ( ph <-> ps ) /\ ( ch <-> ps ) ) -> ( ph <-> ch ) ) $=
    ( wb id bibi2d biimparc ) CBDZACDABDHCBAHEFG $.
    $( [18-Aug-1993] $)

  $( Disjunction distributes over the biconditional.  An axiom of system DS in
     Vladimir Lifschitz, "On calculational proofs" (1998),
     ~ http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.25.3384 .  (The
     proof was shortened by Wolf Lammen, 4-Feb-2013.) $)
  orbidi $p |- ( ( ph \/ ( ps <-> ch ) ) <->
                ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) $=
    ( wn wb wi wo pm5.74 df-or bibi12i 3bitr4i ) ADZBCEZFLBFZLCFZEAMGABGZACGZEL
    BCHAMIPNQOABIACIJK $.
    $( [4-Feb-2013] $) $( [8-Jan-2005] $)

  $( Lukasiewicz's shortest axiom for equivalential calculus.  Storrs McCall,
     ed., _Polish Logic 1920-1939_ (Oxford, 1967), p. 96. $)
  biluk $p |- ( ( ph <-> ps ) <-> ( ( ch <-> ps ) <-> ( ph <-> ch ) ) ) $=
    ( wb bicom bibi1i biass bitri mpbi bitr4i ) ABDZCBACDZDZDZCBDLDKCDZMDKNDOBA
    DZCDMKPCABEFBACGHKCMGICBLGJ $.
    $( [10-Jan-2005] $)

  $( Disjunction distributes over the biconditional.  Theorem *5.7 of
     [WhiteheadRussell] p. 125.  This theorem is similar to ~ orbidi .
     (Contributed by Roy F. Longton, 21-Jun-2005.) $)
  pm5.7 $p |- ( ( ( ph \/ ch ) <-> ( ps \/ ch ) ) <->
               ( ch \/ ( ph <-> ps ) ) ) $=
    ( wb wo orbidi orcom bibi12i bitr2i ) CABDECAEZCBEZDACEZBCEZDCABFJLKMCAGCBG
    HI $.
    $( [21-Jun-2005] $)

  $( Dijkstra-Scholten's Golden Rule for calculational proofs. $)
  bigolden $p |- ( ( ( ph /\ ps ) <-> ph ) <-> ( ps <-> ( ph \/ ps ) ) ) $=
    ( wi wa wb wo pm4.71 pm4.72 bicom 3bitr3ri ) ABCAABDZEBABFEKAEABGABHAKIJ $.
    $( [10-Jan-2005] $)

  $( Theorem *5.71 of [WhiteheadRussell] p. 125.  (Contributed by Roy F.
     Longton, 23-Jun-2005.) $)
  pm5.71 $p |- ( ( ps -> -. ch ) -> ( ( ( ph \/ ps ) /\ ch ) <->
                ( ph /\ ch ) ) ) $=
    ( wn wo wa wb orel2 orc impbid1 anbi1d pm2.21 pm5.32rd ja ) BCDZABEZCFACFGB
    DZPACQPABAHABIJKOCPACPAGLMN $.
    $( [23-Jun-2005] $)

  $( Theorem *5.75 of [WhiteheadRussell] p. 126.  (The proof was shortened by
     Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf Lammen,
     23-Dec-2012.) $)
  pm5.75 $p |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) ->
                ( ( ph /\ -. ps ) <-> ch ) ) $=
    ( wo wb wn wa wi anbi1 anbi1i pm5.61 syl6bb pm4.71 biimpi bicomd sylan9bbr
    orcom bitri ) ABCDZEZABFZGZCUAGZCUAHZCTUBSUAGZUCASUAIUECBDZUAGUCSUFUABCQJCB
    KRLUDCUCUDCUCECUAMNOP $.
    $( [23-Dec-2012] $) $( [3-Jan-2005] $)

  $( Removal of conjunct from one side of an equivalence. $)
  bimsc1 $p |- ( ( ( ph -> ps ) /\ ( ch <-> ( ps /\ ph ) ) )
               -> ( ch <-> ph ) ) $=
    ( wi wa wb simpr ancr impbid2 bibi2d biimpa ) ABDZCBAEZFCAFLMACLMABAGABHIJK
    $.
    $( [5-Aug-1993] $)

  $( The disjunction of the four possible combinations of two wffs and their
     negations is always true.  (Contributed by David Abernethy,
     28-Jan-2014.) $)
  4exmid $p |- ( ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) )
              \/ ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) $=
    ( wb wn wo wa exmid dfbi3 xor orbi12i mpbi ) ABCZLDZEABFADZBDZFEZAOFBNFEZEL
    GLPMQABHABIJK $.
    $( [1-Feb-2014] $)

  ${
    ecase2d.1 $e |- ( ph -> ps ) $.
    ecase2d.2 $e |- ( ph -> -. ( ps /\ ch ) ) $.
    ecase2d.3 $e |- ( ph -> -. ( ps /\ th ) ) $.
    ecase2d.4 $e |- ( ph -> ( ta \/ ( ch \/ th ) ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 22-Dec-2012.) $)
    ecase2d $p |- ( ph -> ta ) $=
      ( wo wn wa wi imnan sylibr mpd ioran sylanbrc ord mt3d ) AECDJZACKZDKZUAK
      ABUBFABCLKBUBMGBCNOPABUCFABDLKBUCMHBDNOPCDQRAEUAIST $.
      $( [22-Dec-2012] $) $( [21-Apr-1994] $)
  $}

  ${
    ecase3.1 $e |- ( ph -> ch ) $.
    ecase3.2 $e |- ( ps -> ch ) $.
    ecase3.3 $e |- ( -. ( ph \/ ps ) -> ch ) $.
    $( Inference for elimination by cases.  (The proof was shortened by Wolf
       Lammen, 26-Nov-2012.) $)
    ecase3 $p |- ch $=
      ( wo jaoi pm2.61i ) ABGCACBDEHFI $.
      $( [26-Nov-2012] $) $( [23-Mar-1995] $)
  $}

  ${
    ecase.1 $e |- ( -. ph -> ch ) $.
    ecase.2 $e |- ( -. ps -> ch ) $.
    ecase.3 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Inference for elimination by cases. $)
    ecase $p |- ch $=
      ( ex pm2.61nii ) ABCABCFGDEH $.
      $( [13-Jul-2005] $)
  $}

  ${
    ecase3d.1 $e |- ( ph -> ( ps -> th ) ) $.
    ecase3d.2 $e |- ( ph -> ( ch -> th ) ) $.
    ecase3d.3 $e |- ( ph -> ( -. ( ps \/ ch ) -> th ) ) $.
    $( Deduction for elimination by cases.  (The proof was shortened by Andrew
       Salmon, 7-May-2011.) $)
    ecase3d $p |- ( ph -> th ) $=
      ( wo jaod pm2.61d ) ABCHDABDCEFIGJ $.
      $( [12-May-2011] $) $( [2-May-1996] $)
  $}

  ${
    ecased.1 $e |- ( ph -> ( -. ps -> th ) ) $.
    ecased.2 $e |- ( ph -> ( -. ch -> th ) ) $.
    ecased.3 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Deduction for elimination by cases. $)
    ecased $p |- ( ph -> th ) $=
      ( wn wo wa pm3.11 syl5 ecase3d ) ABHZCHZDEFNOIHBCJADBCKGLM $.
      $( [8-Oct-2012] $)
  $}

  ${
    ecase3ad.1 $e |- ( ph -> ( ps -> th ) ) $.
    ecase3ad.2 $e |- ( ph -> ( ch -> th ) ) $.
    ecase3ad.3 $e |- ( ph -> ( ( -. ps /\ -. ch ) -> th ) ) $.
    $( Deduction for elimination by cases. $)
    ecase3ad $p |- ( ph -> th ) $=
      ( wn notnot2 syl5 ecased ) ABHZCHZDLHBADBIEJMHCADCIFJGK $.
      $( [24-May-2013] $)
  $}

  ${
    ccase.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase.2 $e |- ( ( ch /\ ps ) -> ta ) $.
    ccase.3 $e |- ( ( ph /\ th ) -> ta ) $.
    ccase.4 $e |- ( ( ch /\ th ) -> ta ) $.
    $( Inference for combining cases.  (The proof was shortened by Wolf Lammen,
       6-Jan-2013.) $)
    ccase $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( wo jaoian jaodan ) ACJBEDABECFGKADECHIKL $.
      $( [6-Jan-2013] $) $( [29-Jul-1999] $)
  $}

  ${
    ccased.1 $e |- ( ph -> ( ( ps /\ ch ) -> et ) ) $.
    ccased.2 $e |- ( ph -> ( ( th /\ ch ) -> et ) ) $.
    ccased.3 $e |- ( ph -> ( ( ps /\ ta ) -> et ) ) $.
    ccased.4 $e |- ( ph -> ( ( th /\ ta ) -> et ) ) $.
    $( Deduction for combining cases. $)
    ccased $p |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) $=
      ( wo wa wi com12 ccase ) BDKCEKLAFBCDEAFMABCLFGNADCLFHNABELFINADELFJNON
      $.
      $( [9-May-2004] $)
  $}

  ${
    ccase2.1 $e |- ( ( ph /\ ps ) -> ta ) $.
    ccase2.2 $e |- ( ch -> ta ) $.
    ccase2.3 $e |- ( th -> ta ) $.
    $( Inference for combining cases. $)
    ccase2 $p |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) $=
      ( adantr adantl ccase ) ABCDEFCEBGIDEAHJDECHJK $.
      $( [29-Jul-1999] $)
  $}

  ${
    4cases.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    4cases.2 $e |- ( ( ph /\ -. ps ) -> ch ) $.
    4cases.3 $e |- ( ( -. ph /\ ps ) -> ch ) $.
    4cases.4 $e |- ( ( -. ph /\ -. ps ) -> ch ) $.
    $( Inference eliminating two antecedents from the four possible cases that
       result from their true/false combinations. $)
    4cases $p |- ch $=
      ( pm2.61ian wn pm2.61i ) BCABCDFHABICEGHJ $.
      $( [25-Oct-2003] $)
  $}

  ${
    4casesdan.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    4casesdan.2 $e |- ( ( ph /\ ( ps /\ -. ch ) ) -> th ) $.
    4casesdan.3 $e |- ( ( ph /\ ( -. ps /\ ch ) ) -> th ) $.
    4casesdan.4 $e |- ( ( ph /\ ( -. ps /\ -. ch ) ) -> th ) $.
    $( Deduction eliminating two antecedents from the four possible cases that
       result from their true/false combinations. $)
    4casesdan $p |- ( ph -> th ) $=
      ( wi wa expcom wn 4cases ) BCADIABCJDEKABCLZJDFKABLZCJDGKAONJDHKM $.
      $( [19-Mar-2013] $)
  $}

  ${
    niabn.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    niabn $p |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) $=
      ( wa wn simpr pm2.24i pm5.21ni ) CBEBAFCBGABDHI $.
      $( [31-Mar-1994] $)
  $}

  $( Lemma for an alternate version of weak deduction theorem.  (The proof was
     shortened by Andrew Salmon, 7-May-2011.)  (The proof was shortened by Wolf
     Lammen, 4-Dec-2012.) $)
  dedlem0a $p |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) $=
    ( wa wi iba wb ax-1 biimt syl bitrd ) ABBADZCAEZLEZABFAMLNGACHMLIJK $.
    $( [4-Dec-2012] $) $( [2-Apr-1994] $)

  $( Lemma for an alternate version of weak deduction theorem. $)
  dedlem0b $p |- ( -. ph -> ( ps <-> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) $=
    ( wn wi wa pm2.21 imim2d com23 simpr imim12i con1d com12 impbid ) ADZBBAEZC
    AFZEZOPBQOAQBAQGHIROBRBABDPQABAGCAJKLMN $.
    $( [2-Apr-1994] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlema $p |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wa wn wo orc expcom wi simpl a1i pm2.24 adantld jaod impbid ) ABBADZCAEZD
    ZFZBASPRGHAPBRPBIABAJKAQBCABLMNO $.
    $( [12-May-2011] $) $( [26-Jun-2002] $)

  $( Lemma for weak deduction theorem.  (The proof was shortened by Andrew
     Salmon, 7-May-2011.) $)
  dedlemb $p |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) $=
    ( wn wa wo olc expcom pm2.21 adantld wi simpl a1i jaod impbid ) ADZCBAEZCPE
    ZFZCPSRQGHPQCRPACBACIJRCKPCPLMNO $.
    $( [12-May-2011] $) $( [15-May-1999] $)

  ${
    elimh.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( ch <-> ta ) ) $.
    elimh.2 $e |- ( ( ps <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    elimh.3 $e |- th $.
    $( Hypothesis builder for weak deduction theorem.  For more information,
       see the Deduction Theorem link on the Metamath Proof Explorer home
       page. $)
    elimh $p |- ta $=
      ( wa wn wo wb dedlema syl ibi dedlemb mpbii pm2.61i ) CECECAACIBCJZIKZLCE
      LCABMFNOSDEHSBTLDELCABPGNQR $.
      $( [26-Jun-2002] $)
  $}

  ${
    dedt.1 $e |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) )
                     -> ( th <-> ta ) ) $.
    dedt.2 $e |- ta $.
    $( The weak deduction theorem.  For more information, see the Deduction
       Theorem link on the Metamath Proof Explorer home page. $)
    dedt $p |- ( ch -> th ) $=
      ( wa wn wo wb dedlema mpbiri syl ) CAACHBCIHJKZDCABLODEGFMN $.
      $( [26-Jun-2002] $)
  $}

  $( Contraposition.  Theorem *2.16 of [WhiteheadRussell] p. 103.  This version
     of ~ con3 demonstrates the use of the weak deduction theorem to derive it
     from ~ con3i . $)
  con3th $p |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) $=
    ( wi wn wa wo wb id notbid imbi1d imbi2d elimh con3i dedt ) BAABCZBDZADZCBO
    EAODEFZDZQCBRGZPSQTBRTHZIJARBAOAACARCTBRAUAKARGZARAUBHKAHLMN $.
    $( [27-Jun-2002] $)

  $( The consensus theorem.  This theorem and its dual (with ` \/ ` and ` /\ `
     interchanged) are commonly used in computer logic design to eliminate
     redundant terms from Boolean expressions.  Specifically, we prove that the
     term ` ( ps /\ ch ) ` on the left-hand side is redundant.  (The proof was
     shortened by Andrew Salmon, 13-May-2011.)  (The proof was shortened by
     Wolf Lammen, 20-Jan-2013.) $)
  consensus $p |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) <->
                      ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) $=
    ( wa wn wo id orc adantrr olc adantrl pm2.61ian jaoi impbii ) ABDZAEZCDZFZB
    CDZFRRRSRGASRABRCOQHIPCRBQOJKLMRSHN $.
    $( [20-Jan-2013] $) $( [16-May-2003] $)

  $( Theorem *4.42 of [WhiteheadRussell] p. 119.  (Contributed by Roy F.
     Longton, 21-Jun-2005.) $)
  pm4.42 $p |- ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) $=
    ( wa wn wo wb dedlema dedlemb pm2.61i ) BAABCABDCEFBAAGBAAHI $.
    $( [21-Jun-2005] $)

  ${
    ninba.1 $e |- ph $.
    $( Miscellaneous inference relating falsehoods. $)
    ninba $p |- ( -. ps -> ( -. ph <-> ( ch /\ ps ) ) ) $=
      ( wn wa niabn bicomd ) BECBFAEABCDGH $.
      $( [31-Mar-1994] $)
  $}

  ${
    prlem1.1 $e |- ( ph -> ( et <-> ch ) ) $.
    prlem1.2 $e |- ( ps -> -. th ) $.
    $( A specialized lemma for set theory (to derive the Axiom of Pairing).
       (The proof was shortened by Andrew Salmon, 13-May-2011.)  (The proof was
       shortened by Wolf Lammen, 5-Jan-2013.) $)
    prlem1 $p |- ( ph -> ( ps ->
                  ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> et ) ) ) $=
      ( wa wo wi biimprd adantld pm2.21d adantrd jaao ex ) ABBCIZDEIZJFKARFBSAC
      FBAFCGLMBDFEBDFHNOPQ $.
      $( [5-Jan-2013] $) $( [18-Oct-1995] $)
  $}

  $( A specialized lemma for set theory (to derive the Axiom of Pairing).  (The
     proof was shortened by Andrew Salmon, 13-May-2011.)  (The proof was
     shortened by Wolf Lammen, 9-Dec-2012.) $)
  prlem2 $p |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <->
              ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) $=
    ( wa wo simpl orim12i pm4.71ri ) ABEZCDEZFACFJAKCABGCDGHI $.
    $( [9-Dec-2012] $) $( [5-Aug-1993] $)

  ${
    oplem1.1 $e |- ( ph -> ( ps \/ ch ) ) $.
    oplem1.2 $e |- ( ph -> ( th \/ ta ) ) $.
    oplem1.3 $e |- ( ps <-> th ) $.
    oplem1.4 $e |- ( ch -> ( th <-> ta ) ) $.
    $( A specialized lemma for set theory (ordered pair theorem).  (The proof
       was shortened by Wolf Lammen, 8-Dec-2012.) $)
    oplem1 $p |- ( ph -> ps ) $=
      ( wn wa notbii ord syl5bir jcad biimpar syl6 pm2.18d sylibr ) ADBADADJZCE
      KDATCETBJACBDHLABCFMNADEGMOCDEIPQRHS $.
      $( [8-Dec-2012] $) $( [18-Oct-1995] $)
  $}

  $( Lemma used in construction of real numbers.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  rnlem $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
  ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) $=
    ( wa an4 biimpi an42 biimpri jca adantl impbii ) ABECDEEZACEBDEEZADEBCEEZEM
    NOMNABCDFGOMADBCHZIJOMNOMPGKL $.
    $( [26-Jun-2011] $) $( [4-Sep-1995] $)

  $( A single axiom for Boolean algebra known as DN_1.  See
     ~ http://www-unix.mcs.anl.gov/~~mccune/papers/basax/v12.pdf .
     (Contributed by Jeffrey Hankins, 3-Jul-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.)  (The proof was shortened by Wolf Lammen,
     6-Jan-2013.) $)
  dn1 $p |- ( -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/
            -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) $=
    ( wo wn wa wi pm2.45 imnan mpbi biorfi orcom ordir 3bitri pm4.45 anor bitri
    orbi2i anbi2i 3bitrri ) CABEFZCEZACEZGZUCACFCDEZFEFZEZGUCFUHFEFCCUBAGZEUICE
    UEUICUBAFHUIFABIUBAJKLCUIMUBACNOUDUHUCCUGACCUFGUGCDPCUFQRSTUCUHQUA $.
    $( [6-Jan-2013] $) $( [22-Jun-2005] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Abbreviated conjunction and disjunction of three wff's
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff definition to include 3-way disjunction ('or'). $)
  w3o $a wff ( ph \/ ps \/ ch ) $.
  $( Extend wff definition to include 3-way conjunction ('and'). $)
  w3a $a wff ( ph /\ ps /\ ch ) $.

  $( These abbreviations help eliminate parentheses to aid readability. $)

  $( Define disjunction ('or') of 3 wff's.  Definition *2.33 of
     [WhiteheadRussell] p. 105.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ orass . $)
  df-3or $a |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) $.

  $( Define conjunction ('and') of 3 wff.s.  Definition *4.34 of
     [WhiteheadRussell] p. 118.  This abbreviation reduces the number of
     parentheses and emphasizes that the order of bracketing is not important
     by virtue of the associative law ~ anass . $)
  df-3an $a |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) $.

  $( Associative law for triple disjunction. $)
  3orass $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) $=
    ( w3o wo df-3or orass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Associative law for triple conjunction. $)
  3anass $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) $=
    ( w3a wa df-3an anass bitri ) ABCDABECEABCEEABCFABCGH $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple conjunction. $)
  3anrot $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) $=
    ( wa w3a ancom 3anass df-3an 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [8-Apr-1994] $)

  $( Rotation law for triple disjunction. $)
  3orrot $p |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) $=
    ( wo w3o orcom 3orass df-3or 3bitr4i ) ABCDZDJADABCEBCAEAJFABCGBCAHI $.
    $( [4-Apr-1995] $)

  $( Commutation law for triple conjunction. $)
  3ancoma $p |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) $=
    ( wa w3a ancom anbi1i df-3an 3bitr4i ) ABDZCDBADZCDABCEBACEJKCABFGABCHBACHI
    $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple conjunction. $)
  3ancomb $p |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) $=
    ( w3a 3ancoma 3anrot bitri ) ABCDBACDACBDABCEBACFG $.
    $( [21-Apr-1994] $)

  $( Commutation law for triple disjunction.  (Contributed by Scott Fenton,
     20-Apr-2011.) $)
  3orcomb $p |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ch \/ ps ) ) $=
    ( wo w3o orcom orbi2i 3orass 3bitr4i ) ABCDZDACBDZDABCEACBEJKABCFGABCHACBHI
    $.
    $( [20-Feb-2012] $) $( [20-Apr-2011] $)

  $( Reversal law for triple conjunction. $)
  3anrev $p |- ( ( ph /\ ps /\ ch ) <-> ( ch /\ ps /\ ph ) ) $=
    ( w3a 3ancoma 3anrot bitr4i ) ABCDBACDCBADABCECBAFG $.
    $( [21-Apr-1994] $)

  $( Triple conjunction expressed in terms of triple disjunction.  (Contributed
     by Jeff Hankins, 15-Aug-2009.) $)
  3anor $p |- ( ( ph /\ ps /\ ch ) <-> -. ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( w3a wa wn w3o df-3an wo anor ianor orbi1i xchbinx df-3or xchbinxr bitri )
    ABCDABEZCEZAFZBFZCFZGZFABCHRSTIZUAIZUBRQFZUAIUDQCJUEUCUAABKLMSTUANOP $.
    $( [2-Mar-2011] $) $( [28-Jul-2009] $)

  $( Negated triple conjunction expressed in terms of triple disjunction.
     (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof was shortened by
     Andrew Salmon, 13-May-2011.) $)
  3ianor $p |- ( -. ( ph /\ ps /\ ch ) <-> ( -. ph \/ -. ps \/ -. ch ) ) $=
    ( wn w3o w3a 3anor con2bii bicomi ) ADBDCDEZABCFZDKJABCGHI $.
    $( [16-May-2011] $) $( [28-Jul-2009] $)

  $( Negated triple disjunction as triple conjunction.  (Contributed by Scott
     Fenton, 19-Apr-2011.) $)
  3ioran $p |- ( -. ( ph \/ ps \/ ch ) <-> ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wo wn wa w3o w3a ioran anbi1i df-3or xchnxbir df-3an 3bitr4i ) ABDZEZCEZF
    ZAEZBEZFZQFABCGZESTQHPUAQABIJOCDRUBOCIABCKLSTQMN $.
    $( [19-Apr-2011] $)

  $( Triple disjunction in terms of triple conjunction. $)
  3oran $p |- ( ( ph \/ ps \/ ch ) <-> -. ( -. ph /\ -. ps /\ -. ch ) ) $=
    ( wn w3a w3o 3ioran con1bii bicomi ) ADBDCDEZDABCFZKJABCGHI $.
    $( [8-Oct-2012] $)

  $( Simplification of triple conjunction. $)
  3simpa $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) $=
    ( w3a wa df-3an simplbi ) ABCDABECABCFG $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  3simpb $p |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ch ) ) $=
    ( w3a wa 3ancomb 3simpa sylbi ) ABCDACBDACEABCFACBGH $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  3simpc $p |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) $=
    ( w3a wa 3anrot 3simpa sylbi ) ABCDBCADBCEABCFBCAGH $.
    $( [16-May-2011] $) $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp1 $p |- ( ( ph /\ ps /\ ch ) -> ph ) $=
    ( w3a 3simpa simpld ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp2 $p |- ( ( ph /\ ps /\ ch ) -> ps ) $=
    ( w3a 3simpa simprd ) ABCDABABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification of triple conjunction. $)
  simp3 $p |- ( ( ph /\ ps /\ ch ) -> ch ) $=
    ( w3a 3simpc simprd ) ABCDBCABCEF $.
    $( [21-Apr-1994] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ph ) $=
    ( w3a simp1 adantr ) ABCEADABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl2 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ps ) $=
    ( w3a simp2 adantr ) ABCEBDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpl3 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ch ) $=
    ( w3a simp3 adantr ) ABCECDABCFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr1 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ps ) $=
    ( w3a simp1 adantl ) BCDEBABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ch ) $=
    ( w3a simp2 adantl ) BCDECABCDFG $.
    $( [17-Nov-2009] $)

  $( Simplification rule.  (Contributed by Jeff Hankins, 17-Nov-2009.) $)
  simpr3 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> th ) $=
    ( w3a simp3 adantl ) BCDEDABCDFG $.
    $( [17-Nov-2009] $)

  ${
    3simp1i.1 $e |- ( ph /\ ps /\ ch ) $.
    $( Infer a conjunct from a triple conjunction. $)
    simp1i $p |- ph $=
      ( w3a simp1 ax-mp ) ABCEADABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp2i $p |- ps $=
      ( w3a simp2 ax-mp ) ABCEBDABCFG $.
      $( [19-Apr-2005] $)

    $( Infer a conjunct from a triple conjunction. $)
    simp3i $p |- ch $=
      ( w3a simp3 ax-mp ) ABCECDABCFG $.
      $( [19-Apr-2005] $)
  $}

  ${
    3simp1d.1 $e |- ( ph -> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction. $)
    simp1d $p |- ( ph -> ps ) $=
      ( w3a simp1 syl ) ABCDFBEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp2d $p |- ( ph -> ch ) $=
      ( w3a simp2 syl ) ABCDFCEBCDGH $.
      $( [4-Sep-2005] $)

    $( Deduce a conjunct from a triple conjunction. $)
    simp3d $p |- ( ph -> th ) $=
      ( w3a simp3 syl ) ABCDFDEBCDGH $.
      $( [4-Sep-2005] $)
  $}

  ${
    3simp1bi.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp1bi $p |- ( ph -> ps ) $=
      ( w3a biimpi simp1d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp2bi $p |- ( ph -> ch ) $=
      ( w3a biimpi simp2d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)

    $( Deduce a conjunct from a triple conjunction.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    simp3bi $p |- ( ph -> th ) $=
      ( w3a biimpi simp3d ) ABCDABCDFEGH $.
      $( [9-Sep-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    3adant.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1 $p |- ( ( th /\ ph /\ ps ) -> ch ) $=
      ( w3a wa 3simpc syl ) DABFABGCDABHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2 $p |- ( ( ph /\ th /\ ps ) -> ch ) $=
      ( w3a wa 3simpb syl ) ADBFABGCADBHEI $.
      $( [16-Jul-1995] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( w3a wa 3simpa syl ) ABDFABGCABDHEI $.
      $( [16-Jul-1995] $)
  $}

  ${
    3ad2ant.1 $e |- ( ph -> ch ) $.
    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant1 $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( adantr 3adant2 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant2 $p |- ( ( ps /\ ph /\ th ) -> ch ) $=
      ( adantr 3adant1 ) ADCBACDEFG $.
      $( [21-Apr-2005] $)

    $( Deduction adding conjuncts to an antecedent. $)
    3ad2ant3 $p |- ( ( ps /\ th /\ ph ) -> ch ) $=
      ( adantl 3adant1 ) DACBACDEFG $.
      $( [21-Apr-2005] $)
  $}

  $( Simplification of triple conjunction. $)
  simp1l $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ph ) $=
    ( wa simpl 3ad2ant1 ) ABECADABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp1r $p |- ( ( ( ph /\ ps ) /\ ch /\ th ) -> ps ) $=
    ( wa simpr 3ad2ant1 ) ABECBDABFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2l $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ps ) $=
    ( wa simpl 3ad2ant2 ) BCEABDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp2r $p |- ( ( ph /\ ( ps /\ ch ) /\ th ) -> ch ) $=
    ( wa simpr 3ad2ant2 ) BCEACDBCFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3l $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> ch ) $=
    ( wa simpl 3ad2ant3 ) CDEACBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of triple conjunction. $)
  simp3r $p |- ( ( ph /\ ps /\ ( ch /\ th ) ) -> th ) $=
    ( wa simpr 3ad2ant3 ) CDEADBCDFG $.
    $( [9-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp11 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( w3a simp1 3ad2ant1 ) ABCFDAEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp12 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( w3a simp2 3ad2ant1 ) ABCFDBEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp13 $p |- ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) -> ch ) $=
    ( w3a simp3 3ad2ant1 ) ABCFDCEABCGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp21 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( w3a simp1 3ad2ant2 ) BCDFABEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp22 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> ch ) $=
    ( w3a simp2 3ad2ant2 ) BCDFACEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp23 $p |- ( ( ph /\ ( ps /\ ch /\ th ) /\ ta ) -> th ) $=
    ( w3a simp3 3ad2ant2 ) BCDFADEBCDGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp31 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp1 3ad2ant3 ) CDEFACBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp32 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> th ) $=
    ( w3a simp2 3ad2ant3 ) CDEFADBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of doubly triple conjunction. $)
  simp33 $p |- ( ( ph /\ ps /\ ( ch /\ th /\ ta ) ) -> ta ) $=
    ( w3a simp3 3ad2ant3 ) CDEFAEBCDEGH $.
    $( [17-Nov-2011] $)

  $( Simplification of conjunction. $)
  simpll1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ph ) $=
    ( w3a wa simpl1 adantr ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ps ) $=
    ( w3a wa simpl2 adantr ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpll3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta ) -> ch ) $=
    ( w3a wa simpl3 adantr ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ph ) $=
    ( w3a wa simpr1 adantr ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ps ) $=
    ( w3a wa simpr2 adantr ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simplr3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta ) -> ch ) $=
    ( w3a wa simpr3 adantr ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 adantl ) ABCFDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 adantl ) ABCFDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprl3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 adantl ) ABCFDGCEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 adantl ) DABCFGAEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 adantl ) DABCFGBEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simprr3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 adantl ) DABCFGCEDABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp1l adantr ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl1r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp1r adantr ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ph ) $=
    ( wa w3a simp2l adantr ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl2r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta ) -> ps ) $=
    ( wa w3a simp2r adantr ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa w3a simp3l adantr ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl3r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa w3a simp3r adantr ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l adantl ) ABFCDGAEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr1r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r adantl ) ABFCDGBEABCDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l adantl ) CABFDGAECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr2r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r adantl ) CABFDGBECABDHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l adantl ) CDABFGAECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr3r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r adantl ) CDABFGBECDABHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1ll $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant1 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1lr $p |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant1 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rl $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant1 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1rr $p |- ( ( ( ch /\ ( ph /\ ps ) ) /\ th /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant1 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2ll $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ph ) $=
    ( wa simpll 3ad2ant2 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2lr $p |- ( ( th /\ ( ( ph /\ ps ) /\ ch ) /\ ta ) -> ps ) $=
    ( wa simplr 3ad2ant2 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rl $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ph ) $=
    ( wa simprl 3ad2ant2 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2rr $p |- ( ( th /\ ( ch /\ ( ph /\ ps ) ) /\ ta ) -> ps ) $=
    ( wa simprr 3ad2ant2 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3ll $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ph ) $=
    ( wa simpll 3ad2ant3 ) ABFCFDAEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3lr $p |- ( ( th /\ ta /\ ( ( ph /\ ps ) /\ ch ) ) -> ps ) $=
    ( wa simplr 3ad2ant3 ) ABFCFDBEABCGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rl $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa simprl 3ad2ant3 ) CABFFDAECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3rr $p |- ( ( th /\ ta /\ ( ch /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa simprr 3ad2ant3 ) CABFFDBECABGH $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl11 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp11 adantr ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl12 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp12 adantr ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl13 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp13 adantr ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl21 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ph ) $=
    ( w3a simp21 adantr ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl22 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ps ) $=
    ( w3a simp22 adantr ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl23 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et ) -> ch ) $=
    ( w3a simp23 adantr ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl31 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a simp31 adantr ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl32 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a simp32 adantr ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpl33 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a simp33 adantr ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr11 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 adantl ) ABCGDEGAFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr12 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 adantl ) ABCGDEGBFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr13 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 adantl ) ABCGDEGCFABCDEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr21 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 adantl ) DABCGEGAFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr22 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 adantl ) DABCGEGBFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr23 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 adantl ) DABCGEGCFDABCEHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr31 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 adantl ) DEABCGGAFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr32 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 adantl ) DEABCGGBFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simpr33 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 adantl ) DEABCGGCFDEABCHI $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l1 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant1 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l2 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant1 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1l3 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant1 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r1 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant1 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r2 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant1 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp1r3 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) ) /\ ta /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant1 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l1 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant2 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l2 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant2 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2l3 $p |- ( ( ta /\ ( ( ph /\ ps /\ ch ) /\ th ) /\ et ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant2 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r1 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant2 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r2 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant2 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp2r3 $p |- ( ( ta /\ ( th /\ ( ph /\ ps /\ ch ) ) /\ et ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant2 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l1 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ph ) $=
    ( w3a wa simpl1 3ad2ant3 ) ABCGDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l2 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ps ) $=
    ( w3a wa simpl2 3ad2ant3 ) ABCGDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3l3 $p |- ( ( ta /\ et /\ ( ( ph /\ ps /\ ch ) /\ th ) ) -> ch ) $=
    ( w3a wa simpl3 3ad2ant3 ) ABCGDHECFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r1 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a wa simpr1 3ad2ant3 ) DABCGHEAFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r2 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a wa simpr2 3ad2ant3 ) DABCGHEBFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp3r3 $p |- ( ( ta /\ et /\ ( th /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a wa simpr3 3ad2ant3 ) DABCGHECFDABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11l $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant1 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp11r $p |- ( ( ( ( ph /\ ps ) /\ ch /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant1 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12l $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant1 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp12r $p |- ( ( ( ch /\ ( ph /\ ps ) /\ th ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant1 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13l $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant1 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp13r $p |- ( ( ( ch /\ th /\ ( ph /\ ps ) ) /\ ta /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant1 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21l $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant2 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp21r $p |- ( ( ta /\ ( ( ph /\ ps ) /\ ch /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant2 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22l $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant2 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp22r $p |- ( ( ta /\ ( ch /\ ( ph /\ ps ) /\ th ) /\ et ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant2 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23l $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant2 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp23r $p |- ( ( ta /\ ( ch /\ th /\ ( ph /\ ps ) ) /\ et ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant2 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31l $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ph ) $=
    ( wa w3a simp1l 3ad2ant3 ) ABGCDHEAFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp31r $p |- ( ( ta /\ et /\ ( ( ph /\ ps ) /\ ch /\ th ) ) -> ps ) $=
    ( wa w3a simp1r 3ad2ant3 ) ABGCDHEBFABCDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32l $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ph ) $=
    ( wa w3a simp2l 3ad2ant3 ) CABGDHEAFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp32r $p |- ( ( ta /\ et /\ ( ch /\ ( ph /\ ps ) /\ th ) ) -> ps ) $=
    ( wa w3a simp2r 3ad2ant3 ) CABGDHEBFCABDIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33l $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ph ) $=
    ( wa w3a simp3l 3ad2ant3 ) CDABGHEAFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp33r $p |- ( ( ta /\ et /\ ( ch /\ th /\ ( ph /\ ps ) ) ) -> ps ) $=
    ( wa w3a simp3r 3ad2ant3 ) CDABGHEBFCDABIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp111 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant1 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp112 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant1 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp113 $p |- ( ( ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant1 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp121 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant1 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp122 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant1 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp123 $p |- ( ( ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant1 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp131 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant1 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp132 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant1 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp133 $p |- ( ( ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ et /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant1 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp211 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp11 3ad2ant2 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp212 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp12 3ad2ant2 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp213 $p |- ( ( et /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp13 3ad2ant2 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp221 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ph ) $=
    ( w3a simp21 3ad2ant2 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp222 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ps ) $=
    ( w3a simp22 3ad2ant2 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp223 $p |- ( ( et /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) /\ ze ) -> ch ) $=
    ( w3a simp23 3ad2ant2 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp231 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ph ) $=
    ( w3a simp31 3ad2ant2 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp232 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ps ) $=
    ( w3a simp32 3ad2ant2 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp233 $p |- ( ( et /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) /\ ze ) -> ch ) $=
    ( w3a simp33 3ad2ant2 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp311 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ph ) $=
    ( w3a simp11 3ad2ant3 ) ABCHDEHFAGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp312 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ps ) $=
    ( w3a simp12 3ad2ant3 ) ABCHDEHFBGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp313 $p |- ( ( et /\ ze /\ ( ( ph /\ ps /\ ch ) /\ th /\ ta ) ) -> ch ) $=
    ( w3a simp13 3ad2ant3 ) ABCHDEHFCGABCDEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp321 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ph ) $=
    ( w3a simp21 3ad2ant3 ) DABCHEHFAGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp322 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ps ) $=
    ( w3a simp22 3ad2ant3 ) DABCHEHFBGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp323 $p |- ( ( et /\ ze /\ ( th /\ ( ph /\ ps /\ ch ) /\ ta ) ) -> ch ) $=
    ( w3a simp23 3ad2ant3 ) DABCHEHFCGDABCEIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp331 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ph ) $=
    ( w3a simp31 3ad2ant3 ) DEABCHHFAGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp332 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ps ) $=
    ( w3a simp32 3ad2ant3 ) DEABCHHFBGDEABCIJ $.
    $( [9-Mar-2012] $)

  $( Simplification of conjunction. $)
  simp333 $p |- ( ( et /\ ze /\ ( th /\ ta /\ ( ph /\ ps /\ ch ) ) ) -> ch ) $=
    ( w3a simp33 3ad2ant3 ) DEABCHHFCGDEABCIJ $.
    $( [9-Mar-2012] $)

  ${
    3adantl.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adantl1 $p |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) $=
      ( w3a wa 3simpc sylan ) EABGABHCDEABIFJ $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantl2 $p |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) $=
      ( w3a wa 3simpb sylan ) AEBGABHCDAEBIFJ $.
      $( [24-Feb-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantl3 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( w3a wa 3simpa sylan ) ABEGABHCDABEIFJ $.
      $( [24-Feb-2005] $)
  $}

  ${
    3adantr.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adantr1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( w3a wa 3simpc sylan2 ) EBCGABCHDEBCIFJ $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantr2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( w3a wa 3simpb sylan2 ) BECGABCHDBECIFJ $.
      $( [27-Apr-2005] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adantr3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( w3a wa 3simpa sylan2 ) BCEGABCHDBCEIFJ $.
      $( [27-Apr-2005] $)
  $}

  ${
    3ad2antl.1 $e |- ( ( ph /\ ch ) -> th ) $.
    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl1 $p |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl2 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl2 $p |- ( ( ( ps /\ ph /\ ta ) /\ ch ) -> th ) $=
      ( adantlr 3adantl1 ) AECDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding conjuncts to antecedent. $)
    3ad2antl3 $p |- ( ( ( ps /\ ta /\ ph ) /\ ch ) -> th ) $=
      ( adantll 3adantl1 ) EACDBACDEFGH $.
      $( [4-Aug-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr1 $p |- ( ( ph /\ ( ch /\ ps /\ ta ) ) -> th ) $=
      ( adantrr 3adantr3 ) ACBDEACDBFGH $.
      $( [25-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr2 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( adantrl 3adantr3 ) ABCDEACDBFGH $.
      $( [27-Dec-2007] $)

    $( Deduction adding a conjuncts to antecedent. $)
    3ad2antr3 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( adantrl 3adantr1 ) AECDBACDEFGH $.
      $( [30-Dec-2007] $)
  $}

  ${
    3anibar.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ( ch /\ ta ) ) ) $.
    $( Remove a hypothesis from the second member of a biimplication.
       (Contributed by FL, 22-Jul-2008.) $)
    3anibar $p |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $=
      ( w3a wa simp3 biantrurd bitr4d ) ABCGZDCEHEFLCEABCIJK $.
      $( [2-Mar-2011] $) $( [14-Jul-2008] $)
  $}

  $( Introduction in triple disjunction. $)
  3mix1 $p |- ( ph -> ( ph \/ ps \/ ch ) ) $=
    ( wo w3o orc 3orass sylibr ) AABCDZDABCEAIFABCGH $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix2 $p |- ( ph -> ( ps \/ ph \/ ch ) ) $=
    ( w3o 3mix1 3orrot sylibr ) AACBDBACDACBEBACFG $.
    $( [4-Apr-1995] $)

  $( Introduction in triple disjunction. $)
  3mix3 $p |- ( ph -> ( ps \/ ch \/ ph ) ) $=
    ( w3o 3mix1 3orrot sylib ) AABCDBCADABCEABCFG $.
    $( [4-Apr-1995] $)

  ${
    3mixi.1 $e |- ph $.
    $( Introduction in triple disjunction. $)
    3mix1i $p |- ( ph \/ ps \/ ch ) $=
      ( w3o 3mix1 ax-mp ) AABCEDABCFG $.
      $( [6-Oct-2014] $)

    $( Introduction in triple disjunction. $)
    3mix2i $p |- ( ps \/ ph \/ ch ) $=
      ( w3o 3mix2 ax-mp ) ABACEDABCFG $.
      $( [6-Oct-2014] $)

    $( Introduction in triple disjunction. $)
    3mix3i $p |- ( ps \/ ch \/ ph ) $=
      ( w3o 3mix3 ax-mp ) ABCAEDABCFG $.
      $( [6-Oct-2014] $)
  $}

  ${
    3pm3.2i.1 $e |- ph $.
    3pm3.2i.2 $e |- ps $.
    3pm3.2i.3 $e |- ch $.
    $( Infer conjunction of premises. $)
    3pm3.2i $p |- ( ph /\ ps /\ ch ) $=
      ( w3a wa pm3.2i df-3an mpbir2an ) ABCGABHCABDEIFABCJK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $( ~ pm3.2 for a triple conjunction.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    pm3.2an3 $p |- ( ph -> ( ps -> ( ch -> ( ph /\ ps /\ ch ) ) ) ) $=
      ( wa w3a wi pm3.2 ex df-3an bicomi syl8ib ) ABCABDZCDZABCEZABCMFLCGHNMABC
      IJK $.
      $( [24-Oct-2011] $)
  $}

  ${
    3jca.1 $e |- ( ph -> ps ) $.
    3jca.2 $e |- ( ph -> ch ) $.
    3jca.3 $e |- ( ph -> th ) $.
    $( Join consequents with conjunction. $)
    3jca $p |- ( ph -> ( ps /\ ch /\ th ) ) $=
      ( wa w3a jca31 df-3an sylibr ) ABCHDHBCDIABCDEFGJBCDKL $.
      $( [9-Apr-1994] $)
  $}

  ${
    3jcad.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jcad.2 $e |- ( ph -> ( ps -> th ) ) $.
    3jcad.3 $e |- ( ph -> ( ps -> ta ) ) $.
    $( Deduction conjoining the consequents of three implications. $)
    3jcad $p |- ( ph -> ( ps -> ( ch /\ th /\ ta ) ) ) $=
      ( w3a wa imp 3jca ex ) ABCDEIABJCDEABCFKABDGKABEHKLM $.
      $( [25-Sep-2005] $)
  $}

  ${
    mpbir3an.1 $e |- ps $.
    mpbir3an.2 $e |- ch $.
    mpbir3an.3 $e |- th $.
    mpbir3an.4 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    $( Detach a conjunction of truths in a biconditional. $)
    mpbir3an $p |- ph $=
      ( w3a 3pm3.2i mpbir ) ABCDIBCDEFGJHK $.
      $( [9-Jan-2015] $) $( [16-Sep-2011] $)
  $}

  ${
    mpbir3and.1 $e |- ( ph -> ch ) $.
    mpbir3and.2 $e |- ( ph -> th ) $.
    mpbir3and.3 $e |- ( ph -> ta ) $.
    mpbir3and.4 $e |- ( ph -> ( ps <-> ( ch /\ th /\ ta ) ) ) $.
    $( Detach a conjunction of truths in a biconditional.  (Contributed by
       Mario Carneiro, 11-May-2014.) $)
    mpbir3and $p |- ( ph -> ps ) $=
      ( w3a 3jca mpbird ) ABCDEJACDEFGHKIL $.
      $( [9-Jan-2015] $) $( [11-May-2014] $)
  $}

  ${
    mpbir3anOLD.1 $e |- ( ph <-> ( ps /\ ch /\ th ) ) $.
    mpbir3anOLD.2 $e |- ps $.
    mpbir3anOLD.3 $e |- ch $.
    mpbir3anOLD.4 $e |- th $.
    $( Obsolete version of ~ mpbir3an as of 9-Jan-2015. $)
    mpbir3anOLD $p |- ph $=
      ( mpbir3an ) ABCDFGHEI $.
      $( [16-Sep-2011] $)
  $}

  ${
    mpbir3andOLD.1 $e |- ( ph -> ( ps <-> ( ch /\ th /\ ta ) ) ) $.
    mpbir3andOLD.2 $e |- ( ph -> ch ) $.
    mpbir3andOLD.3 $e |- ( ph -> th ) $.
    mpbir3andOLD.4 $e |- ( ph -> ta ) $.
    $( Obsolete version of ~ mpbir3and as of 9-Jan-2015. $)
    mpbir3andOLD $p |- ( ph -> ps ) $=
      ( mpbir3and ) ABCDEGHIFJ $.
      $( [11-May-2014] $)
  $}

  ${
    syl3anbrc.1 $e |- ( ph -> ps ) $.
    syl3anbrc.2 $e |- ( ph -> ch ) $.
    syl3anbrc.3 $e |- ( ph -> th ) $.
    syl3anbrc.4 $e |- ( ta <-> ( ps /\ ch /\ th ) ) $.
    $( Syllogism inference.  (Contributed by Mario Carneiro, 11-May-2014.) $)
    syl3anbrc $p |- ( ph -> ta ) $=
      ( w3a 3jca sylibr ) ABCDJEABCDFGHKIL $.
      $( [11-May-2014] $)
  $}

  ${
    3anim123i.1 $e |- ( ph -> ps ) $.
    3anim123i.2 $e |- ( ch -> th ) $.
    3anim123i.3 $e |- ( ta -> et ) $.
    $( Join antecedents and consequents with conjunction. $)
    3anim123i $p |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) $=
      ( w3a 3ad2ant1 3ad2ant2 3ad2ant3 3jca ) ACEJBDFACBEGKCADEHLEAFCIMN $.
      $( [8-Apr-1994] $)
  $}

  ${
    3animi.1 $e |- ( ph -> ps ) $.
    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 16-Aug-2009.) $)
    3anim1i $p |- ( ( ph /\ ch /\ th ) -> ( ps /\ ch /\ th ) ) $=
      ( id 3anim123i ) ABCCDDECFDFG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)

    $( Add two conjuncts to antecedent and consequent.  (Contributed by Jeff
       Hankins, 19-Aug-2009.) $)
    3anim3i $p |- ( ( ch /\ th /\ ph ) -> ( ch /\ th /\ ps ) ) $=
      ( id 3anim123i ) CCDDABCFDFEG $.
      $( [21-Feb-2011] $) $( [16-Aug-2009] $)
  $}

  ${
    bi3.1 $e |- ( ph <-> ps ) $.
    bi3.2 $e |- ( ch <-> th ) $.
    bi3.3 $e |- ( ta <-> et ) $.
    $( Join 3 biconditionals with conjunction. $)
    3anbi123i $p |- ( ( ph /\ ch /\ ta ) <-> ( ps /\ th /\ et ) ) $=
      ( wa w3a anbi12i df-3an 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [21-Apr-1994] $)

    $( Join 3 biconditionals with disjunction. $)
    3orbi123i $p |- ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) $=
      ( wo w3o orbi12i df-3or 3bitr4i ) ACJZEJBDJZFJACEKBDFKOPEFABCDGHLILACEMBD
      FMN $.
      $( [17-May-1994] $)
  $}

  ${
    3anbi1i.1 $e |- ( ph <-> ps ) $.
    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi1i $p |- ( ( ph /\ ch /\ th ) <-> ( ps /\ ch /\ th ) ) $=
      ( biid 3anbi123i ) ABCCDDECFDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi2i $p |- ( ( ch /\ ph /\ th ) <-> ( ch /\ ps /\ th ) ) $=
      ( biid 3anbi123i ) CCABDDCFEDFG $.
      $( [8-Sep-2006] $)

    $( Inference adding two conjuncts to each side of a biconditional. $)
    3anbi3i $p |- ( ( ch /\ th /\ ph ) <-> ( ch /\ th /\ ps ) ) $=
      ( biid 3anbi123i ) CCDDABCFDFEG $.
      $( [8-Sep-2006] $)
  $}

  ${
    3imp.1 $e |- ( ph -> ( ps -> ( ch -> th ) ) ) $.
    $( Importation inference. $)
    3imp $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( w3a wa df-3an imp31 sylbi ) ABCFABGCGDABCHABCDEIJ $.
      $( [8-Apr-1994] $)
  $}

  ${
    3impa.1 $e |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impa $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp31 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impb.1 $e |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $.
    $( Importation from double to triple conjunction. $)
    3impb $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp32 3imp ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3impia.1 $e |- ( ( ph /\ ps ) -> ( ch -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impia $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wi ex 3imp ) ABCDABCDFEGH $.
      $( [13-Jun-2006] $)
  $}

  ${
    3impib.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Importation to triple conjunction. $)
    3impib $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( exp3a 3imp ) ABCDABCDEFG $.
      $( [13-Jun-2006] $)
  $}

  ${
    3exp.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Exportation inference. $)
    3exp $p |- ( ph -> ( ps -> ( ch -> th ) ) ) $=
      ( w3a pm3.2an3 syl8 ) ABCABCFDABCGEH $.
      $( [30-May-1994] $)

    $( Exportation from triple to double conjunction. $)
    3expa $p |- ( ( ( ph /\ ps ) /\ ch ) -> th ) $=
      ( 3exp imp31 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple to double conjunction. $)
    3expb $p |- ( ( ph /\ ( ps /\ ch ) ) -> th ) $=
      ( 3exp imp32 ) ABCDABCDEFG $.
      $( [20-Aug-1995] $)

    $( Exportation from triple conjunction. $)
    3expia $p |- ( ( ph /\ ps ) -> ( ch -> th ) ) $=
      ( wi 3exp imp ) ABCDFABCDEGH $.
      $( [19-May-2007] $)

    $( Exportation from triple conjunction. $)
    3expib $p |- ( ph -> ( ( ps /\ ch ) -> th ) ) $=
      ( 3exp imp3a ) ABCDABCDEFG $.
      $( [19-May-2007] $)

    $( Commutation in antecedent.  Swap 1st and 3rd.  (The proof was shortened
       by Andrew Salmon, 13-May-2011.) $)
    3com12 $p |- ( ( ps /\ ph /\ ch ) -> th ) $=
      ( w3a 3ancoma sylbi ) BACFABCFDBACGEH $.
      $( [16-May-2011] $) $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 1st and 3rd. $)
    3com13 $p |- ( ( ch /\ ps /\ ph ) -> th ) $=
      ( w3a 3anrev sylbi ) CBAFABCFDCBAGEH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Swap 2nd and 3rd. $)
    3com23 $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( 3exp com23 3imp ) ACBDABCDABCDEFGH $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate left. $)
    3coml $p |- ( ( ps /\ ch /\ ph ) -> th ) $=
      ( 3com23 3com13 ) ACBDABCDEFG $.
      $( [28-Jan-1996] $)

    $( Commutation in antecedent.  Rotate right. $)
    3comr $p |- ( ( ch /\ ph /\ ps ) -> th ) $=
      ( 3coml ) BCADABCDEFF $.
      $( [28-Jan-1996] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r1 $p |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) $=
      ( 3expb 3adantr1 ) ABCDEABCDFGH $.
      $( [16-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r2 $p |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) $=
      ( 3expb 3adantr2 ) ABCDEABCDFGH $.
      $( [17-Feb-2008] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r3 $p |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) $=
      ( 3expb 3adantr3 ) ABCDEABCDFGH $.
      $( [18-Feb-2008] $)
  $}

  ${
    3an1rs.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Swap conjuncts. $)
    3an1rs $p |- ( ( ( ph /\ ps /\ th ) /\ ch ) -> ta ) $=
      ( w3a wi ex 3exp com34 3imp imp ) ABDGCEABDCEHABCDEABCDEHABCGDEFIJKLM $.
      $( [16-Dec-2007] $)
  $}

  ${
    3imp1.1 $e |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $.
    $( Importation to left triple conjunction. $)
    3imp1 $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wi 3imp imp ) ABCGDEABCDEHFIJ $.
      $( [24-Feb-2005] $)

    $( Importation deduction for triple conjunction. $)
    3impd $p |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $=
      ( w3a wi com4l 3imp com12 ) BCDGAEBCDAEHABCDEFIJK $.
      $( [26-Oct-2006] $)

    $( Importation to right triple conjunction. $)
    3imp2 $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a 3impd imp ) ABCDGEABCDEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp1.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( Exportation from left triple conjunction. $)
    3exp1 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a ex 3exp ) ABCDEGABCHDEFIJ $.
      $( [24-Feb-2005] $)
  $}

  ${
    3expd.1 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( Exportation deduction for triple conjunction. $)
    3expd $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( wi w3a com12 3exp com4r ) BCDAEBCDAEGABCDHEFIJK $.
      $( [26-Oct-2006] $)
  $}

  ${
    3exp2.1 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( Exportation from right triple conjunction. $)
    3exp2 $p |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) $=
      ( w3a ex 3expd ) ABCDEABCDGEFHI $.
      $( [26-Oct-2006] $)
  $}

  ${
    exp5o.1 $e |- ( ( ph /\ ps /\ ch ) -> ( ( th /\ ta ) -> et ) ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp5o $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp3a 3exp ) ABCDEFHHABCIDEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp516.1 $e |- ( ( ( ph /\ ( ps /\ ch /\ th ) ) /\ ta ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp516 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( wi w3a exp31 3expd ) ABCDEFHABCDIEFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    exp520.1 $e |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
    $( A triple exportation inference.  (Contributed by Jeff Hankins,
       8-Jul-2009.) $)
    exp520 $p |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) $=
      ( w3a wa ex exp5o ) ABCDEFABCHDEIFGJK $.
      $( [8-Jul-2009] $)
  $}

  ${
    3adant1l.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Deduction adding a conjunct to antecedent. $)
    3adant1l $p |- ( ( ( ta /\ ph ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantll 3impb ) EAGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant1r $p |- ( ( ( ph /\ ta ) /\ ps /\ ch ) -> th ) $=
      ( wa 3expb adantlr 3impb ) AEGBCDABCGDEABCDFHIJ $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2l $p |- ( ( ph /\ ( ta /\ ps ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1l ) EBGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant2r $p |- ( ( ph /\ ( ps /\ ta ) /\ ch ) -> th ) $=
      ( wa 3com12 3adant1r ) BEGACDBACDEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3l $p |- ( ( ph /\ ps /\ ( ta /\ ch ) ) -> th ) $=
      ( wa 3com13 3adant1l ) ECGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)

    $( Deduction adding a conjunct to antecedent. $)
    3adant3r $p |- ( ( ph /\ ps /\ ( ch /\ ta ) ) -> th ) $=
      ( wa 3com13 3adant1r ) CEGBADCBADEABCDFHIH $.
      $( [8-Jan-2006] $)
  $}

  ${
    sylXanc.1 $e |- ( ph -> ps ) $.
    sylXanc.2 $e |- ( ph -> ch ) $.
    sylXanc.3 $e |- ( ph -> th ) $.
    ${
      syl12anc.4 $e |- ( ( ps /\ ( ch /\ th ) ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl12anc $p |- ( ph -> ta ) $=
        ( wa jca32 syl ) ABCDJJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl21anc.4 $e |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $.
      $( Syllogism combined with contraction.  (Contributed by Jeff Hankins,
         1-Aug-2009.) $)
      syl21anc $p |- ( ph -> ta ) $=
        ( wa jca31 syl ) ABCJDJEABCDFGHKIL $.
        $( [1-Aug-2009] $)
    $}

    ${
      syl111anc.4 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
      $( Syllogism combined with contraction. $)
      syl3anc $p |- ( ph -> ta ) $=
        ( w3a 3jca syl ) ABCDJEABCDFGHKIL $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.4 $e |- ( ph -> ta ) $.
    ${
      syl22anc.5 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl22anc $p |- ( ph -> et ) $=
        ( wa jca syl12anc ) ABCLDEFABCGHMIJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl13anc.5 $e |- ( ( ps /\ ( ch /\ th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl13anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl2anc ) ABCDELFGACDEHIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl31anc.5 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl31anc $p |- ( ph -> et ) $=
        ( w3a 3jca syl2anc ) ABCDLEFABCDGHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl112anc.5 $e |- ( ( ps /\ ch /\ ( th /\ ta ) ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl112anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCDELFGHADEIJMKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl121anc.5 $e |- ( ( ps /\ ( ch /\ th ) /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl121anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCDLEFGACDHIMJKN $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl211anc.5 $e |- ( ( ( ps /\ ch ) /\ th /\ ta ) -> et ) $.
      $( Syllogism combined with contraction. $)
      syl211anc $p |- ( ph -> et ) $=
        ( wa jca syl3anc ) ABCLDEFABCGHMIJKN $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.5 $e |- ( ph -> et ) $.
    ${
      syl23anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl23anc $p |- ( ph -> ze ) $=
        ( wa jca syl13anc ) ABCNDEFGABCHIOJKLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl32anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl32anc $p |- ( ph -> ze ) $=
        ( wa jca syl31anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl122anc.6 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl122anc $p |- ( ph -> ze ) $=
        ( wa jca syl121anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl212anc.6 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl212anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDEFNGHIJAEFKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl221anc.6 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl221anc $p |- ( ph -> ze ) $=
        ( wa jca syl211anc ) ABCDENFGHIADEJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl113anc.6 $e |- ( ( ps /\ ch /\ ( th /\ ta /\ et ) ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl113anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDEFNGHIADEFJKLOMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl131anc.6 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl131anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDENFGHACDEIJKOLMP $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl311anc.6 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ et ) -> ze ) $.
      $( Syllogism combined with contraction. $)
      syl311anc $p |- ( ph -> ze ) $=
        ( w3a 3jca syl3anc ) ABCDNEFGABCDHIJOKLMP $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.6 $e |- ( ph -> ze ) $.
    ${
      syl33anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl33anc $p |- ( ph -> si ) $=
        ( w3a 3jca syl13anc ) ABCDPEFGHABCDIJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl222anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl222anc $p |- ( ph -> si ) $=
        ( wa jca syl221anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl123anc.7 $e |- ( ( ps /\ ( ch /\ th ) /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl123anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCDPEFGHIACDJKQLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl132anc.7 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl132anc $p |- ( ph -> si ) $=
        ( wa jca syl131anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl213anc.7 $e |- ( ( ( ps /\ ch ) /\ th /\ ( ta /\ et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl213anc $p |- ( ph -> si ) $=
        ( wa jca syl113anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl231anc.7 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl231anc $p |- ( ph -> si ) $=
        ( wa jca syl131anc ) ABCPDEFGHABCIJQKLMNOR $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl312anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze ) )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl312anc $p |- ( ph -> si ) $=
        ( wa jca syl311anc ) ABCDEFGPHIJKLAFGMNQOR $.
        $( [11-Jul-2012] $)
    $}

    ${
      syl321anc.7 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ze )
           -> si ) $.
      $( Syllogism combined with contraction. $)
      syl321anc $p |- ( ph -> si ) $=
        ( wa jca syl311anc ) ABCDEFPGHIJKAEFLMQNOR $.
        $( [11-Jul-2012] $)
    $}

    sylXanc.7 $e |- ( ph -> si ) $.
    ${
      syl133anc.8 $e |- ( ( ps /\ ( ch /\ th /\ ta ) /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl133anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl131anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl313anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ta /\ ( et /\ ze /\ si ) )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl313anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGHRIJKLMAFGHNOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl331anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ si )
           -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl331anc $p |- ( ph -> rh ) $=
        ( w3a 3jca syl311anc ) ABCDEFGRHIJKLAEFGMNOSPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl223anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta ) /\ ( et /\ ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl223anc $p |- ( ph -> rh ) $=
        ( wa jca syl213anc ) ABCDERFGHIJKADELMSNOPQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl232anc.8 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl232anc $p |- ( ph -> rh ) $=
        ( wa jca syl231anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl322anc.8 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si )
          ) -> rh ) $.
      $( Syllogism combined with contraction. $)
      syl322anc $p |- ( ph -> rh ) $=
        ( wa jca syl321anc ) ABCDEFGHRIJKLMNAGHOPSQT $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.8 $e |- ( ph -> rh ) $.
    ${
      syl233anc.9 $e |- ( ( ( ps /\ ch ) /\ ( th /\ ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl233anc $p |- ( ph -> mu ) $=
        ( wa jca syl133anc ) ABCTDEFGHIJABCKLUAMNOPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl323anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et ) /\ ( ze /\ si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl323anc $p |- ( ph -> mu ) $=
        ( wa jca syl313anc ) ABCDEFTGHIJKLMAEFNOUAPQRSUB $.
        $( [11-Mar-2012] $)
    $}

    ${
      syl332anc.9 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze ) /\ ( si /\
          rh ) ) -> mu ) $.
      $( Syllogism combined with contraction. $)
      syl332anc $p |- ( ph -> mu ) $=
        ( wa jca syl331anc ) ABCDEFGHITJKLMNOPAHIQRUASUB $.
        $( [11-Mar-2012] $)
    $}

    sylXanc.9 $e |- ( ph -> mu ) $.
    ${
      syl333anc.10 $e |- ( ( ( ps /\ ch /\ th ) /\ ( ta /\ et /\ ze )
          /\ ( si /\ rh /\ mu ) ) -> la ) $.
      $( A syllogism inference combined with contraction. $)
      syl333anc $p |- ( ph -> la ) $=
        ( w3a 3jca syl331anc ) ABCDEFGHIJUBKLMNOPQAHIJRSTUCUAUD $.
        $( [10-Mar-2012] $)
    $}
  $}

  ${
    syl3an1.1 $e |- ( ph -> ps ) $.
    syl3an1.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1 $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( w3a 3anim1i syl ) ACDHBCDHEABCDFIGJ $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2.1 $e |- ( ph -> ch ) $.
    syl3an2.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2 $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( wi 3exp syl5 3imp ) BADEACBDEHFBCDEGIJK $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3.1 $e |- ( ph -> th ) $.
    syl3an3.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3 $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( 3exp syl7 3imp ) BCAEADBCEFBCDEGHIJ $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an1b.1 $e |- ( ph <-> ps ) $.
    syl3an1b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1b $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( biimpi syl3an1 ) ABCDEABFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2b.1 $e |- ( ph <-> ch ) $.
    syl3an2b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2b $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( biimpi syl3an2 ) ABCDEACFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3b.1 $e |- ( ph <-> th ) $.
    syl3an3b.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3b $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( biimpi syl3an3 ) ABCDEADFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an1br.1 $e |- ( ps <-> ph ) $.
    syl3an1br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an1br $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( biimpri syl3an1 ) ABCDEBAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an2br.1 $e |- ( ch <-> ph ) $.
    syl3an2br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an2br $p |- ( ( ps /\ ph /\ th ) -> ta ) $=
      ( biimpri syl3an2 ) ABCDECAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an3br.1 $e |- ( th <-> ph ) $.
    syl3an3br.2 $e |- ( ( ps /\ ch /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syl3an3br $p |- ( ( ps /\ ch /\ ph ) -> ta ) $=
      ( biimpri syl3an3 ) ABCDEDAFHGI $.
      $( [22-Aug-1995] $)
  $}

  ${
    syl3an.1 $e |- ( ph -> ps ) $.
    syl3an.2 $e |- ( ch -> th ) $.
    syl3an.3 $e |- ( ta -> et ) $.
    syl3an.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3an $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( w3a 3anim123i syl ) ACELBDFLGABCDEFHIJMKN $.
      $( [13-May-2004] $)
  $}

  ${
    syl3anb.1 $e |- ( ph <-> ps ) $.
    syl3anb.2 $e |- ( ch <-> th ) $.
    syl3anb.3 $e |- ( ta <-> et ) $.
    syl3anb.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3anb $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( w3a 3anbi123i sylbi ) ACELBDFLGABCDEFHIJMKN $.
      $( [15-Oct-2005] $)
  $}

  ${
    syl3anbr.1 $e |- ( ps <-> ph ) $.
    syl3anbr.2 $e |- ( th <-> ch ) $.
    syl3anbr.3 $e |- ( et <-> ta ) $.
    syl3anbr.4 $e |- ( ( ps /\ th /\ et ) -> ze ) $.
    $( A triple syllogism inference. $)
    syl3anbr $p |- ( ( ph /\ ch /\ ta ) -> ze ) $=
      ( bicomi syl3anb ) ABCDEFGBAHLDCILFEJLKM $.
      $( [29-Dec-2011] $)
  $}

  ${
    syld3an3.1 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    syld3an3.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an3 $p |- ( ( ph /\ ps /\ ch ) -> ta ) $=
      ( w3a simp1 simp2 syl3anc ) ABCHABDEABCIABCJFGK $.
      $( [20-May-2007] $)
  $}

  ${
    syld3an1.1 $e |- ( ( ch /\ ps /\ th ) -> ph ) $.
    syld3an1.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an1 $p |- ( ( ch /\ ps /\ th ) -> ta ) $=
      ( 3com13 syld3an3 ) DBCEDBCAECBDAFHABDEGHIH $.
      $( [7-Jul-2008] $)
  $}

  ${
    syld3an2.1 $e |- ( ( ph /\ ch /\ th ) -> ps ) $.
    syld3an2.2 $e |- ( ( ph /\ ps /\ th ) -> ta ) $.
    $( A syllogism inference. $)
    syld3an2 $p |- ( ( ph /\ ch /\ th ) -> ta ) $=
      ( 3com23 syld3an3 ) ADCEADCBEACDBFHABDEGHIH $.
      $( [20-May-2007] $)
  $}

  ${
    syl3anl1.1 $e |- ( ph -> ps ) $.
    syl3anl1.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl1 $p |- ( ( ( ph /\ ch /\ th ) /\ ta ) -> et ) $=
      ( w3a 3anim1i sylan ) ACDIBCDIEFABCDGJHK $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl2.1 $e |- ( ph -> ch ) $.
    syl3anl2.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl2 $p |- ( ( ( ps /\ ph /\ th ) /\ ta ) -> et ) $=
      ( w3a wi ex syl3an2 imp ) BADIEFABCDEFJGBCDIEFHKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl3.1 $e |- ( ph -> th ) $.
    syl3anl3.2 $e |- ( ( ( ps /\ ch /\ th ) /\ ta ) -> et ) $.
    $( A syllogism inference. $)
    syl3anl3 $p |- ( ( ( ps /\ ch /\ ph ) /\ ta ) -> et ) $=
      ( w3a 3anim3i sylan ) BCAIBCDIEFADBCGJHK $.
      $( [24-Feb-2005] $)
  $}

  ${
    syl3anl.1 $e |- ( ph -> ps ) $.
    syl3anl.2 $e |- ( ch -> th ) $.
    syl3anl.3 $e |- ( ta -> et ) $.
    syl3anl.4 $e |- ( ( ( ps /\ th /\ et ) /\ ze ) -> si ) $.
    $( A triple syllogism inference. $)
    syl3anl $p |- ( ( ( ph /\ ch /\ ta ) /\ ze ) -> si ) $=
      ( w3a 3anim123i sylan ) ACEMBDFMGHABCDEFIJKNLO $.
      $( [24-Dec-2006] $)
  $}

  ${
    syl3anr1.1 $e |- ( ph -> ps ) $.
    syl3anr1.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr1 $p |- ( ( ch /\ ( ph /\ th /\ ta ) ) -> et ) $=
      ( w3a 3anim1i sylan2 ) ADEICBDEIFABDEGJHK $.
      $( [31-Jul-2007] $)
  $}

  ${
    syl3anr2.1 $e |- ( ph -> th ) $.
    syl3anr2.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr2 $p |- ( ( ch /\ ( ps /\ ph /\ ta ) ) -> et ) $=
      ( w3a ancoms syl3anl2 ) BAEICFABDECFGCBDEIFHJKJ $.
      $( [1-Aug-2007] $)
  $}

  ${
    syl3anr3.1 $e |- ( ph -> ta ) $.
    syl3anr3.2 $e |- ( ( ch /\ ( ps /\ th /\ ta ) ) -> et ) $.
    $( A syllogism inference. $)
    syl3anr3 $p |- ( ( ch /\ ( ps /\ th /\ ph ) ) -> et ) $=
      ( w3a 3anim3i sylan2 ) BDAICBDEIFAEBDGJHK $.
      $( [23-Aug-2007] $)
  $}

  ${
    3impdi.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdi $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( anandis 3impb ) ABCDABCDEFG $.
      $( [14-Aug-1995] $)
  $}

  ${
    3impdir.1 $e |- ( ( ( ph /\ ps ) /\ ( ch /\ ps ) ) -> th ) $.
    $( Importation inference (undistribute conjunction). $)
    3impdir $p |- ( ( ph /\ ch /\ ps ) -> th ) $=
      ( anandirs 3impa ) ACBDACBDEFG $.
      $( [20-Aug-1995] $)
  $}

  ${
    3anidm12.1 $e |- ( ( ph /\ ph /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm12 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expib anabsi5 ) ABCAABCDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm13.1 $e |- ( ( ph /\ ps /\ ph ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm13 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3com23 3anidm12 ) ABCABACDEF $.
      $( [7-Mar-2008] $)
  $}

  ${
    3anidm23.1 $e |- ( ( ph /\ ps /\ ps ) -> ch ) $.
    $( Inference from idempotent law for conjunction. $)
    3anidm23 $p |- ( ( ph /\ ps ) -> ch ) $=
      ( 3expa anabss3 ) ABCABBCDEF $.
      $( [1-Feb-2007] $)
  $}

  ${
    3ori.1 $e |- ( ph \/ ps \/ ch ) $.
    $( Infer implication from triple disjunction. $)
    3ori $p |- ( ( -. ph /\ -. ps ) -> ch ) $=
      ( wn wa wo ioran w3o df-3or mpbi ori sylbir ) AEBEFABGZECABHNCABCINCGDABC
      JKLM $.
      $( [26-Sep-2006] $)
  $}

  $( Disjunction of 3 antecedents. $)
  3jao $p |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ->
              ( ( ph \/ ch \/ th ) -> ps ) ) $=
    ( w3o wo wi w3a df-3or jao syl6 3imp syl5bi ) ACDEACFZDFZABGZCBGZDBGZHBACDI
    PQROBGZPQNBGRSGABCJNBDJKLM $.
    $( [8-Apr-1994] $)

  $( Disjunction of 3 antecedents. $)
  3jaob $p |- ( ( ( ph \/ ch \/ th ) -> ps ) <->
              ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ) $=
    ( w3o wi w3a 3mix1 imim1i 3mix2 3mix3 3jca 3jao impbii ) ACDEZBFZABFZCBFZDB
    FZGPQRSAOBACDHICOBCADJIDOBDACKILABCDMN $.
    $( [13-Sep-2011] $)

  ${
    3jaoi.1 $e |- ( ph -> ps ) $.
    3jaoi.2 $e |- ( ch -> ps ) $.
    3jaoi.3 $e |- ( th -> ps ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoi $p |- ( ( ph \/ ch \/ th ) -> ps ) $=
      ( wi w3a w3o 3pm3.2i 3jao ax-mp ) ABHZCBHZDBHZIACDJBHNOPEFGKABCDLM $.
      $( [12-Sep-1995] $)
  $}

  ${
    3jaod.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaod.2 $e |- ( ph -> ( th -> ch ) ) $.
    3jaod.3 $e |- ( ph -> ( ta -> ch ) ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaod $p |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) $=
      ( wi w3o 3jao syl3anc ) ABCIDCIECIBDEJCIFGHBCDEKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaoian.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaoian.2 $e |- ( ( th /\ ps ) -> ch ) $.
    3jaoian.3 $e |- ( ( ta /\ ps ) -> ch ) $.
    $( Disjunction of 3 antecedents (inference). $)
    3jaoian $p |- ( ( ( ph \/ th \/ ta ) /\ ps ) -> ch ) $=
      ( w3o wi ex 3jaoi imp ) ADEIBCABCJDEABCFKDBCGKEBCHKLM $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaodan.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    3jaodan.2 $e |- ( ( ph /\ th ) -> ch ) $.
    3jaodan.3 $e |- ( ( ph /\ ta ) -> ch ) $.
    $( Disjunction of 3 antecedents (deduction). $)
    3jaodan $p |- ( ( ph /\ ( ps \/ th \/ ta ) ) -> ch ) $=
      ( w3o ex 3jaod imp ) ABDEICABCDEABCFJADCGJAECHJKL $.
      $( [14-Oct-2005] $)
  $}

  ${
    3jaao.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3jaao.2 $e |- ( th -> ( ta -> ch ) ) $.
    3jaao.3 $e |- ( et -> ( ze -> ch ) ) $.
    $( Inference conjoining and disjoining the antecedents of three
       implications.  (Contributed by Jeff Hankins, 15-Aug-2009.)  (The proof
       was shortened by Andrew Salmon, 13-May-2011.) $)
    3jaao $p |- ( ( ph /\ th /\ et ) -> ( ( ps \/ ta \/ ze ) -> ch ) ) $=
      ( w3a wi 3ad2ant1 3ad2ant2 3ad2ant3 3jaod ) ADFKBCEGADBCLFHMDAECLFINFAGCL
      DJOP $.
      $( [16-May-2011] $) $( [3-Aug-2009] $)
  $}

  ${
    syl3an9b.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    syl3an9b.2 $e |- ( th -> ( ch <-> ta ) ) $.
    syl3an9b.3 $e |- ( et -> ( ta <-> ze ) ) $.
    $( Nested syllogism inference conjoining 3 dissimilar antecedents. $)
    syl3an9b $p |- ( ( ph /\ th /\ et ) -> ( ps <-> ze ) ) $=
      ( wb wa sylan9bb 3impa ) ADFBGKADLBEFGABCDEHIMJMN $.
      $( [1-May-1995] $)
  $}

  ${
    bi3d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    bi3d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    bi3d.3 $e |- ( ph -> ( et <-> ze ) ) $.
    $( Deduction joining 3 equivalences to form equivalence of disjunctions. $)
    3orbi123d $p |- ( ph -> ( ( ps \/ th \/ et ) <-> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orbi12d df-3or 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [20-Apr-1994] $)

    $( Deduction joining 3 equivalences to form equivalence of conjunctions. $)
    3anbi123d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anbi12d df-3an 3bitr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [22-Apr-1994] $)
  $}

  ${
    3anbi12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    3anbi12d.2 $e |- ( ph -> ( th <-> ta ) ) $.
    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi12d $p |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ et ) ) ) $=
      ( biidd 3anbi123d ) ABCDEFFGHAFIJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi13d $p |- ( ph -> ( ( ps /\ et /\ th ) <-> ( ch /\ et /\ ta ) ) ) $=
      ( biidd 3anbi123d ) ABCFFDEGAFIHJ $.
      $( [8-Sep-2006] $)

    $( Deduction conjoining and adding a conjunct to equivalences. $)
    3anbi23d $p |- ( ph -> ( ( et /\ ps /\ th ) <-> ( et /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi123d ) AFFBCDEAFIGHJ $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anbi1d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction adding conjuncts to an equivalence. $)
    3anbi1d $p |- ( ph -> ( ( ps /\ th /\ ta ) <-> ( ch /\ th /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ABCDDEFADGH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi2d $p |- ( ph -> ( ( th /\ ps /\ ta ) <-> ( th /\ ch /\ ta ) ) ) $=
      ( biidd 3anbi12d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)

    $( Deduction adding conjuncts to an equivalence. $)
    3anbi3d $p |- ( ph -> ( ( th /\ ta /\ ps ) <-> ( th /\ ta /\ ch ) ) ) $=
      ( biidd 3anbi13d ) ADDBCEADGFH $.
      $( [8-Sep-2006] $)
  $}

  ${
    3anim123d.1 $e |- ( ph -> ( ps -> ch ) ) $.
    3anim123d.2 $e |- ( ph -> ( th -> ta ) ) $.
    3anim123d.3 $e |- ( ph -> ( et -> ze ) ) $.
    $( Deduction joining 3 implications to form implication of conjunctions. $)
    3anim123d $p |- ( ph -> ( ( ps /\ th /\ et ) -> ( ch /\ ta /\ ze ) ) ) $=
      ( wa w3a anim12d df-3an 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [24-Feb-2005] $)

    $( Deduction joining 3 implications to form implication of disjunctions. $)
    3orim123d $p |- ( ph -> ( ( ps \/ th \/ et ) -> ( ch \/ ta \/ ze ) ) ) $=
      ( wo w3o orim12d df-3or 3imtr4g ) ABDKZFKCEKZGKBDFLCEGLAPQFGABCDEHIMJMBDF
      NCEGNO $.
      $( [4-Apr-1997] $)
  $}

  $( Rearrangement of 6 conjuncts. $)
  an6 $p |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <->
              ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) ) $=
    ( w3a wa df-3an anbi12i an4 anbi1i 3bitri bitr4i ) ABCGZDEFGZHZADHZBEHZHZCF
    HZHZRSUAGQABHZCHZDEHZFHZHUCUEHZUAHUBOUDPUFABCIDEFIJUCCUEFKUGTUAABDEKLMRSUAI
    N $.
    $( [13-Mar-1995] $)

  $( Analog of ~ an4 for triple conjunction.  (Contributed by Scott Fenton,
     16-Mar-2011.)  (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
  3an6 $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) /\ ( ta /\ et ) ) <->
                ( ( ph /\ ch /\ ta ) /\ ( ps /\ th /\ et ) ) ) $=
    ( w3a wa an6 bicomi ) ACEGBDFGHABHCDHEFHGACEBDFIJ $.
    $( [25-May-2011] $) $( [16-Mar-2011] $)

  $( Analog of ~ or4 for triple conjunction.  (Contributed by Scott Fenton,
     16-Mar-2011.) $)
  3or6 $p |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) \/ ( ta \/ et ) ) <->
                ( ( ph \/ ch \/ ta ) \/ ( ps \/ th \/ et ) ) ) $=
    ( wo w3o or4 orbi1i bitr2i df-3or orbi12i 3bitr4i ) ABGZCDGZGZEFGZGZACGZEGZ
    BDGZFGZGZOPRHACEHZBDFHZGUDTUBGZRGSTEUBFIUGQRACBDIJKOPRLUEUAUFUCACELBDFLMN
    $.
    $( [20-Mar-2011] $)

  ${
    mp3an1.1 $e |- ph $.
    mp3an1.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an1 $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa 3expb mpan ) ABCGDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an2.1 $e |- ps $.
    mp3an2.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an2 $p |- ( ( ph /\ ch ) -> th ) $=
      ( 3expa mpanl2 ) ABCDEABCDFGH $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an3.1 $e |- ch $.
    mp3an3.2 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expia mpi ) ABGCDEABCDFHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    mp3an12.1 $e |- ph $.
    mp3an12.2 $e |- ps $.
    mp3an12.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an12 $p |- ( ch -> th ) $=
      ( mp3an1 mpan ) BCDFABCDEGHI $.
      $( [13-Jul-2005] $)
  $}

  ${
    mp3an13.1 $e |- ph $.
    mp3an13.2 $e |- ch $.
    mp3an13.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an13 $p |- ( ps -> th ) $=
      ( mp3an3 mpan ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an23.1 $e |- ps $.
    mp3an23.2 $e |- ch $.
    mp3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an23 $p |- ( ph -> th ) $=
      ( mp3an3 mpan2 ) ABDEABCDFGHI $.
      $( [14-Jul-2005] $)
  $}

  ${
    mp3an1i.1 $e |- ps $.
    mp3an1i.2 $e |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) $.
    $( An inference based on modus ponens. $)
    mp3an1i $p |- ( ph -> ( ( ch /\ th ) -> ta ) ) $=
      ( wa wi w3a com12 mp3an1 ) CDHAEBCDAEIFABCDJEGKLK $.
      $( [5-Jul-2005] $)
  $}

  ${
    mp3anl1.1 $e |- ph $.
    mp3anl1.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl1 $p |- ( ( ( ps /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an1 imp ) BCHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl2.1 $e |- ps $.
    mp3anl2.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl2 $p |- ( ( ( ph /\ ch ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an2 imp ) ACHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anl3.1 $e |- ch $.
    mp3anl3.2 $e |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anl3 $p |- ( ( ( ph /\ ps ) /\ th ) -> ta ) $=
      ( wa wi w3a ex mp3an3 imp ) ABHDEABCDEIFABCJDEGKLM $.
      $( [24-Feb-2005] $)
  $}

  ${
    mp3anr1.1 $e |- ps $.
    mp3anr1.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr1 $p |- ( ( ph /\ ( ch /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl1 ) CDHAEBCDAEFABCDIEGJKJ $.
      $( [4-Nov-2006] $)
  $}

  ${
    mp3anr2.1 $e |- ch $.
    mp3anr2.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr2 $p |- ( ( ph /\ ( ps /\ th ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl2 ) BDHAEBCDAEFABCDIEGJKJ $.
      $( [24-Nov-2006] $)
  $}

  ${
    mp3anr3.1 $e |- th $.
    mp3anr3.2 $e |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $.
    $( An inference based on modus ponens. $)
    mp3anr3 $p |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) $=
      ( wa w3a ancoms mp3anl3 ) BCHAEBCDAEFABCDIEGJKJ $.
      $( [19-Oct-2007] $)
  $}

  ${
    mp3an.1 $e |- ph $.
    mp3an.2 $e |- ps $.
    mp3an.3 $e |- ch $.
    mp3an.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mp3an $p |- th $=
      ( mp3an1 mp2an ) BCDFGABCDEHIJ $.
      $( [14-May-1999] $)
  $}

  ${
    mpd3an3.2 $e |- ( ( ph /\ ps ) -> ch ) $.
    mpd3an3.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an3 $p |- ( ( ph /\ ps ) -> th ) $=
      ( wa 3expa mpdan ) ABGCDEABCDFHI $.
      $( [8-Nov-2007] $)
  $}

  ${
    mpd3an23.1 $e |- ( ph -> ps ) $.
    mpd3an23.2 $e |- ( ph -> ch ) $.
    mpd3an23.3 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( An inference based on modus ponens. $)
    mpd3an23 $p |- ( ph -> th ) $=
      ( id syl3anc ) AABCDAHEFGI $.
      $( [4-Dec-2006] $)
  $}

  ${
    biimp3a.1 $e |- ( ( ph /\ ps ) -> ( ch <-> th ) ) $.
    $( Infer implication from a logical equivalence.  Similar to ~ biimpa . $)
    biimp3a $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa biimpa 3impa ) ABCDABFCDEGH $.
      $( [4-Sep-2005] $)

    $( Infer implication from a logical equivalence.  Similar to ~ biimpar . $)
    biimp3ar $p |- ( ( ph /\ ps /\ th ) -> ch ) $=
      ( exbiri 3imp ) ABDCABCDEFG $.
      $( [2-Jan-2009] $)
  $}

  ${
    3anandis.1 $e |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) /\ ( ph /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandis $p |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) $=
      ( w3a wa simpl simpr1 simpr2 simpr3 syl222anc ) ABCDGZHABACADEANIZABCDJOA
      BCDKOABCDLFM $.
      $( [18-Apr-2007] $)
  $}

  ${
    3anandirs.1 $e |- ( ( ( ph /\ th ) /\ ( ps /\ th ) /\ ( ch /\ th ) )
                      -> ta ) $.
    $( Inference that undistributes a triple conjunction in the antecedent. $)
    3anandirs $p |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) $=
      ( w3a wa simpl1 simpr simpl2 simpl3 syl222anc ) ABCGZDHADBDCDEABCDINDJZAB
      CDKOABCDLOFM $.
      $( [18-Apr-2007] $) $( [25-Jul-2006] $)
  $}

  ${
    ecase23d.1 $e |- ( ph -> -. ch ) $.
    ecase23d.2 $e |- ( ph -> -. th ) $.
    ecase23d.3 $e |- ( ph -> ( ps \/ ch \/ th ) ) $.
    $( Deduction for elimination by cases. $)
    ecase23d $p |- ( ph -> ps ) $=
      ( wo wn ioran sylanbrc w3o 3orass sylib ord mt3d ) ABCDHZACIDIQIEFCDJKABQ
      ABCDLBQHGBCDMNOP $.
      $( [15-Jul-2005] $) $( [22-Apr-1994] $)
  $}

  ${
    3ecase.1 $e |- ( -. ph -> th ) $.
    3ecase.2 $e |- ( -. ps -> th ) $.
    3ecase.3 $e |- ( -. ch -> th ) $.
    3ecase.4 $e |- ( ( ph /\ ps /\ ch ) -> th ) $.
    $( Inference for elimination by cases. $)
    3ecase $p |- th $=
      ( wi 3exp wn a1d pm2.61i pm2.61nii ) BCDABCDIZIABCDHJAKZOBPDCELLMFGN $.
      $( [13-Jul-2005] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical 'nand' (Sheffer stroke)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c -/\ $. $( 'nand' ) $)
  $( Extend wff definition to include 'nand'. $)
  wnan $a wff ( ph -/\ ps ) $.

  $( Define incompatibility ('not-and' or 'nand').  This is also called the
     Sheffer stroke, represented by a vertical bar, but we use a different
     symbol to avoid ambiguity with other uses of the vertical bar.  After we
     define the constant true ` T. ` ( ~ df-tru ) and the constant false ` F. `
     ( ~ df-fal ), we will be able to prove these truth table values:
     ` ( ( T. /\ T. ) <-> F. ) ` ( ~ trunantru ), ` ( ( T. /\ F. ) <-> T. ) `
     ( ~ trunanfal ), ` ( ( F. /\ T. ) <-> T. ) ` ( ~ falnantru ), and
     ` ( ( F. /\ F. ) <-> T. ) ` ( ~ falnanfal ).  Contrast with ` /\ `
     ( ~ df-an ), ` \/ ` ( ~ df-or ), ` -> ` ( ~ wi ), and ` \/_ `
     ( ~ df-xor ) . $)
  df-nan $a |- ( ( ph -/\ ps ) <-> -. ( ph /\ ps ) ) $.

  $( Write 'and' in terms of 'nand'.  (Contributed by Mario Carneiro,
     9-May-2015.) $)
  nanan $p |- ( ( ph /\ ps ) <-> -. ( ph -/\ ps ) ) $=
    ( wnan wa df-nan con2bii ) ABCABDABEF $.
    $( [9-May-2015] $)

  $( The 'nand' operator commutes.  (Contributed by Mario Carneiro,
     9-May-2015.) $)
  nancom $p |- ( ( ph -/\ ps ) <-> ( ps -/\ ph ) ) $=
    ( wa wn wnan ancom notbii df-nan 3bitr4i ) ABCZDBACZDABEBAEJKABFGABHBAHI $.
    $( [9-May-2015] $)

  $( Lemma for handling nested 'nand's. $)
  nannan $p |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) $=
    ( wnan wa wn wi df-nan anbi2i xchbinx iman bitr4i ) ACBDZDZACBEZFZEZFAOGNAM
    EQAMHMPACBHIJAOKL $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between implication and the Nicod version.  To derive
     ~ nic-dfim , apply ~ nanbi . $)
  nanim $p |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) $=
    ( wnan wa wi nannan anidmdbi bitr2i ) ABBCCABBDEABEABBFABGH $.
    $( [17-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between negation and the Nicod version.  To derive
     ~ nic-dfneg , apply ~ nanbi . $)
  nannot $p |- ( -. ps <-> ( ps -/\ ps ) ) $=
    ( wnan wn wa df-nan anidm xchbinx bicomi ) AABZACIAADAAAEAFGH $.
    $( [16-Dec-2008] $) $( [19-Nov-2007] $)

  $( Show equivalence between the bidirectional and the Nicod version.
     (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nanbi $p |- ( ( ph <-> ps ) <->
          ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) $=
    ( wa wn wo wb pm4.57 df-nan nannot anbi12i xchbinxr xchbinx dfbi3 3bitr4ri
    wnan ) ABCZDZADZBDZCZDZCZDPTEABOZAAOZBBOZOZOZABFPTGUGUCUFCUBUCUFHUCQUFUAABH
    UFUDUECTUDUEHRUDSUEAIBIJKJLABMN $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical 'xor'
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare connectives for exclusive disjunction ('xor'). $)
  $c \/_ $. $( Underlined 'vee' (read:  'xor') $)

  $( Extend wff definition to include exclusive disjunction ('xor'). $)
  wxo $a wff ( ph \/_ ps ) $.

  $( Define exclusive disjunction (logical 'xor').  Return true if either the
     left or right, but not both, are true.  After we define the constant true
     ` T. ` ( ~ df-tru ) and the constant false ` F. ` ( ~ df-fal ), we will be
     able to prove these truth table values: ` ( ( T. \/_ T. ) <-> F. ) `
     ( ~ truxortru ), ` ( ( T. \/_ F. ) <-> T. ) ` ( ~ truxorfal ),
     ` ( ( F. \/_ T. ) <-> T. ) ` ( ~ falxortru ), and
     ` ( ( F. \/_ F. ) <-> F. ) ` ( ~ falxorfal ).  Contrast with ` /\ `
     ( ~ df-an ), ` \/ ` ( ~ df-or ), ` -> ` ( ~ wi ), and ` -/\ `
     ( ~ df-nan ) . $)
  df-xor $a |- ( ( ph \/_ ps ) <-> -. ( ph <-> ps ) ) $.

  $( ` \/_ ` is associative.  (Contributed by FL, 22-Nov-2010.)  (The proof was
     shortened by Andrew Salmon, 8-Jun-2011.) $)
  assxor $p |- ( ( ( ph \/_ ps ) \/_ ch ) <-> ( ph \/_ ( ps \/_ ch ) ) ) $=
    ( wxo wb wn biass notbii nbbn pm5.18 con2bii 3bitr4i df-xor bibi1i bibi2i )
    ABDZCEZFABCDZEZFPCDARDQSABEZFZCEZABCEZFZEZQSTCEZFAUCEZFUBUEUFUGABCGHTCIUGUE
    AUCJKLPUACABMNRUDABCMOLHPCMARML $.
    $( [8-Jun-2011] $) $( [22-Nov-2010] $)

  $( This tautology shows that xor is really exclusive.  (Contributed by FL,
     22-Nov-2010.) $)
  excxor $p |- ( ( ph \/_ ps ) <->
       ( ( ph /\ -. ps ) \/ ( -. ph /\ ps ) ) ) $=
    ( wxo wb wn wa wo df-xor xor ancom orbi2i 3bitri ) ABCABDEABEFZBAEZFZGMNBFZ
    GABHABIOPMBNJKL $.
    $( [22-Nov-2010] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                True and false constants
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c T. $.
  $c F. $.

  $( ` T. ` is a wff. $)
  wtru $a wff T. $.

  $( ` F. ` is a wff. $)
  wfal $a wff F. $.

  $( Soundness justification theorem for ~ df-tru . $)
  trujust $p |- ( ( ph <-> ph ) <-> ( ps <-> ps ) ) $=
    ( wb biid 2th ) AACBBCADBDE $.
    $( [17-Nov-2013] $)

  $( Definition of ` T. ` , a tautology. ` T. ` is a constant true.  In this
     definition ~ biid is used as an antecedent, however, any true wff, such as
     an axiom, can be used in its place. $)
  df-tru $a |- ( T. <-> ( ph <-> ph ) ) $.

  $( Definition of ` F. ` , a contradiction. ` F. ` is a constant false. $)
  df-fal $a |- ( F. <-> -. T. ) $.

  $( ` T. ` is provable.  (Contributed by Anthony Hart, 13-Oct-2010.) $)
  tru $p |- T. $=
    ( wph wtru wb biid df-tru mpbir ) BAACADAEF $.
    $( [6-Sep-2010] $) $( [13-Oct-2010] $)

  $( ` F. ` is not provable.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Mel L. O'Cat, 11-Mar-2012.) $)
  fal $p |- -. F. $=
    ( wfal wtru wn tru notnoti df-fal mtbir ) ABCBDEFG $.
    $( [11-Mar-2012] $) $( [22-Oct-2010] $)
  ${
    trud.1 $e |- ( T. -> ph ) $.
    $( Eliminate ` T. ` as an antecedent.  (Contributed by Mario Carneiro,
       13-Mar-2014.) $)
    trud $p |- ph $=
      ( wtru tru ax-mp ) CADBE $.
      $( [13-Mar-2014] $)
  $}

  $( If something is true, it outputs ` T. ` .  (Contributed by Anthony Hart,
     14-Aug-2011.) $)
  tbtru $p |- ( ph <-> ( ph <-> T. ) ) $=
    ( wtru tru tbt ) BACD $.
    $( [17-Aug-2011] $) $( [14-Aug-2011] $)

  $( If something is not true, it outputs ` F. ` .  (Contributed by Anthony
     Hart, 14-Aug-2011.) $)
  nbfal $p |- ( -. ph <-> ( ph <-> F. ) ) $=
    ( wfal fal nbn ) BACD $.
    $( [17-Aug-2011] $) $( [14-Aug-2011] $)

  ${
    bitru.1 $e |- ph $.
    $( A theorem is equivalent to truth. $)
    bitru $p |- ( ph <-> T. ) $=
      ( wtru tru 2th ) ACBDE $.
      $( [9-May-2015] $)
  $}

  ${
    bifal.1 $e |- -. ph $.
    $( A contradiction is equivalent to falsehood. $)
    bifal $p |- ( ph <-> F. ) $=
      ( wfal fal 2false ) ACBDE $.
      $( [9-May-2015] $)
  $}

  $( ` F. ` implies anything.  (Contributed by FL, 20-Mar-2011.)  (The proof
     was shortened by Anthony Hart, 1-Aug-2011.) $)
  falim $p |- ( F. -> ph ) $=
    ( wfal fal pm2.21i ) BACD $.
    $( [17-Aug-2011] $) $( [20-Mar-2011] $)

  $( Anything implies ` T. ` .  (Contributed by FL, 20-Mar-2011.)  (The proof
     was shortened by Anthony Hart, 1-Aug-2011.) $)
  a1tru $p |- ( ph -> T. ) $=
    ( wtru tru a1i ) BACD $.
    $( [17-Aug-2011] $) $( [20-Mar-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Truth tables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  Some sources define operations on true/false values using truth tables.
  These tables show the results of their operations for all possible
  combinations of true ( ` T. ` ) and false ( ` F. ` ).
  Here we show that our definitions and axioms produce equivalent results for
  ` /\ ` (conjunction aka logical 'and') ~ df-an ,
  ` \/ ` (disjunction aka logical inclusive 'or') ~ df-or ,
  ` -> ` (implies) ~ wi ,
  ` -. ` (not) ~ wn ,
  ` <-> ` (logical equivalence) ~ df-bi ,
  ` -/\ ` (nand aka Sheffer stroke) ~ df-nan , and
  ` \/_ ` (exclusive or) ~ df-xor .
$)

  $( A ` /\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  truantru $p |- ( ( T. /\ T. ) <-> T. ) $=
    ( wtru anidm ) AB $.
    $( [22-Oct-2010] $)

  $( A ` /\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  truanfal $p |- ( ( T. /\ F. ) <-> F. ) $=
    ( wtru wfal wa fal intnan bifal ) ABCBADEF $.
    $( [22-Oct-2010] $)

  $( A ` /\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  falantru $p |- ( ( F. /\ T. ) <-> F. ) $=
    ( wfal wtru wa fal intnanr bifal ) ABCABDEF $.
    $( [22-Oct-2010] $)

  $( A ` /\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  falanfal $p |- ( ( F. /\ F. ) <-> F. ) $=
    ( wfal anidm ) AB $.
    $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  truortru $p |- ( ( T. \/ T. ) <-> T. ) $=
    ( wtru oridm ) AB $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  truorfal $p |- ( ( T. \/ F. ) <-> T. ) $=
    ( wtru wfal wo tru orci 2th ) ABCAABDEDF $.
    $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  falortru $p |- ( ( F. \/ T. ) <-> T. ) $=
    ( wfal wtru wo tru olci 2th ) ABCBBADEDF $.
    $( [22-Oct-2010] $)

  $( A ` \/ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  falorfal $p |- ( ( F. \/ F. ) <-> F. ) $=
    ( wfal oridm ) AB $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  truimtru $p |- ( ( T. -> T. ) <-> T. ) $=
    ( wtru wi id bitru ) AABACD $.
    $( [22-Oct-2010] $)

  $( A ` -> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  truimfal $p |- ( ( T. -> F. ) <-> F. ) $=
    ( wfal wtru wi tru a1bi bicomi ) ABACBADEF $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  falimtru $p |- ( ( F. -> T. ) <-> T. ) $=
    ( wfal wtru wi falim bitru ) ABCBDE $.
    $( [22-Oct-2010] $)

  $( A ` -> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  falimfal $p |- ( ( F. -> F. ) <-> T. ) $=
    ( wfal wi id bitru ) AABACD $.
    $( [22-Oct-2010] $)

  $( A ` -. ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.) $)
  nottru $p |- ( -. T. <-> F. ) $=
    ( wfal wtru wn df-fal bicomi ) ABCDE $.
    $( [22-Oct-2010] $)

  $( A ` -. ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  notfal $p |- ( -. F. <-> T. ) $=
    ( wfal wn fal bitru ) ABCD $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  trubitru $p |- ( ( T. <-> T. ) <-> T. ) $=
    ( wtru wb biid bitru ) AABACD $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  trubifal $p |- ( ( T. <-> F. ) <-> F. ) $=
    ( wtru wfal wb wn nottru nbbn mpbi bifal ) ABCZADBCIDEABFGH $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  falbitru $p |- ( ( F. <-> T. ) <-> F. ) $=
    ( wfal wtru wb bicom trubifal bitri ) ABCBACAABDEF $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` <-> ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  falbifal $p |- ( ( F. <-> F. ) <-> T. ) $=
    ( wfal wb biid bitru ) AABACD $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -/\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  trunantru $p |- ( ( T. -/\ T. ) <-> F. ) $=
    ( wtru wnan wn wfal nannot nottru bitr3i ) AABACDAEFG $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` -/\ ` identity.  (Contributed by Anthony Hart, 23-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  trunanfal $p |- ( ( T. -/\ F. ) <-> T. ) $=
    ( wtru wfal wnan wa wn df-nan truanfal notbii notfal 3bitri ) ABCABDZEBEAAB
    FKBGHIJ $.
    $( [16-May-2011] $) $( [23-Oct-2010] $)

  $( A ` -/\ ` identity.  (Contributed by Anthony Hart, 23-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  falnantru $p |- ( ( F. -/\ T. ) <-> T. ) $=
    ( wfal wtru wnan nancom trunanfal bitri ) ABCBACBABDEF $.
    $( [16-May-2011] $) $( [23-Oct-2010] $)

  $( A ` -/\ ` identity.  (Contributed by Anthony Hart, 22-Oct-2010.)  (The
     proof was shortened by Andrew Salmon, 13-May-2011.) $)
  falnanfal $p |- ( ( F. -/\ F. ) <-> T. ) $=
    ( wfal wnan wn wtru nannot notfal bitr3i ) AABACDAEFG $.
    $( [16-May-2011] $) $( [22-Oct-2010] $)

  $( A ` \/_ ` identity.  (Contributed by David A. Wheeler, 8-May-2015.) $)
  truxortru $p |- ( ( T. \/_ T. ) <-> F. ) $=
    ( wtru wxo wn wfal wb df-xor trubitru xchbinx nottru bitri ) AABZACDKAAEAAA
    FGHIJ $.
    $( [8-May-2015] $)

  $( A ` \/_ ` identity.  (Contributed by David A. Wheeler, 8-May-2015.) $)
  truxorfal $p |- ( ( T. \/_ F. ) <-> T. ) $=
    ( wtru wfal wxo wn wb df-xor trubifal xchbinx notfal bitri ) ABCZBDAKABEBAB
    FGHIJ $.
    $( [9-May-2015] $)

  $( A ` \/_ ` identity.  (Contributed by David A. Wheeler, 9-May-2015.) $)
  falxortru $p |- ( ( F. \/_ T. ) <-> T. ) $=
    ( wfal wtru wxo wb wn df-xor falbitru notbii notfal 3bitri ) ABCABDZEAEBABF
    KAGHIJ $.
    $( [9-May-2015] $)

  $( A ` \/_ ` identity.  (Contributed by David A. Wheeler, 9-May-2015.) $)
  falxorfal $p |- ( ( F. \/_ F. ) <-> F. ) $=
    ( wfal wxo wtru wn wb df-xor falbifal xchbinx nottru bitri ) AABZCDAKAAECAA
    FGHIJ $.
    $( [9-May-2015] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       Auxiliary theorems for Alan Sare's virtual deduction tool, part 1
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    ee22.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee22.2 $e |- ( ph -> ( ps -> th ) ) $.
    ee22.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( Virtual deduction rule ~ e22 without virtual deduction connectives.
       Special theorem needed for Alan Sare's virtual deduction translation
       tool.  (Contributed by Alan Sare, 2-May-2011.) $)
    ee22 $p |- ( ph -> ( ps -> ta ) ) $=
      ( syl6c ) ABCDEFGHI $.
      $( [28-Oct-2011] $) $( [2-May-2011] $)
  $}

  ${
    ee12an.1 $e |- ( ph -> ps ) $.
    ee12an.2 $e |- ( ph -> ( ch -> th ) ) $.
    ee12an.3 $e |- ( ( ps /\ th ) -> ta ) $.
    $( ~ e12an without virtual deduction connectives.  Special theorem needed
       for Alan Sare's virtual deduction translation tool.  (Contributed by
       Alan Sare, 28-Oct-2011.) $)
    ee12an $p |- ( ph -> ( ch -> ta ) ) $=
      ( wa jctild syl6 ) ACBDIEACDBGFJHK $.
      $( [28-Oct-2011] $) $( [28-Oct-2011] $)
  $}

  ${
    ee23.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee23.2 $e |- ( ph -> ( ps -> ( th -> ta ) ) ) $.
    ee23.3 $e |- ( ch -> ( ta -> et ) ) $.
    $( ~ e23 without virtual deductions.  (Contributed by Alan Sare,
       17-Jul-2011.) $)
    ee23 $p |- ( ph -> ( ps -> ( th -> et ) ) ) $=
      ( wi syl6 syldd ) ABDEFHABCEFJGIKL $.
      $( [17-Jul-2011] $)
  $}

  $( Exportation implication also converting head from biconditional to
     conditional.  This proof is ~ exbirVD automatically translated and
     minimized.  (Contributed by Alan Sare, 31-Dec-2011.) $)
  exbir $p |- ( ( ( ph /\ ps ) -> ( ch <-> th ) ) ->
              ( ph -> ( ps -> ( th -> ch ) ) ) ) $=
    ( wa wb wi bi2 imim2i exp3a ) ABEZCDFZGABDCGZLMKCDHIJ $.
    $( [31-Dec-2011] $)

  $( ~ impexp with a 3-conjunct antecedent.  This proof is ~ 3impexpVD
     automatically translated and minimized.  (Contributed by Alan Sare,
     31-Dec-2011.) $)
  3impexp $p |- ( ( ( ph /\ ps /\ ch ) -> th ) <->
                ( ph -> ( ps -> ( ch -> th ) ) ) ) $=
    ( w3a wi id 3expd 3impd impbii ) ABCEDFZABCDFFFZKABCDKGHLABCDLGIJ $.
    $( [31-Dec-2011] $)

  $( ~ 3impexp with biconditional consequent of antecedent that is commuted in
     consequent.  Derived automatically from ~ 3impexpVD .  (Contributed by
     Alan Sare, 31-Dec-2011.) $)
  3impexpbicom $p |- ( ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) <->
                     ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) ) $=
    ( w3a wb wi bicom imbi2 biimpcd mpi 3expd 3impexp biimpri syl6ibr impbii )
    ABCFZDEGZHZABCEDGZHHHZTABCUATSUAGZRUAHZDEIZUCTUDSUARJKLMUBRUASUDUBABCUANOUE
    PQ $.
    $( [31-Dec-2011] $)

  ${
    3impexpbicomi.1 $e |- ( ( ph /\ ps /\ ch ) -> ( th <-> ta ) ) $.
    $( Deduction form of ~ 3impexpbicom .  Derived automatically from
       ~ 3impexpbicomiVD .  (Contributed by Alan Sare, 31-Dec-2011.) $)
    3impexpbicomi $p |- ( ph -> ( ps -> ( ch -> ( ta <-> th ) ) ) ) $=
      ( wb w3a bicomd 3exp ) ABCEDGABCHDEFIJ $.
      $( [31-Dec-2011] $)
  $}

  $( Closed form of ~ ancoms .  Derived automatically from ~ ancomsimpVD .
     (Contributed by Alan Sare, 31-Dec-2011.) $)
  ancomsimp $p |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ps /\ ph ) -> ch ) ) $=
    ( wa ancom imbi1i ) ABDBADCABEF $.
    $( [31-Dec-2011] $)

  ${
    exp3acom3r.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( Export and commute antecedents.  (Contributed by Alan Sare,
       18-Mar-2012.) $)
    exp3acom3r $p |- ( ps -> ( ch -> ( ph -> th ) ) ) $=
      ( exp3a com3l ) ABCDABCDEFG $.
      $( [18-Mar-2012] $)
  $}

  $( Implication form of ~ exp3acom23 .(Contributed by Alan Sare,
     22-Jul-2012.) $)
  exp3acom23g $p |- ( ( ph -> ( ( ps /\ ch ) -> th ) ) <->
                        ( ph -> ( ch -> ( ps -> th ) ) ) ) $=
    ( wa wi ancomsimp impexp bitri imbi2i ) BCEDFZCBDFFZAKCBEDFLBCDGCBDHIJ $.
    $( [22-Jul-2012] $)

  ${
    exp3acom23.1 $e |- ( ph -> ( ( ps /\ ch ) -> th ) ) $.
    $( The exportation deduction ~ exp3a with commutation of the conjoined
       wwfs.  (Contributed by Alan Sare, 22-Jul-2012.) $)
    exp3acom23 $p |- ( ph -> ( ch -> ( ps -> th ) ) ) $=
      ( exp3a com23 ) ABCDABCDEFG $.
      $( [22-Jul-2012] $)
  $}

  $( Implication form of ~ simplbi2com .  (Contributed by Alan Sare,
     22-Jul-2012.) $)
  simplbi2comg $p |- ( ( ph <-> ( ps /\ ch ) ) -> ( ch -> ( ps -> ph ) ) ) $=
    ( wa wb bi2 exp3acom23 ) ABCDZEBCAAHFG $.
    $( [22-Jul-2012] $)

  ${
    simplbi2com.1 $e |- ( ph <-> ( ps /\ ch ) ) $.
    $( A deduction eliminating a conjunct, similar to ~ simplbi2 .
       (Contributed by Alan Sare, 22-Jul-2012.)  (The proof was shortened by
       Wolf Lammen, 10-Nov-2012.) $)
    simplbi2com $p |- ( ch -> ( ps -> ph ) ) $=
      ( simplbi2 com12 ) BCAABCDEF $.
      $( [10-Nov-2012] $) $( [22-Jul-2012] $)
  $}

  ${
    $( Non-virtual deduction from of ~ e21 . ~ ee21 is ~ ee21VD without virtual
       deductions and was automatically derived from ~ ee21VD using the tools
       program translate..without..overwriting.cmd and Metamath's minimize
       command.  (Contributed by Alan Sare, 18-Mar-2012.)  $)

    ee21.1 $e |- ( ph -> ( ps -> ch ) ) $.
    ee21.2 $e |- ( ph -> th ) $.
    ee21.3 $e |- ( ch -> ( th -> ta ) ) $.
    $( ~ e21 without virtual deductions. $)
    ee21 $p |- ( ph -> ( ps -> ta ) ) $=
      ( a1d ee22 ) ABCDEFADBGIHJ $.
      $( [18-Mar-2012] $)
  $}

  ${
    ee10.1 $e |- ( ph -> ps ) $.
    ee10.2 $e |- ch $.
    ee10.3 $e |- ( ps -> ( ch -> th ) ) $.
    $( ~ e10 without virtual deductions. $)
    ee10 $p |- ( ph -> th ) $=
      ( mpi syl ) ABDEBCDFGHI $.
      $( [25-Jul-2011] $)
  $}

  ${
    ee02.1 $e |- ph $.
    ee02.2 $e |- ( ps -> ( ch -> th ) ) $.
    ee02.3 $e |- ( ph -> ( th -> ta ) ) $.
    $( ~ e02 without virtual deductions. $)
    ee02 $p |- ( ps -> ( ch -> ta ) ) $=
      ( a1i sylsyld ) BACDEABFIGHJ $.
      $( [22-Jul-2012] $)
  $}

$( End of auxiliary theorems for Alan Sare's virtual deduction tool, part 1 $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
      Other axiomatizations of classical propositional calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the Lukasiewicz axioms from Meredith's sole axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Carew Meredith's sole axiom for propositional calculus.  This amazing
     formula is thought to be the shortest possible single axiom for
     propositional calculus with inference rule ~ ax-mp , where negation and
     implication are primitive.  Here we prove Meredith's axiom from ~ ax-1 ,
     ~ ax-2 , and ~ ax-3 .  Then from it we derive the Lukasiewicz axioms
     ~ luk-1 , ~ luk-2 , and ~ luk-3 .  Using these we finally re-derive our
     axioms as ~ ax1 , ~ ax2 , and ~ ax3 , thus proving the equivalence of all
     three systems.  C. A. Meredith, "Single Axioms for the Systems (C,N),
     (C,O) and (A,N) of the Two-Valued Propositional Calculus," _The Journal of
     Computing Systems_ vol. 1 (1953), pp. 155-164.  Meredith claimed to be
     close to a proof that this axiom is the shortest possible, but the proof
     was apparently never completed.

     An obscure Irish lecturer, Meredith (1904-1976) became enamored with logic
     somewhat late in life after attending talks by Lukasiewicz and produced
     many remarkable results such as this axiom.  From his obituary:  "He did
     logic whenever time and opportunity presented themselves, and he did it on
     whatever materials came to hand: in a pub, his favored pint of porter
     within reach, he would use the inside of cigarette packs to write proofs
     for logical colleagues."  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.)  (The proof was shortened by Wolf Lammen, 28-May-2013.) $)
  meredith $p |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn pm2.21 ax-3 imim12i com13 con1d com12 a1d ax-1 imim1d ja ) ABFZCGDG
    FZFZCFZEEAFZDAFZFUAGZUCUBDUDADAUATAGZDCUERSDCFABHCDIJKLMNEDEAEDOPQ $.
    $( [28-May-2013] $) $( [14-Dec-2002] $)

  $( Theorem ~ meredith restated as an axiom.  This will allow us to ensure
     that the rederivation of ~ ax1 , ~ ax2 , and ~ ax3 below depend only on
     Meredith's sole axiom and not accidentally on a previous theorem above.
     Outside of this section, we will not make use of this axiom. $)
  ax-meredith $a |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ->
       ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $.

  $( Step 3 of Meredith's proof of Lukasiewicz axioms from his sole axiom.
     (The step numbers refer to Meredith's original paper.) $)
  merlem1 $p |- ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) $=
    ( wn wi ax-meredith ax-mp ) DAEZFIBFZEZIFFZJFCJFZFZMDFADFFJDECEFZEKEFZFOFDF
    LFNIBOKDGJPDCLGHDIJAMGH $.
    $( [14-Dec-2002] $)

  $( Step 4 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem2 $p |- ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) $=
    ( wi wn merlem1 ax-meredith ax-mp ) BBDZAECEZDDADAADZDKBDCBDDAJIAFBBACKGH
    $.
    $( [14-Dec-2002] $)

  $( Step 7 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem3 $p |- ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) $=
    ( wi wn merlem2 ax-mp ax-meredith ) AADZCEZJDZDZCDBCDZDZMADCADZDOBEZPDDBDZL
    DZNKKDLDRJKIFKLQFGCABBLHGAACCMHG $.
    $( [14-Dec-2002] $)

  $( Step 8 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem4 $p |- ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) $=
    ( wi wn ax-meredith merlem3 ax-mp ) AADBEZIDDBDZCDCADBADDZDCKDAABBCFKJCGH
    $.
    $( [14-Dec-2002] $)

  $( Step 11 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem5 $p |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) $=
    ( wi wn ax-meredith merlem1 merlem4 ax-mp ) BBCZBDZJCCBCBCIICCZABCZADZDZBCC
    ZBBBBBEIJNDCCBCZACZOCZKOCZBBBNAEOKDZCMTCCZACQCZRSCUAUBMBLTFAPUAGHOTAKQEHHH
    $.
    $( [14-Dec-2002] $)

  $( Step 12 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem6 $p |- ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) $=
    ( wi merlem4 merlem3 ax-mp ) BCEZIAEDAEEZECJEADIFJBCGH $.
    $( [14-Dec-2002] $)

  $( Between steps 14 and 15 of Meredith's proof of Lukasiewicz axioms from his
     sole axiom. $)
  merlem7 $p |- ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) ) $=
    ( wi wn merlem4 merlem6 ax-meredith ax-mp ) BCFZLDFZCEFDGBGFFZDFZFZFZAPFZDN
    LHPAGZFCGZSFFZCFLFZQRFOUAFUBSMOTICEDBUAJKPSCALJKK $.
    $( [22-Dec-2002] $)

  $( Step 15 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem8 $p |- ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) ->
                  ( -. th -> -. ps ) ) -> th ) ) $=
    ( wph wi wn ax-meredith merlem7 ax-mp ) EEFZEGZLFFEFEFKKFFZABFCFBDFCGAGFFCF
    FEEEEEHMABCDIJ $.
    $( [22-Dec-2002] $)

  $( Step 18 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem9 $p |- ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ->
                    ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) $=
    ( wi wn merlem6 merlem8 ax-mp ax-meredith ) CDBEGZGZGZFHZGBHZPGGZBGABGZGZSO
    GFOGGMRHDHGZHAHGZGUAGRGZTNRGUCPCNQIDMRUBJKBEUAARLKOPBFSLK $.
    $( [22-Dec-2002] $)

  $( Step 19 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem10 $p |- ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) $=
    ( wi wn ax-meredith merlem9 ax-mp ) AADZAEZJDDADADIIDDZAABDZDZCLDDZAAAAAFLA
    DJCEDDADZADNDKNDLAACAFOAMCBKGHH $.
    $( [14-Dec-2002] $)

  $( Step 20 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem11 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi wn ax-meredith merlem10 ax-mp ) AACZADZICCACACHHCCZAABCZCZKCZAAAAAELMC
    JMCABLFLKJFGG $.
    $( [14-Dec-2002] $)

  $( Step 28 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem12 $p |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem2 ax-mp merlem4 merlem11 ) CBDDBEZEZAEZMAEZEZNLOBBEKE
    LBBFBKCGHAMLIHMAJH $.
    $( [14-Dec-2002] $)

  $( Step 35 of Meredith's proof of Lukasiewicz axioms from his sole axiom. $)
  merlem13 $p |- ( ( ph -> ps ) ->
              ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) $=
    ( wi wn merlem12 merlem5 ax-mp merlem6 ax-meredith merlem11 ) BBEZAFZDCFFCE
    EZNFZEZFZEZEAEZAEZABEQBEETUAEZUASUBOREZREZSRCDGRBEZRFPEZEREUCEZUDSEUFUGQPEU
    FPCDGQPHIRUEUFOJIRBRNUCKIIAMSTJITALIBBAQAKI $.
    $( [14-Dec-2002] $)

  $( 1 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi wn ax-meredith merlem13 ax-mp ) CCDZAEZEZEJDDKDBDZBCDACDDZDZABDZMDZCCK
    ABFMADZOEZEZERDDSDLDZNPDOLDTABJIGOLRQGHMASOLFHH $.
    $( [14-Dec-2002] $)

  $( 2 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi merlem5 merlem4 ax-mp merlem11 ax-meredith ) ABZACZJACZCZKAJBZCIBMC
    CZICZICZLOPCZPNQAMDIONEFOIGFAMIJIHFJAGF $.
    $( [14-Dec-2002] $)

  $( 3 of 3 axioms for propositional calculus due to Lukasiewicz, derived from
     Meredith's sole axiom. $)
  luk-3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi merlem11 merlem1 ax-mp ) ACZHBDZDIDAIDHBEABHIFG $.
    $( [14-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the standard axioms from the Lukasiewicz axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    luklem1.1 $e |- ( ph -> ps ) $.
    luklem1.2 $e |- ( ps -> ch ) $.
    $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
    luklem1 $p |- ( ph -> ch ) $=
      ( wi luk-1 ax-mp ) BCFZACFZEABFIJFDABCGHH $.
      $( [23-Dec-2002] $)
  $}

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem2 $p |- ( ( ph -> -. ps ) ->
                ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) $=
    ( wn wi luk-1 luk-3 ax-mp luklem1 ) ABEZFZBACFZFZMDFBDFFLKCFZMFZNAKCGBOFPNF
    BCHBOMGIJBMDGJ $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem3 $p |- ( ph -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) $=
    ( wn wi luk-3 luklem2 luklem1 ) AAEZDEZFJBFCFDCFFAKGJDBCHI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem4 $p |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ps ) $=
    ( wn wi luk-2 luklem3 ax-mp luk-1 luklem1 ) ACADADZBDZBCZBDZBLJDZKMDJCJDJDZ
    NJEJONDAEJJJLFGGLJBHGBEI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem5 $p |- ( ph -> ( ps -> ph ) ) $=
    ( wn wi luklem3 luklem4 luklem1 ) AACADADBADZDHAAABEAHFG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem6 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wi luk-1 wn luklem5 luklem2 luklem4 luklem1 ax-mp ) AABCZCKBCZKCZKAKBDKEZ
    KCZKCMKCZCZPMOCZQNLCRNBEZNCZLNSFTSBCBCLCLSKBBGBLHIINLKDJMOKDJKPHJI $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem7 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi luk-1 luklem5 luklem1 luklem6 ax-mp ) ABCDZDJCDZACDZDZBLDZAJCEBKDMNDBJ
    KDZKBJBDOBJFJBCEGJCHGBKLEIG $.
    $( [22-Dec-2002] $)

  $( Used to rederive standard propositional axioms from Lukasiewicz'. $)
  luklem8 $p |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) $=
    ( wi luk-1 luklem7 ax-mp ) CADZABDZCBDZDDIHJDDCABEHIJFG $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax1 $p |- ( ph -> ( ps -> ph ) ) $=
    ( luklem5 ) ABC $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax2 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) $=
    ( wi luklem7 luklem8 luklem6 ax-mp luklem1 ) ABCDDBACDZDZABDZJDZABCEKLAJDZD
    ZMBJAFNJDOMDACGNJLFHII $.
    $( [22-Dec-2002] $)

  $( Standard propositional axiom derived from Lukasiewicz axioms. $)
  ax3 $p |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) $=
    ( wn wi luklem2 luklem4 luklem1 ) ACZBCDHADADBADZDIHBAAEAIFG $.
    $( [22-Dec-2002] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Derive Nicod's axiom from the standard axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( [suppress from the Table of Contents by breaking whitespace before "=-=-"]
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Prove Nicod's axiom and implication and negation definitions
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Define implication in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ps ) ) ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     a definition ($a statement). $)
  nic-dfim $p |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\
                   ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) )
                          -/\
                     ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) $=
    ( wnan wi wb nanim bicomi nanbi mpbi ) ABBCCZABDZEJKCJJCKKCCCKJABFGJKHI $.
    $( [11-Dec-2008] $)

  $( Define negation in terms of 'nand'.  Analogous to
     ` ( ( ph -/\ ph ) <-> -. ph ) ` .  In a pure (standalone) treatment of
     Nicod's axiom, this theorem would be changed to a definition ($a
     statement). $)
  nic-dfneg $p |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\
                    ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\
                      ( -. ph -/\ -. ph ) ) ) $=
    ( wnan wn wb nannot bicomi nanbi mpbi ) AABZACZDIJBIIBJJBBBJIAEFIJGH $.
    $( [11-Dec-2008] $)

  ${
    $( Minor premise. $)
    nic-jmin $e |- ph $.
    $( Major premise. $)
    nic-jmaj $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Derive Nicod's rule of modus ponens using 'nand', from the standard
       one.  Although the major and minor premise together also imply ` ch ` ,
       this form is necessary for useful derivations from ~ nic-ax .  In a pure
       (standalone) treatment of Nicod's axiom, this theorem would be changed
       to an axiom ($a statement).  (Contributed by Jeff Hoffman,
       19-Nov-2007.) $)
    nic-mp $p |- ps $=
      ( wnan wa wi nannan mpbi simprd ax-mp ) ABDACBACBFFACBGHEABCIJKL $.
      $( [11-Dec-2008] $) $( [19-Nov-2007] $)

    $( A direct proof of ~ nic-mp . $)
    nic-mpALT $p |- ps $=
      ( wa wi wn wnan df-nan anbi2i xchbinx mpbi iman mpbir simprd ax-mp ) ABDA
      CBACBFZGARHZFZHZACBIZIZUAEUCAUBFTAUBJUBSACBJKLMARNOPQ $.
      $( [30-Dec-2008] $)
  $}

  $( Nicod's axiom derived from the standard ones.  See _Intro. to Math.
     Phil._ by B. Russell, p. 152.  Like ~ meredith , the usual axioms can be
     derived from this and vice versa.  Unlike ~ meredith , Nicod uses a
     different connective ('nand'), so another form of modus ponens must be
     used in proofs, e.g. ` { ` ~ nic-ax , ~ nic-mp ` } ` is equivalent to
     ` { ` ~ luk-1 , ~ luk-2 , ~ luk-3 , ~ ax-mp ` } ` .  In a pure
     (standalone) treatment of Nicod's axiom, this theorem would be changed to
     an axiom ($a statement).  (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
  nic-ax $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\
                   ( ( ta -/\ ( ta -/\ ta ) ) -/\
                     ( ( th -/\ ch ) -/\
                       ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnan wa wi nannan biimpi simpl imim2i wn imnan df-nan bitr4i imim2d con2b
    con3 mpbir 3bitr4ri syl6ibr syl5bir nanim sylib 3syl pm4.24 jctil ) ACBFFZE
    EEFFZDCFZADFZULFFZFFUIUJUMGHUIUMUJUIACBGZHZACHZUMUIUOABCIJUNCACBKLUPUKULHUM
    UKDCMZHZUPULURDCGMUKDCNDCOPUPURDAMZHZULUPUQUSDACSQADMHADGMUTULADNDARADOUAUB
    UCUKULUDUEUFUJEEEGZHEVAEUGJEEEITUHUIUMUJIT $.
    $( [11-Dec-2008] $) $( [19-Nov-2007] $)

  $( A direct proof of ~ nic-ax . $)
  nic-axALT $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) )
          -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnan wa wn anidm df-nan anbi2i notbii iman 3bitr4i bitr4i xchbinx anbi12i
    wi imnan mpbir simpl imim2i con3 imim2d biimpri jctil con2b bitr3i 3bitri
    syl ) ACBFZFZEEEFZFZDCFZADFZUPFZFZFZFULUSGZHZVAACBGZRZEEEGZRZDCHZRZDAHZRZRZ
    GZRZVCVJVEVCACRZVJVBCACBUAUBVMVFVHDACUCUDUJVDEEIUEUFVAVCVKHZGZHVLUTVOULVCUS
    VNAUKGZHAVBHZGZHULVCVPVRUKVQACBJKLAUKJAVBMNUSUNURGVKUNURJUNVEURVJEUMGZHEVDH
    ZGZHUNVEVSWAUMVTEEEJKLEUMJEVDMNUOUQGZHVGVIHZGZHURVJWBWDUOVGUQWCUODCGHVGDCJD
    CSOUQUPUPGZVIUPUPJWEUPADGHZVIUPIADJWFADHRVIADSADUGUHUIPQLUOUQJVGVIMNQPQLVCV
    KMOTULUSJT $.
    $( [11-Dec-2008] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Derive the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-imp.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference for ~ nic-mp using ~ nic-ax as major premise.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-imp $p |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
      ( wta wnan nic-ax nic-mp ) ACBGGDCGADGZJGGFFFGGEABCDFHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Lemma for ~ nic-id . $)
  nic-idlem1 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\
                 ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\
                   ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) $=
    ( wnan nic-ax nic-imp ) ACBFFACFAAFZIFFEEEFFDABCAEGH $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-idlem2.1 $e |- ( et -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) $.
    $( Lemma for ~ nic-id .  Inference used by ~ nic-id . $)
    nic-idlem2 $p |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) $=
      ( wnan nic-ax nic-imp nic-mp ) FACBHHZDHZHDEEEHHZHZFHZPGOMMFLACHAAHZQHHND
      ABCAEIJJK $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  $( Theorem ~ id expressed with ` -/\ ` .  (Contributed by Jeff Hoffman,
     17-Nov-2007.) $)
  nic-id $p |- ( ta -/\ ( ta -/\ ta ) ) $=
    ( wph wps wch wth wnan nic-ax nic-idlem2 nic-idlem1 nic-mp ) BCFZCBFZLFFZDD
    DFZFZFZCCCFFZFAAAFFZOEEEMDQCCCBEGHMNDPCORFKLLOAIHJ $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  $( ` -/\ ` is symmetric.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
  nic-swap $p |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) $=
    ( wta wnan nic-id nic-ax nic-mp ) AAADDBADABDZHDDCCCDDAEAAABCFG $.
    $( [11-Dec-2008] $) $( [17-Nov-2007] $)

  ${
    nic-isw1.1 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-swap .  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw1 $p |- ( ph -/\ th ) $=
      ( wnan nic-swap nic-mp ) BADABDZGCABEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-isw2.1 $e |- ( ps -/\ ( th -/\ ph ) ) $.
    $( Inference for swapping nested terms.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-isw2 $p |- ( ps -/\ ( ph -/\ th ) ) $=
      ( wnan nic-swap nic-imp nic-mp nic-isw1 ) BACEZBCAEZEJBEZLDJKKBCAFGHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp1.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    nic-iimp1.2 $e |- ( th -/\ ch ) $.
    $( Inference version of ~ nic-imp using right-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp1 $p |- ( th -/\ ph ) $=
      ( wnan nic-imp nic-mp nic-isw1 ) DADCGADGZKFABCDEHIJ $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-iimp2.1 $e |- ( ( ph -/\ ps ) -/\ ( ch -/\ ch ) ) $.
    nic-iimp2.2 $e |- ( th -/\ ph ) $.
    $( Inference version of ~ nic-imp using left-handed term.  (Contributed by
       Jeff Hoffman, 17-Nov-2007.) $)
    nic-iimp2 $p |- ( th -/\ ( ch -/\ ch ) ) $=
      ( wnan nic-isw1 nic-iimp1 ) CCGZBADJABGEHFI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idel.1 $e |- ( ph -/\ ( ch -/\ ps ) ) $.
    $( Inference to remove the trailing term.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idel $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnan nic-id nic-isw1 nic-imp nic-mp ) CCEZCEAJEZKJCCFGABCJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-ich.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    nic-ich.2 $e |- ( ps -/\ ( ch -/\ ch ) ) $.
    $( Chained inference.  (Contributed by Jeff Hoffman, 17-Nov-2007.) $)
    nic-ich $p |- ( ph -/\ ( ch -/\ ch ) ) $=
      ( wnan nic-isw1 nic-imp nic-mp ) CCFZBFAJFZKJBEGABBJDHI $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

  ${
    nic-idbl.1 $e |- ( ph -/\ ( ps -/\ ps ) ) $.
    $( Double the terms.  Since doubling is the same as negation, this can be
       viewed as a contraposition inference.  (Contributed by Jeff Hoffman,
       17-Nov-2007.) $)
    nic-idbl $p |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) $=
      ( wnan nic-imp nic-ich ) BBDABDAADABBBCEABBACEF $.
      $( [11-Dec-2008] $) $( [17-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Biconditional justification from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( For nic-* definitions, the biconditional connective is not used.  Instead,
     definitions are made based on this form. ~ nic-bi1 and ~ nic-bi2 are used
     to convert the definitions into usable theorems about one side of the
     implication.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-bijust $p |- ( ( ta -/\ ta ) -/\ ( ( ta -/\ ta ) -/\ ( ta -/\ ta ) ) ) $=
    ( nic-swap ) AAB $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi1.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract one side of an implication from a definition. $)
    nic-bi1 $p |- ( ph -/\ ( ps -/\ ps ) ) $=
      ( wnan nic-id nic-iimp1 nic-isw2 nic-idel ) AABBAAABDBBDAADACAEFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  ${
    $( 'Biconditional' premise.  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
    nic-bi2.1 $e |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph )
         -/\ ( ps -/\ ps ) ) ) $.
    $( Inference to extract the other side of an implication from a
       'biconditional' definition. $)
    nic-bi2 $p |- ( ps -/\ ( ph -/\ ph ) ) $=
      ( wnan nic-isw2 nic-id nic-iimp1 nic-idel ) BBAABDZAADZBBDZBKIJCEBFGH $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

$( (not in Table of Contents)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
             Prove the Lukasiewicz axioms from Nicod's axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( Minor premise. $)
    nic-smin $e |- ph $.
    $( Major premise. $)
    nic-smaj $e |- ( ph -> ps ) $.
    $( Derive the standard modus ponens from ~ nic-mp .  (Contributed by Jeff
       Hoffman, 18-Nov-2007.) $)
    nic-stdmp $p |- ps $=
      ( wi wnan nic-dfim nic-bi2 nic-mp ) ABBCABEZABBFFZKDKJABGHII $.
      $( [11-Dec-2008] $) $( [18-Nov-2007] $)
  $}

  $( Proof of ~ luk-1 from ~ nic-ax and ~ nic-mp (and definitions ~ nic-dfim
     and ~ nic-dfneg ).  Note that the standard axioms ~ ax-1 , ~ ax-2 , and
     ~ ax-3 are proved from the Lukasiewicz axioms by theorems ~ ax1 , ~ ax2 ,
     and ~ ax3 .  (Contributed by Jeff Hoffman, 18-Nov-2007.) $)
  nic-luk1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wta wi nic-dfim nic-bi2 nic-ax nic-isw2 nic-idel nic-bi1 nic-idbl nic-imp
    wnan nic-swap nic-ich nic-mp ) ABEZBCEZACEZEZUANNZRUAEZUCRABBNNZUAUDRABFGUD
    STTNZNZUAUDCCNZBNZAUGNZUINZNZUFUDDDDNNZUKUKUDULABBUGDHIJUKUEUHNUFUEUJUJUHUI
    TUITACFKLMSUHUHUESBUGNZUHUMSBCFGUGBOPMPPUFUASTFKPPUBUCRUAFKQ $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-2 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi wnan nic-dfim nic-bi2 nic-dfneg nic-iimp1 nic-isw2 nic-isw1 nic-bi1
    nic-id nic-mp ) ABZACZAADZDZOACZROPONPDZSPSONAEFNPPPNDNNDPPDPAGPLHIHJQROAEK
    M $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

  $( Proof of ~ luk-3 from ~ nic-ax and ~ nic-mp .  (Contributed by Jeff
     Hoffman, 18-Nov-2007.) $)
  nic-luk3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wnan nic-dfim nic-bi1 nic-dfneg nic-bi2 nic-id nic-iimp1 nic-iimp2 nic-mp
    wn wi ) AALZBMZOCCZAOMZQNBBCZOANRCONBDENAACZSASNAFGAHIJPQAODEK $.
    $( [11-Dec-2008] $) $( [18-Nov-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Deriving Nicod's Axiom from Lukasiewicz's First Sheffer Stroke Axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( This alternative axiom for propositional calculus using the Sheffer Stroke
     was offered by Lukasiewicz in his Selected Works.  It improves on Nicod's
     axiom by reducing its number of variables by one.

     This axiom also uses ~ nic-mp for its constructions.

     Here, the axiom is proved as a substitution instance of ~ nic-ax .
     (Contributed by Anthony Hart, 31-Jul-2011.) $)
  lukshef-ax1 $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( th -/\ ( th -/\ th ) )
          -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( nic-ax ) ABCDDE $.
    $( [1-Aug-2011] $) $( [31-Jul-2011] $)

  $( Lemma for ~ renicax . $)
  lukshefth1 $p |- ( ( ( ( ta -/\ ps ) -/\ ( ( ph -/\ ta ) -/\ ( ph
          -/\ ta ) ) ) -/\ ( th -/\ ( th -/\ th ) ) ) -/\ ( ph -/\ ( ps
          -/\ ch ) ) ) $=
    ( wnan lukshef-ax1 nic-mp ) ABCFFZEEEFFZEBFAEFZKFFZFZFZLDDDFFZFZIFZQACBEGPM
    MFFZNQQFFIIIFFJODEFEDFZSFFZFFRLLLFFEEEDGJTOLGHPMMIGHH $.
    $( [1-Aug-2011] $) $( [31-Jul-2011] $)

  $( Lemma for ~ renicax . $)
  lukshefth2 $p |- ( ( ta -/\ th ) -/\ ( ( th -/\ ta ) -/\ ( th
          -/\ ta ) ) ) $=
    ( wps wch wph wnan lukshef-ax1 nic-mp lukshefth1 ) AAAFFZBAFABFZKFFBBBFFAJF
    ZCDEFFZAFZNFFZJBEFEBFZPFFZMJADFCAFZRFFZFFOJCEDAGMSJAGHQJFZEEEFFZFZOTFZUCEEE
    ABIOUAENFLEFZUDFFZFFUBUCUCFFTTTFFLNNEGOUEUATGHHHAAABGH $.
    $( [1-Aug-2011] $) $( [31-Jul-2011] $)

  $( A rederivation of ~ nic-ax from ~ lukshef-ax1 , proving that ~ lukshef-ax1
     with ~ nic-mp can be used as a complete axiomatization of propositional
     calculus.  (Contributed by Anthony Hart, 31-Jul-2011.) $)
  renicax $p |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) )
          -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) $=
    ( wnan lukshefth1 lukshefth2 nic-mp lukshef-ax1 ) EEEFFZDCFADFZLFFZFZACBFFZ
    FZONFZQOMKFZFZPPROFSSACBEDGORHINRRFFSPPFFOOOFFMKHNRROJIIONHI $.
    $( [1-Aug-2011] $) $( [31-Jul-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Deriving the Lukasiewicz Axioms from the Tarski-Bernays-Wajsberg Axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Justification for ~ tbw-negdf .  (Contributed by Anthony Hart,
     15-Aug-2011.) $)
  tbw-bijust $p |- ( ( ph <-> ps ) <-> ( ( ( ph -> ps )
    -> ( ( ps -> ph ) -> F. ) ) -> F. ) ) $=
    ( wb wi wn wfal dfbi1 pm2.21 imim2i falim impbii notbii ax-1 pm2.43i 3bitri
    id ja ) ABCABDZBADZEZDZERSFDZDZEZUCFDZABGUAUCUAUCTUBRSFHIUBTRSFTTPTJQIKLUDU
    EUCFHUEUDUCFUEUDDZUDUEMUFJQNKO $.
    $( [17-Aug-2011] $) $( [15-Aug-2011] $)

  $( The definition of negation, in terms of ` -> ` and ` F. ` .  (Contributed
     by Anthony Hart, 15-Aug-2011.) $)
  tbw-negdf $p |- ( ( ( -. ph -> ( ph -> F. ) )
    -> ( ( ( ph -> F. ) -> -. ph ) -> F. ) ) -> F. ) $=
    ( wn wfal wi wb pm2.21 ax-1 falim ja pm2.43i impbii tbw-bijust mpbi ) ABZAC
    DZENODONDZCDDCDNOACFONACPNOGPHIJKNOLM $.
    $( [17-Aug-2011] $) $( [15-Aug-2011] $)

  $( The first of four axioms in the Tarski-Bernays-Wajsberg system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  tbw-ax1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( imim1 ) ABCD $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The second of four axioms in the Tarski-Bernays-Wajsberg system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  tbw-ax2 $p |- ( ph -> ( ps -> ph ) ) $=
    ( ax-1 ) ABC $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The third of four axioms in the Tarski-Bernays-Wajsberg system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  tbw-ax3 $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( peirce ) ABC $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The fourth of four axioms in the Tarski-Bernays-Wajsberg system.

     This axiom was added to the Tarski-Bernays axiom system ( see ~ tb-ax1 ,
     ~ tb-ax2 , and ~ tb-ax3 ) by Wajsberg for completeness.  (Contributed by
     Anthony Hart, 13-Aug-2011.) $)
  tbw-ax4 $p |- ( F. -> ph ) $=
    ( falim ) AB $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  ${
    tbwsyl.1 $e |- ( ph -> ps ) $.
    tbwsyl.2 $e |- ( ps -> ch ) $.
    $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
       (Contributed by Anthony Hart, 16-Aug-2011.) $)
    tbwsyl $p |- ( ph -> ch ) $=
      ( wi tbw-ax1 ax-mp ) BCFZACFZEABFIJFDABCGHH $.
      $( [17-Aug-2011] $) $( [16-Aug-2011] $)
  $}

  $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  tbwlem1 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi tbw-ax2 tbw-ax1 tbwsyl tbw-ax3 mpsyl ) BBCDZCDZDAJDKACDZDBLDBJKDZKBJBD
    MBJEJBCFGMKCDKDKJKCFKCHGGAJCFBKLFI $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  tbwlem2 $p |- ( ( ph -> ( ps -> F. ) ) -> ( ( ( ph -> ch ) -> th )
    -> ( ps -> th ) ) ) $=
    ( wfal wi tbw-ax4 tbw-ax1 tbwlem1 ax-mp mpsyl tbwsyl ) ABEFZFZBACFZFZODFBDF
    FBMCFZFZNQOFPMBCFZFZRECFZTCGMUASFFUATFBECHMUASIJJMBCIJAMCHBQOHKBODHL $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  tbwlem3 $p |- ( ( ( ( ( ph -> F. ) -> ph ) -> ph ) -> ps ) -> ps ) $=
    ( wfal wi tbw-ax3 tbw-ax2 tbw-ax1 tbwsyl ax-mp ) ACDADADZBDZKBDZDZLJMACEJKJ
    DMJKFKJBGHIMLBDLDLKLBGLBEHI $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  tbwlem4 $p |- ( ( ( ph -> F. ) -> ps ) -> ( ( ps -> F. ) -> ph ) ) $=
    ( wfal wi tbw-ax4 tbw-ax1 tbwlem1 ax-mp tbwlem2 tbwlem3 tbwsyl ) ACDZBDZLBC
    DZCDZDZNADZBODZMPDZNNDZRCCDZTCENUANDDUATDBCCFNUANGHHNBCGHMRPDDRSDLBOFMRPGHH
    PLADADQDQLNAAIAQJKK $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Lukasiewicz axioms from Tarski-Bernays-Wajsberg'.
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  tbwlem5 $p |- ( ( ( ph -> ( ps -> F. ) ) -> F. ) -> ph ) $=
    ( wfal wi tbw-ax2 tbw-ax1 tbwsyl tbwlem1 ax-mp tbwlem4 ) ACDZABCDZDZDZMCDAD
    AKLDZDNABADOABEBACFGAKLHIAMJI $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ luk-1 derived from the Tarski-Bernays-Wajsberg axioms.  (Contributed by
     Anthony Hart, 16-Aug-2011.) $)
  re1luk1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( tbw-ax1 ) ABCD $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ luk-2 derived from the Tarski-Bernays-Wajsberg axioms.  (Contributed by
     Anthony Hart, 16-Aug-2011.) $)
  re1luk2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi wfal tbw-negdf tbw-ax2 tbwlem4 ax-mp tbw-ax1 tbw-ax3 tbwsyl ) ABZAC
    ZADCZACZANLCZMOCLNCZPDCZCZDCZPAERSCTPCRQFPSGHHNLAIHADJK $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ luk-3 derived from the Tarski-Bernays-Wajsberg axioms.

     This theorem, along with ~ re1luk1 and ~ re1luk2 proves that ~ tbw-ax1 ,
     ~ tbw-ax2 , ~ tbw-ax3 , and ~ tbw-ax4 , with ~ ax-mp can be used as a
     complete axiom system for all of propositional calculus.  (Contributed by
     Anthony Hart, 16-Aug-2011.) $)
  re1luk3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wfal wi tbw-negdf tbwlem5 ax-mp tbw-ax4 tbw-ax1 tbwlem1 mpsyl ) ACZADE
    ZEZANBEZMBEONMEZDEEDEOAFOQGHNABEZEZAPEDBEZSBINTREETSEADBJNTRKHHNABKHMNBJL
    $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  Deriving the Tarski-Bernays-Wajsberg axioms from Meredith's First CO Axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A single axiom for propositional calculus offered by Meredith.

     This axiom is worthy of note, due to it having only 19 symbols, not
     counting parentheses.  The more well known ~ meredith has 21 symbols, sans
     parentheses.

     See ~ merco2 for another axiom of equal length.  (Contributed by Anthony
     Hart, 13-Aug-2011.) $)
  merco1 $p |- ( ( ( ( ( ph -> ps ) -> ( ch -> F. ) ) -> th ) -> ta )
         -> ( ( ta -> ph ) -> ( ch -> ph ) ) ) $=
    ( wi wfal wn ax-1 falim ja imim2i imim1i meredith syl ) ABFZCGFZFZDFZEFPDHZ
    CHZFZFZDFZEFEAFCAFFUDSERUCDQUBPCGUBUATIUBJKLMMABDCENO $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem1 $p |- ( ph -> ( F. -> ch ) ) $=
    ( wfal wi merco1 ax-mp ) AACADZDZDZACBDZDZHGDZHDZIGCDACDZDZGDHDZMGNDZNDZGDO
    DPCAANGEGNAGOEFGCAGHEFHCDZNDZGDLDZMIDQSDHDTDUACAASHEGNHHTEFHCAGLEFFHJDZKDZI
    KDZJCDNDZGDHDZUCRJDUEDUFCAANJEGNAJUEEFJCAGHEFKCDICDZDZJDUBDZUCUDDJUGDSDKDUH
    DUICBISKEJUGHKUHEFKCIJUBEFFF $.
    $( [17-Sep-2011] $)

  $( ~ tbw-ax4 rederived from ~ merco1 .  (Contributed by Anthony Hart,
     17-Sep-2011.) $)
  retbwax4 $p |- ( F. -> ph ) $=
    ( wfal wi merco1lem1 ax-mp ) ABACZCZFAADGADE $.
    $( [17-Sep-2011] $)

  $( ~ tbw-ax2 rederived from ~ merco1 .  (Contributed by Anthony Hart,
     17-Sep-2011.) $)
  retbwax2 $p |- ( ph -> ( ps -> ph ) ) $=
    ( wi wfal merco1lem1 merco1 ax-mp ) AAAACZCZCZABACZCZDACZHCZICZJHACADCZCACZ
    MCOQAEHAAAMFGIPCPCDCNCOJCAHAPDFIPADNFGGMKCZLCZJLCZKACPCACZMCSUAAEKAAAMFGLBD
    CZCJDCZCDCRCSTCAKBUCDFLUBJDRFGGG $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem2 $p |- ( ( ( ph -> ps ) -> ch ) -> ( ( ( ps -> ta ) -> ( ph ->
    F. ) ) -> ch ) ) $=
    ( wi wfal retbwax2 merco1 ax-mp ) CAEZBDEAFEEZFEZEZBEABEZEZNCEKCEELMEOLJGBD
    AFMHICAKBNHI $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem3 $p |- ( ( ( ph -> ps ) -> ( ch -> F. ) ) -> ( ch -> ph ) ) $=
    ( wi wfal merco1lem2 retbwax2 ax-mp ) AAADZAEDDZIDZDZABDCEDDZCADZDZIEDJEDDZ
    LAAEAFKLDPLDKAGJILEFHHNEDMEDDZLODZCAEBFORDQRDOLGMNREFHHH $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem4 $p |- ( ( ( ph -> ps ) -> ch ) -> ( ps -> ch ) ) $=
    ( wi wfal merco1lem3 merco1 ax-mp ) CADZBEDZDZBDABDZDZLCDBCDDJAEDZDIEDZDKDM
    JNIFBEAOKGHCABBLGH $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem5 $p |- ( ( ( ( ph -> F. ) -> ch ) -> ta ) -> ( ph -> ta ) ) $=
    ( wi wfal merco1lem4 merco1 ax-mp ) CADZAEDZDBDJBDZDKCDACDDIJBFCAABKGH $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem6 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ch -> ( ph -> ps ) ) ) $=
    ( wi wfal merco1lem5 merco1lem3 ax-mp merco1 ) ABDZEDCEDZDZEDZADZAJDCJDDJME
    DZDZNLODZPOEDMDQLEEFOELGHJKOFHABMGHJECEAIH $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem7 $p |- ( ph -> ( ( ( ps -> ch ) -> ps ) -> ps ) ) $=
    ( wi wfal merco1lem5 merco1 ax-mp merco1lem6 ) BCDZBDZKBDZDZALDBEDKEDZDCDJD
    MBNCFBEKCJGHKBAIH $.
    $( [17-Sep-2011] $)

  $( ~ tbw-ax3 rederived from ~ merco1 .  (Contributed by Anthony Hart,
     17-Sep-2011.) $)
  retbwax3 $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi retbwax2 merco1lem7 ax-mp ) AAACCZABCACACAADGABEF $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 17-Sep-2011.) $)
  merco1lem8 $p |- ( ph -> ( ( ps -> ( ps -> ch ) ) -> ( ps -> ch ) ) ) $=
    ( wi merco1lem6 ax-mp ) BBCDZDZHGDZDAIDBCHEHGAEF $.
    $( [17-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem9 $p |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) $=
    ( wfal wi merco1lem8 ax-mp ) CADZAABDZDHDZDZIGABEJABEF $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem10 $p |- ( ( ( ( ( ph -> ps ) -> ch ) -> ( ta -> ch ) ) -> ph ) ->
    ( th -> ph ) ) $=
    ( wi wfal merco1 merco1lem2 ax-mp ) ABFZDGFZFCAFEGFFAFZGFZFKCFECFFZFZOAFDAF
    FMKFOFPCAEAKHMKOLIJABDNOHJ $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem11 $p |- ( ( ph -> ps ) -> ( ( ( ch -> ( ph -> ta ) ) -> F. ) -> ps
    ) ) $=
    ( wi wfal merco1lem5 merco1lem3 ax-mp merco1lem4 merco1 merco1lem2 ) ADEZBA
    EZCMEZFEZFEZEZFEZFEZEZABEPBEEZOTEZUAQTEZUCRTEZUDTFESEUERFFGTFRHINQTJIOFTGIC
    MTJISAEUBEUAUBEBAPFAKSAUBDLII $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem12 $p |- ( ( ph -> ps ) -> ( ( ( ch -> ( ph -> ta ) ) -> ph ) -> ps
    ) ) $=
    ( wi wfal merco1lem3 merco1 ax-mp merco1lem9 merco1lem11 ) BAEZCADEZEZAEZFE
    ZEFEAEZABEOBEEOAEZQOREZRMPECFEZENESMPCGADOTNHIOAJIOALFKIBAOFAHI $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem13 $p |- ( ( ( ( ph -> ps ) -> ( ch -> ps ) ) -> ta ) -> ( ph ->
    ta ) ) $=
    ( wi wfal merco1 merco1lem4 ax-mp merco1lem12 ) DAEZAFEEAEABECBEEZEZLDEADEE
    ALEZMBAECFEEAEZAELENBACAAGOALHIALKFJIDAAALGI $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem14 $p |- ( ( ( ( ph -> ps ) -> ps ) -> ch ) -> ( ph -> ch ) ) $=
    ( wi wfal merco1lem13 merco1lem8 merco1 ax-mp merco1lem9 merco1lem12 ) CADZ
    AEDDADABDZBDZDZNCDACDDANDZOMNDNDZPDZPABMNFRRPDZDZSPADREDDADZQDTUAMBGPARAQHI
    RPJIIANLEKICAAANHI $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem15 $p |- ( ( ph -> ps ) -> ( ph -> ( ch -> ps ) ) ) $=
    ( wi merco1lem14 merco1lem13 ax-mp ) ABDZBDCBDZDAIDZDHJDABIEHBCJFG $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem16 $p |- ( ( ( ph -> ( ps -> ch ) ) -> ta ) -> ( ( ph -> ch ) -> ta
    ) ) $=
    ( wi wfal merco1lem15 merco1lem11 ax-mp merco1 ) DAEZACEZFEEFEABCEEZEZMDELD
    EELMENACBGLMKFHIDALFMJI $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem17 $p |- ( ( ( ( ( ph -> ps ) -> ph ) -> ch ) -> ta ) -> ( ( ph ->
    ch ) -> ta ) ) $=
    ( wfal merco1lem11 merco1lem7 ax-mp merco1lem9 merco1lem4 merco1lem16 mpsyl
    wi merco1 ) DAMZACMZEMZMCMZABMAMZCMZMTDMPDMMQPMZTMZRQCMTPTMZUBCAMZSEMMEMAMZ
    UCSAMZUEMZUESAUDEFUGUGUEMZMZUHUEAMUGEMMAMZUFMUIUJABGUEAUGAUFNHUGUEIHHCASEAN
    HTAMZUAEMMEMPMZUCUBMUAPMZULMZULUAPUKEFUNUNULMZMZUOULAMUNEMMAMZUMMUPUQPEGULA
    UNAUMNHUNULIHHTAUAEPNHHOQCJQACTKLDAPCTNH $.
    $( [18-Sep-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco1 .
     (Contributed by Anthony Hart, 18-Sep-2011.) $)
  merco1lem18 $p |- ( ( ph -> ( ps -> ch ) ) -> ( ( ps -> ph ) -> ( ps ->
    ch ) ) ) $=
    ( wfal merco1 merco1lem17 ax-mp merco1lem5 merco1lem3 merco1lem4 merco1lem2
    wi merco1lem9 ) BALZABCLZLZNOLZLZLZROBLZALRLZSTNDLZLTLALRLUAOBNTAETUBARFGBC
    ARFGSSRLZLZUCQRDLSDLZLZDLZDLZLZUDRUHLZUIUFUHLZUJUHDLUGLUKUFDDHUHDUFIGRUEUHH
    GPQUHJGUGNLUDLUIUDLRDSDNEUGNUDOKGGSRMGG $.
    $( [18-Sep-2011] $)

  $( ~ tbw-ax1 rederived from ~ merco1 .

     This theorem, along with ~ retbwax2 , ~ retbwax3 , and ~ retbwax4 , shows
     that ~ merco1 with ~ ax-mp can be used as a complete axiomatization of
     propositional calculus.  (Contributed by Anthony Hart, 18-Sep-2011.) $)
  retbwax1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi merco1lem18 merco1lem16 ax-mp merco1lem15 merco1lem14 wfal merco1lem10
    merco1 merco1lem9 merco1lem13 ) BCDZABDZACDZDZDZPOQDZDZBQDRDSBACEBACRFGOSUA
    DZDZUBSRDUBDZUCRUBDZUDRUADUEPQOHRUASHGRSUAEGORUBIGUCUBDZJDZUADZUFUGTDZUHUFQ
    DZTDZUIOUBQITADZUGJDZDZQDUJDZUKUIDQADZUGDZUMDUNDZUOUMJDULJDDUGDUQDURUGJJUPU
    LKUMJULUGUQLGQAUFUMUNLGTAUGQUJLGGUGTPHGUHUBDUFDZUFDZUHUFDUSUTDUTUFJUAUSSKUS
    UFMGUHUBUCUFNGGGG $.
    $( [18-Sep-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  Deriving the Tarski-Bernays-Wajsberg axioms from Meredith's Second CO Axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A single axiom for propositional calculus offered by Meredith.

     This axiom has 19 symbols, sans auxiliaries.  See notes in ~ merco1 .
     (Contributed by Anthony Hart, 7-Aug-2011.) $)
  merco2 $p |- ( ( ( ph -> ps ) -> ( ( F. -> ch ) -> th ) ) -> ( ( th
         -> ph ) -> ( ta -> ( et -> ph ) ) ) ) $=
    ( wi wfal falim pm2.04 mpi jarl idd jad looinv 3syl a1dd a1i com4l ) FABGZH
    CGZDGGZDAGZEAUBUCEAGGGFUBUCAEUBTDGZADGDGUCAGUBUAUDCITUADJKUDADDABDLUDDMNADO
    PQRS $.
    $( [17-Aug-2011] $) $( [7-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem1 $p |- ( ( ( ph -> ps ) -> ch ) -> ( ps -> ( th -> ch ) ) ) $=
    ( wi wfal merco2 ax-mp ) AAEZFAEZAEEIAIEEEZABEZCEZBDCEZEZEZAAAAAAGZKKPEZQCA
    EZJLEZEZPEZKREZCAALBDGPTEJUAEEZUBUCETOEJPEEZUDOJFEZEFBETEEUEBNAFJAGOUFBTJMG
    HTOAPJSGHPTAUAKKGHHHH $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem2 $p |- ( ( ( ph -> ps ) -> ph ) -> ( ch -> ( th -> ph ) ) ) $=
    ( wi wfal merco2 ax-mp ) AAEZFAEZAEEIAIEEEZABEZAEZCDAEEZEZAAAAAAGZKKOEZPIJL
    EZEZOEZKQEZAAALCDGOREJSEEZTUAERNEJOEEZUBNLEJREEZUCLJFEZEJNEEUDABAFCDGLUEANJ
    JGHNLARJMGHRNAOJIGHORASKKGHHHH $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem3 $p |- ( ( ps -> ch ) -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi wfal merco2 mercolem2 ax-mp ) AADZEADZADDIAIDDDZBCDZBACDZDZDZAAAAAAFZK
    KODZPCADZJBDZDZODZKQDZCAABBAFOSDJTDDZUAUBDSNDJODDZUCNBDJSDDUDBMJJGNBASJLFHS
    NAOJRFHOSATKKFHHHH $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem4 $p |- ( ( th -> ( et -> ph ) ) -> ( ( ( th -> ch )
  -> ph ) -> ( ta -> ( et -> ph ) ) ) ) $=
    ( wi wfal merco2 mercolem1 ax-mp mercolem3 ) AAFZGAFZAFFLALFFFZCEAFZFZCBFZA
    FZDOFFZFZAAAAAAHZNNTFZUAOAFZMCFFZTFZNUBFZOAACRDHTCFZMUDFFZUEUFFUGUDFZUHQMTF
    FZUIMQFZTFZUJLUKFSFULAAAQDEHLUKSPIJMQTMIJCBATUCMHJMUGUDKJTCAUDNNHJJJJ $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem5 $p |- ( th -> ( ( th -> ph ) -> ( ta -> ( ch -> ph ) ) ) ) $=
    ( wi wfal merco2 mercolem1 ax-mp mercolem2 ) AAEZFAEZAEEKAKEEEZCCAEDBAEEEZE
    ZAAAAAAGZMMOEZPLCEZOEZMQEZKRENESAAACDBGKRNCHIOCELREESTECNLLJOCARMMGIIII $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem6 $p |- ( ( ph -> ( ps -> ( ph -> ch ) ) )
  -> ( ps -> ( ph -> ch ) ) ) $=
    ( wi wfal merco2 mercolem1 ax-mp mercolem5 mercolem4 ) AADZEADADDKAKDDDZABA
    CDZDZDZNDZAAAAAAFZLLPDZQLLRDZQORDZLSDZLTQMRDZLTDZAODZMDPDUBAOMBGUDMPLGHATDU
    BUCDNOALIRCALOJHHHLTUADZQPUADZLUEDZALDZPDSDUFALPLGUHPSLGHOUEDUFUGDRLOLIUANO
    LTJHHHHHHH $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem7 $p |- ( ( ph -> ps ) -> ( ( ( ph -> ch )
  -> ( th -> ps ) ) -> ( th -> ps ) ) ) $=
    ( wi wfal merco2 mercolem3 mercolem6 ax-mp mercolem5 mercolem4 ) AAEZFAEAEE
    MAMEEEZABEZACEZDBEZEZQEZEZAAAAAAGPSEZNTEZRUAEUARPQHRPQIJATEUAUBEBDARKSCANOL
    JJJ $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( Used to rederive the Tarski-Bernays-Wajsberg axioms from ~ merco2 .
     (Contributed by Anthony Hart, 16-Aug-2011.) $)
  mercolem8 $p |- ( ( ph -> ps ) -> ( ( ps -> ( ph -> ch ) )
  -> ( ta -> ( th -> ( ph -> ch ) ) ) ) ) $=
    ( wi wfal merco2 mercolem3 ax-mp mercolem7 ) AAFZGAFZAFFLALFFFZABFZBACFZFED
    PFFFZFZAAAAAAHZNNRFZSPMBFZFUAFZRFZNTFZUBQFUCPUAABEDHOUBQIJRMUBFZFUEFZUCUDFO
    UBFUFABCMKOUBQMKJRUEAUBNNHJJJJ $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ tbw-ax1 rederived from ~ merco2 .  (Contributed by Anthony Hart,
     16-Aug-2011.) $)
  re1tbw1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi mercolem8 mercolem3 mercolem6 mpsyl ax-mp ) BCDZABDZJACDZDZDZDNKBLDZND
    DJONABCJKEABCFKOMGHJKLGI $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ tbw-ax2 rederived from ~ merco2 .  (Contributed by Anthony Hart,
     16-Aug-2011.) $)
  re1tbw2 $p |- ( ph -> ( ps -> ph ) ) $=
    ( wi mercolem1 ax-mp mercolem6 ) BABACZCZCZHAICZIAACZACHCJAAABDKAHBDEABGFEB
    AAFE $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ tbw-ax3 rederived from ~ merco2 .  (Contributed by Anthony Hart,
     16-Aug-2011.) $)
  re1tbw3 $p |- ( ( ( ph -> ps ) -> ph ) -> ph ) $=
    ( wi mercolem2 mercolem6 ax-mp ) AACZACAGCCZABCACZACZAAAADIHJCZCKABHIDIHAEF
    F $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

  $( ~ tbw-ax4 rederived from ~ merco2 .

     This theorem, along with ~ re1tbw1 , ~ re1tbw2 , and ~ re1tbw3 , shows
     that ~ merco2 , along with ~ ax-mp , can be used as a complete
     axiomatization of propositional calculus.  (Contributed by Anthony Hart,
     16-Aug-2011.) $)
  re1tbw4 $p |- ( F. -> ph ) $=
    ( wi wfal re1tbw3 re1tbw2 re1tbw1 ax-mp mercolem3 merco2 ) AABZCABZJABZABZJ
    AADALBMJBAJEALAFGGZJJKBZNKKBZJOBZKABZKBZKBZPKADKSBTPBKREKSKFGGRPBPQBCKAHKAA
    KJJIGGGG $.
    $( [17-Aug-2011] $) $( [16-Aug-2011] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       Deriving the Lukasiewicz axioms from the The Russell-Bernays Axioms
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Justification for ~ rb-imdf .  (Contributed by Anthony Hart,
     17-Aug-2011.) $)
  rb-bijust $p |- ( ( ph <-> ps ) <-> -. ( -. ( -. ph \/ ps )
    \/ -. ( -. ps \/ ph ) ) ) $=
    ( wb wi wn wo dfbi1 imor notbii imbi12i pm4.62 3bitri ) ABCABDZBADZEZDZEAEB
    FZBEAFZEZDZEQESFZEABGPTMQOSABHNRBAHIJITUAQRKIL $.
    $( [25-Aug-2011] $) $( [17-Aug-2011] $)

  $( The definition of implication, in terms of ` \/ ` and ` -. ` .
     (Contributed by Anthony Hart, 17-Aug-2011.) $)
  rb-imdf $p |- -. ( -. ( -. ( ph -> ps ) \/ ( -. ph \/ ps ) )
    \/ -. ( -. ( -. ph \/ ps ) \/ ( ph -> ps ) ) ) $=
    ( wi wn wo wb imor rb-bijust mpbi ) ABCZADBEZFJDKEDKDJEDEDABGJKHI $.
    $( [25-Aug-2011] $) $( [17-Aug-2011] $)

  ${
    anmp.min $e |- ph $.
    anmp.maj $e |- ( -. ph \/ ps ) $.
    $( Modus ponens for ` \/ ` ` -. ` axiom systems.  (Contributed by Anthony
       Hart, 12-Aug-2011.) $)
    anmp $p |- ps $=
      ( imorri ax-mp ) ABCABDEF $.
      $( [17-Aug-2011] $) $( [12-Aug-2011] $)
  $}

  $( The first of four axioms in the Russell-Bernays axiom system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  rb-ax1 $p |- ( -. ( -. ps \/ ch ) \/ ( -. ( ph \/ ps ) \/ ( ph \/ ch ) ) ) $=
    ( wn wo wi orim2 imor 3imtr3i imori ) BDCEZABEZDACEZEZBCFLMFKNABCGBCHLMHIJ
    $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The second of four axioms in the Russell-Bernays axiom system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  rb-ax2 $p |- ( -. ( ph \/ ps ) \/ ( ps \/ ph ) ) $=
    ( wo wn pm1.4 con3i con1i orri ) ABCZDZBACZKJIKABEFGH $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The third of four axioms in the Russell-Bernays axiom system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  rb-ax3 $p |- ( -. ph \/ ( ps \/ ph ) ) $=
    ( wn wo pm2.46 con1i orri ) ACZBADZIHBAEFG $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  $( The fourth of four axioms in the Russell-Bernays axiom system.
     (Contributed by Anthony Hart, 13-Aug-2011.) $)
  rb-ax4 $p |- ( -. ( ph \/ ph ) \/ ph ) $=
    ( wo wn pm1.2 con3i con1i orri ) AABZCZAAIHAADEFG $.
    $( [17-Aug-2011] $) $( [13-Aug-2011] $)

  ${
    rbsyl.1 $e |- ( -. ps \/ ch ) $.
    rbsyl.2 $e |- ( ph \/ ps ) $.
    $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
       (Contributed by Anthony Hart, 18-Aug-2011.) $)
    rbsyl $p |- ( ph \/ ch ) $=
      ( wo wn rb-ax1 anmp ) ABFZACFZEBGCFJGKFDABCHII $.
      $( [25-Aug-2011] $) $( [18-Aug-2011] $)
  $}

  ${
    rblem1.1 $e |- ( -. ph \/ ps ) $.
    rblem1.2 $e |- ( -. ch \/ th ) $.
    $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
       (Contributed by Anthony Hart, 18-Aug-2011.) $)
    rblem1 $p |- ( -. ( ph \/ ch ) \/ ( ps \/ th ) ) $=
      ( wo wn rb-ax1 anmp rb-ax2 rbsyl ) ACGHZBCGZBDGZCHDGNHOGFBCDIJMCBGZNCBKMC
      AGZPAHBGQHPGECABIJACKLLL $.
      $( [25-Aug-2011] $) $( [18-Aug-2011] $)
  $}

  $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
     (Contributed by Anthony Hart, 18-Aug-2011.) $)
  rblem2 $p |- ( -. ( ch \/ ph ) \/ ( ch \/ ( ph \/ ps ) ) ) $=
    ( wn wo rb-ax2 rb-ax3 rbsyl rb-ax1 anmp ) ADZABEZECAEDCLEEKBAELBAFABGHCALIJ
    $.
    $( [25-Aug-2011] $) $( [18-Aug-2011] $)

  $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
     (Contributed by Anthony Hart, 18-Aug-2011.) $)
  rblem3 $p |- ( -. ( ch \/ ph ) \/ ( ( ch \/ ps ) \/ ph ) ) $=
    ( wo wn rb-ax2 rblem2 rbsyl ) CADEZACBDZDZJADAJFIACDKCBAGCAFHH $.
    $( [25-Aug-2011] $) $( [18-Aug-2011] $)

  ${
    rblem4.1 $e |- ( -. ph \/ th ) $.
    rblem4.2 $e |- ( -. ps \/ ta ) $.
    rblem4.3 $e |- ( -. ch \/ et ) $.
    $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
       (Contributed by Anthony Hart, 18-Aug-2011.) $)
    rblem4 $p |- ( -. ( ( ph \/ ps ) \/ ch ) \/ ( ( et \/ ta ) \/ th ) ) $=
      ( wo wn rblem1 rb-ax2 rb-ax1 anmp rbsyl rb-ax4 rblem2 rb-ax3 ) ABJZCJKZCB
      JZAJZFEJZDJUBUDADCFBEIHLGLUABCJZAJZUCUFKZAUBJZUCAUBMUGAUEJZUHUEKUBJUIKUHJ
      BCMAUEUBNOUEAMPPUAUFUFJUFUFQTUFCUFTKUIUFAUEMBCARPCKZUEJUJUFJCBSUEAUJROLPP
      P $.
      $( [25-Aug-2011] $) $( [18-Aug-2011] $)
  $}

  $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
     (Contributed by Anthony Hart, 19-Aug-2011.) $)
  rblem5 $p |- ( -. ( -. -. ph \/ ps ) \/ ( -. -. ps \/ ph ) ) $=
    ( wn wo rb-ax2 rb-ax4 rb-ax3 rbsyl anmp rblem1 ) ACZCZBDCABCZCZDNADANELABNK
    ADLCZADKAADAAFAAGHZKOAAOLDLODOLLDLLFLLGHOLEIPJINMDMNDNMMDMMFMMGHNMEIJH $.
    $( [25-Aug-2011] $) $( [19-Aug-2011] $)

  ${
    rblem6.1 $e |- -. ( -. ( -. ph \/ ps ) \/ -. ( -. ps \/ ph ) ) $.
    $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
       (Contributed by Anthony Hart, 19-Aug-2011.) $)
    rblem6 $p |- ( -. ph \/ ps ) $=
      ( wn wo rb-ax4 rb-ax3 rbsyl rb-ax2 anmp rblem3 rblem5 ) ADBEZDZBDAEDZEZDZ
      MCNDZPEZQDMEPREZSNREZTRNEUARNNENNFNNGHRNIJRONKJPRIJMPLJJ $.
      $( [25-Aug-2011] $) $( [19-Aug-2011] $)
  $}

  ${
    rblem7.1 $e |- -. ( -. ( -. ph \/ ps ) \/ -. ( -. ps \/ ph ) ) $.
    $( Used to rederive the Lukasiewicz axioms from Russell-Bernays'.
       (Contributed by Anthony Hart, 19-Aug-2011.) $)
    rblem7 $p |- ( -. ps \/ ph ) $=
      ( wn wo rb-ax3 rblem5 anmp ) ADBEDZBDAEZDZEZDZJCKDLEMDJEKIFJLGHH $.
      $( [25-Aug-2011] $) $( [19-Aug-2011] $)
  $}

  ${
    re1axmp.min $e |- ph $.
    re1axmp.maj $e |- ( ph -> ps ) $.
    $( ~ ax-mp derived from Russell-Bernays'.  (Contributed by Anthony Hart,
       19-Aug-2011.) $)
    re1axmp $p |- ps $=
      ( wi wn wo rb-imdf rblem6 anmp ) ABCABEZAFBGZDKLABHIJJ $.
      $( [25-Aug-2011] $) $( [19-Aug-2011] $)
  $}

  $( ~ luk-1 derived from Russell-Bernays'.  (Contributed by Anthony Hart,
     19-Aug-2011.) $)
  re2luk1 $p |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) $=
    ( wi wn rb-imdf rblem7 rblem6 rb-ax2 rb-ax4 rb-ax3 rbsyl anmp rblem1 rb-ax1
    wo rblem4 ) ABDZEZBCDZACDZDZPZRUBDZSTEZUAPZUBUBUFTUAFGSAEZBPZUFUHEZBECPZEZU
    GCPZPZUFUKUEULUAUEUJPZUKEZUEPZTUJBCFHUNEUEUOPUPUEUOIUEUEUJUOUEEUEUEPUEUEJUE
    UEKLUOUKPUKUOPUOUKUKPUKUKJUKUKKLZUOUKIMNLMUAULACFGNUKUIULPZPZUIUMPZUGBCOUSE
    ZUMUIPZUTUMUIIVAURUKPVBUIULUKUIULUKUIEUIUIPUIUIJUIUIKLULEULULPULULJULULKLUQ
    QUKURILLMLRUHABFHLLUDUCRUBFGM $.
    $( [25-Aug-2011] $) $( [19-Aug-2011] $)

  $( ~ luk-2 derived from Russell-Bernays'.  (Contributed by Anthony Hart,
     19-Aug-2011.) $)
  re2luk2 $p |- ( ( -. ph -> ph ) -> ph ) $=
    ( wn wi wo rb-ax4 rb-ax3 rbsyl rb-ax2 anmp rblem1 rb-imdf rblem6 rblem7 ) A
    BZACZBZADZOACZPNBZADZATBAADZAAEZSAAANADSBZADNUAAUBAAFGZNUCAAUCSDSUCDUCSSDSS
    ESSFGUCSHIUDJIUDJGOTNAKLGRQOAKMI $.
    $( [25-Aug-2011] $) $( [19-Aug-2011] $)

  $( ~ luk-3 derived from Russell-Bernays'.

     This theorem, along with ~ re1axmp , ~ re2luk1 , and ~ re2luk2 shows that
     ~ rb-ax1 , ~ rb-ax2 , ~ rb-ax3 , and ~ rb-ax4 , along with ~ anmp , can be
     used as a complete axiomatization of propositional calculus.  (Contributed
     by Anthony Hart, 19-Aug-2011.) $)
  re2luk3 $p |- ( ph -> ( -. ph -> ps ) ) $=
    ( wn wi wo rb-imdf rblem7 rb-ax4 rb-ax3 rbsyl rb-ax2 anmp rblem2 ) ACZNBDZE
    ZAODZNNCZBEZOOSNBFGNREZNSERNETRNNENNHNNIJRNKLRBNMLJQPAOFGL $.
    $( [25-Aug-2011] $) $( [19-Aug-2011] $)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
        Predicate calculus mostly without distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#

  Here we introduce predicate calculus, which allows us to refer to values
  other than true or false.  Our axiom system is closely related to a system of
  Tarski.  Our system is exactly equivalent to the traditional axiom system in
  most logic textbooks but has the advantage of being easy to manipulate with a
  computer program.  See [Megill] for more information.

$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  "Pure" (equality-free) predicate calculus axioms ax-5, ax-6, ax-7, ax-gen
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for pure predicate calculus. $)
  $c A. $. $( "inverted A" universal quantifier (read:  "for all") $)
  $c set $. $( Individual variable type (read:  "the following is an
             individual (set) variable" $)
  ${ $v x $. set.TOP.1 $f set x $. set.TOP $a IS_TOPLEVEL set x $. $}

  $( Declare some names for individual variables. $)
  $v x $.
  $v y $.
  $v z $.
  $v w $.
  $v v $.
  $v u $.
  $v t $.
  $( Let ` x ` be an individual variable. $)
  vx $f set x $.
  $( Let ` y ` be an individual variable. $)
  vy $f set y $.
  $( Let ` z ` be an individual variable. $)
  vz $f set z $.
  $( Let ` w ` be an individual variable. $)
  vw $f set w $.
  $( Let ` v ` be an individual variable. $)
  vv $f set v $.
  $( Let ` u ` be an individual variable. $)
  vu $f set u $.
  $( Let ` t ` be an individual variable. $)
  vt $f set t $.

  $( Extend wff definition to include the universal quantifier ('for all').
     ` A. x ph ` is read " ` ph ` (phi) is true for all ` x ` ."  Typically, in
     its final application ` ph ` would be replaced with a wff containing a
     (free) occurrence of the variable ` x ` , for example ` x = y ` .  In a
     universe with a finite number of objects, "for all" is equivalent to a big
     conjunction (AND) with one wff for each possible case of ` x ` .  When the
     universe is infinite (as with set theory), such a propositional-calculus
     equivalent is not possible because an infinitely long formula has no
     meaning, but conceptually the idea is the same. $)
  wal $a wff A. x ph $.

  $( Axiom of Quantified Implication.  Axiom C4 of [Monk2] p. 105. $)
  ax-5 $a |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Axiom of Quantified Negation.  Axiom C5-2 of [Monk2] p. 113. $)
  ax-6 $a |- ( -. A. x ph -> A. x -. A. x ph ) $.

  $( Axiom of Quantifier Commutation.  This axiom says universal quantifiers
     can be swapped.  One of the 4 axioms of pure predicate calculus.  Axiom
     scheme C6' in [Megill] p. 448 (p. 16 of the preprint).  Also appears as
     Lemma 12 of [Monk2] p. 109 and Axiom C5-3 of [Monk2] p. 113.  An alternate
     axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o , and
     ~ ax-7 . $)
  ax-7 $a |- ( A. x A. y ph -> A. y A. x ph ) $.

  ${
    ax-g.1 $e |- ph $.
    $( Rule of Generalization.  The postulated inference rule of pure predicate
       calculus.  See e.g.  Rule 2 of [Hamilton] p. 74.  This rule says that if
       something is unconditionally true, then it is true for all values of a
       variable.  For example, if we have proved ` x = x ` , we can conclude
       ` A. x x = x ` or even ` A. y x = x ` .  Theorem ~ a4i shows we can go
       the other way also: in other words we can add or remove universal
       quantifiers from the beginning of any theorem as required. $)
    ax-gen $a |- A. x ph $.
  $}

  $( Declare the existential quantifier symbol. $)
  $c E. $.   $( Backwards E (read:  "there exists") $)

  $( Extend wff definition to include the existential quantifier ("there
     exists"). $)
  wex $a wff E. x ph $.

  $( Define existential quantification. ` E. x ph ` means "there exists at
     least one set ` x ` such that ` ph ` is true."  Definition of [Margaris]
     p. 49. $)
  df-ex $a |- ( E. x ph <-> -. A. x -. ph ) $.

  ${
    gen2.1 $e |- ph $.
    $( Generalization applied twice. $)
    gen2 $p |- A. x A. y ph $=
      ( wal ax-gen ) ACEBACDFF $.
      $( [30-Apr-1998] $)
  $}

  ${
    mpg.1 $e |- ( A. x ph -> ps ) $.
    mpg.2 $e |- ph $.
    $( Modus ponens combined with generalization. $)
    mpg $p |- ps $=
      ( wal ax-gen ax-mp ) ACFBACEGDH $.
      $( [24-May-1994] $)
  $}

  ${
    mpgbi.1 $e |- ( A. x ph <-> ps ) $.
    mpgbi.2 $e |- ph $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbi $p |- ps $=
      ( wal ax-gen mpbi ) ACFBACEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    mpgbir.1 $e |- ( ph <-> A. x ps ) $.
    mpgbir.2 $e |- ps $.
    $( Modus ponens on biconditional combined with generalization.  (The proof
       was shortened by Stefan Allan, 28-Oct-2008.) $)
    mpgbir $p |- ph $=
      ( wal ax-gen mpbir ) ABCFBCEGDH $.
      $( [31-Oct-2008] $) $( [24-May-1994] $)
  $}

  ${
    a7s.1 $e |- ( A. x A. y ph -> ps ) $.
    $( Swap quantifiers in an antecedent. $)
    a7s $p |- ( A. y A. x ph -> ps ) $=
      ( wal ax-7 syl ) ACFDFADFCFBADCGEH $.
      $( [5-Aug-1993] $)
  $}

  ${
    alimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    alimi $p |- ( A. x ph -> A. x ps ) $=
      ( wi wal ax-5 mpg ) ABEACFBCFECABCGDH $.
      $( [5-Aug-1993] $)

    $( Inference doubly quantifying both antecedent and consequent. $)
    2alimi $p |- ( A. x A. y ph -> A. x A. y ps ) $=
      ( wal alimi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( Theorem 19.20 of [Margaris] p. 90.  (The proof was shortened by O'Cat,
     30-Mar-2008.) $)
  alim $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( ax-5 ) ABCD $.
    $( [30-Mar-2008] $) $( [5-Aug-1993] $)

  ${
    al2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent. $)
    al2imi $p |- ( A. x ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi alimi alim syl ) ADFBCGZDFBDFCDFGAKDEHBCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    alanimi.1 $e |- ( ( ph /\ ps ) -> ch ) $.
    $( Variant of ~ al2imi with conjunctive antecedent.  (Contributed by Andrew
       Salmon, 8-Jun-2011.) $)
    alanimi $p |- ( ( A. x ph /\ A. x ps ) -> A. x ch ) $=
      ( wal ex al2imi imp ) ADFBDFCDFABCDABCEGHI $.
      $( [8-Jun-2011] $)
  $}

  ${
    alimd.1 $e |- ( ph -> A. x ph ) $.
    alimd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimd $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( wal wi al2imi syl ) AADGBDGCDGHEABCDFIJ $.
      $( [4-Jan-2002] $)
  $}

  $( Theorem 19.15 of [Margaris] p. 90. $)
  albi $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) $=
    ( wb wal bi1 al2imi bi2 impbid ) ABDZCEACEBCEJABCABFGJBACABHGI $.
    $( [5-Aug-1993] $)

  ${
    alrimi.1 $e |- ( ph -> A. x ph ) $.
    alrimi.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimi $p |- ( ph -> A. x ps ) $=
      ( wal alimi syl ) AACFBCFDABCEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    albii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding universal quantifier to both sides of an
       equivalence. $)
    albii $p |- ( A. x ph <-> A. x ps ) $=
      ( wb wal albi mpg ) ABEACFBCFECABCGDH $.
      $( [7-Aug-1994] $)

    $( Inference adding 2 universal quantifiers to both sides of an
       equivalence. $)
    2albii $p |- ( A. x A. y ph <-> A. x A. y ps ) $=
      ( wal albii ) ADFBDFCABDEGG $.
      $( [9-Mar-1997] $)
  $}

  ${
    hbth.1 $e |- ph $.
    $( No variable is (effectively) free in a theorem.

       This and later "hypothesis-building" lemmas, with labels starting
       "hb...", allow us to construct proofs of formulas of the form
       ` |- ( ph -> A. x ph ) ` from smaller formulas of this form.  These are
       useful for constructing hypotheses that state " ` x ` is (effectively)
       not free in ` ph ` ." $)
    hbth $p |- ( ph -> A. x ph ) $=
      ( wal ax-gen a1i ) ABDAABCEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    hbxfrbi.1 $e |- ( ph <-> ps ) $.
    hbxfrbi.2 $e |- ( ps -> A. x ps ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition.  See ~ hbxfreq for equality version.  (Contributed by
       Jonathan Ben-Naim, 3-Jun-2011.) $)
    hbxfrbi $p |- ( ph -> A. x ph ) $=
      ( wal albii 3imtr4i ) BBCFAACFEDABCDGH $.
      $( [3-Jun-2011] $)
  $}
  $( ` x ` is not free in ` -. A. x ph ` .  (The proof was shortened by Wolf
     Lammen, 18-Aug-2014.) $)
  hbn1 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( ax-6 ) ABC $.
    $( [18-Aug-2014] $) $( [5-Aug-1993] $)

  $( ` x ` is not free in ` E. x ph ` . $)
  hbe1 $p |- ( E. x ph -> A. x E. x ph ) $=
    ( wex wn wal df-ex hbn1 hbxfrbi ) ABCADZBEDBABFIBGH $.
    $( [5-Aug-1993] $)

  ${
    hbal.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` A. y ph ` . $)
    hbal $p |- ( A. y ph -> A. x A. y ph ) $=
      ( wal alimi ax-7 syl ) ACEZABEZCEIBEAJCDFACBGH $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.5 of [Margaris] p. 89. $)
  alcom $p |- ( A. x A. y ph <-> A. y A. x ph ) $=
    ( wal ax-7 impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.7 of [Margaris] p. 89. $)
  alnex $p |- ( A. x -. ph <-> -. E. x ph ) $=
    ( wex wn wal df-ex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.6 of [Margaris] p. 89. $)
  alex $p |- ( A. x ph <-> -. E. x -. ph ) $=
    ( wal wn wex notnot albii alnex bitri ) ABCADZDZBCJBEDAKBAFGJBHI $.
    $( [5-Aug-1993] $)

  $( Part of theorem *11.5 in [WhiteheadRussell] p. 164.  (Contributed by
     Andrew Salmon, 24-May-2011.) $)
  2nalexn $p |- ( -. A. x A. y ph <-> E. x E. y -. ph ) $=
    ( wn wex wal df-ex alex albii xchbinxr bicomi ) ADCEZBEZACFZBFZDMLDZBFOLBGN
    PBACHIJK $.
    $( [24-May-2011] $)

  $( Theorem 19.14 of [Margaris] p. 90. $)
  exnal $p |- ( E. x -. ph <-> -. A. x ph ) $=
    ( wal wn wex alex con2bii ) ABCADBEABFG $.
    $( [5-Aug-1993] $)

  $( Theorem 19.22 of [Margaris] p. 90.  (The proof was shortened by Wolf
     Lammen, 4-Jul-2014.) $)
  exim $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) $=
    ( wi wal wex wn con3 al2imi alnex 3imtr3g con4d ) ABDZCEZBCFZACFZNBGZCEAGZC
    EOGPGMQRCABHIBCJACJKL $.
    $( [4-Jul-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ exim as of 4-Jul-2014. $)
  eximOLD $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) $=
    ( wi wal wn wex con3 al2imi con3d df-ex 3imtr4g ) ABDZCEZAFZCEZFBFZCEZFACGB
    CGNRPMQOCABHIJACKBCKL $.
    $( [5-Aug-1993] $)

  ${
    eximi.1 $e |- ( ph -> ps ) $.
    $( Inference adding existential quantifier to antecedent and consequent. $)
    eximi $p |- ( E. x ph -> E. x ps ) $=
      ( wi wex exim mpg ) ABEACFBCFECABCGDH $.
      $( [5-Aug-1993] $)

    $( Inference adding 2 existential quantifiers to antecedent and
       consequent. $)
    2eximi $p |- ( E. x E. y ph -> E. x E. y ps ) $=
      ( wex eximi ) ADFBDFCABDEGG $.
      $( [3-Feb-2005] $)
  $}

  $( A transformation of quantifiers and logical connectives. $)
  alinexa $p |- ( A. x ( ph -> -. ps ) <-> -. E. x ( ph /\ ps ) ) $=
    ( wn wi wal wa wex imnan albii alnex bitri ) ABDEZCFABGZDZCFNCHDMOCABIJNCKL
    $.
    $( [19-Aug-1993] $)

  $( A relationship between two quantifiers and negation. $)
  alexn $p |- ( A. x E. y -. ph <-> -. E. x A. y ph ) $=
    ( wn wex wal exnal albii alnex bitri ) ADCEZBFACFZDZBFLBEDKMBACGHLBIJ $.
    $( [18-Aug-1993] $)

  $( Theorem *11.51 in [WhiteheadRussell] p. 164.  (Contributed by Andrew
     Salmon, 24-May-2011.)  (The proof was shortened by Wolf Lammen,
     25-Sep-2014.) $)
  2exnexn $p |- ( E. x A. y ph <-> -. A. x E. y -. ph ) $=
    ( wn wex wal alexn con2bii ) ADCEBFACFBEABCGH $.
    $( [25-Sep-2014] $) $( [24-May-2011] $)

  $( Obsolete proof of ~ 2exnexn as of 25-Sep-2014. $)
  2exnexnOLD $p |- ( E. x A. y ph <-> -. A. x E. y -. ph ) $=
    ( wal wex wn df-ex exnal albii notbii bitr4i ) ACDZBELFZBDZFAFCEZBDZFLBGPNO
    MBACHIJK $.
    $( [24-May-2011] $)


  $( Theorem 19.18 of [Margaris] p. 90. $)
  exbi $p |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) $=
    ( wb wal wex wi bi1 alimi exim syl bi2 impbid ) ABDZCEZACFZBCFZOABGZCEPQGNR
    CABHIABCJKOBAGZCEQPGNSCABLIBACJKM $.
    $( [5-Aug-1993] $)

  ${
    exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding existential quantifier to both sides of an
       equivalence. $)
    exbii $p |- ( E. x ph <-> E. x ps ) $=
      ( wb wex exbi mpg ) ABEACFBCFECABCGDH $.
      $( [24-May-1994] $)
  $}

  ${
    2exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 2 existential quantifiers to both sides of an
       equivalence. $)
    2exbii $p |- ( E. x E. y ph <-> E. x E. y ps ) $=
      ( wex exbii ) ADFBDFCABDEGG $.
      $( [16-Mar-1995] $)
  $}

  ${
    3exbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding 3 existential quantifiers to both sides of an
       equivalence. $)
    3exbii $p |- ( E. x E. y E. z ph <-> E. x E. y E. z ps ) $=
      ( wex exbii 2exbii ) AEGBEGCDABEFHI $.
      $( [2-May-1995] $)
  $}

  $( A transformation of quantifiers and logical connectives.  (The proof was
     shortened by Wolf Lammen, 4-Sep-2014.) $)
  exanali $p |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) $=
    ( wn wa wex wi wal annim exbii exnal bitri ) ABDEZCFABGZDZCFNCHDMOCABIJNCKL
    $.
    $( [4-Sep-2014] $) $( [25-Mar-1996] $)

  $( Obsolete proof of ~ exanali as of 4-Sep-2014. $)
  exanaliOLD $p |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) $=
    ( wi wal wn wa wex iman albii alnex bitri con2bii ) ABDZCEZABFGZCHZOPFZCEQF
    NRCABIJPCKLM $.
    $( [25-Mar-1996] $)

  $( Commutation of conjunction inside an existential quantifier. $)
  exancom $p |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) $=
    ( wa ancom exbii ) ABDBADCABEF $.
    $( [18-Aug-1993] $)

  ${
    alrimd.1 $e |- ( ph -> A. x ph ) $.
    alrimd.2 $e |- ( ps -> A. x ps ) $.
    alrimd.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    alrimd $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( wal alimd syl5 ) BBDHACDHFABCDEGIJ $.
      $( [16-May-2011] $) $( [10-Feb-1997] $)
  $}

  ${
    eximd.1 $e |- ( ph -> A. x ph ) $.
    eximd.2 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximd $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( wi wal wex alrimi exim syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [20-May-1996] $)
  $}

  ${
    nex.1 $e |- -. ph $.
    $( Generalization rule for negated wff. $)
    nex $p |- -. E. x ph $=
      ( wn wex alnex mpgbi ) ADABEDBABFCG $.
      $( [18-May-1994] $)
  $}

  ${
    nexd.1 $e |- ( ph -> A. x ph ) $.
    nexd.2 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexd $p |- ( ph -> -. E. x ps ) $=
      ( wn wal wex alrimi alnex sylib ) ABFZCGBCHFALCDEIBCJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    albid.1 $e |- ( ph -> A. x ph ) $.
    albid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albid $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( wb wal alrimi albi syl ) ABCGZDHBDHCDHGALDEFIBCDJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    exbid.1 $e |- ( ph -> A. x ph ) $.
    exbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbid $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( wb wal wex alrimi exbi syl ) ABCGZDHBDICDIGAMDEFJBCDKL $.
      $( [5-Aug-1993] $)
  $}

  $( Simplification of an existentially quantified conjunction.  (Contributed
     by Rodolfo Medina, 25-Sep-2010.)  (The proof was shortened by Andrew
     Salmon, 29-Jun-2011.) $)
  exsimpl $p |- ( E. x ( ph /\ ps ) -> E. x ph ) $=
    ( wa simpl eximi ) ABDACABEF $.
    $( [29-Jun-2011] $) $( [25-Sep-2010] $)

  $( Theorem 19.26 of [Margaris] p. 90.  Also Theorem *10.22 of
     [WhiteheadRussell] p. 119.  (The proof was shortened by Wolf Lammen,
     4-Jul-2014.) $)
  19.26 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) $=
    ( wa wal simpl alimi simpr jca id alanimi impbii ) ABDZCEZACEZBCEZDNOPMACAB
    FGMBCABHGIABMCMJKL $.
    $( [4-Jul-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.26 as of 4-Jul-2014. $)
  19.26OLD $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) $=
    ( wa wal simpl alimi simpr jca pm3.2 al2imi imp impbii ) ABDZCEZACEZBCEZDOP
    QNACABFGNBCABHGIPQOABNCABJKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.26 of [Margaris] p. 90 with two quantifiers. $)
  19.26-2 $p |- ( A. x A. y ( ph /\ ps ) <->
                ( A. x A. y ph /\ A. x A. y ps ) ) $=
    ( wa wal 19.26 albii bitri ) ABEDFZCFADFZBDFZEZCFKCFLCFEJMCABDGHKLCGI $.
    $( [3-Feb-2005] $)

  $( Theorem 19.26 of [Margaris] p. 90 with triple conjunction. $)
  19.26-3an $p |- ( A. x ( ph /\ ps /\ ch )
                   <-> ( A. x ph /\ A. x ps /\ A. x ch ) ) $=
    ( wa wal w3a 19.26 anbi1i bitri df-3an albii 3bitr4i ) ABEZCEZDFZADFZBDFZEZ
    CDFZEZABCGZDFQRTGPNDFZTEUANCDHUCSTABDHIJUBODABCKLQRTKM $.
    $( [13-Sep-2011] $)

  $( Theorem 19.29 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 13-May-2011.) $)
  19.29 $p |- ( ( A. x ph /\ E. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa wi pm3.2 alimi exim syl imp ) ACDZBCEZABFZCEZMBOGZCDNPGAQCABHI
    BOCJKL $.
    $( [16-May-2011] $) $( [5-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90. $)
  19.29r $p |- ( ( E. x ph /\ A. x ps ) -> E. x ( ph /\ ps ) ) $=
    ( wal wex wa 19.29 ancom exancom 3imtr4i ) BCDZACEZFBAFCELKFABFCEBACGLKHABC
    IJ $.
    $( [18-Aug-1993] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with double
     quantification. $)
  19.29r2 $p |- ( ( E. x E. y ph /\ A. x A. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wex wal wa 19.29r eximi syl ) ADEZCEBDFZCFGKLGZCEABGDEZCEKLCHMNCABDHIJ $.
    $( [3-Feb-2005] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with mixed
     quantification. $)
  19.29x $p |- ( ( E. x A. y ph /\ A. x E. y ps ) ->
             E. x E. y ( ph /\ ps ) ) $=
    ( wal wex wa 19.29r 19.29 eximi syl ) ADEZCFBDFZCEGLMGZCFABGDFZCFLMCHNOCABD
    IJK $.
    $( [11-Feb-2005] $)

  $( Theorem 19.35 of [Margaris] p. 90.  This theorem is useful for moving an
     implication (in the form of the right-hand side) into the scope of a
     single existential quantifier.  (The proof was shortened by Wolf Lammen,
     27-Jun-2014.) $)
  19.35 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) $=
    ( wi wex wal wn wa 19.26 annim albii alnex anbi2i 3bitr3i con4bii ) ABDZCEZ
    ACFZBCEZDZPGZCFZRSGZHZQGTGABGZHZCFRUECFZHUBUDAUECIUFUACABJKUGUCRBCLMNPCLRSJ
    NO $.
    $( [27-Jun-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.35 as of 27-Jun-2014. $)
  19.35OLD $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) $=
    ( wal wn wi wex wa 19.26 annim albii df-an 3bitr3i con2bii imbi2i 3bitr4ri
    df-ex ) ACDZBEZCDZEZFZABFZEZCDZERBCGZFUCCGUEUBASHZCDRTHUEUBEASCIUGUDCABJKRT
    LMNUFUARBCQOUCCQP $.
    $( [5-Aug-1993] $)

  ${
    19.35i.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35i $p |- ( A. x ph -> E. x ps ) $=
      ( wi wex wal 19.35 mpbi ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.35ri.1 $e |- ( A. x ph -> E. x ps ) $.
    $( Inference from Theorem 19.35 of [Margaris] p. 90. $)
    19.35ri $p |- E. x ( ph -> ps ) $=
      ( wi wex wal 19.35 mpbir ) ABECFACGBCFEDABCHI $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.25 of [Margaris] p. 90. $)
  19.25 $p |- ( A. y E. x ( ph -> ps ) ->
              ( E. y A. x ph -> E. y E. x ps ) ) $=
    ( wi wex wal 19.35 biimpi alimi exim syl ) ABECFZDGACGZBCFZEZDGNDFODFEMPDMP
    ABCHIJNODKL $.
    $( [5-Aug-1993] $)

  $( Theorem 19.30 of [Margaris] p. 90.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  19.30 $p |- ( A. x ( ph \/ ps ) -> ( A. x ph \/ E. x ps ) ) $=
    ( wn wi wal wex wo exnal exim syl5bir df-or albii 3imtr4i ) ADZBEZCFZACFZDZ
    BCGZEABHZCFRTHSOCGQTACIOBCJKUAPCABLMRTLN $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Theorem 19.43 of [Margaris] p. 90.  (The proof was shortened by Wolf
     Lammen, 27-Jun-2014.) $)
  19.43 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) $=
    ( wo wex wn wi wal df-or exbii 19.35 alnex imbi1i 3bitri bitr4i ) ABDZCEZAC
    EZFZBCEZGZRTDQAFZBGZCEUBCHZTGUAPUCCABIJUBBCKUDSTACLMNRTIO $.
    $( [27-Jun-2014] $) $( [5-Aug-1993] $)

  $( Obsolete proof of ~ 19.43 as of 27-Jun-2014. $)
  19.43OLD $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) $=
    ( wo wn wal wex wa ioran albii 19.26 alnex anbi12i 3bitri notbii df-ex oran
    3bitr4i ) ABDZEZCFZEACGZEZBCGZEZHZESCGUBUDDUAUFUAAEZBEZHZCFUGCFZUHCFZHUFTUI
    CABIJUGUHCKUJUCUKUEACLBCLMNOSCPUBUDQR $.
    $( [5-Aug-1993] $)

  $( Theorem 19.33 of [Margaris] p. 90. $)
  19.33 $p |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) $=
    ( wal wo orc alimi olc jaoi ) ACDABEZCDBCDAJCABFGBJCBAHGI $.
    $( [5-Aug-1993] $)

  $( The antecedent provides a condition implying the converse of ~ 19.33 .
     Compare Theorem 19.33 of [Margaris] p. 90.  (The proof was shortened by
     Andrew Salmon, 25-May-2011.)  (The proof was shortened by Wolf Lammen,
     5-Jul-2014.) $)
  19.33b $p |- ( -. ( E. x ph /\ E. x ps ) ->
               ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) $=
    ( wex wa wn wo wal ianor alnex pm2.53 al2imi syl5bir olc syl6com orcomd ord
    wi 19.30 orc jaoi sylbi 19.33 impbid1 ) ACDZBCDZEFZABGZCHZACHZBCHZGZUGUEFZU
    FFZGUIULRZUEUFIUMUOUNUIUMUKULUMAFZCHUIUKACJUHUPBCABKLMUKUJNOUIUNUJULUIUFUJU
    IUJUFABCSPQUJUKTOUAUBABCUCUD $.
    $( [5-Jul-2014] $) $( [27-Mar-2004] $)

  $( Obsolete proof of ~ 19.33b as of 22-Mar-2014. $)
  19.33bOLD $p |- ( -. ( E. x ph /\ E. x ps ) ->
               ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) $=
    ( wex wa wn wo wal wi ianor alnex wb biorf alimi albi syl olc syl6bir 19.30
    sylbir orc a1i pm2.21 jaod syl5 jaoi sylbi 19.33 impbid1 ) ACDZBCDZEFZABGZC
    HZACHZBCHZGZULUJFZUKFZGUNUQIZUJUKJURUTUSURAFZCHZUTACKVBUNUPUQVBBUMLZCHUPUNL
    VAVCCABMNBUMCOPUPUOQRTUNUOUKGUSUQABCSUSUOUQUKUOUQIUSUOUPUAUBUKUQUCUDUEUFUGA
    BCUHUI $.
    $( [25-May-2011] $) $( [27-Mar-2004] $)

  $( Theorem 19.40 of [Margaris] p. 90. $)
  19.40 $p |- ( E. x ( ph /\ ps ) -> ( E. x ph /\ E. x ps ) ) $=
    ( wa wex exsimpl simpr eximi jca ) ABDZCEACEBCEABCFJBCABGHI $.
    $( [5-Aug-1993] $)

  $( Theorem *11.42 in [WhiteheadRussell] p. 163.  Theorem 19.40 of [Margaris]
     p. 90 with 2 quantifiers.  (Contributed by Andrew Salmon, 24-May-2011.) $)
  19.40-2 $p |- ( E. x E. y ( ph /\ ps ) ->
        ( E. x E. y ph /\ E. x E. y ps ) ) $=
    ( wa wex 19.40 eximi syl ) ABEDFZCFADFZBDFZEZCFKCFLCFEJMCABDGHKLCGI $.
    $( [24-May-2011] $)

  $( Theorem *11.21 in [WhiteheadRussell] p. 160.  (Contributed by Andrew
     Salmon, 24-May-2011.) $)
  alrot3 $p |- ( A. x A. y A. z ph <-> A. y A. z A. x ph ) $=
    ( wal alcom albii bitri ) ADEZCEBEIBEZCEABEDEZCEIBCFJKCABDFGH $.
    $( [24-May-2011] $)

  $( Rotate 4 universal quantifiers twice.  (The proof was shortened by Wolf
     Lammen, 28-Jun-2014.) $)
  alrot4 $p |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) $=
    ( wal alrot3 albii alcom 3bitri ) AEFDFCFZBFACFZEFZDFZBFMBFZDFLBFEFZDFKNBAC
    DEGHMBDIOPDLBEIHJ $.
    $( [28-Jun-2014] $) $( [2-Feb-2005] $)

  $( Obsolete proof of ~ alrot4 as of 28-Jun-2014. $)
  alrot4OLD $p |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) $=
    ( wal alcom albii bitri 3bitri ) AEFZDFCFZBFACFZEFZDFZBFNBFZDFMBFEFZDFLOBLK
    CFZDFOKCDGRNDACEGHIHNBDGPQDMBEGHJ $.
    $( [2-Feb-2005] $)

  $( Split a biconditional and distribute quantifier. $)
  albiim $p |- ( A. x ( ph <-> ps ) <->
             ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) $=
    ( wb wal wi wa dfbi2 albii 19.26 bitri ) ABDZCEABFZBAFZGZCEMCENCEGLOCABHIMN
    CJK $.
    $( [18-Aug-1993] $)

  $( Split a biconditional and distribute 2 quantifiers. $)
  2albiim $p |- ( A. x A. y ( ph <-> ps ) <->
             ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) $=
    ( wb wal wi wa albiim albii 19.26 bitri ) ABEDFZCFABGDFZBAGDFZHZCFNCFOCFHMP
    CABDIJNOCKL $.
    $( [3-Feb-2005] $)

  ${
    hband.1 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hband.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hban . $)
    hband $p |- ( ph -> ( ( ps /\ ch ) -> A. x ( ps /\ ch ) ) ) $=
      ( wa wal anim12d 19.26 syl6ibr ) ABCGZBDHZCDHZGLDHABMCNEFIBCDJK $.
      $( [2-Jan-2002] $)
  $}

  ${
    hb3and.1 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hb3and.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    hb3and.3 $e |- ( ph -> ( th -> A. x th ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hb3an . $)
    hb3and $p |- ( ph -> ( ( ps /\ ch /\ th ) -> A. x ( ps /\ ch /\ th ) ) ) $=
      ( w3a wal 3anim123d 19.26-3an syl6ibr ) ABCDIZBEJZCEJZDEJZINEJABOCPDQFGHK
      BCDELM $.
      $( [17-Feb-2013] $)
  $}

  ${
    hbald.1 $e |- ( ph -> A. y ph ) $.
    hbald.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbal . $)
    hbald $p |- ( ph -> ( A. y ps -> A. x A. y ps ) ) $=
      ( wal alimd ax-7 syl6 ) ABDGZBCGZDGKCGABLDEFHBDCIJ $.
      $( [2-Jan-2002] $)
  $}

  $( Add/remove a conjunct in the scope of an existential quantifier.
     (Contributed by Raph Levien, 3-Jul-2006.) $)
  exintrbi $p |- ( A. x ( ph -> ps ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wa wb wex pm4.71 albii exbi sylbi ) ABDZCEAABFZGZCEACHNCHGMOCABIJA
    NCKL $.
    $( [3-Jul-2006] $)

  $( Introduce a conjunct in the scope of an existential quantifier. $)
  exintr $p |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ( ph /\ ps ) ) ) $=
    ( wi wal wex wa exintrbi biimpd ) ABDCEACFABGCFABCHI $.
    $( [11-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    Introduce equality axioms ax-8 through ax-14 except ax-9
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( --- Start of patch to prevent connective overloading $)
  $c class $.
  ${ $v A $. class.TOP.1 $f class A $. class.TOP $a IS_TOPLEVEL class A $. $}
  $( This syntax construction states that a variable ` x ` , which has been
     declared to be a set variable by $f statement vx, is also a class
     expression.  This can be justified informally as follows.  We know that
     the class builder ` { y | y e. x } ` is a class by ~ cab .  Since (when
     ` y ` is distinct from ` x ` ) we have ` x = { y | y e. x } ` by
     ~ cvjust , we can argue that that the syntax " ` class x ` " can be viewed
     as an abbreviation for " ` class { y | y e. x } ` ".  See the discussion
     under the definition of class in [Jech] p. 4 showing that "Every set can
     be considered to be a class."

     While it is tempting and perhaps occasionally useful to view ~ cv as a
     "type conversion" from a set variable to a class variable, keep in mind
     that ~ cv is intrinsically no different from any other class-building
     syntax such as ~ cab , ~ cun , or ~ c0 .

     (The description above applies to set theory, not predicate calculus.  The
     purpose of introducing ` class x ` here, and not in set theory where it
     belongs, is to allow us to express i.e.  "prove" the ~ weq of predicate
     calculus from the ~ wceq of set theory, so that we don't "overload" the
     ` = ` connective with two syntax definitions.  This is done to prevent
     ambiguity that would complicate some Metamath parsers.) $)
  cv $a class x $.
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(          (None - the above patch had no old code.) $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare the equality predicate symbol. $)
  $c = $.  $( Equal sign (read:  'is equal to') $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    $v B $.
    wceq.cA $f class A $.
    wceq.cB $f class B $.
    $( Extend wff definition to include class equality.

       (The purpose of introducing ` wff A = B ` here, and not in set theory
       where it belongs, is to allow us to express i.e.  "prove" the ~ weq of
       predicate calculus in terms of the ~ wceq of set theory, so that we
       don't "overload" the ` = ` connective with two syntax definitions.  This
       is done to prevent ambiguity that would complicate some Metamath
       parsers.  For example, some parsers - although not the Metamath program
       - stumble on the fact that the ` = ` in ` x = y ` could be the ` = ` of
       either ~ weq or ~ wceq , although mathematically it makes no
       difference.  The class variables ` A ` and ` B ` are introduced
       temporarily for the purpose of this definition but otherwise not used in
       predicate calculus.  See ~ df-cleq for more information on the set
       theory usage of ~ wceq .) $)
    wceq $a wff A = B $.
  $}

  $( Extend wff definition to include atomic formulas using the equality
     predicate.

     (Instead of introducing ~ weq as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wceq .  This lets us avoid overloading
     the ` = ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ weq is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wceq .  Note:  To see the proof steps of this syntax proof, type "show
     proof weq /all" in the Metamath program.) $)
  weq $p wff x = y $=
    ( cv wceq ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas using the equality
     predicate.

     After we introduce ~ cv and ~ wceq in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wceq". @)
  weq @a wff x = y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare the membership predicate symbol. $)
  $c e. $. $( Stylized epsilon $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    $v B $.
    wcel.cA $f class A $.
    wcel.cB $f class B $.
    $( Extend wff definition to include the membership connective between
       classes.

       (The purpose of introducing ` wff A e. B ` here is to allow us to
       express i.e.  "prove" the ~ wel of predicate calculus in terms of the
       ~ wceq of set theory, so that we don't "overload" the ` e. ` connective
       with two syntax definitions.  This is done to prevent ambiguity that
       would complicate some Metamath parsers.  The class variables ` A ` and
       ` B ` are introduced temporarily for the purpose of this definition but
       otherwise not used in predicate calculus.  See ~ df-clab for more
       information on the set theory usage of ~ wcel .) $)
    wcel $a wff A e. B $.
  $}

  $( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of
     ` y ` ," " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ,"
     or " ` y ` contains ` x ` ."  Note:  The phrase " ` y ` includes
     ` x ` " means " ` x ` is a subset of ` y ` ;" to use it also for
     ` x e. y ` , as some authors occasionally do, is poor form and causes
     confusion, according to George Boolos (1992 lecture at MIT).

     This syntactical construction introduces a binary non-logical predicate
     symbol ` e. ` (epsilon) into our predicate calculus.  We will eventually
     use it for the membership predicate of set theory, but that is irrelevant
     at this point: the predicate calculus axioms for ` e. ` apply to any
     arbitrary binary predicate symbol.  "Non-logical" means that the predicate
     is presumed to have additional properties beyond the realm of predicate
     calculus, although these additional properties are not specified by
     predicate calculus itself but rather by the axioms of a theory (in our
     case set theory) added to predicate calculus.  "Binary" means that the
     predicate has two arguments.

     (Instead of introducing ~ wel as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wcel .  This lets us avoid overloading
     the ` e. ` connective, thus preventing ambiguity that would complicate
     certain Metamath parsers.  However, logically ~ wel is considered to be a
     primitive syntax, even though here it is artificially "derived" from
     ~ wcel .  Note:  To see the proof steps of this syntax proof, type "show
     proof wel /all" in the Metamath program.) $)
  wel $p wff x e. y $=
    ( cv wcel ) ACBCD $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include atomic formulas with the epsilon
     (membership) predicate.  This is read " ` x ` is an element of ` y ` ,"
     " ` x ` is a member of ` y ` ," " ` x ` belongs to ` y ` ," or " ` y `
     contains ` x ` ."  Note:  The phrase " ` y ` includes ` x ` " means
     " ` x ` is a subset of ` y ` "; to use it also for ` x e. y ` (as some
     authors occasionally do) is poor form and causes confusion.

     After we introduce ~ cv and ~ wcel in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "vx cv vy cv wcel". @)
  wel @a wff x e. y @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Axiom of Equality.  One of the equality and substitution axioms of
     predicate calculus with equality.  This is similar to, but not quite, a
     transitive law for equality (proved later as ~ equtr ).  Axiom scheme C8'
     in [Megill] p. 448 (p. 16 of the preprint).  Also appears as Axiom C7 of
     [Monk2] p. 105.

     Axioms ~ ax-8 through ~ ax-16 are the axioms having to do with equality,
     substitution, and logical properties of our binary predicate ` e. ` (which
     later in set theory will mean "is a member of").  Note that all axioms
     except ~ ax-16 and ~ ax-17 are still valid even when ` x ` , ` y ` , and
     ` z ` are replaced with the same variable because they do not have any
     distinct variable (Metamath's $d) restrictions.  Distinct variable
     restrictions are required for ~ ax-16 and ~ ax-17 only. $)
  ax-8 $a |- ( x = y -> ( x = z -> y = z ) ) $.


  $( Axiom of Variable Substitution.  One of the 5 equality axioms of predicate
     calculus.  The final consequent ` A. x ( x = y -> ph ) ` is a way of
     expressing " ` y ` substituted for ` x ` in wff ` ph ` " (cf. ~ sb6 ).  It
     is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of [Monk2] p. 105,
     from which it can be proved by cases.

     The original version of this axiom was ~ ax-11o ("o" for "old") and was
     replaced with this shorter ~ ax-11 in Jan. 2007.  The old axiom is proved
     from this one as theorem ~ ax11o .  Conversely, this axiom is proved from
     ~ ax-11o as theorem ~ ax11 .

     Juha Arpiainen proved the independence of this axiom (in the form of the
     older axiom ~ ax-11o ) from the others on 19-Jan-2006.  See item 9a at
     ~ http://us.metamath.org/award2003.html .

     Interestingly, if the wff expression substituted for ` ph ` contains no
     wff variables, the resulting statement _can_ be proved without invoking
     this axiom.  This means that even though this axiom is _metalogically_
     independent from the others, it is not _logically_ independent.
     Specifically, we can prove any wff-variable-free instance of axiom
     ~ ax-11o (from which the ~ ax-11 instance follows by theorem ~ ax11 .)
     The proof is by induction on formula length, using ~ ax11eq and ~ ax11el
     for the basis steps and ~ ax11indn , ~ ax11indi , and ~ ax11inda for the
     induction steps.  (This paragraph is true provided we use ~ ax-10o in
     place of ~ ax-10 .)

     See also ~ ax11v and ~ ax11v2 for other equivalents of this axiom that
     (unlike this axiom) have distinct variable restrictions. $)
  ax-11 $a |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $.

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms of predicate calculus with equality.  Informally, it says that
     whenever ` z ` is distinct from ` x ` and ` y ` , and ` x = y ` is true,
     then ` x = y ` quantified with ` z ` is also true.  In other words, ` z `
     is irrelevant to the truth of ` x = y ` .  Axiom scheme C9' in [Megill]
     p. 448 (p. 16 of the preprint).  It apparently does not otherwise appear
     in the literature but is easily proved from textbook predicate calculus by
     cases.

     An open problem is whether this axiom is redundant.  Note that the
     analogous axiom for the membership connective, ~ ax-15 , has been shown to
     be redundant.  It is also unknown whether this axiom can be replaced by a
     shorter formula.  However, it can be derived from two slightly shorter
     formulas, as shown by ~ a12study . $)
  ax-12 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x = y -> A. z x = y ) ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the left-hand side of the ` e. ` binary
     predicate.  Axiom scheme C12' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski] p. 77.
     "Non-logical" means that the predicate is not a primitive of predicate
     calculus proper but instead is an extension to it.  "Binary" means that
     the predicate has two arguments.  In a system of predicate calculus with
     equality, like ours, equality is not usually considered to be a
     non-logical predicate.  In systems of predicate calculus without equality,
     it typically would be. $)
  ax-13 $a |- ( x = y -> ( x e. z -> y e. z ) ) $.

  $( Axiom of Equality.  One of the equality and substitution axioms for a
     non-logical predicate in our predicate calculus with equality.  It
     substitutes equal variables into the right-hand side of the ` e. ` binary
     predicate.  Axiom scheme C13' in [Megill] p. 448 (p. 16 of the preprint).
     It is a special case of Axiom B8 (p. 75) of system S2 of [Tarski]
     p. 77. $)
  ax-14 $a |- ( x = y -> ( z e. x -> z e. y ) ) $.

  $( Bound-variable hypothesis builder for ` x = x ` .  This theorem tells us
     that any variable, including ` x ` , is effectively not free in
     ` x = x ` , even though ` x ` is technically free according to the
     traditional definition of free variable.  (The proof uses only ~ ax-5 ,
     ~ ax-8 , ~ ax-12 , and ~ ax-gen .  This shows that this can be proved
     without ~ ax-9 , even though the theorem ~ equid cannot be.  A shorter
     proof using ~ ax-9 is obtainable from ~ equid and ~ hbth .)  (The proof
     was shortened by Wolf Lammen, 23-Mar-2014.) $)
  hbequid $p |- ( x = x -> A. y x = x ) $=
    ( weq wal wi ax-12 ax-8 pm2.43i alimi a1d pm2.61ii ) BACZBDZMAACZNBDZEAABFM
    ONLNBLNBAAGHIJZPK $.
    $( [23-Mar-2014] $) $( [13-Jan-2011] $)


  $( Lemma used in proofs of substitution properties. $)
  equs3 $p |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) $=
    ( weq wn wi wal wa wex alinexa con2bii ) BCDZAEFBGLAHBILABJK $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Axiom ax-17 - first use of the $d distinct variable statement
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x ph $.
    $( Axiom to quantify a variable over a formula in which it does not occur.
       Axiom C5 in [Megill] p. 444 (p. 11 of the preprint).  Also appears as
       Axiom B6 (p. 75) of system S2 of [Tarski] p. 77 and Axiom C5-1 of
       [Monk2] p. 113.

       This axiom is _logically_ redundant in the (logically complete)
       predicate calculus axiom system consisting of ~ ax-gen , ~ ax-4 through
       ~ ax-9 , ~ ax-10o , and ~ ax-12 through ~ ax-16 : in that system, we can
       derive any instance of ~ ax-17 not containing wff variables by induction
       on formula length, using ~ ax17eq and ~ ax17el for the basis together
       ~ hbn , ~ hbal , and ~ hbim .  However, if we omit this axiom, our
       development would be quite inconvenient since we could work only with
       specific instances of wffs containing no wff variables - this axiom
       introduces the concept of a set variable not occurring in a wff (as
       opposed to just two set variables being distinct). $)
    ax-17 $a |- ( ph -> A. x ph ) $.
  $}

  ${
    $d x ps $.
    $( ~ ax-17 with antecedent.  Useful in proofs of deduction versions of
       bound-variable hypothesis builders such as ~ hbeleqd . $)
    a17d $p |- ( ph -> ( ps -> A. x ps ) ) $=
      ( wal wi ax-17 a1i ) BBCDEABCFG $.
      $( [1-Mar-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-9 from a weaker version
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d x w $.
    a9wa9lem1.a $e |- -. A. w -. w = x $.
    $( Lemma for ~ a9wa9 .  Similar to ~ equcomi , without using ~ ax-4 ,
       ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem1 $p |- ( x = y -> y = x ) $=
      ( weq wn wal ax-8 pm2.43i con3i alimi mto ax-17 mt3 mpi ) ABEAAEZBAEPPFZC
      GZRCAEZFZCGDQTCSPSPCAAHIJKLQCMNABAHO $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w z $.
    a9wa9lem2.a $e |- -. A. w -. w = z $.
    a9wa9lem2.b $e |- -. A. w -. w = x $.
    $( Lemma for ~ a9wa9 .  Similar to ~ equequ2 , without using ~ ax-4 ,
       ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem2 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
      ( weq a9wa9lem1 ax-8 com12 syl5 syl2im impbid ) ABGZCAGZCBGZOACGZNPCADEHQ
      NPACBIJKNBAGZPBCGZOABDFHCBDEHSROBCAIJLM $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ph $.
    a9wa9lem3.a $e |- -. A. w -. w = x $.
    a9wa9lem3.c $e |- -. A. x -. x = w $.
    $( Lemma for ~ a9wa9 .  Similar to ~ ax4 , without using ~ ax-4 , ~ ax-9 ,
       or ~ ax-10 . $)
    a9wa9lem3 $p |- ( A. x ph -> ph ) $=
      ( wal wi weq wn ax-17 a9wa9lem1 ax-11 syl2im con2 al2imi mtoi con4d con3i
      syl6 alrimi mt3 ) ABFZAGZCBHZIZCFDUCIZUECUFCJUDUCUDAUBUDAIZBCHZUGGZBFZUBI
      UDUHUGUGCFUJCBBEKUGCJUGBCLMUJUBUHIZBFEUIAUKBUHANOPSQRTUA $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ph $.  $d x y $.
    a9wa9lem4.a $e |- -. A. w -. w = x $.
    a9wa9lem4.c $e |- -. A. x -. x = w $.
    a9wa9lem4.d $e |- -. A. x -. x = y $.
    $( Lemma for ~ a9wa9 .  Similar to ~ ax9o , without using ~ ax-4 , ~ ax-9 ,
       or ~ ax-10 . $)
    a9wa9lem4 $p |- ( A. x ( x = y -> A. x ph ) -> ph ) $=
      ( weq wal wi wn con3 al2imi mtoi a9wa9lem3 ax-6 nsyl4 syl ) BCHZABIZJZBIZ
      TKZBIZKAUBUDSKZBIGUAUCUEBSTLMNTAUDABDEFOABPQR $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ps $.  $d x y $.
    a9wa9lem5.a $e |- -. A. w -. w = x $.
    a9wa9lem5.c $e |- -. A. x -. x = w $.
    a9wa9lem5.d $e |- -. A. x -. x = y $.
    a9wa9lem5.2 $e |- ( ps -> A. x ps ) $.
    a9wa9lem5.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ a4im with distinct variables, without
       using ~ ax-4 , ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem5 $p |- ( A. x ph -> ps ) $=
      ( wal weq wi com12 syl6 alimi a9wa9lem4 syl ) ACKCDLZBCKZMZCKBAUACASBTSAB
      JNIOPBCDEFGHQR $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x y z $.
    a9wa9lem6.a $e |- -. A. w -. w = x $.
    a9wa9lem6.c $e |- -. A. x -. x = w $.
    a9wa9lem6.d $e |- -. A. x -. x = y $.
    a9wa9lem6.e $e |- -. A. y -. y = z $.
    $( Lemma for ~ a9wa9 .  Helps reduce the number of hypotheses. $)
    a9wa9lem6 $p |- -. A. x -. x = z $=
      ( weq wn wal ax-17 wi a9wa9lem1 ax-8 syl con3d a9wa9lem5 alrimi con3i
      ax-mp ) BCIZJZBKZJACIZJZAKZJHUGUDUGUCBUGBLUFUCABDEFGUCALABIZUBUEUHBAIUBUE
      MABDENBACOPQRSTUA $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ph $.
    a9wa9lem7.a $e |- -. A. w -. w = x $.
    a9wa9lem7.c $e |- -. A. x -. x = w $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hba1 , without using ~ ax-4 , ~ ax-9 ,
       or ~ ax-10 . $)
    a9wa9lem7 $p |- ( A. x ph -> A. x A. x ph ) $=
      ( wal wn a9wa9lem3 con2i ax-6 con1i alimi 3syl ) ABFZNGZBFZGZQBFNBFPNOBCD
      EHIOBJQNBNPABJKLM $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ph $.
    a9wa9lem8.a $e |- -. A. w -. w = x $.
    a9wa9lem8.c $e |- -. A. x -. x = w $.
    a9wa9lem8.1 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hbn , without using ~ ax-4 , ~ ax-9 ,
       or ~ ax-10 . $)
    a9wa9lem8 $p |- ( -. ph -> A. x -. ph ) $=
      ( wn wal a9wa9lem3 con3i ax-6 alrimi syl ) AGZABHZGZNBHOAABCDEIJPNBABKAOF
      JLM $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ps $.
    a9wa9lem9.a $e |- -. A. w -. w = x $.
    a9wa9lem9.c $e |- -. A. x -. x = w $.
    a9wa9lem9.1 $e |- ( ph -> A. x ph ) $.
    a9wa9lem9.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    a9wa9lem9.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hbimd , without using ~ ax-4 ,
       ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem9 $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn alrimi a9wa9lem3 ax-6 nsyl4 con1i alimi syl6 con3 al2imi ax-1
      syl2im pm2.21 jad ) ABCBCKZDLZABMZUIDLZUHABBDLZKZDLUIUKMZDLZUJAULDHINUNBU
      KBUNBDEFGOBDPQRULUMUIDBUKUAUBUDUIUGDBCUESTACCDLUHJCUGDCBUCSTUF $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ph $.  $d w ps $.
    a9wa9lem10.a $e |- -. A. w -. w = x $.
    a9wa9lem10.c $e |- -. A. x -. x = w $.
    a9wa9lem10.1 $e |- ( ph -> A. x ph ) $.
    a9wa9lem10.2 $e |- ( ps -> A. x ps ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ hban , without using ~ ax-4 , ~ ax-9 ,
       or ~ ax-10 . $)
    a9wa9lem10 $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
      ( wa wn wi df-an wal a9wa9lem8 pm2.21 alrimi ax-1 ja hbxfrbi ) ABIABJZKZJ
      CABLUACDEFATUACMAJUACACDEFGNATOPTUACBCDEFHNTAQPRNS $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x $.  $d w ps $.
    a9wa9lem11.a $e |- -. A. w -. w = x $.
    a9wa9lem11.c $e |- -. A. x -. x = w $.
    a9wa9lem11.1 $e |- ( ps -> A. x ps ) $.
    a9wa9lem11.2 $e |- ( ph -> ps ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ exlimi , without using ~ ax-4 ,
       ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem11 $p |- ( E. x ph -> ps ) $=
      ( wex eximi wn wal df-ex a9wa9lem8 con1i sylbi syl ) ACIBCIZBABCHJRBKCLZK
      BBCMBSBCDEFGNOPQ $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d x y $.  $d w x $.  $d w ph $.  $d w ps $.
    a9wa9lem12.a $e |- -. A. w -. w = x $.
    a9wa9lem12.c $e |- -. A. x -. x = w $.
    a9wa9lem12.d $e |- -. A. x -. x = y $.
    a9wa9lem12.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    a9wa9lem12.2 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ a4ime with distinct variables, without
       using ~ ax-4 , ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem12 $p |- ( ph -> E. x ps ) $=
      ( wn wal wex wi weq id hbth a9wa9lem7 a1i a9wa9lem8 a9wa9lem9 ax-mp nsyli
      a9wa9lem3 con3i alrimi mt3 con2i df-ex sylibr ) ABKZCLZKBCMULAULAKZNZCDOZ
      KZCLHUNKUPCUNCEFGAANZUNUNCLNAPZUQULUMCEFGUQCURQULULCLNUQUKCEFGRSUMUMCLNUQ
      ACEFGJTSUAUBTUOUNUOABULIUKCEFGUDUCUEUFUGUHBCUIUJ $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d x y $.  $d w x $.  $d w ph $.  $d w ps $.
    a9wa9lem13.a $e |- -. A. w -. w = x $.
    a9wa9lem13.c $e |- -. A. x -. x = w $.
    a9wa9lem13.d $e |- -. A. x -. x = y $.
    a9wa9lem13.1 $e |- ( ph -> A. y ph ) $.
    a9wa9lem13.2 $e |- ( ps -> A. x ps ) $.
    a9wa9lem13.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ cbv3 with distinct variables, without
       using ~ ax-4 , ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem13 $p |- ( A. x ph -> A. y ps ) $=
      ( wal alimi wi weq wn id hbth a9wa9lem7 a1i a9wa9lem9 a9wa9lem8 a9wa9lem3
      ax-mp syl5 con3i alrimi mt3 a7s syl ) ACLZADLZCLBDLZAULCIMAUMDCUKBDUKBNZC
      DOZPZCLHUNPUPCUNCEFGAANZUNUNCLNAQZUQUKBCEFGUQCURRUKUKCLNUQACEFGSTBBCLNUQJ
      TUAUDUBUOUNUKAUOBACEFGUCKUEUFUGUHMUIUJ $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d x z v w $.  $d y z v w $.
    a9wa9lem14.a $e |- -. A. z -. z = x $.
    a9wa9lem14.b $e |- -. A. x -. x = z $.
    a9wa9lem14.c $e |- -. A. x -. x = v $.
    a9wa9lem14.d $e |- -. A. z -. z = v $.
    a9wa9lem14.e $e |- -. A. v -. v = z $.
    a9wa9lem14.f $e |- -. A. v -. v = y $.
    $( Change bound variable without using ~ ax-4 , ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem14 $p |- ( A. x x = w -> A. y y = w ) $=
      ( weq wal ax-17 ax-8 a9wa9lem13 syl ) ADLZAMEDLZEMBDLZBMRSAECFGHRENSANAED
      OPSTEBCIJKSBNTENEBDOPQ $.
      $( [22-Jul-2015] $)
  $}

  ${
    a9wa9lem15.a $e |- -. A. w -. w = x $.
    a9wa9lem15.b $e |- -. A. x -. x = z $.
    a9wa9lem15.c $e |- -. A. x -. x = w $.
    $d w x y $.  $d w x z $.
    $( Change free variable without using ~ ax-4 , ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem15 $p |- ( A. x x = y -> A. x x = z ) $=
      ( weq wal wn wex hbe1 a9wa9lem1 ax-8 syl2im com12 con3rr3 a9wa9lem3 con2i
      exnal df-ex syl6 con3d ax-17 a9wa9lem12 pm2.61d1 a9wa9lem11 3imtr3i con4i
      sylibr ) ACHZAIZABHZAIZUKJZAKUMJZAKZULJUNJUOUQADEGUPALUOCBHZUQUOURUPUQURU
      MUKUMURUKUMBAHURBCHUKABDEMCBAFMBACNOPQUPUPJZAIZJUQUTUPUSADEGRSUPAUAUJUBUR
      JZUPACDEGFUKUMURACBNUCVAAUDUEUFUGUKATUMATUHUI $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d w x y z v $.
    a9wa9lem16.b $e |- -. A. v -. v = x $.
    a9wa9lem16.c $e |- -. A. v -. v = y $.
    a9wa9lem16.f $e |- -. A. w -. w = x $.
    a9wa9lem16.g $e |- -. A. w -. w = z $.
    a9wa9lem16.i $e |- -. A. x -. x = w $.
    a9wa9lem16.k $e |- -. A. x -. x = z $.
    a9wa9lem16.l $e |- -. A. y -. y = v $.
    a9wa9lem16.m $e |- -. A. y -. y = w $.
    a9wa9lem16.n $e |- -. A. z -. z = v $.
    a9wa9lem16.o $e |- -. A. z -. z = w $.
    $( Lemma for ~ a9wa9 .  Similar to ~ ax-10 but with distinct variables,
       without using ~ ax-4 , ~ ax-9 , or ~ ax-10 .  We used ~ a9wa9lem6 to
       eliminate 5 hypotheses that would otherwise be needed. $)
    a9wa9lem16 $p |- ( A. x x = y -> A. y y = x ) $=
      ( weq wal a9wa9lem15 a9wa9lem6 syl a9wa9lem14 ) ABPAQACPAQZBAPBQZABCDHKJR
      UBDAPDQZUCUBDCPDQUDADECBFACEDHJKNSZAEBDHJUEGSGLMUADCAEEADCNEACBLGFKSZFJSH
      DAECOIHUESZRTDBCAEOIUGNUFGUATT $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d u v w x z $.  $d v y z $.  $d z w ps $.  $d x ph $.
    a9wa9lem17.a $e |- -. A. u -. u = v $.
    a9wa9lem17.b $e |- -. A. u -. u = w $.
    a9wa9lem17.e $e |- -. A. v -. v = x $.
    a9wa9lem17.f $e |- -. A. v -. v = z $.
    a9wa9lem17.i $e |- -. A. w -. w = x $.
    a9wa9lem17.j $e |- -. A. w -. w = z $.
    a9wa9lem17.k $e |- -. A. x -. x = u $.
    a9wa9lem17.m $e |- -. A. x -. x = w $.
    a9wa9lem17.p $e |- -. A. z -. z = u $.
    a9wa9lem17.r $e |- -. A. z -. z = w $.
    a9wa9lem17.t $e |- -. A. z -. z = y $.
    a9wa9lem17.1 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Lemma for ~ a9wa9 .  Similar to ~ dvelim with first hypothesis replaced
       by distinct variable condition, without using ~ ax-4 , ~ ax-9 , or
       ~ ax-10 .  We used ~ a9wa9lem6 to eliminate 3 hypotheses that would
       otherwise be needed. $)
    a9wa9lem17 $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi wa ax-17 a1d alrimi a9wa9lem3 syl5ibr a2i alimi a9wa9lem6
      syl a9wa9lem16 con3i ax-6 a9wa9lem10 ax-12 imp a17d a9wa9lem9 biimpd con3
      hbald al2imi mtoi con1i 3syl syl56 expcom ax-11 syl2im pm2.27 pm2.61d2
      syld ) CDUAZCUBUCZCEUAZCUBZBBCUBZUDZVTUCZVRWBBEDUAZAUDZEUBZWCVRUEZWFCUBWA
      BWDBEUBZUDZEUBWFBWIEBEUFZBWHWDWJUGUHWIWEEWDWHAWHAWDBBEFNRUITUJUKULUNWGWEC
      EWCVREGLEHGFNRQIUMZWCECUAZEUBZUCZWCEUBWMVTECHFGLKNFCHERNMOUMZRQCHGFMPOIUM
      ZPIJUOUPWNWCEWLEUQVTWMCEHFGKLMWOPOWKRIJUOUPUHUNVREUFURWGWDACGKWPWCVRCGKWP
      VSCUQVQCUQURWCVRWDWDCUBUDEDCUSUTWGACVAVBVEWFBCWFWDBUDZEUBZBUCZEUBZUCBWEWQ
      EWDABWDABTVCUKULWRWTWDUCZEUBSWQWSXAEWDBVDVFVGBWTWSEUFVHVIULVJVKVTBVSBUDZC
      UBZWAVTVSBWHXCVSCGKWPUIWJBCEVLVMVSXBBCVSBVNVFVPVO $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d t u v w z x $.  $d u v w y $.
    a9wa9lem18.a $e |- -. A. t -. t = u $.
    a9wa9lem18.b $e |- -. A. t -. t = v $.
    a9wa9lem18.e $e |- -. A. u -. u = x $.
    a9wa9lem18.f $e |- -. A. u -. u = w $.
    a9wa9lem18.i $e |- -. A. v -. v = x $.
    a9wa9lem18.j $e |- -. A. v -. v = w $.
    a9wa9lem18.k $e |- -. A. x -. x = t $.
    a9wa9lem18.m $e |- -. A. x -. x = v $.
    a9wa9lem18.p $e |- -. A. w -. w = t $.
    a9wa9lem18.r $e |- -. A. w -. w = v $.
    a9wa9lem18.t $e |- -. A. w -. w = y $.
    a9wa9lem18.x $e |- -. A. v -. v = z $.
    $( Lemma for ~ a9wa9 .  Similar to ~ dveeq2 , without using ~ ax-4 ,
       ~ ax-9 , or ~ ax-10 . $)
    a9wa9lem18 $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( weq a9wa9lem2 a9wa9lem17 ) CDTCBTABDEFGHIJKLMNOPQRDBCESMUAUB $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d t u w x v z $.  $d u w y v z $.
    a9wa9.a $e |- -. A. t -. t = u $.
    a9wa9.b $e |- -. A. t -. t = z $.
    a9wa9.e $e |- -. A. u -. u = x $.
    a9wa9.f $e |- -. A. u -. u = w $.
    a9wa9.i $e |- -. A. z -. z = x $.
    a9wa9.j $e |- -. A. z -. z = w $.
    a9wa9.k $e |- -. A. x -. x = t $.
    a9wa9.m $e |- -. A. x -. x = z $.
    a9wa9.p $e |- -. A. w -. w = t $.
    a9wa9.r $e |- -. A. w -. w = z $.
    a9wa9.t $e |- -. A. w -. w = y $.
    a9wa9.y $e |- -. A. x -. x = v $.
    a9wa9.z $e |- -. A. v -. v = y $.
    $( Derive ~ ax-9 (which has no distinct variable requirement) from a weaker
       version that requires that its two variables be distinct.  The weaker
       version is axiom scheme B7 of [Tarski] p. 75.  The hypotheses are the
       instances of the weaker version that we need.  Neither ~ ax-9 nor ~ ax-4
       (which can be derived from ~ ax-9 ) is used by the proof.  Note that
       every other predicate calculus axiom (except ~ ax-13 and ~ ax-14 ) is
       used by the proof.

       Revised on 7-Aug-2015 to remove the dependence on ~ ax-10 .

       See also the remarks for ~ ax9v and ~ ax9 . $)
    a9wa9 $p |- -. A. x -. x = y $=
      ( weq wal wn a9wa9lem3 nsyl3 wi ax-17 a9wa9lem6 a9wa9lem18 a9wa9lem7 ax-8
      a9wa9lem1 syl com12 con3d alimd mpi syl6com con3i alrimi mt3 pm2.61i ) AB
      UAZAUBZVCUCZAUBZUCZVFVCVDVEACLOUDVCACLOUDUEVDUCZVGUFZEBUAZUCZEUBTVIUCZVKE
      VLEUGVJVIVHVJVJAUBZVGABEDCFGHIJKLMNOPQRCAEDQMLSUHUIVMAEUAZUCZAUBZUCVGSVMV
      FVPVMVEVOAVJACLOUJVMVJVEVOUFVJACLOUDVJVNVCVNVJVCVNEAUAVJVCUFAECLULEABUKUM
      UNUOUMUPUOUQURUSUTVAVB $.
      $( [7-Aug-2015] $) $( [12-Nov-2013] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce Axiom of Existence ax-9
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Axiom of Existence.  One of the equality and substitution axioms of
     predicate calculus with equality.  One thing this axiom tells us is that
     at least one thing exists (although ~ ax-4 and possibly others also tell
     us that, i.e. they are not valid in the empty domain of a "free logic").
     In this form (not requiring that ` x ` and ` y ` be distinct) it was used
     in an axiom system of Tarski (see Axiom B7' in footnote 1 of
     [KalishMontague] p. 81.)  It is equivalent to axiom scheme C10' in
     [Megill] p. 448 (p. 16 of the preprint); the equivalence is established by
     ~ ax9o and ~ ax9from9o .  A more convenient form of this axiom is ~ a9e ,
     which has additional remarks.

     Raph Levien proved the independence of this axiom from the other logical
     axioms on 12-Apr-2005.  See item 16 at
     ~ http://us.metamath.org/award2003.html .

     ~ ax-9 can be proved from a weaker version requiring that the variables be
     distinct; see theorem ~ a9wa9 .

     ~ ax-9 can also be proved from the Axiom of Separation.  See theorem
     ~ ax9sep .  Thus ~ ax-9 is dispensable for Zermelo set theory Z, which
     uses the the Axiom of Separation instead of the Axiom of Replacement. $)
  ax-9 $a |- -. A. x -. x = y $.

  $( ~ equid with existential quantifier without using ~ ax-4 or ~ ax-17 .
     (The proof was shortened by Wolf Lammen, 27-Feb-2014.) $)
  equidqe $p |- -. A. y -. x = x $=
    ( weq wn wal ax-9 ax-8 pm2.43i con3i alimi mto ) AACZDZBEBACZDZBEBAFMOBNLNL
    BAAGHIJK $.
    $( [27-Feb-2014] $) $( [13-Jan-2011] $)

  $( Obsolete proof of ~ equidqe as of 27-Feb-2014. $)
  equidqeOLD $p |- -. A. y -. x = x $=
    ( weq wn wal ax-9 wi ax-8 pm2.43i con3i ax-gen ax-5 ax-mp mto ) AACZDZBEZBA
    CZDZBEZBAFPSGZBEQTGUABROROBAAHIJKPSBLMN $.
    $( [13-Jan-2011] $)

  $( ~ equid with universal quantifier without using ~ ax-4 or ~ ax-17 . $)
  equidq $p |- A. y x = x $=
    ( weq wal wn equidqe ax-6 hbequid con3i alrimi mt3 ) AACZBDZLEZBDABFMENBLBG
    LMABHIJK $.
    $( [13-Jan-2011] $)

  $( A special case of ~ ax-4 without using ~ ax-4 or ~ ax-17 . $)
  ax4sp1 $p |- ( A. y -. x = x -> -. x = x ) $=
    ( weq wn wal equidqe pm2.21i ) AACDZBEHABFG $.
    $( [13-Jan-2011] $)


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-10
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( Axiom B8 of [Tarski] p. 75, which is the same as our axiom ~ ax-9
       weakened with a distinct variable condition, shown here as a theorem
       derived from ~ ax-9 .  It could be restated as a proper axiom if it is
       desired to eliminate the ~ ax-9 dependence in trace back listings.  As
       an axiom it is sufficient to recover ~ ax-9 and ~ ax-10 ; see theorems
       ~ ax9 (or ~ a9wa9 ) and ~ ax10 . $)
    ax9v $p |- -. A. x -. x = y $=
      ( ax-9 ) ABC $.
      $( [7-Aug-2015] $)
  $}

  ${
    $d x w $.
    $( Lemma for ~ ax10 .  Similar to ~ equcomi , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem1 $p |- ( x = y -> y = x ) $=
      ( vw weq wn wal ax9v ax-8 pm2.43i con3i alimi mto ax-17 mt3 mpi ) ABDAADZ
      BADPPEZCFZRCADZEZCFCAGQTCSPSPCAAHIJKLQCMNABAHO $.
      $( [25-Jul-2015] $)
  $}

  $( Lemma for ~ ax10 .  Similar to ~ equequ1 , without using ~ ax-4 , ~ ax-9
     (directly) , or ~ ax-10 but allowing ~ ax9v . $)
  ax10lem2 $p |- ( x = y -> ( x = z <-> y = z ) ) $=
    ( weq ax-8 wi ax10lem1 syl impbid ) ABDZACDZBCDZABCEJBADLKFABGBACEHI $.
    $( [25-Jul-2015] $)

  $( Lemma for ~ ax10 .  Similar to ~ equequ2 , without using ~ ax-4 , ~ ax-9
     (directly) , or ~ ax-10 but allowing ~ ax9v . $)
  ax10lem3 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
    ( weq ax10lem1 ax-8 com12 syl5 syl2im impbid ) ABDZCADZCBDZLACDZKMCAENKMACB
    FGHKBADZMBCDZLABECBEPOLBCAFGIJ $.
    $( [25-Jul-2015] $)

  ${
    $d x w $.  $d w ph $.
    $( Lemma for ~ ax10 .  Similar to ~ ax4 , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem4 $p |- ( A. x ph -> ph ) $=
      ( vw wal wi weq wn ax9v ax-17 ax10lem1 ax-11 syl2im con2 al2imi mtoi syl6
      con4d con3i alrimi mt3 ) ABDZAEZCBFZGZCDCBHUBGZUDCUECIUCUBUCAUAUCAGZBCFZU
      FEZBDZUAGUCUGUFUFCDUICBJUFCIUFBCKLUIUAUGGZBDBCHUHAUJBUGAMNOPQRST $.
      $( [25-Jul-2015] $)
  $}

  $( Lemma for ~ ax10 .  Similar to ~ hba1 , without using ~ ax-4 , ~ ax-9
     (directly) , or ~ ax-10 but allowing ~ ax9v . $)
  ax10lem5 $p |- ( A. x ph -> A. x A. x ph ) $=
    ( wal wn ax10lem4 con2i ax-6 con1i alimi 3syl ) ABCZKDZBCZDZNBCKBCMKLBEFLBG
    NKBKMABGHIJ $.
    $( [25-Jul-2015] $)

  ${
    ax10lem6.1 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ ax10 .  Similar to ~ hbn , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem6 $p |- ( -. ph -> A. x -. ph ) $=
      ( wn wal ax10lem4 con3i ax-6 alrimi syl ) ADZABEZDZKBELAABFGMKBABHALCGIJ
      $.
      $( [25-Jul-2015] $)
  $}

  ${
    ax10lem7.1 $e |- ( ph -> A. x ph ) $.
    ax10lem7.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    ax10lem7.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Lemma for ~ ax10 .  Similar to ~ hbimd , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem7 $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal alrimi ax10lem4 ax-6 nsyl4 con1i con3 al2imi syl2im alimi syl6
      wn pm2.21 ax-1 jad ) ABCBCHZDIZABTZUFDIZUEABBDIZHZDIUFUHTZDIZUGAUIDEFJUKB
      UHBUKBDKBDLMNUIUJUFDBUHOPQUFUDDBCUARSACCDIUEGCUDDCBUBRSUC $.
      $( [25-Jul-2015] $)
  $}

  ${
    ax10lem8.1 $e |- ( ph -> A. x ph ) $.
    ax10lem8.2 $e |- ( ps -> A. x ps ) $.
    $( Lemma for ~ ax10 .  Similar to ~ hban , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem8 $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
      ( wa wn wi df-an wal ax10lem6 pm2.21 alrimi ax-1 ja hbxfrbi ) ABFABGZHZGC
      ABIRCAQRCJAGRCACDKAQLMQRCBCEKQANMOKP $.
      $( [25-Jul-2015] $)
  $}

  ${
    ax10lem9.1 $e |- ( ps -> A. x ps ) $.
    ax10lem9.2 $e |- ( ph -> ps ) $.
    $( Lemma for ~ ax10 .  Similar to ~ exlimi , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem9 $p |- ( E. x ph -> ps ) $=
      ( wex eximi wn wal df-ex ax10lem6 con1i sylbi syl ) ACFBCFZBABCEGOBHCIZHB
      BCJBPBCDKLMN $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x z $.  $d w ph $.
    ax10lem10.1 $e |- ( x = z -> ( ph -> ps ) ) $.
    ax10lem10.2 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ ax10 .  Similar to ~ a4ime with distinct variables, without
       using ~ ax-4 , ~ ax-9 (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem10 $p |- ( ph -> E. x ps ) $=
      ( wn wal wex wi weq ax9v id ax10lem5 a1i ax10lem6 ax10lem7 ax-mp ax10lem4
      hbth nsyli con3i alrimi mt3 con2i df-ex sylibr ) ABGZCHZGBCIUIAUIAGZJZCDK
      ZGZCHCDLUKGUMCUKCAAJZUKUKCHJAMZUNUIUJCUNCUOTUIUICHJUNUHCNOUJUJCHJUNACFPOQ
      RPULUKULABUIEUHCSUAUBUCUDUEBCUFUG $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x y $.
    ax10lem11.1 $e |- ( ph -> A. y ph ) $.
    ax10lem11.2 $e |- ( ps -> A. x ps ) $.
    ax10lem11.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Lemma for ~ ax10 .  Similar to ~ cbv3 with distinct variables, without
       using ~ ax-4 , ~ ax-9 (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem11 $p |- ( A. x ph -> A. y ps ) $=
      ( wal alimi wi weq wn ax9v id hbth ax10lem5 a1i ax10lem7 ax-mp ax10lem6
      ax10lem4 syl5 con3i alrimi mt3 a7s syl ) ACHZADHZCHBDHZAUICEIAUJDCUHBDUHB
      JZCDKZLZCHCDMUKLUMCUKCAAJZUKUKCHJANZUNUHBCUNCUOOUHUHCHJUNACPQBBCHJUNFQRST
      ULUKUHAULBACUAGUBUCUDUEIUFUG $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x v w $.  $d y v w $.
    $( Change bound variable without using ~ ax-4 , ~ ax-9 (directly) , or
       ~ ax-10 but allowing ~ ax9v . $)
    ax10lem12 $p |- ( A. x x = w -> A. y y = w ) $=
      ( vv weq wal ax-17 ax-8 ax10lem11 syl ) ACEZAFDCEZDFBCEZBFKLADKDGLAGADCHI
      LMDBLBGMDGDBCHIJ $.
      $( [22-Jul-2015] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Change free variable without using ~ ax-4 , ~ ax-9 (directly) , or
       ~ ax-10 but allowing ~ ax9v . $)
    ax10lem13 $p |- ( A. x x = y -> A. x x = z ) $=
      ( weq wal wn wex hbe1 ax10lem3 biimprd con3rr3 ax10lem4 con2i sylibr syl6
      df-ex ax10lem2 notbid ax-17 exnal ax10lem10 pm2.61d1 ax10lem9 3imtr3i
      con4i ) ACDZAEZABDZAEZUFFZAGUHFZAGZUGFUIFUJULAUKAHUJCBDZULUJUMUKULUMUHUFU
      MUFUHCBAIJKUKUKFZAEZFULUOUKUNALMUKAPNOUMFZUKACUFUKUPUFUHUMACBQRJUPASUAUBU
      CUFATUHATUDUE $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d w x y $.  $d w x z $.
    $( Lemma for ~ ax10 .  Similar to ~ ax-10 but with distinct variables,
       without using ~ ax-4 , ~ ax-9 (directly) , or ~ ax-10 but allowing
       ~ ax9v . $)
    ax10lem14 $p |- ( A. x x = y -> A. y y = x ) $=
      ( vz vw weq wal ax10lem13 ax10lem12 syl ) ABEAFACEAFZBAEBFZABCGJDAEDFZKJD
      CEDFLADCHDCAGIDBAHII $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ps $.  $d x ph $.
    ax10lem15.1 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Lemma for ~ ax10 .  Similar to ~ dvelim with first hypothesis replaced
       by distinct variable condition, without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem15 $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn ax-17 alrimi ax10lem4 a2i alimi syl ax10lem14 con3i ax10lem8
      wi ax-6 a1d syl5ibr ax-12 imp a17d ax10lem7 hbald biimpd ax9v con3 al2imi
      wa mtoi con1i 3syl syl56 expcom ax-11 syl2im pm2.27 syld pm2.61d2 ) CDGZC
      HIZCEGZCHZBBCHZSZVFIZVDVHBEDGZASZEHZVIVDULZVLCHVGBVJBEHZSZEHVLBVOEBEJZBVN
      VJVPUAKVOVKEVJVNAVNAVJBBELFUBMNOVMVKCEVIVDEVIECGZEHZIZVIEHVRVFECPQVSVIEVQ
      ETVFVRCEPQKOVDEJRVMVJACVIVDCVECTVCCTRVIVDVJVJCHSEDCUCUDVMACUEUFUGVLBCVLVJ
      BSZEHZBIZEHZIBVKVTEVJABVJABFUHMNWAWCVJIZEHEDUIVTWBWDEVJBUJUKUMBWCWBEJUNUO
      NUPUQVFBVEBSZCHZVGVFVEBVNWFVECLVPBCEURUSVEWEBCVEBUTUKVAVB $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d w z x $.  $d w z y $.
    $( Distinctor with bound variable change without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem16 $p |- ( -. A. y y = x -> ( A. x x = w -> A. y y = x ) ) $=
      ( vz weq wn wi ax10lem4 ax10lem12 ax10lem2 ax10lem15 ax10lem5 wb ax10lem3
      wal syl albid biimprd syl6 syl7 syl5 pm2.43d ) BAEZBOZFZACEZAOZUDUGUFUEUG
      UDGUFAHUGBCEZBOZUEUFUDABCIUEUFUFBOZUIUDGDCEUFBADDACJKUJUDUIUJUCUHBUFBLUJU
      FUCUHMUFBHACBNPQRSTUAUB $.
      $( [22-Jul-2015] $)
  $}

  ${
    $d w z $.  $d u v w $.  $d v x $.  $d v y $.
    $( Change free and bound variables without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem17 $p |- ( A. z z = w -> A. y y = x ) $=
      ( vv vu weq wal ax10lem12 wi ax-1 ax10lem16 pm2.61i syl ) CDGCHZAEGAHZBAG
      BHZOFEGFHZPOEDGEHZRCEDIRSRJRSKEFDLMNFAEINQPQJQPKABELMN $.
      $( [22-Jul-2015] $)
  $}

  $( Lemma for ~ ax10 .  Similar to ~ ax-10o but with reversed antecedent,
     without using ~ ax-4 , ~ ax-9 (directly) , or ~ ax-10 but allowing
     ~ ax9v . $)
  ax10lem18 $p |- ( A. y y = x -> ( A. x ph -> A. y ph ) ) $=
    ( weq wal wi ax10lem4 ax-11 syl pm2.27 al2imi syld ) CBDZCEZABEZMAFZCEZACEN
    MOQFMCGACBHIMPACMAJKL $.
    $( [25-Jul-2015] $)

  ${
    $d w z x $.  $d w y $.
    $( Lemma for ~ ax10 .  Similar to ~ dveeq2 , without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax10lem19 $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax10lem3 ax10lem15 ) CDECBEABDDBCFG $.
      $( [20-Jul-2015] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( Proof of axiom ~ ax-10 from others, without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v .  TODO: consolidate some
       lemmas. $)
    ax10 $p |- ( A. x x = y -> A. y y = x ) $=
      ( vz weq wal wn ax9v df-ex wi ax-17 wa ax10lem19 ax10lem18 ax10lem1 alimi
      wex imp syl6 ax10lem17 com12 syl56 exp3acom23 pm2.18 ax10lem9 syl5bir mpi
      ) ABDAEZCADZFCEFZBADBEZCAGUIUHCPZUGUJUHCHUKUGUJUHUGUJIZCULCJUGUHUJUGUHUJF
      ZUJIUJUGUMUHUJUMUHKUHBEZUGACDZAEZUJUMUHUNBACLQUGUNUHAEUPUHBAMUHUOACANORAB
      ACSUAUBUJUCRTUDTUEUF $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x y $.  $d w ph $.  $d w z $.
    $( Alternate proof of ~ a16g without using ~ ax-4 , ~ ax-9 (directly) , or
       ~ ax-10 but allowing ~ ax9v . $)
    a16gALT $p |- ( A. x x = y -> ( ph -> A. z ph ) ) $=
      ( vw weq wex wal wi wn ax9v df-ex mpbir ax10lem17 hbn1 pm2.21 alrimi ax-1
      ax-17 ja ax10lem1 ax-11 syl2im ax-5 syl6 com23 syl5 ax10lem9 mpsyl ) EDFZ
      EGZBCFBHUJEHZAADHZIZUKUJJEHJEDKUJELMDEBCNUJULUNIZEULUNUOEHULJUOEUJEOULUNP
      QUNUOEUNESUNULRQTULDEFZDHZUJUNEDEDNUJAUQUMUJAUPAIDHZUQUMIUJUPAAEHUREDUAAE
      SADEUBUCUPADUDUEUFUGUHUI $.
      $( [25-Jul-2015] $)
  $}

  ${
    $d x v z $.  $d y v z $.
    $( Proof of axiom ~ ax-9 from others, without using ~ ax-4 , ~ ax-9
       (directly) , or ~ ax-10 but allowing ~ ax9v . $)
    ax9 $p |- -. A. x -. x = y $=
      ( vv weq wal wn ax10lem4 nsyl3 ax9v ax-17 ax10lem19 ax10lem5 ax10lem3 syl
      wi wb notbid albid mtbii syl6com con3i alrimi mt3 pm2.61i ) ABDZAEZUEFZAE
      ZFZUHUEUFUGAGUEAGHUFFZUIOZCBDZFZCECBIUKFZUMCUNCJULUKUJULULAEZUIABCKUOACDZ
      FZAEUHACIUOUQUGAULALUOUPUEUOULUPUEPULAGCBAMNQRSTUAUBUCUD $.
      $( [25-Jul-2015] $)
  $}

  $( Axiom of Quantifier Substitution.  One of the equality and substitution
     axioms of predicate calculus with equality.  Appears as Lemma L12 in
     [Megill] p. 445 (p. 12 of the preprint).

     The original version of this axiom was ~ ax-10o ("o" for "old") and was
     replaced with this shorter ~ ax-10 in May 2008.  The old axiom is proved
     from this one as theorem ~ ax10o .  Conversely, this axiom is proved from
     ~ ax-10o as theorem ~ ax10from10o .

     This axiom was proved redundant in July 2015.  See theorem ~ ax10 . $)
  ax-10 $a |- ( A. x x = y -> A. y y = x ) $.

  $( Commutation law for identical variable specifiers.  The antecedent and
     consequent are true when ` x ` and ` y ` are substituted with the same
     variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). $)
  alequcom $p |- ( A. x x = y -> A. y y = x ) $=
    ( ax-10 ) ABC $.
    $( [5-Aug-1993] $)

  ${
    alequcoms.1 $e |- ( A. x x = y -> ph ) $.
    $( A commutation rule for identical variable specifiers. $)
    alequcoms $p |- ( A. y y = x -> ph ) $=
      ( weq wal alequcom syl ) CBECFBCEBFACBGDH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nalequcoms.1 $e |- ( -. A. x x = y -> ph ) $.
    $( A commutation rule for distinct variable specifiers. $)
    nalequcoms $p |- ( -. A. y y = x -> ph ) $=
      ( weq wal alequcom nsyl4 con1i ) ACBECFZBCEBFJABCGDHI $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d x w $.  $d w z $.
    a9wa9lem1OLD.1 $e |- -. A. w -. w = x $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ equcomi , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem1OLD $p |- ( x = y -> y = x ) $=
      ( weq wn wal ax-8 pm2.43i con3i alimi mto ax-17 mt3 mpi ) ABEAAEZBAEPPFZC
      GZRCAEZFZCGDQTCSPSPCAAHIJKLQCMNABAHO $.
      $( [12-Nov-2013] $)

    a9wa9lem2OLD.2 $e |- -. A. w -. w = z $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ equequ2 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem2OLD $p |- ( x = y -> ( z = x <-> z = y ) ) $=
      ( weq a9wa9lem1OLD ax-8 com12 syl5 syl2im impbid ) ABGZCAGZCBGZOACGZNPCAD
      FHQNPACBIJKNBAGZPBCGZOABDEHCBDFHSROBCAIJLM $.
      $( [3-Apr-2014] $) $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.
    a9wa9lem3OLD.1 $e |- -. A. w -. w = x $.
    a9wa9lem3OLD.2 $e |- -. A. x -. x = w $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ ax4 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem3OLD $p |- ( A. x ph -> ph ) $=
      ( wal wi weq ax-17 a9wa9lem1OLD ax-11 syl2im con2 al2imi mtoi con4d con3i
      wn syl6 alrimi mt3 ) ABFZAGZCBHZRZCFDUCRZUECUFCIUDUCUDAUBUDARZBCHZUGGZBFZ
      UBRUDUHUGUGCFUJCBBEJUGCIUGBCKLUJUBUHRZBFEUIAUKBUHAMNOSPQTUA $.
      $( [12-Nov-2013] $)

    $( Lemma for ~ a9wa9OLD .  Similar to ~ hba1 , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem4OLD $p |- ( A. x ph -> A. x A. x ph ) $=
      ( wal wn a9wa9lem3OLD con2i ax-6 con1i alimi 3syl ) ABFZNGZBFZGZQBFNBFPNO
      BCDEHIOBJQNBNPABJKLM $.
      $( [12-Nov-2013] $)

    a9wa9lem5OLD.3 $e |- ( ph -> A. x ph ) $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ hbn , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem5OLD $p |- ( -. ph -> A. x -. ph ) $=
      ( wn wal a9wa9lem3OLD con3i ax-6 alrimi syl ) AGZABHZGZNBHOAABCDEIJPNBABK
      AOFJLM $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.  $d w ps $.
    a9wa9lem6OLD.1 $e |- -. A. w -. w = x $.
    a9wa9lem6OLD.2 $e |- -. A. x -. x = w $.
    a9wa9lem6OLD.3 $e |- ( ph -> A. x ph ) $.
    a9wa9lem6OLD.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    a9wa9lem6OLD.5 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ hbimd , without using ~ ax-9 or
       ~ ax-4 .  (The proof was shortened by Wolf Lammen, 3-Apr-2014.) $)
    a9wa9lem6OLD $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn alrimi a9wa9lem3OLD ax-6 nsyl4 con1i alimi syl6 al2imi syl2im
      con3 pm2.21 ax-1 jad ) ABCBCKZDLZABMZUIDLZUHABBDLZKZDLUIUKMZDLZUJAULDHINU
      NBUKBUNBDEFGOBDPQRULUMUIDBUKUCUAUBUIUGDBCUDSTACCDLUHJCUGDCBUESTUF $.
      $( [3-Apr-2014] $) $( [12-Nov-2013] $)
  $}

  ${
    $d x w $.  $d w ph $.  $d w ps $.
    a9wa9lem7OLD.1 $e |- -. A. w -. w = x $.
    a9wa9lem7OLD.2 $e |- -. A. x -. x = w $.
    a9wa9lem7OLD.3 $e |- ( ph -> A. x ph ) $.
    a9wa9lem7OLD.4 $e |- ( ps -> A. x ps ) $.
    $( Lemma for ~ a9wa9OLD .  Similar to ~ hban , without using ~ ax-9 or
       ~ ax-4 . $)
    a9wa9lem7OLD $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
      ( wa wn wi df-an wal a9wa9lem5OLD pm2.21 alrimi ax-1 ja hbxfrbi ) ABIABJZ
      KZJCABLUACDEFATUACMAJUACACDEFGNATOPTUACBCDEFHNTAQPRNS $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x v w z $.  $d y v w z $.  $d w x ph $.  $d w z ps $.
    a9wa9OLD.1 $e |- -. A. w -. w = x $.
    a9wa9OLD.2 $e |- -. A. x -. x = w $.
    a9wa9OLD.3 $e |- -. A. z -. z = y $.
    a9wa9OLD.4 $e |- -. A. w -. w = z $.
    a9wa9OLD.5 $e |- -. A. z -. z = w $.

    ${
      a9wa9lem8OLD.6 $e |- ( z = y -> ( ph <-> ps ) ) $.
      $( Lemma for ~ a9wa9OLD .  Similar to ~ dvelimfALT , without using ~ ax-9
         or ~ ax-4 .  (The proof was shortened by Wolf Lammen, 18-Jul-2014.) $)
      a9wa9lem8OLD $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
        ( weq wal wn wi ax-17 alrimi alimi ax-6 wa a1d a9wa9lem3OLD syl5ibr a2i
        syl ax-10 con3i nalequcoms a9wa9lem7OLD ax-12 a9wa9lem6OLD hbald biimpd
        imp a17d con3 al2imi mtoi con1i 3syl syl56 expcom ax-11 syl2im pm2.61d2
        pm2.27 syld ) CDMZCNOZCEMZCNZBBCNZPZVLOZVJVNBEDMZAPZENZVOVJUAZVRCNVMBVP
        BENZPZENVRBWAEBEQZBVTVPWBUBRWAVQEVPVTAVTAVPBBEFJKUCLUDUESUFVSVQCEVOVJEF
        JKVOENECECMZENZOVOEWCETVLWDCEUGUHRUIVJEQUJVSVPACFGHVOVJCFGHVKCTVICTUJVO
        VJVPVPCNPEDCUKUOVSACUPULUMVRBCVRVPBPZENZBOZENZOBVQWEEVPABVPABLUNUESWFWH
        VPOZENIWEWGWIEVPBUQURUSBWHWGEQUTVASVBVCVLBVKBPZCNZVMVLVKBVTWKVKCFGHUCWB
        BCEVDVEVKWJBCVKBVGURVHVF $.
        $( [18-Jul-2014] $) $( [12-Nov-2013] $)
    $}

    a9wa9OLD.6 $e |- -. A. v -. v = y $.
    a9wa9OLD.7 $e |- -. A. w -. w = v $.
    a9wa9OLD.8 $e |- -. A. x -. x = v $.
    $( Derive ~ ax-9 (which has no distinct variable requirement) from a weaker
       version that requires that its two variables be distinct.  The weaker
       version is axiom scheme B7 of [Tarski] p. 75.  The hypotheses are the
       instances of the weaker version that we need.  Neither ~ ax-9 nor ~ ax-4
       (which can be derived from ~ ax-9 ) is used by the proof.  Note that
       every other predicate calculus axiom (except ~ ax-13 and ~ ax-14 ) is
       used by the proof.  (The proof was shortened by Wolf Lammen,
       28-Mar-2014.)

       In July 2015 we eliminated ~ ax-10 and reproved this theorem without it,
       as shown by the new ~ a9wa9 .  We moved this obsolete ~ a9wa9OLD to
       after ~ ax-10 since that is needed for the old proof.

       Obsolete version of ~ a9wa9 as of 7-Aug-2015. $)
    a9wa9OLD $p |- -. A. x -. x = y $=
      ( weq wal wn a9wa9lem3OLD nsyl3 wi a9wa9lem2OLD a9wa9lem8OLD a9wa9lem4OLD
      ax-17 wb syl notbid albid mtbii syl6com con3i alrimi mt3 pm2.61i ) ABNZAO
      ZUNPZAOZPZUQUNUOUPADFGQUNADFGQRUOPZURSZEBNZPZEOKUTPZVBEVCEUCVAUTUSVAVAAOZ
      URECNVAABCDFGHIJCBEDILTUAVDAENZPZAOUQMVDVFUPAVAADFGUBVDVEUNVDVAVEUNUDVAAD
      FGQEBADLFTUEUFUGUHUIUJUKULUM $.
      $( [28-Mar-2014] $) $( [12-Nov-2013] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive ax-4, ax-5o, and ax-6o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.  $d y ph $.
    $( Theorem showing that ~ ax-4 can be derived from ~ ax-5 , ~ ax-gen ,
       ~ ax-8 , ~ ax-9 , ~ ax-11 , and ~ ax-17 and is therefore redundant in a
       system including these axioms.  The proof uses ideas from the proof of
       Lemma 21 of [Monk2] p. 114.

       This theorem should not be referenced in any proof.  Instead, we will
       use ~ ax-4 below so that explicit uses of ~ ax-4 can be more easily
       identified.  In particular, this will more cleanly separate out the
       theorems of "pure" predicate calculus that don't involve equality or
       distinct variables.  A beginner may wish to accept ~ ax-4 a priori, so
       that the proof of this theorem ( ~ ax4 ), which involves equality as
       well as the distinct variable requirements of ~ ax-17 , can be put off
       until those axioms are studied.

       Note:  All predicate calculus axioms introduced from this point forward
       are redundant.  Immediately before their introduction, we prove them
       from earlier axioms to demonstrate their redundancy.  Specifically,
       redundant axioms ~ ax-4 , ~ ax-5o , ~ ax-6o , ~ ax-9o , ~ ax-10o ,
       ~ ax-11o , ~ ax-15 , and ~ ax-16 are proved by theorems ~ ax4 , ~ ax5o ,
       ~ ax6o , ~ ax9o , ~ ax10o , ~ ax11o , ~ ax15 , and ~ ax16 .  Except for
       the ones suffixed with o ( ~ ax-5o etc.), we never reference those
       theorems directly.  Instead, we use the axiom version that immediately
       follows it.  This allow us to better isolate the uses of the redundant
       axioms for easier study of subsystems containing them.

       (The proof was shortened by Scott Fenton, 24-Jan-2011.) $)
    ax4 $p |- ( A. x ph -> ph ) $=
      ( vy wal wi weq ax-9 ax-8 pm2.43i con3i ax-gen ax-17 ax-5 mpsyl mt3 ax-11
      wn mpi syl2im con2 ax-mp syl mtoi syl6 con4d ) ABDZAEZCBFZQZCDZCBGUGQZUIE
      ZCDUKUKCDUJULCUHUGUHAUFUHAQZBCFZUMEZBDZUFQUHUNUMUMCDUPUHCCFZUNUQUNQZBDZBC
      GZUQQZUREZBDVAVABDUSVBBUNUQUNUQBCCHIJKVABLVAURBMNOCBCHRUMCLUMBCPSUPUFUSUT
      UPAUREZBDZUFUSEUOVCEZBDUPVDEVEBUNATKUOVCBMUAAURBMUBUCUDUEJKUKCLUKUICMNO
      $.
      $( [24-Jan-2011] $) $( [21-May-2008] $)
  $}

  $( Axiom of Specialization.  A quantified wff implies the wff without a
     quantifier (i.e. an instance, or special case, of the generalized wff).
     In other words if something is true for all ` x ` , it is true for any
     specific ` x ` (that would typically occur as a free variable in the wff
     substituted for ` ph ` ).  (A free variable is one that does not occur in
     the scope of a quantifier: ` x ` and ` y ` are both free in ` x = y ` ,
     but only ` x ` is free in ` A. y x = y ` .)  This is one of the axioms of
     what we call "pure" predicate calculus ( ~ ax-4 through ~ ax-7 plus rule
     ~ ax-gen ).  Axiom scheme C5' in [Megill] p. 448 (p. 16 of the preprint).
     Also appears as Axiom B5 of [Tarski] p. 67 (under his system S2, defined
     in the last paragraph on p. 77).

     Note that the converse of this axiom does not hold in general, but a
     weaker inference form of the converse holds and is expressed as rule
     ~ ax-gen .  Conditional forms of the converse are given by ~ ax-12 ,
     ~ ax-15 , ~ ax-16 , and ~ ax-17 .

     Unlike the more general textbook Axiom of Specialization, we cannot choose
     a variable different from ` x ` for the special case.  For use, that
     requires the assistance of equality axioms, and we deal with it later
     after we introduce the definition of proper substitution - see ~ stdpc4 .

     An nice alternate axiomatization uses ~ ax467 and ~ ax-5o in place of
     ~ ax-4 , ~ ax-5 , ~ ax-6 , and ~ ax-7 .

     This axiom is redundant in the presence of certain other axioms, as shown
     by theorem ~ ax4 .  (We replaced the older ~ ax-5o and ~ ax-6o with newer
     versions ~ ax-5 and ~ ax-6 in order to prove this redundancy.) $)
  ax-4 $a |- ( A. x ph -> ph ) $.

  $( Show that the original axiom ~ ax-5o can be derived from ~ ax-5 and
     others.  See ~ ax5 for the rederivation of ~ ax-5 from ~ ax-5o .

     Part of the proof is based on the proof of Lemma 22 of [Monk2] p. 114.

     Normally, ~ ax5o should be used rather than ~ ax-5o , except by theorems
     specifically studying the latter's properties. $)
  ax5o $p |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wal wi wn ax-4 con2i ax-6 con1i ax-gen ax-5 ax-mp 3syl syl5 ) ACDZPCDZPBE
    CDBCDPPFZCDZFZTCDZQSPRCGHRCITPEZCDUAQEUBCPSACIJKTPCLMNPBCLO $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Implication.  This axiom moves a quantifier from
     outside to inside an implication, quantifying ` ps ` .  Notice that ` x `
     must not be a free variable in the antecedent of the quantified
     implication, and we express this by binding ` ph ` to "protect" the axiom
     from a ` ph ` containing a free ` x ` .  One of the 4 axioms of "pure"
     predicate calculus.  Axiom scheme C4' in [Megill] p. 448 (p. 16 of the
     preprint).  It is a special case of Lemma 5 of [Monk2] p. 108 and Axiom 5
     of [Mendelson] p. 69.

     This axiom is redundant, as shown by theorem ~ ax5o .

     Normally, ~ ax5o should be used rather than ~ ax-5o , except by theorems
     specifically studying the latter's properties. $)
  ax-5o $a |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) $.

  $( Rederivation of axiom ~ ax-5 from the orginal version, ~ ax-5o .  See
     ~ ax5o for the derivation of ~ ax-5o from ~ ax-5 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-5
     above so that uses of ~ ax-5 can be more easily identified.

     Note:  This is the same as theorem ~ alim below.  It is proved separately
     here so that it won't be dependent on the axioms used for ~ alim . $)
  ax5 $p |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) $=
    ( wi wal ax-4 syl5 ax-gen ax-5o ax-mp syl ) ABDZCEZACEZBDZCEZNBCEDMODZCEMPD
    QCNAMBACFLCFGHLOCIJABCIK $.
    $( [5-Dec-2010] $) $( [23-May-2008] $)

  $( Show that the original axiom ~ ax-6o can be derived from ~ ax-6 and
     others.  See ~ ax6 for the rederivation of ~ ax-6 from ~ ax-6o .

     Normally, ~ ax6o should be used rather than ~ ax-6o , except by theorems
     specifically studying the latter's properties. $)
  ax6o $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn ax-4 ax-6 nsyl4 ) ABCZAHDBCABEABFG $.
    $( [21-May-2008] $)

  $( Axiom of Quantified Negation.  This axiom is used to manipulate negated
     quantifiers.  One of the 4 axioms of pure predicate calculus.  Equivalent
     to axiom scheme C7' in [Megill] p. 448 (p. 16 of the preprint).  An
     alternate axiomatization could use ~ ax467 in place of ~ ax-4 , ~ ax-6o ,
     and ~ ax-7 .

     This axiom is redundant, as shown by theorem ~ ax6o .

     Normally, ~ ax6o should be used rather than ~ ax-6o , except by theorems
     specifically studying the latter's properties. $)
  ax-6o $a |- ( -. A. x -. A. x ph -> ph ) $.

  $( Rederivation of axiom ~ ax-6 from the orginal version, ~ ax-6o .  See
     ~ ax6o for the derivation of ~ ax-6o from ~ ax-6 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-6
     above so that uses of ~ ax-6 can be more easily identified. $)
  ax6 $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal wn wi ax-4 id ax-gen ax-5o ax-mp nsyl ax-6o nsyl4 ) ABCZBCZDZBCZNDZBC
    ZNQREZBCQSETBQONPBFNNEZBCNOEUABNGHANBIJKHPRBIJNBLM $.
    $( [23-May-2008] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    "Pure" predicate calculus including ax-4, without distinct variables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    a4i.1 $e |- A. x ph $.
    $( Inference rule reversing generalization. $)
    a4i $p |- ph $=
      ( wal ax-4 ax-mp ) ABDACABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    a4s.1 $e |- ( ph -> ps ) $.
    $( Generalization of antecedent. $)
    a4s $p |- ( A. x ph -> ps ) $=
      ( wal ax-4 syl ) ACEABACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    a4sd.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction generalizing antecedent. $)
    a4sd $p |- ( ph -> ( A. x ps -> ch ) ) $=
      ( wal ax-4 syl5 ) BDFBACBDGEH $.
      $( [17-Aug-1994] $)
  $}

  $( Abbreviated version of ~ ax-6o . $)
  a6e $p |- ( E. x A. x ph -> ph ) $=
    ( wal wex wn df-ex ax6o sylbi ) ABCZBDIEBCEAIBFABGH $.
    $( [5-Aug-1993] $)

  $( Closed theorem version of bound-variable hypothesis builder ~ hbn . $)
  hbnt $p |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) $=
    ( wn wal wi ax6o con1i con3 al2imi syl5 ) ACZABDZCZBDZALEZBDKBDNAABFGOMKBAL
    HIJ $.
    $( [5-Aug-1993] $)

  $( ` x ` is not free in ` A. x ph ` .  Example in Appendix in [Megill] p. 450
     (p. 19 of the preprint).  Also Lemma 22 of [Monk2] p. 114. $)
  hba1 $p |- ( A. x ph -> A. x A. x ph ) $=
    ( wal wn ax-4 con2i ax-6 con1i alimi 3syl ) ABCZKDZBCZDZNBCKBCMKLBEFLBGNKBK
    MABGHIJ $.
    $( [5-Aug-1993] $)

  ${
    a5i.1 $e |- ( A. x ph -> ps ) $.
    $( Inference version of ~ ax-5o . $)
    a5i $p |- ( A. x ph -> A. x ps ) $=
      ( wal wi hba1 ax-5 syl5 mpg ) ACEZBFZKBCEZFCKKCELCEMACGKBCHIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    hb.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` -. ph ` . $)
    hbn $p |- ( -. ph -> A. x -. ph ) $=
      ( wal wi wn hbnt mpg ) AABDEAFZIBDEBABGCH $.
      $( [5-Aug-1993] $)

    $( If ` x ` is not free in ` ph ` , it is not free in ` E. y ph ` . $)
    hbex $p |- ( E. y ph -> A. x E. y ph ) $=
      ( wex wn wal df-ex hbn hbal hbxfrbi ) ACEAFZCGZFBACHMBLBCABDIJIK $.
      $( [5-Aug-1993] $)

    ${
      hb.2 $e |- ( ps -> A. x ps ) $.
      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph -> ps ) ` .  (The proof was shortened by O'Cat, 3-Mar-2008.) $)
      hbim $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
        ( wi wal wn hbn pm2.21 alrimi ax-1 ja ) ABABFZCGAHNCACDIABJKBNCEBALKM
        $.
        $( [4-Mar-2008] $)  $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph \/ ps ) ` . $)
      hbor $p |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) $=
        ( wo wn wi df-or hbn hbim hbxfrbi ) ABFAGZBHCABIMBCACDJEKL $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph /\ ps ) ` . $)
      hban $p |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) $=
        ( wa wn wi df-an hbn hbim hbxfrbi ) ABFABGZHZGCABINCAMCDBCEJKJL $.
        $( [5-Aug-1993] $)

      $( If ` x ` is not free in ` ph ` and ` ps ` , it is not free in
         ` ( ph <-> ps ) ` . $)
      hbbi $p |- ( ( ph <-> ps ) -> A. x ( ph <-> ps ) ) $=
        ( wb wi wa dfbi2 hbim hban hbxfrbi ) ABFABGZBAGZHCABIMNCABCDEJBACEDJKL
        $.
        $( [5-Aug-1993] $)

      ${
        hb.3 $e |- ( ch -> A. x ch ) $.
        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph \/ ps \/ ch ) ` . $)
        hb3or $p |- ( ( ph \/ ps \/ ch ) -> A. x ( ph \/ ps \/ ch ) ) $=
          ( w3o wo df-3or hbor hbxfrbi ) ABCHABIZCIDABCJMCDABDEFKGKL $.
          $( [14-Sep-2003] $)

        $( If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not
           free in ` ( ph /\ ps /\ ch ) ` . $)
        hb3an $p |- ( ( ph /\ ps /\ ch ) -> A. x ( ph /\ ps /\ ch ) ) $=
          ( w3a wa df-3an hban hbxfrbi ) ABCHABIZCIDABCJMCDABDEFKGKL $.
          $( [14-Sep-2003] $)
      $}
    $}
  $}

  $( Lemma 24 of [Monk2] p. 114. $)
  hba2 $p |- ( A. y A. x ph -> A. x A. y A. x ph ) $=
    ( wal hba1 hbal ) ABDBCABEF $.
    $( [29-May-2008] $)

  $( Lemma 23 of [Monk2] p. 114. $)
  hbia1 $p |- ( ( A. x ph -> A. x ps ) -> A. x ( A. x ph -> A. x ps ) ) $=
    ( wal hba1 hbim ) ACDBCDCACEBCEF $.
    $( [29-May-2008] $)

  $( Obsolete proof of ~ hbn1 as of 15-Aug-2014. $)
  hbn1OLD $p |- ( -. A. x ph -> A. x -. A. x ph ) $=
    ( wal hba1 hbn ) ABCBABDE $.
    $( [5-Aug-1993] $)


  $( Proof of a single axiom that can replace ~ ax-4 and ~ ax-6o .  See
     ~ ax46to4 and ~ ax46to6 for the re-derivation of those axioms.
     (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46 $p |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-6o ax-4 ja ) ABCZDBCHAABEABFG $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-4 from ~ ax46 .  Only propositional calculus is used
     for the re-derivation.  (Contributed by Scott Fenton, 12-Sep-2005.) $)
  ax46to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax46 syl ) ABCZIDBCZIEAIJFABGH $.
    $( [12-Sep-2005] $)

  $( Re-derivation of ~ ax-6o from ~ ax46 .  Only propositional calculus is
     used for the re-derivation.  (Contributed by Scott Fenton,
     12-Sep-2005.) $)
  ax46to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi pm2.21 ax46 syl ) ABCZDBCZDJIEAJIFABGH $.
    $( [12-Sep-2005] $)

  $( Proof of a single axiom that can replace both ~ ax-6o and ~ ax-7 .  See
     ~ ax67to6 and ~ ax67to7 for the re-derivation of those axioms. $)
  ax67 $p |- ( -. A. x -. A. y A. x ph -> A. y ph ) $=
    ( wal wn ax-7 con3i alimi ax-6o syl ) ABDCDZEZBDZEACDZBDZEZBDZENQMPLBKOACBF
    GHGNBIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn hba1 con3i alimi ax67 ax-4 3syl ) ABCZDZBCZDKBCZDZBCZDKAPMOLBKNABE
    FGFABBHABIJ $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax67 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation. $)
  ax67to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax67to6 con4i ax67 alimi syl ) ACDBDZKEZCDEZCDZABDZCDNKLCFGMOCACBH
    IJ $.
    $( [18-Nov-2006] $)

  $( Proof of a single axiom that can replace ~ ax-4 , ~ ax-6o , and ~ ax-7 in
     a subsystem that includes these axioms plus ~ ax-5o and ~ ax-gen (and
     propositional calculus).  See ~ ax467to4 , ~ ax467to6 , and ~ ax467to7 for
     the re-derivation of those axioms.  This theorem extends the idea in Scott
     Fenton's ~ ax46 . $)
  ax467 $p |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) $=
    ( wal wn ax-4 hbn1 ax-6o con1i alimi ax-7 3syl nsyl4 ja ) ACDZBDEZCDBDZABDA
    OAQACFOEZRCDPBDZCDQACGRSCSOOBHIJPCBKLMABFN $.
    $( [18-Nov-2006] $)

  $( Re-derivation of ~ ax-4 from ~ ax467 .  Only propositional calculus is
     used by the re-derivation. $)
  ax467to4 $p |- ( A. x ph -> ph ) $=
    ( wal wn wi ax-1 ax467 syl ) ABCZIBCDBCBCZIEAIJFABBGH $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-6o from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to6 $p |- ( -. A. x -. A. x ph -> ph ) $=
    ( wal wn wi ax467to4 hba1 con3i alimi syl pm2.21 ax467 3syl ) ABCZDZBCZDNBC
    ZDZBCZBCZDTNEATPTSPSBFROBNQABGHIJHTNKABBLM $.
    $( [19-Nov-2006] $)

  $( Re-derivation of ~ ax-7 from ~ ax467 .  Note that ~ ax-6o and ~ ax-7 are
     not used by the re-derivation.  The use of ~ alimi (which uses ~ ax-4 ) is
     allowed since we have already proved ~ ax467to4 . $)
  ax467to7 $p |- ( A. x A. y ph -> A. y A. x ph ) $=
    ( wal wn ax467to6 con4i wi pm2.21 ax467 syl alimi nsyl4 ) ACDBDZNEZCDZEZCDZ
    ABDZCDRNOCFGQSCPBDZEZBDSPUAABUATSHATSIABCJKLPBFMLK $.
    $( [19-Nov-2006] $)

  $( The analog in our "pure" predicate calculus of axiom 5 of modal logic
     S5. $)
  modal-5 $p |- ( -. A. x -. ph -> A. x -. A. x -. ph ) $=
    ( wn hbn1 ) ACBD $.
    $( [5-Oct-2005] $)

  $( The analog in our "pure" predicate calculus of the Brouwer axiom (B) of
     modal logic S5. $)
  modal-b $p |- ( ph -> A. x -. A. x -. ph ) $=
    ( wn wal ax6o con4i ) ACZBDCBDAGBEF $.
    $( [5-Oct-2005] $)

  $( If a wff is true, it is true for at least one instance.  Special case of
     Theorem 19.8 of [Margaris] p. 89. $)
  19.8a $p |- ( ph -> E. x ph ) $=
    ( wn wal wex ax-4 con2i df-ex sylibr ) AACZBDZCABEKAJBFGABHI $.
    $( [5-Aug-1993] $)

  $( Theorem 19.2 of [Margaris] p. 89, generalized to use two set variables.
     (Contributed by O'Cat, 31-Mar-2008.) $)
  19.2 $p |- ( A. x ph -> E. y ph ) $=
    ( wex 19.8a a4s ) AACDBACEF $.
    $( [31-Mar-2008] $)

  ${
    19.3.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be quantified with a variable not free in it.  Theorem 19.3 of
       [Margaris] p. 89. $)
    19.3 $p |- ( A. x ph <-> ph ) $=
      ( wal ax-4 impbii ) ABDAABECF $.
      $( [21-May-2007] $) $( [5-Aug-1993] $)
  $}

  $( A closed version of one direction of ~ 19.9 . $)
  19.9t $p |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) $=
    ( wex wn wal wi df-ex hbnt con1d syl5bi ) ABCADBEZDAABEFBEZAABGLAKABHIJ $.
    $( [5-Aug-1993] $)

  ${
    19.9.1 $e |- ( ph -> A. x ph ) $.
    $( A wff may be existentially quantified with a variable not free in it.
       Theorem 19.9 of [Margaris] p. 89.  (Contributed by FL, 24-Mar-2007.) $)
    19.9 $p |- ( E. x ph <-> ph ) $=
      ( wex wal wi 19.9t mpg 19.8a impbii ) ABDZAAABEFKAFBABGCHABIJ $.
      $( [24-Mar-2007] $)
  $}

  ${
    19.9d.1 $e |- ( ps -> A. x ps ) $.
    19.9d.2 $e |- ( ps -> ( ph -> A. x ph ) ) $.
    $( A deduction version of one direction of ~ 19.9 . $)
    19.9d $p |- ( ps -> ( E. x ph -> ph ) ) $=
      ( wal wi wex alimi 19.9t 3syl ) BBCFAACFGZCFACHAGDBLCEIACJK $.
      $( [5-Aug-1993] $)
  $}

  $( One direction of Theorem 19.11 of [Margaris] p. 89. $)
  excomim $p |- ( E. x E. y ph -> E. y E. x ph ) $=
    ( wex 19.8a 2eximi hbe1 hbex 19.9 sylib ) ACDBDABDZCDZBDLAKBCABEFLBKBCABGHI
    J $.
    $( [5-Aug-1993] $)

  $( Theorem 19.11 of [Margaris] p. 89. $)
  excom $p |- ( E. x E. y ph <-> E. y E. x ph ) $=
    ( wex excomim impbii ) ACDBDABDCDABCEACBEF $.
    $( [5-Aug-1993] $)

  $( Theorem 19.12 of [Margaris] p. 89.  Assuming the converse is a mistake
     sometimes made by beginners!  But sometimes the converse does hold, as in
     ~ 19.12vv and ~ r19.12sn . $)
  19.12 $p |- ( E. x A. y ph -> A. y E. x ph ) $=
    ( wal wex hba1 hbex ax-4 eximi alrimi ) ACDZBEABECKCBACFGKABACHIJ $.
    $( [5-Aug-1993] $)

  ${
    19.16.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.16 of [Margaris] p. 90. $)
    19.16 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> A. x ps ) ) $=
      ( wal wb 19.3 albi syl5bbr ) AACEABFCEBCEACDGABCHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.17.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.17 of [Margaris] p. 90. $)
    19.17 $p |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> ps ) ) $=
      ( wb wal albi 19.3 syl6bb ) ABECFACFBCFBABCGBCDHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.19.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.19 of [Margaris] p. 90. $)
    19.19 $p |- ( A. x ( ph <-> ps ) -> ( ph <-> E. x ps ) ) $=
      ( wex wb wal 19.9 exbi syl5bbr ) AACEABFCGBCEACDHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90.  The hypothesis can be thought of
       as " ` x ` is not free in ` ph ` ." $)
    19.21 $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( wi wal alim syl5 hba1 hbim ax-4 imim2i alrimi impbii ) ABEZCFZABCFZEZAA
      CFPQDABCGHROCAQCDBCIJQBABCKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21-2.1 $e |- ( ph -> A. x ph ) $.
    19.21-2.2 $e |- ( ph -> A. y ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90 but with 2 quantifiers. $)
    19.21-2 $p |- ( A. x A. y ( ph -> ps ) <-> ( ph -> A. x A. y ps ) ) $=
      ( wi wal 19.21 albii bitri ) ABGDHZCHABDHZGZCHAMCHGLNCABDFIJAMCEIK $.
      $( [4-Feb-2005] $)
  $}

  ${
    stdpc5.1 $e |- ( ph -> A. x ph ) $.
    $( An axiom scheme of standard predicate calculus that emulates Axiom 5 of
       [Mendelson] p. 69.  The hypothesis ` ( ph -> A. x ph ) ` can be thought
       of as emulating " ` x ` is not free in ` ph ` ."  With this convention,
       the meaning of "not free" is less restrictive than the usual textbook
       definition; for example ` x ` would not (for us) be free in ` x = x ` by
       ~ hbequid .  This theorem scheme can be proved as a metatheorem of
       Mendelson's axiom system, even though it is slightly stronger than his
       Axiom 5. $)
    stdpc5 $p |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) $=
      ( wi wal 19.21 biimpi ) ABECFABCFEABCDGH $.
      $( [22-Sep-1993] $)
  $}

  ${
    19.21bi.1 $e |- ( ph -> A. x ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    19.21bi $p |- ( ph -> ps ) $=
      ( wal ax-4 syl ) ABCEBDBCFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.21bbi.1 $e |- ( ph -> A. x A. y ps ) $.
    $( Inference removing double quantifier. $)
    19.21bbi $p |- ( ph -> ps ) $=
      ( wal 19.21bi ) ABDABDFCEGG $.
      $( [20-Apr-1994] $)
  $}

  ${
    19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90. $)
    19.23 $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( wi wal wex exim 19.9 syl6ib hbe1 hbim 19.8a imim1i alrimi impbii ) ABEZ
      CFZACGZBEZRSBCGBABCHBCDIJTQCSBCACKDLASBACMNOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    exlimi.1 $e |- ( ps -> A. x ps ) $.
    exlimi.2 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (The proof was
       shortened by Andrew Salmon, 13-May-2011.) $)
    exlimi $p |- ( E. x ph -> ps ) $=
      ( wi wex 19.23 mpgbi ) ABFACGBFCABCDHEI $.
      $( [16-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.23bi.1 $e |- ( E. x ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    19.23bi $p |- ( ph -> ps ) $=
      ( wex 19.8a syl ) AACEBACFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    exlimd.1 $e |- ( ph -> A. x ph ) $.
    exlimd.2 $e |- ( ch -> A. x ch ) $.
    exlimd.3 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimd $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( wi wal wex alrimi 19.23 sylib ) ABCHZDIBDJCHANDEGKBCDFLM $.
      $( [28-Jan-1997] $)
  $}

  ${
    19.27.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27 $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( wa wal 19.26 19.3 anbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.28.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28 $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( wa wal 19.26 19.3 anbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.36 of [Margaris] p. 90. $)
    19.36 $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( wi wex wal 19.35 19.9 imbi2i bitri ) ABECFACGZBCFZELBEABCHMBLBCDIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.36i.1 $e |- ( ps -> A. x ps ) $.
    19.36i.2 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36i $p |- ( A. x ph -> ps ) $=
      ( wi wex wal 19.36 mpbi ) ABFCGACHBFEABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.37.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.37 of [Margaris] p. 90. $)
    19.37 $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( wi wex wal 19.35 19.3 imbi1i bitri ) ABECFACGZBCFZEAMEABCHLAMACDIJK $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.38 of [Margaris] p. 90. $)
  19.38 $p |- ( ( E. x ph -> A. x ps ) -> A. x ( ph -> ps ) ) $=
    ( wex wal wi hbe1 hba1 hbim 19.8a ax-4 imim12i alrimi ) ACDZBCEZFABFCNOCACG
    BCHIANOBACJBCKLM $.
    $( [5-Aug-1993] $)

  $( Theorem 19.39 of [Margaris] p. 90. $)
  19.39 $p |- ( ( E. x ph -> E. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wex wi wal 19.2 imim1i 19.35 sylibr ) ACDZBCDZEACFZLEABECDMKLACCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  $( Theorem 19.24 of [Margaris] p. 90. $)
  19.24 $p |- ( ( A. x ph -> A. x ps ) -> E. x ( ph -> ps ) ) $=
    ( wal wi wex 19.2 imim2i 19.35 sylibr ) ACDZBCDZEKBCFZEABECFLMKBCCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  ${
    19.32.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.32 of [Margaris] p. 90. $)
    19.32 $p |- ( A. x ( ph \/ ps ) <-> ( ph \/ A. x ps ) ) $=
      ( wn wi wal wo hbn 19.21 df-or albii 3bitr4i ) AEZBFZCGNBCGZFABHZCGAPHNBC
      ACDIJQOCABKLAPKM $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.31.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.31 of [Margaris] p. 90. $)
    19.31 $p |- ( A. x ( ph \/ ps ) <-> ( A. x ph \/ ps ) ) $=
      ( wo wal 19.32 orcom albii 3bitr4i ) BAEZCFBACFZEABEZCFLBEBACDGMKCABHILBH
      J $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.44.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.44 of [Margaris] p. 90. $)
    19.44 $p |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ ps ) ) $=
      ( wo wex 19.43 19.9 orbi2i bitri ) ABECFACFZBCFZEKBEABCGLBKBCDHIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    19.45.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.45 of [Margaris] p. 90. $)
    19.45 $p |- ( E. x ( ph \/ ps ) <-> ( ph \/ E. x ps ) ) $=
      ( wo wex 19.43 19.9 orbi1i bitri ) ABECFACFZBCFZEALEABCGKALACDHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( Theorem 19.34 of [Margaris] p. 90. $)
  19.34 $p |- ( ( A. x ph \/ E. x ps ) -> E. x ( ph \/ ps ) ) $=
    ( wal wex wo 19.2 orim1i 19.43 sylibr ) ACDZBCEZFACEZLFABFCEKMLACCGHABCIJ
    $.
    $( [5-Aug-1993] $)

  ${
    19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.41 of [Margaris] p. 90.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    19.41 $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( wa wex 19.40 id exlimi anim2i syl pm3.21 eximd impcom impbii ) ABEZCFZA
      CFZBEZQRBCFZESABCGTBRBBCDBHIJKBRQBAPCDBALMNO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    19.42.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.42 of [Margaris] p. 90. $)
    19.42 $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( wa wex 19.41 exancom ancom 3bitr4i ) BAECFBCFZAEABECFAKEBACDGABCHAKIJ
      $.
      $( [18-Aug-1993] $)
  $}

  $( Swap 1st and 3rd existential quantifiers. $)
  excom13 $p |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) $=
    ( wex excom exbii 3bitri ) ADEZCEBEIBEZCEABEZDEZCEKCEDEIBCFJLCABDFGKCDFH $.
    $( [9-Mar-1995] $)

  $( Rotate existential quantifiers. $)
  exrot3 $p |- ( E. x E. y E. z ph <-> E. y E. z E. x ph ) $=
    ( wex excom13 excom bitri ) ADECEBEABEZCEDEIDECEABCDFIDCGH $.
    $( [17-Mar-1995] $)

  $( Rotate existential quantifiers twice. $)
  exrot4 $p |- ( E. x E. y E. z E. w ph <-> E. z E. w E. x E. y ph ) $=
    ( wex excom13 exbii bitri ) AEFDFCFZBFACFZDFEFZBFKBFEFDFJLBACDEGHKBEDGI $.
    $( [9-Mar-1995] $)

  ${
    nexr.1 $e |- -. E. x ph $.
    $( Inference from ~ 19.8a .  (Contributed by Jeff Hankins, 26-Jul-2009.) $)
    nexr $p |- -. ph $=
      ( wex 19.8a mto ) AABDCABEF $.
      $( [26-Jul-2009] $)
  $}

  ${
    hbim1.1 $e |- ( ph -> A. x ph ) $.
    hbim1.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( A closed form of ~ hbim . $)
    hbim1 $p |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) $=
      ( wi wal a2i 19.21 sylibr ) ABFZABCGZFKCGABLEHABCDIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    exan.1 $e |- ( E. x ph /\ ps ) $.
    $( Place a conjunct in the scope of an existential quantifier.  (The proof
       was shortened by Andrew Salmon, 25-May-2011.) $)
    exan $p |- E. x ( ph /\ ps ) $=
      ( wex wal wa hbe1 19.28 mpgbi 19.29r ax-mp ) ACEZBCFGZABGCEMBGNCMBCACHIDJ
      ABCKL $.
      $( [25-May-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    hbnd.1 $e |- ( ph -> A. x ph ) $.
    hbnd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbn . $)
    hbnd $p |- ( ph -> ( -. ps -> A. x -. ps ) ) $=
      ( wal wi wn alrimi hbnt syl ) ABBCFGZCFBHZMCFGALCDEIBCJK $.
      $( [3-Jan-2002] $)
  $}

  ${
    hbimd.1 $e |- ( ph -> A. x ph ) $.
    hbimd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbimd.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbim . $)
    hbimd $p |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) $=
      ( wi wal wn hbnd pm2.21 alimi syl6com ax-1 ja com12 ) BCHZARDIZBCASHABJZT
      DISABDEFKTRDBCLMNACCDISGCRDCBOMNPQ $.
      $( [1-Jan-2002] $)
  $}

  ${
    hbbid.1 $e |- ( ph -> A. x ph ) $.
    hbbid.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbbid.3 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbbi . $)
    hbbid $p |- ( ph -> ( ( ps <-> ch ) -> A. x ( ps <-> ch ) ) ) $=
      ( wi wa wal wb hbimd anim12d dfbi2 albiim 3imtr4g ) ABCHZCBHZIQDJZRDJZIBC
      KZUADJAQSRTABCDEFGLACBDEGFLMBCNBCDOP $.
      $( [1-Jan-2002] $)
  $}

  ${
    hbexd.1 $e |- ( ph -> A. y ph ) $.
    hbexd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbex . $)
    hbexd $p |- ( ph -> ( E. y ps -> A. x E. y ps ) ) $=
      ( wex wal eximd 19.12 syl6 ) ABDGZBCHZDGLCHABMDEFIBDCJK $.
      $( [2-Jan-2002] $)
  $}

  $( Closed form of Theorem 19.21 of [Margaris] p. 90. $)
  19.21t $p |- ( A. x ( ph -> A. x ph ) ->
               ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ) $=
    ( wal wi alim imim2d com12 a4s hba1 ax-4 a1i hbimd imim2i alimi syl6 impbid
    ) AACDZEZCDZABEZCDZABCDZEZSUBUDECUBSUDUBRUCAABCFGHITUDUDCDUBTAUCCSCJSCKUCUC
    CDETBCJLMUDUACUCBABCKNOPQ $.
    $( [27-May-1997] $)

  $( Closed form of Theorem 19.23 of [Margaris] p. 90. $)
  19.23t $p |- ( A. x ( ps -> A. x ps ) ->
               ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ) $=
    ( wal wi wex hba1 ax-4 impbid2 imbi2d albid 19.23 syl5bb bitr3d ) BBCDZEZCD
    ZAOEZCDZABEZCDACFZBEZQRTCPCGQOBAQOBBCHPCHIZJKSUAOEQUBAOCBCGLQOBUAUCJMN $.
    $( [7-Nov-2005] $)

  ${
    aaan.1 $e |- ( ph -> A. y ph ) $.
    aaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange universal quantifiers. $)
    aaan $p |- ( A. x A. y ( ph /\ ps ) <-> ( A. x ph /\ A. y ps ) ) $=
      ( wa wal 19.28 albii hbal 19.27 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [12-Aug-1993] $)
  $}

  ${
    eeor.1 $e |- ( ph -> A. y ph ) $.
    eeor.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eeor $p |- ( E. x E. y ( ph \/ ps ) <-> ( E. x ph \/ E. y ps ) ) $=
      ( wo wex 19.45 exbii hbex 19.44 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [8-Aug-1994] $)
  $}

  $( Quantified "excluded middle."  Exercise 9.2a of Boolos, p. 111,
     _Computability and Logic_. $)
  qexmid $p |- E. x ( ph -> A. x ph ) $=
    ( wal 19.8a 19.35ri ) AABCZBFBDE $.
    $( [10-Dec-2000] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Equality theorems without distinct variables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that the original axiom ~ ax-9o can be derived from ~ ax-9 and
     others.  See ~ ax9from9o for the rederivation of ~ ax-9 from ~ ax-9o .

     Normally, ~ ax9o should be used rather than ~ ax-9o , except by theorems
     specifically studying the latter's properties. $)
  ax9o $p |- ( A. x ( x = y -> A. x ph ) -> ph ) $=
    ( weq wal wi wn ax-9 con3 al2imi mtoi ax-4 ax-6 nsyl4 syl ) BCDZABEZFZBEZQG
    ZBEZGASUAPGZBEBCHRTUBBPQIJKQAUAABLABMNO $.
    $( [5-Aug-1993] $)

  $( A variant of ~ ax-9 .  Axiom scheme C10' in [Megill] p. 448 (p. 16 of the
     preprint).

     This axiom is redundant, as shown by theorem ~ ax9o .

     Normally, ~ ax9o should be used rather than ~ ax-9o , except by theorems
     specifically studying the latter's properties. $)
  ax-9o $a |- ( A. x ( x = y -> A. x ph ) -> ph ) $.

  $( Rederivation of axiom ~ ax-9 from the orginal version, ~ ax-9o .  See
     ~ ax9o for the derivation of ~ ax-9o from ~ ax-9 .  Lemma L18 in [Megill]
     p. 446 (p. 14 of the preprint).

     This theorem should not be referenced in any proof.  Instead, use ~ ax-9
     above so that uses of ~ ax-9 can be more easily identified. $)
  ax9from9o $p |- -. A. x -. x = y $=
    ( weq wn wal wi ax-9o modal-b mpg ) ABCZJDAEDZAEFKAKABGJAHI $.
    $( [5-Aug-1993] $)

  $( At least one individual exists.  This is not a theorem of free logic,
     which is sound in empty domains.  For such a logic, we would add this
     theorem as an axiom of set theory (Axiom 0 of [Kunen] p. 10).  In the
     system consisting of ~ ax-5 through ~ ax-14 and ~ ax-17 , all axioms other
     than ~ ax-9 are believed to be theorems of free logic, although the system
     without ~ ax-9 is probably not complete in free logic. $)
  a9e $p |- E. x x = y $=
    ( weq wex wn wal ax-9 df-ex mpbir ) ABCZADJEAFEABGJAHI $.
    $( [5-Aug-1993] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.  This
     is often an axiom of equality in textbook systems, but we don't need it as
     an axiom since it can be proved from our other axioms (although the proof,
     as you can see below, is not as obvious as you might think).  This proof
     uses only axioms without distinct variable conditions and thus requires no
     dummy variables.  A simpler proof, similar to Tarki's, is possible if we
     make use of ~ ax-17 ; see the proof of ~ equid1 .  See ~ equidALT for an
     alternate proof. $)
  equid $p |- x = x $=
    ( weq wal wn ax-9 hbn1 wi ax-12 pm2.43i con3d alrimi mt3 a4i ) AABZANACZNDZ
    ACAAEODZPANAFQPQNOQNOGAAAHIJIKLM $.
    $( [30-Nov-2008] $)

  $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
     Alternate proof of ~ equid from older axioms ~ ax-6o and ~ ax-9o . $)
  equidALT $p |- x = x $=
    ( weq wal wn wi ax-12 pm2.43i alimi ax-9o syl ax-6o pm2.61i ) AABZACZDZACZM
    PMNEZACMOQAOQAAAFGHMAAIJMAKL $.
    $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Identity law for equality (reflexivity).  Lemma 6 of [Tarski] p. 68.
       This proof is similar to Tarski's and makes use of a dummy variable
       ` y ` .  See ~ equid for a proof that avoids dummy variables (but is
       less intuitive). $)
    equid1 $p |- x = x $=
      ( vy weq wex a9e ax-17 ax-8 pm2.43i exlimi ax-mp ) BACZBDAACZBAEKLBLBFKLB
      AAGHIJ $.
      $( [1-Apr-2005] $)
  $}

  $( One of the two equality axioms of standard predicate calculus, called
     reflexivity of equality.  (The other one is ~ stdpc7 .)  Axiom 6 of
     [Mendelson] p. 95.  Mendelson doesn't say why he prepended the redundant
     quantifier, but it was probably to be compatible with free logic (which is
     valid in the empty domain). $)
  stdpc6 $p |- A. x x = x $=
    ( weq equid ax-gen ) AABAACD $.
    $( [16-Feb-2005] $)

  $( Commutative law for equality.  Lemma 7 of [Tarski] p. 69. $)
  equcomi $p |- ( x = y -> y = x ) $=
    ( weq equid1 ax-8 mpi ) ABCAACBACADABAEF $.
    $( [5-Aug-1993] $)

  $( Commutative law for equality. $)
  equcom $p |- ( x = y <-> y = x ) $=
    ( weq equcomi impbii ) ABCBACABDBADE $.
    $( [20-Aug-1993] $)

  ${
    equcoms.1 $e |- ( x = y -> ph ) $.
    $( An inference commuting equality in antecedent.  Used to eliminate the
       need for a syllogism. $)
    equcoms $p |- ( y = x -> ph ) $=
      ( weq equcomi syl ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  $( A transitive law for equality. $)
  equtr $p |- ( x = y -> ( y = z -> x = z ) ) $=
    ( weq wi ax-8 equcoms ) BCDACDEBABACFG $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  Lemma L17 in [Megill] p. 446 (p. 14 of the
     preprint). $)
  equtrr $p |- ( x = y -> ( z = x -> z = y ) ) $=
    ( weq equtr com12 ) CADABDCBDCABEF $.
    $( [23-Aug-1993] $)

  $( A transitive law for equality.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equtr2 $p |- ( ( x = z /\ y = z ) -> x = y ) $=
    ( weq wi equtrr equcoms impcom ) BCDACDZABDZIJECBCBAFGH $.
    $( [25-May-2011] $) $( [12-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ1 $p |- ( x = y -> ( x = z <-> y = z ) ) $=
    ( weq ax-8 equtr impbid ) ABDACDBCDABCEABCFG $.
    $( [5-Aug-1993] $)

  $( An equivalence law for equality. $)
  equequ2 $p |- ( x = y -> ( z = x <-> z = y ) ) $=
    ( weq equtrr wi equcoms impbid ) ABDCADZCBDZABCEJIFBABACEGH $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ1 $p |- ( x = y -> ( x e. z <-> y e. z ) ) $=
    ( weq wel ax-13 wi equcoms impbid ) ABDACEZBCEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  $( An identity law for the non-logical predicate. $)
  elequ2 $p |- ( x = y -> ( z e. x <-> z e. y ) ) $=
    ( weq wel ax-14 wi equcoms impbid ) ABDCAEZCBEZABCFKJGBABACFHI $.
    $( [5-Aug-1993] $)

  ${
    ax11i.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    ax11i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference that has ~ ax-11 (without ` A. y ` ) as its conclusion and
       doesn't require ~ ax-10 , ~ ax-11 , or ~ ax-12 for its proof.  The
       hypotheses may be eliminable without one or more of these axioms in
       special cases.  Proof similar to Lemma 16 of [Tarski] p. 70. $)
    ax11i $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wi wal biimprcd alrimi syl6bi ) CDGZABMAHZCIEBNCFMABEJKL $.
      $( [20-May-2008] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Axioms ax-10 and ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Show that ~ ax-10o can be derived from ~ ax-10 .  An open problem is
     whether this theorem can be derived from ~ ax-10 and the others when
     ~ ax-11 is replaced with ~ ax-11o .  See theorem ~ ax10from10o for the
     rederivation of ~ ax-10 from ~ ax10o .

     Normally, ~ ax10o should be used rather than ~ ax-10o , except by theorems
     specifically studying the latter's properties. $)
  ax10o $p |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $=
    ( weq wal wi ax-10 ax-11 equcoms a4s pm2.27 al2imi sylsyld ) BCDZBECBDZCEAB
    EZOAFZCEZACEBCGNPRFZBSCBACBHIJOQACOAKLM $.
    $( [16-May-2008] $)

  $( Axiom ~ ax-10o ("o" for "old") was the original version of ~ ax-10 ,
     before it was discovered (in May 2008) that the shorter ~ ax-10 could
     replace it.  It appears as Axiom scheme C11' in [Megill] p. 448 (p. 16 of
     the preprint).

     This axiom is redundant, as shown by theorem ~ ax10o .

     Normally, ~ ax10o should be used rather than ~ ax-10o , except by theorems
     specifically studying the latter's properties. $)
  ax-10o $a |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) $.

  $( Rederivation of ~ ax-10 from original version ~ ax-10o .  See theorem
     ~ ax10o for the derivation of ~ ax-10o from ~ ax-10 .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-10
     above so that uses of ~ ax-10 can be more easily identified. $)
  ax10from10o $p |- ( A. x x = y -> A. y y = x ) $=
    ( weq wal ax-10o pm2.43i equcomi alimi syl ) ABCZADZJBDZBACZBDKLJABEFJMBABG
    HI $.
    $( [16-May-2008] $)

  $( Commutation law for identical variable specifiers.  The antecedent and
     consequent are true when ` x ` and ` y ` are substituted with the same
     variable.  Lemma L12 in [Megill] p. 445 (p. 12 of the preprint).  Version
     of ~ alequcom using ax-10o . $)
  alequcom-o $p |- ( A. x x = y -> A. y y = x ) $=
    ( ax10from10o ) ABC $.
    $( [5-Aug-1993] $)

  ${
    alequcoms-o.1 $e |- ( A. x x = y -> ph ) $.
    $( A commutation rule for identical variable specifiers.  Version of
       ~ alequcoms using ax-10o . $)
    alequcoms-o $p |- ( A. y y = x -> ph ) $=
      ( weq wal alequcom-o syl ) CBECFBCEBFACBGDH $.
      $( [5-Aug-1993] $)
  $}

  ${
    nalequcoms-o.1 $e |- ( -. A. x x = y -> ph ) $.
    $( A commutation rule for distinct variable specifiers.  Version of
       ~ nalequcoms using ~ ax-10o . $)
    nalequcoms-o $p |- ( -. A. y y = x -> ph ) $=
      ( weq wal alequcom-o nsyl4 con1i ) ACBECFZBCEBFJABCGDHI $.
      $( [2-Jan-2002] $)
  $}

  $( All variables are effectively bound in an identical variable specifier. $)
  hbae $p |- ( A. x x = y -> A. z A. x x = y ) $=
    ( weq wal wi ax-4 ax-12 syl7 ax10o alequcoms pm2.43i syl5 pm2.61ii a5i ax-7
    wn syl ) ABDZAEZSCEZAETCESUAACADCEZCBDCEZTUAFZTSUBQUCQUASAGABCHIUDACSACJKUD
    BCTSBEZBCDBEUATUESABJLSBCJMKNOSACPR $.
    $( [5-Aug-1993] $)
  $( All variables are effectively bound in an identical variable specifier.
     Version of ~ hbae using ~ ax-10o . $)
  hbae-o $p |- ( A. x x = y -> A. z A. x x = y ) $=
    ( weq wal wi wn ax-4 syl7 ax-10o alequcoms-o pm2.43i syl5 pm2.61ii a5i ax-7
    ax-12 syl ) ABDZAEZSCEZAETCESUAACADCEZCBDCEZTUAFZTSUBGUCGUASAHABCQIUDACSACJ
    KUDBCTSBEZBCDBEUATUESABJLSBCJMKNOSACPR $.
    $( [5-Aug-1993] $)

  ${
    hbalequs.1 $e |- ( A. z A. x x = y -> ph ) $.
    $( Rule that applies ~ hbae to antecedent. $)
    hbaes $p |- ( A. x x = y -> ph ) $=
      ( weq wal hbae syl ) BCFBGZJDGABCDHEI $.
      $( [5-Aug-1993] $)
  $}

  $( All variables are effectively bound in a distinct variable specifier.
     Lemma L19 in [Megill] p. 446 (p. 14 of the preprint). $)
  hbnae $p |- ( -. A. x x = y -> A. z -. A. x x = y ) $=
    ( weq wal hbae hbn ) ABDAECABCFG $.
    $( [5-Aug-1993] $)
  $( All variables are effectively bound in a distinct variable specifier.
     Lemma L19 in [Megill] p. 446 (p. 14 of the preprint).  Version of ~ hbnae
     using ~ ax-10o . $)
  hbnae-o $p |- ( -. A. x x = y -> A. z -. A. x x = y ) $=
    ( weq wal hbae-o hbn ) ABDAECABCFG $.
    $( [5-Aug-1993] $)

  ${
    hbnalequs.1 $e |- ( A. z -. A. x x = y -> ph ) $.
    $( Rule that applies ~ hbnae to antecedent. $)
    hbnaes $p |- ( -. A. x x = y -> ph ) $=
      ( weq wal wn hbnae syl ) BCFBGHZKDGABCDIEJ $.
      $( [5-Aug-1993] $)
  $}

  $( Lemma used in proofs of substitution properties.  (The proof was shortened
     by Mario Carneiro, 20-May-2014.) $)
  equs4 $p |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) $=
    ( cv wceq wi wal wa wex a9e 19.29 mpan2 ancl imp eximi syl ) BDCDEZAFZBGZRQ
    HZBIZQAHZBISQBIUABCJRQBKLTUBBRQUBQAMNOP $.
    $( [20-May-2014] $) $( [5-Aug-1993] $)

  ${
    equsal.1 $e |- ( ps -> A. x ps ) $.
    equsal.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    equsal $p |- ( A. x ( x = y -> ph ) <-> ps ) $=
      ( weq wi wal 19.3 syl6bbr pm5.74i albii a1d alrimi ax9o impbii bitr4i ) C
      DGZAHZCISBCIZHZCIZBTUBCSAUASABUAFBCEJKLMBUCBUBCEBUASENOBCDPQR $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    equsex.1 $e |- ( ps -> A. x ps ) $.
    equsex.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( A useful equivalence related to substitution. $)
    equsex $p |- ( E. x ( x = y /\ ph ) <-> ps ) $=
      ( weq wn wi wex wal exnal df-an exbii hbn notbid equsal con2bii 3bitr4i
      wa ) CDGZAHZIZHZCJUCCKZHUAATZCJBUCCLUFUDCUAAMNUEBUBBHCDBCEOUAABFPQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    dvelimfALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Proof of ~ dvelimf that uses ~ ax-10o (in the form of ~ ax10o ) but not
       ~ ax-11o , ~ ax-10 , or ~ ax-11 (if we replace uses of ~ ax10o by
       ~ ax-10o in the proofs of referenced theorems).  See ~ dvelimALT for a
       proof (of the distinct variable version ~ dvelim ) that doesn't require
       ~ ax-10 .  It is not clear whether a proof is possible that uses ~ ax-10
       but avoids ~ ax-11 , ~ ax-11o , and ~ ax-10o . $)
    dvelimfALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi hba1 ax10o alequcoms syl5 a1d wa hbnae hban ax-12 imp a1i
      hbimd hbald ex pm2.61i equsal albii 3imtr3g ) CDICJKZEDIZALZEJZUNCJZBBCJC
      EICJZUKUNUOLZLUPUQUKUNUNEJZUPUOUMEMURUOLECUNECNOPQUPKZUKUQUSUKRZUMCEUSUKE
      CEESCDESTUTULACUSUKCCECSCDCSTUSUKULULCJLEDCUAUBAACJLUTFUCUDUEUFUGABEDGHUH
      ZUNBCVAUIUJ $.
      $( [12-Nov-2002] $)
  $}

  ${
    dvelimf-o.1 $e |- ( ph -> A. x ph ) $.
    dvelimf-o.2 $e |- ( ps -> A. z ps ) $.
    dvelimf-o.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Proof of ~ dvelimf that uses ~ ax-10o but not ~ ax-11o , ~ ax-10 , or
       ~ ax-11 .  Version of ~ dvelimfALT using ~ ax-10o instead of
       ~ ax10o . $)
    dvelimf-o $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi hba1 ax-10o alequcoms-o syl5 a1d wa hbnae-o hban ax-12 ex
      imp a1i hbimd hbald pm2.61i equsal albii 3imtr3g ) CDICJKZEDIZALZEJZUNCJZ
      BBCJCEICJZUKUNUOLZLUPUQUKUNUNEJZUPUOUMEMURUOLECUNECNOPQUPKZUKUQUSUKRZUMCE
      USUKECEESCDESTUTULACUSUKCCECSCDCSTUSUKULULCJLEDCUAUCAACJLUTFUDUEUFUBUGABE
      DGHUHZUNBCVAUIUJ $.
      $( [12-Nov-2002] $)
  $}

  ${
    dral1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral1 $p |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) $=
      ( weq wal hbae biimpd alimd ax10o syld biimprd wi alequcoms impbid ) CDFC
      GZACGZBDGZQRBCGSQABCCDCHQABEIJBCDKLQSADGZRQBADCDDHQABEMJTRNDCADCKOLP $.
      $( [24-Nov-1994] $)
  $}

  ${
    dral1-o.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint).  Version of
       ~ dral1 using ~ ax-10o . $)
    dral1-o $p |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) $=
      ( weq wal hbae-o biimpd alimd ax-10o syld biimprd wi alequcoms-o impbid )
      CDFCGZACGZBDGZQRBCGSQABCCDCHQABEIJBCDKLQSADGZRQBADCDDHQABEMJTRNDCADCKOLP
      $.
      $( [24-Nov-1994] $)
  $}

  ${
    dral2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    dral2 $p |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) $=
      ( weq wal hbae albid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    dral2-o.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint).  Version of
       ~ dral2 using ~ ax-10o . $)
    dral2-o $p |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) $=
      ( weq wal hbae-o albid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex1.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex1 $p |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) $=
      ( weq wal wn wex notbid dral1 df-ex 3bitr4g ) CDFCGZAHZCGZHBHZDGZHACIBDIN
      PROQCDNABEJKJACLBDLM $.
      $( [27-Feb-2005] $)
  $}

  ${
    drex2.1 $e |- ( A. x x = y -> ( ph <-> ps ) ) $.
    $( Formula-building lemma for use with the Distinctor Reduction Theorem.
       Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
    drex2 $p |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) $=
      ( weq wal hbae exbid ) CDGCHABECDEIFJ $.
      $( [27-Feb-2005] $)
  $}

  ${
    exdistrf.1 $e |- ( -. A. x x = y -> ( ph -> A. y ph ) ) $.
    $( Distribution of existential quantifiers, with a bound-variable
       hypothesis saying that ` y ` is not free in ` ph ` , but ` x ` can be
       free in ` ph ` (and there is no distinct variable condition on ` x ` and
       ` y ` ).  (Contributed by Mario Carneiro, 20-Mar-2013.) $)
    exdistrf $p |- ( E. x E. y ( ph /\ ps ) -> E. x ( ph /\ E. y ps ) ) $=
      ( weq wal wa wex wi biidd drex1 drex2 hbe1 19.8a anim2i eximi sylbi hbnae
      19.9 syl6bir wn 19.40 19.9d anim1d syl5 eximd pm2.61i ) CDFCGZABHZDIZCIZA
      BDIZHZCIZJUIULUJCIZCIZUOUPUKCDCUJUJCDUIUJKLMUQUPUOUPCUJCNTUJUNCBUMABDOPQR
      UAUIUBZUKUNCCDCSUKADIZUMHURUNABDUCURUSAUMAURDCDDSEUDUEUFUGUH $.
      $( [20-Mar-2013] $)
  $}

  $( Closed theorem form of ~ a4im . $)
  a4imt $p |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) ->
              ( A. x ph -> ps ) ) $=
    ( wal wi weq wa imim2 imim2d imp com23 al2imi ax9o syl6 ) BBCEZFZCDGZABFZFZ
    HZCEACERPFZCEBUAAUBCUARAPQTRAPFZFQSUCRBPAIJKLMBCDNO $.
    $( [15-Jan-2008] $)

  ${
    a4im.1 $e |- ( ps -> A. x ps ) $.
    a4im.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Specialization, using implicit substitition.  Compare Lemma 14 of
       [Tarski] p. 70.  The ~ a4im series of theorems requires that only one
       direction of the substitution hypothesis hold. $)
    a4im $p |- ( A. x ph -> ps ) $=
      ( wal weq wi syl6com alimi ax9o syl ) ACGCDHZBCGZIZCGBAPCNABOFEJKBCDLM $.
      $( [8-May-2008] $) $( [5-Aug-1993] $)
  $}

  ${
    a4ime.1 $e |- ( ph -> A. x ph ) $.
    a4ime.2 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Existential introduction, using implicit substitition.  Compare Lemma 14
       of [Tarski] p. 70. $)
    a4ime $p |- ( ph -> E. x ps ) $=
      ( wn wal wex hbn weq con3d a4im con2i df-ex sylibr ) ABGZCHZGBCIRAQAGCDAC
      EJCDKABFLMNBCOP $.
      $( [7-Aug-1994] $)
  $}

  ${
    a4imed.1 $e |- ( ch -> A. x ch ) $.
    a4imed.2 $e |- ( ch -> ( ph -> A. x ph ) ) $.
    a4imed.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Deduction version of ~ a4ime . $)
    a4imed $p |- ( ch -> ( ph -> E. x ps ) ) $=
      ( wex wa wal adantr imp 19.26 sylanbrc weq adantld a4ime ex ) CABDICAJZBD
      ETCDKZADKZTDKCUAAFLCAUBGMCADNODEPABCHQRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv1.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv1.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv1.3 $e |- ( ph -> ( x = y -> ( ps -> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv1 $p |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) $=
      ( wal wi a4s al2imi ax-7 syl6 weq com23 syl6d ax9o a7s syld ) AEIZDIZBDIZ
      UCEIZCEIZUBUCBEIZDIUDUABUFDABUFJEFKLBDEMNAUDUEJEDADIZUCCEUGUCDEOZCDIZJZDI
      CABUJDABUHCUIAUHBCHPGQLCDERNLST $.
      $( [5-Aug-1993] $)
  $}


  ${
    cbv2.1 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbv2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    cbv2.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbv2 $p |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal weq wb wi bi1 syl6 cbv1 equcomi bi2 syl56 a7s impbid ) AEIDIBDIZCEI
      ZABCDEFGADEJZBCKZBCLHBCMNOAUBUALEDACBEDGFEDJUCAUDCBLEDPHBCQROST $.
      $( [5-Aug-1993] $)
  $}

  ${
    cbv3.1 $e |- ( ph -> A. y ph ) $.
    cbv3.2 $e |- ( ps -> A. x ps ) $.
    cbv3.3 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition, that
       does not use ~ ax-12 . $)
    cbv3 $p |- ( A. x ph -> A. y ps ) $=
      ( wi wal imim2i a1i weq cbv1 id ax-gen mpg ) AAHZDIACIBDIHCQABCDAADIAEJBB
      CIHQFKCDLABHHQGKMQDANOP $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbv3ALT $p |- ( A. x ph -> A. y ps ) $=
      ( weq wal wi a1i cbv1 stdpc6 mpg ) DDHZDIACIBDIJCOABCDAADIJOEKBBCIJOFKCDH
      ABJJOGKLDMN $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbval.1 $e |- ( ph -> A. y ph ) $.
    cbval.2 $e |- ( ps -> A. x ps ) $.
    cbval.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    cbval $p |- ( A. x ph <-> A. y ps ) $=
      ( wal weq biimpd cbv3 wb equcoms biimprd impbii ) ACHBDHABCDEFCDIABGJKBAD
      CFEDCIABABLCDGMNKO $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    cbvex.1 $e |- ( ph -> A. y ph ) $.
    cbvex.2 $e |- ( ps -> A. x ps ) $.
    cbvex.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex $p |- ( E. x ph <-> E. y ps ) $=
      ( wex wn wal df-ex hbn weq notbid cbval xchbinx bitr4i ) ACHZBIZDJZIBDHRA
      IZCJTACKUASCDADELBCFLCDMABGNOPBDKQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    chv2.1 $e |- ( ps -> A. x ps ) $.
    chv2.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv2.3 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem.  (Contributed
       by Raph Levien, 9-Jul-2003.) $)
    chvar $p |- ps $=
      ( weq biimpd a4im mpg ) ABCABCDECDHABFIJGK $.
      $( [9-Jul-2003] $)
  $}

  $( A variable introduction law for equality.  Lemma 15 of [Monk2] p. 109,
     however we do not require ` z ` to be distinct from ` x ` and ` y `
     (making the proof longer).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  equvini $p |- ( x = y -> E. z ( x = z /\ z = y ) ) $=
    ( weq wal wa wex wi equcomi alimi a9e jctir a1d 19.29 syl6 eximi ax-mp a1ii
    wn hbnae anc2ri 19.29r wo ioran hban ax-12 ax-8 anc2li equcoms a4imed sylbi
    imp ecase3 ) CADZCEZCBDZCEZABDZACDZUPFZCGZHZUOURUSCEZUPCGZFZVAUOVEURUOVCVDU
    NUSCCAIZJCBKLMUSUPCNOUQURUSCGZUQFVAUQURVGUQURVGUNCGVGCAKUNUSCVFPQRUAUSUPCUB
    OUOUQUCSUOSZUQSZFZVBUOUQUDURUTVJCAVHVICCACTCBCTUEVHVIURURCEHABCUFULURUTHACU
    SURUPACBUGUHUIUJUKUM $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( A variable elimination law for equality with no distinct variable
     requirements.  (Compare ~ equvini .) $)
  equveli $p |- ( A. z ( z = x <-> z = y ) -> x = y ) $=
    ( weq wb wal wi wa albiim equequ1 imbi12d a4s dral1 equid ax-4 syl6bi hbnae
    mpi wn pm2.61i equcomi syl adantld dral2 a1bi biimpri a1d hbequid a1i ax-12
    hban hbimd alrimi equtr ax-8 imim12d ax-gen 19.26 a4imt sylbir sylancl mpii
    imp ex adantrd sylbi ) CADZCBDZECFVGVHGZCFZVHVGGZCFZHZABDZVGVHCIVHCFZVMVNGV
    OVLVNVJVOVLBBDZBADZGZBFZVNVKVRCBVHVKVRECVHVHVPVGVQCBBJCBAJKLMVSVQVNVSVPVQBN
    VRBORBAUAUBPUCVOSZVJVNVLVGCFZVTVJVNGZGWAWBVTWAVJAADZVNGZCFZVNVIWDCACVGVIWDE
    CVGVGWCVHVNCAAJCABJKLUDWDVNCVNWDWCVNANZUEUFLPUGWASZVTWBWGVTHZVJWCVNWFWHWDWE
    GZCFZVGVIWDGGZCFZVJWDGZWHWICWGVTCCACQCBCQUKZWHWCVNCWNWCWCCFGWHACUHUIWGVTVNV
    NCFGABCUJVCULUMWKCVGWCVGVHVNCAAUNCABUOUPUQWJWLHWIWKHCFWMWIWKCURVIWDCAUSUTVA
    VBVDTVETVF $.
    $( [1-Mar-2013] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Substitution (without distinct variables)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [ $. $( Left bracket $)
  $c / $. $( Division. $)
  $c ] $.  $( Right bracket $)

  $( --- Start of patch to prevent connective overloading $)
  ${
    $v A $.
    wsbc.cA $f class A $.
    $( Extend wff notation to include the proper substitution of a class for a
       set.  Read this notation as "the proper substitution of class ` A ` for
       set variable ` x ` in wff ` ph ` ."

       (The purpose of introducing ` wff [ A / x ] ph ` here is to allow us to
       express i.e.  "prove" the ~ wsb of predicate calculus in terms of the
       ~ wsbc of set theory, so that we don't "overload" its connectives with
       two syntax definitions.  This is done to prevent ambiguity that would
       complicate some Metamath parsers.  The class variable ` A ` is
       introduced temporarily for the purpose of this definition but otherwise
       not used in predicate calculus.  See ~ df-sbc for more information on
       the set theory usage of ~ wsbc .) $)
    wsbc $a wff [ A / x ] ph $.
  $}

  $( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     (Instead of introducing ~ wsb as an axiomatic statement, as was done in an
     older version of this database, we introduce it by "proving" a special
     case of set theory's more general ~ wsbc .  This lets us avoid overloading
     its connectives, thus preventing ambiguity that would complicate some
     Metamath parsers.  Note:  To see the proof steps of this syntax proof,
     type "show proof wsb /all" in the Metamath program.) $)
  wsb $p wff [ y / x ] ph $=
    ( cv wsbc ) ABCDE $.
    $( [24-Jan-2006] $)
  $( --- End of patch to prevent connective overloading $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include proper substitution (read "the wff that
     results when ` y ` is properly substituted for ` x ` in wff ` ph ` ").

     After we introduce ~ cv and ~ wsbc in set theory, this syntax construction
     becomes redundant, since it can be derived with the proof
     "wph vx vy cv wsbc". @)
  wsb @a wff [ y / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define proper substitution.  Remark 9.1 in [Megill] p. 447 (p. 15 of the
     preprint).  For our notation, we use ` [ y / x ] ph ` to mean "the wff
     that results when ` y ` is properly substituted for ` x ` in the wff
     ` ph ` ."  We can also use ` [ y / x ] ph ` in place of the "free for"
     side condition used in traditional predicate calculus; see, for example,
     ~ stdpc4 .

     Our notation was introduced in Haskell B. Curry's _Foundations of
     Mathematical Logic_ (1977), p. 316 and is frequently used in textbooks of
     lambda calculus and combinatory logic.  This notation improves the common
     but ambiguous notation, " ` ph ( y ) ` is the wff that results when ` y `
     is properly substituted for ` x ` in ` ph ( x ) ` ."  For example, if the
     original ` ph ( x ) ` is ` x = y ` , then ` ph ( y ) ` is ` y = y ` , from
     which we obtain that ` ph ( x ) ` is ` x = x ` .  So what exactly does
     ` ph ( x ) ` mean?  Curry's notation solves this problem.

     In most books, proper substitution has a somewhat complicated recursive
     definition with multiple cases based on the occurrences of free and bound
     variables in the wff.  Instead, we use a single formula that is exactly
     equivalent and gives us a direct definition.  We later prove that our
     definition has the properties we expect of proper substitution (see
     theorems ~ sbequ , ~ sbcom2 and ~ sbid2v ).

     Note that our definition is valid even when ` x ` and ` y ` are replaced
     with the same variable, as ~ sbid shows.  We achieve this by having ` x `
     free in the first conjunct and bound in the second.  We can also achieve
     this by using a dummy variable, as the alternate definition ~ dfsb7 shows
     (which some logicians may prefer because it doesn't mix free and bound
     variables).  Another version that mixes free and bound variables is
     ~ dfsb3 .  When ` x ` and ` y ` are distinct, we can express proper
     substitution with the simpler expressions of ~ sb5 and ~ sb6 .

     There are no restrictions on any of the variables, including what
     variables may occur in wff ` ph ` . $)
  df-sb $a |- ( [ y / x ] ph <->
              ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) $.

  ${
    sbimi.1 $e |- ( ph -> ps ) $.
    $( Infer substitution into antecedent and consequent of an implication. $)
    sbimi $p |- ( [ y / x ] ph -> [ y / x ] ps ) $=
      ( weq wi wa wex wsb imim2i anim2i eximi anim12i df-sb 3imtr4i ) CDFZAGZQA
      HZCIZHQBGZQBHZCIZHACDJBCDJRUATUCABQEKSUBCABQELMNACDOBCDOP $.
      $( [25-Jun-1998] $)
  $}

  ${
    sbbii.1 $e |- ( ph <-> ps ) $.
    $( Infer substitution into both sides of a logical equivalence. $)
    sbbii $p |- ( [ y / x ] ph <-> [ y / x ] ps ) $=
      ( wsb biimpi sbimi biimpri impbii ) ACDFBCDFABCDABEGHBACDABEIHJ $.
      $( [5-Aug-1993] $)
  $}

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb1 $p |- ( A. x x = y -> ( [ z / x ] ph <-> [ z / y ] ph ) ) $=
    ( weq wal wi wa wex wsb wb equequ1 a4s imbi1d anbi1d drex1 anbi12d 3bitr4g
    df-sb ) BCEZBFZBDEZAGZUBAHZBIZHCDEZAGZUFAHZCIZHABDJACDJUAUCUGUEUIUAUBUFATUB
    UFKBBCDLMZNUDUHBCUAUBUFAUJOPQABDSACDSR $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb1 $p |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) $=
    ( wsb weq wi wa wex df-sb simprbi ) ABCDBCEZAFKAGBHABCIJ $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution. $)
  sb2 $p |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) $=
    ( weq wi wal wa wex wsb ax-4 equs4 df-sb sylanbrc ) BCDZAEZBFONAGBHABCIOBJA
    BCKABCLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ1 $p |- ( x = y -> ( ph -> [ y / x ] ph ) ) $=
    ( weq wsb wa wi wex pm3.4 19.8a df-sb sylanbrc ex ) BCDZAABCEZNAFZNAGPBHONA
    IPBJABCKLM $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequ2 $p |- ( x = y -> ( [ y / x ] ph -> ph ) ) $=
    ( wsb weq wi wa wex df-sb simpl com12 syl5bi ) ABCDBCEZAFZMAGBHZGZMAABCIPMA
    NOJKL $.
    $( [5-Aug-1993] $)

  $( One of the two equality axioms of standard predicate calculus, called
     substitutivity of equality.  (The other one is ~ stdpc6 .)  Translated to
     traditional notation, it can be
     read:  " ` x = y -> ( ph ( x , x ) -> ph ( x , y ) ) ` , provided that
     ` y ` is free for ` x ` in ` ph ( x , y ) ` ."  Axiom 7 of [Mendelson]
     p. 95. $)
  stdpc7 $p |- ( x = y -> ( [ x / y ] ph -> ph ) ) $=
    ( wsb wi sbequ2 equcoms ) ACBDAECBACBFG $.
    $( [15-Feb-2005] $)

  $( An equality theorem for substitution. $)
  sbequ12 $p |- ( x = y -> ( ph <-> [ y / x ] ph ) ) $=
    ( weq wsb sbequ1 sbequ2 impbid ) BCDAABCEABCFABCGH $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sbequ12r $p |- ( x = y -> ( [ x / y ] ph <-> ph ) ) $=
    ( wsb wb weq sbequ12 bicomd equcoms ) ACBDZAECBCBFAJACBGHI $.
    $( [26-Jun-2011] $) $( [6-Oct-2004] $)

  $( An equality theorem for substitution. $)
  sbequ12a $p |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) $=
    ( weq wsb sbequ12 wb equcoms bitr3d ) BCDAABCEACBEZABCFAJGCBACBFHI $.
    $( [5-Aug-1993] $)

  $( An identity theorem for substitution.  Remark 9.1 in [Megill] p. 447 (p.
     15 of the preprint). $)
  sbid $p |- ( [ x / x ] ph <-> ph ) $=
    ( wsb weq wb equid sbequ12 ax-mp bicomi ) AABBCZBBDAJEBFABBGHI $.
    $( [5-Aug-1993] $)

  $( The specialization axiom of standard predicate calculus.  It states that
     if a statement ` ph ` holds for all ` x ` , then it also holds for the
     specific case of ` y ` (properly) substituted for ` x ` .  Translated to
     traditional notation, it can be read:  " ` A. x ph ( x ) -> ph ( y ) ` ,
     provided that ` y ` is free for ` x ` in ` ph ( x ) ` ."  Axiom 4 of
     [Mendelson] p. 69.  See also ~ a4sbc and ~ ra4sbc . $)
  stdpc4 $p |- ( A. x ph -> [ y / x ] ph ) $=
    ( wal weq wi wsb ax-1 alimi sb2 syl ) ABDBCEZAFZBDABCGAMBALHIABCJK $.
    $( [5-Aug-1993] $)

  ${
    sbf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it. $)
    sbf $p |- ( [ y / x ] ph <-> ph ) $=
      ( wsb weq wex wa sb1 19.41 sylib simprd wal stdpc4 syl impbii ) ABCEZAQBC
      FZBGZAQRAHBGSAHABCIRABDJKLAABMQDABCNOP $.
      $( [17-Oct-2004] $) $( [5-Aug-1993] $)
  $}

  $( Substitution has no effect on a bound variable. $)
  sbf2 $p |- ( [ y / x ] A. x ph <-> A. x ph ) $=
    ( wal hba1 sbf ) ABDBCABEF $.
    $( [1-Jul-2005] $)

  ${
    sb6x.1 $e |- ( ph -> A. x ph ) $.
    $( Equivalence involving substitution for a variable not free.  (The proof
       was shortened by Andrew Salmon, 12-Aug-2011.) $)
    sb6x $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( cv wsbc wceq wi wal sbf biidd equsal bitr4i ) ABCEZFABENGZAHBIABCDJAABC
      DOAKLM $.
      $( [12-Aug-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    hbs1f.1 $e |- ( ph -> A. x ph ) $.
    $( If ` x ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` .
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    hbs1f $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wsb sbf hbxfrbi ) ABCEABABCDFDG $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  $( Substitution does not change an identical variable specifier. $)
  sbequ5 $p |- ( [ w / z ] A. x x = y <-> A. x x = y ) $=
    ( weq wal hbae sbf ) ABEAFCDABCGH $.
    $( [21-Dec-2004] $) $( [5-Aug-1993] $)

  $( Substitution does not change a distinctor. $)
  sbequ6 $p |- ( [ w / z ] -. A. x x = y <-> -. A. x x = y ) $=
    ( weq wal wn hbnae sbf ) ABEAFGCDABCHI $.
    $( [14-May-2005] $) $( [5-Aug-1993] $)

  ${
    sbt.1 $e |- ph $.
    $( A substitution into a theorem remains true.  (See ~ chvar and ~ chvarv
       for versions using implicit substitition.)  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    sbt $p |- [ y / x ] ph $=
      ( wsb hbth sbf mpbir ) ABCEADABCABDFGH $.
      $( [25-May-2011] $) $( [21-Jan-2004] $)
  $}

  $( Substitution applied to an atomic wff. $)
  equsb1 $p |- [ y / x ] x = y $=
    ( weq wi wsb sb2 id mpg ) ABCZIDIABEAIABFIGH $.
    $( [5-Aug-1993] $)

  $( Substitution applied to an atomic wff. $)
  equsb2 $p |- [ y / x ] y = x $=
    ( weq wi wsb sb2 equcomi mpg ) ABCBACZDIABEAIABFABGH $.
    $( [5-Aug-1993] $)

  ${
    sbied.1 $e |- ( ph -> A. x ph ) $.
    sbied.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    sbied.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit substitution (deduction
       version of ~ sbie ).  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sbied $p |- ( ph -> ( [ y / x ] ps <-> ch ) ) $=
      ( wsb wex weq wa sb1 wb wi bi1 syl6 imp3a syld wal eximd syl5 19.9d com23
      bi2 alimd sb2 impbid ) ABDEIZCAUICDJZCUIDEKZBLZDJAUJBDEMAULCDFAUKBCAUKBCN
      ZBCOHBCPQRUAUBCADFGUCSACCDTZUIGAUNUKBOZDTUIACUODFAUKCBAUKUMCBOHBCUEQUDUFB
      DEUGQSUH $.
      $( [25-May-2011] $) $( [30-Jun-1994] $)
  $}

  ${
    sbie.1 $e |- ( ps -> A. x ps ) $.
    sbie.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit substitution. $)
    sbie $p |- ( [ y / x ] ph <-> ps ) $=
      ( wi wsb wb id hbth wal a1i weq sbied ax-mp ) AAGZACDHBIAJZQABCDQCRKBBCLG
      QEMCDNABIGQFMOP $.
      $( [30-Jun-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Theorems using axiom ax-11
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5a $p |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) $=
    ( weq wal wa wi hba1 ax-11 imp exlimi ) BCDZACEZFLAGZBEZBNBHLMOABCIJK $.
    $( [2-Feb-2007] $)

  $( A property related to substitution that unlike ~ equs5 doesn't require a
     distinctor antecedent. $)
  equs5e $p |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) $=
    ( weq wa wex wn wi wal equs3 hbn1 ax-11 con3rr3 df-ex syl6ibr alrimi sylbi
    ) BCDZAEBFRAGZHZBIZGZRACFZHZBIABCJUBUDBTBKUBRSCIZGUCRUEUASBCLMACNOPQ $.
    $( [2-Feb-2007] $)

  $( A version of ~ sb4 that doesn't require a distinctor antecedent. $)
  sb4a $p |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) $=
    ( wal wsb weq wa wex wi sb1 equs5a syl ) ACDZBCEBCFZMGBHNAIBDMBCJABCKL $.
    $( [2-Feb-2007] $)

  ${
    equs45f.1 $e |- ( ph -> A. y ph ) $.
    $( Two ways of expressing substitution when ` y ` is not free in
       ` ph ` . $)
    equs45f $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wa wex wi wal anim2i eximi equs5a syl equs4 impbii ) BCEZAFZBGZPAHB
      IZRPACIZFZBGSQUABATPDJKABCLMABCNO $.
      $( [25-Apr-2008] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb6f $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( wsb weq wi wal sbimi sb4a syl sb2 impbii ) ABCEZBCFAGBHZNACHZBCEOAPBCDI
      ABCJKABCLM $.
      $( [30-Apr-2008] $)  $( [5-Aug-1993] $)

    $( Equivalence for substitution when ` y ` is not free in ` ph ` . $)
    sb5f $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6f equs45f bitr4i ) ABCEBCFZAGBHNAIBJABCDKABCDL
      M $.
      $( [18-May-2008] $)  $( [5-Aug-1993] $)
  $}

  $( One direction of a simplified definition of substitution that unlike ~ sb4
     doesn't require a distinctor antecedent. $)
  sb4e $p |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) $=
    ( wsb weq wa wex wi wal sb1 equs5e syl ) ABCDBCEZAFBGMACGHBIABCJABCKL $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2a $p |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) $=
    ( wal wsb weq wi sb4a sb2 a5i syl ) ACDBCEBCFAGZBDABCEZBDABCHLMBABCIJK $.
    $( [2-Feb-2007] $)

  $( Special case of a bound-variable hypothesis builder for substitution. $)
  hbsb2e $p |- ( [ y / x ] ph -> A. x [ y / x ] E. y ph ) $=
    ( wsb weq wex wi wal sb4e sb2 a5i syl ) ABCDBCEACFZGZBHMBCDZBHABCINOBMBCJKL
    $.
    $( [2-Feb-2007] $)

  ${
    hbsb3.1 $e |- ( ph -> A. y ph ) $.
    $( If ` y ` is not free in ` ph ` , ` x ` is not free in
       ` [ y / x ] ph ` . $)
    hbsb3 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( wsb wal sbimi hbsb2a syl ) ABCEZACFZBCEJBFAKBCDGABCHI $.
      $( [5-Aug-1993] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                  Predicate calculus with distinct variables
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the axiom of distinct variables ax-16
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x ps $.
    a4imv.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( A version of ~ a4im with a distinct variable requirement instead of a
       bound variable hypothesis. $)
    a4imv $p |- ( A. x ph -> ps ) $=
      ( ax-17 a4im ) ABCDBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $v f $.
    $( Define a temporary individual variable. $)
    aev.vf $f set f $.
    $d f u v $.  $d f u x y $.  $d u w $.
    $( A "distinctor elimination" lemma with no restrictions on variables in
       the consequent, proved without using ~ ax-16 .  (The proof was shortened
       by Andrew Salmon, 21-Jun-2011.) $)
    aev $p |- ( A. x x = y -> A. z w = v ) $=
      ( aev.vf vu weq wal hbae ax-8 a4imv alrimi equcomi alequcoms a5i alequcom
      syl6 3syl ) ABHZAIZDEHZCABCJUAFBHZFIZGEHZGIZUBUAUCFABFJTUCAFAFBKLMUDFGHZF
      IZEGHZEIUFUCUGFUGBFBFHZUGBGBGHUJGFHUGBGFKGFNRLOPUHUIEFGEJUGUIFEFEGKLMEGQS
      UEUBGDGDEKLSM $.
      $( [26-Jun-2011] $) $( [8-Nov-2006] $)
  $}

  ${
    $v f $.
    $( Define a temporary individual variable. $)
    aev-o.vf $f set f $.
    $d f u v $.  $d f u x y $.  $d u w $.
    $( A "distinctor elimination" lemma with no restrictions on variables in
       the consequent, proved without using ~ ax-16 .  Version of ~ aev using
       ~ ax-10o .  (The proof was shortened by Andrew Salmon, 21-Jun-2011.) $)
    aev-o $p |- ( A. x x = y -> A. z w = v ) $=
      ( aev-o.vf vu weq hbae-o ax-8 a4imv alrimi equcomi alequcoms-o alequcom-o
      wal syl6 a5i 3syl ) ABHZAPZDEHZCABCIUAFBHZFPZGEHZGPZUBUAUCFABFITUCAFAFBJK
      LUDFGHZFPZEGHZEPUFUCUGFUGBFBFHZUGBGBGHUJGFHUGBGFJGFMQKNRUHUIEFGEIUGUIFEFE
      GJKLEGOSUEUBGDGDEJKSL $.
      $( [26-Jun-2011] $) $( [8-Nov-2006] $)
  $}

  ${
    $d x y $.  $d z ph $.
    $( Theorem showing that ~ ax-16 is redundant if ~ ax-17 is included in the
       axiom system.  The important part of the proof is provided by ~ aev .

       See ~ ax16ALT for an alternate proof that does not require ~ ax-10 or
       ~ ax-12 .

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-16 below so that theorems needing ~ ax-16 can be more easily
       identified. $)
    ax16 $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz weq wal wi aev ax-17 sbequ12 biimpcd alimd hbsb3 stdpc7 cbv3 syl6com
      wsb syl ) BCEBFBDEZDFZAABFZGBCDBDHATABDQZDFUAASUBDADIZSAUBABDJKLUBADBABDU
      CMUCADBNOPR $.
      $( [8-Nov-2006] $)
  $}

  ${
    $d x y $.
    $( Axiom of Distinct Variables.  The only axiom of predicate calculus
       requiring that variables be distinct (if we consider ~ ax-17 to be a
       metatheorem and not an axiom).  Axiom scheme C16' in [Megill] p. 448 (p.
       16 of the preprint).  It apparently does not otherwise appear in the
       literature but is easily proved from textbook predicate calculus by
       cases.  It is a somewhat bizarre axiom since the antecedent is always
       false in set theory (see ~ dtru ), but nonetheless it is technically
       necessary as you can see from its uses.

       This axiom is redundant if we include ~ ax-17 ; see theorem ~ ax16 .
       Alternately, ~ ax-17 becomes logically redundant in the presence of this
       axiom, but without ~ ax-17 we lose the more powerful metalogic that
       results from being able to express the concept of a set variable not
       occurring in a wff (as opposed to just two set variables being
       distinct).  We retain ~ ax-16 here to provide logical completeness for
       systems with the simpler metalogic that results from omitting ~ ax-17 ,
       which might be easier to study for some theoretical purposes. $)
    ax-16 $a |- ( A. x x = y -> ( ph -> A. x ph ) ) $.
  $}

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  (This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.  Do not use it for later proofs - use ~ ax-17 instead, to
       avoid reference to the redundant axiom ~ ax-16 .) $)
    ax17eq $p |- ( x = y -> A. z x = y ) $=
      ( weq wal wi ax-12 ax-16 pm2.61ii ) CADCECBDCEABDZJCEFABCGJCAHJCBHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq2 $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax-17 equequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
    $( Quantifier introduction when one pair of variables is distinct.  Version
       of ~ dveeq2 using ~ ax-11o . $)
    dveeq2-o $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax-17 equequ2 dvelimf-o ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq2 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq2ALT $p |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $=
      ( vw weq ax17eq equequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [29-Apr-2008] $)
  $}


  ${
    $d x z $.  $d y z $.
    dvelimfALT2.1 $e |- ( ph -> A. x ph ) $.
    dvelimfALT2.2 $e |- ( ps -> A. z ps ) $.
    dvelimfALT2.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    dvelimfALT2.4 $e |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) $.
    $( Proof of ~ dvelimf using ~ dveeq2 (shown as the last hypothesis) instead
       of ~ ax-12 .  As a consequence, theorem ~ a12study2 shows that ~ ax-12
       could be replaced by ~ dveeq2 (the last hypothesis).  (Contributed by
       Andrew Salmon, 21-Jul-2011.) $)
    dvelimfALT2 $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( cv wceq wal wn wi ax-17 hbn1 a1i hbimd hbald equsal albii 3imtr3g ) CJD
      JZKZCLMZEJUCKZANZELZUHCLBBCLUEUGCEUEEOUEUFACUDCPIAACLNUEFQRSABEDGHTZUHBCU
      IUAUB $.
      $( [21-Jul-2011] $)
  $}

  ${
    $d z x $.
    $( A lemma for proving conditionless ZFC axioms. $)
    nd5 $p |- ( -. A. y y = x -> ( z = y -> A. x z = y ) ) $=
      ( cv wceq wal wi dveeq2 nalequcoms ) CDBDEZJAFGABABCHI $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x ch $.  $d x ph $.
    exlimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimdv $p |- ( ph -> ( E. x ps -> ch ) ) $=
      ( ax-17 exlimd ) ABCDADFCDFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11v2.1 $e |- ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) $.
    $( Recovery of ~ ax-11o from ~ ax11v .  This proof uses ~ ax-10 and
       ~ ax-11 .  TODO: figure out if this is useful, or if it should be
       simplified or eliminated. $)
    ax11v2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wex wi a9e wa wb equequ2 adantl dveeq2 imp hba1 imbi1d a4s
      albid syl imbi2d imbi12d mpbii ex exlimdv mpi ) BCFZBGHZDCFZDIUIAUIAJZBGZ
      JZJZDCKUJUKUODUJUKUOUJUKLZBDFZAUQAJZBGZJZJUOEUPUQUIUTUNUKUQUIMUJDCBNZOUPU
      SUMAUPUKBGZUSUMMUJUKVBBCDPQVBURULBUKBRUKURULMBUKUQUIAVASTUAUBUCUDUEUFUGUH
      $.
      $( [2-Feb-2007] $)
    $( Recovery of ~ ax-11o from ~ ax11v without using ~ ax-11o .  The
       hypothesis is even weaker than ~ ax11v , with ` z ` both distinct from
       ` x ` _and_ not occurring in ` ph ` .  Thus the hypothesis provides an
       alternate axiom that can be used in place of ~ ax-11o . $)
    ax11v2-o $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wex wi a9e wa wb equequ2 adantl dveeq2-o imp hba1 imbi1d a4s
      albid syl imbi2d imbi12d mpbii ex exlimdv mpi ) BCFZBGHZDCFZDIUIAUIAJZBGZ
      JZJZDCKUJUKUODUJUKUOUJUKLZBDFZAUQAJZBGZJZJUOEUPUQUIUTUNUKUQUIMUJDCBNZOUPU
      SUMAUPUKBGZUSUMMUJUKVBBCDPQVBURULBUKBRUKURULMBUKUQUIAVASTUAUBUCUDUEUFUGUH
      $.
      $( [2-Feb-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    ax11a2.1 $e |- ( x = z -> ( A. z ph -> A. x ( x = z -> ph ) ) ) $.
    $( Derive ~ ax-11o from a hypothesis in the form of ~ ax-11 . ~ ax-10 and
       ~ ax-11 are used by the proof, but not ~ ax-10o or ~ ax-11o .  TODO:
       figure out if this is useful, or if it should be simplified or
       eliminated. $)
    ax11a2 $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( wal weq wi ax-17 syl5 ax11v2 ) ABCDAADFBDGZLAHBFADIEJK $.
      $( [2-Feb-2007] $)
    $( Derive ~ ax-11o from a hypothesis in the form of ~ ax-11 , without using
       ~ ax-11 or ~ ax-11o .  The hypothesis is even weaker than ~ ax-11 , with
       ` z ` both distinct from ` x ` and not occurring in ` ph ` .  Thus the
       hypothesis provides an alternate axiom that can be used in place of
       ~ ax-11 , if we also hvae ~ ax-10o which this proof uses .  As theorem
       ~ ax11 shows, the distinct variable conditions are optional.  An open
       problem is whether we can derive this with ~ ax-10 instead of
       ~ ax-10o . $)
    ax11a2-o $p |- ( -. A. x x = y ->
                 ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( wal weq wi ax-17 syl5 ax11v2-o ) ABCDAADFBDGZLAHBFADIEJK $.
      $( [2-Feb-2007] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Derive the obsolete axiom of variable substitution ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Derivation of set.mm's original ~ ax-11o from ~ ax-10 and the shorter
       ~ ax-11 that has replaced it.

       An open problem is whether this theorem can be proved without relying on
       ~ ax-16 or ~ ax-17 .

       Another open problem is whether this theorem can be proved without
       relying on ~ ax-12 (see note in ~ a12study ).

       Theorem ~ ax11 shows the reverse derivation of ~ ax-11 from ~ ax-11o .

       Normally, ~ ax11o should be used rather than ~ ax-11o , except by
       theorems specifically studying the latter's properties. $)
    ax11o $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( vz ax-11 ax11a2 ) ABCDABDEF $.
      $( [3-Feb-2007] $)
  $}

  $( Axiom ~ ax-11o ("o" for "old") was the original version of ~ ax-11 ,
     before it was discovered (in Jan. 2007) that the shorter ~ ax-11 could
     replace it.  It appears as Axiom scheme C15' in [Megill] p. 448 (p. 16 of
     the preprint).  It is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of
     [Monk2] p. 105, from which it can be proved by cases.  To understand this
     theorem more easily, think of " ` -. A. x x = y -> ` ..." as informally
     meaning "if ` x ` and ` y ` are distinct variables then..."  The
     antecedent becomes false if the same variable is substituted for ` x ` and
     ` y ` , ensuring the theorem is sound whenever this is the case.  In some
     later theorems, we call an antecedent of the form ` -. A. x x = y ` a
     "distinctor."

     This axiom is redundant, as shown by theorem ~ ax11o .

     Normally, ~ ax11o should be used rather than ~ ax-11o , except by theorems
     specifically studying the latter's properties. $)
  ax-11o $a |- ( -. A. x x = y ->
             ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.

  $( Rederivation of axiom ~ ax-11 from the orginal version, ~ ax-11o , and
     ~ ax-10o .  See theorem ~ ax11o for the derivation of ~ ax-11o from
     ~ ax-11 .

     An open problem is whether we can prove this using ~ ax-10 instead of
     ~ ax-10o .

     This theorem should not be referenced in any proof.  Instead, use ~ ax-11
     above so that uses of ~ ax-11 can be more easily identified. $)
  ax11 $p |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wi biidd dral1-o ax-1 alimi syl6bir a1d ax-4 ax-11o syl7 pm2.61i
    wn ) BCDZBEZRACEZRAFZBEZFZFSUCRSTABEUBAABCSAGHAUABARIJKLTASQRUBACMABCNOP $.
    $( [22-Jan-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
     Theorems without distinct variables that use axiom ax-11o
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( A bidirectional version of ~ ax-11o . $)
  ax11b $p |- ( ( -. A. x x = y /\ x = y ) ->
              ( ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi ax-11o imp ax-4 com12 adantl impbid ) BCDZBEFZOGAOAHZBEZ
    POARHABCIJORAHPROAQBKLMN $.
    $( [30-Jun-2006] $)

  $( Lemma used in proofs of substitution properties. $)
  equs5 $p |- ( -. A. x x = y ->
             ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wa wi hbnae hba1 ax11o imp3a exlimd ) BCDZBEFZNAGNAHZBEZBBCBIP
    BJONAQABCKLM $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb3 $p |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> [ y / x ] ph ) ) $=
    ( weq wal wn wa wex wi wsb equs5 sb2 syl6 ) BCDZBEFNAGBHNAIBEABCJABCKABCLM
    $.
    $( [5-Aug-1993] $)

  $( One direction of a simplified definition of substitution when variables
     are distinct. $)
  sb4 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) $=
    ( wsb weq wa wex wal wn wi sb1 equs5 syl5 ) ABCDBCEZAFBGNBHINAJBHABCKABCLM
    $.
    $( [5-Aug-1993] $)

  $( Simplified definition of substitution when variables are distinct. $)
  sb4b $p |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) $=
    ( weq wal wn wsb wi sb4 sb2 impbid1 ) BCDZBEFABCGLAHBEABCIABCJK $.
    $( [27-May-1997] $)

  $( An alternate definition of proper substitution that, like ~ df-sb , mixes
     free and bound variables to avoid distinct variable requirements. $)
  dfsb2 $p |- ( [ y / x ] ph <->
              ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) $=
    ( wsb weq wa wi wal wo sbequ2 a4s ax-4 jctild orc wn sb4 olc pm2.61i sbequ1
    syl6 imp sb2 jaoi impbii ) ABCDZBCEZAFZUFAGBHZIZUFBHZUEUIGUJUEUGUIUJUEAUFUF
    UEAGBABCJKUFBLMUGUHNTUJOUEUHUIABCPUHUGQTRUGUEUHUFAUEABCSUAABCUBUCUD $.
    $( [17-Feb-2005] $)

  $( An alternate definition of proper substitution ~ df-sb that uses only
     primitive connectives (no defined terms) on the right-hand side. $)
  dfsb3 $p |- ( [ y / x ] ph <->
              ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) ) $=
    ( weq wa wi wal wo wn wsb df-or dfsb2 imnan imbi1i 3bitr4i ) BCDZAEZPAFBGZH
    QIZRFABCJPAIFZRFQRKABCLTSRPAMNO $.
    $( [6-Mar-2007] $)

  $( Bound-variable hypothesis builder for substitution. $)
  hbsb2 $p |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) $=
    ( weq wal wn wsb wi sb4 sb2 a5i syl6 ) BCDZBEFABCGZMAHZBENBEABCIONBABCJKL
    $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution. $)
  sbequi $p |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) $=
    ( weq wal wsb wi wn wa wex hbsb2 stdpc7 sbequ1 sylan9 ex a4s adantr biimpd
    drsb1 equvini eximi syl 19.35 sylib hbnae 19.9d syl9 com23 sbequ2 alequcoms
    sylan9r syld pm2.61ii ) DBEZDFZDCEZDFZBCEZADBGZADCGZHZHUPIZUSURIZVBVCUSVDVB
    HVCUSJUTVADKZVDVAVCUTUTDFZUSVEADBLUSVBDKZVFVEHUSBDEZUQJZDKVGBCDUAVIVBDVHUTA
    UQVAABDMADCNZOUBUCUTVADUDUEOVAVDDDCDUFADCLUGUHPUIUPUSVBUPUSJUTAVAUPUTAHZUSU
    OVKDADBUJQRUSAABCGZUPVAABCNVLVAHBDVHBFVLVAABDCTSUKULUMPURUSVBURUSJUTAVAURUT
    ACBGZUSAURUTVMADCBTSABCMOURAVAHZUSUQVNDVJQRUMPUN $.
    $( [5-Aug-1993] $)

  $( An equality theorem for substitution.  Used in proof of Theorem 9.7 in
     [Megill] p. 449 (p. 16 of the preprint). $)
  sbequ $p |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( weq wsb sbequi wi equcoms impbid ) BCEADBFZADCFZABCDGLKHCBACBDGIJ $.
    $( [5-Aug-1993] $)

  $( Formula-building lemma for use with the Distinctor Reduction Theorem.
     Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). $)
  drsb2 $p |- ( A. x x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) $=
    ( cv wceq wsbc wb sbequ a4s ) BEZCEZFADKGADLGHBABCDIJ $.
    $( [27-Feb-2005] $)

  $( Negation inside and outside of substitution are equivalent. $)
  sbn $p |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) $=
    ( wn wsb weq wal wi sbequ2 nsyld a4s sb4 wa wex sb1 equs3 sylib syl6 sylibr
    con2i pm2.61i sbequ1 con3rr3 sb2 notnot sbbii con3i df-sb sylanbrc impbii )
    ADZBCEZABCEZDZBCFZBGZULUNHZUOUQBUOULAUMUKBCIABCIJKUPDULUOUKHZBGZUNUKBCLUMUS
    UMUOAMBNUSDABCOABCPQTRUAUNURUOUKMBNZULUOAUMABCUBUCUNUOUKDZHBGZDUTVBUMVBVABC
    EUMVABCUDAVABCAUEUFSUGUKBCPSUKBCUHUIUJ $.
    $( [5-Aug-1993] $)

  $( Removal of implication from substitution. $)
  sbi1 $p |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( weq wal wi wsb sbequ2 syl5d sbequ1 syl6d a4s sb4 ax-2 al2imi syl6 pm2.61i
    wn sb2 ) CDEZCFZABGZCDHZACDHZBCDHZGGZUAUGCUAUDUEBUFUAUEAUDBACDIUCCDIJBCDKLM
    UBSZUEUAAGZCFZUDUFACDNUHUDUAUCGZCFZUJUFGUCCDNULUJUABGZCFUFUKUIUMCUAABOPBCDT
    QQJR $.
    $( [5-Aug-1993] $)

  $( Introduction of implication into substitution. $)
  sbi2 $p |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) $=
    ( wsb wi wn sbn pm2.21 sbimi sylbir ax-1 ja ) ACDEZBCDEABFZCDEZNGAGZCDEPACD
    HQOCDABIJKBOCDBALJM $.
    $( [5-Aug-1993] $)

  $( Implication inside and outside of substitution are equivalent. $)
  sbim $p |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wsb sbi1 sbi2 impbii ) ABECDFACDFBCDFEABCDGABCDHI $.
    $( [5-Aug-1993] $)

  $( Logical OR inside and outside of substitution are equivalent. $)
  sbor $p |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) $=
    ( wn wi wsb wo sbim sbn imbi1i bitri df-or sbbii 3bitr4i ) AEZBFZCDGZACDGZE
    ZBCDGZFZABHZCDGSUAHRPCDGZUAFUBPBCDIUDTUAACDJKLUCQCDABMNSUAMO $.
    $( [29-Sep-2002] $)

  ${
    sbrim.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution with a variable not free in antecedent affects only the
       consequent. $)
    sbrim $p |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) $=
      ( wi wsb sbim sbf imbi1i bitri ) ABFCDGACDGZBCDGZFAMFABCDHLAMACDEIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    sblim.1 $e |- ( ps -> A. x ps ) $.
    $( Substitution with a variable not free in consequent affects only the
       antecedent. $)
    sblim $p |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> ps ) ) $=
      ( wi wsb sbim sbf imbi2i bitri ) ABFCDGACDGZBCDGZFLBFABCDHMBLBCDEIJK $.
      $( [14-Nov-2013] $)
  $}

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sban $p |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) $=
    ( wn wi wsb wa sbn sbim imbi2i bitri xchbinx df-an sbbii 3bitr4i ) ABEZFZEZ
    CDGZACDGZBCDGZEZFZEABHZCDGUAUBHTRCDGZUDRCDIUFUAQCDGZFUDAQCDJUGUCUABCDIKLMUE
    SCDABNOUAUBNP $.
    $( [5-Aug-1993] $)

  $( Conjunction inside and outside of a substitution are equivalent. $)
  sb3an $p |- ( [ y / x ] ( ph /\ ps /\ ch ) <->
              ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) $=
    ( w3a wsb wa df-3an sbbii sban anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDEGPDE
    GZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.
    $( [14-Dec-2006] $)

  $( Equivalence inside and outside of a substitution are equivalent. $)
  sbbi $p |- ( [ y / x ] ( ph <-> ps )
     <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wsb wi wa dfbi2 sbbii sbim anbi12i sban 3bitr4i bitri ) ABEZCDFABGZBAG
    ZHZCDFZACDFZBCDFZEZPSCDABIJQCDFZRCDFZHUAUBGZUBUAGZHTUCUDUFUEUGABCDKBACDKLQR
    CDMUAUBINO $.
    $( [5-Aug-1993] $)

  ${
    sblbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce left biconditional inside of a substitution. $)
    sblbis $p |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> ps ) ) $=
      ( wb wsb sbbi bibi2i bitri ) CAGDEHCDEHZADEHZGLBGCADEIMBLFJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    sbrbis.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbis $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) $=
      ( wb wsb sbbi bibi1i bitri ) ACGDEHADEHZCDEHZGBMGACDEILBMFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    sbrbif.1 $e |- ( ch -> A. x ch ) $.
    sbrbif.2 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Introduce right biconditional inside of a substitution. $)
    sbrbif $p |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> ch ) ) $=
      ( wb wsb sbrbis sbf bibi2i bitri ) ACHDEIBCDEIZHBCHABCDEGJNCBCDEFKLM $.
      $( [18-Aug-1993] $)
  $}

  $( A specialization theorem. $)
  a4sbe $p |- ( [ y / x ] ph -> E. x ph ) $=
    ( wsb wn wal wex stdpc4 sbn sylib con2i df-ex sylibr ) ABCDZAEZBFZEABGPNPOB
    CDNEOBCHABCIJKABLM $.
    $( [5-Aug-1993] $)

  $( Specialization of implication.  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  a4sbim $p |- ( A. x ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) $=
    ( wi wal wsb stdpc4 sbi1 syl ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [25-May-2011] $) $( [5-Aug-1993] $)

  $( Specialization of biconditional. $)
  a4sbbi $p |- ( A. x ( ph <-> ps ) -> ( [ y / x ] ph <-> [ y / x ] ps ) ) $=
    ( wb wal wsb stdpc4 sbbi sylib ) ABEZCFKCDGACDGBCDGEKCDHABCDIJ $.
    $( [5-Aug-1993] $)

  ${
    sbbid.1 $e |- ( ph -> A. x ph ) $.
    sbbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Deduction substituting both sides of a biconditional. $)
    sbbid $p |- ( ph -> ( [ y / x ] ps <-> [ y / x ] ch ) ) $=
      ( wb wal wsb alrimi a4sbbi syl ) ABCHZDIBDEJCDEJHANDFGKBCDELM $.
      $( [5-Aug-1993] $)
  $}

  $( Elimination of equality from antecedent after substitution. $)
  sbequ8 $p |- ( [ y / x ] ph <-> [ y / x ] ( x = y -> ph ) ) $=
    ( wsb weq wi equsb1 a1bi sbim bitr4i ) ABCDZBCEZBCDZKFLAFBCDMKBCGHLABCIJ $.
    $( [5-Aug-1993] $)

  $( Substitution has no effect on a non-free variable. $)
  sbf3t $p |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph <-> ph ) ) $=
    ( wal wi wsb a4sbim sbf2 ax-4 sylbi syl6 stdpc4 imim2i a4s impbid ) AABDZEZ
    BDZABCFZARSPBCFZAAPBCGTPAABCHABIJKQASEBPSAABCLMNO $.
    $( [30-May-2009] $)

  ${
    hbsb4.1 $e |- ( ph -> A. z ph ) $.
    $( A variable not free remains so after substitution with a distinct
       variable. $)
    hbsb4 $p |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) $=
      ( weq wal wn wsb wi wb equequ1 a4s dral1 notbid hbsb2 alimi hbnae pm2.61i
      hban ax10o alequcoms sylbid hbae ax-4 sbequ2 sbequ1 al2imi syl5 syld 3syl
      syl9r wa a1d sb4 ax-12 imp a1i hbimd alimd sb2 a7s syl6 syl9 ex ) DBFZDGZ
      DCFZDGZHZABCIZVKDGZJZJVGVJBCFZBGZHZVMVGVIVOVHVNDBVFVHVNKDDBCLMNOVPVKVKBGZ
      VGVLABCPVQVLJBDVKBDUAUBULUCVGHZVJVMVOVRVJUMZVMJVOVMVSVOVODGVNDGZVMBCDUDVO
      VNDVNBUEQVTVKAVLVNVKAJDABCUFMAADGZVTVLEVNAVKDABCUGUHUIUJUKUNVPVKVNAJZBGZV
      SVLABCUOVSWCWBDGZBGVLVSWBWDBVRVJBDBBRDCBRTVSVNADVRVJDDBDRDCDRTVRVJVNVTJBC
      DUPUQAWAJVSEURUSUTWBVLDBWCVKDABCVAQVBVCVDSVES $.
      $( [5-Aug-1993] $)
  $}

  $( A variable not free remains so after substitution with a distinct variable
     (closed form of ~ hbsb4 ).  (The proof was shortened by Andrew Salmon,
     25-May-2011.) $)
  hbsb4t $p |- ( A. x A. z ( ph -> A. z ph ) ->
               ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) $=
    ( weq wal wn wsb wi hba1 hbsb4 a4sbim a4s ax-4 sbimi alimi a1i imim12d syl5
    a7s ) DCEDFGADFZBCHZUBDFZIZAUAIZDFBFABCHZUFDFZIZUABCDADJKUEUDUHIDBUEBFZDFZU
    FUBUCUGUIUFUBIDAUABCLMUCUGIUJUBUFDUAABCADNOPQRTS $.
    $( [25-May-2011] $) $( [7-Apr-2004] $)

  ${
    dvelimf.1 $e |- ( ph -> A. x ph ) $.
    dvelimf.2 $e |- ( ps -> A. z ps ) $.
    dvelimf.3 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim without any variable restrictions. $)
    dvelimf $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wsb hbsb4 sbie albii 3imtr3g ) CDICJKAEDLZQCJBBCJAEDCFMABEDG
      HNZQBCROP $.
      $( [1-Oct-2002] $)
  $}

  ${
    dvelimdf.1 $e |- ( ph -> A. x ph ) $.
    dvelimdf.2 $e |- ( ph -> A. z ph ) $.
    dvelimdf.3 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    dvelimdf.4 $e |- ( ph -> ( ch -> A. z ch ) ) $.
    dvelimdf.5 $e |- ( ph -> ( z = y -> ( ps <-> ch ) ) ) $.
    $( Deduction form of ~ dvelimf .  This version may be useful if we want to
       avoid ~ ax-17 and use ~ ax-16 instead. $)
    dvelimdf $p |- ( ph -> ( -. A. x x = y -> ( ch -> A. x ch ) ) ) $=
      ( weq wal wn wi wa wsb alrimi wb adantr 2alimi hbsb4t sbied albid 3imtr3d
      3syl imp ex ) ADELDMNZCCDMZOAUIPBFEQZUKDMZCUJAUIUKULOZAADMZFMBBDMOZDMFMUI
      UMOAUNFHGRAUOFDIUABFEDUBUFUGAUKCSUIABCFEHJKUCZTAULUJSUIAUKCDGUPUDTUEUH $.
      $( [7-Apr-2004] $)
  $}

  $( A composition law for substitution. $)
  sbco $p |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12 bicomd sbimi ax-mp sbbi mpbi ) ACBDZAEZBCDZNBCD
    ABCDECBFZBCDPBCGQOBCQANACBHIJKNABCLM $.
    $( [5-Aug-1993] $)

  ${
    sbid2.1 $e |- ( ph -> A. x ph ) $.
    $( An identity law for substitution. $)
    sbid2 $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( wsb sbco sbf bitri ) ACBEBCEABCEAABCFABCDGH $.
      $( [5-Aug-1993] $)
  $}

  $( An idempotent law for substitution.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  sbidm $p |- ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) $=
    ( wsb wb weq equsb2 sbequ12r sbimi ax-mp sbbi mpbi ) ABCDZAEZBCDZMBCDMECBFZ
    BCDOBCGPNBCACBHIJMABCKL $.
    $( [25-May-2011] $) $( [30-Jun-1994] $)

  ${
    sbco2.1 $e |- ( ph -> A. z ph ) $.
    $( A composition law for substitution. $)
    sbco2 $p |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) $=
      ( weq wal wsb wb sbid2 sbequ syl5bbr sbequ12 bitr3d a4s hbnae hbsb3 hbsb4
      wn wi a1i sbied bicomd pm2.61i ) BCFZBGZABDHZDCHZABCHZIZUEUJBUEAUHUIAUGDB
      HUEUHADBEJUGBCDKLZABCMNOUFSZUIUHULAUHBCBCBPUGDCBABDEQRUEAUHITULUKUAUBUCUD
      $.
      $( [30-Jun-1994] $)
  $}

  ${
    sbco2d.1 $e |- ( ph -> A. x ph ) $.
    sbco2d.2 $e |- ( ph -> A. z ph ) $.
    sbco2d.3 $e |- ( ph -> ( ps -> A. z ps ) ) $.
    $( A composition law for substitution. $)
    sbco2d $p |- ( ph -> ( [ y / z ] [ z / x ] ps <-> [ y / x ] ps ) ) $=
      ( wsb wi hbim1 sbco2 sbrim sbbii bitri 3bitr3i pm5.74ri ) ABCEIZEDIZBCDIZ
      ABJZCEIZEDIZUACDIASJZATJUACDEABEGHKLUCARJZEDIUDUBUEEDABCEFMNAREDGMOABCDFM
      PQ $.
      $( [5-Aug-1993] $)
  $}

  $( A composition law for substitution. $)
  sbco3 $p |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) $=
    ( weq wal wsb wb drsb1 sbequ12a alimi a4sbbi syl bitr3d wn sbco sbbii hbnae
    hbsb2 sbco2d syl5rbbr pm2.61i ) BCEZBFZABCGZCDGZACBGZBDGZHUDUEBDGZUFUHUEBCD
    IUDUEUGHZBFUIUHHUCUJBABCJKUEUGBDLMNUHUECBGZBDGUDOZUFUKUGBDACBPQULUECDBBCCRB
    CBRABCSTUAUB $.
    $( [5-Aug-1993] $)

  $( A commutativity law for substitution. $)
  sbcom $p |- ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) $=
    ( weq wal wsb wb wn wa hbae sbbid bitr3d hbnae hban albid sb4b sbequ12 a4s
    wi drsb1 adantr ax-12 imp alimi 19.21t 3syl adantrr alcom bi2.04 nalequcoms
    albii syl5bb adantrl imbi2d sylan9bbr adantl sylan9bb pm2.61ian ex pm2.61ii
    3bitr4d ) BCEZBFZDCEZDFZABCGZDCGZADCGZBCGZHZVDIZVFIZVKBDEBFZVLVMJZVKVNVKVOV
    NVGBCGVHVJVGBDCUAVNVGVIBCBDBKABDCUALMUBVNIZVOJZVEVCATZBFZTZDFZVCVEATZDFZTZB
    FZVHVJVQVEVRTZBFZDFZWAWEVPVLWHWAHVMVPVLJZWGVTDVPVLDBDDNZBCDNZOWIWIBFVEVEBFT
    ZBFWGVTHVPVLBBDBNZBCBNOWIWLBVPVLWLDCBUCUDUEVEVRBUFUGPUHVPVMWHWEHVLWHWFDFZBF
    VPVMJZWEWFDBUIWOWNWDBVPVMBWMDCBNZOWNVCWBTZDFZWOWDWFWQDVEVCAUJULWOWODFVCVCDF
    TZDFWRWDHVPVMDWJDCDNOWOWSDVPVMWSVMWSTDBBCDUCUKUDUEVCWBDUFUGUMPUMUNMVOVHWAHV
    PVMVHVEVGTZDFVLWAVGDCQVLWTVTDWKVLVGVSVEABCQUOPUPUQVOVJWEHVPVLVJVCVITZBFVMWE
    VIBCQVMXAWDBWPVMVIWCVCADCQUOPURUQVBUSUTVDVIVHVJVDAVGDCBCDKVCAVGHBABCRSLVCVI
    VJHBVIBCRSMVFVGVHVJVEVGVHHDVGDCRSVFAVIBCDCBKVEAVIHDADCRSLMVA $.
    $( [27-May-1997] $)

  ${
    sb5rf.1 $e |- ( ph -> A. y ph ) $.
    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb5rf $p |- ( ph <-> E. y ( y = x /\ [ y / x ] ph ) ) $=
      ( weq wsb wa wex sbid2 sb1 sylbir stdpc7 imp exlimi impbii ) ACBEZABCFZGZ
      CHZAQCBFSACBDIQCBJKRACDPQAACBLMNO $.
      $( [25-May-2011] $) $( [3-Feb-2005] $)

    $( Reversed substitution.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    sb6rf $p |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) $=
      ( weq wsb wi wal sbequ1 equcoms com12 alrimi sb2 sbid2 sylib impbii ) ACB
      EZABCFZGZCHZASCDQARARGBCABCIJKLTRCBFARCBMACBDNOP $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in universal quantifier.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    sb8 $p |- ( A. x ph <-> A. y [ y / x ] ph ) $=
      ( wal wsb hbal stdpc4 alrimi hbsb3 stdpc7 cbv3 impbii ) ABEZABCFZCENOCACB
      DGABCHIOACBABCDJDACBKLM $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    sb8e.1 $e |- ( ph -> A. y ph ) $.
    $( Substitution of variable in existential quantifier. $)
    sb8e $p |- ( E. x ph <-> E. y [ y / x ] ph ) $=
      ( wn wal wsb wex hbn sb8 sbn albii bitri notbii df-ex 3bitr4i ) AEZBFZEAB
      CGZEZCFZEABHSCHRUARQBCGZCFUAQBCACDIJUBTCABCKLMNABOSCOP $.
      $( [12-Aug-1993] $)
  $}

  $( Commutation of quantification and substitution variables. $)
  sb9i $p |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) $=
    ( weq wal wi drsb1 drsb2 bitr3d dral1 biimprd wn hbsb2 al2imi hbnaes stdpc4
    wsb sbco sylib alimi a7s syl6 pm2.61i ) CBDCEZACBQZBEZABCQZCEZFUDUHUFUGUECB
    UDACCQUGUEACBCGACBCHIJKUDLZUFUECEZBEZUHUFUKFCBBUIUEUJBACBMNOUEUHCBUFUGCUFUE
    BCQUGUEBCPABCRSTUAUBUC $.
    $( [5-Aug-1993] $)

  $( Commutation of quantification and substitution variables. $)
  sb9 $p |- ( A. x [ x / y ] ph <-> A. y [ y / x ] ph ) $=
    ( wsb wal sb9i impbii ) ACBDBEABCDCEABCFACBFG $.
    $( [5-Aug-1993] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Predicate calculus with distinct variables (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( This is a version of ~ ax-11o when the variables are distinct.  Axiom
       (C8) of [Monk2] p. 105.  See theorem ~ ax11v2 for the rederivation of
       ~ ax-11o from this theorem. $)
    ax11v $p |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) $=
      ( weq wal wi ax-1 ax-16 syl5 a1d ax11o pm2.61i ) BCDZBEZMAMAFZBEZFZFNQMAO
      NPAMGOBCHIJABCKL $.
      $( [5-Aug-1993] $)

    $( Two equivalent ways of expressing the proper substitution of ` y ` for
       ` x ` in ` ph ` , when ` x ` and ` y ` are distinct.  Theorem 6.2 of
       [Quine] p. 40.  The proof does not involve ~ df-sb . $)
    sb56 $p |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wal hba1 ax11v ax-4 com12 impbid equsex ) ABCDZAEZBFZBCNBGMAOABC
      HOMANBIJKL $.
      $( [14-Apr-2008] $)

    $( Equivalence for substitution.  Compare Theorem 6.2 of [Quine] p. 40.
       Also proved as Lemmas 16 and 17 of [Tarski] p. 70. $)
    sb6 $p |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) $=
      ( weq wi wa wex wal wsb sb56 anbi2i df-sb ax-4 pm4.71ri 3bitr4i ) BCDZAEZ
      PAFBGZFQQBHZFABCISRSQABCJKABCLSQQBMNO $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)

    $( Equivalence for substitution.  Similar to Theorem 6.1 of [Quine]
       p. 40. $)
    sb5 $p |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) $=
      ( wsb weq wi wal wa wex sb6 sb56 bitr4i ) ABCDBCEZAFBGMAHBIABCJABCKL $.
      $( [14-Apr-2008] $) $( [18-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    ax16i.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    ax16i.2 $e |- ( ps -> A. x ps ) $.
    $( Inference with ~ ax-16 as its conclusion, that doesn't require ~ ax-10 ,
       ~ ax-11 , or ~ ax-12 for its proof.  The hypotheses may be eliminable
       without one or more of these axioms in special cases. $)
    ax16i $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( weq wal wi ax-17 ax-8 cbv3 a4imv equid1 mpi syl syl5com alimd mpcom
      alimi biimpcd biimprd syl6com ) CDHZCIZCEHZEIZAACIZJUFEDHZEIZUHUEUJCEUEEK
      ZUJCKCEDLMUKECHZEIZUHUEUKUNUJUEECECDLNUEUJUMEULUEDCHZUJUMUECCHUOCOCDCLPUJ
      DEHZUOUMJUJEEHZUPEOZEDELPDECLQRSTUMUGEUMUQUGURECELPZUAQQAUHBEIUIAUGBEAEKZ
      UGABFUBSBAECGUTUMUGBAJUSUGABFUCQMUDQ $.
      $( [20-May-2008] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( Version of ~ ax16 that doesn't require ~ ax-10 or ~ ax-12 for its
       proof. $)
    ax16ALT $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( vz wsb sbequ12 ax-17 hbsb3 ax16i ) AABDEBCDABDFABDADGHI $.
      $( [17-May-2008] $)
  $}

  ${
    $d x ps $.
    a4v.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Specialization, using implicit substitition. $)
    a4v $p |- ( A. x ph -> ps ) $=
      ( weq biimpd a4imv ) ABCDCDFABEGH $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x ph $.
    a4imev.1 $e |- ( x = y -> ( ph -> ps ) ) $.
    $( Distinct-variable version of ~ a4ime . $)
    a4imev $p |- ( ph -> E. x ps ) $=
      ( ax-17 a4ime ) ABCDACFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    a4eiv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    a4eiv.2 $e |- ps $.
    $( Inference from existential specialization, using implicit
       substitition. $)
    a4eiv $p |- E. x ph $=
      ( wex weq biimprd a4imev ax-mp ) BACGFBACDCDHABEIJK $.
      $( [19-Aug-1993] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( A variable introduction law for equality.  Lemma 15 of [Monk2]
       p. 109. $)
    equvin $p |- ( x = y <-> E. z ( x = z /\ z = y ) ) $=
      ( weq wa wex equvini ax-17 equtr imp exlimi impbii ) ABDZACDZCBDZEZCFABCG
      PMCMCHNOMACBIJKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A generalization of axiom ~ ax-16 .  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    a16g $p |- ( A. x x = y -> ( ph -> A. z ph ) ) $=
      ( weq wal aev ax-16 biidd dral1 biimprd sylsyld ) BCEBFDBEDFZAABFZADFZBCD
      DBGABCHMONAADBMAIJKL $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
    $( A generalization of axiom ~ ax-16 .  Version of ~ a16g using ~ ax-10o .
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    a16g-o $p |- ( A. x x = y -> ( ph -> A. z ph ) ) $=
      ( weq wal aev-o ax-16 biidd dral1-o biimprd sylsyld ) BCEBFDBEDFZAABFZADF
      ZBCDDBGABCHMONAADBMAIJKL $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( A generalization of axiom ~ ax-16 . $)
    a16gb $p |- ( A. x x = y -> ( ph <-> A. z ph ) ) $=
      ( weq wal a16g ax-4 impbid1 ) BCEBFAADFABCDGADHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for universal quantifier (deduction rule). $)
    albidv $p |- ( ph -> ( A. x ps <-> A. x ch ) ) $=
      ( ax-17 albid ) ABCDADFEG $.
      $( [5-Aug-1993] $)

    $( Formula-building rule for existential quantifier (deduction rule). $)
    exbidv $p |- ( ph -> ( E. x ps <-> E. x ch ) ) $=
      ( ax-17 exbid ) ABCDADFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2albidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2albidv $p |- ( ph -> ( A. x A. y ps <-> A. x A. y ch ) ) $=
      ( wal albidv ) ABEGCEGDABCEFHH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for 2 existential quantifiers (deduction rule). $)
    2exbidv $p |- ( ph -> ( E. x E. y ps <-> E. x E. y ch ) ) $=
      ( wex exbidv ) ABEGCEGDABCEFHH $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    3exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 3 existential quantifiers (deduction rule). $)
    3exbidv $p |- ( ph -> ( E. x E. y E. z ps <-> E. x E. y E. z ch ) ) $=
      ( wex exbidv 2exbidv ) ABFHCFHDEABCFGIJ $.
      $( [1-May-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.  $d w ph $.
    4exbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for 4 existential quantifiers (deduction rule). $)
    4exbidv $p |- ( ph ->
                     ( E. x E. y E. z E. w ps <-> E. x E. y E. z E. w ch ) ) $=
      ( wex 2exbidv ) ABGIFICGIFIDEABCFGHJJ $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.9 of [Margaris] p. 89. $)
    19.9v $p |- ( E. x ph <-> ph ) $=
      ( ax-17 19.9 ) ABABCD $.
      $( [21-May-2007] $) $( [28-May-1995] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.21 of [Margaris] p. 90. _Notational
       convention_:  We sometimes suffix with "v" the label of a theorem
       eliminating a hypothesis such as ` ( ph -> A. x ph ) ` in ~ 19.21 via
       the use of distinct variable conditions combined with ~ ax-17 .
       Conversely, we sometimes suffix with "f" the label of a theorem
       introducing such a hypothesis to eliminate the need for the distinct
       variable condition; e.g. ~ euf derived from ~ df-eu .  The "f" stands
       for "not free in" which is less restrictive than "does not occur in." $)
    19.21v $p |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) $=
      ( ax-17 19.21 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    alrimiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimiv $p |- ( ph -> A. x ps ) $=
      ( ax-17 alrimi ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    alrimivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90. $)
    alrimivv $p |- ( ph -> A. x A. y ps ) $=
      ( wal alrimiv ) ABDFCABDEGG $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    alrimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.21 of [Margaris] p. 90. $)
    alrimdv $p |- ( ph -> ( ps -> A. x ch ) ) $=
      ( ax-17 alrimd ) ABCDADFBDFEG $.
      $( [10-Feb-1997] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Quantification of two variables over a formula in which they do not
       occur.  (Contributed by Alan Sare, 12-Apr-2011.) $)
    2ax17 $p |- ( ph -> A. x A. y ph ) $=
      ( id alrimivv ) AABCADE $.
      $( [12-Apr-2011] $)
  $}

  ${
    $d x ph $.
    alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.20 of [Margaris] p. 90. $)
    alimdv $p |- ( ph -> ( A. x ps -> A. x ch ) ) $=
      ( ax-17 alimd ) ABCDADFEG $.
      $( [3-Apr-1994] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    eximdv $p |- ( ph -> ( E. x ps -> E. x ch ) ) $=
      ( ax-17 eximd ) ABCDADFEG $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2alimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2alimdv $p |- ( ph -> ( A. x A. y ps -> A. x A. y ch ) ) $=
      ( wal alimdv ) ABEGCEGDABCEFHH $.
      $( [27-Apr-2004] $)

    $( Deduction from Theorem 19.22 of [Margaris] p. 90. $)
    2eximdv $p |- ( ph -> ( E. x E. y ps -> E. x E. y ch ) ) $=
      ( wex eximdv ) ABEGCEGDABCEFHH $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.23 of [Margaris] p. 90. $)
    19.23v $p |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) $=
      ( ax-17 19.23 ) ABCBCDE $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.23 of [Margaris] p. 90 extended to two variables. $)
    19.23vv $p |- ( A. x A. y ( ph -> ps ) <-> ( E. x E. y ph -> ps ) ) $=
      ( wi wal wex 19.23v albii bitri ) ABEDFZCFADGZBEZCFLCGBEKMCABDHILBCHJ $.
      $( [10-Aug-2004] $)
  $}

  ${
    $d x ps $.
    exlimiv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.

       This inference, along with our many variants such as ~ rexlimdv , is
       used to implement a metatheorem called "Rule C" that is given in many
       logic textbooks.  See, for example, Rule C in [Mendelson] p. 81, Rule C
       in [Margaris] p. 40, or Rule C in Hirst and Hirst's _A Primer for Logic
       and Proof_ p. 59 (PDF p. 65) at
       ~ http://www.mathsci.appstate.edu/~~jlh/primer/hirst.pdf .

       In informal proofs, the statement "Let ` C ` be an element such that..."
       almost always means an implicit application of Rule C.

       In essence, Rule C states that if we can prove that some element ` x `
       exists satisfying a wff, i.e. ` E. x ph ( x ) ` where ` ph ( x ) ` has
       ` x ` free, then we can use ` ph ( C ) ` as a hypothesis for the proof
       where ` C ` is a new (ficticious) constant not appearing previously in
       the proof, nor in any axioms used, nor in the theorem to be proved.  The
       purpose of Rule C is to get rid of the existential quantifier.

       We cannot do this in Metamath directly.  Instead, we use the original
       ` ph ` (containing ` x ` ) as an antecedent for the main part of the
       proof.  We eventually arrive at ` ( ph -> ps ) ` where ` ps ` is the
       theorem to be proved and does not contain ` x ` .  Then we apply
       ~ exlimiv to arrive at ` ( E. x ph -> ps ) ` .  Finally, we separately
       prove ` E. x ph ` and detach it with modus ponens ~ ax-mp to arrive at
       the final theorem ` ps ` . $)
    exlimiv $p |- ( E. x ph -> ps ) $=
      ( ax-17 exlimi ) ABCBCEDF $.
      $( [25-Jul-2012] $) $( [5-Aug-1993] $)
  $}

  ${
    $d ph y $.  $d ps x $.
    $( Theorem *11.53 in [WhiteheadRussell] p. 164.  (Contributed by Andrew
       Salmon, 24-May-2011.) $)
    pm11.53 $p |- ( A. x A. y ( ph -> ps ) <-> ( E. x ph -> A. y ps ) ) $=
      ( wi wal wex 19.21v albii ax-17 hbal 19.23 bitri ) ABEDFZCFABDFZEZCFACGOE
      NPCABDHIAOCBCDBCJKLM $.
      $( [24-May-2011] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    exlimivv.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90. $)
    exlimivv $p |- ( E. x E. y ph -> ps ) $=
      ( wex exlimiv ) ADFBCABDEGG $.
      $( [1-Aug-1995] $)
  $}

  ${
    $d x ch $.  $d x ph $.  $d y ch $.  $d y ph $.
    exlimdvv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90. $)
    exlimdvv $p |- ( ph -> ( E. x E. y ps -> ch ) ) $=
      ( wex exlimdv ) ABEGCDABCEFHH $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.27 of [Margaris] p. 90. $)
    19.27v $p |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) $=
      ( ax-17 19.27 ) ABCBCDE $.
      $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.28 of [Margaris] p. 90. $)
    19.28v $p |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) $=
      ( ax-17 19.28 ) ABCACDE $.
      $( [25-Mar-2004] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.36 of [Margaris] p. 90. $)
    19.36v $p |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) $=
      ( ax-17 19.36 ) ABCBCDE $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x ps $.
    19.36aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.36 of [Margaris] p. 90. $)
    19.36aiv $p |- ( A. x ph -> ps ) $=
      ( ax-17 19.36i ) ABCBCEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ph $.
    $( Special case of ~ 19.12 where its converse holds.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    19.12vv $p |- ( E. x A. y ( ph -> ps ) <-> A. y E. x ( ph -> ps ) ) $=
      ( wal wex 19.21v exbii ax-17 hbal 19.36 19.36v albii 19.21 bitr2i 3bitri
      wi ) ABQZDEZCFABDEZQZCFACEZTQZRCFZDEZSUACABDGHATCBCDBCIJKUEUBBQZDEUCUDUFD
      ABCLMUBBDADCADIJNOP $.
      $( [11-Jul-2011] $) $( [18-Jul-2001] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.37 of [Margaris] p. 90. $)
    19.37v $p |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) $=
      ( ax-17 19.37 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    19.37aiv.1 $e |- E. x ( ph -> ps ) $.
    $( Inference from Theorem 19.37 of [Margaris] p. 90. $)
    19.37aiv $p |- ( ph -> E. x ps ) $=
      ( wi wex 19.37v mpbi ) ABECFABCFEDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    $( Special case of Theorem 19.41 of [Margaris] p. 90. $)
    19.41v $p |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) $=
      ( ax-17 19.41 ) ABCBCDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.  $d y ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 2 quantifiers. $)
    19.41vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) $=
      ( wa wex 19.41v exbii bitri ) ABEDFZCFADFZBEZCFKCFBEJLCABDGHKBCGI $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d y ps $.  $d z ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 3 quantifiers. $)
    19.41vvv $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                     ( E. x E. y E. z ph /\ ps ) ) $=
      ( wa wex 19.41vv exbii 19.41v bitri ) ABFEGDGZCGAEGDGZBFZCGMCGBFLNCABDEHI
      MBCJK $.
      $( [30-Apr-1995] $)
  $}

  ${
    $d w ps $.  $d x ps $.  $d y ps $.  $d z ps $.
    $( Theorem 19.41 of [Margaris] p. 90 with 4 quantifiers.  (Contributed by
       FL, 14-Jul-2007.) $)
    19.41vvvv $p |- ( E. w E. x E. y E. z ( ph /\ ps ) <->
                     ( E. w E. x E. y E. z ph /\ ps ) ) $=
      ( wa wex 19.41vvv exbii 19.41v bitri ) ABGEHDHCHZFHAEHDHCHZBGZFHNFHBGMOFA
      BCDEIJNBFKL $.
      $( [14-Jul-2007] $)
  $}

  ${
    $d x ph $.
    $( Special case of Theorem 19.42 of [Margaris] p. 90. $)
    19.42v $p |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) $=
      ( ax-17 19.42 ) ABCACDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y ph $.
    $( Distribution of existential quantifiers. $)
    exdistr $p |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) $=
      ( wa wex 19.42v exbii ) ABEDFABDFECABDGH $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 2 quantifiers. $)
    19.42vv $p |- ( E. x E. y ( ph /\ ps ) <-> ( ph /\ E. x E. y ps ) ) $=
      ( wa wex exdistr 19.42v bitri ) ABEDFCFABDFZECFAJCFEABCDGAJCHI $.
      $( [16-Mar-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.  $d z ph $.
    $( Theorem 19.42 of [Margaris] p. 90 with 3 quantifiers. $)
    19.42vvv $p |- ( E. x E. y E. z ( ph /\ ps )
                       <-> ( ph /\ E. x E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii 19.42v bitri ) ABFEGDGZCGABEGDGZFZCGAMCGFLNCABDEHI
      AMCJK $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d y ph $.  $d z ph $.
    $( Distribution of existential quantifiers. $)
    exdistr2 $p |- ( E. x E. y E. z ( ph /\ ps ) <->
                   E. x ( ph /\ E. y E. z ps ) ) $=
      ( wa wex 19.42vv exbii ) ABFEGDGABEGDGFCABDEHI $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d z ps $.
    $( Distribution of existential quantifiers.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3exdistr $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ch ) ) ) $=
      ( w3a wex wa 3anass 2exbii 19.42vv exdistr anbi2i 3bitri exbii ) ABCGZFHE
      HZABCFHIEHZIZDRABCIZIZFHEHAUAFHEHZITQUBEFABCJKAUAEFLUCSABCEFMNOP $.
      $( [25-May-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d w ph $.  $d z ps $.  $d w ps $.  $d w ch $.
    $( Distribution of existential quantifiers. $)
    4exdistr $p |- ( E. x E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <->
                E. x ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) $=
      ( wa wex anass exbii 19.42v anbi2i 3bitri bitri ) ABICDIZIZHJZGJZFJZABCDH
      JIZGJIZFJIZEUAAUCIZFJUDTUEFTABUBIZIZGJAUFGJZIUESUGGSABQIZIZHJZUGRUJHABQKL
      UKAUIHJZIABQHJZIZIUGAUIHMULUNABQHMNUNUFAUMUBBCDHMNNOPLAUFGMUHUCABUBGMNOLA
      UCFMPL $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvalv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvalv $p |- ( A. x ph <-> A. y ps ) $=
      ( ax-17 cbval ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvexv $p |- ( E. x ph <-> E. y ps ) $=
      ( ax-17 cbvex ) ABCDADFBCFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y x $.  $d y z $.  $d w x $.  $d w z $.
    cbval2.1 $e |- ( ph -> A. z ph ) $.
    cbval2.2 $e |- ( ph -> A. w ph ) $.
    cbval2.3 $e |- ( ps -> A. x ps ) $.
    cbval2.4 $e |- ( ps -> A. y ps ) $.
    cbval2.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2 $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( wal hbal weq wb wa ax-17 hban cbval 19.28v expcom pm5.32d 3bitr3i mpbir
      wi pm5.32 ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOUEUIUGPZUIUHPZOUIAPZDLUIBPZFLUJU
      KULUMDFUIAFUIFQHRUIBDUIDQJRDFNZUIABUIUNABOKUAUBSUIADTUIBFTUCUIUGUHUFUDS
      $.
      $( [22-Dec-2003] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2 $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( wex hbex weq wb wa ax-17 hban cbvex 19.42v expcom pm5.32d 3bitr3i mpbir
      wi pm5.32 ) ADLZBFLZCEAEDGMBCFIMCENZUGUHOUEUIUGPZUIUHPZOUIAPZDLUIBPZFLUJU
      KULUMDFUIAFUIFQHRUIBDUIDQJRDFNZUIABUIUNABOKUAUBSUIADTUIBFTUCUIUGUHUFUDS
      $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x w $.  $d z y $.
    cbval2v.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbval2v $p |- ( A. x A. y ph <-> A. z A. w ps ) $=
      ( ax-17 cbval2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [4-Feb-2005] $)

    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex2v $p |- ( E. x E. y ph <-> E. z E. w ps ) $=
      ( ax-17 cbvex2 ) ABCDEFAEHAFHBCHBDHGI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    cbvald.1 $e |- ( ph -> A. y ph ) $.
    cbvald.2 $e |- ( ph -> ( ps -> A. y ps ) ) $.
    cbvald.3 $e |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) $.
    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim .  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    cbvald $p |- ( ph -> ( A. x ps <-> A. y ch ) ) $=
      ( wal wb ax-17 hbal a17d cbv2 3syl ) AAEIZPDIBDICEIJFADEADKLABCDEGACDMHNO
      $.
      $( [25-May-2011] $) $( [2-Jan-2002] $)

    $( Deduction used to change bound variables, using implicit substitition,
       particularly useful in conjunction with ~ dvelim . $)
    cbvexd $p |- ( ph -> ( E. x ps <-> E. y ch ) ) $=
      ( wn wal wex hbnd weq wb notbi syl6ib cbvald notbid df-ex 3bitr4g ) ABIZD
      JZICIZEJZIBDKCEKAUBUDAUAUCDEFABEFGLADEMBCNUAUCNHBCOPQRBDSCEST $.
      $( [2-Jan-2002] $)
  $}

  ${
    $v f $.
    $v g $.
    $( Define temporary individual variables. $)
    cbvex4v.vf $f set f $.
    cbvex4v.vg $f set g $.
    $d w z ch $.  $d u v ph $.  $d x y ps $.  $d f g ps $.  $d f w $.
    $d g z $.  $d u v w x y z $.
    cbvex4v.1 $e |- ( ( x = v /\ y = u ) -> ( ph <-> ps ) ) $.
    cbvex4v.2 $e |- ( ( z = f /\ w = g ) -> ( ps <-> ch ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvex4v $p |- ( E. x E. y E. z E. w ph <-> E. v E. u E. f E. g ch ) $=
      ( wex weq wa 2exbidv cbvex2v 2exbii bitri ) AGNFNZENDNBGNFNZINHNCKNJNZINH
      NUAUBDEHIDHOEIOPABFGLQRUBUCHIBCFGJKMRST $.
      $( [26-Jul-1995] $)
  $}

  ${
    eean.1 $e |- ( ph -> A. y ph ) $.
    eean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers. $)
    eean $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( wa wex 19.42 exbii hbex 19.41 bitri ) ABGDHZCHABDHZGZCHACHOGNPCABDEIJAO
      CBCDFKLM $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    $( Rearrange existential quantifiers. $)
    eeanv $p |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) $=
      ( ax-17 eean ) ABCDADEBCEF $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d y ph $.  $d z ph $.  $d x z ps $.  $d x y ch $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    eeeanv $p |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <->
                 ( E. x ph /\ E. y ps /\ E. z ch ) ) $=
      ( w3a wex wa df-3an 3exbii eeanv exbii anbi1i 19.41v 3bitr4i 3bitri ) ABC
      GZFHEHDHABIZCIZFHEHZDHSEHZCFHZIZDHZADHZBEHZUCGZRTDEFABCJKUAUDDSCEFLMUBDHZ
      UCIUFUGIZUCIUEUHUIUJUCABDELNUBUCDOUFUGUCJPQ $.
      $( [25-May-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d z ph $.  $d w ph $.  $d x ps $.  $d y ps $.  $d y z $.  $d w x $.
    $( Rearrange existential quantifiers. $)
    ee4anv $p |- ( E. x E. y E. z E. w ( ph /\ ps ) <->
                  ( E. x E. y ph /\ E. z E. w ps ) ) $=
      ( wa wex excom exbii eeanv 2exbii 3bitri ) ABGFHZEHDHZCHNDHZEHZCHADHZBFHZ
      GZEHCHRCHSEHGOQCNDEIJPTCEABDFKLRSCEKM $.
      $( [31-Jul-1995] $)
  $}

  ${
    $d x ph $.
    nexdv.1 $e |- ( ph -> -. ps ) $.
    $( Deduction for generalization rule for negated wff. $)
    nexdv $p |- ( ph -> -. E. x ps ) $=
      ( ax-17 nexd ) ABCACEDF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ps $.
    chv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    chv.2 $e |- ph $.
    $( Implicit substitution of ` y ` for ` x ` into a theorem. $)
    chvarv $p |- ps $=
      ( a4v mpg ) ABCABCDEGFH $.
      $( [20-Apr-1994] $)
  $}

  ${
    $d x z $.  $d y z $.
    $( When the class variables in definition ~ df-clel are replaced with set
       variables, this theorem of predicate calculus is the result.  This
       theorem provides part of the justification for the consistency of that
       definition, which "overloads" the set variables in ~ wel with the class
       variables in ~ wcel . $)
    cleljust $p |- ( x e. y <-> E. z ( z = x /\ z e. y ) ) $=
      ( weq wel wa wex ax-17 elequ1 equsex bicomi ) CADCBEZFCGABEZLMCAMCHCABIJK
      $.
      $( [28-Jan-2004] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        More substitution theorems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$( The theorems in this section make use of the $d statement. $)

  ${
    $d y z $.  $d x y $.
    $( Lemma for ~ equsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    equsb3lem $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( cv wceq ax-17 equequ1 sbie ) BDCDZEADIEZBAJBFBACGH $.
      $( [14-Jun-2011] $) $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic wff.  (Contributed by Raph Levien and
       FL, 4-Dec-2005.) $)
    equsb3 $p |- ( [ x / y ] y = z <-> x = z ) $=
      ( vw weq wsb equsb3lem sbbii ax-17 sbco2 3bitr3i ) BCEZBDFZDAFDCEZDAFLBAF
      ACEMNDADBCGHLBADLDIJADCGK $.
      $( [4-Dec-2005] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (The proof was
       shortened by Andrew Salmon, 14-Jun-2011.) $)
    elsb3 $p |- ( [ x / y ] y e. z <-> x e. z ) $=
      ( vw wel wsb ax-17 elequ1 sbie sbbii sbco2 bitr3i wb weq sbimi ax-mp sbbi
      equsb1 mpbi sbf 3bitri ) BCEZBAFZDCEZDAFZACEZDAFZUFUCUDDBFZBAFUEUHUBBAUDU
      BDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDARUKUIDADACHOPUDUFDAQSUF
      DAUFDGTUA $.
      $( [14-Jun-2011] $) $( [7-Nov-2006] $)
  $}

  ${
    $d w y z $.  $d w x $.
    $( Substitution applied to an atomic membership wff.  (Contributed by
       Rodolfo Medina, 3-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    elsb4 $p |- ( [ x / y ] z e. y <-> z e. x ) $=
      ( vw wel wsb ax-17 elequ2 sbie sbbii sbco2 bitr3i wb weq sbimi ax-mp sbbi
      equsb1 mpbi sbf 3bitri ) CBEZBAFZCDEZDAFZCAEZDAFZUFUCUDDBFZBAFUEUHUBBAUDU
      BDBUBDGDBCHIJUDDABUDBGKLUDUFMZDAFZUEUGMDANZDAFUJDARUKUIDADACHOPUDUFDAQSUF
      DAUFDGTUA $.
      $( [14-Jun-2011] $) $( [3-Apr-2010] $)
  $}

  ${
    $d x y $.
    $( ` x ` is not free in ` [ y / x ] ph ` when ` x ` and ` y ` are
       distinct. $)
    hbs1 $p |- ( [ y / x ] ph -> A. x [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb2 pm2.61i ) BCDBEABCFZKBEGKBCHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d y ph $.
    $( Two ways of expressing " ` x ` is (effectively) not free in ` ph ` ." $)
    sbhb $p |- ( ( ph -> A. x ph ) <-> A. y ( ph -> [ y / x ] ph ) ) $=
      ( wal wi wsb ax-17 sb8 imbi2i 19.21v bitr4i ) AABDZEAABCFZCDZEAMECDLNAABC
      ACGHIAMCJK $.
      $( [29-May-2009] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( Two ways of expressing " ` x ` is (effectively) not free in ` ph ` ."
       (Contributed by G&eacute;rard Lang, 14-Nov-2013.) $)
    sbhb2 $p |- ( A. x ( ph -> A. x ph )
           <-> A. y A. z ( [ y / x ] ph <-> [ z / x ] ph ) ) $=
      ( cv wsbc wb wal wi 2albiim sbhb albii alcom bitri ax-17 sb8 sblim 3bitri
      wa hbs1 anbi12i anidm 3bitr2ri ) ABCEZFZABDEZFZGDHCHUEUGIZDHCHZUGUEIZDHZC
      HZSAABHIZBHZUNSUNUEUGCDJUNUIUNULUNAUGIZBHZDHZUHCHZDHUIUNUODHZBHUQUMUSBABD
      KLUOBDMNUPURDUPUOBUDFZCHURUOBCUOCOPUTUHCAUGBCABDTQLNLUHDCMRUNAUEIZCHZBHVA
      BHZCHULUMVBBABCKLVABCMVCUKCVCVABUFFZDHUKVABDVADOPVDUJDAUEBDABCTQLNLRUAUNU
      BUC $.
      $( [14-Nov-2013] $)
  $}

  ${
    $d y z $.
    hbsb.1 $e |- ( ph -> A. z ph ) $.
    $( If ` z ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` when
       ` y ` and ` z ` are distinct. $)
    hbsb $p |- ( [ y / x ] ph -> A. z [ y / x ] ph ) $=
      ( weq wal wsb wi ax-16 hbsb4 pm2.61i ) DCFDGABCHZMDGIMDCJABCDEKL $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d y z $.
    hbsbd.1 $e |- ( ph -> A. x ph ) $.
    hbsbd.2 $e |- ( ph -> A. z ph ) $.
    hbsbd.3 $e |- ( ph -> ( ps -> A. z ps ) ) $.
    $( Deduction version of ~ hbsb . $)
    hbsbd $p |- ( ph -> ( [ y / x ] ps -> A. z [ y / x ] ps ) ) $=
      ( cv wceq wal wsbc wi wn alrimi 2alimi hbsb4t 3syl ax-16 pm2.61d2 ) AEIDI
      ZJEKZBCUALZUCEKMZAAEKZCKBBEKMZEKCKUBNUDMAUECFGOAUFCEHPBCDEQRUCEDST $.
      $( [15-Feb-2013] $)
  $}

  ${
    $d x y z $.  $d w y $.
    $( Equivalence for double substitution. $)
    2sb5 $p |- ( [ z / x ] [ w / y ] ph <->
               E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) $=
      ( wsb weq wa wex sb5 19.42v anass exbii anbi2i 3bitr4ri bitri ) ACEFZBDFB
      DGZQHZBIRCEGZHAHZCIZBIQBDJSUBBRTAHZHZCIRUCCIZHUBSRUCCKUAUDCRTALMQUERACEJN
      OMP $.
      $( [3-Feb-2005] $)

    $( Equivalence for double substitution. $)
    2sb6 $p |- ( [ z / x ] [ w / y ] ph <->
               A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wsb weq wi wal wa sb6 19.21v impexp albii imbi2i 3bitr4ri bitri ) ACEFZ
      BDFBDGZRHZBISCEGZJAHZCIZBIRBDKTUCBSUAAHZHZCISUDCIZHUCTSUDCLUBUECSUAAMNRUF
      SACEKOPNQ $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x z $.  $d x w $.  $d y z $.
    $( Commutativity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbcom2 $p |- ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) $=
      ( weq wal wsb wb wn wi albii 19.21v sb4b imbi2d albidv hbae sbequ12 sbbid
      a4s wa alcom bi2.04 bitri 3bitr3i a1i sylan9bbr sylan9bb 3bitr4d pm2.61ii
      ex bitr3d ) BCFZBGZDEFZDGZABCHZDEHZADEHZBCHZIZUNJZUPJZVAVBVCUAZUOUMAKZBGZ
      KZDGZUMUOAKZDGZKZBGZURUTVHVLIVDUMVIKZBGZDGVMDGZBGVHVLVMDBUBVNVGDVNUOVEKZB
      GVGVMVPBUMUOAUCLUOVEBMUDLVOVKBUMVIDMLUEUFVCURUOUQKZDGVBVHUQDENVBVQVGDVBUQ
      VFUOABCNOPUGVBUTUMUSKZBGVCVLUSBCNVCVRVKBVCUSVJUMADENOPUHUIUKUNUSURUTUNAUQ
      DEBCDQUMAUQIBABCRTSUMUSUTIBUSBCRTULUPUQURUTUOUQURIDUQDERTUPAUSBCDEBQUOAUS
      IDADERTSULUJ $.
      $( [27-May-1997] $)
  $}

  ${
    $d ph x y z $.  $d w x z $.
    $( Theorem *11.07 in [WhiteheadRussell] p. 159.  (Contributed by Andrew
       Salmon, 17-Jun-2011.) $)
    pm11.07 $p |- ( [ w / x ] [ y / z ] ph <-> [ y / x ] [ w / z ] ph ) $=
      ( cv wceq wa wex wsbc a9e pm3.2i 2th eeanv 3bitr4i anbi1i 19.41vv 2sb5 )
      BFZEFZGZDFZCFZGZHZAHDIBIZSUCGZUBTGZHZAHDIBIZADUCJBTJADTJBUCJUEDIBIZAHUIDI
      BIZAHUFUJUKULAUABIZUDDIZHZUGBIZUHDIZHZUKULUOURUMUNBEKDCKLUPUQBCKDEKLMUAUD
      BDNUGUHBDNOPUEABDQUIABDQOABDECRABDCERO $.
      $( [17-Jun-2011] $)
  $}

  ${
    $d x y $.
    $( Equivalence for substitution. $)
    sb6a $p |- ( [ y / x ] ph <-> A. x ( x = y -> [ x / y ] ph ) ) $=
      ( wsb weq wi wal sb6 wb sbequ12 equcoms pm5.74i albii bitri ) ABCDBCEZAFZ
      BGOACBDZFZBGABCHPRBOAQAQICBACBJKLMN $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x w $.  $d y z $.  $d z w $.
    2sb5rf.1 $e |- ( ph -> A. z ph ) $.
    2sb5rf.2 $e |- ( ph -> A. w ph ) $.
    $( Reversed double substitution. $)
    2sb5rf $p |- ( ph <->
                E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wex sb5rf 19.42v sbcom2 anbi2i anass bitri exbii hbsb 3bitr4ri
      wa ) ADBHZABDIZTZDJUAECHZTZACEIBDIZTZEJZDJABDFKUCUHDUAUDUBCEIZTZTZEJUAUJE
      JZTUHUCUAUJELUGUKEUGUEUITUKUFUIUEACEBDMNUAUDUIOPQUBULUAUBCEABDEGRKNSQP $.
      $( [3-Feb-2005] $)

    $( Reversed double substitution. $)
    2sb6rf $p |- ( ph <->
                A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) $=
      ( weq wsb wi wal wa sb6rf 19.21v sbcom2 imbi2i impexp bitri albii hbsb
      3bitr4ri ) ADBHZABDIZJZDKUBECHZLZACEIBDIZJZEKZDKABDFMUDUIDUBUEUCCEIZJZJZE
      KUBUKEKZJUIUDUBUKENUHULEUHUFUJJULUGUJUFACEBDOPUBUEUJQRSUCUMUBUCCEABDEGTMP
      UASR $.
      $( [3-Feb-2005] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( An alternate definition of proper substitution ~ df-sb .  By introducing
       a dummy variable ` z ` in the definiens, we are able to eliminate any
       distinct variable restrictions among the variables ` x ` , ` y ` , and
       ` ph ` of the definiendum.  No distinct variable conflicts arise because
       ` z ` effectively insulates ` x ` from ` y ` .  To achieve this, we use
       a chain of two substitutions in the form of ~ sb5 , first ` z ` for
       ` x ` then ` y ` for ` z ` .  Compare Definition 2.1'' of [Quine] p. 17,
       which is obtained from this theorem by applying ~ df-clab .  Theorem
       ~ sb7f provides a version where ` ph ` and ` z ` don't have to be
       distinct. $)
    dfsb7 $p |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii ax-17 sbco2 3bitr3i ) ABDEZDCEBDFAGBHZDCEABCED
      CFOGDHNODCABDIJABCDADKLODCIM $.
      $( [28-Jan-2004] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    sb7f.1 $e |- ( ph -> A. z ph ) $.
    $( This version of ~ dfsb7 does not require that ` ph ` and ` z ` be
       distinct.  This permits it to be used as a definition for substitution
       in a formalization that omits the logically redundant axiom ~ ax-17 i.e.
       that doesn't have the concept of a variable not occurring in a wff.
       ( ~ df-sb is also suitable, but its mixing of free and bound variables
       is distasteful to some logicians.)  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sb7f $p |- ( [ y / x ] ph <->
               E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) $=
      ( wsb weq wa wex sb5 sbbii sbco2 3bitr3i ) ABDFZDCFBDGAHBIZDCFABCFDCGOHDI
      NODCABDJKABCDELODCJM $.
      $( [25-May-2011] $) $( [26-Jul-2006] $)
  $}

  ${
    $d x y $.
    sb10f.1 $e |- ( ph -> A. x ph ) $.
    $( Hao Wang's identity axiom P6 in Irving Copi, _Symbolic Logic_ (5th ed.,
       1979), p. 328.  In traditional predicate calculus, this is a sole axiom
       for identity from which the usual ones can be derived. $)
    sb10f $p |- ( [ y / z ] ph <-> E. x ( x = y /\ [ x / z ] ph ) ) $=
      ( weq wsb wa wex hbsb sbequ equsex bicomi ) BCFADBGZHBIADCGZNOBCADCBEJABC
      DKLM $.
      $( [9-May-2005] $)
  $}

  ${
    $d x ph $.
    $( An identity law for substitution.  Used in proof of Theorem 9.7 of
       [Megill] p. 449 (p. 16 of the preprint). $)
    sbid2v $p |- ( [ y / x ] [ x / y ] ph <-> ph ) $=
      ( ax-17 sbid2 ) ABCABDE $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x ph $.
    $( Elimination of substitution. $)
    sbelx $p |- ( ph <-> E. x ( x = y /\ [ x / y ] ph ) ) $=
      ( wsb weq wa wex sbid2v sb5 bitr3i ) AACBDZBCDBCEKFBGABCHKBCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $( Note:  A more general case could also be proved with
       "$d x z $.  $d y w $.  $d x ph $.  $d y ph $.", but with more
       difficulty. $)
    $d x y z $.  $d w y $.  $d x y ph $.
    $( Elimination of double substitution. $)
    sbel2x $p |- ( ph <-> E. x E. y ( ( x = z /\ y = w ) /\
                     [ y / w ] [ x / z ] ph ) ) $=
      ( weq wsb wa wex sbelx anbi2i exbii exdistr 3bitr4i anass 2exbii bitr4i )
      ABDFZCEFZADBGZECGZHZHZCIBIZRSHUAHZCIBIRTHZBIRUBCIZHZBIAUDUFUHBTUGRTCEJKLA
      BDJRUBBCMNUEUCBCRSUAOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( A theorem used in elimination of disjoint variable restriction on ` x `
       and ` y ` by replacing it with a distinctor ` -. A. x x = z ` . $)
    sbal1 $p |- ( -. A. x x = z ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wsb wb wi sbequ12 a4s dral2 bitr3d a1d wa hba1 al2imi hbnaes
      syl6 hbsb4 ax-4 sbimi alimi adantl sb4 ax-7 dveeq2 alim sb2 sylan9 impbid
      syl9 ex pm2.61i ) CDEZCFZBDEBFGZABFZCDHZACDHZBFZIZJUQVCURUQUSUTVBUPUSUTIC
      USCDKLAVACDBUPAVAICACDKLMNOUQGZURVCVDURPUTVBURUTVBJVDURUTUTBFVBUSCDBABQUA
      UTVABUSACDABUBUCUDTUEVDVBUPAJZBFZCFZURUTVDVBVECFZBFZVGVBVIJCDBVDVAVHBACDU
      FRSVEBCUGTVGUTJBDCURCFVGUPUSJZCFUTURVFVJCURUPUPBFVFUSBDCUHUPABUIUMRUSCDUJ
      TSUKULUNUO $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move universal quantifier in and out of substitution. $)
    sbal $p |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) $=
      ( weq wal wsb wb a16gb sbimi sbequ5 sbbi 3imtr3i bitr3d sbal1 pm2.61i ) B
      DEBFZABFZCDGZACDGZBFZHQTSUAQCDGARHZCDGQTSHQUBCDABDBIJBDCDKARCDLMTBDBINABC
      DOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d x z $.
    $( Move existential quantifier in and out of substitution. $)
    sbex $p |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) $=
      ( wn wal wsb wex sbn sbal albii bitri xchbinx df-ex sbbii 3bitr4i ) AEZBF
      ZEZCDGZACDGZEZBFZEABHZCDGUABHTRCDGZUCRCDIUEQCDGZBFUCQBCDJUFUBBACDIKLMUDSC
      DABNOUABNP $.
      $( [27-Sep-2003] $)
  $}

  ${
    $d x z $.  $d y z $.
    sbalv.1 $e |- ( [ y / x ] ph <-> ps ) $.
    $( Quantify with new variable inside substitution. $)
    sbalv $p |- ( [ y / x ] A. z ph <-> A. z ps ) $=
      ( wal wsb sbal albii bitri ) AEGCDHACDHZEGBEGAECDILBEFJK $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( An equivalent expression for existence. $)
    exsb $p |- ( E. x ph <-> E. y A. x ( x = y -> ph ) ) $=
      ( wex wsb weq wi wal ax-17 sb8e sb6 exbii bitri ) ABDABCEZCDBCFAGBHZCDABC
      ACIJNOCABCKLM $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d x y z $.  $d y w $.  $d z w ph $.
    $( An equivalent expression for double existence. $)
    2exsb $p |- ( E. x E. y ph <->
                  E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) $=
      ( wex weq wi wal exsb exbii excom bitri impexp albii 19.21v bitr2i 3bitri
      wa ) ACFZBFZCEGZAHZCIZBFZEFZBDGZUBSAHZCIZBIZDFZEFUJEFDFUAUDEFZBFUFTULBACE
      JKUDBELMUEUKEUEUGUDHZBIZDFUKUDBDJUNUJDUMUIBUIUGUCHZCIUMUHUOCUGUBANOUGUCCP
      QOKMKUJEDLR $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z ps $.
    dvelim.1 $e |- ( ph -> A. x ph ) $.
    dvelim.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( This theorem can be used to eliminate a distinct variable restriction on
       ` x ` and ` z ` and replace it with the "distinctor" ` -. A. x x = y `
       as an antecedent. ` ph ` normally has ` z ` free and can be read
       ` ph ( z ) ` , and ` ps ` substitutes ` y ` for ` z ` and can be read
       ` ph ( y ) ` .  We don't require that ` x ` and ` y ` be distinct: if
       they aren't, the distinctor will become false (in multiple-element
       domains of discourse) and "protect" the consequent.

       To obtain a closed-theorem form of this inference, prefix the hypotheses
       with ` A. x A. z ` , conjoin them, and apply ~ dvelimdf .

       Other variants of this theorem are ~ dvelimf (with no distinct variable
       restrictions), ~ dvelimfALT (that avoids ~ ax-11 ), and ~ dvelimALT
       (that avoids ~ ax-10 ). $)
    dvelim $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( ax-17 dvelimf ) ABCDEFBEHGI $.
      $( [23-Nov-1994] $)
  $}

  ${
    $d z ps $.  $d x z $.  $d y z $.
    dvelimALT.1 $e |- ( ph -> A. x ph ) $.
    dvelimALT.2 $e |- ( z = y -> ( ph <-> ps ) ) $.
    $( Version of ~ dvelim that doesn't use ~ ax-10 .  (See ~ dvelimfALT for a
       version that doesn't use ~ ax-11 .) $)
    dvelimALT $p |- ( -. A. x x = y -> ( ps -> A. x ps ) ) $=
      ( weq wal wn wi ax-17 hba1 ax16ALT a1i hbimd a1d wa hbn hban ax-12 imp ex
      pm2.61i hbald equsal albii 3imtr3g ) CDHZCIZJZEDHZAKZEIZUNCIBBCIUKUMCEUKE
      LCEHZCIZUKUMUMCIKZKUPUQUKUPULACUOCMZULCENAACIKZUPFOPQUPJZUKUQUTUKRZULACUT
      UKCUPCURSUJCUICMSTUTUKULULCIKEDCUAUBUSVAFOPUCUDUEABEDBELGUFZUNBCVBUGUH $.
      $( [17-May-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveeq1 $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax-17 equequ1 dvelim ) DCEZBCEABDIAFDBCGH $.
      $( [2-Jan-2002] $)
    $( Quantifier introduction when one pair of variables is distinct.  Version
       of ~ dveeq1 using ax-10o . $)
    dveeq1-o $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax-17 equequ1 dvelimf-o ) DCEZBCEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)

    $( Version of ~ dveeq1 using ~ ax-16 instead of ~ ax-17 . $)
    dveeq1ALT $p |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) $=
      ( vw weq ax17eq equequ1 dvelimfALT ) DCEBCEABDDCAFBCDFDBCGH $.
      $( [29-Apr-2008] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel1 $p |- ( -. A. x x = y -> ( y e. z -> A. x y e. z ) ) $=
      ( vw wel ax-17 elequ1 dvelimfALT ) DCEZBCEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Quantifier introduction when one pair of variables is distinct. $)
    dveel2 $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax-17 elequ2 dvelimfALT ) CDEZCBEZABDIAFJDFDBCGH $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d z y $.  $d z x $.
    $( Move quantifier in and out of substitution. $)
    sbal2 $p |- ( -. A. x x = y ->
             ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) $=
      ( weq wal wn wi wsb alcom hbnae dveeq1 alimi hbnaes 19.21t albid syl5rbbr
      wb syl sb6 albii 3bitr4g ) BCEBFGZCDEZABFZHZCFZUDAHZCFZBFZUECDIACDIZBFUJU
      HBFZCFUCUGUHCBJUCULUFCBCCKUCUDUDBFHZBFZULUFRUNBCBUCUMBBCDLMNUDABOSPQUECDT
      UKUIBACDTUAUB $.
      $( [2-Jan-2002] $)
  $}

  ${
    $d w y $.  $d w z $.  $d w x $.  $( ` w ` is dummy. $)
    $( Axiom ~ ax-15 is redundant if we assume ~ ax-17 .  Remark 9.6 in
       [Megill] p. 448 (p. 16 of the preprint), regarding axiom scheme C14'.

       Note that ` w ` is a dummy variable introduced in the proof.  On the web
       page, it is implicitly assumed to be distinct from all other variables.
       (This is made explicit in the database file set.mm).  Its purpose is to
       satisfy the distinct variable requirements of ~ dveel2 and ~ ax-17 .  By
       the end of the proof it has vanished, and the final theorem has no
       distinct variable requirements.

       This theorem should not be referenced in any proof.  Instead, use
       ~ ax-15 below so that theorems needing ~ ax-15 can be more easily
       identified. $)
    ax15 $p |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $=
      ( vw weq wal wn wi hbn1 dveel2 hbim1 ax-17 elequ1 imbi2d dvelimfALT 19.21
      wel syl6ib pm2.86d ) CAECFGZCBEZCFGZABQZUCCFZTUBUCHZUECFUBUDHUBDBQZHUECAD
      UBUFCUACIZCBDJKUEDLDAEUFUCUBDABMNOUBUCCUGPRS $.
      $( [29-Jun-1995] $)
  $}

  $( Axiom of Quantifier Introduction.  One of the equality and substitution
     axioms for a non-logical predicate in our predicate calculus with
     equality.  Axiom scheme C14' in [Megill] p. 448 (p. 16 of the preprint).
     It is redundant if we include ~ ax-17 ; see theorem ~ ax15 .  Alternately,
     ~ ax-17 becomes unnecessary in principle with this axiom, but we lose the
     more powerful metalogic afforded by ~ ax-17 .  We retain ~ ax-15 here to
     provide completeness for systems with the simpler metalogic that results
     from omitting ~ ax-17 , which might be easier to study for some
     theoretical purposes. $)
  ax-15 $a |- ( -. A. z z = x -> ( -. A. z z = y ->
              ( x e. y -> A. z x e. y ) ) ) $.

  ${
    $d x z $.  $d y z $.
    $( Theorem to add distinct quantifier to atomic formula.  This theorem
       demonstrates the induction basis for ~ ax-17 considered as a
       metatheorem.) $)
    ax17el $p |- ( x e. y -> A. z x e. y ) $=
      ( weq wal wel wi ax-15 ax-16 pm2.61ii ) CADCECBDCEABFZKCEGABCHKCAIKCBIJ
      $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d w z x $.  $d w y $.
    $( Version of ~ dveel2 using ~ ax-16 instead of ~ ax-17 . $)
    dveel2ALT $p |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) $=
      ( vw wel ax17el elequ2 dvelimfALT ) CDECBEABDCDAFCBDFDBCGH $.
      $( [10-May-2008] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for equality predicate. $)
    ax11eq $p |- ( -. A. x x = y ->
               ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) $=
      ( vu vv weq wal wn wi wa 19.26 a1i wb equequ1 equequ2 a4s imbi2d imbi12d
      exp32 equid ax-gen sylan9bb hba1 albid adantr mpbii sylbir ad2antll ax-12
      impcom adantrr equtrr alimi syl6 sylbid adantll dral2-o ad2antrr biimprcd
      imp adantlr ad2antlr wex a9e ax-1 alrimiv adantl dveeq2-o im2anan9 sylibr
      mpbid syl exlimdv mpi a1d 4cases ) ACGZAHZADGZAHZABGZAHIZWBCDGZWBWDJZAHZJ
      ZJZJZVSWAKVRVTKZAHZWIVRVTALWKWCWBWGWKWCWBKZKAAGZWBWMJZAHZJZWGWOWMWNAWMWBA
      UAMUBMWKWPWGNWLWKWMWDWOWFWJWMWDNAVRWMCAGZVTWDACAOADCPZUCQZWKWNWEAWJAUDWKW
      MWDWBWSRUESUFUGTUHVSWAIZKZWCWBWGXAWLKVTWBVTJZAHZJZWGWTWLXDVSWTWLKZVTBDGZX
      CWBVTXFNWTWCABDOUIXEXFXFAHZXCWTWCXFXGJZWBWCWTXHBDAUJUKULXFXBABDAUMUNUOUPU
      QVSXDWGNWTWLVSVTWDXCWFVRVTWDNAACDOQZXBWEACAVSVTWDWBXIRURSUSVLTVSIZWAKZWCW
      BWGXKWLKWQWBWQJZAHZJZWGXJWLXNWAXJWLKZWQCBGZXMWBWQXPNXJWCABCPZUIXOXPXPAHZX
      MXJWCXPXRJZWBXJWCXSCBAUJVAULXPXLAWBWQXPXQUTUNUOUPVBWAXNWGNXJWLWAWQWDXMWFV
      TWQWDNAWRQZXLWEADAWAWQWDWBXTRURSVCVLTXJWTKZWHWCYAWGWBYAEDGZEVDWGEDVEYAYBW
      GEYAFCGZFVDYBWGJZFCVEYAYCYDFYAYCYBWGYAYCYBKZKZFEGZWBYGJZAHZJWGYGYHAYGWBVF
      VGYFYGWDYIWFYEYGWDNZYAYCYGCEGYBWDFCEOEDCPUCZVHYFYEAHZYIWFNYFYCAHZYBAHZKZY
      LYAYEYOXJYCYMWTYBYNACFVIADEVIVJVAYCYBALVKYLYHWEAYEAUDYLYGWDWBYEYJAYKQRUEV
      MSUGTVNVOVNVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    $d x u v $.  $d y u v $.  $d z u v $.  $d w u v $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  Atomic formula for membership predicate. $)
    ax11el $p |- ( -. A. x x = y ->
               ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) $=
      ( vv vu weq wal wn wel wi wa wb elequ1 elequ2 adantl imbi2d imbi12d exp32
      a4s 19.26 bitrd ax-17 dvelimf-o biimprcd syl6 adantr sylbid sylan9bb hba1
      alimi albid mpbid sylbir ad2antll impcom adantrr adantll dral2-o ad2antrr
      ax-15 imp adantlr ad2antlr wex a9e alrimiv dveeq2-o im2anan9 sylibr mpbii
      ax-1 syl exlimdv mpi a1d 4cases ) ACGZAHZADGZAHZABGZAHIZWBCDJZWBWDKZAHZKZ
      KZKZVSWALVRVTLZAHZWIVRVTAUAWKWCWBWGWKWCWBLZLAAJZWBWMKZAHZKZWGWLWPWKWLWMBB
      JZWOWBWMWQMWCWBWMBAJWQABANABBOUBZPWCWQWOKWBWCWQWQAHWOEEJZWQABEWSAUCWQEUCE
      BGWSBEJWQEBENEBBOUBUDWQWNAWBWMWQWRUEUKUFUGUHPWKWPWGMWLWKWMWDWOWFWJWMWDMAV
      RWMCAJZVTWDACANADCOZUITZWKWNWEAWJAUJWKWMWDWBXBQULRUGUMSUNVSWAIZLZWCWBWGXD
      WLLADJZWBXEKZAHZKZWGXCWLXHVSXCWLLZXEBDJZXGWBXEXJMXCWCABDNZUOXIXJXJAHZXGXC
      WCXJXLKZWBWCXCXMBDAVAUPUQXJXFAWBXEXJXKUEUKUFUHURVSXHWGMXCWLVSXEWDXGWFVRXE
      WDMAACDNTZXFWEACAVSXEWDWBXNQUSRUTUMSVSIZWALZWCWBWGXPWLLWTWBWTKZAHZKZWGXOW
      LXSWAXOWLLZWTCBJZXRWBWTYAMXOWCABCOZUOXTYAYAAHZXRXOWCYAYCKZWBXOWCYDCBAVAVB
      UQYAXQAWBWTYAYBUEUKUFUHVCWAXSWGMXOWLWAWTWDXRWFVTWTWDMAXATZXQWEADAWAWTWDWB
      YEQUSRVDUMSXOXCLZWHWCYFWGWBYFFDGZFVEWGFDVFYFYGWGFYFECGZEVEYGWGKZECVFYFYHY
      IEYFYHYGWGYFYHYGLZLZEFJZWBYLKZAHZKWGYLYMAYLWBVLVGYKYLWDYNWFYJYLWDMZYFYHYL
      CFJYGWDECFNFDCOUIZPYKYJAHZYNWFMYKYHAHZYGAHZLZYQYFYJYTXOYHYRXCYGYSACEVHADF
      VHVIVBYHYGAUAVJYQYMWEAYJAUJYQYLWDWBYJYOAYPTQULVMRVKSVNVOVNVOVPVPVQ $.
      $( [22-Jan-2007] $)
  $}

  ${
    ax11f.1 $e |- ( ph -> A. x ph ) $.
    $( Basis step for constructing a substitution instance of ~ ax-11o without
       using ~ ax-11o .  We can start with any formula ` ph ` in which ` x ` is
       not free. $)
    ax11f $p |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $=
      ( weq wal wn wi ax-1 alrimi a1ii ) BCEZBFGLALAHZBFHAMBDALIJK $.
      $( [21-Jan-2007] $)
  $}

  ${
    ax11indn.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Negation case. $)
    ax11indn $p |- ( -. A. x x = y ->
               ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) $=
      ( weq wal wn wi wex 19.8a exanali hbn1 con3 syl6 com23 alrimd syl5bi syl5
      wa exp3a ) BCEZBFGZUAAGZUAUCHZBFZUAUCSZUFBIZUBUEUFBJUGUAAHZBFZGZUBUEUAABK
      UBUJUDBUABLUHBLUBUAUJUCUBUAAUIHUJUCHDAUIMNOPQRT $.
      $( [21-Jan-2007] $)

    ${
      ax11indi.2 $e |- ( -. A. x x = y ->
                 ( x = y -> ( ps -> A. x ( x = y -> ps ) ) ) ) $.
      $( Induction step for constructing a substitution instance of ~ ax-11o
         without using ~ ax-11o .  Implication case. $)
      ax11indi $p |- ( -. A. x x = y ->
           ( x = y -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ) $=
        ( weq wal wn wi wa ax11indn imp pm2.21 imim2i alimi syl6 ax-1 jad ex )
        CDGZCHIZUAABJZUAUCJZCHZJUBUAKZABUEUFAIZUAUGJZCHZUEUBUAUGUIJACDELMUHUDCU
        GUCUAABNOPQUFBUABJZCHZUEUBUABUKJFMUJUDCBUCUABAROPQST $.
        $( [21-Jan-2007] $)
    $}
  $}

  ${
    ax11indalem.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( Lemma for ~ ax11inda2 and ~ ax11inda . $)
    ax11indalem $p |- ( -. A. y y = z -> ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd a1d alequcom-o con3i imp hbnae-o hban
      wa dral1-o imbi2d dral2-o 3imtr4d alequcoms-o adantr simplr ax-12 adantlr
      syl2an hba1 ax-4 sylan2 alimd syl2anc ax-7 alrimi 19.21t syl albid syl5ib
      wb ad2antrr syld exp31 pm2.61ian ) BDFBGZCDFCGZHZBCFZBGHZVJADGZVJVLIZBGZI
      ZIZIZVGVQVIVGVPVKVGVOVJVODBDBFDGZABGZVJVSIZBGZVLVNVSWAIVRAVTBVSVJJKLAADBV
      RAMUAZVMVTDBBVRVLVSVJWBUBUCUDUENNUFVGHZVITZVKVJVOWDVKTVJTZVLVJAIZBGZDGZVN
      WEVKVJDGZVLWHIWDVKVJUGWDVJWIVKWDVJWIWCVRHZDCFDGZHZVJWIIZVIVRVGDBOPWKVHDCO
      PWJWLWMBCDUHQUJZQUIVKWITAWGDVKWIDBCDRVJDUKSWIVKVJAWGIZVJDULVKVJWOEQUMUNUO
      WDWHVNIVKVJWHWFDGZBGWDVNWFDBUPWDWPVMBWCVIBBDBRCDBRSWDWMDGWPVMVBWDWMDWCVID
      BDDRCDDRSWNUQVJADURUSUTVAVCVDVEVF $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d z y $.
    ax11inda2.1 $e |- ( -. A. x x = y ->
               ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) $.
    $( A proof of ~ ax11inda2 that is slightly more direct. $)
    ax11inda2ALT $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi ax-1 a5i a1i biidd dral1-o imbi2d dral2-o a1d imp hbnae-o
      wa 3imtr4d alequcoms-o simplr dveeq1-o nalequcoms-o hba1 hban ax-4 sylan2
      adantlr alimd syl2anc ax-7 wb alrimi 19.21t syl albid ad2antrr syld exp31
      syl5ib pm2.61i ) BDFBGZBCFZBGHZVEADGZVEVGIZBGZIZIZIVDVKVFVDVJVEVJDBDBFDGZ
      ABGZVEVMIZBGZVGVIVMVOIVLAVNBVMVEJKLAADBVLAMNZVHVNDBBVLVGVMVEVPOPUAUBQQVDH
      ZVFVEVJVQVFTVETZVGVEAIZBGZDGZVIVRVFVEDGZVGWAIVQVFVEUCVQVEWBVFVQVEWBVEWBIZ
      DBDBCUDUEZRUJVFWBTAVTDVFWBDBCDSVEDUFUGWBVFVEAVTIZVEDUHVFVEWEERUIUKULVQWAV
      IIVFVEWAVSDGZBGVQVIVSDBUMVQWFVHBBDBSVQWCDGWFVHUNVQWCDBDDSWDUOVEADUPUQURVB
      USUTVAVC $.
      $( [4-May-2007] $)

    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  When ` z ` and ` y ` are
       distinct, this theorem avoids the dummy variables needed by the more
       general ~ ax11inda . $)
    ax11inda2 $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi ax-1 a16g-o syl5 a1d ax11indalem pm2.61i ) CDFCGZBCFZBGHZ
      QADGZQSIZBGZIZIZIPUCRPUBQSTPUASQJTCDBKLMMABCDENO $.
      $( [24-Jan-2007] $)
  $}

  ${
    $d w ph $.  $d w x $.  $d w y $.  $d w z $.
    ax11inda.1 $e |- ( -. A. x x = w ->
               ( x = w -> ( ph -> A. x ( x = w -> ph ) ) ) ) $.
    $( Induction step for constructing a substitution instance of ~ ax-11o
       without using ~ ax-11o .  Quantification case.  (When ` z ` and ` y `
       are distinct, ~ ax11inda2 may be used instead to avoid the dummy
       variable ` w ` in the proof.) $)
    ax11inda $p |- ( -. A. x x = y ->
               ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) $=
      ( weq wal wn wi wex a9e wa ax11inda2 wb dveeq2-o imp albid syl imbi12d ex
      hba1 equequ2 a4s notbid adantl imbi1d imbi2d mpbii exlimdv mpi pm2.43i )
      BCGZBHZIZUMADHZUMUPJZBHZJZJZUOECGZEKUOUTJZECLUOVAVBEUOVAVBUOVAMZBEGZBHZIZ
      VDUPVDUPJZBHZJZJZJVBABEDFNVCVFUOVJUTVCVABHZVFUOOUOVAVKBCEPQZVKVEUNVKVDUMB
      VABUBZVAVDUMOZBECBUCZUDZRUESVCVDUMVIUSVAVNUOVOUFVCVHURUPVCVKVHUROVLVKVGUQ
      BVMVKVDUMUPVPUGRSUHTTUIUAUJUKUL $.
      $( [24-Jan-2007] $)
  $}

  $( Part of a study related to ~ ax-12 .  The consequent introduces a new
     variable ` z ` .  There are no distinct variable restrictions. $)
  a12stdy1 $p |- ( A. x x = y -> E. x y = z ) $=
    ( weq wal wex a9e wn ax-10o con3d df-ex 3imtr4g mpi ) ABDAEZBCDZBFZOAFZBCGN
    OHZBEZHRAEZHPQNTSRABIJOBKOAKLM $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent is quantified with a
     different variable.  There are no distinct variable restrictions. $)
  a12stdy2 $p |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) $=
    ( weq wa wal 19.26 ax-10o alequcom syl6 imp sylbi ) CADZABDZECFMCFZNCFZEBAD
    BFZMNCGOPQOPNAFQNCAHABIJKL $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The consequent introduces two new
     variables.  There are no distinct variable restrictions. $)
  a12stdy3 $p |- ( A. z ( z = x /\ x = y ) -> A. v E. y x = w ) $=
    ( weq wa wal wex a12stdy2 hbae a12stdy1 alimi 3syl ) CAFABFGCHBAFBHZOEHADFB
    IZEHABCJBAEKOPEBADLMN $.
    $( [14-Jan-2008] $)

  $( Part of a study related to ~ ax-12 .  The second antecedent of ~ ax-12 is
     replaced.  There are no distinct variable restrictions. $)
  a12stdy4 $p |- ( -. A. z z = x -> ( A. y z = x ->
           ( x = y -> A. z x = y ) ) ) $=
    ( weq wal wn wi wa ax-10o alequcoms con3d impcom pm2.21d ax-12 a1dd pm2.61d
    ex ) CADZCEZFZCBDCEZRBEZABDZUCCEGZGZTUAUETUAHUBUDUATUBFUAUBSUBSGBCRBCIJKLMQ
    TUAFUDUBABCNOP $.
    $( [14-Jan-2008] $)

  $( Proof of first hypothesis of ~ a12study . $)
  a12lem1 $p |- ( -. A. z z = y ->
                  ( A. z ( z = x -> z = y ) -> x = y ) ) $=
    ( weq wal wn wi wb equequ1 imbi12d a4s dral2 equid a1bi biimpri syl6bi hbn1
    a1d wa hban hbth a1i ax-12 imp hbimd alrimi equtr ax-8 imim12d ax-gen 19.26
    a4imt sylbir sylancl mpii ex pm2.61i ) CADZCEZCBDZCEFZURUTGZCEZABDZGZGUSVEV
    AUSVCAADZVDGZCEZVDVBVGCACURVBVGHCURURVFUTVDCAAICABIJKLVGVDCVDVGVFVDAMZNOKPR
    USFZVAVEVJVASZVCVFVDVIVKVGVHGZCEZURVBVGGGZCEZVCVGGZVKVLCVJVACURCQUTCQTZVKVF
    VDCVQVFVFCEGVKVFCVIUAUBVJVAVDVDCEGABCUCUDUEUFVNCURVFURUTVDCAAUGCABUHUIUJVMV
    OSVLVNSCEVPVLVNCUKVBVGCAULUMUNUOUPUQ $.
    $( [15-Jan-2008] $)

  $( Proof of second hypothesis of ~ a12study . $)
  a12lem2 $p |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $=
    ( weq wn wi wal wa wex equcom imbi1i imnan bitri albii alnex equvini con3i
    sylbi ) CADZCBDZEZFZCGZACDZTHZCIZEZABDZEUCUEEZCGUGUBUICUBUDUAFUISUDUACAJKUD
    TLMNUECOMUHUFABCPQR $.
    $( [15-Jan-2008] $)

  ${
    a12study.1 $e |- ( -. A. z z = y
         -> ( A. z ( z = x -> z = y ) -> x = y ) ) $.
    a12study.2 $e |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) $.
    $( Rederivation of axiom ~ ax-12 from two shorter formulas, without using
       ~ ax-12 .  See ~ a12lem1 and ~ a12lem2 for the proofs of the hypotheses
       (using ~ ax-12 ).  This is the only known breakdown of ~ ax-12 into
       shorter formulas.  See ~ a12studyALT for an alternate proof.  Note that
       the proof depends on ~ ax-11o , whose proof ~ ax11o depends on ~ ax-12 ,
       meaning that we would have to replace ~ ax-11 with ~ ax-11o in an
       axiomatization that uses the hypotheses in place of ~ ax-12 .  Whether
       this can be avoided is an open problem. $)
    a12study $p |- ( -. A. z z = x -> ( -. A. z z = y
                     -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wa wex wal wn imnan equid1 ax-8 mpi imim1i sylbir alimi hbn1 hba1
      wi con2i df-ex sylibr hban ax-11o syl5 imp3a alrimd sylan9 exlimd ex syl7
      syl ) ABFZACFZCBFZGZCHZCAFZCIJZUPCIJZUNCIZUNUQJZCIZJURVDUNVDUSUPJZTZCIUNJ
      VCVFCVCUOVETVFUOUPKUSUOVEUSCCFUOCLCACMNOPQEUMUAUQCUBUCUTVAURVBTUTVAGUQVBC
      UTVACUSCRUPCRZUDUNCSUTUQUSUPTZCIZVAVBUTUOUPVIUOUSUTUPVITUOAAFUSALACAMNUPC
      AUEUFUGVAVIUNCVGVHCSDUHUIUJUKUL $.
      $( [15-Jan-2008] $)

    $( Alternate proof of ~ a12study , also without using ~ ax-12 . $)
    a12studyALT $p |- ( -. A. z z = x -> ( -. A. z z = y
             -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wi wa hbn1 hban con3d wex exnal hba1 ax-11o ax11indn syl5bir
      annim a5i syl8 imp3a exlimd sylan9r hbnd notnot albii 3imtr4g ex ) CAFZCG
      HZCBFZCGHZABFZUOCGZIULUNJZUOHZHZUSCGUOUPUQURCULUNCUKCKZUMCKLUNURUKUMIZCGZ
      HZULURCGZUNVBUODMVCVAHZCNULVDVACOULVEVDCUTURCPVEUKUMHZJULVDUKUMTULUKVFVDU
      LUKVFUKVFIZCGVDUMCAUMCAQRVGURCEUAUBUCSUDSUEUFUOUGZUOUSCVHUHUIUJ $.
      $( [17-Jan-2008] $)
  $}

  ${
    $d w x $.  $d w y $.  $d w z $.
    a12study2.1 $e |- ( -. A. x x = z -> ( w = z -> A. x w = z ) ) $.
    a12study2.2 $e |- ( -. A. x x = y -> ( w = y -> A. x w = y ) ) $.
    $( Reprove ~ ax-12 using ~ dvelimfALT2 , showing that ~ ax-12 can be
       replaced by ~ dveeq2 (whose needed instances are the hypotheses here) if
       we allow distinct variables in axioms other than ~ ax-17 .  (Contributed
       by Andrew Salmon, 21-Jul-2011.) $)
    a12study2 $p |- ( -. A. x x = y
      -> ( -. A. x x = z -> ( y = z -> A. x y = z ) ) ) $=
      ( cv wceq wal wn hbn1 hbim1 ax-17 equequ1 imbi2d dvelimfALT2 19.21 syl6ib
      wi pm2.86d ) AGZBGZHAIJZUACGZHZAIJZUBUDHZUGAIZUCUFUGSZUIAIUFUHSUFDGZUDHZS
      UIABDUFUKAUEAKZELUIDMUJUBHUKUGUFDBCNOFPUFUGAULQRT $.
      $( [21-Jul-2011] $)
  $}

  ${
    a12study3.1 $e |- ( x = y -> E. z ( x = z /\ z = y ) ) $.
    a12study3.2 $e |- ( A. z ( z = x <-> z = y ) -> x = y ) $.
    $( Rederivation of axiom ~ ax-12 from two other formulas, without using
       ~ ax-12 .  See ~ equvini and ~ equveli for the proofs of the hypotheses
       (using ~ ax-12 ).  Although the second hypothesis (when expanded to
       primitives) is longer than ~ ax-12 , an open problem is whether it can
       be derived without ~ ax-12 or from a simpler axiom.

       Note also that the proof depends on ~ ax-11o , whose proof ~ ax11o
       depends on ~ ax-12 , meaning that we would have to replace ~ ax-11 with
       ~ ax-11o in an axiomatization that uses the hypotheses in place of
       ~ ax-12 .  Whether this can be avoided is an open problem. $)
    a12study3 $p |- ( -. A. z z = x -> ( -. A. z z = y
       -> ( x = y -> A. z x = y ) ) ) $=
      ( weq wal wn wi wa wb wex hbn1 hba1 equid1 ax-8 ax-11o syl5 imp3a exlimd
      mpi syl7 ancomsd anim12ii albiim syl6ibr a5i syl6 ex ) CAFZCGHZCBFZCGHZAB
      FZUNCGZIUKUMJZUNUJULKZCGZUOUPUNUJULIZCGZULUJIZCGZJZURUNACFZULJZCLZUPVCDUK
      VFUTUMVBUKVEUTCUJCMUSCNUKVDULUTVDUJUKULUTIVDAAFUJAOACAPUAZULCAQRSTUMVEVBC
      ULCMVACNUMULVDVBUMULVDVBVDUJUMULVBVGUJCBQUBSUCTUDRUJULCUEUFUQUNCEUGUHUI
      $.
      $( [1-Mar-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Existential uniqueness
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed for uniqueness notation. $)
  $c E! $.  $( Backwards E exclamation point. $)
  $c E* $.  $( Backwards E superscript *. $)

  $( Extend wff definition to include existential uniqueness ("there exists a
     unique ` x ` such that ` ph ` "). $)
  weu $a wff E! x ph $.

  $( Extend wff definition to include uniqueness ("there exists at most one
     ` x ` such that ` ph ` "). $)
  wmo $a wff E* x ph $.

  ${
    $d w x y $.  $d x z $.  $d y ph $.  $d w z ph $.
    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  See
       ~ eujustALT for a proof that provides an example of how it can be
       achieved through the use of ~ dvelim .  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    eujust $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw cv wceq wb wal wex equequ2 bibi2d albidv cbvexv bitri ) ABFZCFZGZHZB
      IZCJAPEFZGZHZBIZEJAPDFZGZHZBIZDJTUDCEQUAGZSUCBUIRUBACEBKLMNUDUHEDUAUEGZUC
      UGBUJUBUFAEDBKLMNO $.
      $( [9-Jul-2011] $) $( [11-Mar-2010] $)

    $( A soundness justification theorem for ~ df-eu , showing that the
       definition is equivalent to itself with its dummy variable renamed.
       Note that ` y ` and ` z ` needn't be distinct variables.  While this
       isn't strictly necessary for soundness, the proof provides an example of
       how it can be achieved through the use of ~ dvelim . $)
    eujustALT $p |- ( E. y A. x ( ph <-> x = y )
        <-> E. z A. x ( ph <-> x = z ) ) $=
      ( vw weq wal wb wex equequ2 bibi2d albidv wn hbnae wi ax-17 notbid dvelim
      a4s df-ex drex1 alrimi nalequcoms a1i cbv2 syl 3bitr4g pm2.61i ) CDFZCGZA
      BCFZHZBGZCIZABDFZHZBGZDIZHUMUQCDUIUMUQHCUIULUPBUIUKUOACDBJKLZSUAUJMZUMMZC
      GZMUQMZDGZMUNURUTVBVDUTUTDGZCGVBVDHUTVECCDCNCDDNUBUTVAVCCDVAVADGODCABEFZH
      ZBGZMZVADCEVIDPECFZVHUMVJVGULBVJVFUKAECBJKLQRUCVIVCCDEVICPEDFZVHUQVKVGUPB
      VKVFUOAEDBJKLQRUIVAVCHOUTUIUMUQUSQUDUEUFQUMCTUQDTUGUH $.
      $( [11-Mar-2010] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Define existential uniqueness, i.e.  "there exists exactly one ` x `
       such that ` ph ` ."  Definition 10.1 of [BellMachover] p. 97; also
       Definition *14.02 of [WhiteheadRussell] p. 175.  Other possible
       definitions are given by ~ eu1 , ~ eu2 , ~ eu3 , and ~ eu5 (which in
       some cases we show with a hypothesis ` ph -> A. y ph ` in place of a
       distinct variable condition on ` y ` and ` ph ` ).  Double uniqueness is
       tricky: ` E! x E! y ph ` does not mean "exactly one ` x ` and one
       ` y ` " (see ~ 2eu4 ). $)
    df-eu $a |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $.
  $}

  $( Define "there exists at most one ` x ` such that ` ph ` ."  Here we define
     it in terms of existential uniqueness.  Notation of [BellMachover] p. 460,
     whose definition we show as ~ mo3 .  For other possible definitions see
     ~ mo2 and ~ mo4 . $)
  df-mo $a |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) $.

  ${
    $d x y z $.  $d ph z $.
    euf.1 $e |- ( ph -> A. y ph ) $.
    $( A version of the existential uniqueness definition with a hypothesis
       instead of a distinct variable condition. $)
    euf $p |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) $=
      ( vz weu weq wb wal wex df-eu ax-17 hbbi hbal equequ2 bibi2d albidv cbvex
      bitri ) ABFABEGZHZBIZEJABCGZHZBIZCJABEKUBUEECUACBATCDTCLMNUEELECGZUAUDBUF
      TUCAECBOPQRS $.
      $( [12-Aug-1993] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.  $d y ch $.
    eubid.1 $e |- ( ph -> A. x ph ) $.
    eubid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubid $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( vy weq wb wal wex weu bibi1d albid exbidv df-eu 3bitr4g ) ABDGHZIZDJZGK
      CRIZDJZGKBDLCDLATUBGASUADEABCRFMNOBDGPCDGPQ $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x ph $.
    eubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for uniqueness quantifier (deduction rule). $)
    eubidv $p |- ( ph -> ( E! x ps <-> E! x ch ) ) $=
      ( ax-17 eubid ) ABCDADFEG $.
      $( [9-Jul-1994] $)
  $}

  ${
    eubii.1 $e |- ( ph <-> ps ) $.
    $( Introduce uniqueness quantifier to both sides of an equivalence. $)
    eubii $p |- ( E! x ph <-> E! x ps ) $=
      ( weq weu wb equid hbequid a1i eubid ax-mp ) CCEZACFBCFGCHMABCCCIABGMDJKL
      $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Bound-variable hypothesis builder for uniqueness. $)
    hbeu1 $p |- ( E! x ph -> A. x E! x ph ) $=
      ( vy weu weq wb wal wex df-eu hba1 hbex hbxfrbi ) ABDABCEFZBGZCHBABCINBCM
      BJKL $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d y z $.  $d x z $.  $d z ph $.
    hbeu.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one."  Note that ` x `
       and ` y ` needn't be distinct (this makes the proof more difficult). $)
    hbeu $p |- ( E! y ph -> A. x E! y ph ) $=
      ( vz weu weq wb wal wex df-eu wi hba1 ax10o alequcoms wn hbnae a1i dveeq1
      syl5 hbbid hbald pm2.61i hbex hbxfrbi ) ACFACEGZHZCIZEJBACEKUHBEBCGBIZUHU
      HBIZLUHUHCIZUIUJUGCMUKUJLCBUHCBNOTUIPZUGBCBCCQULAUFBBCBQAABILULDRBCESUAUB
      UCUDUE $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d y z $.  $d x z $.  $d z ph $.  $d z ps $.
    hbeud.1 $e |- ( ph -> A. x ph ) $.
    hbeud.2 $e |- ( ph -> A. y ph ) $.
    hbeud.3 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbeu . $)
    hbeud $p |- ( ph -> ( E! y ps -> A. x E! y ps ) ) $=
      ( vz cv wceq wb wal wex weu ax-17 wi wn wa hbnae hban adantr dveeq1 hbbid
      adantl hbald hba1 ax10o alequcoms syl5 pm2.61d2 hbexd df-eu albii 3imtr4g
      ex ) ABDIZHIJZKZDLZHMZUTCLBDNZVACLAUSCHAHOACIUPJCLZUSUSCLZPZAVBQZVDAVERZU
      RCDAVEDFCDDSTVFBUQCAVECECDCSTABBCLPVEGUAVEUQUQCLPACDHUBUDUCUEUOUSUSDLZVBV
      CURDUFVGVCPDCUSDCUGUHUIUJUKBDHULZVAUTCVHUMUN $.
      $( [15-Feb-2013] $)
  $}

  ${
    $d w y z $.  $d ph z w $.  $d w x z $.
    sb8eu.1 $e |- ( ph -> A. y ph ) $.
    $( Variable substitution in uniqueness quantifier.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 9-Jul-2011.) $)
    sb8eu $p |- ( E! x ph <-> E! y [ y / x ] ph ) $=
      ( vz vw cv wceq wal wex wsbc weu ax-17 sb8 sbbi hbsb equsb3 hbxfrbi df-eu
      wb hbbi sbequ cbval sblbis albii 3bitri exbii 3bitr4i ) ABGEGZHZTZBIZEJAB
      CGZKZUMUIHZTZCIZEJABLUNCLULUQEULUKBFGZKZFIUKBUMKZCIUQUKBFUKFMNUSUTFCUSABU
      RKZUJBURKZTCAUJBFOVAVBCABFCDPVBURUIHZCFBEQVCCMRUARUTFMUKFCBUBUCUTUPCUJUOA
      BCCBEQUDUEUFUGABESUNCESUH $.
      $( [9-Jul-2011] $) $( [7-Aug-1994] $)
  $}

  ${
    cbveu.1 $e |- ( ph -> A. y ph ) $.
    cbveu.2 $e |- ( ps -> A. x ps ) $.
    cbveu.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbveu $p |- ( E! x ph <-> E! y ps ) $=
      ( weu wsb sb8eu sbie eubii bitri ) ACHACDIZDHBDHACDEJNBDABCDFGKLM $.
      $( [9-Jul-2011] $) $( [25-Nov-1994] $)
  $}

  ${
    $d x y $.
    eu1.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express uniqueness used by some authors.  Exercise
       2(b) of [Margaris] p. 110. $)
    eu1 $p |- ( E! x ph <->
                E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) $=
      ( wsb weu weq wb wal wex wi wa hbs1 euf sb8eu equcom imbi2i albii 3bitr4i
      sb6rf anbi12i ancom albiim exbii ) ABCEZCFUECBGZHCIZBJABFAUEBCGZKZCIZLZBJ
      UECBABCMNABCDOUKUGBUJALUEUFKZCIZUFUEKCIZLUKUGUJUMAUNUIULCUHUFUEBCPQRABCDT
      UAAUJUBUEUFCUCSUDS $.
      $( [20-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    mo.1 $e |- ( ph -> A. y ph ) $.
    $( Equivalent definitions of "there exists at most one." $)
    mo $p |- ( E. y A. x ( ph -> x = y ) <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( vz weq wi wal wex wsb wa ax-17 hbim hbal cbv3 syl sylbir alimi wn hbn
      equequ2 imbi2d albidv cbvex hbs1 sbequ2 ax-8 imim12d ancli aaan prth syl6
      sylibr equtr2 2alimi exlimiv impexp bi2.04 bitri 2albii eximi a7s syl5com
      alim exim syl5bi alnex sbequ1 equcoms con3d pm2.21 19.8a 3syl a1d pm2.61i
      impbii ) ABCFZGZBHZCIZAABCJZKZVQGZCHBHZVTABEFZGZBHZEIWDWGVSECWFCBAWECDWEC
      LMZNVSELECFZWFVRBWIWEVQAECBUAUBUCUDWGWDEWGWFWACEFZGZKZCHBHZWDWGWGWKCHZKWM
      WGWNWFWKBCWHWAWJBABCUEZWJBLMZVQWAAWEWJABCUFBCEUGUHOUIWFWKBCWHWPUJUMWLWCBC
      WLWBWEWJKVQAWEWAWJUKBCEUNULUOPUPQWACIZWDVTGWDWAVRGZCHBHZWQVTWCWRBCWCAWAVQ
      GGWRAWAVQUQAWAVQURUSUTWQWABHZCIZWSVTWAWTCWOVAWSWTVSGZCHZXAVTGWRXCCBWRBHXB
      CWAVRBVDRVBWTVSCVEPVCVFWQSZVTWDXDWASZCHZVTWACVGXFASZBHVSVTXEXGCBWABWOTACD
      TCBFAWAAWAGBCABCVHVIVJOXGVRBAVQVKRVSCVLVMQVNVOVP $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x y $.  $d ph y $.
    $( Existential uniqueness implies existence.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    euex $p |- ( E! x ph -> E. x ph ) $=
      ( vy weu wsb weq wi wal wa wex ax-17 eu1 exsimpl sylbi ) ABDAABCEBCFGCHZI
      BJABJABCACKLAOBMN $.
      $( [9-Jul-2011] $) $( [15-Sep-1993] $)
  $}

  ${
    $d x y $.
    eumo0.1 $e |- ( ph -> A. y ph ) $.
    $( Existential uniqueness implies "at most one." $)
    eumo0 $p |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) $=
      ( weu weq wb wal wex wi euf bi1 alimi eximi sylbi ) ABEABCFZGZBHZCIAPJZBH
      ZCIABCDKRTCQSBAPLMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu2.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way of defining existential uniqueness.  Definition 6.10 of
       [TakeutiZaring] p. 26. $)
    eu2 $p |- ( E! x ph <->
    ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal euex eumo0 mo sylib 19.29r impexp albii 19.21
      jca bitri anbi2i abai bitr4i exbii eu1 sylibr impbii ) ABEZABFZAABCGZHBCI
      ZJZCKZBKZHZUIUJUOABLUIAULJBKCFUOABCDMABCDNOTUPAUKULJZCKZHZBFZUIUPAUNHZBFU
      TAUNBPVAUSBVAAAURJZHUSUNVBAUNAUQJZCKVBUMVCCAUKULQRAUQCDSUAUBAURUCUDUEOABC
      DUFUGUH $.
      $( [8-Jul-1994] $)
  $}

  ${
    $d x y $.
    eu3.1 $e |- ( ph -> A. y ph ) $.
    $( An alternate way to express existential uniqueness. $)
    eu3 $p |- ( E! x ph <->
                ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) $=
      ( weu wex wsb wa weq wi wal eu2 mo anbi2i bitr4i ) ABEABFZAABCGHBCIZJCKBK
      ZHPAQJBKCFZHABCDLSRPABCDMNO $.
      $( [8-Jul-1994] $)
  $}

  ${
    euor.1 $e |- ( ph -> A. x ph ) $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euor $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( wn weu wo hbn biorf eubid biimpa ) AEZBCFABGZCFLBMCACDHABIJK $.
      $( [21-Oct-2005] $)
  $}

  ${
    $d x ph $.
    $( Introduce a disjunct into a uniqueness quantifier. $)
    euorv $p |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) $=
      ( ax-17 euor ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.
    mo2.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one." $)
    mo2 $p |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) $=
      ( wmo wex weu wi weq wal df-mo alnex pm2.21 alimi 19.8a syl sylbir eumo0
      wn ja eu3 simplbi2com impbii bitri ) ABEABFZABGZHZABCIZHZBJZCFZABKUGUKUEU
      FUKUESASZBJZUKABLUMUJUKULUIBAUHMNUJCOPQABCDRTUFUEUKABCDUAUBUCUD $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d w x z $.  $d w y z $.  $d w ph $.
    $( Substitution into "at most one".  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    sbmo $p |- ( [ y / x ] E* z ph <-> E* z [ y / x ] ph ) $=
      ( vw cv wceq wi wal wex wsbc wmo sbex ax-17 sblim sbalv exbii bitri sbbii
      mo2 3bitr4i ) ADFEFGZHZDIZEJZBCFZKZABUFKZUBHZDIZEJZADLZBUFKUHDLUGUDBUFKZE
      JUKUDEBCMUMUJEUCUIBCDAUBBCUBBNOPQRULUEBCADEAENTSUHDEUHENTUA $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y $.
    mo3.1 $e |- ( ph -> A. y ph ) $.
    $( Alternate definition of "at most one."  Definition of [BellMachover]
       p. 460, except that definition has the side condition that ` y ` not
       occur in ` ph ` in place of our hypothesis. $)
    mo3 $p |- ( E* x ph <->
               A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( wmo weq wi wal wex wsb wa mo2 mo bitri ) ABEABCFZGBHCIAABCJKOGCHBHABCDL
      ABCDMN $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    mo4f.1 $e |- ( ps -> A. x ps ) $.
    mo4f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4f $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( wmo wsb wa weq wi wal ax-17 mo3 sbie anbi2i imbi1i 2albii bitri ) ACGAA
      CDHZIZCDJZKZDLCLABIZUBKZDLCLACDADMNUCUECDUAUDUBTBAABCDEFOPQRS $.
      $( [10-Apr-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    mo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( "At most one" expressed using implicit substitution. $)
    mo4 $p |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) $=
      ( ax-17 mo4f ) ABCDBCFEG $.
      $( [26-Jul-1995] $)
  $}

  ${
    mobid.1 $e |- ( ph -> A. x ph ) $.
    mobid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for "at most one" quantifier (deduction rule). $)
    mobid $p |- ( ph -> ( E* x ps <-> E* x ch ) ) $=
      ( wex weu wi wmo exbid eubid imbi12d df-mo 3bitr4g ) ABDGZBDHZICDGZCDHZIB
      DJCDJAPRQSABCDEFKABCDEFLMBDNCDNO $.
      $( [8-Mar-1995] $)
  $}

  ${
    mobii.1 $e |- ( ps <-> ch ) $.
    $( Formula-building rule for "at most one" quantifier (inference rule). $)
    mobii $p |- ( E* x ps <-> E* x ch ) $=
      ( weq wmo wb equid hbequid a1i mobid ax-mp ) CCEZACFBCFGCHMABCCCIABGMDJKL
      $.
      $( [9-Mar-1995] $)
  $}

  $( Bound-variable hypothesis builder for "at most one." $)
  hbmo1 $p |- ( E* x ph -> A. x E* x ph ) $=
    ( wmo wex weu wi df-mo hbe1 hbeu1 hbim hbxfrbi ) ABCABDZABEZFBABGLMBABHABIJ
    K $.
    $( [8-Mar-1995] $)

  ${
    hbmo.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for "at most one." $)
    hbmo $p |- ( E* y ph -> A. x E* y ph ) $=
      ( wmo wex weu wi df-mo hbex hbeu hbim hbxfrbi ) ACEACFZACGZHBACINOBABCDJA
      BCDKLM $.
      $( [9-Mar-1995] $)
  $}

  ${
    cbvmo.1 $e |- ( ph -> A. y ph ) $.
    cbvmo.2 $e |- ( ps -> A. x ps ) $.
    cbvmo.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 8-Jun-2011.) $)
    cbvmo $p |- ( E* x ph <-> E* y ps ) $=
      ( wex weu wi wmo cbvex cbveu imbi12i df-mo 3bitr4i ) ACHZACIZJBDHZBDIZJAC
      KBDKQSRTABCDEFGLABCDEFGMNACOBDOP $.
      $( [9-Jul-2011] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Uniqueness in terms of "at most one." $)
    eu5 $p |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) $=
      ( vy weu wex weq wi wal wa wmo ax-17 eu3 mo2 anbi2i bitr4i ) ABDABEZABCFG
      BHCEZIPABJZIABCACKZLRQPABCSMNO $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    eu4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Uniqueness using implicit substitution. $)
    eu4 $p |- ( E! x ph <-> ( E. x ph /\
             A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( weu wex wmo wa weq wi wal eu5 mo4 anbi2i bitri ) ACFACGZACHZIQABICDJKDL
      CLZIACMRSQABCDENOP $.
      $( [26-Jul-1995] $)
  $}

  $( Existential uniqueness implies "at most one." $)
  eumo $p |- ( E! x ph -> E* x ph ) $=
    ( weu wex wmo eu5 simprbi ) ABCABDABEABFG $.
    $( [23-Mar-1995] $)

  ${
    eumoi.1 $e |- E! x ph $.
    $( "At most one" inferred from existential uniqueness. $)
    eumoi $p |- E* x ph $=
      ( weu wmo eumo ax-mp ) ABDABECABFG $.
      $( [5-Apr-1995] $)
  $}

  $( Existence in terms of "at most one" and uniqueness. $)
  exmoeu $p |- ( E. x ph <-> ( E* x ph -> E! x ph ) ) $=
    ( wex wmo weu wi df-mo biimpi com12 biimpri euex imim12i peirce syl impbii
    ) ABCZABDZABEZFZQPRQPRFZABGZHISTPFPTQRPQTUAJABKLPRMNO $.
    $( [5-Apr-2004] $)

  $( Existence implies "at most one" is equivalent to uniqueness. $)
  exmoeu2 $p |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) $=
    ( weu wex wmo eu5 baibr ) ABCABDABEABFG $.
    $( [5-Apr-2004] $)

  $( Absorption of existence condition by "at most one." $)
  moabs $p |- ( E* x ph <-> ( E. x ph -> E* x ph ) ) $=
    ( wex weu wi wmo pm5.4 df-mo imbi2i 3bitr4ri ) ABCZKABDZEZEMKABFZENKLGNMKAB
    HZIOJ $.
    $( [4-Nov-2002] $)

  $( Something exists or at most one exists. $)
  exmo $p |- ( E. x ph \/ E* x ph ) $=
    ( wex wmo wn weu wi pm2.21 df-mo sylibr orri ) ABCZABDZLELABFZGMLNHABIJK $.
    $( [8-Mar-1995] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immo $p |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) $=
      ( vy wi wal weq wex wmo imim1 al2imi eximdv ax-17 mo2 3imtr4g ) ABEZCFZBC
      DGZEZCFZDHAREZCFZDHBCIACIQTUBDPSUACABRJKLBCDBDMNACDADMNO $.
      $( [22-Apr-1995] $)
  $}

  ${
    immoi.1 $e |- ( ph -> ps ) $.
    $( "At most one" is preserved through implication (notice wff reversal). $)
    immoi $p |- ( E* x ps -> E* x ph ) $=
      ( wi wmo immo mpg ) ABEBCFACFECABCGDH $.
      $( [15-Feb-2006] $)
  $}

  ${
    $d x y $.  $d x y ph $.  $d y ps $.
    $( Move antecedent outside of "at most one." $)
    moimv $p |- ( E* x ( ph -> ps ) -> ( ph -> E* x ps ) ) $=
      ( vy wi wmo weq wal wex ax-1 a1i imim1d alimdv eximdv ax-17 3imtr4g com12
      mo2 ) AABEZCFZBCFZASCDGZEZCHZDIBUBEZCHZDITUAAUDUFDAUCUECABSUBBSEABAJKLMNS
      CDSDORBCDBDORPQ $.
      $( [28-Jul-1995] $)
  $}

  $( Uniqueness implies "at most one" through implication. $)
  euimmo $p |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) $=
    ( weu wmo wi wal eumo immo syl5 ) BCDBCEABFCGACEBCHABCIJ $.
    $( [22-Apr-1995] $)

  $( Add existential uniqueness quantifiers to an implication.  Note the
     reversed implication in the antecedent.  (The proof was shortened by
     Andrew Salmon, 14-Jun-2011.) $)
  euim $p |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E! x ph ) ) $=
    ( wex wi wal wa weu wmo ax-1 euimmo anim12ii eu5 syl6ibr ) ACDZABECFZGBCHZO
    ACIZGACHOQOPROQJABCKLACMN $.
    $( [14-Jun-2011] $) $( [19-Oct-2005] $)

  $( "At most one" is still the case when a conjunct is added. $)
  moan $p |- ( E* x ph -> E* x ( ps /\ ph ) ) $=
    ( wa simpr immoi ) BADACBAEF $.
    $( [22-Apr-1995] $)

  ${
    moani.1 $e |- E* x ph $.
    $( "At most one" is still true when a conjunct is added. $)
    moani $p |- E* x ( ps /\ ph ) $=
      ( wmo wa moan ax-mp ) ACEBAFCEDABCGH $.
      $( [9-Mar-1995] $)
  $}

  $( "At most one" is still the case when a disjunct is removed. $)
  moor $p |- ( E* x ( ph \/ ps ) -> E* x ph ) $=
    ( wo orc immoi ) AABDCABEF $.
    $( [5-Apr-2004] $)

  $( "At most one" imports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran1 $p |- ( ( E* x ph \/ E* x ps ) -> E* x ( ph /\ ps ) ) $=
    ( wmo wa simpl immoi moan jaoi ) ACDABEZCDBCDJACABFGBACHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( "At most one" exports disjunction to conjunction.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  mooran2 $p |- ( E* x ( ph \/ ps ) -> ( E* x ph /\ E* x ps ) ) $=
    ( wo wmo moor olc immoi jca ) ABDZCEACEBCEABCFBJCBAGHI $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    moanim.1 $e |- ( ph -> A. x ph ) $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanim $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( vy wa weq wi wal wex impexp albii 19.21 bitri exbii ax-17 imbi2i 19.37v
      wmo mo2 bitr4i 3bitr4i ) ABFZCEGZHZCIZEJABUDHZCIZHZEJZUCCSABCSZHZUFUIEUFA
      UGHZCIUIUEUMCABUDKLAUGCDMNOUCCEUCEPTULAUHEJZHUJUKUNABCEBEPTQAUHERUAUB $.
      $( [3-Dec-2001] $)

    $( Introduction of a conjunct into uniqueness quantifier.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    euan $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( wa weu wex wmo simpl exlimi adantr simpr eximi hbe1 ancrd impbid2 mobid
      a1d biimpa eu5 jca32 anbi2i 3imtr4i ibar eubid impbii ) ABEZCFZABCFZEZUGC
      GZUGCHZEZABCGZBCHZEZEUHUJUMAUNUOUKAULUGACDABIJZKUKUNULUGBCABLZMKUKULUOUKU
      GBCUGCNUKUGBURUKBAUKABUQROPQSUAUGCTUIUPABCTUBUCAUIUHABUGCDABUDUESUF $.
      $( [9-Jul-2011] $) $( [19-Feb-2005] $)
  $}

  ${
    $d x y ph $.  $d y ps $.
    $( Introduction of a conjunct into "at most one" quantifier. $)
    moanimv $p |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) $=
      ( ax-17 moanim ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  $( Nested "at most one" and uniqueness quantifiers. $)
  moaneu $p |- E* x ( ph /\ E! x ph ) $=
    ( weu wa wmo wi eumo hbeu1 moanim mpbir ancom mobii ) AABCZDZBEMADZBEZPMABE
    FABGMABABHIJNOBAMKLJ $.
    $( [25-Jan-2006] $)

  $( Nested "at most one" quantifiers. $)
  moanmo $p |- E* x ( ph /\ E* x ph ) $=
    ( wmo wa wi id hbmo1 moanim mpbir ancom mobii ) AABCZDZBCLADZBCZOLLELFLABAB
    GHIMNBALJKI $.
    $( [25-Jan-2006] $)

  ${
    $d x ph $.
    $( Introduction of a conjunct into uniqueness quantifier. $)
    euanv $p |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) $=
      ( ax-17 euan ) ABCACDE $.
      $( [23-Mar-1995] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d y ps $.
    $( "At most one" picks a variable value, eliminating an existential
       quantifier. $)
    mopick $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
      ( vy wa wex wmo wi wsb ax-17 hbs1 hban weq sbequ12 anbi12d cbvex wal ax-4
      mo3 sylbi a4s sbequ2 imim2i exp3a com4t imp syl5 exlimiv impcom ) ABEZCFZ
      ACGZABHZUKACDIZBCDIZEZDFULUMHZUJUPCDUJDJUNUOCACDKBCDKLCDMZAUNBUOACDNBCDNO
      PUPUQDULAUNEZURHZUPUMULUTDQZCQUTACDADJSVAUTCUTDRUATUNUOUTUMHUTAUNUOBUTAUN
      UOBHZURVBUSBCDUBUCUDUEUFUGUHTUI $.
      $( [27-Jan-1997] $)
  $}

  $( Existential uniqueness "picks" a variable value for which another wff is
     true.  If there is only one thing ` x ` such that ` ph ` is true, and
     there is also an ` x ` (actually the same one) such that ` ph ` and ` ps `
     are both true, then ` ph ` implies ` ps ` regardless of ` x ` .  This
     theorem can be useful for eliminating existential quantifiers in a
     hypothesis.  Compare Theorem *14.26 in [WhiteheadRussell] p. 192. $)
  eupick $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) $=
    ( weu wmo wa wex wi eumo mopick sylan ) ACDACEABFCGABHACIABCJK $.
    $( [10-Jul-1994] $)

  $( Version of ~ eupick with closed formulas. $)
  eupicka $p |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( ph -> ps ) ) $=
    ( weu wa wex wi hbeu1 hbe1 hban eupick alrimi ) ACDZABEZCFZEABGCMOCACHNCIJA
    BCKL $.
    $( [6-Sep-2008] $)

  $( Existential uniqueness "pick" showing wff equivalence. $)
  eupickb $p |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) ->
               ( ph <-> ps ) ) $=
    ( weu wa wex w3a wi eupick 3adant2 3simpc pm3.22 eximi anim2i 3syl impbid )
    ACDZBCDZABEZCFZGZABQTABHRABCIJUARTERBAEZCFZEBAHQRTKTUCRSUBCABLMNBACIOP $.
    $( [25-Nov-1994] $)

  $( Theorem *14.26 in [WhiteheadRussell] p. 192.  (Contributed by Andrew
     Salmon, 11-Jul-2011.) $)
  eupickbi $p |- ( E! x ph -> ( E. x ( ph /\ ps ) <-> A. x ( ph -> ps ) ) ) $=
    ( weu wa wex wi wal eupicka ex hba1 wb ancl simpl impbid1 eubid euex syl6bi
    a4s com12 impbid ) ACDZABEZCFZABGZCHZUBUDUFABCIJUFUBUDUFUBUCCDUDUFAUCCUECKU
    EAUCLCUEAUCABMABNOSPUCCQRTUA $.
    $( [11-Jul-2011] $)

  $( "At most one" can show the existence of a common value.  In this case we
     can infer existence of conjunction from a conjunction of existence, and it
     is one way to achieve the converse of ~ 19.40 .  (The proof was shortened
     by Andrew Salmon, 9-Jul-2011.) $)
  mopick2 $p |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ->
                E. x ( ph /\ ps /\ ch ) ) $=
    ( wmo wa wex w3a hbmo1 hbe1 mopick ancld anim1d df-3an syl6ibr eximd 3impia
    hban ) ADEZABFZDGZACFZDGABCHZDGSUAFZUBUCDSUADADITDJRUDUBTCFUCUDATCUDABABDKL
    MABCNOPQ $.
    $( [9-Jul-2011] $) $( [5-Apr-2004] $)

  $( Introduce or eliminate a disjunct in a uniqueness quantifier.  (The proof
     was shortened by Andrew Salmon, 9-Jul-2011.) $)
  euor2 $p |- ( -. E. x ph -> ( E! x ( ph \/ ps ) <-> E! x ps ) ) $=
    ( wex wn wo hbe1 hbn wb 19.8a con3i orel1 olc impbid1 syl eubid ) ACDZEZABF
    ZBCQCACGHRAEZSBIAQACJKTSBABLBAMNOP $.
    $( [9-Jul-2011] $) $( [21-Oct-2005] $)

  ${
    moexex.1 $e |- ( ph -> A. y ph ) $.
    $( "At most one" double quantification. $)
    moexex $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( wmo wal wa wex wi hbmo1 hba1 hbe1 hbmo hbim mopick ex exlimi wn a1d ori
      com3r alrimd immo a4sd syl6 hbex exsimpl con3i exmo syl pm2.61i imp ) ACF
      ZBDFZCGZABHZCIZDFZACIZUNUPUSJZJZAVBCUNVACACKUPUSCUOCLURCDUQCMNOOAUNURBJZD
      GZVAAUNVCDEADCENUNURABUNURABJABCPQUBUCVDUOUSCURBDUDUEUFRUTSZVAUNVEUSUPVEU
      RDIZSUSVFUTURUTDADCEUGABCUHRUIVFUSURDUJUAUKTTULUM $.
      $( [3-Dec-2001] $)
  $}

  ${
    $d y ph $.
    $( "At most one" double quantification. $)
    moexexv $p |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) $=
      ( ax-17 moexex ) ABCDADEF $.
      $( [26-Jan-1997] $)
  $}

  $( Double quantification with "at most one." $)
  2moex $p |- ( E* x E. y ph -> A. y E* x ph ) $=
    ( wex wmo hbe1 hbmo 19.8a immoi alrimi ) ACDZBEABECKCBACFGAKBACHIJ $.
    $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness.  (The proof was
     shortened by Andrew Salmon, 9-Jul-2011.) $)
  2euex $p |- ( E! x E. y ph -> E. y E! x ph ) $=
    ( wex weu wmo wa eu5 excom hbe1 19.8a immoi df-mo sylib eximd syl5bi impcom
    hbmo wi sylbi ) ACDZBEUABDZUABFZGABEZCDZUABHUCUBUEUBABDZCDUCUEABCIUCUFUDCUA
    CBACJRUCABFUFUDSAUABACKLABMNOPQT $.
    $( [9-Jul-2011] $) $( [3-Dec-2001] $)

  $( Double quantification with existential uniqueness and "at most one." $)
  2eumo $p |- ( E! x E* y ph -> E* x E! y ph ) $=
    ( weu wmo wi euimmo eumo mpg ) ACDZACEZFKBDJBEFBJKBGACHI $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2ex $p |- ( E! x E! y ph -> E. x E. y ph ) $=
    ( weu wex euex eximi syl ) ACDZBDIBEACEZBEIBFIJBACFGH $.
    $( [3-Dec-2001] $)

  $( A condition allowing swap of "at most one" and existential quantifiers. $)
  2moswap $p |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) $=
    ( wmo wal wex wa hbe1 moexex expcom 19.8a pm4.71ri exbii mobii syl6ibr ) AC
    DBEZACFZBDZQAGZBFZCDZABFZCDRPUAQABCACHIJUBTCASBAQACKLMNO $.
    $( [10-Apr-2004] $)

  $( A condition allowing swap of uniqueness and existential quantifiers. $)
  2euswap $p |- ( A. x E* y ph -> ( E! x E. y ph -> E! y E. x ph ) ) $=
    ( wmo wal wex wa weu wi excomim a1i 2moswap anim12d eu5 3imtr4g ) ACDBEZACF
    ZBFZQBDZGABFZCFZTCDZGQBHTCHPRUASUBRUAIPABCJKABCLMQBNTCNO $.
    $( [10-Apr-2004] $)

  $( Double existential uniqueness implies double uniqueness quantification. $)
  2exeu $p |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) $=
    ( wex wmo weu excom hbe1 19.41 19.8a immoi anim2i eximi sylbir sylanb simpl
    wa hbmo eu5 anbi12i adantl anim12i ancoms exbii mobii bitri 3imtr4i ) ACDZB
    DZUHBEZQZABDZCDZULCEZQZQUHACEZQZBDZUQBEZQZUHBFZULCFZQACFZBFZUOUKUTUOURUKUSU
    MUIUNURACBGUIUNQUHUNQZBDURUHUNBULBCABHRIVEUQBUNUPUHAULCABJKLMNOUJUSUIUQUHBU
    HUPPKUAUBUCVAUKVBUOUHBSULCSTVDVCBDZVCBEZQUTVCBSVFURVGUSVCUQBACSZUDVCUQBVHUE
    TUFUG $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double "at most one." $)
    2mo $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
              A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) ->
                   ( x = z /\ y = w ) ) ) $=
      ( vv vu weq wa wi wal wex wsb equequ2 bi2anan9 ax-17 albii bitri 2alimi
      wn imbi2d 2albidv cbvex2v hbs1 hbim hbsb sbequ12 sylan9bbr equequ1 cbval2
      imbi12d biimpi ancli alcom aaan hbal sylibr prth equtr2 anim12i an4s syl6
      syl exlimivv sylbir impexp bi2.04 2albii alrimi 2eximi alrot4 alim al2imi
      sylbi exim alimi syl5com syl5bi alnex notbid biimpri pm2.21 19.8a 19.23bi
      3syl hbn a1d pm2.61i impbii ) ABDHZCEHZIZJZCKZBKZELZDLZAACEMZBDMZIZWLJZEK
      DKZCKBKZWQABFHZCGHZIZJZCKZBKZGLFLXCXIWOFGDEFDHZGEHZIZXGWMBCXLXFWLAXJXDWJX
      KXEWKFDBNGECNOUAUBUCXIXCFGXIXGWSDFHZEGHZIZJZIZEKZDKZCKZBKZXCXIXIXPEKZDKZI
      ZYAXIYCXIYCXGXPBCDEXGDPXGEPZWSXOBWRBDUDZXOBPUEZWSXOCWRBDCACEUDUFZXOCPUEZW
      LAWSXFXOWKAWRWJWSACEUGWRBDUGUHZWJXDXMWKXEXNBDFUICEGUIOUKUJULUMYAXHYBIZDKZ
      BKYDXTYLBXTXRCKZDKYLXRCDUNYMYKDXGXPCEYEYIUOQRQXHYBBDXHDPXPBEYGUPUORUQXSXB
      BCXQXADEXQWTXFXOIWLAXFWSXOURXDXMXEXNWLXDXMIWJXEXNIWKBDFUSCEGUSUTVAVBSSVCV
      DVEWSELZDLZXCWQJXCWSWMJZEKDKZCKBKZYOWQXBYQBCXAYPDEXAAWSWLJJYPAWSWLVFAWSWL
      VGRVHVHYOWSCKZBKZELZDLZYRWQWSYTDEWSYSBYFYHVIVJYRYTWOJZEKZDKZUUAWPJZDKUUBW
      QJYRYPCKZBKZEKDKUUEYPBCDEVKUUHUUCDEUUGYSWNBWSWMCVLVMSVNUUDUUFDYTWOEVOVPUU
      AWPDVOWEVQVRYOTZWQXCUUIWSTZEKZDKZWQUULYNTZDKUUIUUKUUMDWSEVSQYNDVSRUULATZC
      KBKZWOWQUUOUULUUNUUJBCDEUUNDPUUNEPWSBYFWFWSCYHWFWLAWSYJVTUJWAUUNWMBCAWLWB
      SWOWQEWPDWCWDWEVEWGWHWI $.
      $( [2-Feb-2005] $)
  $}

  ${
    $d z w ph $.  $d x y ps $.  $d x y z w $.
    2mos.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Double "exists at most one", using implicit substitition. $)
    2mos $p |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <->
             A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) $=
      ( weq wa wi wal wex wsb 2mo ax-17 sbrim wb expcom sbie 2albii pm5.74ri
      pm5.74d bitr3i anbi2i imbi1i bitri ) ACEHZDFHZIZJDKCKFLELAADFMZCEMZIZUIJZ
      FKEKZDKCKABIZUIJZFKEKZDKCKACDEFNUNUQCDUMUPEFULUOUIUKBAUJBCEBCOUGUJBUGUJJU
      GAJZDFMUGBJZUGADFUGDOPURUSDFUSDOUHUGABUGUHABQGRUBSUCUASUDUETTUF $.
      $( [10-Feb-2005] $)
  $}

  $( Double existential uniqueness.  This theorem shows a condition under which
     a "naive" definition matches the correct one. $)
  2eu1 $p |- ( A. x E* y ph ->
        ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wal weu wex wa wi eu5 exbii mobii anbi12i bitri simprbi anim2i ancoms
    ax-4 sylib com12 immoi hba1 moanim ancrd 2moswap imdistani syl 2eu2ex excom
    syl6 jca jctild an4 syl6ibr 2exeu impbid1 ) ACDZBEZACFZBFZACGZBFZABGZCFZHZU
    TURVEUTURVABGZVCCGZHZVABDZVCCDZHZHZVEUTURVKVHUTVAUQHZBDZURVKIUTVMBGZVNUTUSB
    GZUSBDZHVOVNHUSBJVPVOVQVNUSVMBACJZKUSVMBVRLMNOVNURVIURHVKVNURVIVNURVAHZBDUR
    VIIVSVMBVAURVMURUQVAUQBRPQUAURVABUQBUBUCSUDVIURVJURVIVJABCUETUFUJUGUTVFVGAB
    CUHZUTVFVGVTABCUISUKULVEVFVIHZVGVJHZHVLVBWAVDWBVABJVCCJMVFVIVGVJUMNUNTABCUO
    UP $.
    $( [3-Dec-2001] $)

  $( Double existential uniqueness. $)
  2eu2 $p |- ( E! y E. x ph -> ( E! x E! y ph <-> E! x E. y ph ) ) $=
    ( wex weu wmo wal wi eumo 2moex 2eu1 simpl syl6bi 3syl 2exeu expcom impbid
    wa ) ABDZCEZACEBEZACDBEZTSCFACFBGZUAUBHSCIACBJUCUAUBTRUBABCKUBTLMNUBTUAABCO
    PQ $.
    $( [3-Dec-2001] $)


  $( Double existential uniqueness. $)
  2eu3 $p |- ( A. x A. y ( E* x ph \/ E* y ph ) ->
 ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) $=
    ( wmo wo wal weu wa wex wb hbmo1 19.31 albii hbal 19.32 bitri wi 2eu1 2exeu
    biimpd ancom syl6ib adantld adantrd jaoi ancoms jca impbid1 sylbi ) ABDZACD
    ZECFZBFZUJCFZUKBFZEZACGBGZABGCGZHZACIBGZABICGZHZJUMUNUKEZBFUPULVCBUJUKCACKL
    MUNUKBUJBCABKNOPUPUSVBUNUSVBQUOUNURVBUQUNURVAUTHZVBUNURVDACBRTVAUTUAUBUCUOU
    QVBURUOUQVBABCRTUDUEVBUQURABCSVAUTURACBSUFUGUHUI $.
    $( [3-Dec-2001] $)

  ${
    $d x y z w $.  $d z w ph $.
    $( This theorem provides us with a definition of double existential
       uniqueness ("exactly one ` x ` and exactly one ` y ` ").  Naively one
       might think (incorrectly) that it could be defined by
       ` E! x E! y ph ` .  See ~ 2eu1 for a condition under which the naive
       definition holds and ~ 2exeu for a one-way implication.  See ~ 2eu5 and
       ~ 2eu8 for alternate definitions. $)
    2eu4 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( wex weu wa weq wal ax-17 eu3 anbi12i anbi2i bitri hba1 19.3 19.26 albii
      wi an4 excom anidm jcab 3bitr4ri alcom bitr4i 19.23v 2albii 3bitri 2exbii
      hbe1 hbim aaan eeanv bitr2i ) ACFZBGZABFZCGZHUQBFZUQBDIZTZBJZDFZHZUSCFZUS
      CEIZTZCJZEFZHZHVAVGHZVEVKHZHVAAVBVHHTZCJZBJZEFDFZHURVFUTVLUQBDUQDKLUSCEUS
      EKLMVAVEVGVKUAVMVAVNVRVMVAVAHVAVGVAVAACBUBNVAUCOVRVDVJHZEFDFVNVQVSDEVQAVB
      TZCJZAVHTZBJZHZCJZBJZVCVIHZCJBJVSVQWAWBCJZBJZHZBJZWFWABJZWIBJZHWLWIHZWKVQ
      WMWIWLWIBWHBPQNWAWIBRVQWAWHHZBJWNVPWOBVPVTWBHZCJWOVOWPCAVBVHUDSVTWBCROSWA
      WHBROUEWEWJBWEWACJZWCCJZHWJWAWCCRWQWAWRWIWACVTCPQWBCBUFMOSUGWDWGBCWAVCWCV
      IAVBCUHAVHBUHMUIVCVIBCUQVBCACULVBCKUMUSVHBABULVHBKUMUNUJUKVDVJDEUOUPMUJ
      $.
      $( [3-Dec-2001] $)

    $( An alternate definition of double existential uniqueness (see ~ 2eu4 ).
       A mistake sometimes made in the literature is to use ` E! x E! y ` to
       mean "exactly one ` x ` and exactly one ` y ` ."  (For example, see
       Proposition 7.53 of [TakeutiZaring] p. 53.)  It turns out that this is
       actually a weaker assertion, as can be seen by expanding out the formal
       definitions.  This theorem shows that the erroneous definition can be
       repaired by conjoining ` A. x E* y ph ` as an additional condition.  The
       correct definition apparently has never been published.  ( ` E* ` means
       "exists at most one.") $)
    2eu5 $p |- ( ( E! x E! y ph /\ A. x E* y ph ) <->
      ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) $=
      ( weu wmo wal wa wex weq 2eu1 pm5.32ri eumo adantl 2moex syl pm4.71i 2eu4
      wi 3bitr2i ) ACFBFZACGBHZIACJZBFZABJZCFZIZUCIUHUDBJABDKCEKITCHBHEJDJIUCUB
      UHABCLMUHUCUHUFCGZUCUGUIUEUFCNOACBPQRABCDESUA $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y z w v u $.  $d z w v u ph $.
    $( Two equivalent expressions for double existential uniqueness. $)
    2eu6 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
               E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) $=
      ( vu vv wex wa weq wi wal ax-17 hbsb sbequ12 equequ2 bi2anan9 hbim 2exbii
      wsb weu 2eu4 19.29r2 hbs1 sylan9bbr cbvex2 imbi2d 2albidv cbvex2v equequ1
      wb imbi12d cbval2 3bitri anbi12i 2albiim ancom bitri equcom imbi2i impexp
      2mo 2albii hban sbco2 sbcom2 sbbii 3bitr3ri syl6bb anbi2d 19.21-2 3bitr3i
      anbi2i abai 2sb6 anbi1i 3bitr2i bitr4i 3imtr4i 2alimi 2eximi 2exsb sylibr
      bi2 bi1 jca impbii ) ACHZBUAABHCUAIWHBHZABDJZCEJZIZKZCLBLZEHDHZIZAWLUKZCL
      BLZEHDHZABCDEUBWPWSACETZBDTZEHDHZXAXAEFTZDGTZIZDGJZEFJZIZKZFLGLZELDLZIXAX
      JIZEHDHZWPWSXAXJDEUCWIXBWOXKAXABCDEADMAEMZWTBDUDZWTBDCACEUDNZWKAWTWJXAACE
      OWTBDOUEZUFWOABGJZCFJZIZKZCLBLZFHGHXAXHKZELDLZFHGHXKWNYBDEGFXHWMYABCXHWLX
      TAXFWJXRXGWKXSDGBPEFCPQUGUHUIYBYDGFYAYCBCDEYADMYAEMXAXHBXOXHBMZRXAXHCXPXH
      CMZRWLAXAXTXHXQWJXRXFWKXSXGBDGUJCEFUJQULUMSXADEGFVBUNUOWSWLAKZCLBLZWNIZEH
      DHXMWRYIDEWRWNYHIYIAWLBCUPWNYHUQURSXLYIDEXLXAXAWNKZIXAWNIYIXJYJXAXAAIZDBJ
      ZECJZIZKZCLBLXAWMKZCLBLXJYJYOYPBCYOYKWLKYPYNWLYKYLWJYMWKDBUSECUSUOUTXAAWL
      VAURVCYOXIBCGFYOGMYOFMXEXHBXAXDBXOXCDGBXAEFBXONNVDYERXEXHCXAXDCXPXCDGCXAE
      FCXPNNVDYFRXTYKXEYNXHXTAXDXAXTAACFTZBGTZXDXSAYQXRYRACFOYQBGOUEWTEFTZBDTZD
      GTYSBGTXDYRYSBGDYSDMVEYTXCDGWTEFBDVFVGYSYQBGACFEXNVEVGVHVIVJXRYLXFXSYMXGB
      GDPCFEPQULUMXAWMBCXOXPVKVLVMXAWNVNXAYHWNABCDEVOVPVQSVRVSWSWIWOWSYHEHDHWIW
      RYHDEWQYGBCAWLWDVTWAABCDEWBWCWRWNDEWQWMBCAWLWEVTWAWFWGUR $.
      $( [2-Feb-2005] $)
  $}

  $( Two equivalent expressions for double existential uniqueness. $)
  2eu7 $p |- ( ( E! x E. y ph /\ E! y E. x ph ) <->
             E! x E! y ( E. x ph /\ E. y ph ) ) $=
    ( wex weu wa hbe1 hbeu euan ancom eubii 3bitri 3bitr4ri ) ABDZCEZACDZFZBEOP
    BEZFNPFZCEZBEROFOPBNBCABGHITQBTPNFZCEPOFQSUACNPJKPNCACGIPOJLKROJM $.
    $( [19-Feb-2005] $)

  $( Two equivalent expressions for double existential uniqueness.  Curiously,
     we can put ` E! ` on either of the internal conjuncts but not both.  We
     can also commute ` E! x E! y ` using ~ 2eu7 . $)
  2eu8 $p |- ( E! x E! y ( E. x ph /\ E. y ph ) <->
                E! x E! y ( E! x ph /\ E. y ph ) ) $=
    ( wex wa 2eu2 pm5.32i hbeu1 hbeu euan ancom eubii hbe1 3bitri 3bitr4ri 2eu7
    weu 3bitr3ri ) ACDZBQZABQZCQZEZTABDZCQZEUASEZCQZBQZUDSECQBQTUBUEACBFGUBSEZB
    QUBTEUHUCUBSBUABCABHIJUGUIBUGSUAEZCQSUBEUIUFUJCUASKLSUACACMJSUBKNLTUBKOABCP
    R $.
    $( [20-Feb-2005] $)

  ${
    $d x y z $.
    $( Equality has existential uniqueness.  Special case of ~ eueq1 proved
       using only predicate calculus.  (Contributed by Stefan Allan,
       4-Dec-2008.) $)
    euequ1 $p |- E! x x = y $=
      ( vz weq weu wex wa wi wal a9e equtr2 gen2 equequ1 eu4 mpbir2an ) ABDZAEP
      AFPCBDZGACDHZCIAIABJRACACBKLPQACACBMNO $.
      $( [4-Dec-2008] $)
  $}

  ${
    $d x y $.
    $( Two ways to express "only one thing exists."  The left-hand side
       requires only one variable to express this.  Both sides are false in set
       theory; see theorem ~ dtru . $)
    exists1 $p |- ( E! x x = x <-> A. x x = y ) $=
      ( weq weu wb wal wex df-eu equid tbt bicom bitri albii exbii hbae 3bitr2i
      19.9 ) AACZADRABCZEZAFZBGSAFZBGUBRABHUBUABSTASSRETRSAIJSRKLMNUBBABBOQP $.
      $( [5-Apr-2004] $)

    $( A condition implying that at least two things exist.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    exists2 $p |- ( ( E. x ph /\ E. x -. ph ) -> -. E! x x = x ) $=
      ( vy wex wn cv wceq weu wal hbeu1 hba1 wi exists1 ax-16 sylbi exlimd alex
      com12 syl6ib con2d imp ) ABDZAEBDZBFZUDGZBHZEUBUFUCUBUFABIZUCEUFUBUGUFAUG
      BUEBJABKUFUDCFGBIAUGLBCMABCNOPRABQSTUA $.
      $( [9-Jul-2011] $) $( [10-Apr-2004] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             Other axiomatizations of classical predicate calculus
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Predicate calculus with all distinct variables
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z $.
    $( Distinct varable version of ~ ax-7 . $)
    ax-7d $a |- ( A. x A. y ph -> A. y A. x ph ) $.

    $( Distinct varable version of ~ ax-8 . $)
    ax-8d $a |- ( x = y -> ( x = z -> y = z ) ) $.

    $( Distinct varable version of ~ ax-9 , variables equal case. $)
    ax-9d1 $a |- -. A. x -. x = x $.

    $( Distinct varable version of ~ ax-9 , variables distinct case. $)
    ax-9d2 $a |- -. A. x -. x = y $.

    $( Distinct varable version of ~ ax-10 . $)
    ax-10d $a |- ( A. x x = y -> A. y y = x ) $.

    $( Distinct varable version of ~ ax-11 . $)
    ax-11d $a |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) $.
  $}

$(
###############################################################################
                ZF (ZERMELO-FRAENKEL) SET THEORY
###############################################################################

  Set theory uses the formalism of propositional and predicate calculus to
  assert properties of arbitrary mathematical objects called "sets."  A set can
  be contained in another set, and this relationship is indicated by the ` e. `
  symbol.  Starting with the simplest mathematical object, called the empty
  set, set theory builds up more and more complex structures whose existence
  follows from the axioms, eventually resulting in extremely complicated sets
  that we identify with the real numbers and other familiar mathematical
  objects.

  A simplistic concept of sets, sometimes called "naive set theory", is
  vulnerable to a paradox called "Russell's paradox" ( ~ ru ), a discovery that
  revolutionized the foundations of mathematics and logic.  Russell's Paradox
  spawned the development of set theories that countered the paradox, including
  the ZF set theory that is most widely used and is defined here.

  Except for Extensionality, the axioms basically say, "given an arbitrary set
  x (and, in the cases of Replacement and Regularity, provided that an
  antecedent is satisfied), there exists another set y based on or constructed
  from it, with the stated properties."  (The axiom of Extensionality can also
  be restated this way as shown by ~ axext2 .) The individual axiom links
  provide more detailed descriptions.  We derive the redundant ZF axioms of
  Separation, Null Set, and Pairing from the others as theorems.

$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
                    Zermelo-Fraenkel Set Theory
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - start with the Axiom of Extensionality
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$( Logic is a prerequisite. $)
$( $[ logic.mm $] $) $( Use this if logic is separated out of set.mm. $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Introduce the Axiom of Extensionality
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)


  ${
    $d x y z $.
    $( Axiom of Extensionality.  An axiom of Zermelo-Fraenkel set theory.  It
       states that two sets are identical if they contain the same elements.
       Axiom Ext of [BellMachover] p. 461.

       Set theory can also be formulated with a _single_ primitive predicate
       ` e. ` on top of traditional predicate calculus _without_ equality.  In
       that case the Axiom of Extensionality becomes
       ` ( A. w ( w e. x <-> w e. y ) -> ( x e. z -> y e. z ) ) ` , and
       equality ` x = y ` is _defined_ as ` A. w ( w e. x <-> w e. y ) ` .  All
       of the usual axioms of equality then become theorems of set theory.
       See, for example, Axiom 1 of [TakeutiZaring] p. 8.

       To use the above "equality-free" version of Extensionality with
       Metamath's logical axioms, we would rewrite ~ ax-8 through ~ ax-16 with
       equality expanded according to the above definition.  Some of those
       axioms could be proved from set theory and would be redundant.  Not all
       of them are redundant, since our axioms of predicate calculus make
       essential use of equality for the proper substitution that is a
       primitive notion in traditional predicate calculus.  A study of such an
       axiomatization would be an interesting project for someone exploring the
       foundations of logic.

       _General remarks_:  Our set theory axioms are presented using defined
       connectives ( ` <-> ` , ` E. ` , etc.) for convenience.  However, it is
       implicitly understood that the actual axioms use only the primitive
       connectives ` -> ` , ` -. ` , ` A. ` , ` = ` , and ` e. ` .  It is
       straightforward to establish the equivalence between the actual axioms
       and the ones we display, and we will not do so.

       It is important to understand that strictly speaking, all of our set
       theory axioms are really schemes that represent an infinite number of
       actual axioms.  This is inherent in the design of Metamath
       ("metavariable math"), which manipulates only metavariables.  For
       example, the metavariable ` x ` in ~ ax-ext can represent any actual
       variable _v1_, _v2_, _v3_,... .  Distinct variable restrictions ($d)
       prevent us from substituting say _v1_ for both ` x ` and ` z ` .  This
       is in contrast to typical textbook presentations that present actual
       axioms (except for Replacement ~ ax-rep , which involves a wff
       metavariable).  In practice, though, the theorems and proofs are
       essentially the same.  The $d restrictions make each of the the infinite
       axioms generated by the ~ ax-ext scheme exactly logically equivalent to
       each other and in particular to the actual axiom of the textbook
       version. $)
    ax-ext $a |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $.

    $( The Axiom of Extensionality ( ~ ax-ext ) restated so that it postulates
       the existence of a set ` z ` given two arbitrary sets ` x ` and ` y ` .
       This way to express it follows the general idea of the other ZFC axioms,
       which is to postulate the existence of sets given other sets. $)
    axext2 $p |- E. z ( ( z e. x <-> z e. y ) -> x = y ) $=
      ( cv wcel wb wceq wi wex wal ax-ext 19.36v mpbir ) CDZADZENBDZEFZOPGZHCIQ
      CJRHABCKQRCLM $.
      $( [28-Sep-2003] $)
  $}

  ${
    $d z x w $.  $d z y w $.
    $( A generalization of the Axiom of Extensionality in which ` x ` and ` y `
       need not be distinct.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    axext3 $p |- ( A. z ( z e. x <-> z e. y ) -> x = y ) $=
      ( vw cv wcel wb wal wi elequ2 bibi1d albidv equequ1 imbi12d ax-ext chvarv
      wceq ) CEZDEZFZRBEZFZGZCHZSUAQZIRAEZFZUBGZCHZUFUAQZIDASUFQZUDUIUEUJUKUCUH
      CUKTUGUBDACJKLDABMNDBCOP $.
      $( [12-Aug-2011] $) $( [15-Sep-1993] $)

    $( A bidirectional version of Extensionality.  Although this theorem
       "looks" like it is just a definition of equality, it requires the Axiom
       of Extensionality for its proof under our axiomatization.  See the
       comments for ~ ax-ext and ~ df-cleq . $)
    axext4 $p |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) $=
      ( cv wceq wcel wb wal elequ2 alrimiv axext3 impbii ) ADZBDZEZCDZMFPNFGZCH
      OQCABCIJABCKL $.
      $( [14-Nov-2008] $)
  $}

  ${
    $d x y z $.  $d ph z $.
    bm1.1.1 $e |- ( ph -> A. x ph ) $.
    $( Any set defined by a property is the only set defined by that property.
       Theorem 1.1 of [BellMachover] p. 462. $)
    bm1.1 $p |- ( E. x A. y ( y e. x <-> ph ) ->
                  E! x A. y ( y e. x <-> ph ) ) $=
      ( vz cv wcel wb wal wex wsbc wa wceq wi weu ax-17 hbbi hbal elequ2 bibi1d
      albidv sbie 19.26 biantr alimi ax-ext syl sylbir sylan2b gen2 jctr sylibr
      eu2 ) CFZBFZGZAHZCIZBJZUSURURBEFZKZLUOUTMZNZEIBIZLURBOUSVDVCBEVAURUNUTGZA
      HZCIZVBURVGBEVFBCVEABVEBPDQRVBUQVFCVBUPVEABECSTUAUBURVGLUQVFLZCIZVBUQVFCU
      CVIUPVEHZCIVBVHVJCUPAVEUDUEBECUFUGUHUIUJUKURBEUREPUMUL $.
      $( [30-Jun-1994] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Class abstractions (a.k.a. class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constants use in class definition. $)
  $c { $. $( Left brace $)
  $c | $.  $( Vertical bar $)
  $c } $. $( Right brace $)
  $( --- Start of old code before overloading prevention patch. $)
  $(
  @c class @. @( Class variable type @)
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Declare variable symbols that will be used to represent classes.  Note
     that later on ` R ` , ` S ` , ` F ` and ` G ` denote relations and
     functions, but these letters serve as mnemonics only and in fact behave
     no differently from the variables ` A ` through ` D ` . $)
  $v A $.
  $v B $.
  $v C $.
  $v D $.
  $v P $.
$( $v .+ $. $)
  $v Q $.
  $v R $.
  $v S $.
  $v T $.
$( $v .x $. $)
  $v U $.
$( $v .1 $. $)

  $( Introduce the class builder or class abstraction notation ("the class of
     sets ` x ` such that ` ph ` is true").  Our class variables ` A ` ,
     ` B ` , etc. range over class builders (implicitly in the case of defined
     class terms such as ~ df-nul ).  Note that a set variable can be expressed
     as a class builder per theorem ~ cvjust , justifying the assignment of set
     variables to class variables via the use of ~ cv . $)
  cab $a class { x | ph } $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( A set variable is a class expression.  The syntax " ` class x ` " can be
     viewed as an abbreviation for " ` class { y | y e. x } ` " (a special case
     of ~ cab ), where ` y ` is distinct from ` x ` .  See the discussion under
     the definition of class in [Jech] p. 4.  Note that ` { y | y e. x } = x `
     by ~ cvjust . @)
  cv @a class x @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Let ` A ` be a class variable. $)
  cA $f class A $.
  $( Let ` B ` be a class variable. $)
  cB $f class B $.
  $( Let ` C ` be a class variable. $)
  cC $f class C $.
  $( Let ` D ` be a class variable. $)
  cD $f class D $.
  $( Let ` P ` be a class variable. $)
  cP $f class P $.
  $( Let ` Q ` be a class variable. $)

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` P ` without
     affecting proofs. $)
  $v .+ $.
  .pl $f class .+ $.

  cQ $f class Q $.
  $( Let ` R ` be a class variable. $)
  cR $f class R $.
  $( Let ` S ` be a class variable. $)
  cS $f class S $.
  $( Let ` T ` be a class variable. $)
  cT $f class T $.
  $( Let ` U ` be a class variable. $)
  cU $f class U $.

  $v e $.
  $v f $.
  $v g $.
  $v h $.
  $v i $.
  $v j $.
  $v k $.
  $v m $.
  $v n $.
  $v o $.
  $v E $.
  $v F $.
  $v G $.
  $v H $.
  $v I $.
  $v J $.
  $v K $.
  $v L $.
  $v M $.
  $v N $.
$( $v .- $. $)
  $v V $.
  $v W $.
  $v X $.
  $v Y $.
  $v Z $.
$( $v .0 $. $)
  $v O $.
$( $v ._|_ $. $)
  $v s $.
  $v r $.
  $v q $.
  $v p $.
  $v a $.
  $v b $.
  $v c $.
  $v d $.
  $v l $.


  $( Let ` e ` be an individual variable. $)
  ve $f set e $.
  $( Let ` f ` be an individual variable. $)
  vf $f set f $.
  $( Let ` g ` be an individual variable. $)
  vg $f set g $.
  $( Let ` h ` be an individual variable. $)
  vh $f set h $.
  $( Let ` i ` be an individual variable. $)
  vi $f set i $.
  $( Let ` j ` be an individual variable. $)
  vj $f set j $.
  $( Let ` k ` be an individual variable. $)
  vk $f set k $.
  $( Let ` m ` be an individual variable. $)
  vm $f set m $.
  $( Let ` n ` be an individual variable. $)
  vn $f set n $.
  $( Let ` o ` be an individual variable. $)
  vo $f set o $.
  $( Let ` E ` be a class variable. $)
  cE $f class E $.
  $( Let ` F ` be a class variable. $)
  cF $f class F $.
  $( Let ` G ` be a class variable. $)
  cG $f class G $.
  $( Let ` H ` be a class variable. $)
  cH $f class H $.
  $( Let ` I ` be a class variable. $)
  cI $f class I $.
  $( Let ` J ` be a class variable. $)
  cJ $f class J $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` J ` without
     affecting proofs. $)
  $v .\/ $.
  .or $f class .\/ $.

  $( Let ` K ` be a class variable. $)
  cK $f class K $.
  $( Let ` L ` be a class variable. $)
  cL $f class L $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` L ` without
     affecting proofs. $)
  $v .<_ $.
  .le $f class .<_ $.

  $( Let ` M ` be a class variable. $)
  cM $f class M $.

  $( Define a connective symbol for use as a class variable.
     It is placed here so that it can be interchanged with ` M ` without
     affecting proofs. $)
  $v ./\ $.
  .an $f class ./\ $.

  $( Let ` N ` be a class variable. $)
  cN $f class N $.
  $( Let ` O ` be a class variable. $)
  cO $f class O $.
  $( Let ` V ` be a class variable. $)
  cV $f class V $.
  $( Let ` W ` be a class variable. $)
  cW $f class W $.
  $( Let ` X ` be a class variable. $)
  cX $f class X $.
  $( Let ` Y ` be a class variable. $)
  cY $f class Y $.
  $( Let ` Z ` be a class variable. $)
  cZ $f class Z $.
  $( Let ` s ` be an individual variable. $)
  vs $f set s $.
  $( Let ` r ` be an individual variable. $)
  vr $f set r $.
  $( Let ` q ` be an individual variable. $)
  vq $f set q $.
  $( Let ` p ` be an individual variable. $)
  vp $f set p $.
  $( Let ` a ` be an individual variable. $)
  va $f set a $.
  $( Let ` b ` be an individual variable. $)
  vb $f set b $.
  $( Let ` c ` be an individual variable. $)
  vc $f set c $.
  $( Let ` d ` be an individual variable. $)
  vd $f set d $.
  $( Let ` l ` be an individual variable. $)
  vl $f set l $.

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include class equality. @)
  wceq @a wff A = B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff definition to include the membership connective between
     classes. @)
  wcel @a wff A e. B @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define class abstraction notation (so-called by Quine), also called a
     "class builder" in the literature. ` x ` and ` y ` need not be distinct.
     Definition 2.1 of [Quine] p. 16.  Typically, ` ph ` will have ` y ` as a
     free variable, and " ` { y | ph } ` " is read "the class of all sets ` y `
     such that ` ph ( y ) ` is true."  We do not define ` { y | ph } ` in
     isolation but only as part of an expression that extends or "overloads"
     the ` e. ` relationship.

     This is our first use of the ` e. ` symbol to connect classes instead of
     sets.  The syntax definition ~ wcel , which extends or "overloads" the
     ~ wel definition connecting set variables, requires that both sides of
     ` e. ` be a class.  In ~ df-cleq and ~ df-clel , we introduce a new kind
     of variable (class variable) that can substituted with expressions such as
     ` { y | ph } ` .  In the present definition, the ` x ` on the left-hand
     side is a set variable.  Syntax definition ~ cv allows us to substitute a
     set variable ` x ` for a class variable: all sets are classes by ~ cvjust
     (but not necessarily vice-versa).  For a full description of how classes
     are introduced and how to recover the primitive language, see the
     discussion in Quine (and under ~ abeq2 for a quick overview).

     Because class variables can be substituted with compound expressions and
     set variables cannot, it is often useful to convert a theorem containing a
     free set variable to a more general version with a class variable.  This
     is done with theorems such as ~ vtoclg which is used, for example, to
     convert ~ elirrv to ~ elirr . $)
  df-clab $a |- ( x e. { y | ph } <-> [ x / y ] ph ) $.

  $( Simplification of class abstraction notation when the free and bound
     variables are identical. $)
  abid $p |- ( x e. { x | ph } <-> ph ) $=
    ( cv cab wcel wsbc df-clab sbid bitri ) BCZABDEABJFAABBGABHI $.
    $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab1 $p |- ( y e. { x | ph } -> A. x y e. { x | ph } ) $=
      ( cv cab wcel wsbc df-clab hbs1 hbxfrbi ) CDZABEFABKGBACBHABCIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x z $.
    hbab.1 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for a class abstraction. $)
    hbab $p |- ( z e. { y | ph } -> A. x z e. { y | ph } ) $=
      ( cv cab wcel wsbc df-clab hbsb hbxfrbi ) DFZACGHACMIBADCJACDBEKL $.
      $( [1-Mar-1995] $)
  $}

  ${
    $d x z $.
    hbabd.1 $e |- ( ph -> A. x A. y ph ) $.
    hbabd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction form of bound-variable hypothesis builder ~ hbab . $)
    hbabd $p |- ( ph -> ( z e. { y | ps } -> A. x z e. { y | ps } ) ) $=
      ( cv wsbc wal cab wcel wceq wi wn ax-7 syl 2alimi hbsb4t 3syl ax-16 albii
      pm2.61d2 df-clab 3imtr4g ) ABDEHZIZUGCJZUFBDKLZUICJACHUFMCJZUGUHNZAACJDJZ
      BBCJNZCJDJUJOUKNAADJCJULFACDPQAUMDCGRBDECSTUGCEUAUCBEDUDZUIUGCUNUBUE $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    df-cleq.1 $e |- ( A. x ( x e. y <-> x e. z ) -> y = z ) $.
    $( Define the equality connective between classes.  Definition 2.7 of
       [Quine] p. 18.  Also Definition 4.5 of [TakeutiZaring] p. 13; Chapter 4
       provides its justification and methods for eliminating it.  Note that
       its elimination will not necessarily result in a single wff in the
       original language but possibly a "scheme" of wffs.

       This is an example of a somewhat "risky" definition, meaning that it has
       a more complex than usual soundness justification (outside of Metamath),
       because it "overloads" or reuses the existing equality symbol rather
       than introducing a new symbol.  This allows us to make statements that
       may not hold for the original symbol.  For example, it permits us to
       deduce ` y = z <-> A. x ( x e. y <-> x e. z ) ` , which is not a theorem
       of logic but rather presupposes the Axiom of Extensionality (see theorem
       ~ axext4 ).  We therefore include this axiom as a hypothesis, so that
       the use of Extensionality is properly indicated.

       We could avoid this complication by introducing a new symbol, say =_2,
       in place of ` = ` .  This would also have the advantage of making
       elimination of the definition straightforward, so that we could
       eliminate Extensionality as a hypothesis.  We would then also have the
       advantage of being able to identify in various proofs exactly where
       Extensionality truly comes into play rather than just being an artifact
       of a definition..  One of our theorems would then be ` x ` =_2
       ` y <-> x = y ` by invoking Extensionality.

       However, to conform to literature usage, we retain this overloaded
       definition.  This also makes some proofs shorter and probably easier to
       read, without the constant switching between two kinds of equality.

       See also comments under ~ df-clab , ~ df-clel , and ~ abeq2 . $)
    df-cleq $a |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.  $d x y z $.
    $( The same as ~ df-cleq with the hypothesis removed using the Axiom of
       Extensionality ~ ax-ext . $)
    dfcleq $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( vy vz ax-ext df-cleq ) ADEBCDEAFG $.
      $( [15-Sep-1993] $)
  $}

  ${
    $d x y z $.
    $( Every set is a class.  Proposition 4.9 of [TakeutiZaring] p. 13.  This
       theorem shows that a set variable can be expressed as a class
       abstraction.  This provides a motivation for the class syntax
       construction ~ cv , which allows us to substitute a set variable for a
       class variable.  See also ~ cab and ~ df-clab .  Note that this is not a
       rigorous justification, because ~ cv is used as part of the proof of
       this theorem, but a careful argument can be made outside of the
       formalism of Metamath, for example as is done in Chapter 4 of Takeuti
       and Zaring.  See also the discussion under the definition of class in
       [Jech] p. 4 showing that "Every set can be considered to be a class." $)
    cvjust $p |- x = { y | y e. x } $=
      ( vz cv wcel cab wceq wb dfcleq wsbc df-clab elsb3 bitr2i mpgbir ) ADZBDO
      EZBFZGCDZOEZRQEZHCCOQITPBRJSPCBKCBALMN $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the membership connective between classes.  Theorem 6.3 of
       [Quine] p. 41, or Proposition 4.6 of [TakeutiZaring] p. 13, which we
       adopt as a definition.  See these references for its metalogical
       justification.  Note that like ~ df-cleq it extends or "overloads" the
       use of the existing membership symbol, but unlike ~ df-cleq it does not
       strengthen the set of valid wffs of logic when the class variables are
       replaced with set variables (see ~ cleljust ), so we don't include any
       set theory axiom as a hypothesis.  See also comments about the syntax
       under ~ df-clab .  Alternate definitions of ` A e. B ` (but that require
       either ` A ` or ` B ` to be a set) are shown by ~ clel2 , ~ clel3 , and
       ~ clel4 . $)
    df-clel $a |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) $.
  $}

  ${
    $d x A $.  $d x B $.
    eqriv.1 $e |- ( x e. A <-> x e. B ) $.
    $( Infer equality of classes from equivalence of membership. $)
    eqriv $p |- A = B $=
      ( wceq cv wcel wb dfcleq mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdv.1 $e |- ( ph -> ( x e. A <-> x e. B ) ) $.
    $( Deduce equality of classes from equivalence of membership. $)
    eqrdv $p |- ( ph -> A = B ) $=
      ( cv wcel wb wal wceq alrimiv dfcleq sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM
      $.
      $( [17-Mar-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    eqrdav.1 $e |- ( ( ph /\ x e. A ) -> x e. C ) $.
    eqrdav.2 $e |- ( ( ph /\ x e. B ) -> x e. C ) $.
    eqrdav.3 $e |- ( ( ph /\ x e. C ) -> ( x e. A <-> x e. B ) ) $.
    $( MAY BE REVISED - delete this if it is unused / not useful $)
    $( Deduce equality of classes from an equivalence of membership that
       depends on the membership variable. $)
    eqrdav $p |- ( ph -> A = B ) $=
      ( cv wcel wa biimpd impancom mpd wi exbiri com23 imp impbida eqrdv ) ABCD
      ABIZCJZUADJZAUBKUAEJZUCFAUDUBUCAUDKUBUCHLMNAUCKUDUBGAUCUDUBOAUDUCUBAUDUBU
      CHPQRNST $.
      $( [7-Nov-2008] $)
  $}

  ${
    $d x A $.
    $( Law of identity (reflexivity of class equality).  Theorem 6.4 of [Quine]
       p. 41.

       This law is thought to have originated with Aristotle (_Metaphysics_,
       Book VII, Part 17).  (Thanks to Stefan Allan for this information.) $)
    eqid $p |- A = A $=
      ( vx cv wcel biid eqriv ) BAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  $( Class identity law with antecedent. $)
  eqidd $p |- ( ph -> A = A ) $=
    ( wceq eqid a1i ) BBCABDE $.
    $( [21-Aug-2008] $)

  ${
    $d x A $.  $d x B $.
    $( Commutative law for class equality.  Theorem 6.5 of [Quine] p. 41. $)
    eqcom $p |- ( A = B <-> B = A ) $=
      ( vx cv wcel wb wal wceq bicom albii dfcleq 3bitr4i ) CDZAEZMBEZFZCGONFZC
      GABHBAHPQCNOIJCABKCBAKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcoms.1 $e |- ( A = B -> ph ) $.
    $( Inference applying commutative law for class equality to an
       antecedent. $)
    eqcoms $p |- ( B = A -> ph ) $=
      ( wceq eqcom sylbi ) CBEBCEACBFDG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomi.1 $e |- A = B $.
    $( Inference from commutative law for class equality. $)
    eqcomi $p |- B = A $=
      ( wceq eqcom mpbi ) ABDBADCABEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqcomd.1 $e |- ( ph -> A = B ) $.
    $( Deduction from commutative law for class equality. $)
    eqcomd $p |- ( ph -> B = A ) $=
      ( wceq eqcom sylib ) ABCECBEDBCFG $.
      $( [15-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of equalities. $)
    eqeq1 $p |- ( A = B -> ( A = C <-> B = C ) ) $=
      ( vx wceq cv wcel wb wal dfcleq biimpi 19.21bi bibi1d albidv 3bitr4g ) AB
      EZDFZAGZQCGZHZDIQBGZSHZDIACEBCEPTUBDPRUASPRUAHZDPUCDIDABJKLMNDACJDBCJO $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq1i $p |- ( A = C <-> B = C ) $=
      ( wceq wb eqeq1 ax-mp ) ABEACEBCEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq1d $p |- ( ph -> ( A = C <-> B = C ) ) $=
      ( wceq wb eqeq1 syl ) ABCFBDFCDFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality implies equivalence of equalities. $)
  eqeq2 $p |- ( A = B -> ( C = A <-> C = B ) ) $=
    ( wceq eqeq1 eqcom 3bitr4g ) ABDACDBCDCADCBDABCECAFCBFG $.
    $( [5-Aug-1993] $)

  ${
    eqeq2i.1 $e |- A = B $.
    $( Inference from equality to equivalence of equalities. $)
    eqeq2i $p |- ( C = A <-> C = B ) $=
      ( wceq wb eqeq2 ax-mp ) ABECAECBEFDABCGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeq2d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of equalities. $)
    eqeq2d $p |- ( ph -> ( C = A <-> C = B ) ) $=
      ( wceq wb eqeq2 syl ) ABCFDBFDCFGEBCDHI $.
      $( [27-Dec-1993] $)
  $}

  $( Equality relationship among 4 classes. $)
  eqeq12 $p |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) $=
    ( wceq eqeq1 eqeq2 sylan9bb ) ABEACEBCECDEBDEABCFCDBGH $.
    $( [3-Aug-1994] $)

  ${
    eqeq12i.1 $e |- A = B $.
    eqeq12i.2 $e |- C = D $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12i $p |- ( A = C <-> B = D ) $=
      ( wceq wb eqeq12 mp2an ) ABGCDGACGBDGHEFABCDIJ $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeq12d.1 $e |- ( ph -> A = B ) $.
    eqeq12d.2 $e |- ( ph -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeq12d $p |- ( ph -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2anc ) ABCHDEHBDHCEHIFGBCDEJK $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    eqeqan12d.1 $e |- ( ph -> A = B ) $.
    eqeqan12d.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality.  (The
       proof was shortened by Andrew Salmon, 25-May-2011.) $)
    eqeqan12d $p |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeq12 syl2an ) ACDIEFICEIDFIJBGHCDEFKL $.
      $( [25-May-2011] $) $( [9-Aug-1994] $)
  $}

  ${
    eqeqan12rd.1 $e |- ( ph -> A = B ) $.
    eqeqan12rd.2 $e |- ( ps -> C = D ) $.
    $( A useful inference for substituting definitions into an equality. $)
    eqeqan12rd $p |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) $=
      ( wceq wb eqeqan12d ancoms ) ABCEIDFIJABCDEFGHKL $.
      $( [9-Aug-1994] $)
  $}

  $( Transitive law for class equality.  Proposition 4.7(3) of [TakeutiZaring]
     p. 13. $)
  eqtr $p |- ( ( A = B /\ B = C ) -> A = C ) $=
    ( wceq eqeq1 biimpar ) ABDACDBCDABCEF $.
    $( [25-Jan-2004] $)

  $( A transitive law for class equality.  (The proof was shortened by Andrew
     Salmon, 25-May-2011.) $)
  eqtr2 $p |- ( ( A = B /\ A = C ) -> B = C ) $=
    ( wceq eqcom eqtr sylanb ) ABDBADACDBCDABEBACFG $.
    $( [25-May-2011] $) $( [20-May-2005] $)

  $( A transitive law for class equality. $)
  eqtr3 $p |- ( ( A = C /\ B = C ) -> A = B ) $=
    ( wceq eqcom eqtr sylan2b ) BCDACDCBDABDBCEACBFG $.
    $( [20-May-2005] $)

  ${
    eqtri.1 $e |- A = B $.
    eqtri.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtri $p |- A = C $=
      ( wceq eqeq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2i.1 $e |- A = B $.
    eqtr2i.2 $e |- B = C $.
    $( An equality transitivity inference. $)
    eqtr2i $p |- C = A $=
      ( eqtri eqcomi ) ACABCDEFG $.
      $( [21-Feb-1995] $)
  $}

  ${
    eqtr3i.1 $e |- A = B $.
    eqtr3i.2 $e |- A = C $.
    $( An equality transitivity inference. $)
    eqtr3i $p |- B = C $=
      ( eqcomi eqtri ) BACABDFEG $.
      $( [6-May-1994] $)
  $}

  ${
    eqtr4i.1 $e |- A = B $.
    eqtr4i.2 $e |- C = B $.
    $( An equality transitivity inference. $)
    eqtr4i $p |- A = C $=
      ( eqcomi eqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtri.1 $e |- A = B $.
    3eqtri.2 $e |- B = C $.
    3eqtri.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtri $p |- A = D $=
      ( eqtri ) ABDEBCDFGHH $.
      $( [29-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrri $p |- D = A $=
      ( eqtri eqtr2i ) ACDABCEFHGI $.
      $( [25-May-2011] $) $( [3-Aug-2006] $)
  $}

  ${
    3eqtr2i.1 $e |- A = B $.
    3eqtr2i.2 $e |- C = B $.
    3eqtr2i.3 $e |- C = D $.
    $( An inference from three chained equalities. $)
    3eqtr2i $p |- A = D $=
      ( eqtr4i eqtri ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr2ri $p |- D = A $=
      ( eqtr4i eqtr2i ) ACDABCEFHGI $.
      $( [3-Aug-2006] $)
  $}

  ${
    3eqtr3i.1 $e |- A = B $.
    3eqtr3i.2 $e |- A = C $.
    3eqtr3i.3 $e |- B = D $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3i $p |- C = D $=
      ( eqtr3i ) BCDABCEFHGH $.
      $( [25-May-2011] $) $( [6-May-1994] $)

    $( An inference from three chained equalities. $)
    3eqtr3ri $p |- D = C $=
      ( eqtr3i ) BDCGABCEFHH $.
      $( [15-Aug-2004] $)
  $}

  ${
    3eqtr4i.1 $e |- A = B $.
    3eqtr4i.2 $e |- C = A $.
    3eqtr4i.3 $e |- D = B $.
    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4i $p |- C = D $=
      ( eqtr4i ) CADFDBAGEHH $.
      $( [25-May-2011] $) $( [5-Aug-1993] $)

    $( An inference from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4ri $p |- D = C $=
      ( eqtr4i ) DACDBAGEHFH $.
      $( [25-May-2011] $) $( [2-Sep-1995] $)
  $}

  ${
    eqtrd.1 $e |- ( ph -> A = B ) $.
    eqtrd.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtrd $p |- ( ph -> A = C ) $=
      ( wceq eqeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqtr2d.1 $e |- ( ph -> A = B ) $.
    eqtr2d.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    eqtr2d $p |- ( ph -> C = A ) $=
      ( eqtrd eqcomd ) ABDABCDEFGH $.
      $( [18-Oct-1999] $)
  $}

  ${
    eqtr3d.1 $e |- ( ph -> A = B ) $.
    eqtr3d.2 $e |- ( ph -> A = C ) $.
    $( An equality transitivity equality deduction. $)
    eqtr3d $p |- ( ph -> B = C ) $=
      ( eqcomd eqtrd ) ACBDABCEGFH $.
      $( [18-Jul-1995] $)
  $}

  ${
    eqtr4d.1 $e |- ( ph -> A = B ) $.
    eqtr4d.2 $e |- ( ph -> C = B ) $.
    $( An equality transitivity equality deduction. $)
    eqtr4d $p |- ( ph -> A = C ) $=
      ( eqcomd eqtrd ) ABCDEADCFGH $.
      $( [18-Jul-1995] $)
  $}

  ${
    3eqtrd.1 $e |- ( ph -> A = B ) $.
    3eqtrd.2 $e |- ( ph -> B = C ) $.
    3eqtrd.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtrd $p |- ( ph -> A = D ) $=
      ( eqtrd ) ABCEFACDEGHII $.
      $( [29-Oct-1995] $)

    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtrrd $p |- ( ph -> D = A ) $=
      ( eqtrd eqtr2d ) ABDEABCDFGIHJ $.
      $( [25-May-2011] $) $( [4-Aug-2006] $)
  $}

  ${
    3eqtr2d.1 $e |- ( ph -> A = B ) $.
    3eqtr2d.2 $e |- ( ph -> C = B ) $.
    3eqtr2d.3 $e |- ( ph -> C = D ) $.
    $( A deduction from three chained equalities. $)
    3eqtr2d $p |- ( ph -> A = D ) $=
      ( eqtr4d eqtrd ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)

    $( A deduction from three chained equalities. $)
    3eqtr2rd $p |- ( ph -> D = A ) $=
      ( eqtr4d eqtr2d ) ABDEABCDFGIHJ $.
      $( [4-Aug-2006] $)
  $}

  ${
    3eqtr3d.1 $e |- ( ph -> A = B ) $.
    3eqtr3d.2 $e |- ( ph -> A = C ) $.
    3eqtr3d.3 $e |- ( ph -> B = D ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr3d $p |- ( ph -> C = D ) $=
      ( eqtr3d ) ACDEABCDFGIHI $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr3rd $p |- ( ph -> D = C ) $=
      ( eqtr3d ) ACEDHABCDFGII $.
      $( [14-Jan-2006] $)
  $}

  ${
    3eqtr4d.1 $e |- ( ph -> A = B ) $.
    3eqtr4d.2 $e |- ( ph -> C = A ) $.
    3eqtr4d.3 $e |- ( ph -> D = B ) $.
    $( A deduction from three chained equalities.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    3eqtr4d $p |- ( ph -> C = D ) $=
      ( eqtr4d ) ADBEGAECBHFII $.
      $( [25-May-2011] $) $( [4-Aug-1995] $)

    $( A deduction from three chained equalities. $)
    3eqtr4rd $p |- ( ph -> D = C ) $=
      ( eqtr4d ) AEBDAECBHFIGI $.
      $( [21-Sep-1995] $)
  $}

  ${
    syl5eq.1 $e |- A = B $.
    syl5eq.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDBCGAEHFI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5req.1 $e |- A = B $.
    syl5req.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5req $p |- ( ph -> C = A ) $=
      ( syl5eq eqcomd ) ABDABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl5eqr.1 $e |- B = A $.
    syl5eqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl5eq ) ABCDCBEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl5reqr.1 $e |- B = A $.
    syl5reqr.2 $e |- ( ph -> B = C ) $.
    $( An equality transitivity deduction. $)
    syl5reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl5req ) ABCDCBEGFH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eq.1 $e |- ( ph -> A = B ) $.
    syl6eq.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6eq $p |- ( ph -> A = C ) $=
      ( wceq a1i eqtrd ) ABCDECDGAFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6req.1 $e |- ( ph -> A = B ) $.
    syl6req.2 $e |- B = C $.
    $( An equality transitivity deduction. $)
    syl6req $p |- ( ph -> C = A ) $=
      ( syl6eq eqcomd ) ABDABCDEFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    syl6eqr.1 $e |- ( ph -> A = B ) $.
    syl6eqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6eqr $p |- ( ph -> A = C ) $=
      ( eqcomi syl6eq ) ABCDEDCFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    syl6reqr.1 $e |- ( ph -> A = B ) $.
    syl6reqr.2 $e |- C = B $.
    $( An equality transitivity deduction. $)
    syl6reqr $p |- ( ph -> C = A ) $=
      ( eqcomi syl6req ) ABCDEDCFGH $.
      $( [29-Mar-1998] $)
  $}

  ${
    sylan9eq.1 $e |- ( ph -> A = B ) $.
    sylan9eq.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 25-May-2011.) $)
    sylan9eq $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( wceq eqtr syl2an ) ACDHDEHCEHBFGCDEIJ $.
      $( [25-May-2011] $) $( [8-May-1994] $)
  $}

  ${
    sylan9req.1 $e |- ( ph -> B = A ) $.
    sylan9req.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9req $p |- ( ( ph /\ ps ) -> A = C ) $=
      ( eqcomd sylan9eq ) ABCDEADCFHGI $.
      $( [23-Jun-2007] $)
  $}

  ${
    sylan9eqr.1 $e |- ( ph -> A = B ) $.
    sylan9eqr.2 $e |- ( ps -> B = C ) $.
    $( An equality transitivity deduction. $)
    sylan9eqr $p |- ( ( ps /\ ph ) -> A = C ) $=
      ( wceq sylan9eq ancoms ) ABCEHABCDEFGIJ $.
      $( [8-May-1994] $)
  $}

  ${
    3eqtr3g.1 $e |- ( ph -> A = B ) $.
    3eqtr3g.2 $e |- A = C $.
    3eqtr3g.3 $e |- B = D $.
    $( A chained equality inference, useful for converting from definitions. $)
    3eqtr3g $p |- ( ph -> C = D ) $=
      ( syl5eqr syl6eq ) ADCEADBCGFIHJ $.
      $( [15-Nov-1994] $)
  $}

  ${
    3eqtr4g.1 $e |- ( ph -> A = B ) $.
    3eqtr4g.2 $e |- C = A $.
    3eqtr4g.3 $e |- D = B $.
    $( A chained equality inference, useful for converting to definitions. $)
    3eqtr4g $p |- ( ph -> C = D ) $=
      ( syl5eq syl6eqr ) ADCEADBCGFIHJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    3eqtr4a.1 $e |- A = B $.
    3eqtr4a.2 $e |- ( ph -> C = A ) $.
    3eqtr4a.3 $e |- ( ph -> D = B ) $.
    $( A chained equality inference, useful for converting to definitions.
       (The proof was shortened by Andrew Salmon, 25-May-2011.) $)
    3eqtr4a $p |- ( ph -> C = D ) $=
      ( syl6eq eqtr4d ) ADCEADBCGFIHJ $.
      $( [25-May-2011] $) $( [2-Feb-2007] $)
  $}

  ${
    eq2tr.1 $e |- ( A = C -> D = F ) $.
    eq2tr.2 $e |- ( B = D -> C = G ) $.
    $( A compound transitive inference for class equality. $)
    eq2tri $p |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) $=
      ( wceq wa ancom eqeq2d pm5.32i 3bitr3i ) ACIZBDIZJPOJOBEIZJPAFIZJOPKOPQOD
      EBGLMPORPCFAHLMN $.
      $( [22-Jan-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality implies equivalence of membership. $)
    eleq1 $p |- ( A = B -> ( A e. C <-> B e. C ) ) $=
      ( vx wceq cv wcel wa wex eqeq2 anbi1d exbidv df-clel 3bitr4g ) ABEZDFZAEZ
      PCGZHZDIPBEZRHZDIACGBCGOSUADOQTRABPJKLDACMDBCMN $.
      $( [5-Aug-1993] $)

    $( Equality implies equivalence of membership. $)
    eleq2 $p |- ( A = B -> ( C e. A <-> C e. B ) ) $=
      ( vx wceq cv wcel wa wex wal dfcleq biimpi 19.21bi anbi2d df-clel 3bitr4g
      wb exbidv ) ABEZDFZCEZTAGZHZDIUATBGZHZDICAGCBGSUCUEDSUBUDUASUBUDQZDSUFDJD
      ABKLMNRDCAODCBOP $.
      $( [5-Aug-1993] $)
  $}

  $( Equality implies equivalence of membership. $)
  eleq12 $p |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) $=
    ( wceq wcel eleq1 eleq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    eleq1i.1 $e |- A = B $.
    $( Inference from equality to equivalence of membership. $)
    eleq1i $p |- ( A e. C <-> B e. C ) $=
      ( wceq wcel wb eleq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [5-Aug-1993] $)

    $( Inference from equality to equivalence of membership. $)
    eleq2i $p |- ( C e. A <-> C e. B ) $=
      ( wceq wcel wb eleq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)

    ${
      eleq12i.2 $e |- C = D $.
      $( Inference from equality to equivalence of membership. $)
      eleq12i $p |- ( A e. C <-> B e. D ) $=
        ( wcel eleq2i eleq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
        $( [31-May-1994] $)
    $}
  $}

  ${
    eleq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction from equality to equivalence of membership. $)
    eleq1d $p |- ( ph -> ( A e. C <-> B e. C ) ) $=
      ( wceq wcel wb eleq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [5-Aug-1993] $)

    $( Deduction from equality to equivalence of membership. $)
    eleq2d $p |- ( ph -> ( C e. A <-> C e. B ) ) $=
      ( wceq wcel wb eleq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [27-Dec-1993] $)

    ${
      eleq12d.2 $e |- ( ph -> C = D ) $.
      $( Deduction from equality to equivalence of membership. $)
      eleq12d $p |- ( ph -> ( A e. C <-> B e. D ) ) $=
        ( wcel eleq2d eleq1d bitrd ) ABDHBEHCEHADEBGIABCEFJK $.
        $( [31-May-1994] $)
    $}
  $}

  $( A transitive-type law relating membership and equality. $)
  eleq1a $p |- ( A e. B -> ( C = A -> C e. B ) ) $=
    ( wceq wcel eleq1 biimprcd ) CADCBEABECABFG $.
    $( [9-Apr-1994] $)

  ${
    eqeltr.1 $e |- A = B $.
    eqeltr.2 $e |- B e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltri $p |- A e. C $=
      ( wcel eleq1i mpbir ) ACFBCFEABCDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrr.1 $e |- A = B $.
    eqeltrr.2 $e |- A e. C $.
    $( Substitution of equal classes into membership relation. $)
    eqeltrri $p |- B e. C $=
      ( eqcomi eqeltri ) BACABDFEG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtr.1 $e |- A e. B $.
    eleqtr.2 $e |- B = C $.
    $( Substitution of equal classes into membership relation. $)
    eleqtri $p |- A e. C $=
      ( wcel eleq2i mpbi ) ABFACFDBCAEGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eleqtrr.1 $e |- A e. B $.
    eleqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into membership relation. $)
    eleqtrri $p |- A e. C $=
      ( eqcomi eleqtri ) ABCDCBEFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqeltrd.1 $e |- ( ph -> A = B ) $.
    eqeltrd.2 $e |- ( ph -> B e. C ) $.
    $( Substitution of equal classes into membership relation, deduction form.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    eqeltrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [10-Dec-2002] $)
  $}

  ${
    eqeltrrd.1 $e |- ( ph -> A = B ) $.
    eqeltrrd.2 $e |- ( ph -> A e. C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eqeltrrd $p |- ( ph -> B e. C ) $=
      ( eqcomd eqeltrd ) ACBDABCEGFH $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrd.2 $e |- ( ph -> B = C ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrd $p |- ( ph -> A e. C ) $=
      ( wcel eleq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [14-Dec-2004] $)
  $}

  ${
    eleqtrrd.1 $e |- ( ph -> A e. B ) $.
    eleqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Deduction that substitutes equal classes into membership. $)
    eleqtrrd $p |- ( ph -> A e. C ) $=
      ( eqcomd eleqtrd ) ABCDEADCFGH $.
      $( [14-Dec-2004] $)
  $}

  ${
    syl5eqel.1 $e |- A = B $.
    syl5eqel.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference. $)
    syl5eqel $p |- ( ph -> A e. C ) $=
      ( wceq a1i eqeltrd ) ABCDBCGAEHFI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eqelr.1 $e |- B = A $.
    syl5eqelr.2 $e |- ( ph -> B e. C ) $.
    $( B membership and equality inference. $)
    syl5eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl5eqel ) ABCDCBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleq.1 $e |- A e. B $.
    syl5eleq.2 $e |- ( ph -> B = C ) $.
    $( B membership and equality inference. $)
    syl5eleq $p |- ( ph -> A e. C ) $=
      ( wcel a1i eleqtrd ) ABCDBCGAEHFI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl5eleqr.1 $e |- A e. B $.
    syl5eleqr.2 $e |- ( ph -> C = B ) $.
    $( B membership and equality inference. $)
    syl5eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl5eleq ) ABCDEADCFGH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqel.1 $e |- ( ph -> A = B ) $.
    syl6eqel.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqel $p |- ( ph -> A e. C ) $=
      ( wcel a1i eqeltrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eqelr.1 $e |- ( ph -> B = A ) $.
    syl6eqelr.2 $e |- B e. C $.
    $( A membership and equality inference. $)
    syl6eqelr $p |- ( ph -> A e. C ) $=
      ( eqcomd syl6eqel ) ABCDACBEGFH $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleq.1 $e |- ( ph -> A e. B ) $.
    syl6eleq.2 $e |- B = C $.
    $( A membership and equality inference. $)
    syl6eleq $p |- ( ph -> A e. C ) $=
      ( wceq a1i eleqtrd ) ABCDECDGAFHI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6eleqr.1 $e |- ( ph -> A e. B ) $.
    syl6eleqr.2 $e |- C = B $.
    $( A membership and equality inference. $)
    syl6eleqr $p |- ( ph -> A e. C ) $=
      ( eqcomi syl6eleq ) ABCDEDCFGH $.
      $( [24-Apr-2005] $)
  $}

  ${
    eleq2s.1 $e |- ( A e. B -> ph ) $.
    eleq2s.2 $e |- C = B $.
    $( Substitution of equal classes into a membership antecedent.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    eleq2s $p |- ( A e. C -> ph ) $=
      ( wcel eleq2i sylbi ) BDGBCGADCBFHEI $.
      $( [12-Jun-2011] $) $( [3-Jun-2011] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    cleqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cleqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Establish equality between classes, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    cleqf $p |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) $=
      ( wceq cv wcel wb wal dfcleq ax-17 hbbi eleq1 bibi12d cbval bitr4i ) CDGB
      HZCIZSDIZJZBKAHZCIZUCDIZJZAKBCDLUFUBABUFBMTUAAEFNUCSGUDTUEUAUCSCOUCSDOPQR
      $.
      $( [5-Aug-1993] $)
  $}

  $( A way of showing two classes are not equal. $)
  nelneq $p |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) $=
    ( wcel wn wceq eleq1 biimpcd con3d imp ) ACDZBCDZEABFZEKMLMKLABCGHIJ $.
    $( [1-Apr-1997] $)

  $( A way of showing two classes are not equal. $)
  nelneq2 $p |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) $=
    ( wcel wn wceq eleq2 biimpcd con3d imp ) ABDZACDZEBCFZEKMLMKLBCAGHIJ $.
    $( [12-Jan-2002] $)

  ${
    $d x y $.  $d y A $.
    $( Lemma for ~ eqsb3 .  (The proof was shortened by Andrew Salmon,
       14-Jun-2011.) $)
    eqsb3lem $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( cv wceq ax-17 eqeq1 sbie ) BDZCEADZCEZBAKBFIJCGH $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d x w $.
    $( Substitution applied to an atomic wff (class version of ~ equsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.) $)
    eqsb3 $p |- ( [ x / y ] y = A <-> x = A ) $=
      ( vw cv wceq wsbc eqsb3lem sbbii ax-17 sbco2 3bitr3i ) BECFZBDEZGZDAEZGNC
      FZDPGMBPGPCFOQDADBCHIMBADMDJKADCHL $.
      $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w y $.  $d w A $.  $d w x $.
    $( Substitution applied to an atomic wff (class version of ~ elsb3 ).
       (Contributed by Rodolfo Medina, 28-Apr-2010.)  (The proof was shortened
       by Andrew Salmon, 14-Jun-2011.) $)
    clelsb3 $p |- ( [ x / y ] y e. A <-> x e. A ) $=
      ( vw cv wcel wsbc ax-17 eleq1 sbie sbbii sbco2 bitr3i wb wceq sbimi ax-mp
      equsb1 sbbi mpbi sbf 3bitri ) BEZCFZBAEZGZDEZCFZDUEGZUECFZDUEGZUJUFUHDUCG
      ZBUEGUIULUDBAUHUDDBUDDHUGUCCIJKUHDABUHBHLMUHUJNZDUEGZUIUKNUGUEOZDUEGUNDAR
      UOUMDAUGUECIPQUHUJDASTUJDAUJDHUAUB $.
      $( [14-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d y A $.  $d w ph $.  $d w x z $.
    hblemd.1 $e |- ( ph -> A. x ph ) $.
    hblemd.2 $e |- ( ph -> A. y ph ) $.
    hblemd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hblem . $)
    hblemd $p |- ( ph -> ( z e. A -> A. x z e. A ) ) $=
      ( cv wcel wsbc wal hbsbd clelsb3 albii 3imtr3g ) ACIEJZCDIZKZSBLREJZTBLAQ
      CDBGFHMDCENZSTBUAOP $.
      $( [17-Feb-2013] $)
  $}

  ${
    hbxfr.1 $e |- A = B $.
    hbxfr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( A utility lemma to transfer a bound-variable hypothesis builder into a
       definition.  See ~ hbxfrbi for equivalence version. $)
    hbxfreq $p |- ( y e. A -> A. x y e. A ) $=
      ( cv wcel eleq2i hbxfrbi ) BGZCHKDHACDKEIFJ $.
      $( [21-Aug-2007] $)
  $}

  ${
    hbxfrd.1 $e |- ( ph -> A. x ph ) $.
    hbxfrd.2 $e |- ( ph -> A = B ) $.
    hbxfrd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbxfreq . $)
    hbxfrd $p |- ( ph -> ( y e. A -> A. x y e. A ) ) $=
      ( cv wcel wal eleq2d albid 3imtr4d ) ACIZEJZPBKODJZQBKHADEOGLZAQPBFRMN $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d w y A $.  $d w x z $.
    hblem.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Lemma for ~ hbeq and ~ hbel .  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hblem $p |- ( z e. A -> A. x z e. A ) $=
      ( cv wcel wsbc wal hbsb clelsb3 albii 3imtr3i ) BFDGZBCFZHZPAIODGZQAINBCA
      EJCBDKZPQARLM $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x $.
    hbeq.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbeq.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A = B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbeq $p |- ( A = B -> A. x A = B ) $=
      ( vw wceq cv wcel wb wal dfcleq hblem hbbi hbal hbxfrbi ) DEIHJZDKZSEKZLZ
      HMAHDENUBAHTUAAABHDFOACHEGOPQR $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d y A w $.  $d z B w $.  $d w x v $.
    hbel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( If ` x ` is effectively bound in ` A ` and ` B ` , it is effectively
       bound in ` A e. B ` .  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbel $p |- ( A e. B -> A. x A e. B ) $=
      ( vw vv wcel cv wceq wa wex df-clel ax-17 hbeq hblem hban hbex hbxfrbi )
      DEJHKZDLZUBEJZMZHNAHDEOUEAHUCUDAAIBUBDIKUBJAPFQACHEGRSTUA $.
      $( [11-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x y z $.  $d y A $.
    hbeleq.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( If ` x ` is effectively bound in ` y e. A ` , then it is effectively
       bound in ` y = A ` .  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    hbeleq $p |- ( y = A -> A. x y = A ) $=
      ( vz cv wcel ax-17 hbeq ) AEBBFZCEFJGAHDI $.
      $( [12-Aug-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction (also called a
       class builder).  Theorem 5.1 of [Quine] p. 34.  This theorem shows the
       relationship between expressions with class abstractions and expressions
       with class variables.  Note that ~ abbi and its relatives are among
       those useful for converting theorems with class variables to equivalent
       theorems with wff variables, by first substituting a class abstraction
       for each class variable.

       Class variables can always be eliminated from a theorem to result in an
       equivalent theorem with wff variables, and vice-versa.  The idea is
       roughly as follows.  To convert a theorem with a wff variable ` ph `
       (that has a free variable ` x ` ) to a theorem with a class variable
       ` A ` , we substitute ` x e. A ` for ` ph ` throughout and simplify,
       where ` A ` is a new class variable not already in the wff.  An example
       is the conversion of ~ zfauscl to ~ inex1 (look at the instance of
       ~ zfauscl that occurs in the proof of ~ inex1 ).  Conversely, to convert
       a theorem with a class variable ` A ` to one with ` ph ` , we substitute
       ` { x | ph } ` for ` A ` throughout and simplify, where ` x ` and ` ph `
       are new set and wff variables not already in the wff.  An example is
       ~ cp , which derives a formula containing wff variables from
       substitution instances of the class variables in its equivalent
       formulation ~ cplem2 .  For more information on class variables, see
       Quine pp. 15-21 and/or Takeuti and Zaring pp. 10-13. $)
    abeq2 $p |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) $=
      ( vy cab wceq cv wcel wb wal ax-17 hbab1 cleqf abid bibi2i albii bitri )
      CABEZFBGZCHZSRHZIZBJTAIZBJBDCRDGCHBKABDLMUBUCBUAATABNOPQ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality of a class variable and a class abstraction. $)
    abeq1 $p |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) $=
      ( cab wceq cv wcel wb wal abeq2 eqcom bicom albii 3bitr4i ) CABDZEBFCGZAH
      ZBIOCEAPHZBIABCJOCKRQBAPLMN $.
      $( [20-Aug-1993] $)
  $}

  ${
    abeqi.1 $e |- A = { x | ph } $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq2i $p |- ( x e. A <-> ph ) $=
      ( cv wcel cab eleq2i abid bitri ) BEZCFKABGZFACLKDHABIJ $.
      $( [3-Apr-1996] $)
  $}

  ${
    abeqri.1 $e |- { x | ph } = A $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abeq1i $p |- ( ph <-> x e. A ) $=
      ( cv cab wcel abid eleq2i bitr3i ) ABEZABFZGKCGABHLCKDIJ $.
      $( [31-Jul-1994] $)
  $}

  ${
    abeqd.1 $e |- ( ph -> A = { x | ps } ) $.
    $( Equality of a class variable and a class abstraction (deduction). $)
    abeq2d $p |- ( ph -> ( x e. A <-> ps ) ) $=
      ( cv wcel cab eleq2d abid syl6bb ) ACFZDGLBCHZGBADMLEIBCJK $.
      $( [16-Nov-1995] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Equivalent wff's correspond to equal class abstractions. $)
    abbi $p |- ( A. x ( ph <-> ps ) <-> { x | ph } = { x | ps } ) $=
      ( vy cab wceq cv wcel wb wal hbab1 cleqf abid bibi12i albii bitr2i ) ACEZ
      BCEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [25-Nov-2013] $)
  $}

  ${
    $d x A $.
    abbiri.1 $e |- ( x e. A <-> ph ) $.
    $( Equality of a class variable and a class abstraction (inference
       rule). $)
    abbi2i $p |- A = { x | ph } $=
      ( cab wceq cv wcel wb abeq2 mpgbir ) CABEFBGCHAIBABCJDK $.
      $( [5-Aug-1993] $)
  $}

  ${
    abbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions (inference rule). $)
    abbii $p |- { x | ph } = { x | ps } $=
      ( wb cab wceq abbi mpgbi ) ABEACFBCFGCABCHDI $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.  $d ch y $.  $( ` y ` is a dummy var. $)
    abbid.1 $e |- ( ph -> A. x ph ) $.
    abbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbid $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( wb wal cab wceq alrimi abbi sylib ) ABCGZDHBDICDIJANDEFKBCDLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph $.
    abbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal class abstractions (deduction rule). $)
    abbidv $p |- ( ph -> { x | ps } = { x | ch } ) $=
      ( ax-17 abbid ) ABCDADFEG $.
      $( [10-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbirdv.1 $e |- ( ph -> ( x e. A <-> ps ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi2dv $p |- ( ph -> A = { x | ps } ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq2 sylibr ) ACFDGBHZCIDBCJKAOCELBCDM
      N $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x y A $.  $d ph x y $.  $d ps y $.  $( ` y ` is a dummy var. $)
    abbildv.1 $e |- ( ph -> ( ps <-> x e. A ) ) $.
    $( Deduction from a wff to a class abstraction. $)
    abbi1dv $p |- ( ph -> { x | ps } = A ) $=
      ( cv wcel wb wal cab wceq alrimiv abeq1 sylibr ) ABCFDGHZCIBCJDKAOCELBCDM
      N $.
      $( [9-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2 $p |- { x | x e. A } = A $=
      ( cv wcel cab biid abbi2i eqcomi ) BACBDZAEIABIFGH $.
      $( [26-Dec-1993] $)
  $}

  ${
    $d y A $.  $d x y $.
    abid2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A simplification of class abstraction.  Theorem 5.2 of [Quine] p. 35. $)
    abid2f $p |- { x | x e. A } = A $=
      ( cv wcel cab wceq wb wal hbab1 cleqf abid bibi2i albii bitri biid mpgbir
      eqcomi ) CAEZCFZAGZCUBHZUAUAIZAUCUATUBFZIZAJUDAJABCUBDUAABKLUFUDAUEUAUAUA
      AMNOPUAQRS $.
      $( [5-Sep-2011] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership of a class variable in a class abstraction. $)
    clelab $p |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq cab wcel wa wex wsbc df-clab anbi2i exbii df-clel ax-17 hbs1
      hban eqeq1 sbequ12 anbi12d cbvex 3bitr4i ) DEZCFZUDABGZHZIZDJUEABUDKZIZDJ
      CUFHBEZCFZAIZBJUHUJDUGUIUEADBLMNDCUFOUMUJBDUMDPUEUIBUEBPABDQRUKUDFULUEAUI
      UKUDCSABDTUAUBUC $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( Membership of a class abstraction in another class. $)
    clabel $p |- ( { x | ph } e. A <->
                 E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) $=
      ( cab wcel cv wceq wa wex wb wal df-clel abeq2 anbi1i ancom bitri exbii )
      ABEZDFCGZSHZTDFZIZCJUBBGTFAKBLZIZCJCSDMUCUECUCUDUBIUEUAUDUBABTNOUDUBPQRQ
      $.
      $( [17-Jan-2006] $)
  $}

  ${
    $d z A $.  $d z x $.  $d z y $.
    $( The right-hand side of the second equality is a way of representing
       proper substitution of ` y ` for ` x ` into a class variable. $)
    sbab $p |- ( x = y -> A = { z | [ y / x ] z e. A } ) $=
      ( cv wceq wcel wsbc sbequ12 abbi2dv ) AEBEZFCEDGZAKHCDLABIJ $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d v A w $.  $d x z v u $.  $d y z v u $.  $d v ph $.
    sbabel.1 $e |- ( w e. A -> A. x w e. A ) $.
    $( Theorem to move a substitution in and out of a class abstraction.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    sbabel $p |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) $=
      ( vv cv cab wceq wcel wa wex wsbc wb wal sbf abeq2 sbbii sbex sban sbrbis
      ax-17 sbalv 3bitr4i hblem anbi12i bitri exbii df-clel ) HIZADJZKZULFLZMZH
      NZBCIZOZULABUROZDJZKZUOMZHNZUMFLZBUROVAFLUSUPBUROZHNVDUPHBCUAVFVCHVFUNBUR
      OZUOBUROZMVCUNUOBCUBVGVBVHUODIULLZAPZDQZBUROVIUTPZDQVGVBVJVLBCDVIVIABCVIB
      CVIBUDRUCUEUNVKBCADULSTUTDULSUFUOBCBEHFGUGRUHUIUJUIVEUQBCHUMFUKTHVAFUKUF
      $.
      $( [11-Jul-2011] $) $( [27-Sep-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Negated equality and membership
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new connectives. $)
  $c =/= $. $( Not equal to (equal sign with slash through it). $)
  $c e/ $. $( Not an element of (epsilon with slash through it). $)

  $( Extend wff notation to include inequality. $)
  wne $a wff A =/= B $.

  $( Extend wff notation to include negated membership. $)
  wnel $a wff A e/ B $.

  $( Define inequality. $)
  df-ne $a |- ( A =/= B <-> -. A = B ) $.

  $( Define negated membership. $)
  df-nel $a |- ( A e/ B <-> -. A e. B ) $.

  $( Negation of inequality. $)
  nne $p |- ( -. A =/= B <-> A = B ) $=
    ( wceq wne wn df-ne con2bii bicomi ) ABCZABDZEJIABFGH $.
    $( [9-Jun-2006] $)

  $( No class is unequal to itself.  (Contributed by Stefan O'Rear,
     1-Jan-2015.) $)
  neirr $p |- -. A =/= A $=
    ( wne wn wceq eqid nne mpbir ) AABCAADAEAAFG $.
    $( [1-Jan-2015] $)

  $( Excluded middle with equality and inequality. $)
  exmidne $p |- ( A = B \/ A =/= B ) $=
    ( wceq wne wo wn exmid df-ne orbi2i mpbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Law of noncontradiction with equality and inequality. $)
  nonconne $p |- -. ( A = B /\ A =/= B ) $=
    ( wceq wne wa wn pm3.24 df-ne anbi2i mtbir ) ABCZABDZEKKFZEKGLMKABHIJ $.
    $( [3-Feb-2012] $)

  $( Equality theorem for inequality. $)
  neeq1 $p |- ( A = B -> ( A =/= C <-> B =/= C ) ) $=
    ( wceq wn wne eqeq1 notbid df-ne 3bitr4g ) ABDZACDZEBCDZEACFBCFKLMABCGHACIB
    CIJ $.
    $( [19-Nov-1994] $)

  $( Equality theorem for inequality. $)
  neeq2 $p |- ( A = B -> ( C =/= A <-> C =/= B ) ) $=
    ( wceq wn wne eqeq2 notbid df-ne 3bitr4g ) ABDZCADZECBDZECAFCBFKLMABCGHCAIC
    BIJ $.
    $( [19-Nov-1994] $)

  ${
    neeq1i.1 $e |- A = B $.
    $( Inference for inequality. $)
    neeq1i $p |- ( A =/= C <-> B =/= C ) $=
      ( wceq wne wb neeq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [29-Apr-2005] $)

    $( Inference for inequality. $)
    neeq2i $p |- ( C =/= A <-> C =/= B ) $=
      ( wceq wne wb neeq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [29-Apr-2005] $)

    neeq12i.2 $e |- C = D $.
    $( Inference for inequality. $)
    neeq12i $p |- ( A =/= C <-> B =/= D ) $=
      ( wne neeq2i neeq1i bitri ) ACGADGBDGCDAFHABDEIJ $.
      $( [24-Jul-2012] $)
  $}

  ${
    neeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction for inequality. $)
    neeq1d $p |- ( ph -> ( A =/= C <-> B =/= C ) ) $=
      ( wceq wne wb neeq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [25-Oct-1999] $)

    $( Deduction for inequality. $)
    neeq2d $p |- ( ph -> ( C =/= A <-> C =/= B ) ) $=
      ( wceq wne wb neeq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [25-Oct-1999] $)

    neeq12d.2 $e |- ( ph -> C = D ) $.
    $( Deduction for inequality. $)
    neeq12d $p |- ( ph -> ( A =/= C <-> B =/= D ) ) $=
      ( wne neeq1d neeq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    eqnetr.1 $e |- A = B $.
    eqnetr.2 $e |- B =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetri $p |- A =/= C $=
      ( wne neeq1i mpbir ) ACFBCFEABCDGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrd.1 $e |- ( ph -> A = B ) $.
    eqnetrd.2 $e |- ( ph -> B =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrr.1 $e |- A = B $.
    eqnetrr.2 $e |- A =/= C $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrri $p |- B =/= C $=
      ( eqcomi eqnetri ) BACABDFEG $.
      $( [4-Jul-2012] $)
  $}

  ${
    eqnetrrd.1 $e |- ( ph -> A = B ) $.
    eqnetrrd.2 $e |- ( ph -> A =/= C ) $.
    $( Substitution of equal classes into an inequality. $)
    eqnetrrd $p |- ( ph -> B =/= C ) $=
      ( eqcomd eqnetrd ) ACBDABCEGFH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtr.1 $e |- A =/= B $.
    neeqtr.2 $e |- B = C $.
    $( Substitution of equal classes into an inequality. $)
    neeqtri $p |- A =/= C $=
      ( wne neeq2i mpbi ) ABFACFDBCAEGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrd $p |- ( ph -> A =/= C ) $=
      ( wne neeq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrr.1 $e |- A =/= B $.
    neeqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrri $p |- A =/= C $=
      ( eqcomi neeqtri ) ABCDCBEFG $.
      $( [4-Jul-2012] $)
  $}

  ${
    neeqtrrd.1 $e |- ( ph -> A =/= B ) $.
    neeqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into an inequality. $)
    neeqtrrd $p |- ( ph -> A =/= C ) $=
      ( eqcomd neeqtrd ) ABCDEADCFGH $.
      $( [4-Jul-2012] $)
  $}

  ${
    syl5eqner.1 $e |- B = A $.
    syl5eqner.2 $e |- ( ph -> B =/= C ) $.
    $( B chained equality inference for inequality. $)
    syl5eqner $p |- ( ph -> A =/= C ) $=
      ( wne neeq1i sylib ) ACDGBDGFCBDEHI $.
      $( [6-Jun-2012] $)
  $}

  ${
    3netr3d.1 $e |- ( ph -> A =/= B ) $.
    3netr3d.2 $e |- ( ph -> A = C ) $.
    3netr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4d.1 $e |- ( ph -> A =/= B ) $.
    3netr4d.2 $e |- ( ph -> C = A ) $.
    3netr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4d $p |- ( ph -> C =/= D ) $=
      ( wne neeq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr3g.1 $e |- ( ph -> A =/= B ) $.
    3netr3g.2 $e |- A = C $.
    3netr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr3g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [24-Jul-2012] $)
  $}

  ${
    3netr4g.1 $e |- ( ph -> A =/= B ) $.
    3netr4g.2 $e |- C = A $.
    3netr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of an inequality. $)
    3netr4g $p |- ( ph -> C =/= D ) $=
      ( wne neeq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [14-Jun-2012] $)
  $}

  ${
    necon3abii.1 $e |- ( A = B <-> ph ) $.
    $( Deduction from equality to inequality. $)
    necon3abii $p |- ( A =/= B <-> -. ph ) $=
      ( wne wceq df-ne xchbinx ) BCEBCFABCGDH $.
      $( [9-Nov-2007] $)
  $}

  ${
    necon3bbii.1 $e |- ( ph <-> A = B ) $.
    $( Deduction from equality to inequality. $)
    necon3bbii $p |- ( -. ph <-> A =/= B ) $=
      ( wne wn wceq bicomi necon3abii ) BCEAFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon3bii.1 $e |- ( A = B <-> C = D ) $.
    $( Inference from equality to inequality. $)
    necon3bii $p |- ( A =/= B <-> C =/= D ) $=
      ( wne wceq wn necon3abii df-ne bitr4i ) ABFCDGZHCDFLABEICDJK $.
      $( [23-Feb-2005] $)
  $}

  ${
    necon3abid.1 $e |- ( ph -> ( A = B <-> ps ) ) $.
    $( Deduction from equality to inequality. $)
    necon3abid $p |- ( ph -> ( A =/= B <-> -. ps ) ) $=
      ( wne wceq wn df-ne notbid syl5bb ) CDFCDGZHABHCDIALBEJK $.
      $( [21-Mar-2007] $)
  $}

  ${
    necon3bbid.1 $e |- ( ph -> ( ps <-> A = B ) ) $.
    $( Deduction from equality to inequality. $)
    necon3bbid $p |- ( ph -> ( -. ps <-> A =/= B ) ) $=
      ( wne wn wceq bicomd necon3abid ) ACDFBGABCDABCDHEIJI $.
      $( [2-Jun-2007] $)
  $}

  ${
    necon3bid.1 $e |- ( ph -> ( A = B <-> C = D ) ) $.
    $( Deduction from equality to inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bid $p |- ( ph -> ( A =/= B <-> C =/= D ) ) $=
      ( wne wceq wn df-ne necon3bbid syl5bb ) BCGBCHZIADEGBCJAMDEFKL $.
      $( [25-May-2011] $) $( [23-Feb-2005] $)
  $}

  ${
    necon3ad.1 $e |- ( ph -> ( ps -> A = B ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3ad $p |- ( ph -> ( A =/= B -> -. ps ) ) $=
      ( wne wceq wn nne syl6ibr con2d ) ABCDFZABCDGLHECDIJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3bd.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon3bd $p |- ( ph -> ( -. ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con1d ) ACDFZBLGCDHABCDIEJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon3d.1 $e |- ( ph -> ( A = B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon3d $p |- ( ph -> ( C =/= D -> A =/= B ) ) $=
      ( wne wceq wn necon3ad df-ne syl6ibr ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [10-Jun-2006] $)
  $}

  ${
    necon3i.1 $e |- ( A = B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon3i $p |- ( C =/= D -> A =/= B ) $=
      ( wceq wi wne id necon3d ax-mp ) ABFCDFGZCDHABHGELABCDLIJK $.
      $( [9-Aug-2006] $)
  $}

  ${
    necon3ai.1 $e |- ( ph -> A = B ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3ai $p |- ( A =/= B -> -. ph ) $=
      ( wne wceq wn nne sylibr con2i ) ABCEZABCFKGDBCHIJ $.
      $( [25-May-2011] $) $( [23-May-2007] $)
  $}

  ${
    necon3bi.1 $e |- ( A = B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon3bi $p |- ( -. ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con1i ) BCEZAKFBCGABCHDIJ $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon1ai.1 $e |- ( -. ph -> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1ai $p |- ( A =/= B -> ph ) $=
      ( wne wceq wn df-ne con1i sylbi ) BCEBCFZGABCHAKDIJ $.
      $( [12-Feb-2007] $)
  $}

  ${
    necon1bi.1 $e |- ( A =/= B -> ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bi $p |- ( -. ph -> A = B ) $=
      ( wn wne wceq con3i nne sylib ) AEBCFZEBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [18-Mar-2007] $)
  $}

  ${
    necon1i.1 $e |- ( A =/= B -> C = D ) $.
    $( Contrapositive inference for inequality. $)
    necon1i $p |- ( C =/= D -> A = B ) $=
      ( wceq wn wne df-ne sylbir necon1ai ) ABFZCDLGABHCDFABIEJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ai.1 $e |- ( A = B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ai $p |- ( ph -> A =/= B ) $=
      ( wne wn wceq nne sylbi con4i ) BCEZAKFBCGAFBCHDIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon2bi.1 $e |- ( ph -> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bi $p |- ( A = B -> -. ph ) $=
      ( wceq wne wn df-ne sylib con2i ) ABCEZABCFKGDBCHIJ $.
      $( [1-Apr-2007] $)
  $}

  ${
    necon2i.1 $e |- ( A = B -> C =/= D ) $.
    $( Contrapositive inference for inequality. $)
    necon2i $p |- ( C = D -> A =/= B ) $=
      ( wceq wne wn df-ne sylib necon2ai ) CDFZABABFCDGLHECDIJK $.
      $( [18-Mar-2007] $)
  $}

  ${
    necon2ad.1 $e |- ( ph -> ( A = B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon2ad $p |- ( ph -> ( ps -> A =/= B ) ) $=
      ( wne wn wceq nne syl5bi con4d ) ACDFZBLGCDHABGCDIEJK $.
      $( [25-May-2011] $) $( [19-Apr-2007] $)
  $}

  ${
    necon2bd.1 $e |- ( ph -> ( ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2bd $p |- ( ph -> ( A = B -> -. ps ) ) $=
      ( wceq wne wn df-ne syl6ib con2d ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2d.1 $e |- ( ph -> ( A = B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality. $)
    necon2d $p |- ( ph -> ( C = D -> A =/= B ) ) $=
      ( wceq wne wn df-ne syl6ib necon2ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [28-Dec-2008] $)
  $}

  ${
    necon1abii.1 $e |- ( -. ph <-> A = B ) $.
    $( Contrapositive inference for inequality. $)
    necon1abii $p |- ( A =/= B <-> ph ) $=
      ( wne wceq wn df-ne con1bii bitri ) BCEBCFZGABCHAKDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1bbii.1 $e |- ( A =/= B <-> ph ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbii $p |- ( -. ph <-> A = B ) $=
      ( wceq wn wne df-ne bitr3i con1bii ) BCEZAKFBCGABCHDIJ $.
      $( [17-Mar-2007] $)
  $}

  ${
    necon1abid.1 $e |- ( ph -> ( -. ps <-> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1abid $p |- ( ph -> ( A =/= B <-> ps ) ) $=
      ( wne wceq wn df-ne con1bid syl5bb ) CDFCDGZHABCDIABLEJK $.
      $( [21-Aug-2007] $)
  $}

  ${
    necon1bbid.1 $e |- ( ph -> ( A =/= B <-> ps ) ) $.
    $( Contrapositive inference for inequality. $)
    necon1bbid $p |- ( ph -> ( -. ps <-> A = B ) ) $=
      ( wceq wn wne df-ne syl5bbr con1bid ) ACDFZBLGCDHABCDIEJK $.
      $( [31-Jan-2008] $)
  $}

  ${
    necon2abii.1 $e |- ( A = B <-> -. ph ) $.
    $( Contrapositive inference for inequality. $)
    necon2abii $p |- ( ph <-> A =/= B ) $=
      ( wne wceq wn bicomi necon1abii ) BCEAABCBCFAGDHIH $.
      $( [2-Mar-2007] $)
  $}

  ${
    necon2bbii.1 $e |- ( ph <-> A =/= B ) $.
    $( Contrapositive inference for inequality. $)
    necon2bbii $p |- ( A = B <-> -. ph ) $=
      ( wn wceq wne bicomi necon1bbii ) AEBCFABCABCGDHIH $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon2abid.1 $e |- ( ph -> ( A = B <-> -. ps ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2abid $p |- ( ph -> ( ps <-> A =/= B ) ) $=
      ( wceq wn wne con2bid df-ne syl6bbr ) ABCDFZGCDHALBEICDJK $.
      $( [18-Jul-2007] $)
  $}

  ${
    necon2bbid.1 $e |- ( ph -> ( ps <-> A =/= B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon2bbid $p |- ( ph -> ( A = B <-> -. ps ) ) $=
      ( wceq wne wn df-ne syl6bb con2bid ) ABCDFZABCDGLHECDIJK $.
      $( [13-Apr-2007] $)
  $}

  ${
    necon4ai.1 $e |- ( A =/= B -> -. ph ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ai $p |- ( ph -> A = B ) $=
      ( wne wn wceq con2i nne sylib ) ABCEZFBCGKADHBCIJ $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    necon4i.1 $e |- ( A =/= B -> C =/= D ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4i $p |- ( C = D -> A = B ) $=
      ( wceq wne wn necon2bi nne sylib ) CDFABGZHABFLCDEIABJK $.
      $( [25-May-2011] $) $( [17-Mar-2007] $)
  $}

  ${
    necon4ad.1 $e |- ( ph -> ( A =/= B -> -. ps ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4ad $p |- ( ph -> ( ps -> A = B ) ) $=
      ( wne wn wceq con2d nne syl6ib ) ABCDFZGCDHALBEICDJK $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4bd.1 $e |- ( ph -> ( -. ps -> A =/= B ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4bd $p |- ( ph -> ( A = B -> ps ) ) $=
      ( wceq wne wn nne con1d syl5bir ) CDFCDGZHABCDIABLEJK $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    necon4d.1 $e |- ( ph -> ( A =/= B -> C =/= D ) ) $.
    $( Contrapositive inference for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon4d $p |- ( ph -> ( C = D -> A = B ) ) $=
      ( wceq wne wn necon2bd nne syl6ib ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [25-May-2011] $) $( [2-Apr-2007] $)
  $}

  ${
    necon4abid.1 $e |- ( ph -> ( A =/= B <-> -. ps ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4abid $p |- ( ph -> ( A = B <-> ps ) ) $=
      ( wceq wn wne df-ne syl5bbr con4bid ) ACDFZBLGCDHABGCDIEJK $.
      $( [11-Jan-2008] $)
  $}

  ${
    necon4bbid.1 $e |- ( ph -> ( -. ps <-> A =/= B ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bbid $p |- ( ph -> ( ps <-> A = B ) ) $=
      ( wceq wn wne bicomd necon4abid ) ACDFBABCDABGCDHEIJI $.
      $( [9-May-2012] $)
  $}

  ${
    necon4bid.1 $e |- ( ph -> ( A =/= B <-> C =/= D ) ) $.
    $( Contrapositive law deduction for inequality. $)
    necon4bid $p |- ( ph -> ( A = B <-> C = D ) ) $=
      ( wceq wne wn necon2bbid nne syl6rbb ) ADEGBCHZIBCGAMDEFJBCKL $.
      $( [29-Jun-2007] $)
  $}

  ${
    necon1ad.1 $e |- ( ph -> ( -. ps -> A = B ) ) $.
    $( Contrapositive deduction for inequality. $)
    necon1ad $p |- ( ph -> ( A =/= B -> ps ) ) $=
      ( wne wceq wn df-ne con1d syl5bi ) CDFCDGZHABCDIABLEJK $.
      $( [2-Apr-2007] $)
  $}

  ${
    necon1bd.1 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Contrapositive deduction for inequality.  (The proof was shortened by
       Andrew Salmon, 25-May-2011.) $)
    necon1bd $p |- ( ph -> ( -. ps -> A = B ) ) $=
      ( wn wne wceq con3d nne syl6ib ) ABFCDGZFCDHALBEICDJK $.
      $( [25-May-2011] $) $( [21-Mar-2007] $)
  $}

  ${
    necon1d.1 $e |- ( ph -> ( A =/= B -> C = D ) ) $.
    $( Contrapositive law deduction for inequality.  (The proof was shortened
       by Andrew Salmon, 25-May-2011.) $)
    necon1d $p |- ( ph -> ( C =/= D -> A = B ) ) $=
      ( wne wceq wn nne syl6ibr necon4ad ) ADEGZBCABCGDEHMIFDEJKL $.
      $( [25-May-2011] $) $( [28-Dec-2008] $)
  $}

  $( Contraposition law for inequality. $)
  nebi $p |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) $=
    ( wceq wb wne id necon3bid necon4bid impbii ) ABECDEFZABGCDGFZLABCDLHIMABCD
    MHJK $.
    $( [28-Dec-2008] $)

  $( Theorem *13.18 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.18 $p |- ( ( A = B /\ A =/= C ) -> B =/= C ) $=
    ( wceq wne eqeq1 biimprd necon3d imp ) ABDZACEBCEJBCACJACDBCDABCFGHI $.
    $( [3-Jun-2011] $)

  $( Theorem *13.181 in [WhiteheadRussell] p. 178.  (Contributed by Andrew
     Salmon, 3-Jun-2011.) $)
  pm13.181 $p |- ( ( A = B /\ B =/= C ) -> A =/= C ) $=
    ( wceq wne eqcom pm13.18 sylanb ) ABDBADBCEACEABFBACGH $.
    $( [3-Jun-2011] $)

  ${
    pm2.61ne.1 $e |- ( A = B -> ( ps <-> ch ) ) $.
    pm2.61ne.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    pm2.61ne.3 $e |- ( ph -> ch ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ne $p |- ( ph -> ps ) $=
      ( wne wi expcom wn wceq nne syl5ibr sylbi pm2.61i ) DEIZABJZARBGKRLDEMZSD
      ENABTCHFOPQ $.
      $( [25-May-2011] $) $( [24-May-2006] $)
  $}

  ${
    pm2.61ine.1 $e |- ( A = B -> ph ) $.
    pm2.61ine.2 $e |- ( A =/= B -> ph ) $.
    $( Inference eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61ine $p |- ph $=
      ( wne wn wceq nne sylbi pm2.61i ) BCFZAELGBCHABCIDJK $.
      $( [25-May-2011] $) $( [16-Jan-2007] $)
  $}

  ${
    pm2.61dne.1 $e |- ( ph -> ( A = B -> ps ) ) $.
    pm2.61dne.2 $e |- ( ph -> ( A =/= B -> ps ) ) $.
    $( Deduction eliminating an inequality in an antecedent.  (The proof was
       shortened by Andrew Salmon, 25-May-2011.) $)
    pm2.61dne $p |- ( ph -> ps ) $=
      ( wne wn wceq nne syl5bi pm2.61d ) ACDGZBFMHCDIABCDJEKL $.
      $( [25-May-2011] $) $( [1-Jun-2007] $)
  $}

  ${
    pm2.61dane.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61dane.2 $e |- ( ( ph /\ A =/= B ) -> ps ) $.
    $( Deduction eliminating an inequality in an antecedent. $)
    pm2.61dane $p |- ( ph -> ps ) $=
      ( wceq ex wne pm2.61dne ) ABCDACDGBEHACDIBFHJ $.
      $( [30-Nov-2011] $)
  $}

  ${
    pm2.61da2ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da2ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da2ne.3 $e |- ( ( ph /\ ( A =/= B /\ C =/= D ) ) -> ps ) $.
    $( Deduction eliminating two inequalities in an antecedent. $)
    pm2.61da2ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr anassrs pm2.61dane ) ABCDGACDJZKBEFAEFLBPHMAPEFJBIN
      OO $.
      $( [29-May-2013] $)
  $}

  ${
    pm2.61da3ne.1 $e |- ( ( ph /\ A = B ) -> ps ) $.
    pm2.61da3ne.2 $e |- ( ( ph /\ C = D ) -> ps ) $.
    pm2.61da3ne.3 $e |- ( ( ph /\ E = F ) -> ps ) $.
    pm2.61da3ne.4 $e |- ( ( ph /\ ( A =/= B /\ C =/= D /\ E =/= F ) )
          -> ps ) $.
    $( Deduction eliminating three inequalities in an antecedent. $)
    pm2.61da3ne $p |- ( ph -> ps ) $=
      ( wne wa wceq adantlr simpll simplrl simplrr simpr pm2.61dane pm2.61da2ne
      syl13anc ) ABCDEFIJACDMZEFMZNZNZBGHAGHOBUFKPUGGHMZNAUDUEUHBAUFUHQAUDUEUHR
      AUDUEUHSUGUHTLUCUAUB $.
      $( [15-Jun-2013] $)
  $}

  $( Commutation of inequality. $)
  necom $p |- ( A =/= B <-> B =/= A ) $=
    ( eqcom necon3bii ) ABBAABCD $.
    $( [14-May-1999] $)

  ${
    necomi.1 $e |- A =/= B $.
    $( Inference from commutative law for inequality. $)
    necomi $p |- B =/= A $=
      ( wne necom mpbi ) ABDBADCABEF $.
      $( [17-Oct-2012] $)
  $}

  ${
    necomd.1 $e |- ( ph -> A =/= B ) $.
    $( Deduction from commutative law for inequality. $)
    necomd $p |- ( ph -> B =/= A ) $=
      ( wne necom sylib ) ABCECBEDBCFG $.
      $( [12-Feb-2008] $)
  $}

  $( Logical OR with an equality. $)
  neor $p |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) $=
    ( wceq wo wn wi wne df-or df-ne imbi1i bitr4i ) BCDZAEMFZAGBCHZAGMAIONABCJK
    L $.
    $( [29-Apr-2007] $)

  $( A DeMorgan's law for inequality. $)
  neanior $p |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) $=
    ( wne wa wceq wn wo df-ne anbi12i pm4.56 bitri ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  $( A DeMorgan's law for inequality. $)
  ne3anior $p |- ( ( A =/= B /\ C =/= D /\ E =/= F )
        <-> -. ( A = B \/ C = D \/ E = F ) ) $=
    ( wne w3a wn w3o wceq 3anor nne 3orbi123i xchbinx ) ABGZCDGZEFGZHPIZQIZRIZJ
    ABKZCDKZEFKZJPQRLSUBTUCUAUDABMCDMEFMNO $.
    $( [30-Sep-2013] $)

  $( A DeMorgan's law for inequality. $)
  neorian $p |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) $=
    ( wne wo wceq wn wa df-ne orbi12i ianor bitr4i ) ABEZCDEZFABGZHZCDGZHZFPRIH
    NQOSABJCDJKPRLM $.
    $( [18-May-2007] $)

  ${
    nemtbir.1 $e |- A =/= B $.
    nemtbir.2 $e |- ( ph <-> A = B ) $.
    $( An inference from an inequality, related to modus tollens. $)
    nemtbir $p |- -. ph $=
      ( wceq wne wn df-ne mpbi mtbir ) ABCFZBCGLHDBCIJEK $.
      $( [13-Apr-2007] $)
  $}

  $( Two classes are different if they don't contain the same element. $)
  nelne1 $p |- ( ( A e. B /\ -. A e. C ) -> B =/= C ) $=
    ( wcel wn wne wceq eleq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJ
    K $.
    $( [3-Feb-2012] $)

  $( Two classes are different if they don't belong to the same class. $)
  nelne2 $p |- ( ( A e. C /\ -. B e. C ) -> A =/= B ) $=
    ( wcel wn wne wceq eleq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJ
    K $.
    $( [25-Jun-2012] $)

  $( Equality theorem for negated membership. $)
  neleq1 $p |- ( A = B -> ( A e/ C <-> B e/ C ) ) $=
    ( wceq wcel wn wnel eleq1 notbid df-nel 3bitr4g ) ABDZACEZFBCEZFACGBCGLMNAB
    CHIACJBCJK $.
    $( [20-Nov-1994] $)

  $( Equality theorem for negated membership. $)
  neleq2 $p |- ( A = B -> ( C e/ A <-> C e/ B ) ) $=
    ( wceq wcel wn wnel eleq2 notbid df-nel 3bitr4g ) ABDZCAEZFCBEZFCAGCBGLMNAB
    CHICAJCBJK $.
    $( [20-Nov-1994] $)

  ${
    $d y A $.  $d y B $.
    hbne.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbne.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbne $p |- ( A =/= B -> A. x A =/= B ) $=
      ( wne wceq wn df-ne hbeq hbn hbxfrbi ) CDGCDHZIACDJNAABBCDEFKLM $.
      $( [11-Jul-2011] $) $( [10-Nov-2007] $)
  $}

  ${
    $d y A $.  $d z B $.
    hbnel.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbnel.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for inequality.  (Contributed by by
       David Abernethy, 26-Jun-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbnel $p |- ( A e/ B -> A. x A e/ B ) $=
      ( wnel wcel wn df-nel hbel hbn hbxfrbi ) DEHDEIZJADEKOAABCDEFGLMN $.
      $( [11-Jul-2011] $) $( [26-Jun-2011] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Restricted quantification
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include restricted universal quantification. $)
  wral $a wff A. x e. A ph $.

  $( Extend wff notation to include restricted existential quantification. $)
  wrex $a wff E. x e. A ph $.

  $( Extend wff notation to include restricted existential uniqueness. $)
  wreu $a wff E! x e. A ph $.

  $( Extend class notation to include the restricted class abstraction (class
     builder). $)
  crab $a class { x e. A | ph } $.

  $( Define restricted universal quantification.  Special case of Definition
     4.15(3) of [TakeutiZaring] p. 22. $)
  df-ral $a |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) $.

  $( Define restricted existential quantification.  Special case of Definition
     4.15(4) of [TakeutiZaring] p. 22. $)
  df-rex $a |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) $.

  $( Define restricted existential uniqueness. $)
  df-reu $a |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) $.

  $( Define a restricted class abstraction (class builder), which is the class
     of all ` x ` in ` A ` such that ` ph ` is true.  Definition of
     [TakeutiZaring] p. 20. $)
  df-rab $a |- { x e. A | ph } = { x | ( x e. A /\ ph ) } $.

  $( Relationship between restricted universal and existential quantifiers. $)
  ralnex $p |- ( A. x e. A -. ph <-> -. E. x e. A ph ) $=
    ( wn wral cv wcel wi wal wrex df-ral wa wex alinexa df-rex xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  rexnal $p |- ( E. x e. A -. ph <-> -. A. x e. A ph ) $=
    ( wn wrex cv wcel wa wex wral df-rex wi wal exanali df-ral xchbinxr bitri )
    ADZBCEBFCGZRHBIZABCJZDRBCKTSALBMUASABNABCOPQ $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfral2 $p |- ( A. x e. A ph <-> -. E. x e. A -. ph ) $=
    ( wn wrex wral rexnal con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  $( Relationship between restricted universal and existential quantifiers. $)
  dfrex2 $p |- ( E. x e. A ph <-> -. A. x e. A -. ph ) $=
    ( wn wral wrex ralnex con2bii ) ADBCEABCFABCGH $.
    $( [21-Jan-1997] $)

  ${
    ralbida.1 $e |- ( ph -> A. x ph ) $.
    ralbida.2 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbida $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral pm5.74da albid df-ral 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbida $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( cv wcel wa wex wrex pm5.32da exbid df-rex 3bitr4g ) ADHEIZBJZDKQCJZDKBD
      ELCDELARSDFAQBCGMNBDEOCDEOP $.
      $( [6-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidva $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbida ) ABCDEADGFH $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidva $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbida ) ABCDEADGFH $.
      $( [9-Mar-1997] $)
  $}

  ${
    ralbid.1 $e |- ( ph -> A. x ph ) $.
    ralbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbid $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( wb cv wcel adantr ralbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbid $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( wb cv wcel adantr rexbida ) ABCDEFABCHDIEJGKL $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x ph $.
    ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) $=
      ( ax-17 ralbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)

    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) $=
      ( ax-17 rexbid ) ABCDEADGFH $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ph $.
    ralbidv2.1 $e |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. B -> ch ) ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    ralbidv2 $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral albidv df-ral 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [6-Apr-1997] $)
  $}

  ${
    $d x ph $.
    rexbidv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. B /\ ch ) ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    rexbidv2 $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex exbidv df-rex 3bitr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [22-May-1999] $)
  $}

  ${
    ralbii.1 $e |- ( ph <-> ps ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbii $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( wb wral biid hbth a1i ralbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL
      $.
      $( [23-Nov-1994] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbii $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( wb wrex biid hbth a1i rexbid ax-mp ) AAFZACDGBCDGFAHZMABCDMCNIABFMEJKL
      $.
      $( [23-Nov-1994] $)

    $( Inference adding 2 restricted universal quantifiers to both sides of an
       equivalence. $)
    2ralbii $p |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) $=
      ( wral ralbii ) ADFHBDFHCEABDFGII $.
      $( [1-Aug-2004] $)

    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbii $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex rexbii ) ADFHBDFHCEABDFGII $.
      $( [11-Nov-1995] $)
  $}

  ${
    ralbii2.1 $e |- ( ( x e. A -> ph ) <-> ( x e. B -> ps ) ) $.
    $( Inference adding different restricted universal quantifiers to each side
       of an equivalence. $)
    ralbii2 $p |- ( A. x e. A ph <-> A. x e. B ps ) $=
      ( cv wcel wi wal wral albii df-ral 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [15-Aug-2005] $)
  $}

  ${
    rexbii2.1 $e |- ( ( x e. A /\ ph ) <-> ( x e. B /\ ps ) ) $.
    $( Inference adding different restricted existential quantifiers to each
       side of an equivalence. $)
    rexbii2 $p |- ( E. x e. A ph <-> E. x e. B ps ) $=
      ( cv wcel wa wex wrex exbii df-rex 3bitr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [4-Feb-2004] $)
  $}

  ${
    ralbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Inference adding restricted universal quantifier to both sides of an
       equivalence. $)
    ralbiia $p |- ( A. x e. A ph <-> A. x e. A ps ) $=
      ( cv wcel pm5.74i ralbii2 ) ABCDDCFDGABEHI $.
      $( [26-Nov-2000] $)

    $( Inference adding restricted existential quantifier to both sides of an
       equivalence. $)
    rexbiia $p |- ( E. x e. A ph <-> E. x e. A ps ) $=
      ( cv wcel pm5.32i rexbii2 ) ABCDDCFDGABEHI $.
      $( [26-Oct-1999] $)
  $}

  ${
    $d x y $.  $d y A $.
    2rexbiia.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph <-> ps ) ) $.
    $( Inference adding 2 restricted existential quantifiers to both sides of
       an equivalence. $)
    2rexbiia $p |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) $=
      ( wrex cv wcel rexbidva rexbiia ) ADFHBDFHCECIEJABDFGKL $.
      $( [1-Aug-2004] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted universal quantification. $)
    r2al $p |- ( A. x e. A A. y e. B ph <->
               A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) $=
      ( wral cv wcel wi wal wa df-ral 19.21v impexp albii imbi2i 3bitr4i bitr4i
      ) ACEFZBDFBGDHZSIZBJTCGEHZKAIZCJZBJSBDLUDUABTUBAIZIZCJTUECJZIUDUATUECMUCU
      FCTUBANOSUGTACELPQOR $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    2ralbida.1 $e |- ( ph -> A. x ph ) $.
    2ralbida.2 $e |- ( ph -> A. y ph ) $.
    2ralbida.3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifier (deduction
       rule). $)
    2ralbida $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral cv wcel wa ax-17 hban wb anassrs ralbida ) ABEGKCEGKDFHADLFMZNBCEG
      ATEITEOPATELGMBCQJRSS $.
      $( [24-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    2ralbidva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule). $)
    2ralbidva $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( ax-17 2ralbida ) ABCDEFGADIAEIHJ $.
      $( [4-Mar-1997] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidva $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex cv wcel wa wb anassrs rexbidva ) ABEGICEGIDFADJFKZLBCEGAPEJGKBCMHN
      OO $.
      $( [15-Dec-2004] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    2ralbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted universal quantifiers (deduction
       rule).  (Unnecessary distinct variable restrictions were removed by
       Szymon Jaroszewicz, 16-Mar-2006.) $)
    2ralbidv $p |- ( ph ->
                     ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [16-Mar-2007] $) $( [28-Jan-2006] $)

    $( Formula-building rule for restricted existential quantifiers (deduction
       rule). $)
    2rexbidv $p |- ( ph ->
                    ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) $=
      ( wrex rexbidv ) ABEGICEGIDFABCEGHJJ $.
      $( [28-Jan-2006] $)

    $( Formula-building rule for restricted quantifiers (deduction rule). $)
    rexralbidv $p |- ( ph ->
                    ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) $=
      ( wral ralbidv rexbidv ) ABEGICEGIDFABCEGHJK $.
      $( [28-Jan-2006] $)
  $}

  $( A transformation of restricted quantifiers and logical connectives. $)
  ralinexa $p |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) $=
    ( wn wi wral wa wrex imnan ralbii ralnex bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  $( A transformation of restricted quantifiers and logical connectives. $)
  rexanali $p |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) $=
    ( wn wa wrex wi wral annim rexbii rexnal bitri ) ABEFZCDGABHZEZCDGOCDIENPCD
    ABJKOCDLM $.
    $( [4-Sep-2005] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to say " ` A ` belongs to ` B ` ." $)
    risset $p |- ( A e. B <-> E. x e. B x = A ) $=
      ( cv wcel wceq wa wex wrex exancom df-rex df-clel 3bitr4ri ) ADZCEZNBFZGA
      HPOGAHPACIBCEOPAJPACKABCLM $.
      $( [22-Nov-1994] $)
  $}

  ${
    hbral.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbral.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbral $p |- ( A. y e. A ph -> A. x A. y e. A ph ) $=
      ( wral cv wcel wi wal df-ral hbim hbal hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  ${
    hbrald.1 $e |- ( ph -> A. x ph ) $.
    hbrald.2 $e |- ( ph -> A. y ph ) $.
    hbrald.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbrald.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbral . $)
    hbrald $p |- ( ph -> ( A. y e. A ps -> A. x A. y e. A ps ) ) $=
      ( cv wcel wi wal wral hbimd hbald df-ral albii 3imtr4g ) ADJEKZBLZDMZUBCM
      BDENZUCCMAUACDGATBCFHIOPBDEQZUCUBCUDRS $.
      $( [15-Feb-2013] $)
  $}

  $( ` x ` is not free in ` A. x e. A ph ` . $)
  hbra1 $p |- ( A. x e. A ph -> A. x A. x e. A ph ) $=
    ( wral cv wcel wi wal df-ral hba1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [18-Oct-1996] $)

  ${
    $d A y $.  $d x y $.
    $( Similar to Lemma 24 of [Monk2] p. 114, except the quantification of the
       antecedent is restricted.  Derived automatically from ~ hbra2VD .
       Contributed by Alan Sare 31-Dec-2011. $)
    hbra2 $p |- ( A. x e. A A. y e. B ph -> A. y A. x e. A A. y e. B ph ) $=
      ( wral cv wcel wi wal df-ral ralbii ax-17 hba1 hbral hbxfrbi ) ACEFZBDFCG
      EHAIZCJZBDFCQSBDACEKLSCBDBGDHCMRCNOP $.
      $( [31-Dec-2011] $)
  $}

  ${
    hbrex.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbrex.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted quantification.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 13-Dec-2009.) $)
    hbrex $p |- ( E. y e. A ph -> A. x E. y e. A ph ) $=
      ( wrex cv wcel wa wex df-rex hban hbex hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [13-Dec-2009] $) $( [1-Sep-1999] $)
  $}

  $( ` x ` is not free in ` E. x e. A ph ` . $)
  hbre1 $p |- ( E. x e. A ph -> A. x E. x e. A ph ) $=
    ( wrex cv wcel wa wex df-rex hbe1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [19-Mar-1997] $)

  ${
    $d x y z $.  $d y z A $.  $d z B $.
    $( Triple restricted universal quantification. $)
    r3al $p |- ( A. x e. A A. y e. B A. z e. C ph <->
               A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) $=
      ( cv wcel wa wi wal wral w3a df-ral r2al ralbii bitri albii 19.21v 3anass
      imbi1i impexp 3bitr4i ) CHFIZDHGIZJZAKZDLZCLZBEMBHEIZUJKZBLADGMCFMZBEMUKU
      EUFNZAKZDLZCLZBLUJBEOUMUJBEACDFGPQUQULBUQUKUIKZCLULUPURCUPUKUHKZDLURUOUSD
      UOUKUGJZAKUSUNUTAUKUEUFUAUBUKUGAUCRSUKUHDTRSUKUICTRSUD $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Double restricted existential quantification. $)
    r2ex $p |- ( E. x e. A E. y e. B ph <->
               E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) $=
      ( wrex cv wcel wa wex df-rex 19.42v anass exbii anbi2i 3bitr4i bitr4i ) A
      CEFZBDFBGDHZRIZBJSCGEHZIAIZCJZBJRBDKUCTBSUAAIZIZCJSUDCJZIUCTSUDCLUBUECSUA
      AMNRUFSACEKOPNQ $.
      $( [11-Nov-1995] $)
  $}

  $( Universal quantification implies restricted quantification. $)
  alral $p |- ( A. x ph -> A. x e. A ph ) $=
    ( wal cv wcel wi wral ax-1 alimi df-ral sylibr ) ABDBECFZAGZBDABCHANBAMIJAB
    CKL $.
    $( [20-Oct-2006] $)

  $( Restricted existence implies existence. $)
  rexex $p |- ( E. x e. A ph -> E. x ph ) $=
    ( wrex cv wcel wa wex df-rex simpr eximi sylbi ) ABCDBECFZAGZBHABHABCINABMA
    JKL $.
    $( [11-Nov-1995] $)

  $( Restricted specialization. $)
  ra4 $p |- ( A. x e. A ph -> ( x e. A -> ph ) ) $=
    ( wral cv wcel wi wal df-ral ax-4 sylbi ) ABCDBECFAGZBHLABCILBJK $.
    $( [17-Oct-1996] $)

  $( Restricted specialization. $)
  ra4e $p |- ( ( x e. A /\ ph ) -> E. x e. A ph ) $=
    ( cv wcel wa wex wrex 19.8a df-rex sylibr ) BDCEAFZLBGABCHLBIABCJK $.
    $( [12-Oct-1999] $)

  $( Restricted specialization. $)
  ra42 $p |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) $=
    ( wral cv wcel wi ra4 syl6 imp3a ) ACEFZBDFZBGDHZCGEHZANOMPAIMBDJACEJKL $.
    $( [11-Feb-1997] $)

  $( Restricted specialization.  (Contributed by FL, 4-Jun-2012.) $)
  ra42e $p |- ( ( x e. A /\ y e. B /\ ph ) -> E. x e. A E. y e. B ph ) $=
    ( cv wcel w3a wrex wa wex simp1 ra4e 3adant1 19.8a syl2anc df-rex sylibr )
    BFDGZCFEGZAHZSACEIZJZBKZUBBDIUASUBUDSTALTAUBSACEMNUCBOPUBBDQR $.
    $( [4-Jun-2012] $)

  ${
    rspec.1 $e |- A. x e. A ph $.
    $( Specialization rule for restricted quantification. $)
    rspec $p |- ( x e. A -> ph ) $=
      ( wral cv wcel wi ra4 ax-mp ) ABCEBFCGAHDABCIJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    rgen.1 $e |- ( x e. A -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen $p |- A. x e. A ph $=
      ( wral cv wcel wi df-ral mpgbir ) ABCEBFCGAHBABCIDJ $.
      $( [19-Nov-1994] $)
  $}

  ${
    $d y z A $.  $d x z $.
    rgen2a.1 $e |- ( ( x e. A /\ y e. A ) -> ph ) $.
    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct.  (The proof was shortened by Andrew Salmon,
       25-May-2011.) $)
    rgen2a $p |- A. x e. A A. y e. A ph $=
      ( vz wral cv wcel wi wal wceq eleq1 ex syl6bi pm2.43d alimi a1d wn ax-17
      dvelim syl6 pm2.61i df-ral sylibr rgen ) ACDGZBDBHZDIZCHZDIZAJZCKZUGUJUHL
      ZCKZUIUMJUOUMUIUNULCUNUKAUNUKUIULUJUHDMUIUKAENZOPQRUOSUIUICKUMFHZDIZUICBF
      URCTUQUHDMUAUIULCUPQUBUCACDUDUEUF $.
      $( [25-May-2011] $) $( [23-Nov-1994] $)
  $}

  ${
    rgenw.1 $e |- ph $.
    $( Generalization rule for restricted quantification. $)
    rgenw $p |- A. x e. A ph $=
      ( cv wcel a1i rgen ) ABCABECFDGH $.
      $( [18-Jun-2014] $)

    $( Generalization rule for restricted quantification.  Note that ` x ` and
       ` y ` needn't be distinct. $)
    rgen2w $p |- A. x e. A A. y e. B ph $=
      ( wral rgenw ) ACEGBDACEFHH $.
      $( [18-Jun-2014] $)
  $}

  ${
    mprg.1 $e |- ( A. x e. A ph -> ps ) $.
    mprg.2 $e |- ( x e. A -> ph ) $.
    $( Modus ponens combined with restricted generalization. $)
    mprg $p |- ps $=
      ( wral rgen ax-mp ) ACDGBACDFHEI $.
      $( [10-Aug-2004] $)
  $}

  ${
    mprgbir.1 $e |- ( ph <-> A. x e. A ps ) $.
    mprgbir.2 $e |- ( x e. A -> ps ) $.
    $( Modus ponens on biconditional combined with restricted
       generalization. $)
    mprgbir $p |- ph $=
      ( wral rgen mpbir ) ABCDGBCDFHEI $.
      $( [21-Mar-2004] $)
  $}

  $( Distribution of restricted quantification over implication. $)
  ralim $p |- ( A. x e. A ( ph -> ps ) ->
               ( A. x e. A ph -> A. x e. A ps ) ) $=
    ( wi wral cv wcel wal df-ral ax-2 al2imi sylbi 3imtr4g ) ABEZCDFZCGDHZAEZCI
    ZQBEZCIZACDFBCDFPQOEZCISUAEOCDJUBRTCQABKLMACDJBCDJN $.
    $( [9-Feb-1997] $)

  ${
    ralimi2.1 $e |- ( ( x e. A -> ph ) -> ( x e. B -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimi2 $p |- ( A. x e. A ph -> A. x e. B ps ) $=
      ( cv wcel wi wal wral alimi df-ral 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [22-Feb-2004] $)
  $}

  ${
    ralimia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimia $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel a2i ralimi2 ) ABCDDCFDGABEHI $.
      $( [19-Jul-1996] $)
  $}

  ${
    ralimiaa.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimiaa $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( cv wcel ex ralimia ) ABCDCFDGABEHI $.
      $( [4-Aug-2007] $)
  $}

  ${
    ralimi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent, with strong
       hypothesis. $)
    ralimi $p |- ( A. x e. A ph -> A. x e. A ps ) $=
      ( wi cv wcel a1i ralimia ) ABCDABFCGDHEIJ $.
      $( [4-Mar-1997] $)
  $}

  ${
    ral2imi.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference quantifying antecedent, nested antecedent, and consequent,
       with a strong hypothesis. $)
    ral2imi $p |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wral wi ralimi ralim syl ) ADEGBCHZDEGBDEGCDEGHALDEFIBCDEJK $.
      $( [19-Dec-2006] $)
  $}

  ${
    ralimdaa.1 $e |- ( ph -> A. x ph ) $.
    ralimdaa.2 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdaa $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral ex a2d alimd df-ral 3imtr4g ) ADHEIZBJZDKRCJZDKBDEL
      CDELASTDFARBCARBCJGMNOBDEPCDEPQ $.
      $( [22-Sep-2003] $)
  $}

  ${
    $d x ph $.
    ralimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdva $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( ax-17 ralimdaa ) ABCDEADGFH $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    ralimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.20 of [Margaris] p. 90. $)
    ralimdv $p |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) $=
      ( wi cv wcel adantr ralimdva ) ABCDEABCGDHEIFJK $.
      $( [8-Oct-2003] $)
  $}

  ${
    $d x ph $.
    ralimdv2.1 $e |- ( ph -> ( ( x e. A -> ps ) -> ( x e. B -> ch ) ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    ralimdv2 $p |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) $=
      ( cv wcel wi wal wral alimdv df-ral 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [1-Feb-2005] $)
  $}

  ${
    ralrimi.1 $e |- ( ph -> A. x ph ) $.
    ralrimi.2 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90 (restricted quantifier
       version). $)
    ralrimi $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel wi wal wral alrimi df-ral sylibr ) ACGDHBIZCJBCDKAOCEFLBCDMN $.
      $( [10-Oct-1999] $)
  $}

  ${
    $d x ph $.
    ralrimiv.1 $e |- ( ph -> ( x e. A -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimiv $p |- ( ph -> A. x e. A ps ) $=
      ( ax-17 ralrimi ) ABCDACFEG $.
      $( [22-Nov-1994] $)
  $}

  ${
    $d x ph $.
    ralrimiva.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimiva $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel ex ralrimiv ) ABCDACFDGBEHI $.
      $( [2-Jan-2006] $)
  $}

  ${
    $d x ph $.
    ralrimivw.1 $e |- ( ph -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimivw $p |- ( ph -> A. x e. A ps ) $=
      ( cv wcel a1d ralrimiv ) ABCDABCFDGEHI $.
      $( [18-Jun-2014] $)
  $}

  ${
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers (closed
       theorem version). $)
    r19.21t $p |- ( A. x ( ph -> A. x ph ) ->
             ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) $=
      ( wal wi cv wcel wral bi2.04 albii 19.21t syl5bb df-ral imbi2i 3bitr4g )
      AACEFCEZCGDHZABFZFZCEZARBFZCEZFZSCDIABCDIZFUAAUBFZCEQUDTUFCRABJKAUBCLMSCD
      NUEUCABCDNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    r19.21.1 $e |- ( ph -> A. x ph ) $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.
       (Contributed by Scott Fenton, 30-Mar-2011.) $)
    r19.21 $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( wal wi wral wb r19.21t mpg ) AACFGABGCDHABCDHGICABCDJEK $.
      $( [30-Mar-2011] $)
  $}

  ${
    $d x ph $.
    $( Theorem 19.21 of [Margaris] p. 90 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.21v $p |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) $=
      ( ax-17 r19.21 ) ABCDACEF $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    ralrimd.1 $e |- ( ph -> A. x ph ) $.
    ralrimd.2 $e |- ( ps -> A. x ps ) $.
    ralrimd.3 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimd $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi wal wral alrimd df-ral syl6ibr ) ABDIEJCKZDLCDEMABQDFGHNCDEO
      P $.
      $( [16-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdv.1 $e |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimdv $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( ax-17 ralrimd ) ABCDEADGBDGFH $.
      $( [27-May-1998] $)
  $}

  ${
    $d x ph $.  $d x ps $.
    ralrimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    ralrimdva $p |- ( ph -> ( ps -> A. x e. A ch ) ) $=
      ( cv wcel wi ex com23 ralrimdv ) ABCDEADGEHZBCAMBCIFJKL $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y ph $.  $d y A $.
    ralrimivv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimivv $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( wral cv wcel exp3a ralrimdv ralrimiv ) ABDFHCEACIEJZBDFANDIFJBGKLM $.
      $( [24-Jul-2004] $)
  $}

  ${
    $d ph x y $.  $d A y $.
    ralrimivva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.)  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    ralrimivva $p |- ( ph -> A. x e. A A. y e. B ps ) $=
      ( cv wcel wa ex ralrimivv ) ABCDEFACHEIDHFIJBGKL $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d ph x y z $.  $d A y z $.  $d B z $.
    ralrimivvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B /\ z e. C ) ) -> ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with triple quantification.)  (Contributed by Mario
       Carneiro, 9-Jul-2014.) $)
    ralrimivvva $p |- ( ph -> A. x e. A A. y e. B A. z e. C ps ) $=
      ( wral cv wcel wa 3exp2 imp41 ralrimiva ) ABEHJZDGJCFACKFLZMZQDGSDKGLZMBE
      HARTEKHLZBARTUABINOPPP $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvv.1 $e |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimdvv $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( wral wa cv wcel wi imp ralrimivv ex ) ABCEGIDFIABJCDEFGABDKFLEKGLJCMHNO
      P $.
      $( [1-Jun-2005] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d y A $.
    ralrimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version with double quantification.) $)
    ralrimdvva $p |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) $=
      ( cv wcel wa wi ex com23 ralrimdvv ) ABCDEFGADIFJEIGJKZBCAPBCLHMNO $.
      $( [2-Feb-2008] $)
  $}

  ${
    $d x y $.  $d y A $.
    rgen2.1 $e |- ( ( x e. A /\ y e. B ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen2 $p |- A. x e. A A. y e. B ph $=
      ( wral cv wcel ralrimiva rgen ) ACEGBDBHDIACEFJK $.
      $( [30-May-1999] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    rgen3.1 $e |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $.
    $( Generalization rule for restricted quantification. $)
    rgen3 $p |- A. x e. A A. y e. B A. z e. C ph $=
      ( wral cv wcel wa 3expa ralrimiva rgen2 ) ADGIBCEFBJEKZCJFKZLADGPQDJGKAHM
      NO $.
      $( [12-Jan-2008] $)
  $}

  ${
    r19.21bi.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21bi $p |- ( ( ph /\ x e. A ) -> ps ) $=
      ( cv wcel wi wral wal df-ral sylib 19.21bi imp ) ACFDGZBAOBHZCABCDIPCJEBC
      DKLMN $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec2.1 $e |- A. x e. A A. y e. B ph $.
    $( Specialization rule for restricted quantification. $)
    rspec2 $p |- ( ( x e. A /\ y e. B ) -> ph ) $=
      ( cv wcel wral rspec r19.21bi ) BGDHACEACEIBDFJK $.
      $( [20-Nov-1994] $)
  $}

  ${
    rspec3.1 $e |- A. x e. A A. y e. B A. z e. C ph $.
    $( Specialization rule for restricted quantification. $)
    rspec3 $p |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) $=
      ( cv wcel wa wral rspec2 r19.21bi 3impa ) BIEJZCIFJZDIGJAPQKADGADGLBCEFHM
      NO $.
      $( [20-Nov-1994] $)
  $}

  ${
    r19.21be.1 $e |- ( ph -> A. x e. A ps ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    r19.21be $p |- A. x e. A ( ph -> ps ) $=
      ( wi cv wcel r19.21bi expcom rgen ) ABFCDACGDHBABCDEIJK $.
      $( [21-Nov-1994] $)
  $}

  ${
    nrex.1 $e |- ( x e. A -> -. ps ) $.
    $( Inference adding restricted existential quantifier to negated wff. $)
    nrex $p |- -. E. x e. A ps $=
      ( wn wral wrex rgen ralnex mpbi ) AEZBCFABCGEKBCDHABCIJ $.
      $( [16-Oct-2003] $)
  $}

  ${
    $d x ph $.
    nrexdv.1 $e |- ( ( ph /\ x e. A ) -> -. ps ) $.
    $( Deduction adding restricted existential quantifier to negated wff. $)
    nrexdv $p |- ( ph -> -. E. x e. A ps ) $=
      ( wn wral wrex ralrimiva ralnex sylib ) ABFZCDGBCDHFALCDEIBCDJK $.
      $( [16-Oct-2003] $)
  $}

  $( Theorem 19.22 of [Margaris] p. 90.  (Restricted quantifier version.)  (The
     proof was shortened by Andrew Salmon, 30-May-2011.) $)
  rexim $p |- ( A. x e. A ( ph -> ps ) ->
               ( E. x e. A ph -> E. x e. A ps ) ) $=
    ( wi wral wn wrex con3 ral2imi con3d dfrex2 3imtr4g ) ABEZCDFZAGZCDFZGBGZCD
    FZGACDHBCDHOSQNRPCDABIJKACDLBCDLM $.
    $( [30-May-2011] $) $( [22-Nov-1994] $)

  ${
    reximia.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximia $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi wrex rexim mprg ) ABFACDGBCDGFCDABCDHEI $.
      $( [10-Feb-1997] $)
  $}

  ${
    reximi2.1 $e |- ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) $.
    $( Inference quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximi2 $p |- ( E. x e. A ph -> E. x e. B ps ) $=
      ( cv wcel wa wex wrex eximi df-rex 3imtr4i ) CGZDHAIZCJOEHBIZCJACDKBCEKPQ
      CFLACDMBCEMN $.
      $( [8-Nov-2004] $)
  $}

  ${
    reximi.1 $e |- ( ph -> ps ) $.
    $( Inference quantifying both antecedent and consequent. $)
    reximi $p |- ( E. x e. A ph -> E. x e. A ps ) $=
      ( wi cv wcel a1i reximia ) ABCDABFCGDHEIJ $.
      $( [18-Oct-1996] $)
  $}

  ${
    reximdai.1 $e |- ( ph -> A. x ph ) $.
    reximdai.2 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    reximdai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi wral wrex ralrimi rexim syl ) ABCHZDEIBDEJCDEJHANDEFGKBCDELM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x ph $.
    reximdv2.1 $e |- ( ph -> ( ( x e. A /\ ps ) -> ( x e. B /\ ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdv2 $p |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) $=
      ( cv wcel wa wex wrex eximdv df-rex 3imtr4g ) ADHZEIBJZDKPFICJZDKBDELCDFL
      AQRDGMBDENCDFNO $.
      $( [17-Sep-2003] $)
  $}

  ${
    $d x ph $.
    reximdvai.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdvai $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( ax-17 reximdai ) ABCDEADGFH $.
      $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.
    reximdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction from Theorem 19.22 of [Margaris] p. 90.  (Restricted
       quantifier version with strong hypothesis.) $)
    reximdv $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( wi cv wcel a1d reximdvai ) ABCDEABCGDHEIFJK $.
      $( [24-Jun-1998] $)
  $}

  ${
    $d x ph $.
    reximdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction quantifying both antecedent and consequent, based on Theorem
       19.22 of [Margaris] p. 90. $)
    reximdva $p |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) $=
      ( cv wcel wi ex reximdvai ) ABCDEADGEHBCIFJK $.
      $( [22-May-1999] $)
  $}

  ${
    $d x y $.  $d y A $.  $d x B $.
    $( Theorem 19.12 of [Margaris] p. 89 with restricted quantifiers.  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.12 $p |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) $=
      ( wral wrex wcel ax-17 hbra1 hbrex ax-1 ralrimi ra4 com12 reximdv ralimia
      cv syl ) ACEFZBDGZUACEFABDGZCEFUAUACETCBDBRDHCIACEJKUACREHZLMUAUBCEUCTABD
      TUCAACENOPQS $.
      $( [30-May-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $( Closed theorem form of ~ r19.23 . $)
    r19.23t $p |- ( A. x ( ps -> A. x ps )
          -> ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ) $=
      ( wal wi cv wcel wex wral 19.23t df-ral impexp albii bitr4i df-rex imbi1i
      wa wrex 3bitr4g ) BBCEFCECGDHZARZBFZCEZUBCIZBFABFZCDJZACDSZBFUBBCKUGUAUFF
      ZCEUDUFCDLUCUICUAABMNOUHUEBACDPQT $.
      $( [4-Mar-2013] $)
  $}

  ${
    r19.23.1 $e |- ( ps -> A. x ps ) $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23 $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( cv wcel wi wal wa wex wral wrex impexp albii 19.23 bitr3i df-ral df-rex
      imbi1i 3bitr4i ) CFDGZABHZHZCIZUBAJZCKZBHZUCCDLACDMZBHUEUFBHZCIUHUJUDCUBA
      BNOUFBCEPQUCCDRUIUGBACDSTUA $.
      $( [25-May-2011] $) $( [22-Oct-2010] $)
  $}

  ${
    $d x ps $.
    $( Theorem 19.23 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.23v $p |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) $=
      ( ax-17 r19.23 ) ABCDBCEF $.
      $( [31-Aug-1999] $)
  $}

  ${
    rexlimi.1 $e |- ( ps -> A. x ps ) $.
    rexlimi.2 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.21 of [Margaris] p. 90.  (Restricted
       quantifier version.)  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    rexlimi $p |- ( E. x e. A ph -> ps ) $=
      ( wi wral wrex rgen r19.23 mpbi ) ABGZCDHACDIBGMCDFJABCDEKL $.
      $( [30-May-2011] $) $( [30-Nov-2003] $)
  $}

  ${
    $d x ps $.
    rexlimiv.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimiv $p |- ( E. x e. A ph -> ps ) $=
      ( ax-17 rexlimi ) ABCDBCFEG $.
      $( [20-Nov-1994] $)
  $}

  ${
    $d x ps $.
    rexlimiva.1 $e |- ( ( x e. A /\ ph ) -> ps ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimiva $p |- ( E. x e. A ph -> ps ) $=
      ( cv wcel ex rexlimiv ) ABCDCFDGABEHI $.
      $( [18-Dec-2006] $)
  $}

  ${
    $d ps x $.
    rexlimivw.1 $e |- ( ph -> ps ) $.
    $( Weaker version of ~ rexlimiv .  (Contributed by FL, 19-Sep-2011.) $)
    rexlimivw $p |- ( E. x e. A ph -> ps ) $=
      ( wi cv wcel a1i rexlimiv ) ABCDABFCGDHEIJ $.
      $( [19-Sep-2011] $)
  $}

  ${
    rexlimd.1 $e |- ( ph -> A. x ph ) $.
    rexlimd.2 $e |- ( ch -> A. x ch ) $.
    rexlimd.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Deduction from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Andrew Salmon, 30-May-2011.) $)
    rexlimd $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi r19.23 sylib ) ABCIZDEJBDEKCIAODEFHLBCDEGMN $.
      $( [30-May-2011] $) $( [27-May-1998] $)
  $}

  ${
    rexlimd2.1 $e |- ( ph -> A. x ph ) $.
    rexlimd2.2 $e |- ( ph -> ( ch -> A. x ch ) ) $.
    rexlimd2.3 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Version of ~ rexlimd with deduction version of second hypothesis. $)
    rexlimd2 $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi wral wrex ralrimi wal wb alrimi r19.23t syl mpbid ) ABCIZDEJZBDEKCIZ
      ASDEFHLACCDMIZDMTUANAUBDFGOBCDEPQR $.
      $( [21-Jul-2013] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdv.1 $e |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  (The proof was shortened by Eric Schmidt, 22-Dec-2006.) $)
    rexlimdv $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( ax-17 rexlimd ) ABCDEADGCDGFH $.
      $( [22-Dec-2006] $) $( [14-Nov-2002] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdva.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimdva $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel wi ex rexlimdv ) ABCDEADGEHBCIFJK $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdv3a.1 $e |- ( ( ph /\ x e. A /\ ps ) -> ch ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version).  Frequently-used variant of ~ rexlimdv . $)
    rexlimdv3a $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( cv wcel 3exp rexlimdv ) ABCDEADGEHBCFIJ $.
      $( [7-Jun-2015] $)
  $}

  ${
    $d x ph $.  $d x ch $.
    rexlimdvw.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimdvw $p |- ( ph -> ( E. x e. A ps -> ch ) ) $=
      ( wi cv wcel a1d rexlimdv ) ABCDEABCGDHEIFJK $.
      $( [18-Jun-2014] $)
  $}

  ${
    $d x y ps $.  $d y A $.
    rexlimivv.1 $e |- ( ( x e. A /\ y e. B ) -> ( ph -> ps ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90 (restricted quantifier
       version). $)
    rexlimivv $p |- ( E. x e. A E. y e. B ph -> ps ) $=
      ( wrex cv wcel rexlimdva rexlimiv ) ADFHBCECIEJABDFGKL $.
      $( [17-Feb-2004] $)
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvv.1 $e |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimdvv $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( wrex cv wcel wa wi expdimp rexlimdv rexlimdva ) ABEGICDFADJFKZLBCEGAQEJ
      GKBCMHNOP $.
      $( [22-Jul-2004] $)
  $}

  ${
    $d x y ph $.  $d x y ch $.  $d y A $.
    rexlimdvva.1 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) $.
    $( Inference from Theorem 19.23 of [Margaris] p. 90.  (Restricted
       quantifier version.) $)
    rexlimdvva $p |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) $=
      ( cv wcel wa wi ex rexlimdvv ) ABCDEFGADIFJEIGJKBCLHMN $.
      $( [18-Jun-2014] $)
  $}

  $( Theorem 19.26 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.26 $p |- ( A. x e. A ( ph /\ ps ) <->
               ( A. x e. A ph /\ A. x e. A ps ) ) $=
    ( wa wral simpl ralimi simpr jca pm3.2 ral2imi imp impbii ) ABEZCDFZACDFZBC
    DFZEPQROACDABGHOBCDABIHJQRPABOCDABKLMN $.
    $( [30-May-2011] $) $( [28-Jan-1997] $)

  $( Theorem 19.26 of [Margaris] p. 90 with 2 restricted quantifiers. $)
  r19.26-2 $p |- ( A. x e. A A. y e. B ( ph /\ ps ) <->
               ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) $=
    ( wa wral r19.26 ralbii bitri ) ABGDFHZCEHADFHZBDFHZGZCEHMCEHNCEHGLOCEABDFI
    JMNCEIK $.
    $( [10-Aug-2004] $)

  $( Theorem 19.26 of [Margaris] p. 90 with 3 restricted quantifiers.
     (Contributed by FL, 22-Nov-2010.) $)
  r19.26-3 $p |- ( A. x e. A ( ph /\ ps /\ ch ) <->
               ( A. x e. A ph /\ A. x e. A ps /\ A. x e. A ch ) ) $=
    ( w3a wral wa df-3an ralbii r19.26 anbi1i bitr4i 3bitri ) ABCFZDEGABHZCHZDE
    GPDEGZCDEGZHZADEGZBDEGZSFZOQDEABCIJPCDEKTUAUBHZSHUCRUDSABDEKLUAUBSIMN $.
    $( [22-Nov-2010] $)

  $( Theorem 19.26 of [Margaris] p. 90 with mixed quantifiers. $)
  r19.26m $p |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <->
               ( A. x e. A ph /\ A. x e. B ps ) ) $=
    ( cv wcel wi wa wal wral 19.26 df-ral anbi12i bitr4i ) CFZDGAHZPEGBHZICJQCJ
    ZRCJZIACDKZBCEKZIQRCLUASUBTACDMBCEMNO $.
    $( [22-Feb-2004] $)

  $( Distribute a restricted universal quantifier over a biconditional.
     Theorem 19.15 of [Margaris] p. 90 with restricted quantification. $)
  ralbi $p |- ( A. x e. A ( ph <-> ps ) ->
               ( A. x e. A ph <-> A. x e. A ps ) ) $=
    ( wb wral hbra1 cv wcel ra4 imp ralbida ) ABEZCDFZABCDMCDGNCHDIMMCDJKL $.
    $( [6-Oct-2003] $)

  $( Split a biconditional and distribute quantifier. $)
  ralbiim $p |- ( A. x e. A ( ph <-> ps ) <->
             ( A. x e. A ( ph -> ps ) /\ A. x e. A ( ps -> ph ) ) ) $=
    ( wb wral wi wa dfbi2 ralbii r19.26 bitri ) ABEZCDFABGZBAGZHZCDFNCDFOCDFHMP
    CDABIJNOCDKL $.
    $( [3-Jun-2012] $)

  ${
    $d x ps $.
    $( Restricted version of one direction of Theorem 19.27 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.)  (The
       proof was shortened by Andrew Salmon, 30-May-2011.) $)
    r19.27av $p |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa cv wcel ax-1 ralrimiv anim2i r19.26 sylibr ) ACDEZBFNBCDEZFABFC
      DEBONBBCDBCGDHIJKABCDLM $.
      $( [30-May-2011] $) $( [3-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.28 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.28av $p |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) $=
      ( wral wa r19.27av ancom ralbii 3imtr4i ) BCDEZAFBAFZCDEAKFABFZCDEBACDGAK
      HMLCDABHIJ $.
      $( [2-Apr-2004] $)
  $}

  $( Theorem 19.29 of [Margaris] p. 90 with restricted quantifiers.  (The proof
     was shortened by Andrew Salmon, 30-May-2011.) $)
  r19.29 $p |- ( ( A. x e. A ph /\ E. x e. A ps ) ->
               E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa wi pm3.2 ralimi rexim syl imp ) ACDEZBCDFZABGZCDFZNBPHZCDEOQ
    HARCDABIJBPCDKLM $.
    $( [30-May-2011] $) $( [31-Aug-1999] $)

  $( Variation of Theorem 19.29 of [Margaris] p. 90 with restricted
     quantifiers. $)
  r19.29r $p |- ( ( E. x e. A ph /\ A. x e. A ps ) ->
                E. x e. A ( ph /\ ps ) ) $=
    ( wral wrex wa r19.29 ancom rexbii 3imtr4i ) BCDEZACDFZGBAGZCDFMLGABGZCDFBA
    CDHMLIONCDABIJK $.
    $( [31-Aug-1999] $)

  $( Theorem 19.30 of [Margaris] p. 90 with restricted quantifiers.
     (Contributed by Scott Fenton, 25-Feb-2011.) $)
  r19.30 $p |- ( A. x e. A ( ph \/ ps ) ->
                 ( A. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wral wrex ralim orcom df-or bitri ralbii dfrex2 orbi2i imor 3bitr4i
    wo 3imtr4i ) BEZAFZCDGTCDGZACDGZFZABRZCDGUCBCDHZRZTACDIUEUACDUEBARUAABJBAKL
    MUCUBEZRUHUCRUGUDUCUHJUFUHUCBCDNOUBUCPQS $.
    $( [25-Feb-2011] $)

  ${
    $d x ph $.
    $( Theorem 19.32 of [Margaris] p. 90 with restricted quantifiers. $)
    r19.32v $p |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) $=
      ( wn wi wral wo r19.21v df-or ralbii 3bitr4i ) AEZBFZCDGMBCDGZFABHZCDGAOH
      MBCDIPNCDABJKAOJL $.
      $( [25-Nov-2003] $)
  $}

  $( Restricted quantifier version of Theorem 19.35 of [Margaris] p. 90. $)
  r19.35 $p |- ( E. x e. A ( ph -> ps ) <->
               ( A. x e. A ph -> E. x e. A ps ) ) $=
    ( wral wn wi wrex r19.26 annim ralbii df-an 3bitr3i con2bii dfrex2 3bitr4ri
    wa imbi2i ) ACDEZBFZCDEZFZGZABGZFZCDEZFSBCDHZGUDCDHUFUCATQZCDESUAQUFUCFATCD
    IUHUECDABJKSUALMNUGUBSBCDORUDCDOP $.
    $( [20-Sep-2003] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.36 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.36av $p |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) $=
      ( wi wrex wral r19.35 cv wcel idd rexlimiv imim2i sylbi ) ABECDFACDGZBCDF
      ZEOBEABCDHPBOBBCDCIDJBKLMN $.
      $( [22-Oct-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.37 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.37av $p |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) $=
      ( wi wrex wral r19.35 cv wcel ax-1 ralrimiv imim1i sylbi ) ABECDFACDGZBCD
      FZEAPEABCDHAOPAACDACIDJKLMN $.
      $( [2-Apr-2004] $)
  $}

  $( Restricted quantifier version of Theorem 19.40 of [Margaris] p. 90. $)
  r19.40 $p |- ( E. x e. A ( ph /\ ps ) ->
               ( E. x e. A ph /\ E. x e. A ps ) ) $=
    ( wa wrex simpl reximi simpr jca ) ABEZCDFACDFBCDFKACDABGHKBCDABIHJ $.
    $( [2-Apr-2004] $)

  ${
    r19.41.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41 $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( cv wcel wa wex wrex anass exbii 19.41 bitr3i df-rex anbi1i 3bitr4i ) CF
      DGZABHZHZCIZRAHZCIZBHZSCDJACDJZBHUAUBBHZCIUDUFTCRABKLUBBCEMNSCDOUEUCBACDO
      PQ $.
      $( [1-Nov-2010] $)
  $}

  ${
    $d x ps $.
    $( Restricted quantifier version of Theorem 19.41 of [Margaris] p. 90. $)
    r19.41v $p |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) $=
      ( ax-17 r19.41 ) ABCDBCEF $.
      $( [17-Dec-2003] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of Theorem 19.42 of [Margaris] p. 90. $)
    r19.42v $p |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) $=
      ( wa wrex r19.41v ancom rexbii 3bitr4i ) BAEZCDFBCDFZAEABEZCDFALEBACDGMKC
      DABHIALHJ $.
      $( [27-May-1998] $)
  $}

  $( Restricted version of Theorem 19.43 of [Margaris] p. 90.  (The proof was
     shortened by Andrew Salmon, 30-May-2011.) $)
  r19.43 $p |- ( E. x e. A ( ph \/ ps ) <->
               ( E. x e. A ph \/ E. x e. A ps ) ) $=
    ( wn wi wrex wral wo r19.35 df-or rexbii ralnex imbi1i bitr4i 3bitr4i ) AEZ
    BFZCDGQCDHZBCDGZFZABIZCDGACDGZTIZQBCDJUBRCDABKLUDUCEZTFUAUCTKSUETACDMNOP $.
    $( [30-May-2011] $) $( [27-May-1998] $)

  ${
    $d x ps $.
    $( One direction of a restricted quantifier version of Theorem 19.44 of
       [Margaris] p. 90.  The other direction doesn't hold when ` A ` is
       empty. $)
    r19.44av $p |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim2i sylbi ) ABECDFACDFZBCDFZENBE
      ABCDGOBNBBCDCHDIBJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x ph $.
    $( Restricted version of one direction of Theorem 19.45 of [Margaris]
       p. 90.  (The other direction doesn't hold when ` A ` is empty.) $)
    r19.45av $p |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) $=
      ( wo wrex r19.43 cv wcel idd rexlimiv orim1i sylbi ) ABECDFACDFZBCDFZEAOE
      ABCDGNAOAACDCHDIAJKLM $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    ralcom $p |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) $=
      ( cv wcel wa wi wal wral ancomsimp 2albii alcom bitri r2al 3bitr4i ) BFDG
      ZCFEGZHAIZCJBJZSRHAIZBJCJZACEKBDKABDKCEKUAUBCJBJUCTUBBCRSALMUBBCNOABCDEPA
      CBEDPQ $.
      $( [13-Oct-1999] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y A $.
    $( Commutation of restricted quantifiers. $)
    rexcom $p |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) $=
      ( cv wcel wa wex wrex ancom anbi1i 2exbii excom bitri r2ex 3bitr4i ) BFDG
      ZCFEGZHZAHZCIBIZSRHZAHZBICIZACEJBDJABDJCEJUBUDCIBIUEUAUDBCTUCARSKLMUDBCNO
      ABCDEPACBEDPQ $.
      $( [19-Nov-1995] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d x y C $.
    $( Swap 1st and 3rd restricted existential quantifiers. $)
    rexcom13 $p |- ( E. x e. A E. y e. B E. z e. C ph
         <-> E. z e. C E. y e. B E. x e. A ph ) $=
      ( wrex rexcom rexbii 3bitri ) ADGHZCFHBEHLBEHZCFHABEHZDGHZCFHNCFHDGHLBCEF
      IMOCFABDEGIJNCDFGIK $.
      $( [8-Apr-2015] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x y C $.  $d x y z D $.
    $( Rotate existential restricted quantifiers twice. $)
    rexrot4 $p |- ( E. x e. A E. y e. B E. z e. C E. w e. D ph
        <-> E. z e. C E. w e. D E. x e. A E. y e. B ph ) $=
      ( wrex rexcom13 rexbii bitri ) AEIJDHJCGJZBFJACGJZDHJEIJZBFJOBFJEIJDHJNPB
      FACDEGHIKLOBEDFIHKM $.
      $( [8-Apr-2015] $)
  $}

  ${
    $d y z A $.  $d x z A $.
    $( Commutation of restricted quantifiers.  Note that ` x ` and ` y `
       needn't be distinct (this makes the proof longer but illustrates the use
       of ~ dvelim ).  (The proof was shortened by Andrew Salmon,
       30-May-2011.) $)
    ralcom2 $p |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) $=
      ( vz cv wcel wal wral eleq1 dral1 hbnae ax-17 dvelim al2imi df-ral imbi2i
      wi albii bitri wceq wb a4s imbi1d bicomd imbi12d biimpd wn nalequcoms a1i
      hba1 hbimd hbald ax-4 imim2i com23 syl9 sylsyld pm2.61i 3imtr4i ) BFZDGZC
      FZDGZARZCHZRZBHZVDVBARZBHZRZCHZACDIZBDIZABDIZCDIZVAVCUAZBHZVHVLRVRVHVLVGV
      KBCVRVBVDVFVJVQVBVDUBBVAVCDJUCZVRVJVFVIVEBCVRVBVDAVSUDKUEUFKUGVRUHZVTCHVH
      VHCHVLBCCLZVTVGCBBCBLVTVBVFCWAVBVBCHRCBEFZDGZVBCBEWCCMWBVADJNUIVFVFCHRVTV
      ECUKUJULUMVTVHVKCVTVDVDBHVHVJWCVDBCEWCBMWBVCDJNVGVDVIBVGVBVDAVFVEVBVECUNU
      OUPOUQOURUSVNVBVMRZBHVHVMBDPWDVGBVMVFVBACDPQSTVPVDVORZCHVLVOCDPWEVKCVOVJV
      DABDPQSTUT $.
      $( [8-Jun-2011] $) $( [24-Nov-1994] $)
  $}

  ${
    $( A commutative law for restricted quantifiers that swaps the domain of
       the restriction. $)
    ralcom3 $p |- ( A. x e. A ( x e. B -> ph ) <->
                    A. x e. B ( x e. A -> ph ) ) $=
      ( cv wcel wi wral pm2.04 ralimi2 impbii ) BEZDFZAGZBCHLCFZAGZBDHNPBCDOMAI
      JPNBDCMOAIJK $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d y A $.  $d x B $.  $d x y $.
    reean.1 $e |- ( ph -> A. y ph ) $.
    reean.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange existential quantifiers.  (The proof was shortened by Andrew
       Salmon, 30-May-2011.) $)
    reean $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( cv wcel wa wex wrex an4 2exbii ax-17 hban eean bitri df-rex anbi12i
      r2ex 3bitr4i ) CIEJZDIFJZKABKZKZDLCLZUDAKZCLZUEBKZDLZKZUFDFMCEMACEMZBDFMZ
      KUHUIUKKZDLCLUMUGUPCDUDUEABNOUIUKCDUDADUDDPGQUEBCUECPHQRSUFCDEFUBUNUJUOUL
      ACETBDFTUAUC $.
      $( [30-May-2011] $) $( [27-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y $.  $d y A $.  $d x B $.
    $( Rearrange existential quantifiers. $)
    reeanv $p |- ( E. x e. A E. y e. B ( ph /\ ps ) <->
                 ( E. x e. A ph /\ E. y e. B ps ) ) $=
      ( ax-17 reean ) ABCDEFADGBCGH $.
      $( [9-May-1999] $)
  $}

  ${
    $d ph y z $.  $d ps x z $.  $d ch x y $.  $d A y $.  $d B x z $.
    $d C x y $.
    $( Rearrange three existential quantifiers.  (Contributed by Jeff Madsen,
       11-Jun-2010.) $)
    3reeanv $p |- ( E. x e. A E. y e. B E. z e. C ( ph /\ ps /\ ch )
                      <-> ( E. x e. A ph /\ E. y e. B ps /\ E. z e. C ch ) ) $=
      ( wa wrex w3a r19.41v reeanv anbi1i bitri df-3an 2rexbii rexbii 3bitr4i )
      ABJZEHKZCFIKZJZDGKZADGKZBEHKZJZUCJZABCLZFIKEHKZDGKUFUGUCLUEUBDGKZUCJUIUBU
      CDGMULUHUCABDEGHNOPUKUDDGUKUACJZFIKEHKUDUJUMEFHIABCQRUACEFHINPSUFUGUCQT
      $.
      $( [11-Jun-2010] $)
  $}

  ${
    $d ph y $.  $d ps x $.  $d A y $.  $d B x $.  $d x y $.
    $( Distribute quantification over "or".  (Contributed by Jeff Madsen,
       19-Jun-2010.) $)
    2ralor $p |- ( A. x e. A A. y e. B ( ph \/ ps ) <->
                  ( A. x e. A ph \/ A. y e. B ps ) ) $=
      ( wo wral wn wrex reeanv ioran rexbii rexnal bitr3i bitri anbi12i 3bitr3i
      wa bitr4i con4bii ) ABGZDFHZCEHZACEHZBDFHZGZAIZBIZSZDFJZCEJZUHCEJZUIDFJZS
      ZUDIZUGIZUHUICDEFKULUCIZCEJUPUKURCEUKUBIZDFJURUSUJDFABLMUBDFNOMUCCENPUOUE
      IZUFIZSUQUMUTUNVAACENBDFNQUEUFLTRUA $.
      $( [19-Jun-2010] $)
  $}

  ${
    hbreu.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbreu.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for restricted uniqueness. $)
    hbreu $p |- ( E! y e. A ph -> A. x E! y e. A ph ) $=
      ( wreu cv wcel wa weu df-reu hban hbeu hbxfrbi ) ACDGCHDIZAJZCKBACDLQBCPA
      BEFMNO $.
      $( [11-Jun-2011] $) $( [30-Oct-2010] $)
  $}

  ${
    hbreud.1 $e |- ( ph -> A. x ph ) $.
    hbreud.2 $e |- ( ph -> A. y ph ) $.
    hbreud.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbreud.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbreu . $)
    hbreud $p |- ( ph -> ( E! y e. A ps -> A. x E! y e. A ps ) ) $=
      ( cv wcel wa weu wal wreu hband hbeud df-reu albii 3imtr4g ) ADJEKZBLZDMZ
      UCCNBDEOZUDCNAUBCDFGAUABCHIPQBDERZUDUCCUEST $.
      $( [15-Feb-2013] $)
  $}

  $( ` x ` is not free in ` E! x e. A ph ` . $)
  hbreu1 $p |- ( E! x e. A ph -> A. x E! x e. A ph ) $=
    ( wreu cv wcel wa weu df-reu hbeu1 hbxfrbi ) ABCDBECFAGZBHBABCILBJK $.
    $( [19-Mar-1997] $)

  $( An "identity" law of concretion for restricted abstraction.  Special case
     of Definition 2.1 of [Quine] p. 16. $)
  rabid $p |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) $=
    ( cv wcel wa crab df-rab abeq2i ) BDCEAFBABCGABCHI $.
    $( [9-Oct-2003] $)

  ${
    $d x A $.
    $( An "identity" law for restricted class abstraction.  (The proof was
       shortened by Andrew Salmon, 30-May-2011.) $)
    rabid2 $p |- ( A = { x e. A | ph } <-> A. x e. A ph ) $=
      ( cv wcel wa cab wceq wi wal crab abeq2 pm4.71 albii bitr4i df-rab eqeq2i
      wral wb df-ral 3bitr4i ) CBDCEZAFZBGZHZUBAIZBJZCABCKZHABCRUEUBUCSZBJUGUCB
      CLUFUIBUBAMNOUHUDCABCPQABCTUA $.
      $( [30-May-2011] $) $( [9-Oct-2003] $)
  $}

  ${
    $( Equivalent wff's correspond to equal restricted class abstractions.
       Closed theorem form of ~ rabbidva . $)
    rabbi $p |- ( A. x e. A ( ps <-> ch )
         <-> { x e. A | ps } = { x e. A | ch } ) $=
      ( cv wcel wa wb wal cab wceq wral crab abbi wi df-ral pm5.32 albii df-rab
      bitri eqeq12i 3bitr4i ) CEDFZAGZUCBGZHZCIZUDCJZUECJZKABHZCDLZACDMZBCDMZKU
      DUECNUKUCUJOZCIUGUJCDPUNUFCUCABQRTULUHUMUIACDSBCDSUAUB $.
      $( [25-Nov-2013] $)
  $}

  $( Swap with a membership relation in a restricted class abstraction. $)
  rabswap $p |- { x e. A | x e. B } = { x e. B | x e. A } $=
    ( cv wcel wa cab crab ancom abbii df-rab 3eqtr4i ) ADZBEZMCEZFZAGONFZAGOABH
    NACHPQANOIJOABKNACKL $.
    $( [4-Jul-2005] $)

  ${
    $d x y $.
    $( The abstraction variable in a restricted class abstraction isn't
       free. $)
    hbrab1 $p |- ( y e. { x e. A | ph } -> A. x y e. { x e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hbab1 hbxfreq ) BCABDEBFDGAHZBIABDJMBCKL $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d x y $.  $d x z $.  $d z A $.
    hbrab.1 $e |- ( ph -> A. x ph ) $.
    hbrab.2 $e |- ( z e. A -> A. x z e. A ) $.
    $( A variable not free in a wff remains so in a restricted class
       abstraction.  (Unnecessary distinct variable restrictions were removed
       by Andrew Salmon, 11-Jul-2011.) $)
    hbrab $p |- ( z e. { y e. A | ph } -> A. x z e. { y e. A | ph } ) $=
      ( crab cv wcel wa cab df-rab hblem hban hbab hbxfreq ) BDACEHCIEJZAKZCLAC
      EMSBCDRABBDCEGNFOPQ $.
      $( [11-Jul-2011] $) $( [13-Oct-2003] $)
  $}

  ${
    $d x ph $.
    reubidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidva $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( cv wcel wa weu wreu pm5.32da eubidv df-reu 3bitr4g ) ADGEHZBIZDJPCIZDJB
      DEKCDEKAQRDAPBCFLMBDENCDENO $.
      $( [13-Nov-2004] $)
  $}

  ${
    $d x ph $.
    reubidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building rule for restricted existential quantifier (deduction
       rule). $)
    reubidv $p |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) $=
      ( wb cv wcel adantr reubidva ) ABCDEABCGDHEIFJK $.
      $( [17-Oct-1996] $)
  $}

  ${
    reubiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubiia $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( cv wcel wa weu wreu pm5.32i eubii df-reu 3bitr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [14-Nov-2004] $)
  $}

  ${
    reubii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building rule for restricted existential quantifier (inference
       rule). $)
    reubii $p |- ( E! x e. A ph <-> E! x e. A ps ) $=
      ( wb cv wcel a1i reubiia ) ABCDABFCGDHEIJ $.
      $( [22-Oct-1999] $)
  $}

  ${
    $d y A $.  $d y B $.
    raleq1f.1 $e |- ( y e. A -> A. x y e. A ) $.
    raleq1f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted universal quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    raleqf $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( wceq cv wcel wi wal wral hbeq eleq2 imbi1d albid df-ral 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Equality theorem for restricted existential quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    rexeqf $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( wceq cv wcel wa wex wrex hbeq eleq2 anbi1d exbid df-rex 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [9-Oct-2003] $)

    $( Equality theorem for restricted uniqueness quantifier, with
       bound-variable hypotheses instead of distinct variable restrictions.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    reueq1f $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( wceq cv wcel wa weu wreu hbeq eleq2 anbi1d eubid df-reu 3bitr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted universal quantifier. $)
    raleq $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) $=
      ( vy cv wcel ax-17 raleqf ) ABECDEFZCGBHJDGBHI $.
      $( [16-Nov-1995] $)

    $( Equality theorem for restricted existential quantifier. $)
    rexeq $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) $=
      ( vy cv wcel ax-17 rexeqf ) ABECDEFZCGBHJDGBHI $.
      $( [29-Oct-1995] $)

    $( Equality theorem for restricted uniqueness quantifier. $)
    reueq1 $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) $=
      ( vy cv wcel ax-17 reueq1f ) ABECDEFZCGBHJDGBHI $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d A x $.  $d B x $.
    raleq1i.1 $e |- A = B $.
    $( Equality inference for restricted universal qualifier.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    raleqi $p |- ( A. x e. A ph <-> A. x e. B ph ) $=
      ( wceq wral wb raleq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [22-Jun-2011] $)

    $( Equality inference for restricted existential qualifier.  (Contributed
       by Mario Carneiro, 23-Apr-2015.) $)
    rexeqi $p |- ( E. x e. A ph <-> E. x e. B ph ) $=
      ( wceq wrex wb rexeq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [23-Apr-2015] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqdv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) $=
      ( wceq wral wb raleq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [13-Nov-2005] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqdv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) $=
      ( wceq wrex wb rexeq syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [14-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.
    raleqd.1 $e |- ( A = B -> ( ph <-> ps ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbi1dv $p |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) $=
      ( wceq wral raleq ralbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [16-Nov-1995] $)

    $( Equality deduction for restricted existential quantifier. $)
    rexeqbi1dv $p |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) $=
      ( wceq wrex rexeq rexbidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [18-Mar-1997] $)

    $( Equality deduction for restricted uniqueness quantifier. $)
    reueqd $p |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) $=
      ( wceq wreu reueq1 reubidv bitrd ) DEGZACDHACEHBCEHACDEILABCEFJK $.
      $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    raleqbidv.1 $e |- ( ph -> A = B ) $.
    raleqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality deduction for restricted universal quantifier. $)
    raleqbidv $p |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) $=
      ( wral raleqdv ralbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)

    $( Equality deduction for restricted universal quantifier. $)
    rexeqbidv $p |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) $=
      ( wrex rexeqdv rexbidv bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $) $( [6-Nov-2007] $)
  $}

  ${
    $d z A w $.  $d w x $.  $d w y $.  $d w z $.  $d w ps $.  $d w ph $.
    cbvralf.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvralf.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvralf.3 $e |- ( ph -> A. y ph ) $.
    cbvralf.4 $e |- ( ps -> A. x ps ) $.
    cbvralf.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition.
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvralf $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vw cv wcel wi wal wral wsbc ax-17 hblem hbs1 hbim eleq1 sbequ12 imbi12d
      wceq cbval hbsb sbequ sbie syl6bb bitri df-ral 3bitr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)

    $( Rule used to change bound variables, using implicit substitition.
       (Contributed by FL, 11-Jul-2011.)  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexf $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vw cv wcel wa wex wrex wsbc ax-17 hblem hbs1 hban eleq1 sbequ12 anbi12d
      wceq cbvex hbsb sbequ sbie syl6bb bitri df-rex 3bitr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    $d x z A $.  $d y z A $.
    cbvral.1 $e |- ( ph -> A. y ph ) $.
    cbvral.2 $e |- ( ps -> A. x ps ) $.
    cbvral.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitition. $)
    cbvral $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvralf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)

    $( Rule used to change bound variables, using implicit substitition.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    cbvrex $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( vz cv wcel ax-17 cbvrexf ) ABCDIEIJEKZCLNDLFGHM $.
      $( [11-Jul-2011] $) $( [31-Jul-2003] $)
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.  $d z x ps $.
    cbvralv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a restricted universal quantifier using
       implicit substitution. $)
    cbvralv $p |- ( A. x e. A ph <-> A. y e. A ps ) $=
      ( ax-17 cbvral ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [28-Jan-1997] $)

    $( Change the bound variable of a restricted existential quantifier using
       implicit substitution. $)
    cbvrexv $p |- ( E. x e. A ph <-> E. y e. A ps ) $=
      ( ax-17 cbvrex ) ABCDEADGBCGFH $.
      $( [11-Jul-2011] $) $( [2-Jun-1998] $)

    $( Change the bound variable of a restricted uniqueness quantifier using
       implicit substitution.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvreuv $p |- ( E! x e. A ph <-> E! y e. A ps ) $=
      ( vz cv wcel weu wreu wsbc ax-17 sb8eu sban eubii clelsb3 anbi1i df-reu
      wa hbsb hban wceq eleq1 sbequ syl6bb anbi12d cbveu bitri 3bitri 3bitr4i
      sbie ) CHEIZATZCJZDHZEIZBTZDJZACEKBDEKUOUNCGHZLZGJUMCUTLZACUTLZTZGJZUSUNC
      GUNGMNVAVDGUMACGOPVEUTEIZVCTZGJUSVDVGGVBVFVCGCEQRPVGURGDVFVCDVFDMACGDADMU
      AUBURGMUTUPUCZVFUQVCBUTUPEUDVHVCACUPLBAGDCUEABCDBCMFULUFUGUHUIUJACESBDESU
      K $.
      $( [11-Jul-2011] $) $( [5-Apr-2004] $)
  $}

  ${
    $d x A $.  $d z A $.  $d x y B $.  $d z y B $.  $d w B $.  $d z ph $.
    $d y ps $.  $d x ch $.  $d w ch $.
    cbvral2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvral2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution. $)
    cbvral2v $p |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) $=
      ( wral cv wceq ralbidv cbvralv ralbii bitri ) AEILZDHLCEILZFHLBGILZFHLSTD
      FHDMFMNACEIJOPTUAFHCBEGIKPQR $.
      $( [11-Jul-2011] $) $( [10-Aug-2004] $)
  $}

  ${
    $d A x $.  $d A z $.  $d B w $.  $d B x y $.  $d B z y $.  $d ch w $.
    $d ch x $.  $d ph z $.  $d ps y $.
    cbvrex2v.1 $e |- ( x = z -> ( ph <-> ch ) ) $.
    cbvrex2v.2 $e |- ( y = w -> ( ch <-> ps ) ) $.
    $( Change bound variables of double restricted universal quantification,
       using implicit substitution.  (Contributed by FL, 2-Jul-2012.) $)
    cbvrex2v $p |- ( E. x e. A E. y e. B ph <-> E. z e. A E. w e. B ps ) $=
      ( wrex weq rexbidv cbvrexv rexbii bitri ) AEILZDHLCEILZFHLBGILZFHLRSDFHDF
      MACEIJNOSTFHCBEGIKOPQ $.
      $( [2-Jul-2012] $)
  $}

  ${
    $d w ph $.  $d z ps $.  $d x ch $.  $d v ch $.  $d y u th $.  $d x A $.
    $d w A $.  $d x y B $.  $d w y B $.  $d v B $.  $d x y z C $.
    $d w y z C $.  $d v z C $.  $d z y C $.  $d z C $.  $d u C $.
    cbvral3v.1 $e |- ( x = w -> ( ph <-> ch ) ) $.
    cbvral3v.2 $e |- ( y = v -> ( ch <-> th ) ) $.
    cbvral3v.3 $e |- ( z = u -> ( th <-> ps ) ) $.
    $( Change bound variables of triple restricted universal quantification,
       using implicit substitution. $)
    cbvral3v $p |- ( A. x e. A A. y e. B A. z e. C ph <->
                     A. w e. A A. v e. B A. u e. C ps ) $=
      ( wral cv wceq 2ralbidv cbvralv cbvral2v ralbii bitri ) AGMQFLQZEKQCGMQFL
      QZHKQBJMQILQZHKQUEUFEHKERHRSACFGLMNTUAUFUGHKCBDFGIJLMOPUBUCUD $.
      $( [11-Jul-2011] $) $( [10-May-2005] $)
  $}

  ${
    $d z x A $.  $d y A $.  $d z y ph $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvralsv $p |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) $=
      ( vz wral cv wsbc ax-17 hbs1 sbequ12 cbvral hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [20-Nov-2005] $)
  $}

  ${
    $d z x A $.  $d y z ph $.  $d y A $.
    $( Change bound variable by using a substitution.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    cbvrexsv $p |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) $=
      ( vz wrex cv wsbc ax-17 hbs1 sbequ12 cbvrex hbsb sbequ bitri ) ABDFABEGHZ
      EDFABCGHZCDFAPBEDAEIZABEJABEKLPQECDABECACIMABCERMAECBNLO $.
      $( [11-Jul-2011] $) $( [2-Mar-2008] $)
  $}

  ${
    $d x y z $.  $d y z ph $.  $d x z ps $.
    sbralie.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Implicit to explicit substitution that swaps variables in a quantified
       expression. $)
    sbralie $p |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) $=
      ( vz wral wsbc cbvralsv sbbii ax-17 raleq sbie bitri sbco2 ralbii 3bitri
      cv ) ACDRZGZDCRZHZACFRHZFUAGZUCFSHZDUAGBDUAGUBUCFSGZDUAHUDTUFDCACFSIJUFUD
      DCUDDKUCFSUALMNUCFDUAIUEBDUAUEACSHBACDFAFKOABCDBCKEMNPQ $.
      $( [5-Sep-2004] $)
  $}

  ${
    rabbiia.1 $e |- ( x e. A -> ( ph <-> ps ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (inference
       rule). $)
    rabbiia $p |- { x e. A | ph } = { x e. A | ps } $=
      ( cv wcel wa cab crab pm5.32i abbii df-rab 3eqtr4i ) CFDGZAHZCIOBHZCIACDJ
      BCDJPQCOABEKLACDMBCDMN $.
      $( [22-May-1999] $)
  $}

  ${
    $d x ph $.
    rabbidva.1 $e |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidva $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb wral crab wceq ralrimiva rabbi sylib ) ABCGZDEHBDEICDEIJANDEFKBCDELM
      $.
      $( [28-Nov-2003] $)
  $}

  ${
    $d x ph $.
    rabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal restricted class abstractions (deduction
       rule). $)
    rabbidv $p |- ( ph -> { x e. A | ps } = { x e. A | ch } ) $=
      ( wb cv wcel adantr rabbidva ) ABCDEABCGDHEIFJK $.
      $( [10-Feb-1995] $)
  $}

  ${
    $d y A $.  $d y B $.
    rabeqf.1 $e |- ( y e. A -> A. x y e. A ) $.
    rabeqf.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equality theorem for restricted class abstractions, with bound-variable
       hypotheses instead of distinct variable restrictions. $)
    rabeqf $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( wceq cv wcel wa cab crab hbeq eleq2 anbi1d abbid df-rab 3eqtr4g ) DEHZB
      IZDJZAKZBLUAEJZAKZBLABDMABEMTUCUEBBCCDEFGNTUBUDADEUAOPQABDRABERS $.
      $( [11-Jul-2011] $) $( [7-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for restricted class abstractions. $)
    rabeq $p |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) $=
      ( vy cv wcel ax-17 rabeqf ) ABECDEFZCGBHJDGBHI $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d ph x $.
    rabeqbidv.1 $e |- ( ph -> A = B ) $.
    rabeqbidv.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equality of restricted class abstractions.  (Contributed by Jeff Madsen,
       1-Dec-2009.) $)
    rabeqbidv $p |- ( ph -> { x e. A | ps } = { x e. B | ch } ) $=
      ( crab wceq rabeq syl rabbidv eqtrd ) ABDEIZBDFIZCDFIAEFJOPJGBDEFKLABCDFH
      MN $.
      $( [15-Sep-2011] $) $( [1-Dec-2009] $)
  $}

  ${
    rabeqi.1 $e |- A = { x e. B | ph } $.
    $( Inference rule from equality of a class variable and a restricted class
       abstraction. $)
    rabeq2i $p |- ( x e. A <-> ( x e. B /\ ph ) ) $=
      ( cv wcel crab wa eleq2i rabid bitri ) BFZCGMABDHZGMDGAICNMEJABDKL $.
      $( [16-Feb-2004] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The universal class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the universal class. $)
  $c _V $. $( Letter V (for the universal class) $)

  $( Extend class notation to include the universal class symbol. $)
  cvv $a class _V $.

  ${
    $d z x $.  $d z y $.
    $( Soundness justification theorem for ~ df-v .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.) $)
    vjust $p |- { x | x = x } = { y | y = y } $=
      ( vz cv wceq cab wsbc wcel equid sbt 2th df-clab 3bitr4i eqriv ) CADZOEZA
      FZBDZREZBFZPACDZGZSBUAGZUAQHUATHUBUCPACAIJSBCBIJKPCALSCBLMN $.
      $( [27-Apr-2010] $)
  $}

  $( Define the universal class.  Definition 5.20 of [TakeutiZaring] p. 21. $)
  df-v $a |- _V = { x | x = x } $.

  $( All set variables are sets (see ~ isset ).  Theorem 6.8 of [Quine]
     p. 43. $)
  vex $p |- x e. _V $=
    ( cv cvv wcel wceq eqid df-v abeq2i mpbir ) ABZCDJJEZJFKACAGHI $.
    $( [5-Aug-1993] $)

  ${
    $d x A $.
    $( Two ways to say " ` A ` is a set":  A class ` A ` is a member of the
       universal class ` _V ` (see ~ df-v ) if and only if the class ` A `
       exists (i.e. there exists some set ` x ` equal to class ` A ` ).
       Theorem 6.9 of [Quine] p. 43. _Notational convention_:  We will use the
       notational device " ` A e. _V ` " to mean " ` A ` is a set" very
       frequently, for example in ~ uniex .  Note the when ` A ` is not a set,
       it is called a proper class.  In some theorems, such as ~ uniexg , in
       order to shorten certain proofs we use the more general antecedent
       ` A e. V ` instead of ` A e. _V ` to mean " ` A ` is a set."

       Note that a constant is implicitly considered distinct from all
       variables.  This is why ` _V ` is not included in the distinct variable
       list, even though ~ df-clel requires that the expression substituted for
       ` B ` not contain ` x ` .  (Also, the Metamath spec does not allow
       constants in the distinct variable list.) $)
    isset $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wa wex df-clel vex biantru exbii bitr4i ) BCDAEZBFZNCD
      ZGZAHOAHABCIOQAPOAJKLM $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A y $.  $d x y $.
    issetf.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A version of isset that does not require x and A to be distinct.
       (Contributed by Andrew Salmon, 6-Jun-2011.) $)
    issetf $p |- ( A e. _V <-> E. x x = A ) $=
      ( cvv wcel cv wceq wex isset hbeleq ax-17 eqeq1 cbvex bitri ) CEFBGZCHZBI
      AGZCHZAIBCJQSBAABCDKSBLPRCMNO $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d x A $.
    isseti.1 $e |- A e. _V $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    isseti $p |- E. x x = A $=
      ( cvv wcel cv wceq wex isset mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    issetri.1 $e |- E. x x = A $.
    $( A way to say " ` A ` is a set" (inference rule). $)
    issetri $p |- A e. _V $=
      ( cvv wcel cv wceq wex isset mpbir ) BDEAFBGAHCABIJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class is a member of another class, it is a set.  Theorem 6.12 of
       [Quine] p. 44.  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    elex $p |- ( A e. B -> A e. _V ) $=
      ( vx cv wceq wcel wa wex cvv exsimpl df-clel isset 3imtr4i ) CDZAEZNBFZGC
      HOCHABFAIFOPCJCABKCALM $.
      $( [8-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    elisseti.1 $e |- A e. B $.
    $( If a class is a member of another class, it is a set. $)
    elexi $p |- A e. _V $=
      ( wcel cvv elex ax-mp ) ABDAEDCABFG $.
      $( [11-Jun-1994] $)
  $}

  ${
    $d x A $.
    $( An element of a class exists. $)
    elisset $p |- ( A e. V -> E. x x = A ) $=
      ( wcel cvv cv wceq wex elex isset sylib ) BCDBEDAFBGAHBCIABJK $.
      $( [1-May-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( If two classes each contain another class, then both contain some set.
       This proof was automatically generated from the virtual deduction proof
       ~ elex22VD using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    elex22 $p |- ( ( A e. B /\ A e. C ) -> E. x ( x e. B /\ x e. C ) ) $=
      ( wcel wa cv wceq wi wal eleq1a anim12ii alrimiv elisset adantr exim sylc
      wex ) BCEZBDEZFZAGZBHZUBCEZUBDEZFZIZAJUCARZUFARUAUGASUCUDTUEBCUBKBDUBKLMS
      UHTABCNOUCUFAPQ $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( If a class contains another class, then it contains some set.  This
       proof was generated automatically from the virtual deduction proof
       ~ elex2 using the tools command file
       translate_without_overwriting_minimize_excluding_duplicates.cmd .
       (Contributed by Alan Sare, 25-Sep-2011.) $)
    elex2 $p |- ( A e. B -> E. x x e. B ) $=
      ( wcel cv wceq wi wal wex eleq1a alrimiv elisset exim sylc ) BCDZAEZBFZPC
      DZGZAHQAIRAIOSABCPJKABCLQRAMN $.
      $( [24-Oct-2011] $) $( [25-Sep-2011] $)
  $}

  $( A universal quantifier restricted to the universe is unrestricted. $)
  ralv $p |- ( A. x e. _V ph <-> A. x ph ) $=
    ( cvv wral cv wcel wi wal df-ral vex a1bi albii bitr4i ) ABCDBECFZAGZBHABHA
    BCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( An existential quantifier restricted to the universe is unrestricted. $)
  rexv $p |- ( E. x e. _V ph <-> E. x ph ) $=
    ( cvv wrex cv wcel wa wex df-rex vex biantrur exbii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [26-Mar-2004] $)

  $( A uniqueness quantifier restricted to the universe is unrestricted. $)
  reuv $p |- ( E! x e. _V ph <-> E! x ph ) $=
    ( cvv wreu cv wcel wa weu df-reu vex biantrur eubii bitr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [7-Jun-2011] $) $( [1-Nov-2010] $)

  $( A class abstraction restricted to the universe is unrestricted.  (The
     proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
  rabab $p |- { x e. _V | ph } = { x | ph } $=
    ( cvv crab cv wcel wa cab df-rab vex biantrur abbii eqtr4i ) ABCDBECFZAGZBH
    ABHABCIAOBNABJKLM $.
    $( [8-Jun-2011] $) $( [27-Dec-2004] $)

  ${
    $d x y $.  $d y A $.
    $( Commutation of restricted and unrestricted universal quantifiers.  (The
       proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    ralcom4 $p |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) $=
      ( cvv wral wal ralcom ralv ralbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [26-Mar-2004] $)

    $( Commutation of restricted and unrestricted existential quantifiers.
       (The proof was shortened by Andrew Salmon, 8-Jun-2011.) $)
    rexcom4 $p |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) $=
      ( cvv wrex wex rexcom rexv rexbii 3bitr3i ) ACEFZBDFABDFZCEFACGZBDFMCGABC
      DEHLNBDACIJMCIK $.
      $( [8-Jun-2011] $) $( [12-Apr-2004] $)
  $}

  ${
    $d A x $.  $d x y $.  $d ph x $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4a $p |- ( E. x E. y e. A ( ph /\ ps )
                          <-> E. y e. A ( ph /\ E. x ps ) ) $=
      ( wa wrex wex rexcom4 19.42v rexbii bitr3i ) ABFZDEGCHMCHZDEGABCHFZDEGMDC
      EINODEABCJKL $.
      $( [1-Jun-2011] $)

    $d B x $.
    rexcom4b.1 $e |- B e. _V $.
    $( Specialized existential commutation lemma.  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    rexcom4b $p |- ( E. x E. y e. A ( ph /\ x = B ) <-> E. y e. A ph ) $=
      ( cv wceq wa wrex wex rexcom4a isseti biantru rexbii bitr4i ) ABGEHZICDJB
      KAQBKZIZCDJACDJAQBCDLASCDRABEFMNOP $.
      $( [1-Jun-2011] $)
  $}

  ${
    $d x A $.
    $( Closed theorem version of ~ ceqsalg . $)
    ceqsalt $p |- ( ( A. x ( ps -> A. x ps )
              /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. V )
         -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wcel w3a wex elisset 3ad2ant3 bi1 imim3i al2imi 3ad2ant2
      wb 3ad2ant1 19.23t sylibd mpid bi2 imim2i com23 alimi 19.21t mpbid impbid
      ) BBCFGCFZCHDIZABSZGZCFZDEJZKZULAGZCFZBUQUSULCLZBUPUKUTUOCDEMNUQUSULBGZCF
      ZUTBGZUOUKUSVBGUPUNURVACUMABULABOPQRUKUOVBVCSUPULBCUATUBUCUQBURGZCFZBUSGZ
      UOUKVEUPUNVDCUNULBAUMBAGULABUDUEUFUGRUKUOVEVFSUPBURCUHTUIUJ $.
      $( [28-Feb-2013] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Restricted quantifier version of ~ ceqsalt . $)
    ceqsralt $p |- ( ( A. x ( ps -> A. x ps )
              /\ A. x ( x = A -> ( ph <-> ps ) ) /\ A e. B )
         -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wb wcel w3a wral df-ral wa eleq1 pm5.32ri imbi1i 3bitr3i
      impexp albii a1i syl5bb 19.21v syl6bb biimt 3ad2ant3 ceqsalt 3bitr2d ) BB
      CFGCFZCHZDIZABJGCFZDEKZLZULAGZCEMZUNUPCFZGZURBUOUQUNUPGZCFZUSUQUKEKZUPGZC
      FZUOVAUPCENVDVAJUOVCUTCVBULOZAGUNULOZAGVCUTVEVFAULVBUNUKDEPQRVBULATUNULAT
      SUAUBUCUNUPCUDUEUNUJURUSJUMUNURUFUGABCDEUHUI $.
      $( [28-Feb-2013] $)
  $}

  ${
    $d x A $.
    ceqsalg.1 $e |- ( ps -> A. x ps ) $.
    ceqsalg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    ceqsalg $p |- ( A e. V -> ( A. x ( x = A -> ph ) <-> ps ) ) $=
      ( wcel cv wceq wi wal wex elisset hba1 biimpd a2i a4s exlimd syl5com
      biimprcd alrimi impbid1 ) DEHZCIDJZAKZCLZBUDUECMUGBCDENUGUEBCUFCOFUFUEBKC
      UEABUEABGPQRSTBUFCFUEABGUAUBUC $.
      $( [8-Jun-2011] $) $( [29-Oct-2003] $)
  $}

  ${
    $d x A $.
    ceqsal.1 $e |- ( ps -> A. x ps ) $.
    ceqsal.2 $e |- A e. _V $.
    ceqsal.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsal $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( cvv wcel cv wceq wi wal wb ceqsalg ax-mp ) DHICJDKALCMBNFABCDHEGOP $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsalv.1 $e |- A e. _V $.
    ceqsalv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsalv $p |- ( A. x ( x = A -> ph ) <-> ps ) $=
      ( ax-17 ceqsal ) ABCDBCGEFH $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsralv.1 $e |- A e. _V $.
    ceqsralv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted quantifier version of ~ ceqsalv . $)
    ceqsralv $p |- ( A e. B -> ( A. x e. B ( x = A -> ph ) <-> ps ) ) $=
      ( wal wi cv wceq wb wcel wral ax-17 ax-gen ceqsralt mp3an12 ) BBCHIZCHCJD
      KZABLIZCHDEMTAICENBLSCBCOPUACGPABCDEQR $.
      $( [21-Jun-2013] $)
  $}

  ${
    $d x ps $.
    gencl.1 $e |- ( th <-> E. x ( ch /\ A = B ) ) $.
    gencl.2 $e |- ( A = B -> ( ph <-> ps ) ) $.
    gencl.3 $e |- ( ch -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    gencl $p |- ( th -> ps ) $=
      ( wceq wa wex syl5ib impcom exlimiv sylbi ) DCFGKZLZEMBHSBERCBCARBJINOPQ
      $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y $.  $d x R $.  $d x ps $.  $d y C $.  $d y S $.  $d y ch $.
    2gencl.1 $e |- ( C e. S <-> E. x e. R A = C ) $.
    2gencl.2 $e |- ( D e. S <-> E. y e. R B = D ) $.
    2gencl.3 $e |- ( A = C -> ( ph <-> ps ) ) $.
    2gencl.4 $e |- ( B = D -> ( ps <-> ch ) ) $.
    2gencl.5 $e |- ( ( x e. R /\ y e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    2gencl $p |- ( ( C e. S /\ D e. S ) -> ch ) $=
      ( wcel wi cv wceq wrex wa wex df-rex bitri imbi2d ex gencl com12 impcom )
      IKQZHKQZCULBRULCRESJQZUKEGIUKGITZEJUAUMUNUBEUCMUNEJUDUEUNBCULOUFULUMBUMAR
      UMBRDSJQZULDFHULFHTZDJUAUOUPUBDUCLUPDJUDUEUPABUMNUFUOUMAPUGUHUIUHUJ $.
      $( [17-May-1996] $)
  $}

  ${
    $d x y z $.  $d y z D $.  $d z F $.  $d x y R $.  $d y z S $.  $d x ps $.
    $d y ch $.  $d z th $.
    3gencl.1 $e |- ( D e. S <-> E. x e. R A = D ) $.
    3gencl.2 $e |- ( F e. S <-> E. y e. R B = F ) $.
    3gencl.3 $e |- ( G e. S <-> E. z e. R C = G ) $.
    3gencl.4 $e |- ( A = D -> ( ph <-> ps ) ) $.
    3gencl.5 $e |- ( B = F -> ( ps <-> ch ) ) $.
    3gencl.6 $e |- ( C = G -> ( ch <-> th ) ) $.
    3gencl.7 $e |- ( ( x e. R /\ y e. R /\ z e. R ) -> ph ) $.
    $( Implicit substitution for class with embedded variable. $)
    3gencl $p |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) $=
      ( wcel wa wi wceq wrex wex df-rex bitri imbi2d 3expia 2gencl com12 3impia
      cv gencl ) KMUCZNMUCZOMUCZDUTURUSUDZDVACUEVADUEGUPLUCZUTGJOUTJOUFZGLUGVBV
      CUDGUHRVCGLUIUJVCCDVAUAUKVAVBCVBAUEVBBUEVBCUEEFHIKNLMPQHKUFABVBSUKINUFBCV
      BTUKEUPLUCFUPLUCVBAUBULUMUNUQUNUO $.
      $( [17-May-1996] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cgsexg.1 $e |- ( x = A -> ch ) $.
    cgsexg.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsexg $p |- ( A e. V ->
                     ( E. x ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimiv cv wceq elisset eximi syl biimprcd ancld
      eximdv syl5com impbid2 ) EFIZCAJZDKZBUEBDCABHLMUDCDKZBUFUDDNEOZDKUGDEFPUH
      CDGQRBCUEDBCACABHSTUAUBUC $.
      $( [21-Apr-2008] $) $( [26-Aug-2007] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    cgsex2g.1 $e |- ( ( x = A /\ y = B ) -> ch ) $.
    cgsex2g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for general classes. $)
    cgsex2g $p |- ( ( A e. V /\ B e. W ) ->
                     ( E. x E. y ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex biimpa exlimivv cv wceq elisset anim12i eeanv sylibr 2eximi
      syl biimprcd ancld 2eximdv syl5com impbid2 ) FHLZGILZMZCAMZENDNZBUMBDECAB
      KOPULCENDNZBUNULDQFRZEQGRZMZENDNZUOULUPDNZUQENZMUSUJUTUKVADFHSEGISTUPUQDE
      UAUBURCDEJUCUDBCUMDEBCACABKUEUFUGUHUI $.
      $( [26-Jul-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.
    cgsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> ch ) $.
    cgsex4g.2 $e |- ( ch -> ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 4 general classes. $)
    cgsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                    ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) $=
      ( wcel wa wex cv wceq biimpa exlimivv elisset anim12i eeanv sylibr ee4anv
      2eximi syl biimprcd ancld 2eximdv syl5com impbid2 ) HLPZIMPZQZJLPZKMPZQZQ
      ZCAQZGRFRZERDRZBVCBDEVBBFGCABOUAUBUBVACGRFRZERDRZBVDVADSHTZESITZQZFSJTZGS
      KTZQZQZGRFRZERDRZVFVAVIERDRZVLGRFRZQVOUQVPUTVQUQVGDRZVHERZQVPUOVRUPVSDHLU
      CEIMUCUDVGVHDEUEUFUTVJFRZVKGRZQVQURVTUSWAFJLUCGKMUCUDVJVKFGUEUFUDVIVLDEFG
      UGUFVNVEDEVMCFGNUHUHUIBVEVCDEBCVBFGBCACABOUJUKULULUMUN $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x A $.
    ceqsex.1 $e |- ( ps -> A. x ps ) $.
    ceqsex.2 $e |- A e. _V $.
    ceqsex.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsex $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( cv wceq wa wex biimpa exlimi isseti wi wal biimprcd alrimi exintr syl
      mpi impbii ) CHDIZAJZCKZBUDBCEUCABGLMBUCCKZUECDFNBUCAOZCPUFUEOBUGCEUCABGQ
      RUCACSTUAUB $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A $.  $d x ps $.
    ceqsexv.1 $e |- A e. _V $.
    ceqsexv.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexv $p |- ( E. x ( x = A /\ ph ) <-> ps ) $=
      ( ax-17 ceqsex ) ABCDBCGEFH $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    ceqsex2.1 $e |- ( ps -> A. x ps ) $.
    ceqsex2.2 $e |- ( ch -> A. y ch ) $.
    ceqsex2.3 $e |- A e. _V $.
    ceqsex2.4 $e |- B e. _V $.
    ceqsex2.5 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2.6 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2 $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( cv wceq w3a wex wa exbii ceqsex 3anass 19.42v bitri ax-17 anbi2d exbidv
      hban hbex 3bitri ) DNFOZENGOZAPZEQZDQUJUKARZEQZRZDQUKBRZEQZCUMUPDUMUJUNRZ
      EQUPULUSEUJUKAUASUJUNEUBUCSUOURDFUQDEUKBDUKDUDHUGUHJUJUNUQEUJABUKLUEUFTBC
      EGIKMTUI $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.  $d y ch $.
    ceqsex2v.1 $e |- A e. _V $.
    ceqsex2v.2 $e |- B e. _V $.
    ceqsex2v.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex2v.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of two existential quantifiers, using implicit
       substitution.  (Contributed by Scott Fenton, 7-Jun-2006.) $)
    ceqsex2v $p |- ( E. x E. y ( x = A /\ y = B /\ ph ) <-> ch ) $=
      ( ax-17 ceqsex2 ) ABCDEFGBDLCELHIJKM $.
      $( [13-Aug-2011] $) $( [7-Jun-2006] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x ps $.  $d y ch $.
    $d z th $.
    ceqsex3v.1 $e |- A e. _V $.
    ceqsex3v.2 $e |- B e. _V $.
    ceqsex3v.3 $e |- C e. _V $.
    ceqsex3v.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex3v.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex3v.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    $( Elimination of three existential quantifiers, using implicit
       substitution. $)
    ceqsex3v $p |- ( E. x E. y E. z ( ( x = A /\ y = B /\ z = C ) /\ ph )
                 <-> th ) $=
      ( cv wceq wa wex anass 3anass anbi1i df-3an anbi2i 3bitr4i 2exbii 19.42vv
      w3a bitri exbii 3anbi3d 2exbidv ceqsexv ceqsex2v 3bitri ) EQHRZFQIRZGQJRZ
      UIZASZGTFTZETUQURUSAUIZGTFTZSZETURUSBUIZGTFTZDVBVEEVBUQVCSZGTFTVEVAVHFGUQ
      URUSSZSZASUQVIASZSVAVHUQVIAUAUTVJAUQURUSUBUCVCVKUQURUSAUDUEUFUGUQVCFGUHUJ
      UKVDVGEHKUQVCVFFGUQABURUSNULUMUNBCDFGIJLMOPUOUP $.
      $( [16-Aug-2011] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x ps $.  $d y ch $.  $d z th $.  $d w ta $.
    ceqsex4v.1 $e |- A e. _V $.
    ceqsex4v.2 $e |- B e. _V $.
    ceqsex4v.3 $e |- C e. _V $.
    ceqsex4v.4 $e |- D e. _V $.
    ceqsex4v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex4v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex4v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex4v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    $( Elimination of four existential quantifiers, using implicit
       substitution. $)
    ceqsex4v $p |- ( E. x E. y E. z E. w
          ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) /\ ph ) <-> ta ) $=
      ( wceq w3a wex 19.42vv 3anass df-3an anbi2i bitr4i 2exbii 3bitr4i 3anbi3d
      cv wa 2exbidv ceqsex2v 3bitri ) FUMJUBZGUMKUBZUNZHUMLUBZIUMMUBZUNZAUCZIUD
      HUDZGUDFUDURUSVAVBAUCZIUDHUDZUCZGUDFUDVAVBCUCZIUDHUDZEVEVHFGUTVFUNZIUDHUD
      UTVGUNVEVHUTVFHIUEVDVKHIVDUTVCAUNZUNVKUTVCAUFVFVLUTVAVBAUGUHUIUJURUSVGUGU
      KUJVGVAVBBUCZIUDHUDVJFGJKNOURVFVMHIURABVAVBRULUOUSVMVIHIUSBCVAVBSULUOUPCD
      EHILMPQTUAUPUQ $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u E $.  $d x y z w v u F $.  $d x ps $.
    $d y ch $.  $d z th $.  $d w ta $.  $d v et $.  $d u ze $.
    ceqsex6v.1 $e |- A e. _V $.
    ceqsex6v.2 $e |- B e. _V $.
    ceqsex6v.3 $e |- C e. _V $.
    ceqsex6v.4 $e |- D e. _V $.
    ceqsex6v.5 $e |- E e. _V $.
    ceqsex6v.6 $e |- F e. _V $.
    ceqsex6v.7 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex6v.8 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex6v.9 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex6v.10 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex6v.11 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex6v.12 $e |- ( u = F -> ( et <-> ze ) ) $.
    $( Elimination of six existential quantifiers, using implicit
       substitution. $)
    ceqsex6v $p |- ( E. x E. y E. z E. w E. v E. u
          ( ( x = A /\ y = B /\ z = C ) /\ ( w = D /\ v = E /\ u = F ) /\ ph )
                 <-> ze ) $=
      ( cv wceq w3a wex wa 3anass 3exbii 19.42vvv bitri anbi2d 3exbidv ceqsex3v
      3bitri ) HULNUMZIULOUMZJULPUMZUNZKULQUMLULRUMMULSUMUNZAUNZMUOLUOKUOZJUOIU
      OHUOVHVIAUPZMUOLUOKUOZUPZJUOIUOHUOVIDUPZMUOLUOKUOZGVKVNHIJVKVHVLUPZMUOLUO
      KUOVNVJVQKLMVHVIAUQURVHVLKLMUSUTURVMVIBUPZMUOLUOKUOVICUPZMUOLUOKUOVPHIJNO
      PTUAUBVEVLVRKLMVEABVIUFVAVBVFVRVSKLMVFBCVIUGVAVBVGVSVOKLMVGCDVIUHVAVBVCDE
      FGKLMQRSUCUDUEUIUJUKVCVD $.
      $( [21-Sep-2011] $)
  $}

  ${
    $d x y z w v u t s A $.  $d x y z w v u t s B $.  $d x y z w v u t s C $.
    $d x y z w v u t s D $.  $d x y z w v u t s E $.  $d x y z w v u t s F $.
    $d x y z w v u t s G $.  $d x y z w v u t s H $.  $d x ps $.  $d y ch $.
    $d z th $.  $d w ta $.  $d v et $.  $d u ze $.  $d t si $.  $d s rh $.
    ceqsex8v.1 $e |- A e. _V $.
    ceqsex8v.2 $e |- B e. _V $.
    ceqsex8v.3 $e |- C e. _V $.
    ceqsex8v.4 $e |- D e. _V $.
    ceqsex8v.5 $e |- E e. _V $.
    ceqsex8v.6 $e |- F e. _V $.
    ceqsex8v.7 $e |- G e. _V $.
    ceqsex8v.8 $e |- H e. _V $.
    ceqsex8v.9 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsex8v.10 $e |- ( y = B -> ( ps <-> ch ) ) $.
    ceqsex8v.11 $e |- ( z = C -> ( ch <-> th ) ) $.
    ceqsex8v.12 $e |- ( w = D -> ( th <-> ta ) ) $.
    ceqsex8v.13 $e |- ( v = E -> ( ta <-> et ) ) $.
    ceqsex8v.14 $e |- ( u = F -> ( et <-> ze ) ) $.
    ceqsex8v.15 $e |- ( t = G -> ( ze <-> si ) ) $.
    ceqsex8v.16 $e |- ( s = H -> ( si <-> rh ) ) $.
    $( Elimination of eight existential quantifiers, using implicit
       substitution. $)
    ceqsex8v $p |- ( E. x E. y E. z E. w E. v E. u E. t E. s
              ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) )
         /\ ( ( v = E /\ u = F ) /\ ( t = G /\ s = H ) ) /\ ph ) <-> rh ) $=
      ( cv wceq wa w3a 19.42vv 2exbii bitri 3anass df-3an anbi2i bitr4i 3bitr4i
      wex 3anbi3d 4exbidv ceqsex4v 3bitri ) JVBQVCZKVBRVCZVDZLVBSVCZMVBTVCZVDZV
      DZNVBUAVCOVBUBVCVDZPVBUCVCUEVBUDVCVDZVDZAVEZUEVNPVNZOVNNVNZMVNLVNZKVNJVNW
      AWDWFWGAVEZUEVNPVNZOVNNVNZVEZMVNLVNZKVNJVNWFWGEVEZUEVNPVNOVNNVNZIWLWQJKWK
      WPLMWEWMVDZUEVNPVNZOVNNVNZWEWOVDZWKWPXBWEWNVDZOVNNVNXCXAXDNOWEWMPUEVFVGWE
      WNNOVFVHWJXANOWIWTPUEWIWEWHAVDZVDWTWEWHAVIWMXEWEWFWGAVJVKVLVGVGWAWDWOVJVM
      VGVGWOWFWGBVEZUEVNPVNOVNNVNWFWGCVEZUEVNPVNOVNNVNWFWGDVEZUEVNPVNOVNNVNWSJK
      LMQRSTUFUGUHUIVSWMXFNOPUEVSABWFWGUNVOVPVTXFXGNOPUEVTBCWFWGUOVOVPWBXGXHNOP
      UEWBCDWFWGUPVOVPWCXHWRNOPUEWCDEWFWGUQVOVPVQEFGHINOPUEUAUBUCUDUJUKULUMURUS
      UTVAVQVR $.
      $( [23-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex.1 $e |- A e. _V $.
    gencbvex.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    gencbvex $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex excom wb anbi12d bicomd exbii eqcoms ceqsexv simpr eqcom
      19.41v biimpi adantl eximi sylbi adantr ancri impbii bitri 3bitr3i ) FLZG
      MZDBNZNZFOZEOUREOZFOCANZEOUQFOUREFPUSVAEUQVAFGHUQVAQGUOGUOMZVAUQVBCDABJIR
      SUAUBTUTUQFUTUPEOZUQNZUQUPUQEUEVDUQVCUQUCUQVCDVCBDCVBNZEOVCKVEUPEVBUPCVBU
      PGUOUDUFUGUHUIUJUKULUMTUN $.
      $( [8-Jun-2011] $) $( [17-May-1996] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbvex2.1 $e |- A e. _V $.
    gencbvex2.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbvex2.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbvex2.4 $e |- ( th -> E. x ( ch /\ A = y ) ) $.
    $( Restatement of ~ gencbvex with weaker hypotheses.  (Contributed by
       Jeffrey Hankins, 6-Dec-2006.) $)
    gencbvex2 $p |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) $=
      ( cv wceq wa wex biimpac exlimiv impbii gencbvex ) ABCDEFGHIJDCGFLMZNZEOK
      UADETCDJPQRS $.
      $( [6-Dec-2006] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x th $.  $d y ch $.  $d y A $.
    gencbval.1 $e |- A e. _V $.
    gencbval.2 $e |- ( A = y -> ( ph <-> ps ) ) $.
    gencbval.3 $e |- ( A = y -> ( ch <-> th ) ) $.
    gencbval.4 $e |- ( th <-> E. x ( ch /\ A = y ) ) $.
    $( Change of bound variable using implicit substitution. $)
    gencbval $p |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) $=
      ( wi wal wn wa wex cv wceq notbid exanali gencbvex 3bitr3i con4bii ) CALE
      MZDBLFMZCANZOEPDBNZOFPUDNUENUFUGCDEFGHGFQRABISJKUACAETDBFTUBUC $.
      $( [17-May-1996] $)
  $}

  ${
    $d A x $.  $d x y $.
    sbhypf.1 $e |- ( ps -> A. x ps ) $.
    sbhypf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See also ~ csbhypf .  (Contributed by Raph Levien,
       10-Apr-2004.) $)
    sbhypf $p |- ( y = A -> ( [ y / x ] ph <-> ps ) ) $=
      ( cv wceq wa wex wsbc wb vex eqeq1 ceqsexv hbs1 hbbi sbequ12 bicomd
      sylan9bb exlimi sylbir ) DHZEIZCHZUDIZUFEIZJZCKACUDLZBMZUHUECUDDNUFUDEOPU
      IUKCUJBCACDQFRUGUJAUHBUGAUJACDSTGUAUBUC $.
      $( [5-Mar-2008] $) $( 2-Mar-2008] $)
  $}

  ${
    $d x A $.
    vtoclf.1 $e |- ( ps -> A. x ps ) $.
    vtoclf.2 $e |- A e. _V $.
    vtoclf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable.  This is a
       generalization of ~ chvar . $)
    vtoclf $p |- ps $=
      ( cv wceq wex wi isseti biimpd eximi ax-mp 19.36i mpg ) ABCABCECIDJZCKABL
      ZCKCDFMSTCSABGNOPQHR $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ps $.
    vtocl.1 $e |- A e. _V $.
    vtocl.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl.3 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl $p |- ps $=
      ( ax-17 vtoclf ) ABCDBCHEFGI $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    vtocl2.1 $e |- A e. _V $.
    vtocl2.2 $e |- B e. _V $.
    vtocl2.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    vtocl2.4 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl2 $p |- ps $=
      ( wal wi wex cv wceq isseti wa eeanv biimpd 2eximi sylbir 19.36v 19.36aiv
      mp2an exbii mpbi ax-gen mpg ) ADKZBCUIBCABLZDMZCMZUIBLZCMCNEOZCMZDNFOZDMZ
      ULCEGPDFHPUOUQQUNUPQZDMCMULUNUPCDRURUJCDURABISTUAUDUKUMCABDUBUEUFUCADJUGU
      H $.
      $( [8-Jun-2011] $) $( [26-Jul-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    vtocl3.1 $e |- A e. _V $.
    vtocl3.2 $e |- B e. _V $.
    vtocl3.3 $e |- C e. _V $.
    vtocl3.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    vtocl3.5 $e |- ph $.
    $( Implicit substitution of classes for set variables.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    vtocl3 $p |- ps $=
      ( wal wi wex cv wceq isseti w3a eeeanv biimpd 2eximi sylbir 19.36v 2exbii
      eximi mp3an mpbi exbii 19.36aiv gen2 mpg ) AENZDNZBCUOBCUNBOZDPZCPZUOBOZC
      PABOZEPZDPCPZURCQFRZCPZDQGRZDPZEQHRZEPZVBCFISDGJSEHKSVDVFVHTVCVEVGTZEPZDP
      CPVBVCVEVGCDEUAVJVACDVIUTEVIABLUBUGUCUDUHVAUPCDABEUEUFUIUQUSCUNBDUEUJUIUK
      ADEMULUM $.
      $( [8-Jun-2011] $) $( [3-Jun-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclb.1 $e |- A e. _V $.
    vtoclb.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclb.3 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclb.4 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclb $p |- ( ch <-> th ) $=
      ( wb cv wceq bibi12d vtocl ) ABKCDKEFGELFMACBDHINJO $.
      $( [23-Dec-1993] $)
  $}

  ${
    $d y A z $.  $d x z $.  $d y z $.
    vtoclgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgf.4 $e |- ph $.
    $( Implicit substitution of a class for a set variable, with bound-variable
       hypotheses in place of distinct variable restrictions.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    vtoclgf $p |- ( A e. V -> ps ) $=
      ( vz wcel cvv elex cv wceq wex isset hblem hbeleq ax-17 eqeq1 cbvex bitri
      mpbii exlimi sylbi syl ) EFLEMLZBEFNUICOZEPZCQZBUIKOZEPZKQULKERUNUKKCCKEC
      DKEGSTUKKUAUMUJEUBUCUDUKBCHUKABJIUEUFUGUH $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    vtoclg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclg.2 $e |- ph $.
    $( Implicit substitution of a class expression for a set variable. $)
    vtoclg $p |- ( A e. V -> ps ) $=
      ( vy cv wcel ax-17 vtoclgf ) ABCHDEHIDJCKBCKFGL $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x ch $.  $d x th $.
    vtoclbg.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    vtoclbg.2 $e |- ( x = A -> ( ps <-> th ) ) $.
    vtoclbg.3 $e |- ( ph <-> ps ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclbg $p |- ( A e. V -> ( ch <-> th ) ) $=
      ( wb cv wceq bibi12d vtoclg ) ABKCDKEFGELFMACBDHINJO $.
      $( [29-Apr-1994] $)
  $}

  ${
    $d z A $.  $d z B $.  $d z x $.  $d z y $.
    vtocl2gf.1 $e |- ( z e. A -> A. x z e. A ) $.
    vtocl2gf.2 $e |- ( z e. A -> A. y z e. A ) $.
    vtocl2gf.3 $e |- ( z e. B -> A. y z e. B ) $.
    vtocl2gf.4 $e |- ( ps -> A. x ps ) $.
    vtocl2gf.5 $e |- ( ch -> A. y ch ) $.
    vtocl2gf.6 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gf.7 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gf.8 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl2gf $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( wcel cvv elex wi cv ax-17 hbel hbim wceq imbi2d vtoclgf mpan9 ) GISGTSZ
      HJSCGIUAUKBUBUKCUBEFHJMUKCEEFFGTLFUCTSEUDUEOUFEUCHUGBCUKQUHABDFGTKNPRUIUI
      UJ $.
      $( [10-Aug-2013] $) $( [25-Apr-1995] $)
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w y $.  $d w z $.
    vtocl3gf.a $e |- ( w e. A -> A. x w e. A ) $.
    vtocl3gf.b $e |- ( w e. A -> A. y w e. A ) $.
    vtocl3gf.c $e |- ( w e. A -> A. z w e. A ) $.
    vtocl3gf.d $e |- ( w e. B -> A. y w e. B ) $.
    vtocl3gf.e $e |- ( w e. B -> A. z w e. B ) $.
    vtocl3gf.f $e |- ( w e. C -> A. z w e. C ) $.
    vtocl3gf.1 $e |- ( ps -> A. x ps ) $.
    vtocl3gf.2 $e |- ( ch -> A. y ch ) $.
    vtocl3gf.3 $e |- ( th -> A. z th ) $.
    vtocl3gf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gf.7 $e |- ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtocl3gf $p |- ( ( A e. V /\ B e. W /\ C e. X ) -> th ) $=
      ( wcel cvv wa elex wi cv ax-17 hbel hbim wceq imbi2d vtocl2gf mpan9 3impb
      vtoclgf ) ILUHZJMUHZKNUHZDVCIUIUHZVDVEUJDILUKVFBULVFCULVFDULFGHJKMNRSTVFC
      FFHHIUIPHUMUIUHZFUNUOUBUPVFDGGHHIUIQVGGUNUOUCUPFUMJUQBCVFUEURGUMKUQCDVFUF
      URABEHIUIOUAUDUGVBUSUTVA $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x A $.  $d y A $.  $d w y B $.  $d x ps $.  $d y ch $.
    vtocl2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2g.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2g.3 $e |- ph $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2g $p |- ( ( A e. V /\ B e. W ) -> ch ) $=
      ( vw cv wcel ax-17 vtocl2gf ) ABCDEMFGHIMNZFOZDPSEPRGOEPBDPCEPJKLQ $.
      $( [25-Apr-1995] $)
  $}

  ${
    $d y A $.  $d x B z $.
    vtoclgaf.1 $e |- ( y e. A -> A. x y e. A ) $.
    vtoclgaf.2 $e |- ( ps -> A. x ps ) $.
    vtoclgaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclgaf.4 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclgaf $p |- ( A e. B -> ps ) $=
      ( vz wcel cv wi ax-17 hbel hbim wceq eleq1 imbi12d vtoclgf pm2.43i ) EFLZ
      BCMZFLZANUCBNCDEFGUCBCCDKEFGKMFLCOPHQUDERUEUCABUDEFSITJUAUB $.
      $( [11-Jul-2011] $) $( [17-Feb-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x ps $.
    vtoclga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclga.2 $e |- ( x e. B -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclga $p |- ( A e. B -> ps ) $=
      ( vy cv wcel ax-17 vtoclgaf ) ABCHDEHIDJCKBCKFGL $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z C $.  $d x y z D $.
    vtocl2gaf.a $e |- ( z e. A -> A. x z e. A ) $.
    vtocl2gaf.b $e |- ( z e. A -> A. y z e. A ) $.
    vtocl2gaf.c $e |- ( z e. B -> A. y z e. B ) $.
    vtocl2gaf.1 $e |- ( ps -> A. x ps ) $.
    vtocl2gaf.2 $e |- ( ch -> A. y ch ) $.
    vtocl2gaf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2gaf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2gaf.5 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2gaf $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( wcel ax-17 wa cv hbel hblem hban hbim wceq eleq1 anbi1d anbi2d vtocl2gf
      wi imbi12d pm2.43i ) GISZHJSZUAZCDUBZISZEUBZJSZUAZAULUOVAUAZBULUQCULDEFGH
      IJKLMVCBDUOVADDFFGIKFUBZISZDTUCDFEJVDJSZDTUDUENUFUQCEUOUPEEFFGILVEETUCEFF
      HJMVFETUCUEOUFURGUGZVBVCABVGUSUOVAURGIUHUIPUMUTHUGZVCUQBCVHVAUPUOUTHJUHUJ
      QUMRUKUN $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x y A $.  $d w y B $.  $d w x y C $.  $d w x y D $.  $d x ps $.
    $d y ch $.
    vtocl2ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl2ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl2ga.3 $e |- ( ( x e. C /\ y e. D ) -> ph ) $.
    $( Implicit substitution of 2 classes for 2 set variables. $)
    vtocl2ga $p |- ( ( A e. C /\ B e. D ) -> ch ) $=
      ( vw cv wcel ax-17 vtocl2gaf ) ABCDEMFGHIMNZFOZDPSEPRGOEPBDPCEPJKLQ $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d w A $.  $d w B $.  $d w C $.  $d w x y z R $.  $d w x y z S $.
    $d w x y z T $.
    vtocl3gaf.a $e |- ( w e. A -> A. x w e. A ) $.
    vtocl3gaf.b $e |- ( w e. A -> A. y w e. A ) $.
    vtocl3gaf.c $e |- ( w e. A -> A. z w e. A ) $.
    vtocl3gaf.d $e |- ( w e. B -> A. y w e. B ) $.
    vtocl3gaf.e $e |- ( w e. B -> A. z w e. B ) $.
    vtocl3gaf.f $e |- ( w e. C -> A. z w e. C ) $.
    vtocl3gaf.1 $e |- ( ps -> A. x ps ) $.
    vtocl3gaf.2 $e |- ( ch -> A. y ch ) $.
    vtocl3gaf.3 $e |- ( th -> A. z th ) $.
    vtocl3gaf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3gaf.5 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3gaf.6 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3gaf.7 $e |- ( ( x e. R /\ y e. S /\ z e. T ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables. $)
    vtocl3gaf $p |- ( ( A e. R /\ B e. S /\ C e. T ) -> th ) $=
      ( wcel w3a cv wi ax-17 hbel hblem hb3an hbim wceq 3anbi1d imbi12d 3anbi2d
      eleq1 3anbi3d vtocl3gf pm2.43i ) ILUHZJMUHZKNUHZUIZDEUJZLUHZFUJZMUHZGUJZN
      UHZUIZAUKVEVLVNUIZBUKVEVFVNUIZCUKVHDUKEFGHIJKLMNOPQRSTVPBEVEVLVNEEHHILOHU
      JZLUHZEULUMEHFMVRMUHZEULUNEHGNVRNUHZEULUNUOUAUPVQCFVEVFVNFFHHILPVSFULUMFH
      HJMRVTFULUMFHGNWAFULUNUOUBUPVHDGVEVFVGGGHHILQVSGULUMGHHJMSVTGULUMGHHKNTWA
      GULUMUOUCUPVIIUQZVOVPABWBVJVEVLVNVIILVAURUDUSVKJUQZVPVQBCWCVLVFVEVNVKJMVA
      UTUEUSVMKUQZVQVHCDWDVNVGVEVFVMKNVAVBUFUSUGVCVD $.
      $( [10-Aug-2013] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z C $.  $d w x y z D $.
    $d w x y z R $.  $d w x y z S $.  $d x ps $.  $d y ch $.  $d z th $.
    vtocl3ga.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtocl3ga.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    vtocl3ga.3 $e |- ( z = C -> ( ch <-> th ) ) $.
    vtocl3ga.4 $e |- ( ( x e. D /\ y e. R /\ z e. S ) -> ph ) $.
    $( Implicit substitution of 3 classes for 3 set variables. $)
    vtocl3ga $p |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) $=
      ( vw wcel ax-17 cv vtocl3gaf ) ABCDEFGRHIJKLMRUAZHSZETUDFTUDGTUCISZFTUEGT
      UCJSGTBETCFTDGTNOPQUB $.
      $( [20-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocleg.1 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocleg $p |- ( A e. V -> ph ) $=
      ( wcel cv wceq wex elisset exlimiv syl ) CDFBGCHZBIABCDJMABEKL $.
      $( [10-Jan-2004] $)
  $}

  ${
    $d x A $.
    $( Implicit substitution of a class for a set variable.  (Closed theorem
       version of ~ vtoclef .)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    vtoclegft $p |- ( ( A e. B /\ A. x ( ph -> A. x ph ) /\
                   A. x ( x = A -> ph ) ) -> ph ) $=
      ( wcel wal wi cv wceq wex elisset exim pm2.27 19.9t syl9 syl7 syl 3imp )
      CDEZAABFGBFZBHCIZAGBFZASUABJZTUBAGGBCDKUBUCABJZGZUCTAUAABLUCUEUDTAUCUDMAB
      NOPQR $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d x A $.
    vtoclef.1 $e |- ( ph -> A. x ph ) $.
    vtoclef.2 $e |- A e. _V $.
    vtoclef.3 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclef $p |- ph $=
      ( cv wceq wex isseti exlimi ax-mp ) BGCHZBIABCEJMABDFKL $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    vtocle.1 $e |- A e. _V $.
    vtocle.2 $e |- ( x = A -> ph ) $.
    $( Implicit substitution of a class for a set variable. $)
    vtocle $p |- ph $=
      ( cvv wcel vtocleg ax-mp ) CFGADABCFEHI $.
      $( [9-Sep-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    vtoclri.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    vtoclri.2 $e |- A. x e. B ph $.
    $( Implicit substitution of a class for a set variable. $)
    vtoclri $p |- ( A e. B -> ps ) $=
      ( rspec vtoclga ) ABCDEFACEGHI $.
      $( [21-Nov-1994] $)
  $}

  ${
    $d x y $.  $d y A $.
    cla4gft.1 $e |- ( ps -> A. x ps ) $.
    cla4gft.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( A closed version of ~ cla4gf .  (Contributed by Andrew Salmon,
       6-Jun-2011.) $)
    cla4gft $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                      ( A. x ph -> ps ) ) ) $=
      ( wcel cvv cv wceq wb wi wal elex wex issetf hba1 bi1 imim2i eximd syl5bi
      a4s 19.36 syl6ib syl5 ) EFIEJIZCKELZABMZNZCOZACOBNZEFPULUHABNZCQZUMUHUICQ
      ULUOCDEHRULUIUNCUKCSUKUIUNNCUJUNUIABTUAUDUBUCABCGUEUFUG $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d y A z $.  $d x z $.
    cla4gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    cla4gf.2 $e |- ( ps -> A. x ps ) $.
    cla4gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44.  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 12-Aug-2011.) $)
    cla4gf $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( vz wcel cvv wal wi elex wex cv wceq isset hblem ax-17 eqeq1 cbvex bitri
      hbeleq biimpd eximi sylbi 19.36 sylib syl ) EFKELKZACMBNZEFOULABNZCPZUMUL
      CQZERZCPZUOULJQZERZJPURJESUTUQJCCJECDJEGTUEUQJUAUSUPEUBUCUDUQUNCUQABIUFUG
      UHABCHUIUJUK $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)

    $d y A $.
    $( Existential specialization, using implicit substitition. $)
    cla4egf $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( wcel wn wal wex hbn cv wceq notbid cla4gf con2d df-ex syl6ibr ) EFJZBAK
      ZCLZKACMUBUDBUCBKCDEFGBCHNCOEPABIQRSACTUA $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    cla4gv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition.  Compare Theorem
       7.3 of [Quine] p. 44. $)
    cla4gv $p |- ( A e. V -> ( A. x ph -> ps ) ) $=
      ( vy cv wcel ax-17 cla4gf ) ABCGDEGHDICJBCJFK $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition. $)
    cla4egv $p |- ( A e. V -> ( ps -> E. x ph ) ) $=
      ( vy cv wcel ax-17 cla4egf ) ABCGDEGHDICJBCJFK $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla42egv.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 2 quantifiers, using implicit
       substitution. $)
    cla42egv $p |- ( ( A e. V /\ B e. W ) -> ( ps -> E. x E. y ph ) ) $=
      ( wcel wa cv wceq wex elisset anim12i eeanv sylibr biimprcd 2eximdv
      syl5com ) EGJZFHJZKZCLEMZDLFMZKZDNCNZBADNCNUDUECNZUFDNZKUHUBUIUCUJCEGODFH
      OPUEUFCDQRBUGACDUGABISTUA $.
      $( [3-Aug-1995] $)

    $( Specialization with 2 quantifiers, using implicit substitution. $)
    cla42gv $p |- ( ( A e. V /\ B e. W ) -> ( A. x A. y ph -> ps ) ) $=
      ( wcel wa wal wn wex cv wceq notbid cla42egv 2nalexn syl6ibr con4d ) EGJF
      HJKZBADLCLZUBBMZAMZDNCNUCMUEUDCDEFGHCOEPDOFPKABIQRACDSTUA $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z ps $.
    cla43egv.1 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Existential specialization with 3 quantifiers, using implicit
       substitution. $)
    cla43egv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( ps -> E. x E. y E. z ph ) ) $=
      ( wcel w3a cv wceq wex elisset 3anim123i eeeanv biimprcd 2eximdv syl5com
      sylibr eximdv ) FIMZGJMZHKMZNZCOFPZDOGPZEOHPZNZEQZDQCQZBAEQZDQCQUIUJCQZUK
      DQZULEQZNUOUFUQUGURUHUSCFIRDGJREHKRSUJUKULCDETUDBUNUPCDBUMAEUMABLUAUEUBUC
      $.
      $( [12-May-2008] $)

    $( Specialization with 3 quantifiers, using implicit substitution. $)
    cla43gv $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
               ( A. x A. y A. z ph -> ps ) ) $=
      ( wcel w3a wal wn wex cv wceq exnal notbid cla43egv exbii bitr2i syl6ibr
      bitri con4d ) FIMGJMHKMNZBAEOZDOZCOZUHBPZAPZEQZDQZCQZUKPZUMULCDEFGHIJKCRF
      SDRGSERHSNABLUAUBUPUJPZCQUQUOURCUOUIPZDQURUNUSDAETUCUIDTUFUCUJCTUDUEUG $.
      $( [12-May-2008] $)
  $}

  ${
    $d x A $.  $d x ps $.
    cla4v.1 $e |- A e. _V $.
    cla4v.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Rule of specialization, using implicit substitition. $)
    cla4v $p |- ( A. x ph -> ps ) $=
      ( cvv wcel wal wi cla4gv ax-mp ) DGHACIBJEABCDGFKL $.
      $( [22-Jun-1994] $)

    $( Existential specialization, using implicit substitition.  (The proof was
       shortened by Eric Schmidt, 22-Dec-2006.) $)
    cla4ev $p |- ( ps -> E. x ph ) $=
      ( cvv wcel wex wi cla4egv ax-mp ) DGHBACIJEABCDGFKL $.
      $( [22-Dec-2006] $) $( [31-Dec-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    cla4e2v.1 $e |- A e. _V $.
    cla4e2v.2 $e |- B e. _V $.
    cla4e2v.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Existential specialization, using implicit substitition. $)
    cla42ev $p |- ( ps -> E. x E. y ph ) $=
      ( cvv wcel wex wi cla42egv mp2an ) EJKFJKBADLCLMGHABCDEFJJINO $.
      $( [3-Aug-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d A z $.  $d x z $.
    rcla4t.1 $e |- ( ps -> A. x ps ) $.
    $( A closed version of ~ rcla4 .  (Contributed by Andrew Salmon,
       6-Jun-2011.) $)
    rcla4t $p |- ( A. x ( x = A -> ( ph <-> ps ) ) -> ( A e. B ->
                   ( A. x e. B ph -> ps ) ) ) $=
      ( vz cv wceq wb wi wal wcel wral df-ral wa eleq1 adantr simpr ax-17 alimi
      imbi12d ex a2i hbim cla4gft syl syl7bi com34 pm2.43d ) CHZDIZABJZKZCLZDEM
      ZACENZBKUOUPUQUPBUQUKEMZAKZCLZUOUPUPBKZACEOUOULUSVAJZKZCLUPUTVAKKUNVCCULU
      MVBULUMVBULUMPURUPABULURUPJUMUKDEQRULUMSUBUCUDUAUSVACGDEUPBCUPCTFUEGHDMCT
      UFUGUHUIUJ $.
      $( [6-Jun-2011] $)
  $}

  ${
    $d x y A $.  $d x B $.
    rcla4.1 $e |- ( ps -> A. x ps ) $.
    rcla4.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4 $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( vy wral cv wcel wi wal df-ral ax-17 hbim wceq eleq1 imbi12d cla4gf
      pm2.43a syl5bi ) ACEICJZEKZALZCMZDEKZBACENUFUGBUEUGBLCHDEHJDKCOUGBCUGCOFP
      UCDQUDUGABUCDERGSTUAUB $.
      $( [8-Jun-2011] $) $( [19-Apr-2005] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4e $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( vy wcel wa cv wex wrex ax-17 hban wceq eleq1 anbi12d cla4egf anabsi5
      df-rex sylibr ) DEIZBJZCKZEIZAJZCLZACEMUCBUHUGUDCHDEHKDICNUCBCUCCNFOUEDPU
      FUCABUEDEQGRSTACEUAUB $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rcla4v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4v $p |- ( A e. B -> ( A. x e. B ph -> ps ) ) $=
      ( ax-17 rcla4 ) ABCDEBCGFH $.
      $( [24-May-2005] $) $( [26-May-1998] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4cv $p |- ( A. x e. B ph -> ( A e. B -> ps ) ) $=
      ( wcel wral rcla4v com12 ) DEGACEHBABCDEFIJ $.
      $( [2-Feb-2006] $)

    $( Restricted specialization, using implicit substitition. $)
    rcla4va $p |- ( ( A e. B /\ A. x e. B ph ) -> ps ) $=
      ( wcel wral rcla4v imp ) DEGACEHBABCDEFIJ $.
      $( [13-Sep-2005] $)

    $( Restricted specialization, using implicit substitition.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    rcla4cva $p |- ( ( A. x e. B ph /\ A e. B ) -> ps ) $=
      ( wcel wral rcla4v impcom ) DEGACEHBABCDEFIJ $.
      $( [8-Jun-2011] $) $( [26-Jul-2006] $)

    $( Restricted existential specialization, using implicit substitition. $)
    rcla4ev $p |- ( ( A e. B /\ ps ) -> E. x e. B ph ) $=
      ( ax-17 rcla4e ) ABCDEBCGFH $.
      $( [26-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.  $d x ch $.
    rcla4dv.1 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Restricted specialization, using implicit substitition. $)
    rcla4dv $p |- ( ( ph /\ A e. B ) -> ( A. x e. B ps -> ch ) ) $=
      ( wcel wral wi r19.21v cv wb expcom pm5.74d rcla4v syl5bir pm2.86d impcom
      wceq ) EFHZABDFIZCJUAAUBCAUBJABJZDFIUAACJZABDFKUCUDDEFDLETZABCAUEBCMGNOPQ
      RS $.
      $( [17-Feb-2007] $)

    $( Restricted existential specialization, using implicit substitition.
       (Contributed by FL, 17-Apr-2007.) $)
    rcla4edv $p |- ( ( ph /\ A e. B ) -> ( ch -> E. x e. B ps ) ) $=
      ( wcel wrex wi wa cv wceq wb expcom pm5.74d rcla4ev r19.37av syl ex
      pm2.86d impcom ) EFHZACBDFIZJUCACUDUCACJZAUDJZUCUEKABJZDFIUFUGUEDEFDLEMZA
      BCAUHBCNGOPQABDFRSTUAUB $.
      $( [10-May-2008] $) $( [17-Apr-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.
    rcla42.1 $e |- ( ch -> A. x ch ) $.
    rcla42.2 $e |- ( ps -> A. y ps ) $.
    rcla42.3 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42.4 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42 $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( wcel wral cv ax-17 hbral wceq rcla4 ralbidv sylan9 ) FHNAEIOZDHOCEIOZGI
      NBUCUDDFHCDEIEPINDQJRDPFSACEILUATCBEGIKMTUB $.
      $( [9-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x C $.  $d x y D $.  $d x ch $.  $d y ps $.
    rcla42v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla42v.2 $e |- ( y = B -> ( ch <-> ps ) ) $.
    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42v $p |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph ->
                  ps ) ) $=
      ( ax-17 rcla42 ) ABCDEFGHICDLBELJKM $.
      $( [24-May-2005] $) $( [13-Sep-1999] $)

    $( 2-variable restricted specialization, using implicit substitition. $)
    rcla42va $p |- ( ( ( A e. C /\ B e. D ) /\ A. x e. C A. y e. D ph ) ->
                  ps ) $=
      ( wcel wa wral rcla42v imp ) FHLGILMAEINDHNBABCDEFGHIJKOP $.
      $( [18-Jun-2014] $)

    $( 2-variable restricted existential specialization, using implicit
       substitution. $)
    rcla42ev $p |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) $=
      ( wcel w3a wrex wa rcla4ev anim2i 3impb cv wceq rexbidv syl ) FHLZGILZBMU
      CCEINZOZAEINZDHNUCUDBUFUDBOUEUCCBEGIKPQRUGUEDFHDSFTACEIJUAPUB $.
      $( [13-Feb-2007] $) $( [16-Oct-1999] $)
  $}

  ${
    $d z ps $.  $d x ch $.  $d y th $.  $d x y z A $.  $d y z B $.  $d z C $.
    $d x R $.  $d x y S $.  $d x y z T $.
    rcla43v.1 $e |- ( x = A -> ( ph <-> ch ) ) $.
    rcla43v.2 $e |- ( y = B -> ( ch <-> th ) ) $.
    rcla43v.3 $e |- ( z = C -> ( th <-> ps ) ) $.
    $( 3-variable restricted specialization, using implicit substitition. $)
    rcla43v $p |- ( ( A e. R /\ B e. S /\ C e. T ) ->
                  ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) $=
      ( wcel wral cv wceq wi wa ralbidv rcla42v rcla4v sylan9 3impa ) HKQZILQZJ
      MQZAGMRZFLREKRZBUAUHUIUBULDGMRZUJBUKUMCGMREFHIKLESHTACGMNUCFSITCDGMOUCUDD
      BGJMPUEUFUG $.
      $( [10-May-2005] $)

    $( 3-variable restricted existentional specialization, using implicit
       substitition. $)
    rcla43ev $p |- ( ( ( A e. R /\ B e. S /\ C e. T ) /\ ps ) ->
                  E. x e. R E. y e. S E. z e. T ph ) $=
      ( wcel wrex cv wceq w3a wa simpl1 simpl2 rcla4ev rexbidv rcla42ev syl3anc
      3ad2antl3 ) HKQZILQZJMQZUABUBUJUKDGMRZAGMRZFLREKRUJUKULBUCUJUKULBUDULUJBU
      MUKDBGJMPUEUIUNUMCGMREFHIKLESHTACGMNUFFSITCDGMOUFUGUH $.
      $( [25-Jul-2012] $)
  $}

  ${
    $d x A y z $.  $d x B y z $.
    eqvinc.1 $e |- A e. _V $.
    $( A variable introduction law for class equality.  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    eqvinc $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex wi isseti ax-1 eqtr jca eximi pm3.43 mp2b 19.37aiv eqtr2
      ex exlimiv impbii ) BCEZAFZBEZUCCEZGZAHUBUFAUDAHUBUDIZUBUEIZGZAHUBUFIZAHA
      BDJUDUIAUDUGUHUDUBKUDUBUEUCBCLSMNUIUJAUBUDUEONPQUFUBAUCBCRTUA $.
      $( [8-Jun-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    eqvincf.1 $e |- ( y e. A -> A. x y e. A ) $.
    eqvincf.2 $e |- ( y e. B -> A. x y e. B ) $.
    eqvincf.3 $e |- A e. _V $.
    $( A variable introduction law for class equality, using bound-variable
       hypotheses instead of distinct variable conditions. $)
    eqvincf $p |- ( A = B <-> E. x ( x = A /\ x = B ) ) $=
      ( wceq cv wa wex eqvinc hbeleq hban ax-17 eqeq1 anbi12d cbvex bitri ) CDH
      BIZCHZTDHZJZBKAIZCHZUDDHZJZAKBCDGLUCUGBAUAUBAABCEMABDFMNUGBOTUDHUAUEUBUFT
      UDCPTUDDPQRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    alexeq.1 $e |- A e. _V $.
    $( Two ways to express substitution of ` A ` for ` x ` in ` ph ` . $)
    alexeq $p |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) $=
      ( vy cv wceq wa wex wi wal anbi1d exbidv imbi1d albidv sb56 vtoclb bicomi
      eqeq2 ) BFZCGZAHZBIZUAAJZBKZTEFZGZAHZBIUGAJZBKUCUEECDUFCGZUHUBBUJUGUAAUFC
      TSZLMUJUIUDBUJUGUAAUKNOABEPQR $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Equality implies equivalence with substitution. $)
    ceqex $p |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cvv wcel cv wceq wa wex wb 19.8a isset sylibr wi eqeq2 anbi1d exbidv
      bibi2d imbi12d ex wal vex alexeq ax-4 com12 syl5bir impbid vtoclg mpcom )
      CEFZBGZCHZAUMAIZBJZKZUMUMBJUKUMBLBCMNULDGZHZAURAIZBJZKZOUMUPODCEUQCHZURUM
      VAUPUQCULPZVBUTUOAVBUSUNBVBURUMAVCQRSTURAUTURAUTUSBLUAUTURAOZBUBZURAABUQD
      UCUDVEURAVDBUEUFUGUHUIUJ $.
      $( [2-Mar-1995] $)
  $}

  ${
    $d x y A $.
    ceqsexg.1 $e |- ( ps -> A. x ps ) $.
    ceqsexg.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A representation of explicit substitution of a class for a variable,
       inferred from an implicit substitution hypothesis. $)
    ceqsexg $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( vy wb cv wceq wa wex wcel ax-17 hbe1 hbbi ceqex bibi12d biid vtoclgf )
      AAICJDKZALZCMZBICHDEHJDNCOUDBCUCCPFQUBAUDABACDRGSATUA $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d x ps $.
    ceqsexgv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of an existential quantifier, using implicit
       substitution. $)
    ceqsexgv $p |- ( A e. V -> ( E. x ( x = A /\ ph ) <-> ps ) ) $=
      ( ax-17 ceqsexg ) ABCDEBCGFH $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    ceqsrexv.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrexv $p |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) $=
      ( cv wceq wa wrex wcel wex df-rex an12 exbii bitr4i eleq1 anbi12d bianabs
      ceqsexgv syl5bb ) CGZDHZAIZCEJZUCUBEKZAIZIZCLZDEKZBUEUFUDIZCLUIUDCEMUHUKC
      UCUFANOPUJUIBUGUJBICDEUCUFUJABUBDEQFRTSUA $.
      $( [30-Apr-2004] $)

    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrexbv $p |- ( E. x e. B ( x = A /\ ph ) <-> ( A e. B /\ ps ) ) $=
      ( wcel cv wceq wa wrex r19.42v eleq1 adantr pm5.32ri bicomi baib ceqsrexv
      wb rexbiia pm5.32i 3bitr3i ) DEGZCHZDIZAJZJZCEKUCUFCEKZJUHUCBJUCUFCELUGUF
      CEUGUDEGZUFUIUFJUGUFUIUCUEUIUCSAUDDEMNOPQTUCUHBABCDEFRUAUB $.
      $( [14-Mar-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.  $d x y D $.  $d x ps $.  $d y ch $.
    ceqsrex2v.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ceqsrex2v.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Elimination of a restricted existential quantifier, using implicit
       substitution. $)
    ceqsrex2v $p |- ( ( A e. C /\ B e. D ) ->
      ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) $=
      ( wcel cv wceq wa wrex anass rexbii r19.42v ceqsrexv bitri anbi2d rexbidv
      syl5bb sylan9bb ) FHLZDMFNZEMGNZOAOZEIPZDHPZUHBOZEIPZGILCUKUGUHAOZEIPZOZD
      HPUFUMUJUPDHUJUGUNOZEIPUPUIUQEIUGUHAQRUGUNEISUARUOUMDFHUGUNULEIUGABUHJUBU
      CTUDBCEGIKTUE $.
      $( [29-Oct-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel2.1 $e |- A e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel2 $p |- ( A e. B <-> A. x ( x = A -> x e. B ) ) $=
      ( cv wceq wcel wi wal eleq1 ceqsalv bicomi ) AEZBFMCGZHAIBCGZNOABDMBCJKL
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3g $p |- ( B e. V -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) $=
      ( wcel cv wceq wa wex eleq2 ceqsexgv bicomd ) CDEAFZCGBMEZHAIBCEZNOACDMCB
      JKL $.
      $( [13-Aug-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel3.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel3 $p |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) $=
      ( cvv wcel cv wceq wa wex wb clel3g ax-mp ) CEFBCFAGZCHBNFIAJKDABCELM $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    clel4.1 $e |- B e. _V $.
    $( An alternate definition of class membership when the class is a set. $)
    clel4 $p |- ( A e. B <-> A. x ( x = B -> A e. x ) ) $=
      ( cv wceq wcel wi wal eleq2 ceqsalv bicomi ) AEZCFBMGZHAIBCGZNOACDMCBJKL
      $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d y A $.  $d x y $.  $d y ph $.
    $( Restricted quantifier version of Theorem 19.3 of [Margaris] p. 89.  We
       don't need the non-empty class condition of ~ r19.3rzv when there is an
       outer quantifier. $)
    rr19.3v $p |- ( A. x e. A A. y e. A ph <-> A. x e. A ph ) $=
      ( wral cv wceq biidd rcla4v ralimia wcel ax-1 ralrimiv ralimi impbii ) AC
      DEZBDEABDEPABDAACBFZDCFZQGAHIJAPBDAACDARDKLMNO $.
      $( [25-Oct-2012] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  We
       don't need the non-empty class condition of ~ r19.28zv when there is an
       outer quantifier. $)
    rr19.28v $p |- ( A. x e. A A. y e. A ( ph /\ ps )
                      <-> A. x e. A ( ph /\ A. y e. A ps ) ) $=
      ( wa wral cv wcel simpl ralimi wceq biidd rcla4v syl5 wi a1i jcad ralimia
      simpr r19.28av impbii ) ABFZDEGZCEGABDEGZFZCEGUDUFCECHZEIZUDAUEUDADEGUHAU
      CADEABJKAADUGEDHUGLAMNOUDUEPUHUCBDEABTKQRSUFUDCEABDEUAKUB $.
      $( [29-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.
    $( Membership in a class abstraction, using implicit substitition.  (Closed
       theorem version of ~ elabg .)  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    elabgt $p |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) ->
                 ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wceq wb wal wcel cab abid eleq1 syl5bbr bibi1d biimpd a2i ax-17
      wi alimi hbab1 hbel hbbi pm5.5 cla4gf imp sylan2 ) CGZDHZABIZTZCJDEKZUJDA
      CLZKZBIZTZCJZUPULUQCUJUKUPUJUKUPUJAUOBAUIUNKUJUOACMUIDUNNOPQRUAUMURUPUQUP
      CFDEFGDKCSZUOBCCFFDUNUSACFUBUCBCSUDUJUPUEUFUGUH $.
      $( [8-Jun-2011] $) $( [7-Nov-2005] $)
  $}

  ${
    $d ps y $.  $d x A y $.  $d y ph $.
    elabf.1 $e |- ( ps -> A. x ps ) $.
    elabf.2 $e |- A e. _V $.
    elabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition. $)
    elabf $p |- ( A e. { x | ph } <-> ps ) $=
      ( vy cab wcel wb cv ax-17 hbab1 hbel hbbi wceq abid eleq1 syl5bbr vtoclef
      bitr3d ) DACIZJZBKCDUDBCCHHDUCHLDJCMACHNOEPFCLZDQZAUDBAUEUCJUFUDACRUEDUCS
      TGUBUA $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab.1 $e |- A e. _V $.
    elab.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elab $p |- ( A e. { x | ph } <-> ps ) $=
      ( ax-17 elabf ) ABCDBCGEFH $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d y A $.  $d z ph $.  $d x z $.  $d y z $.
    elabgf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elabgf.2 $e |- ( ps -> A. x ps ) $.
    elabgf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44.  This version has bound-variable
       hypotheses in place of distinct variable restrictions. $)
    elabgf $p |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) $=
      ( vz cv cab wcel wb hbab1 hbel hbbi wceq eleq1 bibi12d abid vtoclgf ) CKZ
      ACLZMZANEUDMZBNCDEFGUFBCCDJEUDGACJOPHQUCERUEUFABUCEUDSITACUAUB $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, using implicit substitition.  Compare
       Theorem 6.13 of [Quine] p. 44. $)
    elabg $p |- ( A e. V -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elabgf ) ABCGDEGHDICJBCJFK $.
      $( [14-Apr-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2g $p |- ( A e. V -> ( A e. B <-> ps ) ) $=
      ( wcel cab eleq2i elabg syl5bb ) DEIDACJZIDFIBENDHKABCDFGLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab2.1 $e |- A e. _V $.
    elab2.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab2.3 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab2 $p |- ( A e. B <-> ps ) $=
      ( cvv wcel wb elab2g ax-mp ) DIJDEJBKFABCDEIGHLM $.
      $( [12-Sep-2004] $) $( [13-Sep-1995] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab4g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elab4g.2 $e |- B = { x | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elab4g $p |- ( A e. B <-> ( A e. _V /\ ps ) ) $=
      ( wcel cvv elex elab2g biadan2 ) DEHDIHBDEJABCDEIFGKL $.
      $( [17-Oct-2012] $)
  $}

  ${
    $d y A $.
    elab3gf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elab3gf.2 $e |- ( ps -> A. x ps ) $.
    elab3gf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabgf . $)
    elab3gf $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( wcel cab wb wn elabgf ibi pm2.21 impbid2 ja ) BEFJEACKZJZBLBMTBTBABCDES
      GHINOBTPQABCDEFGHINR $.
      $( [6-Sep-2011] $)
  $}

  ${
    $d x ps $.  $d x y A $.
    elab3g.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction, with a weaker antecedent than
       ~ elabg . $)
    elab3g $p |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) $=
      ( vy cv wcel ax-17 elab3gf ) ABCGDEGHDICJBCJFK $.
      $( [14-Jun-2011] $) $( [29-Aug-2006] $)
  $}

  ${
    $d x ps $.  $d x A $.
    elab3.1 $e |- ( ps -> A e. _V ) $.
    elab3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction using implicit substitution. $)
    elab3 $p |- ( A e. { x | ph } <-> ps ) $=
      ( cvv wcel wi cab wb elab3g ax-mp ) BDGHIDACJHBKEABCDGFLM $.
      $( [10-Nov-2000] $)
  $}

  ${
    $d y A $.  $d y B $.
    elrabf.1 $e |- ( y e. A -> A. x y e. A ) $.
    elrabf.2 $e |- ( y e. B -> A. x y e. B ) $.
    elrabf.3 $e |- ( ps -> A. x ps ) $.
    elrabf.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution.  This version has bound-variable hypotheses in place of
       distinct variable restrictions. $)
    elrabf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( crab wcel cvv wa elex adantr cv cab df-rab eleq2i hbel hban wceq elabgf
      eleq1 anbi12d syl5bb pm5.21nii ) EACFKZLZEMLZEFLZBNZEUIOULUKBEFOPUJECQZFL
      ZANZCRZLUKUMUIUQEACFSTUPUMCDEMGULBCCDDEFGHUAIUBUNEUCUOULABUNEFUEJUFUDUGUH
      $.
      $( [11-Jul-2011] $) $( [21-Sep-2003] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) $=
      ( vy cv wcel ax-17 elrabf ) ABCGDEGHZDICJLEICJBCJFK $.
      $( [21-May-1999] $)

    $( Membership in a restricted class abstraction, using implicit
       substitution. $)
    elrab3 $p |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) $=
      ( crab wcel elrab baib ) DACEGHDEHBABCDEFIJ $.
      $( [5-Oct-2006] $)
  $}

  ${
    $d x ps $.  $d x y A $.  $d x y B $.
    elrab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    elrab2.2 $e |- C = { x e. B | ph } $.
    $( Membership in a class abstraction, using implicit substitution. $)
    elrab2 $p |- ( A e. C <-> ( A e. B /\ ps ) ) $=
      ( wcel crab wa eleq2i elrab bitri ) DFIDACEJZIDEIBKFODHLABCDEGMN $.
      $( [2-Nov-2006] $)
  $}

  ${
    $d x y $.  $d ps y $.
    ralab.1 $e |- ( y = x -> ( ph <-> ps ) ) $.
    $( Universal quantification over a class abstraction.  (Contributed by Jeff
       Madsen, 10-Jun-2010.) $)
    ralab $p |- ( A. x e. { y | ph } ch <-> A. x ( ps -> ch ) ) $=
      ( cab wral cv wcel wi wal df-ral vex elab imbi1i albii bitri ) CDAEGZHDIZ
      SJZCKZDLBCKZDLCDSMUBUCDUABCABETDNFOPQR $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)

    $d A x y $.  $d ph x $.
    $( Universal quantification over a restricted class abstraction.
       (Contributed by Jeff Madsen, 10-Jun-2010.) $)
    ralrab $p |- ( A. x e. { y e. A | ph } ch <-> A. x e. A ( ps -> ch ) ) $=
      ( cv wcel wa cab wral wi wal crab wceq eleq1 anbi12d ralab df-rab 3bitr4i
      raleqi df-ral impexp albii bitr4i ) CDEHZFIZAJZEKZLDHZFIZBJZCMZDNZCDAEFOZ
      LBCMZDFLZUIUMCDEUGUKPUHULABUGUKFQGRSCDUPUJAEFTUBURULUQMZDNUOUQDFUCUNUSDUL
      BCUDUEUFUA $.
      $( [20-Oct-2011] $) $( [10-Jun-2010] $)
  $}

  ${
    $d ps x $.  $d A x $.  $d x y $.
    rexab.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Existential quantification over a class abstraction.  (Contributed by
       Mario Carneiro, 23-Jan-2014.) $)
    rexab $p |- ( E. y e. { x | ph } ch <-> E. y ( ps /\ ch ) ) $=
      ( cab wrex cv wcel wa wex df-rex vex elab anbi1i exbii bitri ) CEADGZHEIZ
      SJZCKZELBCKZELCESMUBUCEUABCABDTENFOPQR $.
      $( [23-Jan-2014] $)
    $( Existential quantification over a class abstraction.  (Contributed by
       Jeff Madsen, 17-Jun-2011.) $)
    rexrab $p |- ( E. y e. { x e. A | ph } ch <-> E. y e. A ( ps /\ ch ) ) $=
      ( wa crab cv wcel elrab anbi1i anass bitri rexbii2 ) CBCHZEADFIZFEJZRKZCH
      SFKZBHZCHUAQHTUBCABDSFGLMUABCNOP $.
      $( [17-Jun-2011] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    cbvab.1 $e |- ( ph -> A. y ph ) $.
    cbvab.2 $e |- ( ps -> A. x ps ) $.
    cbvab.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution.
       (Contributed by Andrew Salmon, 11-Jul-2011.) $)
    cbvab $p |- { x | ph } = { y | ps } $=
      ( vz cab cv wsbc wcel hbsb wceq wb equcoms bicomd sbie sbequ df-clab
      syl5bbr 3bitr4i eqriv ) HACIZBDIZACHJZKBDUFKZUFUDLUFUELAUGCHBDHCFMABDCJZK
      UHUFNUGBADCEDJUHNABABOCDGPQRBCHDSUARAHCTBHDTUBUC $.
      $( [11-Jul-2011] $) $( [10-Jul-2011] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables, using implicit substitution. $)
    cbvabv $p |- { x | ph } = { y | ps } $=
      ( ax-17 cbvab ) ABCDADFBCFEG $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d A w z $.  $d y w $.  $d x w $.  $d ph w $.  $d ps w $.
    cbvrab.1 $e |- ( z e. A -> A. x z e. A ) $.
    cbvrab.2 $e |- ( z e. A -> A. y z e. A ) $.
    cbvrab.3 $e |- ( ph -> A. y ph ) $.
    cbvrab.4 $e |- ( ps -> A. x ps ) $.
    cbvrab.5 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution.  This version has bound-variable hypotheses
       in place of distinct variable conditions.  (Contributed by Andrew
       Salmon, 11-Jul-2011.) $)
    cbvrab $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vw cv wcel wa cab crab wsbc ax-17 hblem hbs1 hban eleq1 sbequ12 anbi12d
      wceq cbvab hbsb sbequ sbie syl6bb eqtri df-rab 3eqtr4i ) CMZFNZAOZCPZDMZF
      NZBOZDPZACFQBDFQURLMZFNZACVCRZOZLPVBUQVFCLUQLSVDVECCELFGTACLUAUBUOVCUFUPV
      DAVEUOVCFUCACLUDUEUGVFVALDVDVEDDELFHTACLDIUHUBVALSVCUSUFZVDUTVEBVCUSFUCVG
      VEACUSRBALDCUIABCDJKUJUKUEUGULACFUMBDFUMUN $.
      $( [11-Jul-2011] $) $( [26-Sep-2003] $)
  $}

  ${
    $d x y z A $.  $d y ph $.  $d x ps $.
    cbvrabv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Rule to change the bound variable in a restricted class abstraction,
       using implicit substitution. $)
    cbvrabv $p |- { x e. A | ph } = { y e. A | ps } $=
      ( vz cv wcel ax-17 cbvrab ) ABCDGEGHEIZCJLDJADJBCJFK $.
      $( [11-Jul-2011] $) $( [26-May-1999] $)
  $}

  ${
    $d w y A $.  $d w x z $.  $d x y $.  $d A z $.
    $( Identity used to create closed-form versions of bound-variable
       hypothesis builders for class expressions.  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    abidhb $p |- ( A. y ( y e. A -> A. x y e. A ) ->
                 { z | A. x z e. A } = A ) $=
      ( vw cv wcel wal wi cab wceq eleq1 albidv cbvabv hba1 impbid2 abbid abid2
      ax-4 3eqtr3g syl5eq ) BFZDGZUCAHZIZBHZCFZDGZAHZCJEFZDGZAHZEJZDUIULCEUGUJK
      UHUKAUGUJDLMNUFUDBJUCBJUMDUFUDUCBUEBOUFUDUCUCASUEBSPQUDULBEUBUJKUCUKAUBUJ
      DLMNBDRTUA $.
      $( [11-Jul-2011] $) $( [10-Nov-2005] $)
  $}

  ${
    $d y w A $.  $d z w B $.  $d y ph $.  $d z ph $.  $d w x y $.  $d x z $.
    hbeqd.1 $e |- ( ph -> A. x ph ) $.
    hbeqd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeqd.3 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbeq . $)
    hbeqd $p |- ( ph -> ( A = B -> A. x A = B ) ) $=
      ( vw cv wcel wal cab wceq wi hba1 hbab alrimiv abidhb a1i eqeq12d 3imtr3d
      hbeq syl albid ) AJKZELZBMZJNZUGFLZBMZJNZOZUNBMZEFOZUPBMUNUOPABCDUJUMUIBJ
      CUHBQRULBJDUKBQRUDUAAUJEUMFACKELZUQBMPZCMUJEOAURCHSBCJETUEADKFLZUSBMPZDMU
      MFOAUTDISBDJFTUEUBZAUNUPBGVAUFUC $.
      $( [17-Feb-2013] $) $( [6-Dec-2005] $)
  $}

  ${
    $d y w A $.  $d z w B $.  $d y ph $.  $d z ph $.  $d w x y $.  $d x z $.
    hbned.1 $e |- ( ph -> A. x ph ) $.
    hbned.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbned.3 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbne . $)
    hbned $p |- ( ph -> ( A =/= B -> A. x A =/= B ) ) $=
      ( wceq wn wal wne hbeqd hbnd df-ne albii 3imtr4g ) AEFJZKZTBLEFMZUABLASBG
      ABCDEFGHINOEFPZUATBUBQR $.
      $( [18-Mar-2013] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y ph $.  $d x y z $.
    hbeld.1 $e |- ( ph -> A. x ph ) $.
    hbeld.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbeld.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbel . $)
    hbeld $p |- ( ph -> ( A e. B -> A. x A e. B ) ) $=
      ( vz cv wcel wal cab wi hba1 hbab wceq alrimiv abidhb syl eleq12d 3imtr3d
      hbel a1i albid ) AIJZDKZBLZIMZUFEKZBLZIMZKZUMBLZDEKZUOBLUMUNNABCCUIULUHBI
      CUGBOPUKBICUJBOPUCUDAUIDULEACJZDKZUQBLNZCLUIDQAURCGRBCIDSTAUPEKZUSBLNZCLU
      LEQAUTCHRBCIESTUAZAUMUOBFVAUEUB $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y z $.  $d y A $.  $d y z ph $.
    hbeleqd.1 $e |- ( ph -> A. x ph ) $.
    hbeleqd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbeleq . $)
    hbeleqd $p |- ( ph -> ( y = A -> A. x y = A ) ) $=
      ( vz cv wcel a17d hbeqd ) ABGCCHZDEAGHLIBJFK $.
      $( [23-Feb-2013] $)
  $}

  ${
    $d y A $.  $d x z $.  $d x y $.  $d z A $.
    dedhb.1 $e |- ( A = { z | A. x z e. A } -> ( ph <-> ps ) ) $.
    dedhb.2 $e |- ps $.
    $( A deduction theorem for converting the inference
       ` |- ( y e. A -> A. x y e. A ) ` => ` |- ph ` into a closed theorem.
       Use ~ hba1 and ~ hbab to eliminate the hypothesis of the substitution
       instance ` ps ` of the inference.  For converting the inference form
       into a deduction form, ~ abidhb is useful. $)
    dedhb $p |- ( A. y ( y e. A -> A. x y e. A ) -> ph ) $=
      ( cv wcel wal wi cab wceq wb abidhb eqcomd syl mpbiri ) DIFJZTCKLDKZABHUA
      FEIFJCKEMZNABOUAUBFCDEFPQGRS $.
      $( [11-Jul-2011] $) $( [8-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x z $.  $d y z $.
    $( Closed theorem form of ~ vtoclgf . $)
    vtoclgft $p |- ( ( ( A. x A. y ( y e. A -> A. x y e. A )
                     /\ A. x ( ps -> A. x ps ) )
                  /\ ( A. x ( x = A -> ( ph <-> ps ) )
                     /\ A. x ph ) /\ A e. V ) -> ps ) $=
      ( vz wcel cv wal wi wa wceq wb cvv elex w3a wex elisset mpbid hba1 hblemd
      3ad2ant3 hba2 ax-4 19.21bi hbeleqd a1i cbvexd ad2antrr 3adant3 bi1 imim2i
      eqeq1 com23 imp alanimi 3ad2ant2 simp1r 19.23t syl mpd syl3an3 ) EFHDIEHZ
      VDCJKZDJZCJZBBCJKCJZLZCIZEMZABNZKZCJACJLZEOHZBEFPVIVNVOQZVKCRZBVPGIZEMZGR
      ZVQVOVIVTVNGEOSUCVIVNVTVQNZVOVGWAVHVNVGVSVKGCVFCUAZVGCGEWBVGCDGEWBVEDCUDV
      GVEDVFCUEUFUBUGVRVJMVSVKNKVGVRVJEUNUHUIUJUKTVPVKBKZCJZVQBKZVNVIWDVOVMAWCC
      VMAWCVMVKABVLABKVKABULUMUOUPUQURVPVHWDWENVGVHVNVOUSVKBCUTVATVBVC $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d y ph $.  $d x y ps $.  $d x y A $.
    eqeu.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( A condition which implies existential uniqueness.  (Contributed by Jeff
       Hankins, 8-Sep-2009.) $)
    eqeu $p |- ( ( A e. B /\ ps /\ A. x ( ph -> x = A ) ) -> E! x ph ) $=
      ( vy wcel cv wceq wi wal w3a wex weu cla4egv imp 3adant3 eqeq2 imbi2d eu3
      albidv 3adant2 ax-17 sylanbrc ) DEHZBACIZDJZKZCLZMACNZAUGGIZJZKZCLZGNZACO
      UFBUKUJUFBUKABCDEFPQRUFUJUPBUFUJUPUOUJGDEULDJZUNUICUQUMUHAULDUGSTUBPQUCAC
      GAGUDUAUE $.
      $( [8-Sep-2009] $)
  $}

  ${
    $d x y A $.
    $( Equality has existential uniqueness. $)
    eueq $p |- ( A e. _V <-> E! x x = A ) $=
      ( vy cv wceq wex wa wi wal cvv wcel weu eqtr3 biantru isset eqeq1 3bitr4i
      gen2 eu4 ) ADZBEZAFZUBUACDZBEZGTUCEHZCIAIZGBJKUAALUFUBUEACTUCBMRNABOUAUDA
      CTUCBPSQ $.
      $( [25-Nov-1994] $)
  $}

  ${
    $d x A $.
    eueq1.1 $e |- A e. _V $.
    $( Equality has existential uniqueness. $)
    eueq1 $p |- E! x x = A $=
      ( cvv wcel cv wceq weu eueq mpbi ) BDEAFBGAHCABIJ $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    eueq2.1 $e |- A e. _V $.
    eueq2.2 $e |- B e. _V $.
    $( Equality has existential uniqueness (split into 2 cases). $)
    eueq2 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) $=
      ( cv wceq wa wn weu eueq1 euanv biimpri mpan2 euorv bianfd eubidv mpbid
      wo notnot1 syl2anc orcom orbi2d syl5bb mpdan id orbi1d pm2.61i ) AABGZCHZ
      IZAJZUJDHZIZTZBKZAUMULTZBKZUQAUMJULBKZUSAUAZAUKBKZUTBCELUTAVBIAUKBMNOUMUL
      BPUBAURUPBURULUMTAUPUMULUCAUMUOULAUMUNVAQUDUERSUMAUOTZBKZUQUMUOBKZVDUMUNB
      KZVEBDFLVEUMVFIUMUNBMNOAUOBPUFUMVCUPBUMAULUOUMAUKUMUGQUHRSUI $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d x ps $.  $d x A $.  $d x B $.  $d x C $.
    eueq3.1 $e |- A e. _V $.
    eueq3.2 $e |- B e. _V $.
    eueq3.3 $e |- C e. _V $.
    eueq3.4 $e |- -. ( ph /\ ps ) $.
    $( Equality has existential uniqueness (split into 3 cases). $)
    eueq3 $p |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( wceq wa wo wn weu con2i eueq1 euanv biimpri bianfd cv pm2.45 imnan jaoi
      w3o wi mpbir mpan2 euorv syl2anc notnot1 orcs orbi12d orbi2d orcom 3orass
      3bitr4g eubidv mpbid pm2.46 olcs orbi1d df-3or syl6bbr mpdan syl6bb orass
      ecase3 ) ABACUAZDKZLZABMZNZVIEKZLZBVIFKZLZUEZCOZAVMBMZVKMZCOZVSAVTNVKCOZW
      BVTAVMANBABUBZABABNZUFABLNJABUCUGZPZUDPAVJCOZWCCDGQWCAWHLAVJCRSUHVTVKCUIU
      JAWAVRCAVKVTMVKVOVQMZMZWAVRAVTWIVKAVMVOBVQAVMVNABVMNZVLUKZULTABVPWFTUMUNV
      TVKUOVKVOVQUPZUQURUSBAVMMZVQMZCOZVSBWNNVQCOZWPWNBAWEVMWFABUTZUDPBVPCOZWQC
      FIQWQBWSLBVPCRSUHWNVQCUIUJBWOVRCBWOVKVOMZVQMVRBWNWTVQBAVKVMVOBAVJWGTBVMVN
      ABWKWLVATUMVBVKVOVQVCVDURUSVMVLVOMZCOZVSVMVOCOZXBVMVNCOZXCCEHQXCVMXDLVMVN
      CRSUHVLVOCUIVEVMXAVRCVMABVOMZMWJXAVRVMAVKXEWIVMAVJWDTVMXEVQVOMWIVMBVQVOVM
      BVPWRTVBVQVOUOVFUMABVOVGWMUQURUSVH $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x A $.
    $( There is at most one set equal to a class. $)
    moeq $p |- E* x x = A $=
      ( cv wceq wmo wex weu wi cvv wcel isset eueq bitr3i biimpi df-mo mpbir )
      ACBDZAEQAFZQAGZHRSRBIJSABKABLMNQAOP $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y ph $.  $d x y ps $.  $d x y A $.  $d x y B $.  $d x y C $.
    moeq3.1 $e |- B e. _V $.
    moeq3.2 $e |- C e. _V $.
    moeq3.3 $e |- -. ( ph /\ ps ) $.
    $( "At most one" property of equality (split into 3 cases).  (The first 2
       hypotheses could be eliminated with longer proof.) $)
    moeq3 $p |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B )
                \/ ( ps /\ x = C ) ) $=
      ( vy cvv wcel cv wceq wa wo wn w3o weu biidd eqeq2 anbi2d 3orbi123d eueq3
      wmo eubidv vex vtoclg eumo syl wi eleq1 mpbii pm2.21 anim2d orim1d 3orass
      wal syl5 3imtr4g alrimiv euimmo mpi pm2.61i ) DKLZACMZDNZOZABPQVFENOZBVFF
      NOZRZCUEZVEVKCSZVLAVFJMZNZOZVIVJRZCSZVMJDKVNDNZVQVKCVSVPVHVIVIVJVJVSVOVGA
      VNDVFUAUBVSVITVSVJTUCUFABCVNEFJUGGHIUDZUHVKCUIUJVEQZVRVLVTWAVKVQUKZCURVRV
      LUKWAWBCWAVHVIVJPZPVPWCPVKVQWAVHVPWCWAVGVOAVGVEWAVOVGVFKLVECUGVFDKULUMVEV
      OUNUSUOUPVHVIVJUQVPVIVJUQUTVAVKVQCVBUJVCVD $.
      $( [23-Apr-1995] $)
  $}

  ${
    $d x y A $.
    mosub.1 $e |- E* x ph $.
    $( "At most one" remains true after substitution. $)
    mosub $p |- E* x E. y ( y = A /\ ph ) $=
      ( cv wceq wmo wal wa wex moeq ax-gen moexexv mp2an ) CFDGZCHABHZCIPAJCKBH
      CDLQCEMPACBNO $.
      $( [9-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Theorem for inferring "at most one." $)
    mo2icl $p |- ( A. x ( ph -> x = A ) -> E* x ph ) $=
      ( vy cvv wcel cv wceq wi wal wmo eqeq2 imbi2d albidv imbi1d wex 19.8a mo2
      ax-17 wn sylibr vtoclg eleq1 mpbii imim2i con3rr3 alimdv alnex exmo sylbi
      vex ori syl6 pm2.61i ) CEFZABGZCHZIZBJZABKZIZAUPDGZHZIZBJZUTIVADCEVBCHZVE
      USUTVFVDURBVFVCUQAVBCUPLMNOVEVEDPUTVEDQABDADSRUAUBUOTZUSATZBJZUTVGURVHBUR
      AUOUQUOAUQUPEFUOBUKUPCEUCUDUEUFUGVIABPZTUTABUHVJUTABUIULUJUMUN $.
      $( [17-Oct-1996] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x y ps $.
    moi2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Consequence of "at most one." $)
    mob2 $p |- ( ( A e. B /\ E* x ph /\ ph ) -> ( x = A <-> ps ) ) $=
      ( vy wcel wmo w3a cv wceq simp3 syl5ibcom wi wa wsbc wal hbs1 sbequ12 imp
      mo4f ax-4 sylbi ax-17 sbhypf anbi2d eqeq2 cla4gv syl5 exp3a 3impia impbid
      imbi12d ) DEHZACIZAJZCKZDLZBUQAUSBUOUPAMFNUOUPABUSOUOUPPABUSUOUPABPZUSOZU
      PAACGKZQZPZURVBLZOZGRZUOVAUPVGCRVGAVCCGACGSACGTUBVGCUCUDVFVAGDEVBDLZVDUTV
      EUSVHVCBAABCGDBCUEFUFUGVBDURUHUNUIUJUAUKULUM $.
      $( [2-Jan-2015] $)

    $( Consequence of "at most one." $)
    moi2 $p |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) $=
      ( wcel wmo wa cv wceq wb mob2 3expa biimprd impr ) DEGZACHZIZABCJDKZSAITB
      QRATBLABCDEFMNOP $.
      $( [29-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.  $d y ph $.  $d x y ps $.
    moi.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    moi.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Equality implied by "at most one." $)
    mob $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ps ) ->
                ( A = B <-> ch ) ) $=
      ( vy wcel wa wceq wb wi cvv w3a cv ax-17 wmo elex hbmo1 hb3an hbim bibi1d
      3anbi3d eqeq1 imbi12d mob2 vtoclgf com12 3expib syl com3r imp 3impib ) EG
      LZFHLZMADUAZBEFNZCOZURUSUTBMZVBPUSVCURVBUSFQLZVCURVBPZPFHUBVDUTBVEURVDUTB
      RZVBVDUTARZDSZFNZCOZPVFVBPDKEGKSELDTVFVBDVDUTBDVDDTADUCBDTUDVBDTUEVHENZVG
      VFVJVBVKABVDUTIUGVKVIVACVHEFUHUFUIACDFQJUJUKULUMUNUOUPUQ $.
      $( [18-Feb-2006] $)

    $( Equality implied by "at most one." $)
    moi $p |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) ->
              A = B ) $=
      ( wcel wa wmo wceq wi w3a mob biimprd 3expia imp3a 3impia ) EGKFHKLZADMZB
      CLEFNZUBUCLBCUDUBUCBCUDOUBUCBPUDCABCDEFGHIJQRSTUA $.
      $( [18-Feb-2006] $)
  $}

  ${
    $d B x y $.  $d A x y $.  $d ph y $.  $d ps x y $.
    morex.1 $e |- B e. _V $.
    morex.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Derive membership from uniqueness.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    morex $p |- ( ( E. x e. A ph /\ E* x ph ) -> ( ps -> B e. A ) ) $=
      ( wmo wrex wcel wi cv wa wex df-rex exancom bitri wal hbmo1 hbe1 hban syl
      mopick alrimi wceq eleq1 imbi12d cla4v sylan2b ancoms ) ACHZACDIZBEDJZKZU
      LUKACLZDJZMZCNZUNULUPAMCNURACDOUPACPQUKURMZAUPKZCRUNUSUTCUKURCACSUQCTUAAU
      PCUCUDUTUNCEFUOEUEABUPUMGUOEDUFUGUHUBUIUJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x ph $.  $d x A $.
    euxfr2.1 $e |- A e. _V $.
    euxfr2.2 $e |- E* y x = A $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr2 $p |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) $=
      ( cv wceq wa wex weu wmo wi 2euswap moani ancom mobii mpbi mpg moeq biidd
      impbii ceqsexv eubii bitri ) BGDHZAIZCJBKZUGBJZCKZACKUHUJUGCLZUHUJMBUGBCN
      AUFIZCLUKUFACFOULUGCAUFPZQRSUGBLZUJUHMCUGCBNULBLUNUFABBDTOULUGBUMQRSUBUIA
      CAABDEUFAUAUCUDUE $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.
    euxfr.1 $e |- A e. _V $.
    euxfr.2 $e |- E! y x = A $.
    euxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    euxfr $p |- ( E! x ph <-> E! y ps ) $=
      ( weu cv wceq wa wex euex ax-mp biantrur 19.41v pm5.32i exbii 3bitr2i
      eubii eumoi euxfr2 bitri ) ACICJEKZBLZDMZCIBDIAUGCAUEDMZALUEALZDMUGUHAUED
      IUHGUEDNOPUEADQUIUFDUEABHRSTUABCDEFUEDGUBUCUD $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d y z w ph $.  $d x z ps $.  $d y z w A $.  $d x z B $.  $d x y w $.
    euind.1 $e |- B e. _V $.
    euind.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    euind.3 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    euind $p |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph )
                 -> E! z A. x ( ph -> z = A ) ) $=
      ( vw wa wceq wi wal wex cv exbii imim2i impexp weu cbvexv isseti biantrur
      19.41v excom bitr3i 3bitri eqeq2 bi2 an31 imbi1i 3bitr3i sylib syl 2alimi
      wb 19.23v albii 19.21v bitri eximdv syl5bi pm4.24 biimpi prth eqtr3 syl56
      imp alanimi com12 syl5 alrimivv adantl eqeq1 imbi2d albidv eu4 sylanbrc )
      ABLZFGMZNZDOCOZACPZLAEQZFMZNZCOZEPZWHAKQZFMZNZCOZLZWEWJMZNZKOEOZWHEUAWCWD
      WIWDWEGMZBLZDPZEPZWCWIWDBDPWREPZBLZDPZXAABCDIUBBXCDXBBEGHUCUDRXDWSEPZDPXA
      XEXCDWRBEUERWSDEUFUGUHWCWTWHEWCWSWGNZDOZCOZWTWHNZWBXFCDWBVTWFWRUQZNZXFWAX
      JVTFGWEUISXKVTWRWFNZNZXFXJXLVTWFWRUJSVTWRLZWFNWSALZWFNXMXFXNXOWFABWRUKULV
      TWRWFTWSAWFTUMUNUOUPXHWTWGNZCOXIXGXPCWSWGDURUSWTWGCUTVAUNVBVCVIWDWQWCWDWP
      EKWNAWONZCOZWDWOWGWLXQCAAALZWGWLLWFWKLWOAXSAVDVEAWFAWKVFWEWJFVGVHVJXRWDWO
      XRWDWONAWOCURVEVKVLVMVNWHWMEKWOWGWLCWOWFWKAWEWJFVOVPVQVRVS $.
      $( [11-Oct-2010] $)
  $}

  $( Restricted unique existence implies restricted existence. $)
  reurex $p |- ( E! x e. A ph -> E. x e. A ph ) $=
    ( cv wcel wa weu wex wreu wrex euex df-reu df-rex 3imtr4i ) BDCEAFZBGOBHABC
    IABCJOBKABCLABCMN $.
    $( [19-Aug-1999] $)

  $( Restricted uniqueness in terms of "at most one." $)
  reu5 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) $=
    ( cv wcel wa weu wex wmo wreu wrex eu5 df-reu df-rex anbi1i 3bitr4i ) BDCEA
    FZBGQBHZQBIZFABCJABCKZSFQBLABCMTRSABCNOP $.
    $( [23-May-1999] $)

  ${
    $d x y A $.  $d y ph $.
    $( A way to express restricted uniqueness. $)
    reu2 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) $=
      ( cv wcel wa weu wex wsbc wceq wi wal wreu wral ax-17 df-ral impexp albii
      3bitr4i wrex eu2 df-reu df-rex 19.21v hbs1 hban eleq1 sbequ12 sbie anbi2i
      anbi12d an4 bitri imbi1i 3bitri imbi2i bitr4i anbi12i ) BEZDFZAGZBHVBBIZV
      BVBBCEZJZGZUTVDKZLZCMZBMZGABDNABDUAZAABVDJZGZVGLZCDOZBDOZGVBBCVBCPUBABDUC
      VKVCVPVJABDUDVPVAVOLZBMVJVOBDQVIVQBVAVDDFZVNLZLZCMVAVSCMZLVIVQVAVSCUEVHVT
      CVHVAVRGZVMGZVGLWBVNLVTVFWCVGVFVBVRVLGZGWCVEWDVBVBWDBCVRVLBVRBPABCUFUGVGV
      AVRAVLUTVDDUHABCUIULUJUKVAAVRVLUMUNUOWBVMVGRVAVRVNRUPSVOWAVAVNCDQUQTSURUS
      T $.
      $( [22-Nov-1994] $)

    $( A way to express restricted uniqueness. $)
    reu6 $p |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) $=
      ( wreu cv wcel wa wceq wb wal wex wi bi1 bi2 adantr impbid ex imim2i imp
      weu wral wrex df-reu df-eu 19.28v wsbc eleq1 sbequ12 anbi12d bibi12d eqid
      eqeq1 tbt simpl sylbir syl6bi a4imv expdimp simpr syl6 a4s jca a5i adantl
      imp3a eleq1a com23 adantll jcai alimi impbii df-ral anbi2i 3bitr4i df-rex
      exbii bitr4i 3bitri ) ABDEBFZDGZAHZBUAWBVTCFZIZJZBKZCLZAWDJZBDUBZCDUCZABD
      UDWBBCUEWGWCDGZWIHZCLWJWFWLCWKWAWHMZHZBKZWKWMBKZHWFWLWKWMBUFWFWOWEWNBWFWK
      WMWEWKBCWDWEWKABWCUGZHZWCWCIZJZWKWDWBWRWDWSWDWAWKAWQVTWCDUHABCUIUJVTWCWCU
      MUKWTWRWKWSWRWCULUNWKWQUOUPUQURWEWMBWEWAWHWEWAHAWDWEWAAWDWBWDNUSWEWDAMZWA
      WEWDWBAWBWDOWAAUTVAPQRVBVCVDWNWEBWNWBWDWMWBWDMWKWMWAAWDWHAWDMWAAWDNSVFVEW
      NWDWBWNWDHWAAWNWDWAWKWDWAMWMWCDVTVGPTWMWDWAAMZWKWMWDXBWMWAWDAWHXAWAAWDOSV
      HTVIVJRQVKVLWIWPWKWHBDVMVNVOVQWICDVPVRVS $.
      $( [20-Oct-2006] $)

    $( A way to express restricted uniqueness. $)
    reu3 $p |- ( E! x e. A ph <->
               ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) $=
      ( wreu wrex cv wceq wi wral wa reurex wb reu6 bi1 ralimi reximi sylbi wex
      wal jca rexex anim2i wcel weu ax-17 eu3 df-reu df-rex df-ral impexp albii
      bitr4i exbii anbi12i 3bitr4i sylibr impbii ) ABDEZABDFZABGZCGHZIZBDJZCDFZ
      KZUSUTVEABDLUSAVBMZBDJZCDFVEABCDNVHVDCDVGVCBDAVBOPQRUAVFUTVDCSZKZUSVEVIUT
      VDCDUBUCVADUDZAKZBUEVLBSZVLVBIZBTZCSZKUSVJVLBCVLCUFUGABDUHUTVMVIVPABDUIVD
      VOCVDVKVCIZBTVOVCBDUJVNVQBVKAVBUKULUMUNUOUPUQUR $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y z A $.  $d y z ph $.  $d x z ps $.
    rmo4.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Restricted "at most one" using implicit substitution. $)
    rmo4 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) $=
      ( cv wcel wa wceq wi wal wral wmo an4 ancom anbi1i impexp albii df-ral
      bitri imbi1i 3bitri r19.21v 3bitr2i eleq1 anbi12d mo4 3bitr4i ) CGZEHZAIZ
      DGZEHZBIZIZUJUMJZKZDLZCLUKABIZUQKZDEMZKZCLULCNVBCEMUSVCCUSUNUKVAKZKZDLVDD
      EMVCURVEDURUNUKIZUTIZUQKVFVAKVEUPVGUQUPUKUNIZUTIVGUKAUNBOVHVFUTUKUNPQUAUB
      VFUTUQRUNUKVARUCSVDDETUKVADEUDUESULUOCDUQUKUNABUJUMEUFFUGUHVBCETUI $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu4 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) $=
      ( wreu wrex cv wcel wa wmo wceq wi wral reu5 rmo4 anbi2i bitri ) ACEGACEH
      ZCIZEJAKCLZKTABKUADIMNDEOCEOZKACEPUBUCTABCDEFQRS $.
      $( [23-Nov-1994] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu7 $p |- ( E! x e. A ph <-> ( E. x e. A ph /\
             E. x e. A A. y e. A ( ps -> x = y ) ) ) $=
      ( vz wreu wrex cv wceq wi wral wa reu3 eqeq1 eqcom syl6bb imbi12d bitri
      cbvralv rexbii imbi2d ralbidv cbvrexv anbi2i ) ACEHACEIZACJZGJZKZLZCEMZGE
      IZNUGBUHDJZKZLZDEMZCEIZNACGEOUMURUGUMBUIUNKZLZDEMZGEIURULVAGEUKUTCDEUOABU
      JUSFUOUJUNUIKUSUHUNUIPUNUIQRSUAUBVAUQGCEUIUHKZUTUPDEVBUSUOBUIUHUNPUCUDUET
      UFT $.
      $( [24-Oct-2006] $)

    $( Restricted uniqueness using implicit substitution. $)
    reu8 $p |- ( E! x e. A ph <-> E. x e. A ( ph /\
                A. y e. A ( ps -> x = y ) ) ) $=
      ( wreu cv wceq wb wral wrex wi wa cbvreuv reu6 wcel ralbii wal syl5bb a1i
      dfbi2 ancom eqcom imbi2i biimt df-ral bi2.04 albii imbi12d bicomd ceqsalv
      vex eleq1 eqcoms 3bitrri syl6bb anbi12d r19.26 syl6rbbr rexbiia 3bitri )
      ACEGBDEGBDHZCHZIZJZDEKZCELABVDVCIZMZDEKZNZCELABCDEFOBDCEPVGVKCEVGBVEMZVEB
      MZNZDEKZVDEQZVKVFVNDEBVEUBRVPVKVLDEKZVMDEKZNZVOVKVJANVPVSAVJUCVPVJVQAVRVJ
      VQJVPVIVLDEVHVEBVDVCUDUERUAVPAVPAMZVRVPAUFVRVCEQZVMMZDSVEWABMZMZDSVTVMDEU
      GWBWDDWAVEBUHUIWCVTDVDCUMWCVTJVDVCVHVTWCVHVPWAABVDVCEUNFUJUKUOULUPUQURTVL
      VMDEUSUTTVAVB $.
      $( [24-Oct-2006] $)
  $}

  ${
    $d x y A $.
    $( A condition allowing swap of uniqueness and existential quantifiers. $)
    2reuswap $p |- ( A. x e. A E* y ( y e. A /\ ph ) ->
                   ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) $=
      ( cv wcel wa wmo wral wal wrex wreu wi wex weu df-reu r19.42v eubii bitri
      df-rex df-ral moanimv albii bitr4i 2euswap exbii 3bitr3i bitr3i 3imtr4g
      an12 sylbi ) CEDFZAGZCHZBDIZBEDFZUMGZCHZBJZACDKZBDLZABDKZCDLZMUOUPUNMZBJU
      SUNBDUAURVDBUPUMCUBUCUDUSUQCNZBOZUQBNZCOZVAVCUQBCUEVAUPUTGZBOVFUTBDPVIVEB
      UPAGZCDKULVJGZCNVIVEVJCDTUPACDQVKUQCULUPAUJUFUGRSVCULVBGZCOVHVBCDPVLVGCVL
      UMBDKVGULABDQUMBDTUHRSUIUK $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d w y z A $.  $d x z B $.  $d w x y z C $.  $d w y z ph $.  $d x z ps $.
    reuind.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuind.2 $e |- ( x = y -> A = B ) $.
    $( Existential uniqueness via an indirect equality. $)
    reuind $p |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) )
         -> A = B ) /\ E. x ( A e. C /\ ph ) )
                 -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) $=
      ( vw wcel wa wceq wi wal wex cv wrex exbii wral wreu eleq1d cbvexv risset
      anbi12d anbi1i rexcom4 r19.41v bitr2i 3bitri eqeq2 imim2i bi2 an31 imbi1i
      wb impexp 3bitr3i sylib syl 2alimi 19.23v an12 eleq1 adantr bitr4i 19.42v
      pm5.32ri bitri albii 19.21v exp3a reximdvai syl5bi imp pm4.24 biimpi prth
      eqtr3 syl56 alanimi com12 syl5 a1d ralrimivv adantl eqeq1 imbi2d sylanbrc
      albidv reu4 ) FHLZAMZGHLZBMZMZFGNZOZDPCPZWNCQZMWNERZFNZOZCPZEHSZXEWNKRZFN
      ZOZCPZMZXBXGNZOZKHUAEHUAZXEEHUBWTXAXFXAXBGNZBMZDQZEHSZWTXFXAWPDQXOEHSZBMZ
      DQZXRWNWPCDCRDRNZWMWOABYBFGHJUCIUFUDWPXTDWOXSBEGHUEUGTXRXPEHSZDQYAXPEDHUH
      YCXTDXOBEHUITUJUKWTXQXEEHWTXBHLZXQXEWTXOWPMZXDOZDPZCPZYDXQMZXEOZWSYFCDWSW
      QXCXOUQZOZYFWRYKWQFGXBULUMYLWQXOXCOZOZYFYKYMWQXCXOUNUMWQXOMZXCOYEWNMZXCOY
      NYFYOYPXCWNWPXOUOUPWQXOXCURYEWNXCURUSUTVAVBYHYIXDOZCPYJYGYQCYGYEDQZXDOYQY
      EXDDVCYRYIXDYRYDXPMZDQYIYEYSDYEWOXPMYSXOWOBVDXPYDWOXOYDWOUQBXBGHVEVFVIVGT
      YDXPDVHVJUPVJVKYIXDCVLVJUTVMVNVOVPXAXNWTXAXMEKHHXAXMYDXGHLMXKWNXLOZCPZXAX
      LXDXIYTCWNWNWNMZXDXIMXCXHMXLWNUUBWNVQVRWNXCWNXHVSXBXGFVTWAWBUUAXAXLUUAXAX
      LOWNXLCVCVRWCWDWEWFWGXEXJEKHXLXDXICXLXCXHWNXBXGFWHWIWKWLWJ $.
      $( [16-Oct-2010] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Russell's Paradox
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( Russell's Paradox.  Proposition 4.14 of [TakeutiZaring] p. 14.

       In the late 1800s, Frege's Axiom of (unrestricted) Comprehension,
       expressed in our notation as ` A e. _V ` , asserted that any collection
       of sets ` A ` is a set i.e. belongs to the universe ` _V ` of all sets.
       In particular, by substituting ` { x | x e/ x } ` (the "Russell class")
       for ` A ` , it asserted ` { x | x e/ x } e. _V ` , meaning that the
       "collection of all sets which are not members of themselves" is a set.
       However, here we prove ` { x | x e/ x } e/ _V ` .  This contradiction
       was discovered by Russell in 1901 (published in 1903), invalidating the
       Comprehension Axiom and leading to the collapse of Frege's system.

       In 1908, Zermelo rectified this fatal flaw by replacing Comprehension
       with a weaker Subset (or Separation) Axiom ~ ssex asserting that ` A `
       is a set only when it is smaller than some other set ` B ` .  However,
       Zermelo was then faced with a "chicken and egg" problem of how to show
       ` B ` is a set, leading him to introduce the set-building axioms of Null
       Set ~ 0ex , Pairing ~ prex , Union ~ uniex , Power Set ~ pwex , and
       Infinity ~ omex to give him some starting sets to work with (all of
       which, before Russell's Paradox, were immediate consequences of Frege's
       Comprehension).  In 1922 Fraenkel strengthened the Subset Axiom with our
       present Replacement Axiom ~ funimaex (whose modern formalization is due
       to Skolem, also in 1922).  Thus in a very real sense Russell's Paradox
       spawned the invention of ZF set theory and completely revised the
       foundations of mathematics!

       Another mainstream formalization of set theory, devised by von Neumann,
       Bernays, and Goedel, uses class variables rather than set variables as
       its primitives.  The axiom system NBG in [Mendelson] p. 225 is suitable
       for a Metamath encoding.  NBG is a conservative extension of ZF in that
       it proves exactly the same theorems as ZF that are expressible in the
       language of ZF. An advantage of NBG is that it is finitely axiomatizable
       - the Axiom of Replacement can be broken down into a finite set of
       formulas that eliminate its wff metavariable.  Finite axiomatizability
       is required by some proof languages (although not by Metamath).  There
       is a stronger version of NBG called Morse-Kelley (axiom system MK in
       [Mendelson] p. 287).

       Russell himself continued in a different direction, avoiding the paradox
       with his "theory of types."  Quine extended Russell's ideas to formulate
       his New Foundations set theory (axiom system NF of [Quine] p. 331).  In
       NF, the collection of all sets is a set, contradicting ZF and NBG set
       theories, and it has other bizarre consequences: when sets become too
       huge (beyond the size of those used in standard mathematics), the Axiom
       of Choice ~ ac4 and Cantor's Theorem ~ canth are provably false!  (See
       ~ ncanth for some intuition behind the latter.)  Recent results (as of
       2014) seem to show that NF is equiconsistent to Z (ZF in which ~ ax-sep
       replaces ~ ax-rep ) with ~ ax-sep restricted to only bounded
       quantifiers.  NF is finitely axiomatizable and can be encoded in
       Metamath using the axioms from T. Hailperin, "A set of axioms for
       logic," _J. Symb.  Logic_ 9:1-19 (1944).

       Under our ZF set theory, every set is a member of the Russell class by
       ~ elirrv (derived from the Axiom of Regularity), so for us the Russell
       class equals the universe ` _V ` (theorem ~ ruv ).  See ~ ruALT for an
       alternate proof of ~ ru derived from that fact. $)
    ru $p |- { x | x e/ x } e/ _V $=
      ( vy cv wnel cab cvv wcel wn wceq wex wb wal pm5.19 df-nel eleq12d notbid
      eleq1 id syl5bb mtbir bibi12d a4v mto abeq2 nex isset mpbir ) ACZUHDZAEZF
      DUJFGZHUKBCZUJIZBJUMBUMUHULGZUIKZALZUPULULGZUQHZKZUQMUOUSABUHULIZUNUQUIUR
      UHULULQUIUHUHGZHUTURUHUHNUTVAUQUTUHULUHULUTRZVBOPSUAUBUCUIAULUDTUEBUJUFTU
      JFNUG $.
      $( [4-Oct-2008] $) $( [7-Aug-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( --- Start of old code before overloading prevention patch. $)
  $(
  @( Extend wff notation to include the proper substitution of a class for a
     set.  This definition "overloads" the previously defined variable
     substitution ~ wsb (where the first argument is a set variable rather
     than a class variable).  We take care to ensure that this new definition
     is a conservative extension.  Read this notation as "the proper
     substitution of class ` A ` for set variable ` x ` in wff ` ph ` ." @)
  wsbc @a wff [ A / x ] ph @.
  $)
  $( --- End of old code before overloading prevention patch. $)

  $( Define the proper substitution of a class for a set.

     When ` A ` is a proper class, our definition evaluates to false.  This is
     somewhat arbitrary: we could have, instead, chosen the conclusion of
     ~ sbc6 for our definition, which always evaluates to true for proper
     classes.

     Our definition also does not produce the same results as discussed in the
     proof of Theorem 6.6 of [Quine] p. 42 (although Theorem 6.6 itself does
     hold, as shown by ~ dfsbcq below).  For example, if ` A ` is a proper
     class, Quine's substitution of ` A ` for ` y ` in ` 0 e. y ` evaluates to
     ` 0 e. A ` rather than our falsehood.  (This can be seen by substituting
     ` A ` , ` y ` , and ` 0 ` for for alpha, beta, and gamma in Subcase 1 of
     Quine's discussion on p. 42.)  Unfortunately, Quine's definition requires
     a recursive structural breakdown of ` ph ` , and it does not seem possible
     to express it with a single closed formula.

     In order to allow for a possible alternate but conflicting definition in
     the future, we will not commit to any specific proper class behavior.
     Instead, we will use this definition _only_ to prove theorem ~ dfsbcq ,
     which holds for both our definition and Quine's, and from which we can
     derive a weaker version of ~ df-sbc in the form of ~ sbc8g .

     The theorem ~ sbc2or shows the apparently "strongest" statement we can
     make regarding behavior at proper classes if we start from ~ dfsbcq .

     Note: this definition extends or "overloads" ~ df-sb which (via
     ~ df-clab ) becomes a special case of it, so a careful metalogical
     soundness justification, outside of Metamath, is needed for complete
     rigor; alternately, we could treat this definition as a new axiom.  We
     also could have used a different symbol to avoid metalogical
     justification, but this would require reproving a lot of uses of ~ df-sb .

     The related definition ~ df-csb defines proper substitution into a class
     variable (as opposed to a wff variable). $)
  df-sbc $a |- ( [ A / x ] ph <-> A e. { x | ph } ) $.

  $( This theorem, which is similar to Theorem 6.7 of [Quine] p. 42 and holds
     under both our definition and Quine's, provides us with a weak definition
     of the proper substitution of a class for a set, which we will use in
     place of ~ df-sbc above.  We will derive all our results from starting
     from here instead of ~ df-sbc .  As a consequence, we can derive ~ sbc8g ,
     which is a weaker version of ~ df-sbc that leaves substitution undefined
     when ` A ` is a proper class.  We thus leave unspecified the "official"
     behavior for proper classes.

     While in principle we could have made this theorem the official
     definition, we use ~ df-sbc because it is more obviously eliminable and
     thus easier to justify metalogically.  But to avoid conflict with Quine,
     we never use ~ df-sbc except indirectly via this theorem. $)
  dfsbcq $p |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) $=
    ( wceq cab wcel wsbc eleq1 df-sbc 3bitr4g ) CDECABFZGDLGABCHABDHCDLIABCJABD
    JK $.
    $( [14-Apr-1995] $)

  $( Equality theorem for class substitution. $)
  sbceq1a $p |- ( x = A -> ( ph <-> [ A / x ] ph ) ) $=
    ( cv wsbc wceq sbid dfsbcq syl5bbr ) AABBDZEJCFABCEABGABJCHI $.
    $( [26-Sep-2003] $)

  ${
    $d ph y $.  $d A y $.  $d x y $.
    $( Specialization: if a formula is true for all sets, it is true for any
       class which is a set.  Similar to Theorem 6.11 of [Quine] p. 44.  See
       also ~ stdpc4 and ~ ra4sbc . $)
    a4sbc $p |- ( A e. V -> ( A. x ph -> [ A / x ] ph ) ) $=
      ( vy wal wsbc wi cv wceq stdpc4 dfsbcq syl5ib vtocleg ) ABFZABCGZHECDOABE
      IZGQCJPABEKABQCLMN $.
      $( [16-Jan-2004] $)
  $}

  ${
    sbcth.1 $e |- ph $.
    $( A substitution into a theorem remains true (when ` A ` is a set). $)
    sbcth $p |- ( A e. V -> [ A / x ] ph ) $=
      ( wcel wal wsbc ax-gen a4sbc mpi ) CDFABGABCHABEIABCDJK $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcthdv.1 $e |- ( ph -> ps ) $.
    $( Deduction version of ~ sbcth .  (The proof was shortened by Andrew
       Salmon, 8-Jun-2011.) $)
    sbcthdv $p |- ( ( ph /\ A e. V ) -> [ A / x ] ps ) $=
      ( wal wcel wsbc alrimiv a4sbc mpan9 ) ABCGDEHBCDIABCFJBCDEKL $.
      $( [8-Jun-2011] $) $( [30-Nov-2005] $)
  $}

  ${
    $d x z $.  $d y A z $.  $d ph z $.
    hbsbc1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for class substitution.  (The
       antecedent ensures that ` A ` is a set, which is necessary if we
       restrict ourselves to using only the "weak" class substitution
       definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions were
       removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbc1g $p |- ( A e. V -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) $=
      ( vz wsbc wal wi cv wceq dfsbcq hblem hbeleq albid syl5ib sylbird vtocleg
      hbs1 ) ABDHZUABIZJGDEGKZDLZUAABUCHZUBABUCDMZUEUEBIUDUBABGTUDUEUABBGDBCGDF
      NOUFPQRS $.
      $( [11-Jul-2011] $) $( [11-Oct-2004] $)

    ${
      $d x V $.  $d V z $.
      $( Bound-variable hypothesis builder for class substitution.  (The
         antecedent ensures that ` A ` is a set, which is necessary if we
         restrict ourselves to using only the "weak" class substitution
         definition ~ dfsbcq .)  (Unnecessary distinct variable restrictions
         were removed by Andrew Salmon, 8-Jun-2011.) $)
      hbsbc1g2 $p |- ( ( A e. V -> [ A / x ] ph ) ->
                        A. x ( A e. V -> [ A / x ] ph ) ) $=
        ( vz wcel wsbc cv ax-17 hbel hbsbc1g hbim1 ) DEHABDIBBCGDEFGJEHBKLABCDE
        FMN $.
        $( [11-Jul-2011] $) $( [23-Aug-1993] $)
    $}

    $( Bound-variable hypothesis builder for class substitution, "strong" form
       using the definition instead of ~ dfsbcq .  (Contributed by Mario
       Carneiro, 7-Dec-2014.) $)
    hbsbc1 $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vz wsbc cab wcel df-sbc hbab1 hbel hbxfrbi ) ABDGDABHZIBABDJBCFDNEABFKL
      M $.
      $( [7-Dec-2014] $)
  $}

  ${
    $d x A y $.
    hbsbcv.1 $e |- A e. _V $.
    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Andrew Salmon, 8-Jun-2011.) $)
    hbsbc1v $p |- ( [ A / x ] ph -> A. x [ A / x ] ph ) $=
      ( vy cvv wcel wsbc wal wi cv ax-17 hbsbc1g ax-mp ) CFGABCHZOBIJDABECFEKCG
      BLMN $.
      $( [8-Jun-2011] $) $( [18-Aug-1993] $)
  $}

  ${
    $d w z A $.  $d w y $.  $d w x $.  $d w ph $.
    hbsbc.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbsbc.2 $e |- ( ph -> A. x ph ) $.
    $( Bound-variable hypothesis builder for class substitution. $)
    hbsbc $p |- ( [ A / y ] ph -> A. x [ A / y ] ph ) $=
      ( vw wsbc cab wcel df-sbc hbab hbel hbxfrbi ) ACEIEACJZKBACELBDHEPFABCHGM
      NO $.
      $( [7-Sep-2014] $)

    $( Bound-variable hypothesis builder for class substitution.  (The proof
       was shortened by Eric Schmidt, 17-Jan-2007.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 11-Jul-2011.) $)
    hbsbcg $p |- ( A e. V -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) $=
      ( vw cv wsbc wal wi wceq dfsbcq hblem hbeleq albid imbi12d hbsb vtoclg )
      ACIJZKZUCBLZMACEKZUEBLZMIEFUBENZUCUEUDUFACUBEOZUGUCUEBBIEBDIEGPQUHRSACIBH
      TUA $.
      $( [11-Jul-2011] $) $( [17-Nov-2005] $)
  $}

  ${
    $d x z $.  $d z A $.  $d y z ph $.
    $( A composition law for class substitution. $)
    sbccog $p |- ( A e. V -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) $=
      ( vz cv wsbc dfsbcq ax-17 sbco2 vtoclbg ) ABCGHZCFGZHABNHMCDHABDHFDEMCNDI
      ABNDIABFCACJKL $.
      $( [26-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d A y $.
    sbcco2.1 $e |- ( x = y -> A = B ) $.
    $( A composition law for class substitution.  Importantly, ` x ` may occur
       free in the class expression substituted for ` A ` .  (The proof was
       shortened by Andrew Salmon, 8-Jun-2011.) $)
    sbcco2 $p |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) $=
      ( wsbc ax-17 cv wceq wb equcoms dfsbcq bicomd syl sbie ) ABEGZABDGZCBRCHC
      IBIJDEJZQRKSBCFLSRQABDEMNOP $.
      $( [8-Jun-2011] $) $( [5-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    sbc5g $p |- ( A e. V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) $=
      ( vy cv wsbc wceq wa wex dfsbcq eqeq2 anbi1d exbidv sb5 vtoclbg ) ABEFZGB
      FZQHZAIZBJABCGRCHZAIZBJECDABQCKQCHZTUBBUCSUAAQCRLMNABEOP $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    $( The disjunction of two equivalences for class substitution does not
       require a class existence hypothesis.  This theorem tells us that there
       are only 2 possibilities for ` [ A / x ] ph ` behavior at proper
       classes, matching the ~ sbc5 (false) and ~ sbc6 (true) conclusions.
       This is interesting since ~ dfsbcq (from which it is derived) does not
       say anything obvious about that.  Note that this theorem doesn't tell us
       that it is always one or the other at proper classes; it could "flip"
       between false (the first disjunct) and true (the second disjunct) as a
       function of ` ph ` and ` A ` . $)
    sbc2or $p |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/
                  ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb wi wal wo sbc5g orcd pm5.15 mpbii con3i
      wn vex eleq1 adantr nexdv pm2.21d alrimiv 2thd bibi2d orbi2d pm2.61i ) CD
      EZABCFZBGZCHZAIZBJZKZULUNALZBMZKZNZUKUQUTABCDOPUKTZUQULUPTZKZNVAULUPQVBVD
      UTUQVBVCUSULVBVCUSVBUOBUOUKUNUKAUNUMDEUKBUAUMCDUBRZUCSUDVBURBVBUNAUNUKVES
      UEUFUGUHUIRUJ $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.
    $( An equivalence for class substitution.  (The proof was shortened by
       Andrew Salmon, 8-Jun-2011.) $)
    sbc6g $p |- ( A e. V -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) $=
      ( wcel wsbc cv wceq wa wex wi wal sbc5g hbe1 ceqex ceqsalg bitr4d ) CDEAB
      CFBGCHZAIZBJZRAKBLABCDMATBCDSBNABCOPQ $.
      $( [8-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x A $.
    sbc5.1 $e |- A e. _V $.
    $( An equivalence for class substitution. $)
    sbc5 $p |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) $=
      ( cvv wcel wsbc cv wceq wa wex wb sbc5g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x A $.
    sbc6.1 $e |- A e. _V $.
    $( An equivalence for class substitution.  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    sbc6 $p |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) $=
      ( cvv wcel wsbc cv wceq wi wal wb sbc6g ax-mp ) CEFABCGBHCIAJBKLDABCEMN
      $.
      $( [18-Jan-2007] $) $( [23-Aug-1993] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( An equivalence for class substitution in the spirit of ~df-clab .  Note
       that ` x ` and ` A ` don't have to be distinct. $)
    sbc7g $p |- ( A e. V -> ( [ A / x ] ph
                     <-> E. y ( y = A /\ [ y / x ] ph ) ) ) $=
      ( wcel wsb wsbc cv wceq wa wex sbccog sbc5g bitr3d ) DEFABCGZCDHABDHCIDJP
      KCLABCDEMPCDENO $.
      $( [18-Nov-2008] $)

    $( This is the closest we can get to ~ df-sbc if we start from ~ dfsbcq
       (see its comments).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbc8g $p |- ( A e. V -> ( [ A / x ] ph <-> A e. { x | ph } ) ) $=
      ( vy cv wsbc cab wcel dfsbcq eleq1 df-clab bicomi vtoclbg ) ABEFZGZOABHZI
      ZABCGCQIECDABOCJOCQKRPAEBLMN $.
      $( [29-Jun-2011] $) $( [18-Nov-2008] $)
  $}

  ${
    cbvsbc.1 $e |- ( ph -> A. y ph ) $.
    cbvsbc.2 $e |- ( ps -> A. x ps ) $.
    cbvsbc.3 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change bound variables in a wff substitution.  (Contributed by Jeff
       Hankins, 19-Sep-2009.)  (The proof was shortened by Andrew Salmon,
       8-Jun-2011.) $)
    cbvsbc $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( wcel cab wsbc wb cbvab eleq2i a1i sbc8g 3bitr4d ) EFJZEACKZJZEBDKZJZACE
      LBDELUAUCMSTUBEABCDGHINOPACEFQBDEFQR $.
      $( [25-Aug-2011] $) $( [19-Sep-2009] $)
  $}

  ${
    $d y ph $.  $d x ps $.
    cbvsbcv.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( Change the bound variable of a class substitution using implicit
       substitution. $)
    cbvsbcv $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / y ] ps ) ) $=
      ( ax-17 cbvsbc ) ABCDEFADHBCHGI $.
      $( [25-Aug-2011] $) $( [30-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y ps $.
    $( Conversion of implicit substitution to explicit class substitution,
       using a bound-variable hypothesis instead of distinct variables.
       (Closed theorem version of ~ sbciegf .) $)
    sbciegft $p |- ( ( A e. V /\ A. x ( ps -> A. x ps ) /\
              A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi cv wceq wb w3a wsbc wa 3ad2ant1 imim2i alimi biimpa 3adant1
      sylan2 wex sbc5g bi1 imp3a 19.23t sylbid bi2 com23 19.21t sylibrd impbid
      sbc6g ) DEFZBBCGHCGZCIDJZABKZHZCGZLZACDMZBUSUTUOANZCUAZBUMUNUTVBKURACDEUB
      OUNURVBBHZUMURUNVABHZCGZVCUQVDCUQUOABUPABHUOABUCPUDQUNVEVCVABCUERTSUFUSBU
      OAHZCGZUTUNURBVGHZUMURUNBVFHZCGZVHUQVICUQUOBAUPBAHUOABUGPUHQUNVJVHBVFCUIR
      TSUMUNUTVGKURACDEULOUJUK $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x V $.
    sbciegf.1 $e |- ( A e. V -> ( ps -> A. x ps ) ) $.
    sbciegf.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbciegf $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel wal wi wsbc wb alrimiv cv wceq ax-gen sbciegft 3exp mpii mpd ) DEH
      ZBBCIJZCIZACDKBLZUAUBCFMUAUCCNDOABLJZCIZUDUECGPUAUCUFUDABCDEQRST $.
      $( [14-Dec-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcieg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcieg $p |- ( A e. V -> ( [ A / x ] ph <-> ps ) ) $=
      ( wcel cvv wsbc wb elex a17d sbciegf syl ) DEGDHGZACDIBJDEKABCDHOBCLFMN
      $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ps $.
    sbcie.1 $e |- A e. _V $.
    sbcie.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbcie $p |- ( [ A / x ] ph <-> ps ) $=
      ( cvv wcel wsbc wb sbcieg ax-mp ) DGHACDIBJEABCDGFKL $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d x A $.
    sbcied.1 $e |- ( ph -> A e. V ) $.
    sbcied.2 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    ${
      sbciedf.3 $e |- ( ph -> A. x ph ) $.
      sbciedf.4 $e |- ( ch -> A. x ch ) $.
      $( Conversion of implicit substitution to explicit class substitution,
         deduction form. $)
      sbciedf $p |- ( ph -> ( [ A / x ] ps <-> ch ) ) $=
        ( wcel wal wi cv wceq wb wsbc ax-gen a1i ex alrimi sbciegft syl3anc ) A
        EFKCCDLMZDLZDNEOZBCPZMZDLBDEQCPGUEAUDDJRSAUHDIAUFUGHTUABCDEFUBUC $.
        $( [29-Dec-2014] $)
    $}

    $d x ph $.  $d x ch $.
    $( Conversion of implicit substitution to explicit class substitution,
       deduction form. $)
    sbcied $p |- ( ph -> ( [ A / x ] ps <-> ch ) ) $=
      ( ax-17 sbciedf ) ABCDEFGHADICDIJ $.
      $( [13-Dec-2014] $)
  $}

  ${
    $d x A $.  $d x ph $.  $d x ch $.
    sbcied2.1 $e |- ( ph -> A e. V ) $.
    sbcied2.2 $e |- ( ph -> A = B ) $.
    sbcied2.3 $e |- ( ( ph /\ x = B ) -> ( ps <-> ch ) ) $.
    $( Conversion of implicit substitution to explicit class substitution,
       deduction form. $)
    sbcied2 $p |- ( ph -> ( [ A / x ] ps <-> ch ) ) $=
      ( cv wceq wb id sylan9eqr syldan sbcied ) ABCDEGHADKZELZRFLBCMSAREFSNIOJP
      Q $.
      $( [13-Dec-2014] $)
  $}

  ${
    $d z w A $.  $d y z w B $.  $d z ph $.  $d x z w $.
    elrabsf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Membership in a restricted class abstraction, expressed with explicit
       class substitution.  (The variation ~ elrabf has implicit
       substitution).  The hypothesis specifies that ` x ` must not be a free
       variable in ` B ` . $)
    elrabsf $p |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) $=
      ( vz vw crab wcel cv wsbc wa ax-17 hbs1 sbequ12 cbvrab cvv syl pm5.32i wi
      eleq2i hbsbc1g2 wceq sbceq1a wb wex 19.8a isset sylibr biimt bitrd elrabf
      elex bitr4i sbccog 3bitri ) DABEIZJDABGKZLZGEIZJZDEJZUTGDLZMZVCABDLZMURVA
      DAUTBGCEFCKEJGNAGNABGOABGPQUBVBVCDRJZVDUAZMVEUTVHGHDEHKZDJGNZVIEJGNUTGHDR
      VJUCUSDUDZUTVDVHUTGDUEVKVGVDVHUFZVKVKGUGVGVKGUHGDUIUJVGVDUKZSULUMVCVDVHVC
      VGVLDEUNVMSTUOVCVDVFABGDEUPTUQ $.
      $( [30-Sep-2003] $)
  $}

  ${
    $d x y $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution.  Theorem 6.13 of [Quine] p. 44. $)
    elabs2 $p |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) $=
      ( vy cab wcel cvv crab wsbc wa rabab eleq2i cv ax-17 elrabsf bitr3i ) CAB
      EZFCABGHZFCGFABCIJRQCABKLABDCGDMGFBNOP $.
      $( [7-Mar-2004] $)
  $}

  $( Membership in a class abstraction, expressed in terms of class
     substitution.  Conveniently, this theorem has no distinct variable
     restrictions.  Except for the antecedent, this theorem is "almost" like
     ~ df-sbc but was proved using only ~ dfsbcq as its starting point (making
     no other reference to ~ df-sbc ).  We prefer not to make direct reference
     to ~ df-sbc (i.e. commit to it) since its behavior at proper classes is at
     odds with Quine, whereas ~ dfsbcq is not.  (Quine's class substitution
     cannot be expressed in closed form.)  This theorem serves as a weaker
     Quine-compatible substitute for ~ df-sbc . $)
  elabsg $p |- ( A e. V -> ( A e. { x | ph } <-> [ A / x ] ph ) ) $=
    ( wcel cvv cab wsbc wb elex elabs2 baib syl ) CDECFEZCABGEZABCHZICDJONPABCK
    LM $.
    $( [4-Nov-2005] $)

  ${
    elabs.1 $e |- A e. _V $.
    $( Membership in a class abstraction, expressed in terms of class
       substitution. $)
    elabsbc $p |- ( A e. { x | ph } <-> [ A / x ] ph ) $=
      ( cab wcel cvv wsbc elabs2 mpbiran ) CABEFCGFABCHDABCIJ $.
      $( [7-Mar-2004] $)
  $}

  ${
    $d x y B $.  $d y A $.
    $( Substitution applied to an atomic wff.  Set theory version of ~ eqsb3 .
       (Contributed by Andrew Salmon, 29-Jun-2011.) $)
    eqsbc3 $p |- ( A e. V -> ( [ A / x ] x = B <-> A = B ) ) $=
      ( vy cv wceq wsbc dfsbcq eqeq1 eqsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDMAN
      BINBCJEACKL $.
      $( [29-Jun-2011] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y ph $.  $d y ps $.
    $( Move negation in and out of class substitution. $)
    sbcng $p |- ( A e. V -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) $=
      ( vy wn cv wsbc dfsbcq wceq notbid sbn vtoclbg ) AFZBEGZHABOHZFNBCHABCHZF
      ECDNBOCIOCJPQABOCIKABELM $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over implication. $)
    sbcimg $p |- ( A e. V ->
           ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) $=
      ( vy wi cv wsbc dfsbcq wceq imbi12d sbim vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Distribution of class substitution over conjunction. $)
    sbcang $p |- ( A e. V ->
           ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) $=
      ( vy wa cv wsbc dfsbcq wceq anbi12d sban vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over disjunction. $)
    sbcorg $p |- ( A e. V ->
           ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) $=
      ( vy wo cv wsbc dfsbcq wceq orbi12d sbor vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [21-May-2004] $)

    $( Distribution of class substitution over biconditional.  (Contributed by
       Raph Levien, 10-Apr-2004.) $)
    sbcbig $p |- ( A e. V ->
         ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) $=
      ( vy wb cv wsbc dfsbcq wceq bibi12d sbbi vtoclbg ) ABGZCFHZIACPIZBCPIZGOC
      DIACDIZBCDIZGFDEOCPDJPDKQSRTACPDJBCPDJLABCFMN $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x z A $.  $d x y z $.  $d z ph $.
    $( Move universal quantifier in and out of class substitution. $)
    sbcalg $p |- ( A e. V -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) $=
      ( vz wal cv wsbc dfsbcq wceq albidv sbal vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [16-Jan-2004] $)

    $( Move existential quantifier in and out of class substitution. $)
    sbcexg $p |- ( A e. V -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) $=
      ( vz wex cv wsbc dfsbcq wceq exbidv sbex vtoclbg ) ABGZCFHZIACPIZBGOCDIAC
      DIZBGFDEOCPDJPDKQRBACPDJLABCFMN $.
      $( [21-May-2004] $)
  $}

  ${
    $d x B $.  $d x A $.
    $( Set theory version of ~ sbeqal1 .  (Contributed by Andrew Salmon,
       28-Jun-2011.) $)
    sbceqal $p |- ( A e. V -> ( A. x ( x = A -> x = B ) -> A = B ) ) $=
      ( wcel cv wceq wi wal wsbc a4sbc sbcimg wb eqsbc3 mpbiri pm5.5 syl 3bitrd
      eqid sylibd ) BDEZAFZBGZUBCGZHZAIUEABJZBCGZUEABDKUAUFUCABJZUDABJZHZUIUGUC
      UDABDLUAUHUJUIMUAUHBBGBSABBDNOUHUIPQABCDNRT $.
      $( [28-Jun-2011] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Theorem *14.121 in [WhiteheadRussell] p. 185.  (Contributed by Andrew
       Salmon, 28-Jun-2011.)  (The proof was shortened by Wolf Lammen,
       9-May-2013.) $)
    sbeqalb $p |- ( A e. V -> ( ( A. x ( ph <-> x = A ) /\ A. x ( ph <->
      x = B ) ) -> A = B ) ) $=
      ( cv wceq wb wal wa wi wcel bibi1 biimpa biimpd alanimi sbceqal syl5 ) AB
      FZCGZHZBIASDGZHZBIJTUBKZBICELCDGUAUCUDBUAUCJTUBUAUCTUBHATUBMNOPBCDEQR $.
      $( [9-May-2013] $) $( [9-Jun-2011] $)
  $}

  ${
    sbcbid.1 $e |- ( ph -> A. x ph ) $.
    sbcbid.2 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution. $)
    sbcbid $p |- ( ph -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( cab wcel wsbc abbid eleq2d df-sbc 3bitr4g ) AEBDHZIECDHZIBDEJCDEJAOPEAB
      CDFGKLBDEMCDEMN $.
      $( [29-Dec-2014] $)

    $( Formula-building deduction rule for class substitution. $)
    sbcbidg $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( wcel wsbc wb wal alrimi a4sbc syl5 sbcbig sylibd impcom ) EFIZABDEJCDEJ
      KZSABCKZDEJZTAUADLSUBAUADGHMUADEFNOBCDEFPQR $.
      $( [26-Feb-2005] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Formula-building deduction rule for class substitution. $)
    sbcbidv $p |- ( ph -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( ax-17 sbcbid ) ABCDEADGFH $.
      $( [29-Dec-2014] $)

    $( Formula-building deduction rule for class substitution.  (The proof was
       shortened by Eric Schmidt, 17-Jan-2007.) $)
    sbcbidgv $p |- ( ( ph /\ A e. V ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) $=
      ( ax-17 sbcbidg ) ABCDEFADHGI $.
      $( [18-Jan-2007] $) $( [11-Oct-2004] $)
  $}

  ${
    sbcbii.1 $e |- ( ph <-> ps ) $.
    $( Formula-building inference rule for class substitution. $)
    sbcbii $p |- ( A e. V -> ( [ A / x ] ph <-> [ A / x ] ps ) ) $=
      ( cvv wceq wcel wsbc wb eqid a1i sbcbidgv mpan ) GGHZDEIACDJBCDJKGLPABCDE
      ABKPFMNO $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x C $.  $d x A $.
    $( ~ eqsbc3 with set variable on right side of equals sign.  This proof was
       automatically generated from the virtual deduction proof ~ eqsbc3rVD
       using a translation program.  (Contributed by Alan Sare,
       24-Oct-2011.) $)
    eqsbc3r $p |- ( A e. B -> ( [ A / x ] C = x <-> C = A ) ) $=
      ( wcel wceq wsbc eqcom sbcbii biimpd eqsbc3 sylibd syl6ib syl6ibr sylibrd
      cv idd impbid ) BCEZDAPZFZABGZDBFZSUBBDFZUCSUBTDFZABGZUDSUBUFUAUEABCDTHIZ
      JABDCKZLBDHZMSUCUFUBSUCUDUFSUCUCUDSUCQUINUHOUGOR $.
      $( [24-Oct-2011] $)
  $}

  ${
    $d y ch $.  $d y ps $.  $d y ph $.  $d y A $.  $d x y $.
    $( Distribution of class substitution over triple conjunction.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbc3ang $p |- ( A e. V -> ( [ A / x ] ( ph /\ ps /\ ch ) <->
                ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) $=
      ( vy w3a cv wsbc dfsbcq wceq 3anbi123d sb3an vtoclbg ) ABCHZDGIZJADQJZBDQ
      JZCDQJZHPDEJADEJZBDEJZCDEJZHGEFPDQEKQELRUASUBTUCADQEKBDQEKCDQEKMABCDGNO
      $.
      $( [29-Jun-2011] $) $( [14-Dec-2006] $)
  $}

  ${
    $d y z A $.  $d x y B $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel1gv $p |- ( A e. V -> ( [ A / x ] x e. B <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq1 clelsb3 vtoclbg ) AFCGZAEFZHNCGMABHBCGEBDM
      ANBINBCJEACKL $.
      $( [29-Jun-2006] $) $( [17-Nov-2006] $)
  $}

  ${
    $d y z B $.  $d x y A $.
    $( Class substitution into a membership relation.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    sbcel2gv $p |- ( B e. V -> ( [ B / x ] A e. x <-> A e. B ) ) $=
      ( vy cv wcel wsbc dfsbcq eleq2 ax-17 sbie vtoclbg ) BAFZGZAEFZHBPGZOACHBC
      GECDOAPCIPCBJOQAEQAKNPBJLM $.
      $( [29-Jun-2011] $) $( [17-Nov-2006] $)
  $}

  ${
    $d x B $.
    sbcth2.1 $e |- ( x e. B -> ph ) $.
    $( A substitution into a theorem. $)
    sbcth2 $p |- ( A e. B -> [ A / x ] ph ) $=
      ( wcel wsbc cv wi sbcth sbcimg sbcel1gv imbi1d bitrd mpbid pm2.43i ) CDFZ
      ABCGZQBHDFZAIZBCGZQRIZTBCDEJQUASBCGZRIUBSABCDKQUCQRBCDDLMNOP $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d y ph $.  $d x y z $.
    hbsbc1gd.1 $e |- ( ph -> A. x ph ) $.
    hbsbc1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbsbc1g .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbc1gd $p |- ( ( ph /\ A e. V ) ->
                   ( [ A / x ] ps -> A. x [ A / x ] ps ) ) $=
      ( vz wcel cvv wsbc wal wi elex wa cv cab wb 3syl wceq alrimiv abidhb hba1
      eleq1 biimpar hbab hbsbc1g syl dfsbcq adantr a1d a17d hbeld hband anabsi5
      albid 3imtr3d sylan2 ) EFJAEKJZBCELZVACMZNEFOAUTPZBCIQEJZCMZIRZLZVGCMZVAV
      BVCVFKJZVGVHNAVIUTADQZEJZVKCMNZDMZVFEUAZVIUTSAVLDHUBZCDIEUCZVFEKUETUFBCDV
      FKVECIDVDCUDUGUHUIAVGVASZUTAVMVNVQVOVPBCVFEUJTUKZVCVGVACAUTVCCMAAUTCAACMA
      GULACDEKGHAVJKJCUMUNUOUPVRUQURUS $.
      $( [26-Jun-2011] $) $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d z ph $.  $d w x z $.
    hbsbcgd.1 $e |- ( ph -> A. x ph ) $.
    hbsbcgd.2 $e |- ( ph -> A. y ph ) $.
    hbsbcgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbsbcgd.4 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    $( Deduction version of ~ hbsbcg .  (The proof was shortened by Andrew
       Salmon, 21-Jun-2011.) $)
    hbsbcgd $p |- ( ( ph /\ A e. V ) ->
                 ( [ A / y ] ps -> A. x [ A / y ] ps ) ) $=
      ( vw wcel cvv wsbc wal wi cv wb 3syl elex cab wceq alrimiv abidhb biimpar
      wa eleq1 hba1 hbab hbsbcg syl dfsbcq adantr ax-4 impbid2 sbcbidg a1d a17d
      bitrd hbeld hband anabsi5 albid 3imtr3d sylan2 ) FGMAFNMZBDFOZVHCPZQFGUAA
      VGUGZBCPZDLRFMZCPZLUBZOZVOCPZVHVIVJVNNMZVOVPQAVQVGAERZFMZVSCPQZEPZVNFUCZV
      QVGSAVTEJUDZCELFUEZVNFNUHTUFVKCDEVNNVMCLEVLCUIUJBCUIUKULVJVOVKDFOZVHAVOWE
      SZVGAWAWBWFWCWDVKDVNFUMTUNAVKBDFNIAVKBBCUOKUPUQUTZVJVOVHCAVGVJCPAAVGCAACP
      AHURACEFNHJAVRNMCUSVAVBVCWGVDVEVF $.
      $( [21-Jun-2011] $) $( [23-Nov-2005] $)
  $}

  ${
    $d x ph $.
    sbcimdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Substitution analog of Theorem 19.20 of [Margaris] p. 90. $)
    sbcimdv $p |- ( ( ph /\ A e. V ) ->
                     ( [ A / x ] ps -> [ A / x ] ch ) ) $=
      ( wcel wsbc wi wal alrimiv a4sbc syl5 sbcimg sylibd impcom ) EFHZABDEICDE
      IJZRABCJZDEIZSATDKRUAATDGLTDEFMNBCDEFOPQ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    sbcgf.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in a wff does not affect it.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcgf $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( vy cv wsbc dfsbcq wceq biidd sbf vtoclbg ) ABFGZHAABCHAFCDABNCINCJAKABF
      ELM $.
      $( [29-Jun-2011] $) $( [11-Oct-2004] $)
  $}

  ${
    $d x ph $.
    $( Substitution for a variable not occurring in a wff does not affect it.
       Distinct variable form of ~ sbcgf .  (Contributed by Alan Sare,
       10-Nov-2012.) $)
    sbcg $p |- ( A e. V -> ( [ A / x ] ph <-> ph ) ) $=
      ( ax-17 sbcgf ) ABCDABEF $.
      $( [10-Nov-2012] $)
  $}

  ${
    sbc19.21g.1 $e |- ( ph -> A. x ph ) $.
    $( Substitution for a variable not free in antecedent affects only the
       consequent. $)
    sbc19.21g $p |- ( A e. V ->
                    ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) $=
      ( wcel wi wsbc sbcimg sbcgf imbi1d bitrd ) DEGZABHCDIACDIZBCDIZHAPHABCDEJ
      NOAPACDEFKLM $.
      $( [11-Oct-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x V $.  $d y W $.
    sbc2iegf.1 $e |- ( ps -> A. x ps ) $.
    sbc2iegf.2 $e |- ( ps -> A. y ps ) $.
    sbc2iegf.3 $e |- ( B e. W -> A. x B e. W ) $.
    sbc2iegf.4 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    sbc2iegf $p |- ( ( A e. V /\ B e. W ) ->
                     ( [ A / x ] [ B / y ] ph <-> ps ) ) $=
      ( wcel wa simpl cv wceq wb adantll ax-17 wsbc sbciedf hban ) EGMZFHMZNADF
      UAZBCEGUDUEOUECPEQZUFBRUDUEUGNZABDFHUEUGOUGDPFQABRUELSUHDTJUBSUDUECUDCTKU
      CIUB $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ps $.
    sbc2ie.1 $e |- A e. _V $.
    sbc2ie.2 $e |- B e. _V $.
    sbc2ie.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2ie $p |- ( [ A / x ] [ B / y ] ph <-> ps ) $=
      ( cvv wcel wsbc wb ax-17 hbth sbc2iegf mp2an ) EJKFJKZADFLCELBMGHABCDEFJJ
      BCNBDNRCHOIPQ $.
      $( [19-Dec-2013] $) $( [16-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y ph $.  $d x y ch $.
    sbc2iedv.1 $e |- A e. _V $.
    sbc2iedv.2 $e |- B e. _V $.
    sbc2iedv.3 $e |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) $.
    $( Conversion of implicit substitution to explicit class substitution. $)
    sbc2iedv $p |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) $=
      ( wsbc wi cvv wcel wb ax-17 sbc19.21g ax-mp cv wceq sbcbii impcom sbc2ie
      wa pm5.74da 3bitr3ri pm5.74ri ) ABEGKZDFKZCABLZEGKZDFKZAUHLZDFKZACLZAUILZ
      FMNZULUNOHUKUMDFMGMNUKUMOIABEGMAEPQRUARUJUODEFGHIDSFTESGTUDZABCAURBCOJUBU
      EUCUQUNUPOHAUHDFMADPQRUFUG $.
      $( [16-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d z C $.  $d x y z ps $.
    sbc3ie.1 $e |- A e. _V $.
    sbc3ie.2 $e |- B e. _V $.
    sbc3ie.3 $e |- C e. _V $.
    sbc3ie.4 $e |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) $.
    $( Conversion of implicit substitution to explicit class substitution.
       (Contributed by Mario Carneiro, 19-Jun-2014.) $)
    sbc3ie $p |- ( [ A / x ] [ B / y ] [ C / z ] ph <-> ps ) $=
      ( wsbc cv wceq wa cvv wcel a1i wb 3expa sbcied sbc2ie ) AEHMBCDFGIJCNFOZD
      NGOZPZABEHQHQRUFKSUDUEENHOABTLUAUBUC $.
      $( [29-Dec-2014] $) $( [19-Jun-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y V $.  $d x W $.
    $( Lemma for ~ sbccomg . $)
    sbccomglem $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( wcel wa wsbc cv wceq wex wb sbc5g sbcbidgv ancoms adantr excom exbii
      exdistr an12 19.42v bitri 3bitr3i adantl bitr2d syl5bb 3bitrd ) DFHZEGHZI
      ZACEJZBDJZCKELZAIZCMZBDJZBKDLZUQIBMZABDJZCEJZUKUJUNURNUKUMUQBDFACEGOPQUJU
      RUTNUKUQBDFORUTUOUSAIZBMZIZCMZULVBUSUPIZCMBMVGBMZCMUTVFVGBCSUSUPBCUAVHVEC
      VHUOVCIZBMVEVGVIBUSUOAUBTUOVCBUCUDTUEULVBVDCEJZVFUJVAVDCEGABDFOPUKVJVFNUJ
      VDCEGOUFUGUHUI $.
      $( [14-Nov-2005] $)
  $}

  ${
    $d w y z A $.  $d w x z B $.  $d w z ph $.  $d x y $.
    $( Commutative law for double class substitution.  (The proof was shortened
       by Eric Schmidt, 17-Jan-2007.) $)
    sbccomg $p |- ( ( A e. V /\ B e. W ) ->
                 ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) $=
      ( vw vz wcel cvv wsbc wb elex cv sbccog vex sbccomglem mpan2 sbcbidgv wa
      adantr sbcom2 sbcbii bitr3d ancoms 3bitrd adantl 3bitr3rd syl2an ) DFJDKJ
      ZEKJZACELZBDLZABDLZCELZMEGJDFNEGNUKULUAZACHOZLZHELZBIOZLZIDLZUTBDLZUPUNUK
      VCVDMULUTBIDKPUBUQVCABVALZIDLZCURLZHELZVFCELZUPUQVCVECURLZHELZIDLZVJIDLZH
      ELVHULUKVCVLMULVBVKIDKULUSBVALZHELZVBVKULVAKJVOVBMIQUSHBEVAKKRSVNVJHEKACH
      BIUCUDUETUFVJIHDEKKRUKVMVGHEKUKURKJVMVGMHQVEICDURKKRSTUGULVHVIMUKVFCHEKPU
      HUKVFUOCEKABIDKPTUGULUKVDUNMULUTUMBDKACHEKPTUFUIUJ $.
      $( [18-Jan-2007] $) $( [15-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w x B $.  $d w V $.  $d w ph $.  $d x y $.  $d w y z $.
    $( Interchange class substitution and restricted quantifier.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       22-Feb-2010.) $)
    sbcralt $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel cv wal wi wral wsbc wceq wb sbc6g adantr a4s cvv ralcom4 albidv
      wa eleq1 imbi12d a4v adantl hbeleqd a5i r19.21t syl syl5rbb bitrd r19.21v
      vex albii bitr2i syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog
      hba1 3bitr3d ) EGIZDJZEIZVJCKZLZDKZUCZCKZACFMZBHJZNZHENZABVQNZHENZCFMZVPB
      ENZABENZCFMVOVTCFMZHENZVQEOZVTLZHKZCFMZVSWBVOWFWGWELZHKZWJVNWFWLPZCVHWMVM
      WEHEGQRSWJWHCFMZHKVOWLWHCHFUAVOWNWKHVOWGWGCKLZCKWNWKPVNWOCVOCHEVNCVFZVNVQ
      EIZWQCKZLZCVMWSVHVLWSDHVIVQOZVJWQVKWRVIVQEUDZWTVJWQCXAUBUEUFUGSUHUIWGVTCF
      UJUKUBULUMVNVSWFPZCVHXBVMVRWEHEGVQTIZVRWEPHUOXCVRBJVQOZALZBKZCFMZWEXCVRXD
      VPLZBKZXGVPBVQTQXGXECFMZBKXIXECBFUAXJXHBXDACFUNUPUQURXCVTXFCFABVQTQUSUTVA
      VBRSVOWAWICFWPVNWAWIPZCVHXKVMVTHEGQRSVCVDVNVSWCPZCVHXLVMVPBHEGVERSVOWAWDC
      FWPVNWAWDPZCVHXMVMABHEGVERSVCVG $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 22-Feb-2010.) $)
    sbcrext $p |- ( A. y ( A e. V /\ A. z ( z e. A -> A. y z e. A ) ) ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel cv wal wrex wsbc wn wral wb dfrex2 sbcng bitrd adantr a4s sbcralt
      wi wa sbcbii hba1 ralbid notbid syl6bbr ) EGHZDIEHZUJCJUBDJZUCZCJZACFKZBE
      LZABELZMZCFNZMZUPCFKUMUOAMZCFNZBELZMZUSULUOVCOZCUIVDUKUIUOVAMZBELVCUNVEBE
      GACFPUDVABEGQRSTUMVBURUMVBUTBELZCFNURUTBCDEFGUAUMVFUQCFULCUEULVFUQOZCUIVG
      UKABEGQSTUFRUGRUPCFPUH $.
      $( [22-Feb-2010] $) $( [1-Mar-2008] $)
  $}

  $( MAY BE REVISED - may be deleted $)
  ${
    $d w z A $.  $d x w B $.  $d w z V $.  $d w ph $.  $d x y z w $.
    sbcralgf.1 $e |- ( A. y A e. V -> ( z e. A -> A. y z e. A ) ) $.
    $( Interchange class substitution and restricted quantifier. $)
    sbcralgf $p |- ( A. y A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vw wcel wal wral cv wsbc wceq wi wb sbc6g a4s cvv ralcom4 ax-17 hbeleqd
      hba1 hblemd a5i r19.21t syl albidv syl5rbb bitrd vex r19.21v albii bitr2i
      syl6bb ralbidv bitr4d ax-mp sbcbii ralbid 3bitr4d sbccog 3bitr3d ) EGJZCK
      ZACFLZBIMZNZIENZABVHNZIENZCFLZVGBENZABENZCFLVFVKCFLZIENZVHEOZVKPZIKZCFLZV
      JVMVFVQVRVPPZIKZWAVEVQWCQCVPIEGRSWAVSCFLZIKVFWCVSCIFUAVFWDWBIVFVRVRCKPZCK
      WDWBQVEWECVFCIEVECUDZVFCDIEWFVFDUBHUEUCUFVRVKCFUGUHUIUJUKVEVJVQQCVIVPIEGV
      HTJZVIVPQIULWGVIBMVHOZAPZBKZCFLZVPWGVIWHVGPZBKZWKVGBVHTRWKWICFLZBKWMWICBF
      UAWNWLBWHACFUMUNUOUPWGVKWJCFABVHTRUQURUSUTSVFVLVTCFWFVEVLVTQCVKIEGRSVAVBV
      EVJVNQCVGBIEGVCSVFVLVOCFWFVEVLVOQCABIEGVCSVAVD $.
      $( [1-Mar-2008] $)

    $( Interchange class substitution and restricted existential quantifier. $)
    sbcrexgf $p |- ( A. y A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( wcel wal wrex wsbc wn wral wb dfrex2 sbcbii sbcng bitrd a4s hba1 ralbid
      sbcralgf notbid syl6bbr ) EGIZCJZACFKZBELZABELZMZCFNZMZUJCFKUGUIAMZCFNZBE
      LZMZUMUFUIUQOCUFUIUOMZBELUQUHURBEGACFPQUOBEGRSTUGUPULUGUPUNBELZCFNULUNBCD
      EFGHUCUGUSUKCFUFCUAUFUSUKOCABEGRTUBSUDSUJCFPUE $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d y z A $.  $d x B $.  $d x y z $.  $d ph z $.  $d B z $.
    $( Interchange class substitution and restricted quantifier.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcralg $p |- ( A e. V ->
                 ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) $=
      ( vz wral cv wsbc wceq ralbidv wcel ax-17 hbs1 hbral sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted existential quantifier.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcrexg $p |- ( A e. V ->
                 ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) $=
      ( vz wrex cv wsbc wceq rexbidv wcel ax-17 hbs1 hbrex sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [29-Jun-2011] $) $( [15-Nov-2005] $)

    $( Interchange class substitution and restricted uniqueness quantifier. $)
    sbcreug $p |- ( A e. V ->
                 ( [ A / x ] E! y e. B ph <-> E! y e. B [ A / x ] ph ) ) $=
      ( vz wreu cv wsbc wceq reubidv wcel ax-17 hbs1 hbreu sbequ12 sbie vtoclbg
      dfsbcq ) ACEHZBGIZJABUBJZCEHZUABDJABDJZCEHGDFUABUBDTUBDKUCUECEABUBDTLUAUD
      BGUCBCECIEMBNABGOPBIUBKAUCCEABGQLRS $.
      $( [24-Feb-2013] $)
  $}

  ${
    $d y w A $.  $d w z B $.  $d w ph $.  $d x y $.  $d w x z $.
    sbcabel.1 $e |- ( z e. B -> A. x z e. B ) $.
    $( Interchange class substitution and class abstraction. $)
    sbcabel $p |- ( A e. V -> ( [ A / x ] { y | ph } e. B <->
                  { y | [ A / x ] ph } e. B ) ) $=
      ( vw wcel cvv cab wsbc wb cv wceq wa wex df-clel wal sbcbii sbcexg sbcang
      elex abeq2 sbcalg sbcbig ax-17 sbcgf bibi1d albidv 3bitrd syl6bbr anbi12d
      bitrd hblem exbidv syl ) EGJEKJZACLZFJZBEMZABEMZCLZFJZNEGUDUSVBIOZVDPZVFF
      JZQZIRZVEUSVBVFUTPZVHQZIRZBEMVLBEMZIRVJVAVMBEKIUTFSUAVLIBEKUBUSVNVIIUSVNV
      KBEMZVHBEMZQVIVKVHBEKUCUSVOVGVPVHUSVOCOVFJZVCNZCTZVGUSVOVQANZCTZBEMVTBEMZ
      CTVSVKWABEKACVFUEUAVTCBEKUFUSWBVRCUSWBVQBEMZVCNVRVQABEKUGUSWCVQVCVQBEKVQB
      UHUIUJUOUKULVCCVFUEUMVHBEKBDIFHUPUIUNUOUQULIVDFSUMUR $.
      $( [5-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y ph $.
    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69.  This
       provides an axiom for a predicate calculus for a restricted domain.
       This theorem generalizes the unrestricted ~ stdpc4 and ~ a4sbc .  See
       also ~ ra4sbca and ~ ra4csbela . $)
    ra4sbc $p |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) $=
      ( vy wral wcel wsbc wi cv wceq df-ral stdpc4 sylbi dfsbcq sbcimg sbcel1gv
      wal imbi1d bitrd biimpd pm2.43b syl6bi syl5 vtocleg pm2.43a ) ABDFZCDGZAB
      CHZUGUHUIIZIECDUGBJDGZAIZBEJZHZUMCKZUJUGULBRUNABDLULBEMNUOUNULBCHZUJULBUM
      COUPUHUIUHUPUJUHUPUKBCHZUIIUJUKABCDPUHUQUHUIBCDDQSTUAUBUCUDUEUF $.
      $( [17-Nov-2006] $)

    $( Restricted quantifier version of Axiom 4 of [Mendelson] p. 69. $)
    ra4sbca $p |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) $=
      ( wcel wral wsbc ra4sbc imp ) CDEABDFABCGABCDHI $.
      $( [18-Nov-2006] $) $( [14-Dec-2005] $)

    $( Existence form of ~ ra4sbca . $)
    ra4esbca $p |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) $=
      ( wcel wsbc wrex wn wral ralnex ra4sbc sbcng sylibd syl5bir con4d imp ) C
      DEZABCFZABDGZQSRSHAHZBDIZQRHZABDJQUATBCFUBTBCDKABCDLMNOP $.
      $( [29-Feb-2008] $)
  $}

  ${
    ra5.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantifier version of Axiom 5 of [Mendelson] p. 69.  This is
       an axiom of a predicate calculus for a restricted domain.  Compare the
       unrestricted ~ stdpc5 . $)
    ra5 $p |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) $=
      ( wi wral cv wcel wal df-ral bi2.04 albii bitri stdpc5 sylbi syl6ibr ) AB
      FZCDGZACHDIZBFZCJZBCDGSAUAFZCJZAUBFSTRFZCJUDRCDKUEUCCTABLMNAUACEOPBCDKQ
      $.
      $( [16-Jan-2004] $)
  $}

  ${
    $d x y A $.
    rmo3.1 $e |- ( ph -> A. y ph ) $.
    $( Restricted "at most one" using explicit substitution. $)
    rmo3 $p |- ( E* x ( x e. A /\ ph ) <->
               A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) $=
      ( cv wcel wa wsbc wceq wi wal wral sban anbi1i 3bitri impexp albii df-ral
      wmo clelsb3 bitri anbi2i an4 ancom r19.21v 3bitr2i ax-17 hban mo3 3bitr4i
      imbi1i ) BFZDGZAHZUOBCFZIZHZUMUPJZKZCLZBLUNAABUPIZHZUSKZCDMZKZBLUOBTVEBDM
      VAVFBVAUPDGZUNVDKZKZCLVHCDMVFUTVICUTVGUNHZVCHZUSKVJVDKVIURVKUSURUOVGVBHZH
      UNVGHZVCHVKUQVLUOUQUNBUPIZVBHVLUNABCNVNVGVBCBDUAOUBUCUNAVGVBUDVMVJVCUNVGU
      EOPULVJVCUSQVGUNVDQPRVHCDSUNVDCDUFUGRUOBCUNACUNCUHEUIUJVEBDSUK $.
      $( [4-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d y ph $.  $d x y ps $.  $d x ch $.
    rmoi.b $e |- ( x = B -> ( ph <-> ps ) ) $.
    rmoi.c $e |- ( x = C -> ( ph <-> ch ) ) $.
    $( Consequence of "at most one", using implicit substitution. $)
    rmob $p |- ( ( E* x ( x e. A /\ ph ) /\ ( B e. A /\ ps ) ) ->
      ( B = C <-> ( C e. A /\ ch ) ) ) $=
      ( cv wcel wa wmo wceq simprl eleq1 syl5ibcom wi simpl anbi12d a1i simplrr
      wb adantr simpr simpll mob syl212anc ex pm5.21ndd ) DJZEKZALZDMZFEKZBLZLZ
      GEKZFGNZURCLZUQUOUSURUNUOBOZFGEPQUTURRUQURCSUAUQURUSUTUCZUQURLUOURUNUOBVB
      UQUOURVAUDZUQURUEUNUPURUFVCUNUOBURUBUMUPUTDFGEEUKFNULUOABUKFEPHTUKGNULURA
      CUKGEPITUGUHUIUJ $.
      $( [2-Jan-2015] $)

    $( Consequence of "at most one", using implicit substitution. $)
    rmoi $p |- ( ( E* x ( x e. A /\ ph )
          /\ ( B e. A /\ ps ) /\ ( C e. A /\ ch ) ) -> B = C ) $=
      ( cv wcel wa wmo wceq rmob biimprd 3impia ) DJEKALDMZFEKBLZGEKCLZFGNZRSLU
      ATABCDEFGHIOPQ $.
      $( [4-Nov-2012] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Proper substitution of classes for sets into classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c [_ $.  $( Underlined left bracket $)
  $c ]_ $.  $( Underlined right bracket $)

  $( Extend class notation to include the proper substitution of a class for a
     set into another class. $)
  csb $a class [_ A / x ]_ B $.

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Define the proper substitution of a class for a set into another class.
       The underlined brackets distinguish it from the substitution into a wff,
       ~ wsbc , to prevent ambiguity.  Theorem ~ sbcel1g shows an example of
       how ambiguity could arise if we didn't use distinguished brackets.
       Theorem ~ sbccsbg recreates substitution into a wff from this
       definition. $)
    df-csb $a |- [_ A / x ]_ B = { y | [ A / x ] y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d x y $.
    csb2.1 $e |- A e. _V $.
    $( Alternate expression for the proper substitution into a class, without
       referencing substitution into a wff.  Note that ` x ` can be free in
       ` B ` but cannot occur in ` A ` . $)
    csb2 $p |- [_ A / x ]_ B = { y | E. x ( x = A /\ y e. B ) } $=
      ( csb cv wcel wsbc cab wceq wa wex df-csb sbc5 abbii eqtri ) ACDFBGDHZACI
      ZBJAGCKRLAMZBJABCDNSTBRACEOPQ $.
      $( [2-Dec-2013] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Analog of ~ dfsbcq for proper substitution into a class. $)
    csbeq1 $p |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( vy wceq cv wcel wsbc cab csb dfsbcq abbidv df-csb 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d z V $.
    cbvcsbv.1 $e |- ( x = y -> B = C ) $.
    $( Change the bound variable of a proper substitution into a class using
       implicit substitution. $)
    cbvcsbv $p |- ( A e. V -> [_ A / x ]_ B = [_ A / y ]_ C ) $=
      ( vz wcel cv wsbc cab csb wceq eleq2d cbvsbcv abbidv df-csb 3eqtr4g ) CFI
      ZHJZDIZACKZHLUAEIZBCKZHLACDMBCEMTUCUEHUBUDABCFAJBJNDEUAGOPQAHCDRBHCERS $.
      $( [30-Sep-2008] $)
  $}

  ${
    csbeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for proper substitution into a class. $)
    csbeq1d $p |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) $=
      ( wceq csb csbeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [3-Dec-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( Analog of ~ sbid for proper substitution into a class. $)
    csbid $p |- [_ x / x ]_ A = A $=
      ( vy cv csb wcel wsbc cab df-csb sbid abbii abid2 3eqtri ) AADZBECDBFZANG
      ZCHOCHBACNBIPOCOAJKCBLM $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Equality theorem for proper substitution into a class. $)
    csbeq1a $p |- ( x = A -> B = [_ A / x ]_ B ) $=
      ( cv wceq csb csbid csbeq1 syl5eqr ) ADZBECAJCFABCFACGAJBCHI $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y z B $.  $d z V $.  $d x z $.
    $( Composition law for chained substitutions into a class. $)
    csbcog $p |- ( A e. V -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) $=
      ( vz wcel csb wsbc cab df-csb abeq2i sbcbii sbccog bitrd abbidv 3eqtr4g
      cv ) CEGZFRZABRZDHZGZBCIZFJTDGZACIZFJBCUBHACDHSUDUFFSUDUEAUAIZBCIUFUCUGBC
      EUGFUBAFUADKLMUEABCENOPBFCUBKAFCDKQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( The existence of proper substitution into a class. $)
    csbexg $p |- ( ( A e. V /\ A. x B e. W ) -> [_ A / x ]_ B e. _V ) $=
      ( vy wcel wal wa csb wsbc cab cvv df-csb abid2 elex syl5eqel alimi a4sbc
      cv syl5 imp wb ax-17 sbcabel adantr mpbid ) BDGZCEGZAHZIZABCJFTZCGZABKFLZ
      MAFBCNUKUMFLZMGZABKZUNMGZUHUJUQUJUPAHUHUQUIUPAUIUOCMFCOCEPQRUPABDSUAUBUHU
      QURUCUJUMAFFBMDULMGAUDUEUFUGQ $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbex.1 $e |- A e. _V $.
    csbex.2 $e |- B e. _V $.
    $( The existence of proper substitution into a class.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    csbex $p |- [_ A / x ]_ B e. _V $=
      ( cvv wcel csb wal csbexg mpan mpg ) CFGZABCHFGZABFGMAINDABCFFJKEL $.
      $( [29-Jun-2011] $) $( [7-Aug-2007] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y V $.  $d x y $.
    csbconstgf.1 $e |- ( y e. B -> A. x y e. B ) $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). $)
    csbconstgf $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( wcel csb cv wsbc cab df-csb sbcgf abbi1dv syl5eq ) CEGZACDHBIDGZACJZBKD
      ABCDLPRBDQACEFMNO $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d A y $.  $d B x y $.  $d V y $.
    $( Substitution doesn't affect a constant ` B ` (in which ` x ` is not
       free). ~ csbconstgf with distinct variable requirement.(Contributed by
       Alan Sare, 22-Jul-2012.) $)
    csbconstgfv $p |- ( A e. V -> [_ A / x ]_ B = B ) $=
      ( vy cv wcel ax-17 csbconstgf ) AEBCDEFCGAHI $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d w x y z $.  $d w y z A $.  $d w y z B $.  $d w y z C $.
    $( Distribute proper substitution through a membership relation.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcel12g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                   [_ A / x ]_ B e. [_ A / x ]_ C ) ) $=
      ( vy vz vw wcel wsbc cv cab csb dfsbcq wceq abbidv eleq12d hbs1 hbab sbab
      hbel sbie vtoclbg df-csb eleq12i syl6bbr ) BEICDIZABJZFKZCIZABJZFLZUIDIZA
      BJZFLZIZABCMZABDMZIUGAGKZJUJAUSJZFLZUMAUSJZFLZIZUHUPGBEUGAUSBNUSBOZVAULVC
      UOVEUTUKFUJAUSBNPVEVBUNFUMAUSBNPQUGVDAGAHHVAVCUTAFHUJAGRSVBAFHUMAGRSUAAKU
      SOCVADVCAGFCTAGFDTQUBUCUQULURUOAFBCUDAFBDUDUEUF $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)

    $( Distribute proper substitution through an equality relation.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbceqg $p |- ( A e. V -> ( [ A / x ] B = C <->
                   [_ A / x ]_ B = [_ A / x ]_ C ) ) $=
      ( vz vy vw wcel wceq wsbc cv cab csb dfsbcq abbidv eqeq12d hbs1 hbab sbab
      hbeq sbie vtoclbg df-csb eqeq12i syl6bbr ) BEICDJZABKZFLZCIZABKZFMZUIDIZA
      BKZFMZJZABCNZABDNZJUGAGLZKUJAUSKZFMZUMAUSKZFMZJZUHUPGBEUGAUSBOUSBJZVAULVC
      UOVEUTUKFUJAUSBOPVEVBUNFUMAUSBOPQUGVDAGAHHVAVCUTAFHUJAGRSVBAFHUMAGRSUAALU
      SJCVADVCAGFCTAGFDTQUBUCUQULURUOAFBCUDAFBDUDUEUF $.
      $( [29-Jun-2011] $) $( [10-Nov-2005] $)
  $}

  $( Distribute proper substitution through negated membership.  (Contributed
     by Andrew Salmon, 18-Jun-2011.) $)
  sbcnel12g $p |- ( A e. V -> ( [ A / x ] B e/ C <-> [_ A / x ]_ B e/
                    [_ A / x ]_ C ) ) $=
    ( wcel wnel wsbc wn csb df-nel sbcbii sbcng sbcel12g notbid syl6bbr 3bitrd
    ) BEFZCDGZABHCDFZIZABHTABHZIZABCJZABDJZGZSUAABECDKLTABEMRUCUDUEFZIUFRUBUGAB
    CDENOUDUEKPQ $.
    $( [18-Jun-2011] $)

  $( Distribute proper substitution through an inequality.  (Contributed by
     Andrew Salmon, 18-Jun-2011.) $)
  sbcne12g $p |- ( A e. V -> ( [ A / x ] B =/= C <-> [_ A / x ]_ B =/=
                   [_ A / x ]_ C ) ) $=
    ( wcel wne wsbc csb wn wceq nne sbcbii sbcng sbceqg syl6bbr 3bitr3d con4bid
    ) BEFZCDGZABHZABCIZABDIZGZSTJZABHCDKZABHZUAJUDJZUEUFABECDLMTABENSUGUBUCKUHA
    BCDEOUBUCLPQR $.
    $( [18-Jun-2011] $)

  ${
    $d y A $.  $d x y C $.  $d y V $.
    $( Move proper substitution in and out of a membership relation.  Note that
       the scope of ` [ A / x ] ` is the wff ` B e. C ` , whereas the scope of
       ` [_ A / x ]_ ` is the class ` B ` . $)
    sbcel1g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                    [_ A / x ]_ B e. C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstgfv eleq2d bitrd ) BEFZCDFABGABCHZABDHZF
      NDFABCDEIMODNABDEJKL $.
      $( [10-Nov-2005] $)

    $( Move proper substitution to first argument of an equality. $)
    sbceq1g $p |- ( A e. V -> ( [ A / x ] B = C <->
                    [_ A / x ]_ B = C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstgfv eqeq2d bitrd ) BEFZCDGABHABCIZABD
      IZGODGABCDEJNPDOABDEKLM $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y V $.
    $( Move proper substitution in and out of a membership relation. $)
    sbcel2g $p |- ( A e. V -> ( [ A / x ] B e. C <->
                    B e. [_ A / x ]_ C ) ) $=
      ( wcel wsbc csb sbcel12g csbconstgfv eleq1d bitrd ) BEFZCDFABGABCHZABDHZF
      COFABCDEIMNCOABCEJKL $.
      $( [14-Nov-2005] $)

    $( Move proper substitution to second argument of an equality. $)
    sbceq2g $p |- ( A e. V -> ( [ A / x ] B = C <->
                    B = [_ A / x ]_ C ) ) $=
      ( wcel wceq wsbc csb sbceqg csbconstgfv eqeq1d bitrd ) BEFZCDGABHABCIZABD
      IZGCPGABCDEJNOCPABCEKLM $.
      $( [30-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutative law for double substitution into a class. $)
    csbcomg $p |- ( ( A e. V /\ B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) $=
      ( vz wcel cvv csb wceq elex wa cv wsbc wb sbcel2g sbcbidgv 3bitr3d ancoms
      sbccomg adantr adantl eqrdv syl2an ) CFICJIZDJIZACBDEKZKZBDACEKZKZLDGICFM
      DGMUGUHNZHUJULUMHOZUIIZACPZUNUKIZBDPZUNUJIZUNULIZUMUNEIZBDPZACPZVAACPZBDP
      UPURVAABCDJJUBUHUGVCUPQUHVBUOACJBDUNEJRSUAUGVDUQBDJACUNEJRSTUGUPUSQUHACUN
      UIJRUCUHURUTQUGBDUNUKJRUDTUEUF $.
      $( [14-Nov-2005] $)
  $}

  ${
    csbeq2d.1 $e |- ( ph -> A. x ph ) $.
    csbeq2d.2 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2d $p |- ( ( ph /\ A e. V ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel csb wceq wsbc wal alrimi a4sbc syl5 sbceqg sylibd impcom ) CFIZABC
      DJBCEJKZTADEKZBCLZUAAUBBMTUCAUBBGHNUBBCFOPBCDEFQRS $.
      $( [22-Nov-2005] $)
  $}

  ${
    $d x ph $.
    csbeq2dv.1 $e |- ( ph -> B = C ) $.
    $( Formula-building deduction rule for class substitution. $)
    csbeq2dv $p |- ( ( ph /\ A e. V ) -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( ax-17 csbeq2d ) ABCDEFABHGI $.
      $( [10-Nov-2005] $)
  $}

  ${
    csbeq2i.1 $e |- B = C $.
    $( Formula-building inference rule for class substitution. $)
    csbeq2i $p |- ( A e. V -> [_ A / x ]_ B = [_ A / x ]_ C ) $=
      ( wcel wceq wsbc csb sbcth sbceqg mpbid ) BEGCDHZABIABCJABDJHNABEFKABCDEL
      M $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    $( The proper substitution of a class for set variable results in the class
       (if the class exists). $)
    csbvarg $p |- ( A e. V -> [_ A / x ]_ x = A ) $=
      ( vy vz wcel cvv cv csb wceq elex vex wsbc df-csb sbcel2gv abbi1dv syl5eq
      cab ax-mp csbeq2i csbcog 3eqtr3d syl ) BCFBGFZABAHZIZBJBCKUDDBADHZUEIZIDB
      UGIZUFBDBUHUGGUGGFZUHUGJDLUJUHEHZUEFAUGMZERUGAEUGUENUJULEUGAUKUGGOPQSTADB
      UEGUAUDUIUKUGFDBMZERBDEBUGNUDUMEBDUKBGOPQUBUC $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d x y $.
    $( Substitution into a wff expressed in terms of substitution into a
       class. $)
    sbccsbg $p |- ( A e. V ->
                 ( [ A / x ] ph <-> y e. [_ A / x ]_ { y | ph } ) ) $=
      ( wcel cv cab wsbc csb abid sbcbii sbcel2g bitr3d ) DEFCGZACHZFZBDIABDIOB
      DPJFQABDEACKLBDOPEMN $.
      $( [15-Aug-2007] $)
  $}

  $( Substitution into a wff expressed in using substitution into a class. $)
  sbccsb2g $p |- ( A e. V ->
               ( [ A / x ] ph <-> A e. [_ A / x ]_ { x | ph } ) ) $=
    ( wcel cv cab wsbc csb sbcel12g abid sbcbii csbvarg eleq1d 3bitr3d ) CDEZBF
    ZABGZEZBCHBCQIZBCRIZEABCHCUAEBCQRDJSABCDABKLPTCUABCDMNO $.
    $( [27-Nov-2005] $)

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1g.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1g $p |- ( A e. V ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz wcel cvv cv csb wal wi elex wsbc cab ax-17 hbel alrimi hbsbc1g hbabd
      df-csb eleq2i albii 3imtr4g syl ) CEHCIHZBJZACDKZHZUJALZMCENUGUHGJDHZACOZ
      GPZHZUOALUJUKUGUMAGBUGUGGLAABBCIFUHIHAQRUGGQSULABCIFTUAUIUNUHAGCDUBUCZUJU
      OAUPUDUEUF $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1 $p |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) $=
      ( vz csb cv wcel wsbc cab df-csb hbsbc1 hbab hbxfreq ) ABACDGFHDIZACJZFKA
      FCDLQAFBPABCEMNO $.
      $( [7-Dec-2014] $) $( [17-Aug-2006] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d x y z $.
    hbcsb1OLD.1 $e |- A e. _V $.
    hbcsb1OLD.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb1OLD $p |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) $=
      ( hbcsb1 ) ABCDFG $.
      $( [17-Aug-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z $.  $d w y $.
    hbcsb.1 $e |- ( z e. A -> A. x z e. A ) $.
    hbcsb.2 $e |- ( z e. B -> A. x z e. B ) $.
    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsb $p |- ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) $=
      ( vw csb cv wcel wsbc cab df-csb hblem hbsbc hbab hbxfreq ) ACBDEIHJEKZBD
      LZHMBHDENTAHCSABCDFACHEGOPQR $.
      $( [7-Sep-2014] $)

    $( Bound-variable hypothesis builder for substitution into a class. $)
    hbcsbg $p |- ( A e. V ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw wcel cvv cv csb wal wi elex wsbc cab ax-17 hbel alrimi hbsbcg df-csb
      hblem hbabd eleq2i albii 3imtr4g syl ) DFJDKJZCLZBDEMZJZUMANZODFPUJUKILEJ
      ZBDQZIRZJZURANUMUNUJUPAICUJUJINAACCDKGUKKJASTUJISUAUOABCDKGACIEHUDUBUEULU
      QUKBIDEUCUFZUMURAUSUGUHUI $.
      $( [20-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d z B $.  $d y z ph $.  $d x y z $.
    hbcsb1gd.1 $e |- ( ph -> A. x ph ) $.
    hbcsb1gd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbcsb1g . $)
    hbcsb1gd $p |- ( ( ph /\ A e. V ) ->
                 ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) $=
      ( vz wcel cvv cv csb wal wi elex wa a1d a17d hbeld hband anabsi5 hbsbc1gd
      wsbc wb sbcel2g adantl albid 3imtr3d sylan2 ) DFJADKJZCLZBDEMZJZUNBNODFPA
      UKQZBIULUMAUKUOBNAAUKBAABNAGRABCDKGHAULKJBSTUAUBZUOILZULJBSUOUQEJZBDUDZUS
      BNUQUMJZUTBNAURBCDKGHUCUKUSUTUEABDUQEKUFUGZUOUSUTBUPVAUHUITUJ $.
      $( [23-May-2006] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w z ph $.  $d w x z $.  $d w y $.
    hbcsbgd.1 $e |- ( ph -> A. x ph ) $.
    hbcsbgd.2 $e |- ( ph -> A. y ph ) $.
    hbcsbgd.3 $e |- ( ph -> ( z e. A -> A. x z e. A ) ) $.
    hbcsbgd.4 $e |- ( ph -> ( z e. B -> A. x z e. B ) ) $.
    $( Deduction version of ~ hbcsbg . $)
    hbcsbgd $p |- ( ( ph /\ A e. V ) ->
                 ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) $=
      ( vw wcel cvv cv wal wi ax-17 a1i hbeld csb elex wa hband anabsi5 hbsbcgd
      a1d wsbc wb sbcel2g adantl albid 3imtr3d sylan2 ) EGMAENMZDOZCEFUAZMZURBP
      QEGUBAUOUCZBLUPUQAUOUSBPAAUOBAABPAHUGABDENHJUPNMZUTBPQAUTBRSTUDUEZLOZUPMZ
      VCBPQUSVCBRSUSVBFMZCEUHZVEBPVBUQMZVFBPAVDBCDENHIJABDVBFHUPVBMZVGBPQAVGBRS
      KTUFUOVEVFUIACEVBFNUJUKZUSVEVFBVAVHULUMTUN $.
      $( [21-Nov-2005] $)
  $}

  ${
    $d z A $.  $d w B $.  $d z C $.  $d w x y z $.
    csbhypf.1 $e |- ( z e. A -> A. x z e. A ) $.
    csbhypf.2 $e |- ( z e. C -> A. x z e. C ) $.
    csbhypf.3 $e |- ( x = A -> B = C ) $.
    $( Introduce an explicit substitution into an implicit substitution
       hypothesis.  See ~ sbhypf for class substitution version. $)
    csbhypf $p |- ( y = A -> [_ y / x ]_ B = C ) $=
      ( vw cv wceq wa wex csb wcel ax-17 vex eqvincf hbcsb1 hbeq csbeq1a exlimi
      sylan9req sylbi ) BKZDLAKZUFLZUGDLZMZANAUFEOZFLZACUFDCKUFPAQGBRSUJULAAJCU
      KFAJUFEJKUFPAQTHUAUHUIUKEFAUFEUBIUDUCUE $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y z C $.  $d z V $.  $d x y z $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Closed theorem version of ~ csbiegf .) $)
    csbiegft $p |- ( ( A e. V /\ A. x A. y ( y e. C -> A. x y e. C ) /\
                 A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) $=
      ( vz wcel cv wal wi wceq w3a csb wsbc cab df-csb wb id alimi eleq1 albidv
      imbi12d a4v eleq2 imim2i sbciegft syl3an abbi1dv syl5eq ) CFHZBIZEHZUMAJZ
      KZBJZAJZAICLZDELZKZAJZMZACDNGIZDHZACOZGPEAGCDQVBVEGEUKUKUQVCEHZVFAJZKZAJV
      AURVDVFRZKZAJVEVFRUKSUPVHAUOVHBGULVCLZUMVFUNVGULVCEUAZVKUMVFAVLUBUCUDTUTV
      JAUSVIURDEVCUEUFTVDVFACFUGUHUIUJ $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x z A $.  $d z B $.  $d y C $.  $d x y $.
    csbieb.1 $e |- A e. _V $.
    csbieb.2 $e |- ( y e. C -> A. x y e. C ) $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution
       equivalent. $)
    csbieb $p |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) $=
      ( vz wceq csb cv wcel ax-17 hbcsb1 hbeq csbeq1a eqeq1d ceqsal ) DEIACDJZE
      IACAHBSEAHCDHKCLAMNGOFAKCIDSEACDPQR $.
      $( [2-Mar-2008] $)
  $}

  ${
    $d a x A $.  $d a B $.  $d a y C $.  $d x y $.
    csbiebg.2 $e |- ( y e. C -> A. x y e. C ) $.
    $( Bidirectional conversion between an implicit class substitution
       hypothesis ` x = A -> B = C ` and its explicit substitution
       equivalent. $)
    csbiebg $p |- ( A e. V ->
          ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ) $=
      ( va cv wceq wi wal csb eqeq2 imbi1d albidv csbeq1 eqeq1d vex csbieb
      vtoclbg ) AIZHIZJZDEJZKZALAUCDMZEJUBCJZUEKZALACDMZEJHCFUCCJZUFUIAUKUDUHUE
      UCCUBNOPUKUGUJEAUCCDQRABUCDEHSGTUA $.
      $( [24-Mar-2013] $)
  $}

  ${
    $d x y A $.  $d y C $.  $d x y V $.
    csbiegf.1 $e |- ( A e. V -> ( y e. C -> A. x y e. C ) ) $.
    csbiegf.2 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class. $)
    csbiegf $p |- ( A e. V -> [_ A / x ]_ B = C ) $=
      ( wcel cv wal wi wceq wa csb alrimivv ax-gen jctir csbiegft 3expb mpdan )
      CFIZBJEIZUCAKLZBKAKZAJCMDEMLZAKZNACDOEMZUBUEUGUBUDABGPUFAHQRUBUEUGUHABCDE
      FSTUA $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d x A $.  $d y C $.  $d x y $.
    csbief.1 $e |- A e. _V $.
    csbief.2 $e |- ( y e. C -> A. x y e. C ) $.
    csbief.3 $e |- ( x = A -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    csbief $p |- [_ A / x ]_ B = C $=
      ( cv wceq wi csb csbieb mpgbi ) AICJDEJKACDLEJAABCDEFGMHN $.
      $( [9-Jul-2011] $) $( [26-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x y C $.  $d x y ph $.
    csbied.1 $e |- ( ph -> A e. V ) $.
    csbied.2 $e |- ( ( ph /\ x = A ) -> B = C ) $.
    $( Conversion of implicit substitution to explicit substitution into a
       class.  (Contributed by Mario Carneiro, 2-Dec-2014.) $)
    csbied $p |- ( ph -> [_ A / x ]_ B = C ) $=
      ( vy wcel cv wal wi wceq csb a17d alrimivv ex alrimiv csbiegft syl3anc )
      ACFJIKEJZUBBLMZILBLBKCNZDENZMZBLBCDOENGAUCBIAUBBPQAUFBAUDUEHRSBICDEFTUA
      $.
      $( [2-Dec-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d z C $.  $d x y z D $.
    csbie2g.1 $e |- A e. _V $.
    csbie2g.2 $e |- B e. _V $.
    $( Conversion of implicit substitution to explicit substitution into a
       class (closed form of ~ csbie2 ). $)
    csbie2t $p |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) ->
                  [_ A / x ]_ [_ B / y ]_ C = D ) $=
      ( vz cv wceq wa wi wal wex csb isseti hba1 wcel ax-17 hbcsb1 hbeq csbeq1a
      eeanv hbcsb sylan9eqr pm3.43 mpan eqtr2 syl6 a4s exlimd syl5bir mp2ani )
      AJCKZBJDKZLZEFKZMZBNZANZUOAOZUPBOZACBDEPZPZFKZACGQBDHQVBVCLUQBOZAOVAVFUOU
      PABUDVAVGVFAUTARAIIVEFAICVDIJZCSZATUAVHFSZATUBUTVGVFMAUTUQVFBUSBRBIIVEFBA
      ICVDVIBTBIDEVHDSBTUAUEVJBTUBUSUQVFMBUSUQEVEKZURLZVFUQVKMUSUQVLMUPUOEVDVEB
      DEUCACVDUCUFUQVKURUGUHEVEFUIUJUKULUKULUMUN $.
      $( [3-Sep-2007] $)

    ${
      csbie2.3 $e |- ( ( x = A /\ y = B ) -> C = D ) $.
      $( Conversion of implicit substitution to explicit substitution into a
         class. $)
      csbie2 $p |- [_ A / x ]_ [_ B / y ]_ C = D $=
        ( cv wceq wa wi wal csb gen2 csbie2t ax-mp ) AJCKBJDKLEFKMZBNANACBDEOOF
        KSABIPABCDEFGHQR $.
        $( [27-Aug-2007] $)
    $}
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x z C $.  $d x y z V $.  $d y z W $.
    $( Lemma for ~ csbnestg . $)
    csbnestglem $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz wcel wal wa cv csb wi wceq simpl ax-17 hba1 hban cvv hbcsb1g hbcsbgd
      csbexg adantr a17d alrimiv alrimi csbeq1a csbeq1d ax-gen csbiegft syl3anc
      mpdan a1i ) CFIZDGIZAJZKZUOHLZBACDMZEMZIZVBAJNZHJZAJALCOZBDEMZVAONZAJZACV
      FMVAOUOUQPURVDAUOUQAUOAQUPARSZURVCHURUTTIVCACDFGUCURABHUTETVIUOUQBUOBQUQB
      QSUOUSUTIZVJAJNUQAHCDFUSCIAQUAUDURUSEIAUEUBUMUFUGVHURVGAVEBDUTEACDUHUIUJU
      NAHCVFVAFUKUL $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x z C $.  $d w x y $.
    $( Nest the composition of two substitutions. $)
    csbnestg $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) $=
      ( vz vw wcel cvv wal csb wceq elex cv csbcog adantr csbnestglem mpan hba1
      alimi vex csbeq2dv ancoms csbexg alrimiv sylan2 csbeq1d 3eqtrd eqtr3d a4s
      wa csbeq2d syl 3eqtr3d syl2an ) CFJCKJZDKJZALZACBDEMZMZBACDMZEMZNDGJZALCF
      OVEUSADGOUBURUTUMZACHDBHPEMZMZMZHVCVGMZVBVDVFICAIPZVHMZMZVIVJURVMVINUTAIC
      VHKQRVFVMICHAVKDMZVGMZMZHICVNMZVGMZVJUTURVMVPNUTICVLVOKVKKJZUTVLVONIUCZAH
      VKDVGKKSTUDUEUTURVNKJZILVPVRNUTWAIVSUTWAVTAVKDKKUFTUGIHCVNVGKKSUHURVRVJNU
      TURHVQVCVGAICDKQUIRUJUKUTURVIVBNUTACVHVAKUSAUAUSVHVANABHDEKQULUNUEVFVCKJV
      JVDNACDKKUFBHVCEKQUOUPUQ $.
      $( [23-Nov-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.  $d y W $.
    $( Nest the composition of two substitutions. $)
    csbnest1g $p |- ( ( A e. V /\ A. x B e. W ) ->
                  [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) $=
      ( vy wcel cvv wal csb wceq elex wa cv wi simpl ax-17 hba1 hban csbexg a1i
      hbcsb1g hbcsb1gd syldan alrimiv alrimi csbeq1a csbeq1d csbiegft syl3anc
      ax-gen sylan ) BEHBIHZCFHZAJZABACDKZKAABCKZDKZLZBEMUNUPNZUNGOZUSHZVCAJPZG
      JZAJAOBLZUQUSLPZAJZUTUNUPQVAVEAUNUPAUNARZUOASTVAVDGUNUPURIHVDABCIFUAUNAGU
      RDIVIAGBCIVBBHARUCUDUEUFUGVHVAVGAVFACURDABCUHUIULUBAGBUQUSIUJUKUM $.
      $( [23-May-2006] $)
  $}

  ${
    $d x ph $.  $d x y $.
    $( Nest the composition of two substitutions. $)
    sbcnestg $p |- ( ( A e. V /\ A. x B e. W ) ->
                ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) $=
      ( wcel wal cvv wsbc csb wb elex alimi wa cab hba1 sbccsb2g a4s ancoms syl
      sbcbidg sbcel12g adantr csbnestg eleq2d csbexg bitr4d 3bitrd sylan2 ) EGH
      ZBIDFHZEJHZBIZACEKZBDKZACBDELZKZMULUNBEGNOUMUOPZUQECEACQZLZHZBDKZURBDVBLZ
      HZUSUOUMUQVDMUOUPVCBDFUNBRUNUPVCMBACEJSTUCUAUMVDVFMUOBDEVBFUDUEUTVFURCURV
      ALZHZUSUTVEVGURBCDEVAFJUFUGUTURJHUSVHMBDEFJUHACURJSUBUIUJUK $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x y A $.
    $( Idempotent law for class substitutions. $)
    csbidmg $p |- ( A e. V -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) $=
      ( vy wcel cvv csb wceq elex wal ax-17 csbnest1g mpdan cv csbconstgf eqtrd
      csbeq1d syl ) BDFBGFZABABCHZHZUAIBDJTUBAABBHZCHZUATTAKUBUDITALABBCGGMNTAU
      CBCAEBBGEOBFALPRQS $.
      $( [1-Mar-2008] $)
  $}

  ${
    $d x A $.  $d x C $.  $d x z D $.  $d x y $.
    csbco3g.1 $e |- ( x = A -> B = D ) $.
    $( Composition of two class substitutions. $)
    csbco3g $p |- ( ( A e. V /\ A. x B e. W ) ->
                 [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) $=
      ( vz wcel wal wa csb csbnestg wceq cv wi ax-17 gen2 ax-gen mp3an23 adantr
      csbiegft csbeq1d eqtrd ) CGKZDHKALZMACBDENNBACDNZENZBFENZABCDEGHOUGUJUKPU
      HUGBUIFEUGJQFKZULALRZJLALAQCPDFPRZALUIFPUMAJULASTUNAIUAAJCDFGUDUBUEUCUF
      $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x A $.  $d x ph $.  $d x z C $.  $d x y $.
    sbcco3g.1 $e |- ( x = A -> B = C ) $.
    $( Composition of two substitutions. $)
    sbcco3g $p |- ( ( A e. V /\ A. x B e. W ) ->
                ( [ A / x ] [ B / y ] ph <-> [ C / y ] ph ) ) $=
      ( vz wcel wal wa wsbc csb sbcnestg wb wceq cv wi ax-17 gen2 ax-gen dfsbcq
      csbiegft mp3an23 syl adantr bitrd ) DGKZEHKBLZMACENBDNACBDEOZNZACFNZABCDE
      GHPUJUMUNQZUKUJULFRZUOUJJSFKZUQBLTZJLBLBSDREFRTZBLUPURBJUQBUAUBUSBIUCBJDE
      FGUEUFACULFUDUGUHUI $.
      $( [27-Nov-2005] $)
  $}

  ${
    $d x B $.  $d x D $.
    $( Special case related to ~ ra4sbc .  (The proof was shortened by Eric
       Schmidt, 17-Jan-2007.) $)
    ra4csbela $p |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) $=
      ( wcel wral csb wsbc ra4sbc sbcel1g sylibd imp ) BCFZDEFZACGZABDHEFZNPOAB
      IQOABCJABDECKLM $.
      $( [18-Jan-2007] $) $( [10-Dec-2005] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.  $d V z $.
    $( Move substitution into a class abstraction.  (The proof was shortened by
       Andrew Salmon, 9-Jul-2011.) $)
    csbabg $p |- ( A e. V ->
                 [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) $=
      ( vz wcel cab csb wsbc df-clab cvv vex sbccomg mpan syl5bb sbcbii sbcel2g
      cv wb 3bitr2rd eqrdv ) DEGZFBDACHZIZABDJZCHZUCFSZUGGZACUHJZBDJZUHUDGZBDJU
      HUEGUIUFCUHJZUCUKUFFCKUHLGUCUMUKTFMACBUHDLENOPULUJBDEAFCKQBDUHUDERUAUB $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d x v z $.  $d y v z $.  $d A w v z $.  $d B w v z $.  $d ph v z $.
    $d ps v z $.
    cbvralcsf.1 $e |- ( x = y -> A = B ) $.
    cbvralcsf.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    cbvralcsf.3 $e |- ( w e. A -> A. y w e. A ) $.
    cbvralcsf.4 $e |- ( w e. B -> A. x w e. B ) $.
    cbvralcsf.5 $e |- ( ph -> A. y ph ) $.
    cbvralcsf.6 $e |- ( ps -> A. x ps ) $.
    $( A more general version of ~ cbvralf that doesn't require ` A ` and ` B `
       to be distinct from ` x ` or ` y ` .  Changes bound variables using
       implicit substitution.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvralcsf $p |- ( A. x e. A ph <-> A. y e. B ps ) $=
      ( vz vv cv wcel wi wal ax-17 wral csb wsbc hbcsb1 hblem hbs1 hbim wceq id
      csbeq1a eleq12d sbequ12 imbi12d cbval cvv hbcsbg ax-mp hbsb csbeq1 df-csb
      vex cab eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb bitri df-ral
      3bitr4i ) CPZFQZARZCSZDPZGQZBRZDSZACFUABDGUAVQNPZCWBFUBZQZACWBUCZRZNSWAVP
      WFCNVPNTWDWECCONWCCOWBFOPZWBQZCTUDUEACNUFUGVNWBUHZVOWDAWEWIVNWBFWCWIUICWB
      FUJUKACNULUMUNWFVTNDWDWEDDONWCWBUOQWGWCQZWJDSRNVADCOWBFUOWHDTDEOFJUEUPUQU
      EACNDLURUGVTNTWBVRUHZWDVSWEBWKWBVRWCGWKUIWKWCCVRFUBZGCWBVRFUSWLWGFQZCVRUC
      ZOVBGCOVRFUTWNOGWNWGGQZWMWOCDCEOGKUEVNVRUHFGWGHVCVDVEVFVGVHUKWKWEACVRUCBA
      NDCVIABCDMIVDVJUMUNVKACFVLBDGVLVM $.
      $( [13-Jul-2011] $)

    $( A more general version of ~ cbvrexf that has no distinct variable
       restrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.)  (The proof was shortened
       by Mario Carneiro, 7-Dec-2014.) $)
    cbvrexcsf $p |- ( E. x e. A ph <-> E. y e. B ps ) $=
      ( wn wral wrex cv wceq hbn dfrex2 notbid cbvralcsf notbii 3bitr4i ) ANZCF
      OZNBNZDGOZNACFPBDGPUFUHUEUGCDEFGHCQDQRABIUAJKADLSBCMSUBUCACFTBDGTUD $.
      $( [7-Dec-2014] $) $( [13-Jul-2011] $)

    $( A more general version of ~ cbvreuv that has no distinct variable
       rextrictions.  Changes bound variables using implicit substitution.
       (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvreucsf $p |- ( E! x e. A ph <-> E! y e. B ps ) $=
      ( vz vv cv wcel wa ax-17 hblem weu wreu csb wsbc hbcsb1 hbs1 hban wceq id
      csbeq1a eleq12d sbequ12 anbi12d cbveu cvv wal wi hbcsbg ax-mp hbsb csbeq1
      vex cab df-csb eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb bitri
      df-reu 3bitr4i ) CPZFQZARZCUAZDPZGQZBRZDUAZACFUBBDGUBVSNPZCWDFUCZQZACWDUD
      ZRZNUAWCVRWHCNVRNSWFWGCCONWECOWDFOPZWDQZCSUETACNUFUGVPWDUHZVQWFAWGWKVPWDF
      WEWKUICWDFUJUKACNULUMUNWHWBNDWFWGDDONWEWDUOQWIWEQZWLDUPUQNVBDCOWDFUOWJDSD
      EOFJTURUSTACNDLUTUGWBNSWDVTUHZWFWAWGBWMWDVTWEGWMUIWMWECVTFUCZGCWDVTFVAWNW
      IFQZCVTUDZOVCGCOVTFVDWPOGWPWIGQZWOWQCDCEOGKTVPVTUHFGWIHVEVFVGVHVIVJUKWMWG
      ACVTUDBANDCVKABCDMIVFVLUMUNVMACFVNBDGVNVO $.
      $( [13-Jul-2011] $)

    $( A more general version of ~ cbvrab with no distinct variable
       restrictions.  (Contributed by Andrew Salmon, 13-Jul-2011.) $)
    cbvrabcsf $p |- { x e. A | ph } = { y e. B | ps } $=
      ( vz vv cv wcel cab ax-17 hblem wa crab csb wsbc hbcsb1 hbs1 hban wceq id
      csbeq1a eleq12d sbequ12 anbi12d cbvab cvv wal wi hbcsbg ax-mp hbsb csbeq1
      df-csb eleq2d sbie bicomi abbi2i eqtr4i syl6eq sbequ syl6bb eqtri 3eqtr4i
      vex df-rab ) CPZFQZAUAZCRZDPZGQZBUAZDRZACFUBBDGUBVRNPZCWCFUCZQZACWCUDZUAZ
      NRWBVQWGCNVQNSWEWFCCONWDCOWCFOPZWCQZCSUETACNUFUGVOWCUHZVPWEAWFWJVOWCFWDWJ
      UICWCFUJUKACNULUMUNWGWANDWEWFDDONWDWCUOQWHWDQZWKDUPUQNVMDCOWCFUOWIDSDEOFJ
      TURUSTACNDLUTUGWANSWCVSUHZWEVTWFBWLWCVSWDGWLUIWLWDCVSFUCZGCWCVSFVAWMWHFQZ
      CVSUDZORGCOVSFVBWOOGWOWHGQZWNWPCDCEOGKTVOVSUHFGWHHVCVDVEVFVGVHUKWLWFACVSU
      DBANDCVIABCDMIVDVJUMUNVKACFVNBDGVNVL $.
      $( [13-Jul-2011] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Define basic set operations and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols. $)
  $c \ $. $( Backslash (difference) $)
  $c u. $. $( Cup (union) $)
  $c i^i $. $( Cap (intersection) $)
  $c C_ $. $( Subclass or subset symbol $)
  $c C. $. $( Proper subclass or subset symbol $)

  $( Extend class notation to include class difference (read:  " ` A ` minus
     ` B ` "). $)
  cdif $a class ( A \ B ) $.

  $( Extend class notation to include union of two classes (read:  " ` A `
     union ` B ` "). $)
  cun $a class ( A u. B ) $.

  $( Extend class notation to include the intersection of two classes
     (read:  " ` A ` intersect ` B ` "). $)
  cin $a class ( A i^i B ) $.

  $( Extend wff notation to include the subclass relation.  This is
     read " ` A ` is a subclass of ` B ` " or " ` B ` includes ` A ` ."  When
     ` A ` exists as a set, it is also read " ` A ` is a subset of ` B ` ." $)
  wss $a wff A C_ B $.

  $( Extend wff notation with proper subclass relation. $)
  wpss $a wff A C. B $.

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-dif .  (Contributed by Rodolfo
       Medina, 27-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    difjust $p |- { x | ( x e. A /\ -. x e. B ) }
                  = { y | ( y e. A /\ -. y e. B ) } $=
      ( vz cv wcel wn wa cab wceq eleq1 notbid anbi12d cbvabv eqtri ) AFZCGZQDG
      ZHZIZAJEFZCGZUBDGZHZIZEJBFZCGZUGDGZHZIZBJUAUFAEQUBKZRUCTUEQUBCLULSUDQUBDL
      MNOUFUKEBUBUGKZUCUHUEUJUBUGCLUMUDUIUBUGDLMNOP $.
      $( [9-Jul-2011] $) $( [27-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define class difference, also called relative complement.  Definition
       5.12 of [TakeutiZaring] p. 20.  For example,
       ` ( { 1 , 3 } \ { 1 , 8 } ) = { 3 } ` ( ~ ex-dif ).  Contrast this
       operation with union ` ( A u. B ) ` ( ~ df-un ) and intersection
       ` ( A i^i B ) ` ( ~ df-in ).  Several notations are used in the
       literature; we chose the ` \ ` convention used in Definition 5.3 of
       [Eisenberg] p. 67 instead of the more common minus sign to reserve the
       latter for later use in, e.g., arithmetic.  We will use the
       terminology " ` A ` excludes ` B ` " to mean ` A \ B ` .  We will
       use " ` B ` is removed from ` A ` " to mean ` A \ { B } ` i.e. the
       removal of an element or equivalently the exclusion of a singleton. $)
    df-dif $a |- ( A \ B ) = { x | ( x e. A /\ -. x e. B ) } $.
  $}

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-un .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    unjust $p |- { x | ( x e. A \/ x e. B ) } = { y | ( y e. A \/ y e. B ) } $=
      ( vz cv wcel wo cab wceq eleq1 orbi12d cbvabv eqtri ) AFZCGZODGZHZAIEFZCG
      ZSDGZHZEIBFZCGZUCDGZHZBIRUBAEOSJPTQUAOSCKOSDKLMUBUFEBSUCJTUDUAUESUCCKSUCD
      KLMN $.
      $( [9-Jul-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the union of two classes.  Definition 5.6 of [TakeutiZaring]
       p. 16.  For example, ` ( { 1 , 3 } u. { 1 , 8 } ) = { 1 , 3 , 8 } `
       ( ~ ex-un ).  Contrast this operation with difference ` ( A \ B ) `
       ( ~ df-dif ) and intersection ` ( A i^i B ) ` ( ~ df-in ).  For an
       alternate definition in terms of class difference, requiring no dummy
       variables, see ~ dfun2 .  For union defined in terms of intersection,
       see ~ dfun3 . $)
    df-un $a |- ( A u. B ) = { x | ( x e. A \/ x e. B ) } $.
  $}

  ${
    $d x A $.  $d x B $.  $d y A $.  $d y B $.  $d z x $.  $d z y $.  $d z A $.
    $d z B $.
    $( Soundness justification theorem for ~ df-in .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       9-Jul-2011.) $)
    injust $p |- { x | ( x e. A /\ x e. B ) }
                  = { y | ( y e. A /\ y e. B ) } $=
      ( vz cv wcel wa cab wceq eleq1 anbi12d cbvabv eqtri ) AFZCGZODGZHZAIEFZCG
      ZSDGZHZEIBFZCGZUCDGZHZBIRUBAEOSJPTQUAOSCKOSDKLMUBUFEBSUCJTUDUAUESUCCKSUCD
      KLMN $.
      $( [9-Jul-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Define the intersection of two classes.  Definition 5.6 of
       [TakeutiZaring] p. 16.  For example,
       ` ( { 1 , 3 } i^i { 1 , 8 } ) = { 1 } ` ( ~ ex-in ).  Contrast this
       operation with union ` ( A u. B ) ` ( ~ df-un ) and difference
       ` ( A \ B ) ` ( ~ df-dif ).  For alternate definitions in terms of class
       difference, requiring no dummy variables, see ~ dfin2 and ~ dfin4 .  For
       intersection defined in terms of union, see ~ dfin3 . $)
    df-in $a |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } $.

    $( Alternate definition for the intersection of two classes. $)
    dfin5 $p |- ( A i^i B ) = { x e. A | x e. B } $=
      ( cin cv wcel wa cab crab df-in df-rab eqtr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [6-Jul-2005] $)
  $}


  ${
    $d x A $.  $d x B $.
    $( Alternate definition of class difference. $)
    dfdif2 $p |- ( A \ B ) = { x e. A | -. x e. B } $=
      ( cdif cv wcel wn wa cab crab df-dif df-rab eqtr4i ) BCDAEZBFNCFGZHAIOABJ
      ABCKOABLM $.
      $( [25-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in a class difference. $)
    eldif $p |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) $=
      ( vx cdif wcel cvv wn wa elex adantr cv wceq notbid anbi12d df-dif elab2g
      eleq1 pm5.21nii ) ABCEZFAGFZABFZACFZHZIZATJUBUAUDABJKDLZBFZUFCFZHZIUEDATG
      UFAMZUGUBUIUDUFABRUJUHUCUFACRNODBCPQS $.
      $( [29-Apr-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Subclasses and subsets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)
  $( Define the subclass relationship.  Exercise 9 of [TakeutiZaring] p. 18.
     For example, ` { 1 , 2 } C_ { 1 , 2 , 3 } ` ( ~ ex-ss ).  Note that
     ` A C_ A ` (proved in ~ ssid ).  Contrast this relationship with the
     relationship ` A C. B ` (as will be defined in ~ df-pss ).  For a more
     traditional definition, but requiring a dummy variable, see ~ dfss2 .
     Other possible definitions are given by ~ dfss3 , ~ dfss4 , ~ sspss ,
     ~ ssequn1 , ~ ssequn2 , ~ sseqin2 , and ~ ssdif0 . $)
  df-ss $a |- ( A C_ B <-> ( A i^i B ) = A ) $.

  $( Variant of subclass definition ~ df-ss . $)
  dfss $p |- ( A C_ B <-> A = ( A i^i B ) ) $=
    ( wss cin wceq df-ss eqcom bitri ) ABCABDZAEAIEABFIAGH $.
    $( [3-Sep-2004] $)

  $( Define proper subclass relationship between two classes.  Definition 5.9
     of [TakeutiZaring] p. 17.  For example, ` { 1 , 2 } C. { 1 , 2 , 3 } `
     ( ~ ex-pss ).  Note that ` -. A C. A ` (proved in ~ pssirr ).  Contrast
     this relationship with the relationship ` A C_ B ` (as defined in
     ~ df-ss ).  Other possible definitions are given by ~ dfpss2 and
     ~ dfpss3 . $)
  df-pss $a |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) $.

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of the subclass relationship between two classes.
       Definition 5.9 of [TakeutiZaring] p. 17. $)
    dfss2 $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( wss cv wcel wa wb wal wi cin wceq dfss df-in eqeq2i abeq2 3bitri pm4.71
      cab albii bitr4i ) BCDZAEZBFZUDUCCFZGZHZAIZUDUEJZAIUBBBCKZLBUFASZLUHBCMUJ
      UKBABCNOUFABPQUIUGAUDUERTUA $.
      $( [8-Jan-2002] $)

    $( Alternate definition of subclass relationship. $)
    dfss3 $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2 df-ral bitr4i ) BCDAEZBFMCFZGAHNABIABCJNA
      BKL $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d z y A $.  $d z y B $.  $d x z $.
    dfss2f.1 $e |- ( y e. A -> A. x y e. A ) $.
    dfss2f.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions.  (Unnecessary distinct variable
       restrictions were removed by Andrew Salmon, 27-Aug-2011.) $)
    dfss2f $p |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) $=
      ( vz wss cv wcel wi wal dfss2 hblem hbim ax-17 wceq eleq1 imbi12d cbval
      bitri ) CDHGIZCJZUBDJZKZGLAIZCJZUFDJZKZALGCDMUEUIGAUCUDAABGCENABGDFNOUIGP
      UBUFQUCUGUDUHUBUFCRUBUFDRSTUA $.
      $( [27-Aug-2011] $) $( [3-Jul-1994] $)

    $d y A $.  $d y B $.

    $( Equivalence for subclass relation, using bound-variable hypotheses
       instead of distinct variable conditions. $)
    dfss3f $p |- ( A C_ B <-> A. x e. A x e. B ) $=
      ( wss cv wcel wi wal wral dfss2f df-ral bitr4i ) CDGAHZCIPDIZJAKQACLABCDE
      FMQACNO $.
      $( [27-Aug-2011] $) $( [20-Mar-2004] $)

    $( If ` x ` is not free in ` A ` and ` B ` , it is not free in
       ` A C_ B ` . $)
    hbss $p |- ( A C_ B -> A. x A C_ B ) $=
      ( wss cv wcel wi wal dfss2f hba1 hbxfrbi ) CDGAHZCIODIJZAKAABCDEFLPAMN $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership relationships follow from a subclass relationship. $)
    ssel $p |- ( A C_ B -> ( C e. A -> C e. B ) ) $=
      ( vx wss cv wceq wa wex wi wal dfss2 biimpi 19.21bi anim2d eximdv df-clel
      wcel 3imtr4g ) ABEZDFZCGZUAARZHZDIUBUABRZHZDICARCBRTUDUFDTUCUEUBTUCUEJZDT
      UGDKDABLMNOPDCAQDCBQS $.
      $( [5-Aug-1993] $)
  $}

  $( Membership relationships follow from a subclass relationship. $)
  ssel2 $p |- ( ( A C_ B /\ C e. A ) -> C e. B ) $=
    ( wss wcel ssel imp ) ABDCAECBEABCFG $.
    $( [7-Jun-2004] $)

  ${
    sseli.1 $e |- A C_ B $.
    $( Membership inference from subclass relationship. $)
    sseli $p |- ( C e. A -> C e. B ) $=
      ( wss wcel wi ssel ax-mp ) ABECAFCBFGDABCHI $.
      $( [5-Aug-1993] $)
    ${
      sselii.2 $e |- C e. A $.
      $( Membership inference from subclass relationship. $)
      sselii $p |- C e. B $=
        ( wcel sseli ax-mp ) CAFCBFEABCDGH $.
        $( [31-May-1999] $)
    $}

    ${
      sseldi.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship. $)
      sseldi $p |- ( ph -> C e. B ) $=
        ( wcel sseli syl ) ADBGDCGFBCDEHI $.
        $( [25-Jun-2014] $)
    $}
  $}

  ${
    sseld.1 $e |- ( ph -> A C_ B ) $.
    $( Membership deduction from subclass relationship. $)
    sseld $p |- ( ph -> ( C e. A -> C e. B ) ) $=
      ( wss wcel wi ssel syl ) ABCFDBGDCGHEBCDIJ $.
      $( [15-Nov-1995] $)
    $( Membership deduction from subclass relationship. $)
    sselda $p |- ( ( ph /\ C e. A ) -> C e. B ) $=
      ( wcel sseld imp ) ADBFDCFABCDEGH $.
      $( [26-Jun-2014] $)
    ${
      sseldd.2 $e |- ( ph -> C e. A ) $.
      $( Membership inference from subclass relationship. $)
      sseldd $p |- ( ph -> C e. B ) $=
        ( wcel sseld mpd ) ADBGDCGFABCDEHI $.
        $( [14-Dec-2004] $)
    $}
  $}

  ${
    $d x A $.  $d x B $.
    ssriv.1 $e |- ( x e. A -> x e. B ) $.
    $( Inference rule based on subclass definition. $)
    ssriv $p |- A C_ B $=
      ( wss cv wcel wi dfss2 mpgbir ) BCEAFZBGKCGHAABCIDJ $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrdv.1 $e |- ( ph -> ( x e. A -> x e. B ) ) $.
    $( Deduction rule based on subclass definition. $)
    ssrdv $p |- ( ph -> A C_ B ) $=
      ( cv wcel wi wal wss alrimiv dfss2 sylibr ) ABFZCGNDGHZBICDJAOBEKBCDLM $.
      $( [15-Nov-1995] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Transitivity of subclasses.  Exercise 5 of [TakeutiZaring] p. 17.  (The
       proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    sstr2 $p |- ( A C_ B -> ( B C_ C -> A C_ C ) ) $=
      ( vx wss cv wcel wi wal ssel imim1d alimdv dfss2 3imtr4g ) ABEZDFZBGZPCGZ
      HZDIPAGZRHZDIBCEACEOSUADOTQRABPJKLDBCMDACMN $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  $( Transitivity of subclasses.  Theorem 6 of [Suppes] p. 23. $)
  sstr $p |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) $=
    ( wss sstr2 imp ) ABDBCDACDABCEF $.
    $( [5-Sep-2003] $)

  ${
    sstri.1 $e |- A C_ B $.
    sstri.2 $e |- B C_ C $.
    $( Subclass transitivity inference. $)
    sstri $p |- A C_ C $=
      ( wss sstr2 mp2 ) ABFBCFACFDEABCGH $.
      $( [5-May-2000] $)
  $}

  ${
    sstrd.1 $e |- ( ph -> A C_ B ) $.
    sstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction. $)
    sstrd $p |- ( ph -> A C_ C ) $=
      ( wss sstr syl2anc ) ABCGCDGBDGEFBCDHI $.
      $( [2-Jun-2004] $)
  $}

  ${
    syl5ss.1 $e |- A C_ B $.
    syl5ss.2 $e |- ( ph -> B C_ C ) $.
    $( Subclass transitivity deduction. $)
    syl5ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDBCGAEHFI $.
      $( [6-Feb-2014] $)
  $}

  ${
    syl6ss.1 $e |- ( ph -> A C_ B ) $.
    syl6ss.2 $e |- B C_ C $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl6ss $p |- ( ph -> A C_ C ) $=
      ( wss a1i sstrd ) ABCDECDGAFHI $.
      $( [3-Jun-2011] $)
  $}

  ${
    sylan9ss.1 $e |- ( ph -> A C_ B ) $.
    sylan9ss.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction.  (The proof was shortened by Andrew
       Salmon, 14-Jun-2011.) $)
    sylan9ss $p |- ( ( ph /\ ps ) -> A C_ C ) $=
      ( wss sstr syl2an ) ACDHDEHCEHBFGCDEIJ $.
      $( [14-Jun-2011] $) $( [27-Sep-2004] $)
  $}

  ${
    sylan9ssr.1 $e |- ( ph -> A C_ B ) $.
    sylan9ssr.2 $e |- ( ps -> B C_ C ) $.
    $( A subclass transitivity deduction. $)
    sylan9ssr $p |- ( ( ps /\ ph ) -> A C_ C ) $=
      ( wss sylan9ss ancoms ) ABCEHABCDEFGIJ $.
      $( [27-Sep-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subclass relationship is antisymmetric.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqss $p |- ( A = B <-> ( A C_ B /\ B C_ A ) ) $=
      ( vx cv wcel wb wal wi wa wceq wss albiim dfcleq dfss2 anbi12i 3bitr4i )
      CDZAEZQBEZFCGRSHCGZSRHCGZIABJABKZBAKZIRSCLCABMUBTUCUACABNCBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqssi.1 $e |- A C_ B $.
    eqssi.2 $e |- B C_ A $.
    $( Infer equality from two subclass relationships.  Compare Theorem 4 of
       [Suppes] p. 22. $)
    eqssi $p |- A = B $=
      ( wceq wss eqss mpbir2an ) ABEABFBAFCDABGH $.
      $( [9-Sep-1993] $)
  $}

  ${
    eqssd.1 $e |- ( ph -> A C_ B ) $.
    eqssd.2 $e |- ( ph -> B C_ A ) $.
    $( Equality deduction from two subclass relationships.  Compare Theorem 4
       of [Suppes] p. 22. $)
    eqssd $p |- ( ph -> A = B ) $=
      ( wss wceq eqss sylanbrc ) ABCFCBFBCGDEBCHI $.
      $( [27-Jun-2004] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of itself.  Exercise 10 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 14-Jun-2011.) $)
    ssid $p |- A C_ A $=
      ( vx cv wcel id ssriv ) BAABCADEF $.
      $( [14-Jun-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.
    $( Any class is a subclass of the universal class. $)
    ssv $p |- A C_ _V $=
      ( vx cvv cv elex ssriv ) BACBDAEF $.
      $( [31-Oct-1995] $)
  $}

  $( Equality theorem for subclasses.  (The proof was shortened by Andrew
     Salmon, 21-Jun-2011.) $)
  sseq1 $p |- ( A = B -> ( A C_ C <-> B C_ C ) ) $=
    ( wceq wss wa wb eqss wi sstr2 adantl adantr impbid sylbi ) ABDABEZBAEZFZAC
    EZBCEZGABHQRSPRSIOBACJKOSRIPABCJLMN $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality theorem for the subclass relationship. $)
  sseq2 $p |- ( A = B -> ( C C_ A <-> C C_ B ) ) $=
    ( wss wa wi wceq wb sstr2 com12 anim12i eqss dfbi2 3imtr4i ) ABDZBADZECADZC
    BDZFZRQFZEABGQRHOSPTQORCABIJRPQCBAIJKABLQRMN $.
    $( [25-Jun-1998] $)

  $( Equality theorem for the subclass relationship. $)
  sseq12 $p |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) $=
    ( wceq wss sseq1 sseq2 sylan9bb ) ABEACFBCFCDEBDFABCGCDBHI $.
    $( [31-May-1999] $)

  ${
    sseq1i.1 $e |- A = B $.
    $( An equality inference for the subclass relationship. $)
    sseq1i $p |- ( A C_ C <-> B C_ C ) $=
      ( wceq wss wb sseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [18-Aug-1993] $)

    $( An equality inference for the subclass relationship. $)
    sseq2i $p |- ( C C_ A <-> C C_ B ) $=
      ( wceq wss wb sseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [30-Aug-1993] $)

    ${
      sseq12i.2 $e |- C = D $.
      $( An equality inference for the subclass relationship.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      sseq12i $p |- ( A C_ C <-> B C_ D ) $=
        ( wceq wss wb sseq12 mp2an ) ABGCDGACHBDHIEFABCDJK $.
        $( [27-Jan-2007] $) $( [31-May-1999] $)
    $}
  $}

  ${
    sseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the subclass relationship. $)
    sseq1d $p |- ( ph -> ( A C_ C <-> B C_ C ) ) $=
      ( wceq wss wb sseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [14-Aug-1994] $)

    $( An equality deduction for the subclass relationship. $)
    sseq2d $p |- ( ph -> ( C C_ A <-> C C_ B ) ) $=
      ( wceq wss wb sseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [14-Aug-1994] $)

    ${
      sseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the subclass relationship. $)
      sseq12d $p |- ( ph -> ( A C_ C <-> B C_ D ) ) $=
        ( wss sseq1d sseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [31-May-1999] $)
    $}
  $}

  ${
    eqsstr.1 $e |- A = B $.
    eqsstr.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstri $p |- A C_ C $=
      ( wss sseq1i mpbir ) ACFBCFEABCDGH $.
      $( [16-Jul-1995] $)
  $}

  ${
    eqsstr3.1 $e |- B = A $.
    eqsstr3.2 $e |- B C_ C $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3i $p |- A C_ C $=
      ( eqcomi eqsstri ) ABCBADFEG $.
      $( [19-Oct-1999] $)
  $}

  ${
    sseqtr.1 $e |- A C_ B $.
    sseqtr.2 $e |- B = C $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtri $p |- A C_ C $=
      ( wss sseq2i mpbi ) ABFACFDBCAEGH $.
      $( [28-Jul-1995] $)
  $}

  ${
    sseqtr4.1 $e |- A C_ B $.
    sseqtr4.2 $e |- C = B $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4i $p |- A C_ C $=
      ( eqcomi sseqtri ) ABCDCBEFG $.
      $( [4-Apr-1995] $)
  $}

  ${
    eqsstrd.1 $e |- ( ph -> A = B ) $.
    eqsstrd.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq1d mpbird ) ABDGCDGFABCDEHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    eqsstr3d.1 $e |- ( ph -> B = A ) $.
    eqsstr3d.2 $e |- ( ph -> B C_ C ) $.
    $( Substitution of equality into a subclass relationship. $)
    eqsstr3d $p |- ( ph -> A C_ C ) $=
      ( eqcomd eqsstrd ) ABCDACBEGFH $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtrd.1 $e |- ( ph -> A C_ B ) $.
    sseqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtrd $p |- ( ph -> A C_ C ) $=
      ( wss sseq2d mpbid ) ABCGBDGEACDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    sseqtr4d.1 $e |- ( ph -> A C_ B ) $.
    sseqtr4d.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equality into a subclass relationship. $)
    sseqtr4d $p |- ( ph -> A C_ C ) $=
      ( eqcomd sseqtrd ) ABCDEADCFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    3sstr3.1 $e |- A C_ B $.
    3sstr3.2 $e |- A = C $.
    3sstr3.3 $e |- B = D $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr3i $p |- C C_ D $=
      ( wss sseq12i mpbi ) ABHCDHEACBDFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr4.1 $e |- A C_ B $.
    3sstr4.2 $e |- C = A $.
    3sstr4.3 $e |- D = B $.
    $( Substitution of equality in both sides of a subclass relationship.  (The
       proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4i $p |- C C_ D $=
      ( wss sseq12i mpbir ) CDHABHECADBFGIJ $.
      $( [27-Jan-2007] $) $( [13-Jan-1996] $)
  $}

  ${
    3sstr3g.1 $e |- ( ph -> A C_ B ) $.
    3sstr3g.2 $e |- A = C $.
    3sstr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylib ) ABCIDEIFBDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4g.1 $e |- ( ph -> A C_ B ) $.
    3sstr4g.2 $e |- C = A $.
    3sstr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4g $p |- ( ph -> C C_ D ) $=
      ( wss sseq12i sylibr ) ABCIDEIFDBECGHJK $.
      $( [27-Jan-2007] $) $( [16-Aug-1994] $)
  $}

  ${
    3sstr3d.1 $e |- ( ph -> A C_ B ) $.
    3sstr3d.2 $e |- ( ph -> A = C ) $.
    3sstr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a subclass relationship. $)
    3sstr3d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbid ) ABCIDEIFABDCEGHJK $.
      $( [1-Oct-2000] $)
  $}

  ${
    3sstr4d.1 $e |- ( ph -> A C_ B ) $.
    3sstr4d.2 $e |- ( ph -> C = A ) $.
    3sstr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a subclass relationship.
       (The proof was shortened by Eric Schmidt, 26-Jan-2007.) $)
    3sstr4d $p |- ( ph -> C C_ D ) $=
      ( wss sseq12d mpbird ) ADEIBCIFADBECGHJK $.
      $( [27-Jan-2007] $) $( [30-Nov-1995] $)
  $}

  ${
    syl5eqss.1 $e |- A = B $.
    syl5eqss.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction. $)
    syl5eqss $p |- ( ph -> A C_ C ) $=
      ( wss sseq1i sylibr ) ACDGBDGFBCDEHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl5eqssr.1 $e |- B = A $.
    syl5eqssr.2 $e |- ( ph -> B C_ C ) $.
    $( B chained subclass and equality deduction. $)
    syl5eqssr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl5eqss ) ABCDCBEGFH $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6sseq.1 $e |- ( ph -> A C_ B ) $.
    syl6sseq.2 $e |- B = C $.
    $( A chained subclass and equality deduction. $)
    syl6sseq $p |- ( ph -> A C_ C ) $=
      ( wss sseq2i sylib ) ABCGBDGECDBFHI $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl6ssr.1 $e |- ( ph -> A C_ B ) $.
    syl6ssr.2 $e |- C = B $.
    $( A chained subclass and equality deduction. $)
    syl6sseqr $p |- ( ph -> A C_ C ) $=
      ( eqcomi syl6sseq ) ABCDEDCFGH $.
      $( [25-Apr-2004] $)
  $}

  ${
    syl5sseq.1 $e |- B C_ A $.
    syl5sseq.2 $e |- ( ph -> A = C ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseq $p |- ( ph -> B C_ C ) $=
      ( wceq wss sseq2 biimpa sylancl ) ABDGZCBHZCDHZFELMNBDCIJK $.
      $( [3-Jun-2011] $)
  $}

  ${
    syl5sseqr.1 $e |- B C_ A $.
    syl5sseqr.2 $e |- ( ph -> C = A ) $.
    $( Subclass transitivity deduction.  (Contributed by Jonathan Ben-Naim,
       3-Jun-2011.) $)
    syl5sseqr $p |- ( ph -> B C_ C ) $=
      ( wss a1i sseqtr4d ) ACBDCBGAEHFI $.
      $( [3-Jun-2011] $)
  $}

  $( Equality implies the subclass relation.  (The proof was shortened by
     Andrew Salmon, 21-Jun-2011.) $)
  eqimss $p |- ( A = B -> A C_ B ) $=
    ( wceq wss eqss simplbi ) ABCABDBADABEF $.
    $( [26-Jun-2011] $) $( [5-Aug-1993] $)

  $( Equality implies the subclass relation. $)
  eqimss2 $p |- ( B = A -> A C_ B ) $=
    ( wss eqimss eqcoms ) ABCABABDE $.
    $( [23-Nov-2003] $)

  ${
    eqimssi.1 $e |- A = B $.
    $( Infer subclass relationship from equality. $)
    eqimssi $p |- A C_ B $=
      ( ssid sseqtri ) AABADCE $.
      $( [6-Jan-2007] $)

    $( Infer subclass relationship from equality. $)
    eqimss2i $p |- B C_ A $=
      ( ssid sseqtr4i ) BBABDCE $.
      $( [7-Jan-2007] $)
  $}

  $( Two classes are different if they don't include the same class. $)
  nssne1 $p |- ( ( A C_ B /\ -. A C_ C ) -> B =/= C ) $=
    ( wss wn wne wceq sseq2 biimpcd necon3bd imp ) ABDZACDZEBCFLMBCBCGLMBCAHIJK
    $.
    $( [23-Apr-2015] $)

  $( Two classes are different if they are not subclasses of the same class. $)
  nssne2 $p |- ( ( A C_ C /\ -. B C_ C ) -> A =/= B ) $=
    ( wss wn wne wceq sseq1 biimpcd necon3bd imp ) ACDZBCDZEABFLMABABGLMABCHIJK
    $.
    $( [23-Apr-2015] $)

  ${
    $d x A $.  $d x B $.
    $( Negation of subclass relationship.  Exercise 13 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 21-Jun-2011.) $)
    nss $p |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) $=
      ( cv wcel wn wa wex wss wi wal exanali dfss2 xchbinxr bicomi ) ADZBEZPCEZ
      FGAHZBCIZFSQRJAKTQRALABCMNO $.
      $( [26-Jun-2011] $) $( [25-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Quantification restricted to a subclass. $)
    ssralv $p |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) $=
      ( wss cv wcel ssel imim1d ralimdv2 ) CDEZAABDCKBFZCGLDGACDLHIJ $.
      $( [11-Mar-2006] $)

    $( Existential quantification restricted to a subclass. $)
    ssrexv $p |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) $=
      ( wss cv wcel ssel anim1d reximdv2 ) CDEZAABCDKBFZCGLDGACDLHIJ $.
      $( [11-Jan-2007] $)
  $}

  ${
    $d ph y $.  $d ps y $.  $d x y $.
    $( Class abstractions in a subclass relationship. $)
    ss2ab $p |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) $=
      ( vy cab wss cv wcel wi wal hbab1 dfss2f abid imbi12i albii bitri ) ACEZB
      CEZFCGZQHZSRHZIZCJABIZCJCDQRACDKBCDKLUBUCCTAUABACMBCMNOP $.
      $( [3-Jul-1994] $)
  $}

  ${
    $d x A $.
    $( Class abstraction in a subclass relationship. $)
    abss $p |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq2i ss2ab bitr3i ) ABDZCENBFCGZBDZEAOHB
      IPCNBCJKAOBLM $.
      $( [16-Aug-2006] $)

    $( Subclass of a class abstraction. $)
    ssab $p |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) $=
      ( cab wss cv wcel wi wal abid2 sseq1i ss2ab bitr3i ) CABDZEBFCGZBDZNEOAHB
      IPCNBCJKOABLM $.
      $( [16-Aug-2006] $)

    $( The relation for a subclass of a class abstraction is equivalent to
       restricted quantification. $)
    ssabral $p |- ( A C_ { x | ph } <-> A. x e. A ph ) $=
      ( cab wss cv wcel wi wal wral ssab df-ral bitr4i ) CABDEBFCGAHBIABCJABCKA
      BCLM $.
      $( [6-Sep-2006] $)
  $}

  ${
    ss2abi.1 $e |- ( ph -> ps ) $.
    $( Inference of abstraction subclass from implication. $)
    ss2abi $p |- { x | ph } C_ { x | ps } $=
      ( cab wss wi ss2ab mpgbir ) ACEBCEFABGCABCHDI $.
      $( [31-Mar-1995] $)
  $}

  ${
    $d x ph $.
    ss2abdv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    ss2abdv $p |- ( ph -> { x | ps } C_ { x | ch } ) $=
      ( wi wal cab wss alrimiv ss2ab sylibr ) ABCFZDGBDHCDHIAMDEJBCDKL $.
      $( [29-Jul-2011] $)
  $}

  ${
    $d x ph $.  $d x A $.
    abssdv.1 $e |- ( ph -> ( ps -> x e. A ) ) $.
    $( Deduction of abstraction subclass from implication. $)
    abssdv $p |- ( ph -> { x | ps } C_ A ) $=
      ( cv wcel wi wal cab wss alrimiv abss sylibr ) ABCFDGHZCIBCJDKAOCELBCDMN
      $.
      $( [20-Jan-2006] $)
  $}

  ${
    $d x A $.
    abssi.1 $e |- ( ph -> x e. A ) $.
    $( Inference of abstraction subclass from implication. $)
    abssi $p |- { x | ph } C_ A $=
      ( cab cv wcel ss2abi abid2 sseqtri ) ABEBFCGZBECAKBDHBCIJ $.
      $( [20-Jan-2006] $)
  $}

  $( Restricted abstraction classes in a subclass relationship. $)
  ss2rab $p |- ( { x e. A | ph } C_ { x e. A | ps } <->
               A. x e. A ( ph -> ps ) ) $=
    ( crab wss cv wcel wa cab wi wal df-rab sseq12i ss2ab df-ral imdistan albii
    wral bitr2i 3bitri ) ACDEZBCDEZFCGDHZAIZCJZUDBIZCJZFUEUGKZCLZABKZCDSZUBUFUC
    UHACDMBCDMNUEUGCOULUDUKKZCLUJUKCDPUMUICUDABQRTUA $.
    $( [30-May-1999] $)

  ${
    $d x B $.
    $( Restricted class abstraction in a subclass relationship. $)
    rabss $p |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq1i abss impexp albii df-ral
      wi bitr4i 3bitri ) ABCEZDFBGZCHZAIZBJZDFUEUCDHZSZBKZAUGSZBCLZUBUFDABCMNUE
      BDOUIUDUJSZBKUKUHULBUDAUGPQUJBCRTUA $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass of a restricted class abstraction. $)
    ssrab $p |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) $=
      ( crab wss cv wcel wa cab wal wral df-rab sseq2i ssab dfss3 anbi1i r19.26
      wi df-ral 3bitr2ri 3bitri ) DABCEZFDBGZCHZAIZBJZFUDDHUFSBKZDCFZABDLZIZUCU
      GDABCMNUFBDOUKUEBDLZUJIUFBDLUHUIULUJBDCPQUEABDRUFBDTUAUB $.
      $( [16-Aug-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ph $.
    ssrabdv.1 $e |- ( ph -> B C_ A ) $.
    ssrabdv.2 $e |- ( ( ph /\ x e. B ) -> ps ) $.
    $( Subclass of a restricted class abstraction (deduction rule). $)
    ssrabdv $p |- ( ph -> B C_ { x e. A | ps } ) $=
      ( wss wral crab ralrimiva ssrab sylanbrc ) AEDHBCEIEBCDJHFABCEGKBCDELM $.
      $( [31-Aug-2006] $)
  $}

  ${
    $d x B $.  $d x ph $.
    rabssdv.1 $e |- ( ( ph /\ x e. A /\ ps ) -> x e. B ) $.
    $( Subclass of a restricted class abstraction (deduction rule). $)
    rabssdv $p |- ( ph -> { x e. A | ps } C_ B ) $=
      ( cv wcel wi wral crab wss 3exp ralrimiv rabss sylibr ) ABCGZEHZIZCDJBCDK
      ELASCDAQDHBRFMNBCDEOP $.
      $( [2-Feb-2015] $)
  $}

  ${
    $d x ph $.
    ss2rabdv.1 $e |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) $.
    $( Deduction of restricted abstraction subclass from implication. $)
    ss2rabdv $p |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) $=
      ( wi wral crab wss ralrimiva ss2rab sylibr ) ABCGZDEHBDEICDEIJANDEFKBCDEL
      M $.
      $( [30-May-2006] $)
  $}

  ${
    ss2rabi.1 $e |- ( x e. A -> ( ph -> ps ) ) $.
    $( Inference of restricted abstraction subclass from implication. $)
    ss2rabi $p |- { x e. A | ph } C_ { x e. A | ps } $=
      ( crab wss wi ss2rab mprgbir ) ACDFBCDFGABHCDABCDIEJ $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass law for restricted abstraction.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rabss2 $p |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) $=
      ( wss cv wcel wa cab crab wi wal pm3.45 alimi dfss2 ss2ab 3imtr4i 3sstr4g
      df-rab ) CDEZBFZCGZAHZBIZUADGZAHZBIZABCJABDJUBUEKZBLUCUFKZBLTUDUGEUHUIBUB
      UEAMNBCDOUCUFBPQABCSABDSR $.
      $( [26-Jun-2011] $) $( [18-Dec-2004] $)

    $( Subclass relation for the restriction of a class abstraction. $)
    ssab2 $p |- { x | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa simpl abssi ) BDCEZAFBCIAGH $.
      $( [31-Mar-1995] $)

    $( Subclass relation for a restricted class. $)
    ssrab2 $p |- { x e. A | ph } C_ A $=
      ( crab cv wcel wa cab df-rab ssab2 eqsstri ) ABCDBECFAGBHCABCIABCJK $.
      $( [19-Mar-1997] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x z C $.  $d w D $.  $d x y $.
    $( A subset relationship useful for converting union to indexed union using
       ~ dfiun2 or ~ dfiun2g and intersection to indexed intersection using
       ~ dfiin2 . $)
    uniiunlem $p |- ( A. x e. A B e. D ->
                     ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) $=
      ( vz vw wcel wral cv wceq wrex wi cab wss ax-17 wa eqeq1 eleq1 wal eleq1a
      hbra1 ra4 syl6 rexlimd alrimiv hbim hbal csb csbeq1a eqcoms eqcomd eqeq1d
      hbre1 wex eqid a4eiv ra4e hbcsb1 hbeleq rexbid imbi12d cla4gv exp4a com4r
      syl7 imbi2d 3imtr3d exlimiv ax-mp imp3a com12 impbid2 abss rexbidv cbvabv
      ralimdaa sseq1i bitr3i syl6bb ) DFIZACJZDEIZACJZGKZDLZACMZWFEIZNZGUAZBKZD
      LZACMZBOZEPZWCWEWKWEWJGWEWGWIACWDACUCWIAQZWEAKZCIZWDWGWINWDACUDDEWFUBUEUF
      UGWKWCWEWKWBWDACWJAGWHWIAWGACUOWQUHUIWBWKWSRWDWBWKWSWDAHKZDUJZDLZHUPWBWKW
      SWDNZNZNZXBDDLHAWTWRLZXADDXFDXADXALWRWTAWTDUKULUMUNDUQURXBXEHXBXAFIZWKWSX
      AEIZNZNWBXDXGWKWSXBXHXGWKWSXBXHWSXBRXBACMZXGWKXHXBACUSWJXJXHNGXAFWFXALZWH
      XJWIXHXKWGXBACAGXAAGWTDWFWTIAQUTVAWFXADSVBWFXAETVCVDVGVEVFXADFTXBXIXCWKXB
      XHWDWSXADETVHVHVIVJVKVLVMVRVMVNWKWHGOZEPWPWHGEVOXLWOEWHWNGBWFWLLWGWMACWFW
      LDSVPVQVSVTWA $.
      $( [5-Oct-2006] $)
  $}

  $( Alternate definition of proper subclass. $)
  dfpss2 $p |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) $=
    ( wpss wss wne wa wceq wn df-pss df-ne anbi2i bitri ) ABCABDZABEZFMABGHZFAB
    INOMABJKL $.
    $( [7-Feb-1996] $)

  $( Alternate definition of proper subclass.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  dfpss3 $p |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) $=
    ( wpss wss wceq wn wa dfpss2 eqss baib notbid pm5.32i bitri ) ABCABDZABEZFZ
    GNBADZFZGABHNPRNOQONQABIJKLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq1 $p |- ( A = B -> ( A C. C <-> B C. C ) ) $=
    ( wceq wss wne wa wpss sseq1 neeq1 anbi12d df-pss 3bitr4g ) ABDZACEZACFZGBC
    EZBCFZGACHBCHNOQPRABCIABCJKACLBCLM $.
    $( [7-Feb-1996] $)

  $( Equality theorem for proper subclass. $)
  psseq2 $p |- ( A = B -> ( C C. A <-> C C. B ) ) $=
    ( wceq wss wne wa wpss sseq2 neeq2 anbi12d df-pss 3bitr4g ) ABDZCAEZCAFZGCB
    EZCBFZGCAHCBHNOQPRABCIABCJKCALCBLM $.
    $( [7-Feb-1996] $)

  ${
    psseq1i.1 $e |- A = B $.
    $( An equality inference for the proper subclass relationship. $)
    psseq1i $p |- ( A C. C <-> B C. C ) $=
      ( wceq wpss wb psseq1 ax-mp ) ABEACFBCFGDABCHI $.
      $( [9-Jun-2004] $)

    $( An equality inference for the proper subclass relationship. $)
    psseq2i $p |- ( C C. A <-> C C. B ) $=
      ( wceq wpss wb psseq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [9-Jun-2004] $)

    ${
      psseq12i.2 $e |- C = D $.
      $( An equality inference for the proper subclass relationship. $)
      psseq12i $p |- ( A C. C <-> B C. D ) $=
        ( wpss psseq1i psseq2i bitri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [9-Jun-2004] $)
    $}
  $}

  ${
    psseq1d.1 $e |- ( ph -> A = B ) $.
    $( An equality deduction for the proper subclass relationship. $)
    psseq1d $p |- ( ph -> ( A C. C <-> B C. C ) ) $=
      ( wceq wpss wb psseq1 syl ) ABCFBDGCDGHEBCDIJ $.
      $( [9-Jun-2004] $)

    $( An equality deduction for the proper subclass relationship. $)
    psseq2d $p |- ( ph -> ( C C. A <-> C C. B ) ) $=
      ( wceq wpss wb psseq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [9-Jun-2004] $)

    ${
      psseq12d.2 $e |- ( ph -> C = D ) $.
      $( An equality deduction for the proper subclass relationship. $)
      psseq12d $p |- ( ph -> ( A C. C <-> B C. D ) ) $=
        ( wpss psseq1d psseq2d bitrd ) ABDHCDHCEHABCDFIADECGJK $.
        $( [9-Jun-2004] $)
    $}
  $}

  $( A proper subclass is a subclass.  Theorem 10 of [Suppes] p. 23. $)
  pssss $p |- ( A C. B -> A C_ B ) $=
    ( wpss wss wne df-pss simplbi ) ABCABDABEABFG $.
    $( [7-Feb-1996] $)
  $( Two classes in a proper subclass relationship are not equal. $)
  pssne $p |- ( A C. B -> A =/= B ) $=
    ( wpss wss wne df-pss simprbi ) ABCABDABEABFG $.
    $( [16-Feb-2015] $)

  ${
    pssssd.1 $e |- ( ph -> A C. B ) $.
    $( Deduce subclass from proper subclass. $)
    pssssd $p |- ( ph -> A C_ B ) $=
      ( wpss wss pssss syl ) ABCEBCFDBCGH $.
      $( [29-Feb-1996] $)
  $}

  $( Subclass in terms of proper subclass. $)
  sspss $p |- ( A C_ B <-> ( A C. B \/ A = B ) ) $=
    ( wss wpss wceq wo wn dfpss2 simplbi2 con1d orrd pssss eqimss jaoi impbii )
    ABCZABDZABEZFPQRPRQQPRGABHIJKQPRABLABMNO $.
    $( [25-Feb-1996] $)

  $( Proper subclass is irreflexive.  Theorem 7 of [Suppes] p. 23. $)
  pssirr $p |- -. A C. A $=
    ( wpss wss wn wa pm3.24 dfpss3 mtbir ) AABAACZIDEIFAAGH $.
    $( [7-Feb-1996] $)

  $( Proper subclass has no 2-cycle loops.  Compare Theorem 8 of [Suppes]
     p. 23.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  pssn2lp $p |- -. ( A C. B /\ B C. A ) $=
    ( wpss wn wi wa wss dfpss3 simprbi pssss nsyl imnan mpbi ) ABCZBACZDENOFDNB
    AGZONABGPDABHIBAJKNOLM $.
    $( [26-Jun-2011] $) $( [7-Feb-1996] $)

  $( Two ways of stating trichotomy with respect to inclusion. $)
  sspsstri $p |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) $=
    ( wss wo wpss wceq w3o sspss eqcom orbi2i bitri orbi12i orordir or32 df-3or
    bitr4i 3bitr2i ) ABCZBACZDABEZABFZDZBAEZUADZDTUCDUADZTUAUCGZRUBSUDABHSUCBAF
    ZDUDBAHUGUAUCBAIJKLTUCUAMUEUBUCDUFTUCUANTUAUCOPQ $.
    $( [12-Aug-2004] $)

  $( Partial trichotomy law for subclasses.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  ssnpss $p |- ( A C_ B -> -. B C. A ) $=
    ( wpss wss wn dfpss3 simprbi con2i ) BACZABDZIBADJEBAFGH $.
    $( [26-Jun-2011] $) $( [16-May-1996] $)

  $( Transitive law for proper subclass.  Theorem 9 of [Suppes] p. 23. $)
  psstr $p |- ( ( A C. B /\ B C. C ) -> A C. C ) $=
    ( wpss wa wss wceq pssss sylan9ss pssn2lp psseq1 anbi1d mtbiri con2i dfpss2
    wn sylanbrc ) ABDZBCDZEZACFACGZPACDRSABCABHBCHIUATUATCBDZSECBJUARUBSACBKLMN
    ACOQ $.
    $( [7-Feb-1996] $)

  $( Transitive law for subclass and proper subclass. $)
  sspsstr $p |- ( ( A C_ B /\ B C. C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss wi psstr ex psseq1 biimprd jaoi imp sylanb ) ABDAB
    EZABFZGZBCEZACEZABHSTUAQTUAIRQTUAABCJKRUATABCLMNOP $.
    $( [3-Apr-1996] $)

  $( Transitive law for subclass and proper subclass. $)
  psssstr $p |- ( ( A C. B /\ B C_ C ) -> A C. C ) $=
    ( wss wpss wceq wo sspss psstr ex psseq2 biimpcd jaod imp sylan2b ) BCDABEZ
    BCEZBCFZGZACEZBCHPSTPQTRPQTABCIJRPTBCAKLMNO $.
    $( [3-Apr-1996] $)

  $( A class is not a proper subclass of another iff it satisfies a
     one-directional form of ~ eqss .  (Contributed by Mario Carneiro,
     15-May-2015.) $)
  npss $p |- ( -. A C. B <-> ( A C_ B -> A = B ) ) $=
    ( wss wceq wi wpss wn wa pm4.61 dfpss2 bitr4i con1bii ) ABCZABDZEZABFZOGMNG
    HPMNIABJKL $.
    $( [15-May-2015] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The difference, union, and intersection of two classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq1 $p |- ( A = B -> ( A \ C ) = ( B \ C ) ) $=
      ( vx wceq cv wcel wn crab cdif rabeq dfdif2 3eqtr4g ) ABEDFCGHZDAINDBIACJ
      BCJNDABKDACLDBCLM $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)

    $( Equality theorem for class difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeq2 $p |- ( A = B -> ( C \ A ) = ( C \ B ) ) $=
      ( vx wceq cv wcel wn crab cdif eleq2 notbid rabbidv dfdif2 3eqtr4g ) ABEZ
      DFZAGZHZDCIQBGZHZDCICAJCBJPSUADCPRTABQKLMDCANDCBNO $.
      $( [26-Jun-2011] $) $( [10-Feb-1997] $)
  $}

  $( Equality theorem for class difference.  (Contributed by FL,
     31-Aug-2009.) $)
  difeq12 $p |- ( ( A = B /\ C = D ) -> ( A \ C ) = ( B \ D ) ) $=
    ( wceq cdif difeq1 difeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    difeq1i.1 $e |- A = B $.
    $( Inference adding difference to the right in a class equality. $)
    difeq1i $p |- ( A \ C ) = ( B \ C ) $=
      ( wceq cdif difeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [15-Nov-2002] $)

    $( Inference adding difference to the left in a class equality. $)
    difeq2i $p |- ( C \ A ) = ( C \ B ) $=
      ( wceq cdif difeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [15-Nov-2002] $)

    ${
      difeq12i.2 $e |- C = D $.
      $( Equality inference for class difference. $)
      difeq12i $p |- ( A \ C ) = ( B \ D ) $=
        ( cdif difeq1i difeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
        $( [29-Aug-2004] $)
    $}
  $}

  ${
    difeq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding difference to the right in a class equality. $)
    difeq1d $p |- ( ph -> ( A \ C ) = ( B \ C ) ) $=
      ( wceq cdif difeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [15-Nov-2002] $)

    $( Deduction adding difference to the left in a class equality. $)
    difeq2d $p |- ( ph -> ( C \ A ) = ( C \ B ) ) $=
      ( wceq cdif difeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [15-Nov-2002] $)
  $}

  ${
    difeq12d.1 $e |- ( ph -> A = B ) $.
    difeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for class difference.  (Contributed by FL,
       29-May-2014.) $)
    difeq12d $p |- ( ph -> ( A \ C ) = ( B \ D ) ) $=
      ( cdif difeq1d difeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [29-May-2014] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    difeqri.1 $e |- ( ( x e. A /\ -. x e. B ) <-> x e. C ) $.
    $( Inference from membership to difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difeqri $p |- ( A \ B ) = C $=
      ( cdif cv wcel wn wa eldif bitri eqriv ) ABCFZDAGZNHOBHOCHIJODHOBCKELM $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)
  $}

  ${
    hbdif.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbdif.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for class difference.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       2-Apr-2010.) $)
    hbdif $p |- ( y e. ( A \ B ) -> A. x y e. ( A \ B ) ) $=
      ( cv cdif wcel wn wa eldif hbn hban hbxfrbi ) BGZCDHIPCIZPDIZJZKAPCDLQSAE
      RAFMNO $.
      $( [15-Apr-2010] $) $( [3-Dec-2003] $)
  $}

  $( Implication of membership in a class difference. $)
  eldifi $p |- ( A e. ( B \ C ) -> A e. B ) $=
    ( cdif wcel wn eldif simplbi ) ABCDEABEACEFABCGH $.
    $( [29-Apr-1994] $)

  $( Implication of membership in a class difference. $)
  eldifn $p |- ( A e. ( B \ C ) -> -. A e. C ) $=
    ( cdif wcel wn eldif simprbi ) ABCDEABEACEFABCGH $.
    $( [3-May-1994] $)

  $( A set does not belong to a class excluding it. $)
  elndif $p |- ( A e. B -> -. A e. ( C \ B ) ) $=
    ( cdif wcel eldifn con2i ) ACBDEABEACBFG $.
    $( [27-Jun-1994] $)

  $( Implication of membership in a class difference. $)
  neldif $p |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) $=
    ( wcel cdif wn eldif simplbi2 con1d imp ) ABDZABCEDZFACDZKMLLKMFABCGHIJ $.
    $( [28-Jun-1994] $)

  ${
    $d x A $.  $d x B $.
    $( Double class difference.  Exercise 11 of [TakeutiZaring] p. 22. $)
    difdif $p |- ( A \ ( B \ A ) ) = A $=
      ( vx cdif cv wcel wi wa wn pm4.45im eldif xchbinxr anbi2i bitr2i difeqri
      iman ) CABADZACEZAFZSRBFZSGZHSRQFZIZHSTJUAUCSUATSIHUBTSPRBAKLMNO $.
      $( [17-May-1998] $)
    $d x A $.  $d x B $.

    $( Subclass relationship for class difference.  Exercise 14 of
       [TakeutiZaring] p. 22. $)
    difss $p |- ( A \ B ) C_ A $=
      ( vx cdif cv eldifi ssriv ) CABDACEABFG $.
      $( [29-Apr-1994] $)
  $}

  $( Preservation of a subclass relationship by class difference. $)
  ssdifss $p |- ( A C_ B -> ( A \ C ) C_ B ) $=
    ( cdif wss difss sstr mpan ) ACDZAEABEIBEACFIABGH $.
    $( [15-Feb-2007] $)

  ${
    $d x A $.
    $( Double complement under universal class.  Exercise 4.10(s) of
       [Mendelson] p. 231. $)
    ddif $p |- ( _V \ ( _V \ A ) ) = A $=
      ( vx cvv cdif cv wcel wn wa eldif mpbiran con2bii biantrur bitr2i difeqri
      vex ) BCCADZABEZAFZQPFZGZQCFZTHSRSUARGBOZQCAIJKUATUBLMN $.
      $( [8-Jan-2002] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Contraposition law for subsets. $)
    ssconb $p |- ( ( A C_ C /\ B C_ C ) ->
                  ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) $=
      ( vx wss wa cv wcel cdif wi wal wn wb ssel pm5.1 jcab 3bitr4g eldif dfss2
      imbi2i syl2an con2b a1i anbi12d albidv ) ACEZBCEZFZDGZAHZUICBIZHZJZDKUIBH
      ZUICAIZHZJZDKAUKEBUOEUHUMUQDUHUJUICHZUNLZFZJZUNURUJLZFZJZUMUQUHUJURJZUJUS
      JZFUNURJZUNVBJZFVAVDUHVEVGVFVHUFVEVGVEVGMUGACUINBCUINVEVGOUAVFVHMUHUJUNUB
      UCUDUJURUSPUNURVBPQULUTUJUICBRTUPVCUNUICARTQUEDAUKSDBUOSQ $.
      $( [22-Mar-1998] $)

    $( Contraposition law for subsets.  Exercise 15 of [TakeutiZaring]
       p. 22. $)
    sscon $p |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) $=
      ( vx wss cdif cv wcel wn wa ssel con3d anim2d eldif 3imtr4g ssrdv ) ABEZD
      CBFZCAFZQDGZCHZTBHZIZJUATAHZIZJTRHTSHQUCUEUAQUDUBABTKLMTCBNTCANOP $.
      $( [22-Mar-1998] $)

    $( Difference law for subsets. $)
    ssdif $p |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) $=
      ( vx wss cdif cv wcel wn wa ssel anim1d eldif 3imtr4g ssrdv ) ABEZDACFZBC
      FZPDGZAHZSCHIZJSBHZUAJSQHSRHPTUBUAABSKLSACMSBCMNO $.
      $( [28-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in class union.  Theorem 12 of [Suppes]
       p. 25. $)
    elun $p |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) $=
      ( vx cun wcel cvv wo elex jaoi wceq eleq1 orbi12d df-un elab2g pm5.21nii
      cv ) ABCEZFAGFZABFZACFZHZARITSUAABIACIJDQZBFZUCCFZHUBDARGUCAKUDTUEUAUCABL
      UCACLMDBCNOP $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    uneqri.1 $e |- ( ( x e. A \/ x e. B ) <-> x e. C ) $.
    $( Inference from membership to union. $)
    uneqri $p |- ( A u. B ) = C $=
      ( cun cv wcel wo elun bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for union of classes.  Theorem 23 of [Suppes] p. 27. $)
    unidm $p |- ( A u. A ) = A $=
      ( vx cv wcel oridm uneqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Commutative law for union of classes.  Exercise 6 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    uncom $p |- ( A u. B ) = ( B u. A ) $=
      ( vx cun cv wcel wo orcom elun bitr4i uneqri ) CABBADZCEZAFZMBFZGONGMLFNO
      HMBAIJK $.
      $( [26-Jun-2011] $) $( [25-Jun-1998] $)
  $}

  ${
    $( If a class equals the union of two other classes, then it equals the
       union of those two classes commuted. ~ equncom was automatically derived
       from ~ equncomVD using the tools program
       translate_without_overwriting.cmd and minimizing.  (Contributed by Alan
       Sare, 18-Feb-2012.) $)
    equncom $p |- ( A = ( B u. C ) <-> A = ( C u. B ) ) $=
      ( cun uncom eqeq2i ) BCDCBDABCEF $.
      $( [18-Feb-2012] $)
  $}

  ${
    equncomi.1 $e |- A = ( B u. C ) $.
    $( Inference form of ~ equncom . ~ equncomi was automatically derived from
       ~ equncomiVD using the tools program translate_without_overwriting.cmd
       and minimizing.  (Contributed by Alan Sare, 18-Feb-2012.) $)
    equncomi $p |- A = ( C u. B ) $=
      ( cun wceq equncom mpbi ) ABCEFACBEFDABCGH $.
      $( [18-Feb-2012] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for union of two classes. $)
    uneq1 $p |- ( A = B -> ( A u. C ) = ( B u. C ) ) $=
      ( vx wceq cun cv wcel wo eleq2 orbi1d elun 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [5-Aug-1993] $)
  $}

  $( Equality theorem for the union of two classes. $)
  uneq2 $p |- ( A = B -> ( C u. A ) = ( C u. B ) ) $=
    ( wceq cun uneq1 uncom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for union of two classes. $)
  uneq12 $p |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) $=
    ( wceq cun uneq1 uneq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [29-Mar-1998] $)

  ${
    uneq1i.1 $e |- A = B $.
    $( Inference adding union to the right in a class equality. $)
    uneq1i $p |- ( A u. C ) = ( B u. C ) $=
      ( wceq cun uneq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [30-Aug-1993] $)

    $( Inference adding union to the left in a class equality. $)
    uneq2i $p |- ( C u. A ) = ( C u. B ) $=
      ( wceq cun uneq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [30-Aug-1993] $)

    ${
      uneq12i.2 $e |- C = D $.
      $( Equality inference for union of two classes.  (The proof was shortened
         by Eric Schmidt, 26-Jan-2007.) $)
      uneq12i $p |- ( A u. C ) = ( B u. D ) $=
        ( wceq cun uneq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [12-Aug-2004] $)
    $}
  $}

  ${
    uneq1d.1 $e |- ( ph -> A = B ) $.
    $( Deduction adding union to the right in a class equality. $)
    uneq1d $p |- ( ph -> ( A u. C ) = ( B u. C ) ) $=
      ( wceq cun uneq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-Mar-1998] $)

    $( Deduction adding union to the left in a class equality. $)
    uneq2d $p |- ( ph -> ( C u. A ) = ( C u. B ) ) $=
      ( wceq cun uneq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [29-Mar-1998] $)

    ${
      uneq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for union of two classes.  (The proof was shortened
         by Andrew Salmon, 26-Jun-2011.) $)
      uneq12d $p |- ( ph -> ( A u. C ) = ( B u. D ) ) $=
        ( wceq cun uneq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [29-Sep-2004] $)
    $}
  $}

  ${
    hbun.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbun.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the union of classes. $)
    hbun $p |- ( y e. ( A u. B ) -> A. x y e. ( A u. B ) ) $=
      ( cv cun wcel wo elun hbor hbxfrbi ) BGZCDHINCIZNDIZJANCDKOPAEFLM $.
      $( [15-Sep-2003] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for union of classes.  Exercise 8 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    unass $p |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) $=
      ( vx cun cv wcel wo elun orbi2i orbi1i orass bitr2i 3bitrri uneqri ) DABE
      ZCABCEZEZDFZRGSAGZSQGZHTSBGZSCGZHZHZSPGZUCHZSAQIUAUDTSBCIJUGTUBHZUCHUEUFU
      HUCSABIKTUBUCLMNO $.
      $( [26-Jun-2011] $) $( [3-May-1994] $)
  $}

  $( A rearrangement of union. $)
  un12 $p |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) $=
    ( cun uncom uneq1i unass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.
    $( [12-Aug-2004] $)

  $( A rearrangement of union.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  un23 $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) $=
    ( cun unass un12 uncom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [12-Aug-2004] $)

  $( A rearrangement of the union of 4 classes. $)
  un4 $p |- ( ( A u. B ) u. ( C u. D ) ) =
            ( ( A u. C ) u. ( B u. D ) ) $=
    ( cun un12 uneq2i unass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [12-Aug-2004] $)

  $( Union distributes over itself. $)
  unundi $p |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) $=
    ( cun unidm uneq1i un4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [17-Aug-2004] $)

  $( Union distributes over itself. $)
  unundir $p |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) $=
    ( cun unidm uneq2i un4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for union of classes.  Theorem 25 of [Suppes]
       p. 27. $)
    ssun1 $p |- A C_ ( A u. B ) $=
      ( vx cun cv wcel wo orc elun sylibr ssriv ) CAABDZCEZAFZNMBFZGMLFNOHMABIJ
      K $.
      $( [5-Aug-1993] $)
  $}

  $( Subclass relationship for union of classes. $)
  ssun2 $p |- A C_ ( B u. A ) $=
    ( cun ssun1 uncom sseqtri ) AABCBACABDABEF $.
    $( [30-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun3 $p |- ( A C_ B -> A C_ ( B u. C ) ) $=
    ( wss cun ssun1 sstr2 mpi ) ABDBBCEZDAIDBCFABIGH $.
    $( [5-Aug-1993] $)

  $( Subclass law for union of classes. $)
  ssun4 $p |- ( A C_ B -> A C_ ( C u. B ) ) $=
    ( wss cun ssun2 sstr2 mpi ) ABDBCBEZDAIDBCFABIGH $.
    $( [14-Aug-1994] $)

  $( Membership law for union of classes. $)
  elun1 $p |- ( A e. B -> A e. ( B u. C ) ) $=
    ( cun ssun1 sseli ) BBCDABCEF $.
    $( [5-Aug-1993] $)

  $( Membership law for union of classes. $)
  elun2 $p |- ( A e. B -> A e. ( C u. B ) ) $=
    ( cun ssun2 sseli ) BCBDABCEF $.
    $( [30-Aug-1993] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass law for union of classes.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unss1 $p |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) $=
      ( vx wss cun cv wcel wo ssel orim1d elun 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [14-Oct-1999] $)

    $( A relationship between subclass and union.  Theorem 26 of [Suppes]
       p. 27.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssequn1 $p |- ( A C_ B <-> ( A u. B ) = B ) $=
      ( vx cv wcel wi wal cun wb wceq wo bicom pm4.72 elun bibi1i 3bitr4i albii
      wss dfss2 dfcleq ) CDZAEZUABEZFZCGUAABHZEZUCIZCGABRUEBJUDUGCUCUBUCKZIUHUC
      IUDUGUCUHLUBUCMUFUHUCUAABNOPQCABSCUEBTP $.
      $( [26-Jun-2011] $) $( [30-Aug-1993] $)
  $}

  $( Subclass law for union of classes.  Exercise 7 of [TakeutiZaring]
     p. 18. $)
  unss2 $p |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) $=
    ( wss cun unss1 uncom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [14-Oct-1999] $)

  $( Subclass law for union of classes. $)
  unss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) $=
    ( wss cun unss1 unss2 sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [2-Jun-2004] $)

  $( A relationship between subclass and union. $)
  ssequn2 $p |- ( A C_ B <-> ( B u. A ) = B ) $=
    ( wss cun wceq ssequn1 uncom eqeq1i bitri ) ABCABDZBEBADZBEABFJKBABGHI $.
    $( [23-Sep-2004] $) $( [13-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( The union of two subclasses is a subclass.  Theorem 27 of [Suppes] p. 27
       and its converse. $)
    unss $p |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) $=
      ( vx cv cun wcel wi wal wa wss elun imbi1i jaob bitri albii dfss2 anbi12i
      wo 19.26 bitr4i 3bitr4ri ) DEZABFZGZUCCGZHZDIUCAGZUFHZUCBGZUFHZJZDIZUDCKA
      CKZBCKZJZUGULDUGUHUJSZUFHULUEUQUFUCABLMUHUFUJNOPDUDCQUPUIDIZUKDIZJUMUNURU
      OUSDACQDBCQRUIUKDTUAUB $.
      $( [11-Jun-2004] $)
  $}

  ${
    unssi.1 $e |- A C_ C $.
    unssi.2 $e |- B C_ C $.
    $( An inference showing the union of two subclasses is a subclass.
       (Contributed by Raph Levien, 10-Dec-2002.) $)
    unssi $p |- ( A u. B ) C_ C $=
      ( wss wa cun pm3.2i unss mpbi ) ACFZBCFZGABHCFLMDEIABCJK $.
      $( [10-Dec-2002] $)
  $}

  ${
    unssd.1 $e |- ( ph -> A C_ C ) $.
    unssd.2 $e |- ( ph -> B C_ C ) $.
    $( A deduction showing the union of two subclasses is a subclass.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    unssd $p |- ( ph -> ( A u. B ) C_ C ) $=
      ( wss cun wa unss biimpi syl2anc ) ABDGZCDGZBCHDGZEFMNIOBCDJKL $.
      $( [3-Jun-2011] $)
  $}

  $( A condition that implies inclusion in the union of two classes. $)
  ssun $p |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) $=
    ( wss cun ssun3 ssun4 jaoi ) ABDABCEDACDABCFACBGH $.
    $( [23-Nov-2003] $)

  $( Restricted existential quantification over union.  (Contributed by Jeff
     Madsen, 5-Jan-2011.) $)
  rexun $p |- ( E. x e. ( A u. B ) ph <->
                          ( E. x e. A ph \/ E. x e. B ph ) ) $=
    ( cun wrex cv wcel wa wo df-rex elun anbi1i andir bitri exbii 19.43 orbi12i
    wex bitr4i 3bitri ) ABCDEZFBGZUBHZAIZBSUCCHZAIZUCDHZAIZJZBSZABCFZABDFZJZABU
    BKUEUJBUEUFUHJZAIUJUDUOAUCCDLMUFUHANOPUKUGBSZUIBSZJUNUGUIBQULUPUMUQABCKABDK
    RTUA $.
    $( [29-Jan-2011] $) $( [5-Jan-2011] $)

  $( Restricted quantification over a union.  (Contributed by Scott Fenton,
     12-Apr-2011.)  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  ralunb $p |- ( A. x e. ( A u. B ) ph <->
                 ( A. x e. A ph /\ A. x e. B ph ) ) $=
    ( cv cun wcel wi wal wa wral wo elun imbi1i jaob bitri albii df-ral anbi12i
    19.26 3bitr4i ) BEZCDFZGZAHZBIZUBCGZAHZBIZUBDGZAHZBIZJZABUCKABCKZABDKZJUFUH
    UKJZBIUMUEUPBUEUGUJLZAHUPUDUQAUBCDMNUGAUJOPQUHUKBTPABUCRUNUIUOULABCRABDRSUA
    $.
    $( [29-Jun-2011] $) $( [12-Apr-2011] $)

  $( Restricted quantification over union.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  ralun $p |- ( ( A. x e. A ph /\ A. x e. B ph ) -> A. x e. ( A u. B ) ph ) $=
    ( cun wral wa ralunb biimpri ) ABCDEFABCFABDFGABCDHI $.
    $( [2-Sep-2009] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Expansion of membership in an intersection of two classes.  Theorem 12
       of [Suppes] p. 25. $)
    elin $p |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) $=
      ( vx cin wcel wa elex adantl cv wceq eleq1 anbi12d df-in elab2g pm5.21nii
      cvv ) ABCEZFAQFZABFZACFZGZARHUASTACHIDJZBFZUCCFZGUBDARQUCAKUDTUEUAUCABLUC
      ACLMDBCNOP $.
      $( [29-Apr-1994] $)
  $}

  ${
    elin2.x $e |- X = ( B i^i C ) $.
    $( Membership in a class defined as an intersection.  (Contributed by
       Stefan O'Rear, 29-Mar-2015.) $)
    elin2 $p |- ( A e. X <-> ( A e. B /\ A e. C ) ) $=
      ( wcel cin wa eleq2i elin bitri ) ADFABCGZFABFACFHDLAEIABCJK $.
      $( [29-Mar-2015] $)
  $}

  ${
    elin3.x $e |- X = ( ( B i^i C ) i^i D ) $.
    $( Membership in a class defined as a ternary intersection.  (Contributed
       by Stefan O'Rear, 29-Mar-2015.) $)
    elin3 $p |- ( A e. X <-> ( A e. B /\ A e. C /\ A e. D ) ) $=
      ( cin wcel wa w3a elin anbi1i elin2 df-3an 3bitr4i ) ABCGZHZADHZIABHZACHZ
      IZRIAEHSTRJQUARABCKLAPDEFMSTRNO $.
      $( [29-Mar-2015] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Commutative law for intersection of classes.  Exercise 7 of
       [TakeutiZaring] p. 17. $)
    incom $p |- ( A i^i B ) = ( B i^i A ) $=
      ( vx cin cv wcel wa ancom elin 3bitr4i eqriv ) CABDZBADZCEZAFZNBFZGPOGNLF
      NMFOPHNABINBAIJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    ineqri.1 $e |- ( ( x e. A /\ x e. B ) <-> x e. C ) $.
    $( Inference from membership to intersection. $)
    ineqri $p |- ( A i^i B ) = C $=
      ( cin cv wcel wa elin bitri eqriv ) ABCFZDAGZMHNBHNCHINDHNBCJEKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Equality theorem for intersection of two classes. $)
    ineq1 $p |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) $=
      ( vx wceq cin cv wcel wa eleq2 anbi1d elin 3bitr4g eqrdv ) ABEZDACFZBCFZO
      DGZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [14-Dec-1993] $)
  $}

  $( Equality theorem for intersection of two classes. $)
  ineq2 $p |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) $=
    ( wceq cin ineq1 incom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [26-Dec-1993] $)

  $( Equality theorem for intersection of two classes. $)
  ineq12 $p |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) $=
    ( wceq cin ineq1 ineq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [8-May-1994] $)

  ${
    ineq1i.1 $e |- A = B $.
    $( Equality inference for intersection of two classes. $)
    ineq1i $p |- ( A i^i C ) = ( B i^i C ) $=
      ( wceq cin ineq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [26-Dec-1993] $)

    $( Equality inference for intersection of two classes. $)
    ineq2i $p |- ( C i^i A ) = ( C i^i B ) $=
      ( wceq cin ineq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [26-Dec-1993] $)

    ${
      ineq12i.2 $e |- C = D $.
      $( Equality inference for intersection of two classes.  (The proof was
         shortened by Eric Schmidt, 26-Jan-2007.) $)
      ineq12i $p |- ( A i^i C ) = ( B i^i D ) $=
        ( wceq cin ineq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
        $( [27-Jan-2007] $) $( [24-Jun-2004] $)
    $}
  $}

  ${
    ineq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for intersection of two classes. $)
    ineq1d $p |- ( ph -> ( A i^i C ) = ( B i^i C ) ) $=
      ( wceq cin ineq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [10-Apr-1994] $)

    $( Equality deduction for intersection of two classes. $)
    ineq2d $p |- ( ph -> ( C i^i A ) = ( C i^i B ) ) $=
      ( wceq cin ineq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [10-Apr-1994] $)

    ${
      ineq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for intersection of two classes.  (The proof was
         shortened by Andrew Salmon, 26-Jun-2011.) $)
      ineq12d $p |- ( ph -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
        $( [26-Jun-2011] $) $( [24-Jun-2004] $)
    $}

    ${
      ineqan12d.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for intersection of two classes. $)
      ineqan12d $p |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) $=
        ( wceq cin ineq12 syl2an ) ACDIEFICEJDFJIBGHCDEFKL $.
        $( [7-Feb-2007] $)
    $}
  $}

  $( A frequently-used variant of subclass definition ~ df-ss . $)
  dfss1 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( wss cin wceq df-ss incom eqeq1i bitri ) ABCABDZAEBADZAEABFJKAABGHI $.
    $( [10-Jan-2015] $)

  ${
    hbin.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbin.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for the intersection of classes.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 6-Apr-2010.) $)
    hbin $p |- ( y e. ( A i^i B ) -> A. x y e. ( A i^i B ) ) $=
      ( cv cin wcel wa elin hban hbxfrbi ) BGZCDHINCIZNDIZJANCDKOPAEFLM $.
      $( [15-Apr-2010] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A y $.  $d C y z $.  $d D y z $.  $d x y z $.
    $( Distribute proper substitution through an intersection relation.
       (Contributed by Alan Sare, 22-Jul-2012.) $)
    csbing $p |- ( A e. B -> [_ A / x ]_ ( C i^i D ) =
                  ( [_ A / x ]_ C i^i [_ A / x ]_ D ) ) $=
      ( vy vz cv cin csb wceq csbeq1 ineq12d eqeq12d vex wcel ax-17 hbcsb1 hbin
      csbeq1a csbief vtoclg ) AFHZDEIZJZAUCDJZAUCEJZIZKABUDJZABDJZABEJZIZKFBCUC
      BKZUEUIUHULAUCBUDLUMUFUJUGUKAUCBDLAUCBELMNAGUCUDUHFOAGUFUGAGUCDGHUCPAQZRA
      GUCEUNRSAHUCKDUFEUGAUCDTAUCETMUAUB $.
      $( [22-Jul-2012] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.
    rabbi2dva.1 $e |- ( ( ph /\ x e. A ) -> ( x e. B <-> ps ) ) $.
    $( Deduction from a wff to a restricted class abstraction. $)
    rabbi2dva $p |- ( ph -> ( A i^i B ) = { x e. A | ps } ) $=
      ( cin cv wcel crab dfin5 rabbidva syl5eq ) ADEGCHEIZCDJBCDJCDEKANBCDFLM
      $.
      $( [14-Jan-2014] $)
  $}

  ${
    $d x A $.
    $( Idempotent law for intersection of classes.  Theorem 15 of [Suppes]
       p. 26. $)
    inidm $p |- ( A i^i A ) = A $=
      ( vx cv wcel anidm ineqri ) BAAABCADEF $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Associative law for intersection of classes.  Exercise 9 of
       [TakeutiZaring] p. 17. $)
    inass $p |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) $=
      ( vx cin cv wcel wa anass elin anbi2i bitr4i anbi1i 3bitr4i ineqri ) DABE
      ZCABCEZEZDFZAGZSBGZHZSCGZHZTSQGZHZSPGZUCHSRGUDTUAUCHZHUFTUAUCIUEUHTSBCJKL
      UGUBUCSABJMSAQJNO $.
      $( [3-May-1994] $)
  $}

  $( A rearrangement of intersection. $)
  in12 $p |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) $=
    ( cin incom ineq1i inass 3eqtr3i ) ABDZCDBADZCDABCDDBACDDIJCABEFABCGBACGH
    $.
    $( [21-Apr-2001] $)

  $( A rearrangement of intersection.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  in32 $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) $=
    ( cin inass in12 incom 3eqtri ) ABDCDABCDDBACDZDIBDABCEABCFBIGH $.
    $( [26-Jun-2011] $) $( [21-Apr-2001] $)

  $( A rearrangement of intersection. $)
  in13 $p |- ( A i^i ( B i^i C ) ) = ( C i^i ( B i^i A ) ) $=
    ( cin in32 incom 3eqtr4i ) BCDZADBADZCDAHDCIDBCAEAHFCIFG $.
    $( [27-Aug-2012] $)

  $( A rearrangement of intersection. $)
  in31 $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i B ) i^i A ) $=
    ( cin in12 incom 3eqtr4i ) CABDZDACBDZDHCDIADCABEHCFIAFG $.
    $( [27-Aug-2012] $)

  $( Rotate the intersection of 3 classes.. $)
  inrot $p |- ( ( A i^i B ) i^i C ) = ( ( C i^i A ) i^i B ) $=
    ( cin in31 in32 eqtri ) ABDCDCBDADCADBDABCECBAFG $.
    $( [27-Aug-2012] $)

  $( Rearrangement of intersection of 4 classes. $)
  in4 $p |- ( ( A i^i B ) i^i ( C i^i D ) ) =
            ( ( A i^i C ) i^i ( B i^i D ) ) $=
    ( cin in12 ineq2i inass 3eqtr4i ) ABCDEZEZEACBDEZEZEABEJEACELEKMABCDFGABJHA
    CLHI $.
    $( [21-Apr-2001] $)

  $( Intersection distributes over itself. $)
  inindi $p |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) $=
    ( cin inidm ineq1i in4 eqtr3i ) AADZBCDZDAJDABDACDDIAJAEFAABCGH $.
    $( [6-May-1994] $)

  $( Intersection distributes over itself. $)
  inindir $p |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) $=
    ( cin inidm ineq2i in4 eqtr3i ) ABDZCCDZDICDACDBCDDJCICEFABCCGH $.
    $( [17-Aug-2004] $)

  $( A relationship between subclass and intersection.  Similar to Exercise 9
     of [TakeutiZaring] p. 18. $)
  sseqin2 $p |- ( A C_ B <-> ( B i^i A ) = A ) $=
    ( dfss1 ) ABC $.
    $( [23-Sep-2004] $) $( [17-May-1994] $)

  ${
    $d x A $.  $d x B $.
    $( The intersection of two classes is a subset of one of them.  Part of
       Exercise 12 of [TakeutiZaring] p. 18. $)
    inss1 $p |- ( A i^i B ) C_ A $=
      ( vx cin cv wcel elin simplbi ssriv ) CABDZACEZJFKAFKBFKABGHI $.
      $( [27-Apr-1994] $)
  $}

  $( The intersection of two classes is a subset of one of them.  Part of
     Exercise 12 of [TakeutiZaring] p. 18. $)
  inss2 $p |- ( A i^i B ) C_ B $=
    ( cin incom inss1 eqsstr3i ) ABCBACBBADBAEF $.
    $( [27-Apr-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Subclass of intersection.  Theorem 2.8(vii) of [Monk1] p. 26.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    ssin $p |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) $=
      ( vx cv wcel wi wal wa cin wss elin imbi2i albii jcab 19.26 3bitrri dfss2
      anbi12i 3bitr4i ) DEZAFZUABFZGZDHZUBUACFZGZDHZIZUBUABCJZFZGZDHZABKZACKZIA
      UJKUMUBUCUFIZGZDHUDUGIZDHUIULUQDUKUPUBUABCLMNUQURDUBUCUFONUDUGDPQUNUEUOUH
      DABRDACRSDAUJRT $.
      $( [26-Jun-2011] $) $( [15-Jun-2004] $)
  $}

  ${
    ssini.1 $e |- A C_ B $.
    ssini.2 $e |- A C_ C $.
    $( An inference showing that the a subclass of two classes is a subclass of
       their intersection. $)
    ssini $p |- A C_ ( B i^i C ) $=
      ( wss wa cin pm3.2i ssin mpbi ) ABFZACFZGABCHFLMDEIABCJK $.
      $( [24-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Add right intersection to subclass relation.  (The proof was shortened
       by Andrew Salmon, 26-Jun-2011.) $)
    ssrin $p |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) $=
      ( vx wss cin cv wcel wa ssel anim1d elin 3imtr4g ssrdv ) ABEZDACFZBCFZODG
      ZAHZRCHZIRBHZTIRPHRQHOSUATABRJKRACLRBCLMN $.
      $( [26-Jun-2011] $) $( [16-Aug-1994] $)

    $( Add left intersection to subclass relation. $)
    sslin $p |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) $=
      ( wss cin ssrin incom 3sstr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
      $( [19-Oct-1999] $)
  $}

  $( Intersection of subclasses. $)
  ss2in $p |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) $=
    ( wss cin ssrin sslin sylan9ss ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [5-May-2000] $)

  $( Intersection preserves subclass relationship. $)
  ssinss1 $p |- ( A C_ C -> ( A i^i B ) C_ C ) $=
    ( cin wss wi inss1 sstr2 ax-mp ) ABDZAEACEJCEFABGJACHI $.
    $( [14-Sep-1999] $)

  $( Inclusion of an intersection of two classes. $)
  inss $p |- ( ( A C_ C \/ B C_ C ) -> ( A i^i B ) C_ C ) $=
    ( wss cin ssinss1 incom syl5eqss jaoi ) ACDABEZCDBCDZABCFKJBAECABGBACFHI $.
    $( [30-Oct-2014] $)

  $( Absorption law for union. $)
  unabs $p |- ( A u. ( A i^i B ) ) = A $=
    ( cin wss cun wceq inss1 ssequn2 mpbi ) ABCZADAJEAFABGJAHI $.
    $( [16-Apr-2006] $)

  $( Absorption law for intersection. $)
  inabs $p |- ( A i^i ( A u. B ) ) = A $=
    ( cun wss cin wceq ssun1 df-ss mpbi ) AABCZDAJEAFABGAJHI $.
    $( [16-Apr-2006] $)

  $( Negation of subclass expressed in terms of intersection and proper
     subclass.  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  nssinpss $p |- ( -. A C_ B <-> ( A i^i B ) C. A ) $=
    ( cin wne wss wa wn wpss inss1 biantrur df-ss necon3bbii df-pss 3bitr4i ) A
    BCZADZOAEZPFABEZGOAHQPABIJROAABKLOAMN $.
    $( [26-Jun-2011] $) $( [30-Jun-2004] $)

  $( Negation of subclass expressed in terms of proper subclass and union. $)
  nsspssun $p |- ( -. A C_ B <-> B C. ( A u. B ) ) $=
    ( wss wn cun wa wpss ssun2 biantrur ssid biantru unss bitri xchnxbir dfpss3
    bitr4i ) ABCZDBABEZCZRBCZDZFZBRGTUBQSUABAHIQQBBCZFTUCQBJKABBLMNBROP $.
    $( [15-Sep-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Subclass defined in terms of class difference.  See comments under
       ~ dfun2 .  (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    dfss4 $p |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) $=
      ( vx wss wceq cdif sseqin2 cv wcel wn wa eldif notbii anbi2i wi elin abai
      cin iman bitr4i 3bitri difeqri eqeq1i ) ABDBARZAEBBAFZFZAEABGUFUDACBUEUDC
      HZBIZUGUEIZJZKUHUHUGAIZJKZJZKZUGUDIZUJUMUHUIULUGBALMNUOUHUKKUHUHUKOZKUNUG
      BAPUHUKQUPUMUHUHUKSNUATUBUCT $.
      $( [26-Jun-2011] $) $( [22-Mar-1998] $)

    $( An alternate definition of the union of two classes in terms of class
       difference, requiring no dummy variables.  Along with ~ dfin2 and
       ~ dfss4 it shows we can express union, intersection, and subset directly
       in terms of the single "primitive" operation ` \ ` (class
       difference). $)
    dfun2 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) $=
      ( vx cun cvv cdif cv wcel wo wn wa vex eldif mpbiran anbi1i ioran 3bitr4i
      con2bii elun eqriv ) CABDZEEAFZBFZFZCGZAHZUEBHZIZUEUCHZJZUEUAHUEUDHZUIUHU
      EUBHZUGJZKUFJZUMKUIUHJULUNUMULUEEHZUNCLZUEEAMNOUEUBBMUFUGPQRUEABSUKUOUJUP
      UEEUCMNQT $.
      $( [10-Jun-2004] $)

    $( An alternate definition of the intersection of two classes in terms of
       class difference, requiring no dummy variables.  See comments under
       ~ dfun2 .  Another version is given by ~ dfin4 . $)
    dfin2 $p |- ( A i^i B ) = ( A \ ( _V \ B ) ) $=
      ( vx cin cvv cdif cv wcel wa wn eldif mpbiran con2bii anbi2i elin 3bitr4i
      vex eqriv ) CABDZAEBFZFZCGZAHZUBBHZIUCUBTHZJZIUBSHUBUAHUDUFUCUEUDUEUBEHUD
      JCQUBEBKLMNUBABOUBATKPR $.
      $( [10-Jun-2004] $)

    $( Difference with intersection.  Theorem 33 of [Suppes] p. 29.  (The proof
       was shortened by Andrew Salmon, 26-Jun-2011.) $)
    difin $p |- ( A \ ( A i^i B ) ) = ( A \ B ) $=
      ( vx cin cdif cv wcel wi wn pm4.61 anclb elin imbi2i iman 3bitr2i con2bii
      wa eldif 3bitr4i difeqri ) CAABDZABEZCFZAGZUCBGZHZIUDUEIQUDUCUAGZIQZUCUBG
      UDUEJUFUHUFUDUDUEQZHUDUGHUHIUDUEKUGUIUDUCABLMUDUGNOPUCABRST $.
      $( [26-Jun-2011] $) $( [31-Mar-1998] $)
  $}

  $( Union defined in terms of intersection (DeMorgan's law).  Definition of
     union in [Mendelson] p. 231. $)
  dfun3 $p |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) $=
    ( cun cvv cdif cin dfun2 dfin2 ddif difeq2i eqtr2i eqtri ) ABCDDAEZBEZEDMDB
    EZFZEABGNPDPMDOEZENMOHQBMBIJKJL $.
    $( [8-Jan-2002] $)

  $( Intersection defined in terms of union (DeMorgan's law.  Similar to
     Exercise 4.10(n) of [Mendelson] p. 231. $)
  dfin3 $p |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) $=
    ( cvv cdif cun cin ddif dfun2 difeq1i difeq2i eqtri dfin2 3eqtr4ri ) CCACBD
    ZDZDZDOCCADZNEZDABFOGRPCRCCQDZNDZDPQNHTOCSANAGIJKJABLM $.
    $( [8-Jan-2002] $)

  $( Alternate definition of the intersection of two classes.  Exercise 4.10(q)
     of [Mendelson] p. 231. $)
  dfin4 $p |- ( A i^i B ) = ( A \ ( A \ B ) ) $=
    ( cin cdif wss wceq inss1 dfss4 mpbi difin difeq2i eqtr3i ) AAABCZDZDZMAABD
    ZDMAEOMFABGMAHINPAABJKL $.
    $( [25-Nov-2003] $)

  $( Intersection with universal complement.  Remark in [Stoll] p. 20. $)
  invdif $p |- ( A i^i ( _V \ B ) ) = ( A \ B ) $=
    ( cvv cdif cin dfin2 ddif difeq2i eqtri ) ACBDZEACJDZDABDAJFKBABGHI $.
    $( [17-Aug-2004] $)

  $( Intersection with class difference.  Theorem 34 of [Suppes] p. 29. $)
  indif $p |- ( A i^i ( A \ B ) ) = ( A \ B ) $=
    ( cdif cin dfin4 difeq2i difin 3eqtr2i ) AABCZDAAICZCAABDZCIAIEKJAABEFABGH
    $.
    $( [17-Aug-2004] $)

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Jeff Hankins, 15-Jul-2009.) $)
  indif2 $p |- ( A i^i ( B \ C ) ) = ( ( A i^i B ) \ C ) $=
    ( cin cvv cdif inass invdif ineq2i 3eqtr3ri ) ABDZECFZDABLDZDKCFABCFZDABLGK
    CHMNABCHIJ $.
    $( [12-Jul-2009] $)

  $( Bring an intersection in and out of a class difference.  (Contributed by
     Mario Carneiro, 15-May-2015.) $)
  indif1 $p |- ( ( A \ C ) i^i B ) = ( ( A i^i B ) \ C ) $=
    ( cdif cin indif2 incom difeq1i 3eqtr3i ) BACDZEBAEZCDJBEABEZCDBACFBJGKLCBA
    GHI $.
    $( [15-May-2015] $)

  $( Commutation law for intersection and difference.  (Contributed by Scott
     Fenton, 18-Feb-2013.) $)
  indifcom $p |- ( A i^i ( B \ C ) ) = ( B i^i ( A \ C ) ) $=
    ( cin cdif incom difeq1i indif2 3eqtr4i ) ABDZCEBADZCEABCEDBACEDJKCABFGABCH
    BACHI $.
    $( [18-Feb-2013] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distributive law for intersection over union.  Exercise 10 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    indi $p |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) $=
      ( vx cun cin cv wcel wo wa andi elin orbi12i bitr4i anbi2i 3bitr4i ineqri
      elun ) DABCEZABFZACFZEZDGZAHZUCBHZUCCHZIZJZUCTHZUCUAHZIZUDUCSHZJUCUBHUHUD
      UEJZUDUFJZIUKUDUEUFKUIUMUJUNUCABLUCACLMNULUGUDUCBCROUCTUARPQ $.
      $( [26-Jun-2011] $) $( [30-Sep-2002] $)

    $( Distributive law for union over intersection.  Exercise 11 of
       [TakeutiZaring] p. 17.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    undi $p |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) $=
      ( vx cin cun cv wcel wa wo elin elun anbi12i orbi2i bitr2i 3bitrri uneqri
      ordi ) DABCEZABFZACFZEZDGZUBHUCTHZUCUAHZIUCAHZUCBHZJZUFUCCHZJZIZUFUCSHZJZ
      UCTUAKUDUHUEUJUCABLUCACLMUMUFUGUIIZJUKULUNUFUCBCKNUFUGUIROPQ $.
      $( [30-Sep-2002] $)
  $}

  $( Distributive law for intersection over union.  Theorem 28 of [Suppes]
     p. 27. $)
  indir $p |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) $=
    ( cun cin indi incom uneq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  $( Distributive law for union over intersection.  Theorem 29 of [Suppes]
     p. 27. $)
  undir $p |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) $=
    ( cin cun undi uncom ineq12i 3eqtr4i ) CABDZECAEZCBEZDJCEACEZBCEZDCABFJCGMK
    NLACGBCGHI $.
    $( [30-Sep-2002] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Infer equality from equalities of union and intersection.  Exercise 20
       of [Enderton] p. 32 and its converse. $)
    unineq $p |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) )
                 <-> A = B ) $=
      ( vx cun wceq cin wa wcel wb eleq2 elin 3bitr3g iba bibi12d syl5ibr uncom
      wo elun biorf cv wi adantld eqeq12i sylbi adantrd pm2.61i eqrdv uneq1 jca
      wn ineq1 impbii ) ACEZBCEZFZACGZBCGZFZHZABFZUTDABDUAZCIZUTVBAIZVBBIZJZUBV
      CUSVFUPUSVFVCVDVCHZVEVCHZJUSVBUQIVBURIVGVHUQURVBKVBACLVBBCLMVCVDVGVEVHVCV
      DNVCVENOPUCVCUKZUPVFUSUPVFVIVCVDRZVCVERZJUPVBCAEZIZVBCBEZIZVJVKUPVLVNFVMV
      OJUNVLUOVNACQBCQUDVLVNVBKUEVBCASVBCBSMVIVDVJVEVKVCVDTVCVETOPUFUGUHVAUPUSA
      BCUIABCULUJUM $.
      $( [10-Aug-2004] $)
  $}

  $( Equality of union and intersection implies equality of their arguments.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  uneqin $p |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) $=
    ( cun cin wceq wss wa eqimss unss ssin sstr sylbir simpl anim12i syl sylibr
    eqss uneq2 unidm inidm eqtr4i ineq2 syl5eq eqtr3d impbii ) ABCZABDZEZABEZUH
    ABFZBAFZGZUIUHUFUGFZULUFUGHUMAUGFZBUGFZGULABUGIUNUJUOUKUNAAFUJGUJAABJAABKLU
    OUKBBFZGUKBABJUKUPMLNLOABQPUIAACZUFUGABARUIUQAADZUGUQAURASATUAABAUBUCUDUE
    $.
    $( [16-Apr-2006] $)

  $( Distributive law for class difference.  Theorem 39 of [Suppes] p. 29. $)
  difundi $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) $=
    ( cun cdif cvv cin dfun3 difeq2i inindi dfin2 invdif ineq12i 3eqtr3i eqtri
    ) ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASGAQGZARGZGUAUDAQRJASKUEUBUFUCABL
    ACLMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difundir $p |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) $=
    ( cun cvv cdif cin indir invdif uneq12i 3eqtr3i ) ABDZECFZGAMGZBMGZDLCFACFZ
    BCFZDABMHLCINPOQACIBCIJK $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference.  Theorem 40 of [Suppes] p. 29. $)
  difindi $p |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) $=
    ( cin cdif cvv cun dfin3 difeq2i indi dfin2 invdif uneq12i 3eqtr3i eqtri )
    ABCDZEAFFBEZFCEZGZEZEZABEZACEZGZPTABCHIASDAQDZARDZGUAUDAQRJASKUEUBUFUCABLAC
    LMNO $.
    $( [17-Aug-2004] $)

  $( Distributive law for class difference. $)
  difindir $p |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) $=
    ( cin cvv cdif inindir invdif ineq12i 3eqtr3i ) ABDZECFZDALDZBLDZDKCFACFZBC
    FZDABLGKCHMONPACHBCHIJ $.
    $( [17-Aug-2004] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( Distribute intersection over difference.  (Contributed by Scott Fenton,
       14-Apr-2011.) $)
    indifdir $p |- ( ( A \ B ) i^i C ) = ( ( A i^i C ) \ ( B i^i C ) ) $=
      ( vx cdif cin cv wcel wn wa pm3.24 intnan anass mtbir biorfi 3bitr4i elin
      wo eldif bitri an32 andi ianor anbi2i bitr4i anbi1i notbii anbi12i eqriv
      ) DABEZCFZACFZBCFZEZDGZAHZUOBHZIZJZUOCHZJZUPUTJZUQUTJZIZJZUOUKHZUOUNHZVAV
      BURUTIZRZJZVEVBURJZVKVBVHJZRVAVJVLVKVLUPUTVHJZJVMUPUTKLUPUTVHMNOUPURUTUAV
      BURVHUBPVDVIVBUQUTUCUDUEVFUOUJHZUTJVAUOUJCQVNUSUTUOABSUFTVGUOULHZUOUMHZIZ
      JVEUOULUMSVOVBVQVDUOACQVPVCUOBCQUGUHTPUI $.
      $( [14-Apr-2011] $)
  $}

  $( DeMorgan's law for union.  Theorem 5.2(13) of [Stoll] p. 19. $)
  undm $p |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) $=
    ( cvv difundi ) CABD $.
    $( [18-Aug-2004] $)

  $( DeMorgan's law for intersection.  Theorem 5.2(13') of [Stoll] p. 19. $)
  indm $p |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) $=
    ( cvv difindi ) CABD $.
    $( [18-Aug-2004] $)

  $( A relationship involving double difference and union. $)
  difun1 $p |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) $=
    ( cvv cdif cin cun inass invdif undm ineq2i eqtr3i 3eqtr3i difeq1i ) ADBEZF
    ZCEZABCGZEZABEZCEPDCEZFAOUAFZFZQSAOUAHPCIADREZFUCSUDUBABCJKARILMPTCABINL $.
    $( [29-Aug-2004] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    $( An equality involving class union and class difference.  The first
       equality of Exercise 13 of [TakeutiZaring] p. 22.  (Contributed by Alan
       Sare, 17-Apr-2012.) $)
    undif3 $p |- ( A u. ( B \ C ) ) = ( ( A u. B ) \ ( C \ A ) ) $=
      ( vx cdif cun cv wcel wn wa elun pm4.53 eldif xchnxbir anbi12i orbi2i orc
      wo olc jca anim12i simpl adantr adantl ccase impbii 3bitri 3bitr4ri eqriv
      jaoi orcd ) DABCEZFZABFZCAEZEZDGZUNHZUQUOHZIZJUQAHZUQBHZRZUQCHZIZVARZJZUQ
      UPHUQUMHZURVCUTVFUQABKVDVAIJVFUSVDVALUQCAMNOUQUNUOMVHVAUQULHZRVAVBVEJZRZV
      GUQAULKVIVJVAUQBCMPVKVGVAVGVJVAVCVFVAVBQVAVESTVBVCVEVFVBVASVEVAQUAUJVAVEV
      BVAVKVAVEJVAVJVAVEUBUKVJVASVAVKVAVAVJQZUCVAVKVBVLUDUEUFUGUHUI $.
      $( [17-Apr-2012] $)

    $( Represent a set difference as an intersection with a larger difference.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    difin2 $p |- ( A C_ C -> ( A \ B ) = ( ( C \ B ) i^i A ) ) $=
      ( vx wss cdif cin cv wcel wn wa wi wb ssel pm4.71 sylib anbi1d eldif elin
      anbi1i ancom anass bitr4i 3bitri 3bitr4g eqrdv ) ACEZDABFZCBFZAGZUGDHZAIZ
      UKBIJZKULUKCIZKZUMKZUKUHIUKUJIZUGULUOUMUGULUNLULUOMACUKNULUNOPQUKABRUQUKU
      IIZULKUNUMKZULKZUPUKUIASURUSULUKCBRTUTULUSKUPUSULUAULUNUMUBUCUDUEUF $.
      $( [2-Sep-2009] $)
  $}

  $( Swap second and third argument of double difference. $)
  dif32 $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) $=
    ( cun cdif uncom difeq2i difun1 3eqtr3i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [18-Aug-2004] $)

  $( Absorption-like law for class difference: you can remove a class only
     once.  (Contributed by FL, 2-Aug-2009.) $)
  difabs $p |- ( ( A \ B ) \ B ) = ( A \ B ) $=
    ( cun cdif difun1 unidm difeq2i eqtr3i ) ABBCZDABDZBDJABBEIBABFGH $.
    $( [2-Aug-2009] $)

  $( Two ways to express symmetric difference.  This theorem shows the
     equivalence of the definition of symmetric difference in [Stoll] p. 13 and
     the restated definition in Example 4.1 of [Stoll] p. 262. $)
  symdif1 $p |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) $=
    ( cun cin cdif difundir difin incom difeq2i eqtri uneq12i eqtr2i ) ABCABDZE
    AMEZBMEZCABEZBAEZCABMFNPOQABGOBBADZEQMRBABHIBAGJKL $.
    $( [17-Aug-2004] $)

  ${
    $d x A $.  $d x B $.
    $( Two ways to express symmetric difference.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    symdif2 $p |- ( ( A \ B ) u. ( B \ A ) ) =
                  { x | -. ( x e. A <-> x e. B ) } $=
      ( cv wcel wb wn cdif cun wo wa eldif orbi12i elun xor 3bitr4i abbi2i ) AD
      ZBEZRCEZFGZABCHZCBHZIZRUBEZRUCEZJSTGKZTSGKZJRUDEUAUEUGUFUHRBCLRCBLMRUBUCN
      STOPQ $.
      $( [26-Jun-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y $.  $d ph y $.  $d ps y $.
    $( Union of two class abstractions.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    unab $p |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } $=
      ( vy cab wo cv wsbc wcel sbor df-clab orbi12i 3bitr4ri uneqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Intersection of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    inab $p |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } $=
      ( vy cab wa cv wsbc wcel sban df-clab anbi12i 3bitr4ri ineqri ) DACEZBCEZ
      ABFZCEZQCDGZHACSHZBCSHZFSRISOIZSPIZFABCDJQDCKUBTUCUAADCKBDCKLMN $.
      $( [26-Jun-2011] $) $( [29-Sep-2002] $)

    $( Difference of two class abstractions.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    difab $p |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } $=
      ( vy cab wn wcel wsb df-clab sban bicomi xchbinxr anbi12i 3bitrri difeqri
      wa cv sbn ) DACEZBCEZABFZPZCEZDQZUCGUBCDHACDHZUACDHZPUDSGZUDTGZFZPUBDCIAU
      ACDJUEUGUFUIUGUEADCIKUFBCDHUHBCDRBDCILMNO $.
      $( [26-Jun-2011] $) $( [23-Oct-2004] $)
  $}

  $( A class builder defined by a negation.  (Contributed by FL,
     18-Sep-2010.) $)
  notab $p |- { x | -. ph } = ( _V \ { x | ph } ) $=
    ( wn cvv crab cv wcel wa cab cdif df-rab rabab difab difeq1i eqtr3i 3eqtr3i
    abid2 ) ACZBDEBFDGZRHBIZRBIDABIZJZRBDKRBLSBIZUAJTUBSABMUCDUABDQNOP $.
    $( [18-Sep-2010] $)

  $( Union of two restricted class abstractions. $)
  unrab $p |- ( { x e. A | ph } u. { x e. A | ps } ) =
              { x e. A | ( ph \/ ps ) } $=
    ( cv wcel wa cab cun wo crab unab andi abbii eqtr4i df-rab uneq12i 3eqtr4i
    ) CEDFZAGZCHZSBGZCHZIZSABJZGZCHZACDKZBCDKZIUECDKUDTUBJZCHUGTUBCLUFUJCSABMNO
    UHUAUIUCACDPBCDPQUECDPR $.
    $( [25-Mar-2004] $)

  $( Intersection of two restricted class abstractions. $)
  inrab $p |- ( { x e. A | ph } i^i { x e. A | ps } ) =
              { x e. A | ( ph /\ ps ) } $=
    ( cv wcel wa cab cin crab inab anandi abbii eqtr4i df-rab ineq12i 3eqtr4i )
    CEDFZAGZCHZRBGZCHZIZRABGZGZCHZACDJZBCDJZIUDCDJUCSUAGZCHUFSUACKUEUICRABLMNUG
    TUHUBACDOBCDOPUDCDOQ $.
    $( [1-Sep-2006] $)

  ${
    $d x B $.
    $( Intersection with a restricted class abstraction. $)
    inrab2 $p |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } $=
      ( cv wcel wa cab cin crab inab elin anbi1i an32 bitri abbii eqtr4i df-rab
      abid2 eqcomi ineq12i 3eqtr4i ) BEZCFZAGZBHZUCDFZBHZIZUCCDIZFZAGZBHZABCJZD
      IABUJJUIUEUGGZBHUMUEUGBKULUOBULUDUGGZAGUOUKUPAUCCDLMUDUGANOPQUNUFDUHABCRU
      HDBDSTUAABUJRUB $.
      $( [19-Nov-2007] $)
  $}

  $( Difference of two restricted class abstractions. $)
  difrab $p |- ( { x e. A | ph } \ { x e. A | ps } ) =
              { x e. A | ( ph /\ -. ps ) } $=
    ( cv wcel wa cab cdif wn difab anass simpr con3i anim2i pm3.2 adantr df-rab
    crab wi con3d imdistani impbii bitr3i abbii eqtr4i difeq12i 3eqtr4i ) CEDFZ
    AGZCHZUIBGZCHZIZUIABJZGZGZCHZACDSZBCDSZIUPCDSUNUJULJZGZCHURUJULCKUQVBCUQUJU
    OGZVBUIAUOLVCVBUOVAUJULBUIBMNOUJVAUOUJBULUIBULTAUIBPQUAUBUCUDUEUFUSUKUTUMAC
    DRBCDRUGUPCDRUH $.
    $( [23-Oct-2004] $)

  ${
    $d x A $.
    $( Alternate definition of restricted class abstraction. $)
    dfrab2 $p |- { x e. A | ph } = ( { x | ph } i^i A ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i eqtr3i incom 3eqtri )
      ABCDBECFZAGBHZCABHZIZSCIABCJQBHZSIRTQABKUACSBCLMNCSOP $.
      $( [20-Sep-2003] $)

    $( Alternate definition of restricted class abstraction.  (Contributed by
       Mario Carneiro, 8-Sep-2013.) $)
    dfrab3 $p |- { x e. A | ph } = ( A i^i { x | ph } ) $=
      ( crab cv wcel wa cab cin df-rab inab abid2 ineq1i 3eqtr2i ) ABCDBECFZAGB
      HOBHZABHZICQIABCJOABKPCQBCLMN $.
      $( [8-Sep-2013] $)
  $}

  $( Abstraction restricted to a union.  (Contributed by Stefan O'Rear,
     5-Feb-2015.) $)
  rabun2 $p |- { x e. ( A u. B ) | ph } =
      ( { x e. A | ph } u. { x e. B | ph } ) $=
    ( cv cun wcel wa cab crab elun anbi1i andir bitri abbii unab eqtr4i uneq12i
    wo df-rab 3eqtr4i ) BEZCDFZGZAHZBIZUBCGZAHZBIZUBDGZAHZBIZFZABUCJABCJZABDJZF
    UFUHUKSZBIUMUEUPBUEUGUJSZAHUPUDUQAUBCDKLUGUJAMNOUHUKBPQABUCTUNUIUOULABCTABD
    TRUA $.
    $( [5-Feb-2015] $)

  ${
    $d x A $.  $d x B $.
    $( Transfer uniqueness to a smaller subclass. $)
    reuss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\
                 ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) $=
      ( wrex wreu wa wss wi wral wcel wex weu df-rex df-reu anbi12i wal sylan2b
      cv wmo df-ral ssel prth sylan exp4b com23 a2d imp4a alimdv imp euimmo syl
      eu5 simplbi2 syl9 imp32 sylibr ) ACDFZBCEGZHDEIZABJZCDKZHZCTZDLZAHZCMZVEE
      LZBHZCNZHZACDGZUSVHUTVKACDOBCEPQVDVLHVGCNZVMVDVHVKVNVDVKVGCUAZVHVNVDVGVJJ
      ZCRZVKVOJVCVAVFVBJZCRZVQVBCDUBVAVSVQVAVRVPCVAVRVFAVJVAVFVBAVJJZVAVBVFVTVA
      VBVFAVJVAVFVIJVBVPDEVEUCVFVIABUDUEUFUGUHUIUJUKSVGVJCULUMVNVHVOVGCUNUOUPUQ
      ACDPURS $.
      $( [20-Oct-2005] $)

    $( Transfer uniqueness to a smaller subclass. $)
    reuss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                E! x e. A ph ) $=
      ( wss wrex wreu wi wral wa cv wcel idd rgen reuss2 mpanl2 3impb ) CDEZABC
      FZABDGZABCGZRAAHZBCISTJUAUBBCBKCLAMNAABCDOPQ $.
      $( [2-Nov-2005] $) $( [21-Aug-1999] $)

    $( Transfer uniqueness to a smaller class. $)
    reuun1 $p |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) )
                 -> E! x e. A ph ) $=
      ( cun wss wo wi wral wrex wreu wa ssun1 orc rgenw reuss2 mpanl12 ) DDEFZG
      AABHZIZCDJACDKTCSLMACDLDENUACDABOPATCDSQR $.
      $( [21-Oct-2005] $)

    $( Transfer uniqueness to a smaller or larger class. $)
    reuun2 $p |- ( -. E. x e. B ph ->
             ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) $=
      ( wrex wn cv wcel wa wo weu cun wreu wex df-rex euor2 sylnbi df-reu elun
      wb anbi1i andir orcom 3bitri eubii bitri 3bitr4g ) ABDEZFBGZDHZAIZUICHZAI
      ZJZBKZUMBKZABCDLZMZABCMUHUKBNUOUPTABDOUKUMBPQURUIUQHZAIZBKUOABUQRUTUNBUTU
      LUJJZAIUMUKJUNUSVAAUICDSUAULUJAUBUMUKUCUDUEUFABCRUG $.
      $( [21-Oct-2005] $)

    $( Restricted uniqueness "picks" a member of a subclass. $)
    reupick $p |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) ->
                  ( x e. A <-> x e. B ) ) $=
      ( wss wrex wreu wa cv wcel wi ssel ad2antrr wex weu df-rex df-reu anbi12i
      ancrd anim1d an32 syl6ib eximdv eupick ex syl9 com23 imp32 exp3acom23 imp
      sylan2b impbid ) CDEZABCFZABDGZHZHZAHBIZCJZURDJZUMUSUTKUPACDURLZMUQAUTUSK
      UQUTAUSUPUMUSAHZBNZUTAHZBOZHVDUSKZUNVCUOVEABCPABDQRUMVCVEVFUMVEVCVFUMVCVD
      USHZBNZVEVFUMVBVGBUMVBUTUSHZAHVGUMUSVIAUMUSUTVASTUTUSAUAUBUCVEVHVFVDUSBUD
      UEUFUGUHUKUIUJUL $.
      $( [21-Aug-1999] $)

    $( Restricted uniqueness "picks" a member of a subclass.  (Contributed by
       Mario Carneiro, 15-Dec-2013.) $)
    reupick2 $p |- ( ( ( A. x e. A ( ps -> ph ) /\ E. x e. A ps /\
                       E! x e. A ph ) /\ x e. A ) -> ( ph <-> ps ) ) $=
      ( wi wral wrex wreu w3a cv wcel wa weu simp3 df-reu sylib r19.29 id impac
      wex reximi syl 3adant3 df-rex anass exbii bitr4i syl2anc expdimp 3ad2ant1
      eupick ra4 imp impbid ) BAEZCDFZBCDGZACDHZIZCJDKZLABUSUTABUSUTALZCMZVABLZ
      CTZVABEUSURVBUPUQURNACDOPUSABLZCDGZVDUPUQVFURUPUQLUOBLZCDGVFUOBCDQVGVECDU
      OBAUORSUAUBUCVFUTVELZCTVDVECDUDVCVHCUTABUEUFUGPVABCUKUHUIUSUTUOUPUQUTUOEU
      RUOCDULUJUMUN $.
      $( [15-Dec-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           The empty set
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for the empty or null set. $)
  $c (/) $. $( null set $)

  $( Extend class notation to include the empty set. $)
  c0 $a class (/) $.

  $( Define the empty set.  Special case of Exercise 4.10(o) of [Mendelson]
     p. 231.  For a more traditional definition, but requiring a dummy
     variable, see ~ dfnul2 . $)
  df-nul $a |- (/) = ( _V \ _V ) $.

  $( Alternate definition of the empty set.  Definition 5.14 of [TakeutiZaring]
     p. 20. $)
  dfnul2 $p |- (/) = { x | -. x = x } $=
    ( cv wceq wn c0 wcel cvv cdif wa df-nul eleq2i eldif eqid pm3.24 2th 3bitri
    con2bii abbi2i ) ABZSCZDZAESEFSGGHZFSGFZUCDIZUAEUBSJKSGGLTUDTUDDSMUCNOQPR
    $.
    $( [26-Dec-1996] $)

  $( Alternate definition of the empty set.. $)
  dfnul3 $p |- (/) = { x e. A | -. x e. A } $=
    ( cv wceq wn cab wcel wa crab pm3.24 eqid 2th con1bii dfnul2 df-rab 3eqtr4i
    c0 abbii ) ACZSDZEZAFSBGZUBEZHZAFQUCABIUAUDAUDTUDETUBJSKLMRANUCABOP $.
    $( [25-Mar-2004] $)

  ${
    $d A x $.
    $( The empty set has no elements.  Theorem 6.14 of [Quine] p. 44. $)
    noel $p |- -. A e. (/) $=
      ( vx cvv wcel c0 wn cv wceq eqid dfnul2 abeq2i con2bii mpbi eleq1 vtocleg
      mtbii elex con3i pm2.61i ) ACDZAEDZFZUBBACBGZAHUCEDZUAUCUCHZUDFUCIUDUEUEF
      BEBJKLMUCAENPOUATAEQRS $.
      $( [5-Aug-1993] $)
  $}

  $( If a set has elements, it is not empty. $)
  n0i $p |- ( B e. A -> -. A = (/) ) $=
    ( c0 wceq wcel noel eleq2 mtbiri con2i ) ACDZBAEZJKBCEBFACBGHI $.
    $( [31-Dec-1993] $)

  $( If a set has elements, it is not empty. $)
  ne0i $p |- ( B e. A -> A =/= (/) ) $=
    ( wcel c0 wceq wn wne n0i df-ne sylibr ) BACADEFADGABHADIJ $.
    $( [31-Dec-1993] $)

  $( The universal class is not equal to the empty set. $)
  vn0 $p |- _V =/= (/) $=
    ( vx cv cvv wcel c0 wne vex ne0i ax-mp ) ABZCDCEFAGCJHI $.
    $( [11-Sep-2008] $)

  ${
    $d x y $.  $d y A $.
    ne0f.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20.  This version of ~ n0 requires only that ` x `
       not be free in, rather than not occur in, ` A ` . $)
    n0f $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( c0 wne cv wcel wn wal wex wceq df-ne ax-17 cleqf noel nbn albii bitr4i
      wb xchbinx df-ex ) CEFZAGZCHZIZAJZIUEAKUCCELZUGCEMUHUEUDEHZTZAJUGABCEDBGE
      HANOUFUJAUIUEUDPQRSUAUEAUBS $.
      $( [2-Apr-2007] $) $( [17-Oct-2003] $)
  $}

  ${
    $d x y A $.
    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    n0 $p |- ( A =/= (/) <-> E. x x e. A ) $=
      ( vy cv wcel ax-17 n0f ) ACBCDBEAFG $.
      $( [29-Sep-2006] $)

    $( A nonempty class has at least one element.  Proposition 5.17(1) of
       [TakeutiZaring] p. 20. $)
    neq0 $p |- ( -. A = (/) <-> E. x x e. A ) $=
      ( c0 wceq wn wne cv wcel wex df-ne n0 bitr3i ) BCDEBCFAGBHAIBCJABKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x ph $.
    reximdva0.1 $e |- ( ( ph /\ x e. A ) -> ps ) $.
    $( Restricted existence deduced from non-empty class. $)
    reximdva0 $p |- ( ( ph /\ A =/= (/) ) -> E. x e. A ps ) $=
      ( c0 wne wa cv wcel wex wrex n0 ex ancld eximdv imp sylan2b df-rex sylibr
      ) ADFGZHCIDJZBHZCKZBCDLUAAUBCKZUDCDMAUEUDAUBUCCAUBBAUBBENOPQRBCDST $.
      $( [1-Feb-2012] $)
  $}

  ${
    $d A x $.
    $( A case of equivalence of "at most one" and "only one".  (Contributed by
       FL, 6-Dec-2010.) $)
    n0moeu $p |- ( A =/= (/) -> ( E* x x e. A <-> E! x x e. A ) ) $=
      ( c0 wne cv wcel wmo wex wa weu n0 biimpi biantrurd eu5 syl6bbr ) BCDZAEB
      FZAGZQAHZRIQAJPSRPSABKLMQANO $.
      $( [2-Mar-2011] $) $( [14-Nov-2010] $)
  $}

  $( Vacuous existential quantification is false. $)
  rex0 $p |- -. E. x e. (/) ph $=
    ( c0 cv wcel wn noel pm2.21i nrex ) ABCBDZCEAFJGHI $.
    $( [15-Oct-2003] $)

  ${
    $d x A $.
    $( The empty set has no elements.  Theorem 2 of [Suppes] p. 22. $)
    eq0 $p |- ( A = (/) <-> A. x -. x e. A ) $=
      ( c0 wceq cv wcel wn wal wex neq0 df-ex bitri con4bii ) BCDZAEBFZGAHZNGOA
      IPGABJOAKLM $.
      $( [29-Aug-1993] $)

    $( The universe contains every set. $)
    eqv $p |- ( A = _V <-> A. x x e. A ) $=
      ( cvv wceq cv wcel wb wal dfcleq vex tbt albii bitr4i ) BCDAEZBFZNCFZGZAH
      OAHABCIOQAPOAJKLM $.
      $( [11-Sep-2006] $)
  $}

  ${
    $d x A $.  $d x y $.
    $( Membership of the empty set in another class. $)
    0el $p |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) $=
      ( c0 wcel cv wceq wrex wn wal risset eq0 rexbii bitri ) DCEAFZDGZACHBFOEI
      BJZACHADCKPQACBOLMN $.
      $( [29-Jun-2004] $)
  $}

  ${
    $d x ph $.
    $( The class builder of a wff not containing the abstraction variable is
       either the universal class or the empty set.  (Contributed by Mario
       Carneiro, 29-Aug-2013.) $)
    abvor0 $p |- ( { x | ph } = _V \/ { x | ph } = (/) ) $=
      ( cab cvv wceq c0 wn cv wcel vex a1i 2thd abbi1dv con3i noel 2falsed orri
      id syl ) ABCZDEZTFEZUAGAGZUBAUAAABDAABHZDIZARUEABJKLMNUCABFUCAUDFIZUCRUFG
      UCUDOKPMSQ $.
      $( [29-Aug-2013] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Nonempty class abstraction. $)
    abn0 $p |- ( { x | ph } =/= (/) <-> E. x ph ) $=
      ( vy cab c0 wne cv wcel wex n0 hbab1 ax-17 eleq1 cbvex abid exbii 3bitri
      ) ABDZEFCGZRHZCIBGZRHZBIABICRJTUBCBABCKUBCLSUARMNUBABABOPQ $.
      $( [21-Feb-2007] $) $( [26-Dec-1996] $)
  $}

  $( Non-empty restricted class abstraction. $)
  rabn0 $p |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) $=
    ( cv wcel wa cab c0 wne wex crab wrex abn0 df-rab neeq1i df-rex 3bitr4i ) B
    DCEAFZBGZHIRBJABCKZHIABCLRBMTSHABCNOABCPQ $.
    $( [24-Feb-2007] $) $( [29-Aug-1999] $)

  $( Any restricted class abstraction restricted to the empty set is empty.
     (The proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  rab0 $p |- { x e. (/) | ph } = (/) $=
    ( cv c0 wcel wa cab wceq wn crab equid noel intnanr 2th abbii df-rab dfnul2
    con2bii 3eqtr4i ) BCZDEZAFZBGTTHZIZBGABDJDUBUDBUCUBUCUBIBKUAATLMNROABDPBQS
    $.
    $( [26-Jun-2011] $) $( [15-Oct-2003] $)

  $( Condition for a restricted class abstraction to be empty.  (Contributed by
     Jeff Madsen, 7-Jun-2010.) $)
  rabeq0 $p |- ( { x e. A | ph } = (/) <-> A. x e. A -. ph ) $=
    ( wn wral wrex crab c0 wceq ralnex rabn0 necon1bbii bitr2i ) ADBCEABCFZDABC
    GZHIABCJNOHABCKLM $.
    $( [7-Jun-2010] $)

  ${
    $d A x $.
    $( Law of excluded middle, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabxm $p |- A = ( { x e. A | ph } u. { x e. A | -. ph } ) $=
      ( wn wo crab cun wceq rabid2 cv wcel exmid a1i mprgbir unrab eqtr4i ) CAA
      DZEZBCFZABCFQBCFGCSHRBCRBCIRBJCKALMNAQBCOP $.
      $( [20-Jun-2011] $)

    $( Law of noncontradiction, in terms of restricted class abstractions.
       (Contributed by Jeff Madsen, 20-Jun-2011.) $)
    rabnc $p |- ( { x e. A | ph } i^i { x e. A | -. ph } ) = (/) $=
      ( crab wn cin wa c0 inrab wceq rabeq0 cv wcel pm3.24 a1i mprgbir eqtri )
      ABCDAEZBCDFARGZBCDZHARBCITHJSEZBCSBCKUABLCMANOPQ $.
      $( [20-Jun-2011] $)
  $}

  ${
    $d x A $.
    $( The union of a class with the empty set is itself.  Theorem 24 of
       [Suppes] p. 27. $)
    un0 $p |- ( A u. (/) ) = A $=
      ( vx c0 cv wcel wo noel biorfi bicomi uneqri ) BACABDZAEZLKCEZFMLKGHIJ $.
      $( [5-Aug-1993] $)

    $( The intersection of a class with the empty set is the empty set.
       Theorem 16 of [Suppes] p. 26. $)
    in0 $p |- ( A i^i (/) ) = (/) $=
      ( vx c0 cv wcel wa noel bianfi bicomi ineqri ) BACCBDZCEZKAEZLFLMKGHIJ $.
      $( [5-Aug-1993] $)
  $}

  $( The intersection of a class with the universal class is itself.  Exercise
     4.10(k) of [Mendelson] p. 231. $)
  inv1 $p |- ( A i^i _V ) = A $=
    ( cvv cin inss1 ssid ssv ssini eqssi ) ABCAABDAABAEAFGH $.
    $( [17-May-1998] $)

  $( The union of a class with the universal class is the universal class.
     Exercise 4.10(l) of [Mendelson] p. 231. $)
  unv $p |- ( A u. _V ) = _V $=
    ( cvv cun ssv ssun2 eqssi ) ABCZBGDBAEF $.
    $( [17-May-1998] $)

  ${
    $d A x $.
    $( The null set is a subset of any class.  Part of Exercise 1 of
       [TakeutiZaring] p. 22. $)
    0ss $p |- (/) C_ A $=
      ( vx c0 cv wcel noel pm2.21i ssriv ) BCABDZCEIAEIFGH $.
      $( [5-Aug-1993] $)
  $}

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23 and its
     converse. $)
  ss0b $p |- ( A C_ (/) <-> A = (/) ) $=
    ( c0 wceq wss 0ss eqss mpbiran2 bicomi ) ABCZABDZIJBADAEABFGH $.
    $( [17-Sep-2003] $)

  $( Any subset of the empty set is empty.  Theorem 5 of [Suppes] p. 23. $)
  ss0 $p |- ( A C_ (/) -> A = (/) ) $=
    ( c0 wss wceq ss0b biimpi ) ABCABDAEF $.
    $( [13-Aug-1994] $)

  $( A subclass of an empty class is empty.  (The proof was shortened by Andrew
     Salmon, 26-Jun-2011.) $)
  sseq0 $p |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) $=
    ( c0 wceq wss sseq2 ss0 syl6bi impcom ) BCDZABEZACDZJKACELBCAFAGHI $.
    $( [26-Jun-2011] $) $( [7-Mar-2007] $)

  $( A class with a nonempty subclass is nonempty. $)
  ssn0 $p |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) $=
    ( wss c0 wne wceq sseq0 ex necon3d imp ) ABCZADEBDEKBDADKBDFADFABGHIJ $.
    $( [17-Feb-2007] $)

  ${
    abf.1 $e |- -. ph $.
    $( A class builder with a false argument is empty. $)
    abf $p |- { x | ph } = (/) $=
      ( cab c0 wss wceq cv wcel pm2.21i abssi ss0 ax-mp ) ABDZEFNEGABEABHEICJKN
      LM $.
      $( [20-Jan-2012] $)
  $}

  ${
    $d x A $.  $d x ph $.
    eq0rdv.1 $e |- ( ph -> -. x e. A ) $.
    $( Deduction rule for equality to the empty set. $)
    eq0rdv $p |- ( ph -> A = (/) ) $=
      ( c0 wss wceq cv wcel pm2.21d ssrdv ss0 syl ) ACEFCEGABCEABHZCINEIDJKCLM
      $.
      $( [11-Jul-2014] $)
  $}

  $( Two classes are empty iff their union is empty. $)
  un00 $p |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) $=
    ( c0 wceq wa cun uneq12 un0 syl6eq wss ssun1 sseq2 mpbii sylib ssun2 impbii
    ss0b jca ) ACDZBCDZEZABFZCDZUAUBCCFCACBCGCHIUCSTUCACJZSUCAUBJUDABKUBCALMAQN
    UCBCJZTUCBUBJUEBAOUBCBLMBQNRP $.
    $( [11-Aug-2004] $)

  $( Only the universal class has the universal class as a subclass.  (The
     proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
  vss $p |- ( _V C_ A <-> A = _V ) $=
    ( cvv wss wa wceq ssv biantrur eqss bitr4i ) BACZABCZJDABEKJAFGABHI $.
    $( [26-Jun-2011] $) $( [17-Sep-2003] $)

  $( The null set is a proper subset of any non-empty set. $)
  0pss $p |- ( (/) C. A <-> A =/= (/) ) $=
    ( c0 wpss wne wss 0ss df-pss mpbiran necom bitri ) BACZBADZABDKBAELAFBAGHBA
    IJ $.
    $( [2-Apr-2007] $) $( [27-Feb-1996] $)

  $( No set is a proper subset of the empty set.  (The proof was shortened by
     Andrew Salmon, 26-Jun-2011.) $)
  npss0 $p |- -. A C. (/) $=
    ( c0 wpss wss wn wa wi 0ss a1i iman mpbi dfpss3 mtbir ) ABCABDZBADZEFZNOGPE
    ONAHINOJKABLM $.
    $( [26-Jun-2011] $) $( [17-Jun-1998] $)

  $( Any non-universal class is a proper subclass of the universal class. $)
  pssv $p |- ( A C. _V <-> -. A = _V ) $=
    ( cvv wpss wss wceq wn ssv dfpss2 mpbiran ) ABCABDABEFAGABHI $.
    $( [17-May-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj $p |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) $=
      ( cin c0 wceq cv wcel wn wi wal wral wa cab df-in eqeq1i abeq1 imnan noel
      wb nbn bitr2i albii 3bitri df-ral bitr4i ) BCDZEFZAGZBHZUICHZIZJZAKZULABL
      UHUJUKMZANZEFUOUIEHZTZAKUNUGUPEABCOPUOAEQURUMAUMUOIURUJUKRUQUOUISUAUBUCUD
      ULABUEUF $.
      $( [17-Feb-2004] $)

    $( Two ways of saying that two classes are disjoint.  (Contributed by Jeff
       Madsen, 19-Jun-2011.) $)
    disjr $p |- ( ( A i^i B ) = (/) <-> A. x e. B -. x e. A ) $=
      ( cin c0 wceq cv wcel wn wral incom eqeq1i disj bitri ) BCDZEFCBDZEFAGBHI
      ACJOPEBCKLACBMN $.
      $( [19-Jun-2011] $)

    $( Two ways of saying that two classes are disjoint (have no members in
       common). $)
    disj1 $p |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) $=
      ( cin c0 wceq cv wcel wn wral wi wal disj df-ral bitri ) BCDEFAGZCHIZABJP
      BHQKALABCMQABNO $.
      $( [19-Aug-1993] $)

    $( Two ways of saying that two classes are disjoint, using the complement
       of ` B ` relative to a universe ` C ` .  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    reldisj $p |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) $=
      ( vx wss cv wcel wn wi wal cdif cin c0 wceq wb dfss2 pm5.44 eldif imbi2i
      wa syl6bbr a4s sylbi albidv disj1 3bitr4g ) ACEZDFZAGZUHBGHZIZDJUIUHCBKZG
      ZIZDJABLMNAULEUGUKUNDUGUIUHCGZIZDJUKUNOZDACPUPUQDUPUKUIUOUJTZIUNUIUOUJQUM
      URUIUHCBRSUAUBUCUDDABUEDAULPUF $.
      $( [26-Jun-2011] $) $( [15-Feb-2007] $)

    $( Two ways of saying that two classes are disjoint. $)
    disj3 $p |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) $=
      ( vx cv wcel wn wi wal cdif wb cin c0 wa pm4.71 eldif bibi2i bitr4i albii
      wceq disj1 dfcleq 3bitr4i ) CDZAEZUCBEFZGZCHUDUCABIZEZJZCHABKLSAUGSUFUICU
      FUDUDUEMZJUIUDUENUHUJUDUCABOPQRCABTCAUGUAUB $.
      $( [19-May-1998] $)

    $( Members of disjoint sets are not equal.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjne $p |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) $=
      ( vx cin c0 wceq wcel wne cv wn wral wi disj eleq1 notbid rcla4cva eleq1a
      wa necon3bd syl5com sylanb 3impia ) ABFGHZCAIZDBIZCDJZUEEKZBIZLZEAMZUFUGU
      HNEABOULUFTCBIZLZUGUHUKUNECAUICHUJUMUICBPQRUGUMCDDBCSUAUBUCUD $.
      $( [26-Jun-2011] $) $( [28-Mar-2007] $)
  $}

  $( A set can't belong to both members of disjoint classes. $)
  disjel $p |- ( ( ( A i^i B ) = (/) /\ C e. A ) -> -. C e. B ) $=
    ( cin c0 wceq wcel wn cdif wi disj3 eleq2 eldifn syl6bi sylbi imp ) ABDEFZC
    AGZCBGHZQAABIZFZRSJABKUARCTGSATCLCABMNOP $.
    $( [28-Feb-2015] $)

  $( Two ways of saying that two classes are disjoint. $)
  disj2 $p |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) $=
    ( cvv wss cin c0 wceq cdif wb ssv reldisj ax-mp ) ACDABEFGACBHDIAJABCKL $.
    $( [17-May-1998] $)

  $( Two ways of saying that two classes are disjoint. $)
  disj4 $p |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) $=
    ( cin c0 wceq cdif wpss disj3 eqcom wss difss dfpss2 mpbiran con2bii 3bitri
    wn ) ABCDEAABFZEQAEZQAGZPABHAQISRSQAJRPABKQALMNO $.
    $( [21-Mar-2004] $)

  $( Intersection with a subclass of a disjoint class.  (Contributed by FL,
     24-Jan-2007.) $)
  ssdisj $p |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) $=
    ( wss cin c0 wceq wa ss0b wi ssrin sstr2 syl syl5bir imp ss0 ) ABDZBCEZFGZH
    ACEZFDZTFGQSUASRFDZQUARIQTRDUBUAJABCKTRFLMNOTPM $.
    $( [23-Jan-2007] $)

  $( A class is a proper subset of its union with a disjoint nonempty class. $)
  disjpss $p |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) $=
    ( cin c0 wceq wne wa wss wn cun wpss ssid biantru bitri sseq2 syl5bb syl6bi
    ssin ss0 necon3ad imp nsspssun uncom psseq2i sylib ) ABCZDEZBDFZGBAHZIZAABJ
    ZKZUGUHUJUGUIBDUGUIBDHZBDEUIBUFHZUGUMUIUIBBHZGUNUOUIBLMBABRNUFDBOPBSQTUAUJA
    BAJZKULBAUBUPUKABAUCUDNUE $.
    $( [30-Apr-2007] $) $( [15-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj1 $p |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <->
               ( ( A u. B ) i^i C ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indir eqeq1i bitr4i ) ACDZEFBCDZEFGMNHZEFABHCDZEF
    MNIPOEABCJKL $.
    $( [26-Sep-2004] $)

  $( The union of disjoint classes is disjoint. $)
  undisj2 $p |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <->
               ( A i^i ( B u. C ) ) = (/) ) $=
    ( cin c0 wceq wa cun un00 indi eqeq1i bitr4i ) ABDZEFACDZEFGMNHZEFABCHDZEFM
    NIPOEABCJKL $.
    $( [13-Sep-2004] $)

  $( Subclass expressed in terms of intersection with difference from the
     universal class. $)
  ssindif0 $p |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) $=
    ( cvv cdif cin c0 wceq wss disj2 ddif sseq2i bitr2i ) ACBDZEFGACMDZHABHAMIN
    BABJKL $.
    $( [17-Sep-2003] $)

  $( The intersection of classes with a common member is nonempty. $)
  inelcm $p |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) $=
    ( wcel wa cin c0 wne elin ne0i sylbir ) ABDACDEABCFZDLGHABCILAJK $.
    $( [2-Apr-2007] $) $( [7-Apr-1994] $)

  $( A minimum element of a class has no elements in common with the class. $)
  minel $p |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) $=
    ( cin c0 wceq wcel wn wa wi inelcm necon2bi imnan sylibr con2d impcom ) CBD
    ZEFZABGZACGZHRTSRTSIZHTSHJUAQEACBKLTSMNOP $.
    $( [22-Jun-1994] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Distribute union over difference.  (The proof was shortened by Andrew
       Salmon, 26-Jun-2011.) $)
    undif4 $p |- ( ( A i^i C ) = (/) ->
                 ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) $=
      ( vx cv wcel wn wi wal cdif cun wb cin c0 wceq wo wa eldif elun 3bitr4g
      pm2.621 olc impbid1 anbi2d orbi2i bitri anbi1i alimi disj1 dfcleq 3imtr4i
      ordi ) DEZAFZUMCFGZHZDIUMABCJZKZFZUMABKZCJZFZLZDIACMNOURVAOUPVCDUPUNUMUQF
      ZPZUMUTFZUOQZUSVBUPUNUMBFZPZUNUOPZQZVIUOQVEVGUPVJUOVIUPVJUOUNUOUAUOUNUBUC
      UDVEUNVHUOQZPVKVDVLUNUMBCRUEUNVHUOULUFVFVIUOUMABSUGTUMAUQSUMUTCRTUHDACUID
      URVAUJUK $.
      $( [26-Jun-2011] $) $( [17-May-1998] $)

    $( Subset relation for disjoint classes.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    disjssun $p |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) $=
      ( cin c0 wceq cun wss indi uncom eqtri uneq2 syl6eq syl5eq eqeq1d 3bitr4g
      un0 df-ss ) ABDZEFZABCGZDZAFACDZAFAUAHACHTUBUCATUBUCSGZUCUBSUCGUDABCISUCJ
      KTUDUCEGUCSEUCLUCQMNOAUARACRP $.
      $( [26-Jun-2011] $) $( [25-Oct-2005] $)
  $}

  ${
    $d i j x A $.  $d j x B $.  $d i x C $.
    disjmo.1 $e |- ( i = j -> B = C ) $.
    $( Two ways to say that a collection ` B ( i ) ` for ` i e. A ` is
       disjoint.  (Contributed by Mario Carneiro, 26-Mar-2015.) $)
    disjmo $p |- ( A. x E* i ( i e. A /\ x e. B ) <->
      A. i e. A A. j e. A ( i = j \/ ( B i^i C ) = (/) ) ) $=
      ( cv wcel wa wceq wi wral wal wo ralcom4 wex bitri imbi1i ralbii c0 orcom
      cin wmo wn df-or neq0 elin exbii 19.23v bitr4i 3bitri impexp 2albii eleq1
      an4 eleq2d anbi12d mo4 r2al 3bitr4i albii 3bitr4ri ) AHZCIZVDDIZJZEHZFHZK
      ZLZFBMZANZEBMVLEBMZANVJCDUCZUAKZOZFBMZEBMVHBIZVEJZEUDZANVLEABPVRVMEBVRVKA
      NZFBMVMVQWBFBVQVPVJOVPUEZVJLZWBVJVPUBVPVJUFWDVGAQZVJLWBWCWEVJWCVDVOIZAQWE
      AVOUGWFVGAVDCDUHUIRSVGVJAUJUKULTVKFABPRTWAVNAVTVIBIZVFJZJZVJLZFNENVSWGJZV
      KLZFNENWAVNWJWLEFWJWKVGJZVJLWLWIWMVJVSVEWGVFUPSWKVGVJUMRUNVTWHEFVJVSWGVEV
      FVHVIBUOVJCDVDGUQURUSVKEFBBUTVAVBVC $.
      $( [26-Mar-2015] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass expressed in terms of difference.  Exercise 7 of
       [TakeutiZaring] p. 22. $)
    ssdif0 $p |- ( A C_ B <-> ( A \ B ) = (/) ) $=
      ( vx cv wcel wi wal cdif wn wss c0 wceq wa eldif xchbinxr albii dfss2 eq0
      iman 3bitr4i ) CDZAEZUABEZFZCGUAABHZEZIZCGABJUEKLUDUGCUDUBUCIMUFUBUCSUAAB
      NOPCABQCUERT $.
      $( [29-Apr-1994] $)
  $}

  $( Universal class equality in terms of empty difference. $)
  vdif0 $p |- ( A = _V <-> ( _V \ A ) = (/) ) $=
    ( cvv wceq wss cdif c0 vss ssdif0 bitr3i ) ABCBADBAEFCAGBAHI $.
    $( [17-Sep-2003] $)

  $( A proper subclass has a nonempty difference. $)
  pssdifn0 $p |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) $=
    ( wss wne cdif c0 wceq ssdif0 eqss simplbi2 syl5bir necon3d imp ) ABCZABDBA
    EZFDNOFABOFGBACZNABGZBAHQNPABIJKLM $.
    $( [3-Apr-2007] $) $( [3-May-1994] $)

  $( A subclass missing a member is a proper subclass. $)
  ssnelpss $p |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) $=
    ( wcel wn wa wceq wss wpss nelneq2 eqcom sylnib dfpss2 baibr syl5ib ) CBDCA
    DEFZABGZEZABHZABIZPBAGQCBAJBAKLTSRABMNO $.
    $( [12-Jan-2002] $)

  ${
    $d x A $.  $d x B $.
    $( A proper subclass has a member in one argument that's not in both. $)
    pssnel $p |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) $=
      ( wpss cv cdif wcel wex wn wa c0 wne df-pss pssdifn0 sylbi n0 sylib eldif
      wss exbii ) BCDZAEZCBFZGZAHZUBCGUBBGIJZAHUAUCKLZUEUABCSBCLJUGBCMBCNOAUCPQ
      UDUFAUBCBRTQ $.
      $( [29-Feb-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Difference, intersection, and subclass relationship.  (The proof was
       shortened by Wolf Lammen, 30-Sep-2014.) $)
    difin0ss $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wn wal wss wi eq0 wa iman elin eldif dfss2
      anbi1i bitri ancom annim anbi2i 3bitr2i xchbinxr ax-2 sylbir al2imi sylbi
      3imtr4g ) ABEZCFZGHDIZUNJZKZDLZCAMZCBMZNDUNOURUOCJZUOAJZNZDLVAUOBJZNZDLUS
      UTUQVCVEDUQVAVBVDNZNZVCVENVGVAVFKZPZUPVAVFQUPVBVDKPZVAPZVAVJPVIUPUOUMJZVA
      PVKUOUMCRVLVJVAUOABSUAUBVAVJUCVJVHVAVBVDUDUEUFUGVAVBVDUHUIUJDCATDCBTULUK
      $.
      $( [30-Sep-2014] $) $( [30-Apr-1994] $)

    $( Obsolete proof of ~ difin0ss as of 30-Sep-2014. $)
    difin0ssOLD $p |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) $=
      ( vx cdif cin c0 wceq cv wcel wi wal wss wn eq0 annim anbi2i notbii dfss2
      wa ancom bitr3i iman elin eldif anbi1i 3bitr4i ax-2 sylbir al2imi 3imtr4g
      bitri sylbi ) ABEZCFZGHZDIZCJZUQAJZKZDLZURUQBJZKZDLZCAMCBMUPUQUOJZNZDLVAV
      DKDUOOVFUTVCDVFURUSVBKZKZUTVCKURVGNZTZNUSVBNTZURTZNVHVFVJVLVJURVKTVLVKVIU
      RUSVBPQURVKUAUBRURVGUCVEVLVEUQUNJZURTVLUQUNCUDVMVKURUQABUEUFULRUGURUSVBUH
      UIUJUMDCASDCBSUK $.
      $( [30-Apr-1994] $)

    $( Intersection, subclass, and difference relationship.  (The proof was
       shortened by Andrew Salmon, 26-Jun-2011.)  (The proof was shortened by
       Wolf Lammen, 30-Sep-2014.) $)
    inssdif0 $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn wss c0 wceq elin imbi1i iman bitri eldif
      wa anbi2i anass 3bitr4ri xchbinx albii dfss2 eq0 3bitr4i ) DEZABFZGZUICGZ
      HZDIUIABCJZFZGZKZDIUJCLUOMNUMUQDUMUIAGZUIBGZTZULKZTZUPUMUTULHVBKUKUTULUIA
      BOPUTULQRURUIUNGZTURUSVATZTUPVBVCVDURUIBCSUAUIAUNOURUSVAUBUCUDUEDUJCUFDUO
      UGUH $.
      $( [30-Sep-2014] $) $( [27-Oct-1996] $)

    $( Obsolete proof of ~ inssdif0 as of 30-Sep-2014. $)
    inssdif0OLD $p |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) $=
      ( vx cv cin wcel wi wal cdif wn c0 wceq wa iman notbii bitri elin 3bitr4i
      wss anass imbi1i eldif anbi2i albii dfss2 eq0 ) DEZABFZGZUHCGZHZDIUHABCJZ
      FZGZKZDIUICTUNLMULUPDUHAGZUHBGZNZUKHZUQURUKKZNZNZKZULUPUTUSVANZKVDUSUKOVE
      VCUQURVAUAPQUJUSUKUHABRUBUOVCUOUQUHUMGZNVCUHAUMRVFVBUQUHBCUCUDQPSUEDUICUF
      DUNUGS $.
      $( [26-Jun-2011] $) $( [27-Oct-1996] $)
  $}

  $( The difference between a class and itself is the empty set.  Proposition
     5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28. $)
  difid $p |- ( A \ A ) = (/) $=
    ( wss cdif c0 wceq ssid ssdif0 mpbi ) AABAACDEAFAAGH $.
    $( [22-Apr-2004] $)

  ${
    $d x A $.
    $( The difference between a class and itself is the empty set.  Proposition
       5.15 of [TakeutiZaring] p. 20.  Also Theorem 32 of [Suppes] p. 28.
       (Alternate proof of ~ difid suggested by David Abernethy,
       17-Jun-2012.) $)
    difidALT $p |- ( A \ A ) = (/) $=
      ( vx cdif cv wcel wn crab c0 dfdif2 dfnul3 eqtr4i ) AACBDAEFBAGHBAAIBAJK
      $.
      $( [17-Jun-2012] $)
  $}

  $( The difference between a class and the empty set.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  dif0 $p |- ( A \ (/) ) = A $=
    ( cdif c0 difid difeq2i difdif eqtr3i ) AAABZBACBAHCAADEAAFG $.
    $( [17-Aug-2004] $)

  $( The difference between the empty set and a class.  Part of Exercise 4.4 of
     [Stoll] p. 16. $)
  0dif $p |- ( (/) \ A ) = (/) $=
    ( c0 cdif wss wceq difss ss0 ax-mp ) BACZBDIBEBAFIGH $.
    $( [17-Aug-2004] $)

  $( A class and its relative complement are disjoint.  Theorem 38 of [Suppes]
     p. 29. $)
  disjdif $p |- ( A i^i ( B \ A ) ) = (/) $=
    ( cin wss cdif c0 wceq inss1 inssdif0 mpbi ) ABCADABAECFGABHABAIJ $.
    $( [24-Mar-1998] $)

  $( The difference of a class from its intersection is empty.  Theorem 37 of
     [Suppes] p. 29.  (The proof was shortened by Andrew Salmon,
     26-Jun-2011.) $)
  difin0 $p |- ( ( A i^i B ) \ B ) = (/) $=
    ( cin wss cdif c0 wceq inss2 ssdif0 mpbi ) ABCZBDKBEFGABHKBIJ $.
    $( [26-Jun-2011] $) $( [17-Aug-2004] $)

  $( The union of a class and its complement is the universe.  Theorem 5.1(5)
     of [Stoll] p. 17. $)
  undifv $p |- ( A u. ( _V \ A ) ) = _V $=
    ( cvv cdif cun cin c0 dfun3 disjdif difeq2i dif0 3eqtri ) ABACZDBLBLCEZCBFC
    BALGMFBLBHIBJK $.
    $( [17-Aug-2004] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Theorem 35 of [Suppes] p. 29. $)
  undif1 $p |- ( ( A \ B ) u. B ) = ( A u. B ) $=
    ( cvv cdif invdif uneq1i undir uncom undifv eqtri ineq2i inv1 3eqtri eqtr3i
    cin cun ) ACBDZOZBPZABDZBPABPZRTBABEFSUAQBPZOUACOUAAQBGUBCUAUBBQPCQBHBIJKUA
    LMN $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Absorption of difference by union.  This decomposes a union into two
     disjoint classes (see ~ disjdif ).  Part of proof of Corollary 6K of
     [Enderton] p. 144. $)
  undif2 $p |- ( A u. ( B \ A ) ) = ( A u. B ) $=
    ( cdif cun uncom undif1 3eqtri ) ABACZDHADBADABDAHEBAFBAEG $.
    $( [4-Sep-2004] $) $( [19-May-1998] $)

  $( Absorption of difference by union. $)
  undifabs $p |- ( A u. ( A \ B ) ) = A $=
    ( cdif cun undif3 unidm difeq1i difdif 3eqtri ) AABCDAADZBACZCAKCAAABEJAKAF
    GABHI $.
    $( [18-Aug-2013] $)

  ${
    $d x A $.  $d x B $.
    $( The intersection and class difference of a class with another class
       unite to give the original class.  (Contributed by Paul Chapman,
       5-Jun-2009.)  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    inundif $p |- ( ( A i^i B ) u. ( A \ B ) ) = A $=
      ( vx cin cdif cv wcel wo wa wn elin eldif orbi12i pm4.42 bitr4i uneqri )
      CABDZABEZACFZQGZSRGZHSAGZSBGZIZUBUCJIZHUBTUDUAUESABKSABLMUBUCNOP $.
      $( [26-Jun-2011] $) $( [5-Jun-2009] $)
  $}

  $( Absorption of union by difference.  Theorem 36 of [Suppes] p. 29. $)
  difun2 $p |- ( ( A u. B ) \ B ) = ( A \ B ) $=
    ( cun cdif c0 difundir difid uneq2i un0 3eqtri ) ABCBDABDZBBDZCKECKABBFLEKB
    GHKIJ $.
    $( [18-Aug-2004] $) $( [19-May-1998] $)

  $( Union of complementary parts into whole. $)
  undif $p |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) $=
    ( wss cun wceq cdif ssequn1 undif2 eqeq1i bitr4i ) ABCABDZBEABAFDZBEABGLKBA
    BHIJ $.
    $( [22-Sep-2004] $) $( [22-Mar-1998] $)

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A condition equivalent to inclusion in the union of two classes. $)
    ssundif $p |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) $=
      ( vx cv wcel cun wi wal cdif wss wn wa wo pm5.6 eldif imbi1i imbi2i dfss2
      elun 3bitr4ri albii 3bitr4i ) DEZAFZUDBCGZFZHZDIUDABJZFZUDCFZHZDIAUFKUICK
      UHULDUEUDBFZLMZUKHUEUMUKNZHULUHUEUMUKOUJUNUKUDABPQUGUOUEUDBCTRUAUBDAUFSDU
      ICSUC $.
      $( [26-Mar-2007] $)
  $}

  $( Swap the arguments of a class difference. $)
  difcom $p |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) $=
    ( cun wss cdif uncom sseq2i ssundif 3bitr3i ) ABCDZEACBDZEABFCEACFBEKLABCGH
    ABCIACBIJ $.
    $( [29-Mar-2007] $)

  $( Two ways to express overlapping subsets.  (Contributed by Stefan O'Rear,
     31-Oct-2014.) $)
  pssdifcom1 $p |- ( ( A C_ C /\ B C_ C ) ->
    ( ( C \ A ) C. B <-> ( C \ B ) C. A ) ) $=
    ( wss wa cdif wn wpss wb difcom ssconb ancoms notbid anbi12d dfpss3 3bitr4g
    a1i ) ACDZBCDZEZCAFZBDZBUADZGZECBFZADZAUEDZGZEUABHUEAHTUBUFUDUHUBUFITCABJQT
    UCUGSRUCUGIBACKLMNUABOUEAOP $.
    $( [31-Oct-2014] $)

  $( Two ways to express non-covering pairs of subsets.  (Contributed by Stefan
     O'Rear, 31-Oct-2014.) $)
  pssdifcom2 $p |- ( ( A C_ C /\ B C_ C ) ->
    ( B C. ( C \ A ) <-> A C. ( C \ B ) ) ) $=
    ( wss wa cdif wn wpss wb ssconb ancoms difcom notbid anbi12d dfpss3 3bitr4g
    a1i ) ACDZBCDZEZBCAFZDZUABDZGZEACBFZDZUEADZGZEBUAHAUEHTUBUFUDUHSRUBUFIBACJK
    TUCUGUCUGITCABLQMNBUAOAUEOP $.
    $( [31-Oct-2014] $)

  $( Distributive law for class difference.  Exercise 4.8 of [Stoll] p. 16. $)
  difdifdir $p |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) $=
    ( cdif cvv cun cin c0 disjdif incom eqtr3i uneq2i invdif un0 dif32 3eqtr4ri
    indi 3eqtr4i indm difeq2i ddif 3eqtr3ri ineq2i 3eqtri ) ABDCDZACDZEBDZCFZGZ
    UFEBCDZDZGUFUJDUFUGGZHFZULUFCGZFUEUIHUNULCUFGHUNCAICUFJKLULUFBDUMUEUFBMULNA
    BCOPUFUGCQRUHUKUFEBECDZGZDUGEUODZFUKUHBUOSUPUJEBCMTUQCUGCUALUBUCUFUJMUD $.
    $( [18-Aug-2004] $)

  $( Two ways to say that ` A ` and ` B ` partition ` C ` (when ` A ` and ` B `
     don't overlap and ` A ` is a part of ` C ` ).  (Contributed by FL,
     17-Nov-2008.) $)
  uneqdifeq $p |- ( ( A C_ C /\ ( A i^i B ) = (/) )
     -> ( ( A u. B ) = C <-> ( C \ A ) = B ) ) $=
    ( wss cin c0 wceq wa cun cdif uncom eqcom biimpi difeq1 difun2 expcom com12
    wi eqtr adantl incom eqeq1i disj3 bitri sylbi syl5com 3syl mpan difss sseq1
    eqcoms sylancl syl6bi mpi adantr imp eqimss ssundif sylibr adantlr eqssd ex
    unss impbid ) ACDZABEZFGZHZABIZCGZCAJZBGZVGVJVLRVEVJVGVLBAIZVIGZVJVGVLRZBAK
    VNVJHVMCGZCVMGZVOVMVICSVPVQVMCLMVQVKVMAJZGZVRBAJZGZVOCVMANBAOVSWAHVKVTGZVGV
    LVKVRVTSVGBVTGZWBVLRZVGBAEZFGWCVFWEFABUAUBBAUCUDWDVTBWBVTBGVLVKVTBSPUKUEUFU
    LUGUHQTVHVLVJVHVLHVICVHVLVICDZVEVLWFRVGVLVEWFVLVKCDZVEWFRZCAUIVLWGBCDZWHVKB
    CUJVEWIWFVEWIHWFABCVCMPUMUNQUOUPVEVLCVIDZVGVEVLHVKBDZWJVLWKVEVKBUQTCABURUSU
    TVAVBVD $.
    $( [16-Nov-2008] $)

  ${
    $d x A $.
    $( Theorem 19.2 of [Margaris] p. 89 with restricted quantifiers (compare
       ~ 19.2 ).  The restricted version is valid only when the domain of
       quantification is not empty. $)
    r19.2z $p |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) $=
      ( wral c0 wne wrex cv wex wa wi wal df-ral exintr sylbi n0 df-rex 3imtr4g
      wcel impcom ) ABCDZCEFZABCGZUABHCSZBIZUDAJBIZUBUCUAUDAKBLUEUFKABCMUDABNOB
      CPABCQRT $.
      $( [15-Nov-2003] $)

    $( A response to the notion that the condition ` A =/= (/) ` can be removed
       in ~ r19.2z .  Interestingly enough, ` ph ` does not figure in the
       left-hand side.  (Contributed by Jeff Hankins, 24-Aug-2009.) $)
    r19.2zb $p |- ( A =/= (/) <-> ( A. x e. A ph -> E. x e. A ph ) ) $=
      ( c0 wral wrex wi r19.2z ex wceq cv wcel noel pm2.21i rgen raleq necon3bi
      wne mpbiri wex wa exsimpl df-rex n0 3imtr4i ja impbii ) CDRZABCEZABCFZGUH
      UIUJABCHIUIUJUHUICDCDJUIABDEABDBKZDLAUKMNOABCDPSQUKCLZAUABTULBTUJUHULABUB
      ABCUCBCUDUEUFUG $.
      $( [24-Aug-2009] $)
  $}

  ${
    $d x A $.
    r19.3rz.1 $e |- ( ph -> A. x ph ) $.
    $( Restricted quantification of wff not containing quantified variable.
       (Contributed by FL, 3-Jan-2008.) $)
    r19.3rz $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wral wb n0 biimt sylbi df-ral 19.23 bitri syl6bbr
      wal ) CEFZABGCHZBIZAJZABCKZUAUCAUDLBCMUCANOUEUBAJBTUDABCPUBABDQRS $.
      $( [3-Jan-2008] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi1d r19.26 syl6rbbr ) DFGZABCDHZIACDHZOIABICD
      HNAPOACDEJKABCDLM $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ph $.
    $( Restricted quantification of wff not containing quantified variable. $)
    r19.3rzv $p |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) $=
      ( c0 wne cv wcel wex wi wb n0 biimt sylbi wal df-ral 19.23v bitri syl6bbr
      wral ) CDEZABFCGZBHZAIZABCSZTUBAUCJBCKUBALMUDUAAIBNUCABCOUAABPQR $.
      $( [10-Mar-1997] $)

    $( Restricted quantification of wff not containing quantified variable. $)
    r19.9rzv $p |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) $=
      ( c0 wne wn wral wrex r19.3rzv bicomd con2bid dfrex2 syl6bbr ) CDEZAAFZBC
      GZFABCHNPANOPOBCIJKABCLM $.
      $( [27-May-1998] $)

    $( Restricted quantifier version of Theorem 19.28 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.28zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi1d r19.26 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.37 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty.
       (Contributed by Paul Chapman, 8-Oct-2007.) $)
    r19.37zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) $=
      ( c0 wne wrex wi wral r19.3rzv imbi1d r19.35 syl6rbbr ) DEFZABCDGZHACDIZO
      HABHCDGNAPOACDJKABCDLM $.
      $( [8-Oct-2007] $)

    $( Restricted version of Theorem 19.45 of [Margaris] p. 90. $)
    r19.45zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) $=
      ( c0 wne wrex wo r19.9rzv orbi1d r19.43 syl6rbbr ) DEFZABCDGZHACDGZNHABHC
      DGMAONACDIJABCDKL $.
      $( [27-May-1998] $)
  $}

  ${
    $d x A $.
    r19.27z.1 $e |- ( ps -> A. x ps ) $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27z $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rz anbi2d r19.26 syl6rbbr ) DFGZACDHZBIOBCDHZIABICD
      HNBPOBCDEJKABCDLM $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x ps $.
    $( Restricted quantifier version of Theorem 19.27 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.27zv $p |- ( A =/= (/) ->
                   ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) $=
      ( c0 wne wral wa r19.3rzv anbi2d r19.26 syl6rbbr ) DEFZACDGZBHNBCDGZHABHC
      DGMBONBCDIJABCDKL $.
      $( [19-Aug-2004] $)

    $( Restricted quantifier version of Theorem 19.36 of [Margaris] p. 90.  It
       is valid only when the domain of quantification is not empty. $)
    r19.36zv $p |- ( A =/= (/) ->
                   ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) $=
      ( c0 wne wral wi wrex r19.9rzv imbi2d r19.35 syl6rbbr ) DEFZACDGZBHOBCDIZ
      HABHCDINBPOBCDJKABCDLM $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.
    $( Vacuous quantification is always true.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    rzal $p |- ( A = (/) -> A. x e. A ph ) $=
      ( c0 wceq cv wcel ne0i necon2bi pm2.21d ralrimiv ) CDEZABCLBFZCGZANCDCMHI
      JK $.
      $( [26-Jun-2011] $) $( [11-Mar-1997] $)

    $( Restricted existential quantification implies its restriction is
       nonempty.  (Contributed by Szymon Jaroszewicz, 3-Apr-2007.) $)
    rexn0 $p |- ( E. x e. A ph -> A =/= (/) ) $=
      ( c0 wne cv wcel ne0i a1d rexlimiv ) ACDEZBCBFZCGKACLHIJ $.
      $( [1-Mar-2007] $)

    $( Idempotent law for restricted quantifier. $)
    ralidm $p |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) $=
      ( c0 wceq wral wb rzal 2thd wn cv wcel wex neq0 wi biimt wal df-ral hbra1
      19.23 bitri syl6rbbr sylbi pm2.61i ) CDEZABCFZBCFZUFGZUEUGUFUFBCHABCHIUEJ
      BKCLZBMZUHBCNUJUFUJUFOZUGUJUFPUGUIUFOBQUKUFBCRUIUFBABCSTUAUBUCUD $.
      $( [28-Mar-1997] $)
  $}

  $( Vacuous universal quantification is always true. $)
  ral0 $p |- A. x e. (/) ph $=
    ( c0 cv wcel noel pm2.21i rgen ) ABCBDZCEAIFGH $.
    $( [20-Oct-2005] $)

  ${
    $d x A $.
    rgenz.1 $e |- ( ( A =/= (/) /\ x e. A ) -> ph ) $.
    $( Generalization rule that eliminates a non-zero class requirement. $)
    rgenz $p |- A. x e. A ph $=
      ( wral c0 rzal wne ralrimiva pm2.61ine ) ABCECFABCGCFHABCDIJ $.
      $( [8-Dec-2012] $)
  $}

  ${
    $d x A $.
    ralf0.1 $e |- -. ph $.
    $( The quantification of a falsehood is vacuous when true. $)
    ralf0 $p |- ( A. x e. A ph <-> A = (/) ) $=
      ( wral c0 wceq cv wcel wi wal wn con3 mpi alimi df-ral eq0 3imtr4i impbii
      rzal ) ABCEZCFGZBHCIZAJZBKUCLZBKUAUBUDUEBUDALUEDUCAMNOABCPBCQRABCTS $.
      $( [26-Nov-2005] $)
  $}

  $( MAY BE REVISED - shorten r19.3zv, r19.27zv, r19.28zv, raaanv w/ non-v $)
  ${
    $d x y A $.
    raaan.1 $e |- ( ph -> A. y ph ) $.
    raaan.2 $e |- ( ps -> A. x ps ) $.
    $( Rearrange restricted quantifiers. $)
    raaan $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb c0 wceq rzal pm5.1 syl12anc wne r19.28z ralbidv cv wcel
      ax-17 hbral r19.27z bitrd pm2.61ine ) ABHDEIZCEIZACEIZBDEIZHZJZEKEKLUGUHU
      IUKUFCEMACEMBDEMUGUJNOEKPZUGAUIHZCEIUJULUFUMCEABDEFQRAUICEBCDEDSETCUAGUBU
      CUDUE $.
      $( [26-Oct-2010] $)
  $}

  ${
    $d y ph $.  $d x ps $.  $d x y A $.
    $( Rearrange restricted quantifiers. $)
    raaanv $p |- ( A. x e. A A. y e. A ( ph /\ ps ) <->
                  ( A. x e. A ph /\ A. y e. A ps ) ) $=
      ( wa wral wb wceq rzal pm5.1 syl12anc wne r19.28zv ralbidv r19.27zv bitrd
      c0 pm2.61ine ) ABFDEGZCEGZACEGZBDEGZFZHZERERIUAUBUCUETCEJACEJBDEJUAUDKLER
      MZUAAUCFZCEGUDUFTUGCEABDENOAUCCEPQS $.
      $( [11-Mar-1997] $)
  $}

  ${
    $d x A w $.  $d v x $.  $d v A $.  $d w v $.  $d w y $.
    $( Lemma for ~ sbss .  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    sbsslem $p |- ( [ y / x ] x C_ A
                  <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) $=
      ( cv wss wsbc wcel wi wal wa dfss2 sbbii sbal sbim elsb4 ax-17 sbf 3bitri
      wb imbi12i simpl ancl impbid2 bi2 simpr syl6 impbii albii ) AEZDFZABEZGCE
      ZUJHZUMDHZIZCJZAULGUPAULGZCJUMULHZUOKZUSTZCJUKUQABCUJDLMUPCABNURVACURUNAU
      LGZUOAULGZIUSUOIZVAUNUOABOVBUSVCUOBACPUOABUOAQRUAVDVAVDUTUSUSUOUBUSUOUCUD
      VAUSUTUOUTUSUEUSUOUFUGUHSUIS $.
      $( [29-Jun-2011] $) $( [7-Jul-2010] $)
  $}

  ${
    $d z y $.  $d z A x $.
    $( Set substitution into the first argument of a subset relation.
       (Contributed by Rodolfo Medina, 7-Jul-2010.)  (Unnecessary distinct
       variable restrictions were removed by Andrew Salmon, 26-Jun-2011.) $)
    sbss $p |- ( [ y / x ] x C_ A <-> y C_ A ) $=
      ( vz cv wss wsbc ax-17 sseq1 sbie sbbii sbco2 3bitr3i ) AEZCFZADEZGZDBEZG
      PCFZDRGOARGRCFZQSDBOSADSAHNPCIJKOABDODHLSTDBTDHPRCIJM $.
      $( [26-Jun-2011] $) $( [7-Jul-2010] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  In a Hilbert system of logic (which consists of a set of axioms, modus
  ponens, and the generalization rule), converting a deduction to a proof using
  the Deduction Theorem (taught in introductory logic books) involves an
  exponential increase of the number of steps as hypotheses are successively
  eliminated.  Here is a trick that is not as general as the Deduction Theorem
  but requires only a linear increase in the number of steps.

  The general problem:  We want to convert a deduction
    P |- Q
  into a proof of the theorem
    |- P -> Q
  i.e. we want to eliminate the hypothesis P.  Normally this is done using the
  Deduction (meta)Theorem, which looks at the microscopic steps of the
  deduction and usually doubles or triples the number of these microscopic
  steps for each hypothesis that is eliminated.  We will look at a special case
  of this problem, without appealing to the Deduction Theorem.

  We assume ZF with class notation.  A and B are arbitrary (possibly
  proper) classes.  P, Q, R, S and T are wffs.

  We define the conditional operator, if(P,A,B), as follows:
    if(P,A,B) =def= { x | (x \in A & P) v (x \in B & -. P) }
  (where x does not occur in A, B, or P).

  Lemma 1.
    A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
  Proof:  Logic and Axiom of Extensionality.

  Lemma 2.
    A = if(P,A,B) -> (Q <-> T), T |- P -> Q
  Proof:  Logic and Axiom of Extensionality.

  Here's a simple example that illustrates how it works.  Suppose we have
  a deduction
    Ord A |- Tr A
  which means, "Assume A is an ordinal class.  Then A is a transitive class."
  Note that A is a class variable that may be substituted with any class
  expression, so this is really a deduction scheme.

  We want to convert this to a proof of the theorem (scheme)
    |- Ord A -> Tr A.

  The catch is that we must be able to prove "Ord A" for at least one
  object A (and this is what makes it weaker than the ordinary Deduction
  Theorem).  However it is easy to prove |- Ord 0 (the empty set is
  ordinal).  (For a typical textbook "theorem," i.e. deduction, there is
  usually at least one object satisfying each hypothesis, otherwise the
  theorem would not be very useful.  We can always go back to the standard
  Deduction Theorem for those hypotheses where this is not the case.)
  Continuing with the example:

  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
    |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
  From (1), (2) and |- Ord 0, Lemma 1 yields
    |- Ord if(Ord A, A, 0)                                       (3)
  From (3) and substituting if(Ord A, A, 0) for
  A in the original deduction,
    |- Tr if(Ord A, A, 0)                                        (4)
  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
  From (4) and (5), Lemma 2 yields
    |- Ord A -> Tr A                                               (Q.E.D.)

$)

  $( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)

  $( Declare new constant symbols. $)
  $c if $.  $( Conditional operator (was "ded" for "deduction class"). $)
  $c , $.  $( Comma (also used for unordered pair notation later) $)

  $( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
  cif $a class if ( ph , A , B ) $.

  ${
    $d x ph $.  $d x A $.  $d x B $.
    $( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ."  See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem. $)
    df-if $a |- if ( ph , A , B ) =
                 { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
  $}

  ${
    $d x ph $.  $d x A $.  $d x B $.  $d x C $.
    $( An alternate definition of the conditional operator ~ df-if with one
       fewer connectives (but probably less intuitive to understand). $)
    dfif2 $p |- if ( ph , A , B ) =
                 { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
      ( cif cv wcel wa wn wo cab wi df-if df-or orcom iman imbi1i 3bitr4i abbii
      eqtri ) ACDEBFZCGAHZUADGZAIHZJZBKUCALZUBLZBKABCDMUEUGBUDUBJUDIZUBLUEUGUDU
      BNUBUDOUFUHUBUCAPQRST $.
      $( [30-Jan-2006] $)

    $( An alternate definition of the conditional operator ~ df-if as a simple
       class abstraction. $)
    dfif6 $p |- if ( ph , A , B ) =
                 ( { x e. A | ph } u. { x e. B | -. ph } ) $=
      ( cv wcel wa cab wn cun wo crab cif unab df-rab uneq12i df-if 3eqtr4ri )
      BEZCFAGZBHZSDFAIZGZBHZJTUCKBHABCLZUBBDLZJACDMTUCBNUEUAUFUDABCOUBBDOPABCDQ
      R $.
      $( [8-Sep-2013] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq1d dfif6 3eqtr4g ) BCFZAEBGZAHEDGZIAE
      CGZQIABDJACDJOPRQAEBCKLAEBDMAECDMN $.
      $( [8-Sep-2013] $) $( [1-Sep-2004] $)

    $( Equality theorem for conditional operator.  (The proof was shortened by
       Andrew Salmon, 26-Jun-2011.) $)
    ifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
      ( vx wceq crab wn cun cif rabeq uneq2d dfif6 3eqtr4g ) BCFZAEDGZAHZEBGZIP
      QECGZIADBJADCJORSPQEBCKLAEDBMAEDCMN $.
      $( [8-Sep-2013] $) $( [1-Sep-2004] $)

    $( Value of the conditional operator when its first argument is true.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    iftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
      ( vx cv wcel wi wa cab cif dedlem0a abbi2dv dfif2 syl6reqr ) ABDEZCFZAGOB
      FZAHGZDIABCJARDBAQPKLADBCMN $.
      $( [26-Jun-2011] $) $( [15-May-1999] $)

    $( Value of the conditional operator when its first argument is false. $)
    iffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
      ( vx wn cv wcel wa wo cab cif dedlemb abbi2dv df-if syl6reqr ) AEZCDFZBGZ
      AHQCGZPHIZDJABCKPTDCARSLMADBCNO $.
      $( [2-Sep-2004] $) $( [14-Aug-1999] $)
  $}

  $( When values are unequal, but an "if" condition checks if they are equal,
     then the "false" branch results.  This is a simple utility to provide a
     slight shortening and simplification of proofs vs. applying ~ iffalse
     directly in this case.  It happens, e.g., in ~ oevn0 .  (Contributed by
     David A. Wheeler, 15-May-2015.) $)
  ifnefalse $p |- ( A =/= B -> if ( A = B , C , D ) = D ) $=
    ( wne wceq wn cif df-ne iffalse sylbi ) ABEABFZGLCDHDFABILCDJK $.
    $( [15-May-2015] $)

  ${
    $d A x y $.  $d B x y $.  $d C y $.
    ifsb.1 $e |- ( if ( ph , A , B ) = A -> C = D ) $.
    ifsb.2 $e |- ( if ( ph , A , B ) = B -> C = E ) $.
    $( Distribute a function over an if-clause.  (Contributed by Mario
       Carneiro, 14-Aug-2013.) $)
    ifsb $p |- C = if ( ph , D , E ) $=
      ( cif wceq iftrue syl eqtr4d wn iffalse pm2.61i ) ADAEFIZJADEQAABCIZBJDEJ
      ABCKGLAEFKMANZDFQSRCJDFJABCOHLAEFOMP $.
      $( [14-Aug-2013] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y ph $.
    dfif3.1 $e |- C = { x | ph } $.
    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false. $)
    dfif3 $p |- if ( ph , A , B )
                  = ( ( A i^i C ) u. ( B i^i ( _V \ C ) ) ) $=
      ( vy cif crab wn cun cin cvv cdif dfif6 cab cv ineq2i dfrab3 eqtr4i biidd
      wceq cbvabv eqtri notab difeq2i eqtr2i uneq12i ) ACDHAGCIZAJZGDIZKCELZDME
      NZLZKAGCDOULUIUNUKULCAGPZLUIEUOCEABPUOFAABGBQGQUBAUAUCUDZRAGCSTUKDUJGPZLU
      NUJGDSUQUMDUQMUONUMAGUEEUOMUPUFTRUGUHT $.
      $( [8-Sep-2013] $) $( [25-Aug-2013] $)

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false. $)
    dfif4 $p |- if ( ph , A , B )
        = ( ( A u. B ) i^i ( ( A u. ( _V \ C ) ) i^i ( B u. C ) ) ) $=
      ( cif cin cvv cdif cun dfif3 undir undi uncom undifv ineq12i 3eqtri inass
      inv1 eqtri ) ACDGCEHDIEJZHZKCUCKZEUCKZHZCDKZCUBKZDEKZHHZABCDEFLCEUCMUFUGU
      HHZUIHUJUDUKUEUICDUBNUEEDKZEUBKZHUIIHUIEDUBNULUIUMIEDOEPQUITRQUGUHUISUAR
      $.
      $( [25-Aug-2013] $)

    $( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false (see also
       ~ abvor0 ).  (Contributed by G&eacute;rard Lang, 18-Aug-2013.) $)
    dfif5 $p |- if ( ph , A , B ) = ( ( A i^i B )
          u. ( ( ( A \ B ) i^i C ) u. ( ( B \ A ) i^i ( _V \ C ) ) ) ) $=
      ( cun cdif undi undifabs ineq1i inabs undif2 3eqtr4i uneq12i unundi unidm
      cin unass 3eqtr4ri cif cvv dfif4 3eqtri uneq1i uncom eqtri 3eqtrri uneq2i
      3eqtr3ri ineq2i undir eqtr4i ineq12i inindi ) ACDUACDGZCUBEHZGZDEGZRRZCDR
      CDHZERZDCHZUQRZGZGZABCDEFUCUPURRZUPUSRZRCVEGZDVEGZRUTVFVGVIVHVJCVBGZCVDGZ
      GCCDUQRZGZGZVIVGVKCVLVNVKCVAGZCEGZRCVQRCCVAEIVPCVQCDJKCELUDCVCGZURRVGVLVN
      VRUPURCDMKCVCUQICDUQIZNOCVBVDPCCGZVMGVNVOVGVTCVMCQUECCVMSVSUJTCERZDGZDVBG
      ZDVDGZGZVHVJWBDGWADDGZGWEWBWADDSWBWCDWDDVAGZUSRDCGZUSRZWCWBWGWHUSDCMKDVAE
      IWBDWAGWIWADUFDCEIUGTWDDVCGZDUQGZRDWKRDDVCUQIWJDWKDCJKDUQLUHOWFDWADQUIUJV
      HUPEDGZRWBUSWLUPDEUFUKCEDULUMDVBVDPNUNUPURUSUOCDVEULTUM $.
      $( [25-Aug-2013] $)
  $}

  $( Equality theorem for conditional operators. $)
  ifeq12 $p |- ( ( A = B /\ C = D ) ->
                if ( ph , A , C ) = if ( ph , B , D ) ) $=
    ( wceq cif ifeq1 ifeq2 sylan9eq ) BCFDEFABDGACDGACEGABCDHADECIJ $.
    $( [1-Sep-2004] $)

  ${
    ifeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for conditional operator. $)
    ifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( wceq cif ifeq1 syl ) ACDGBCEHBDEHGFBCDEIJ $.
      $( [16-Feb-2005] $)

    $( Equality deduction for conditional operator. $)
    ifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( wceq cif ifeq2 syl ) ACDGBECHBEDHGFBCDEIJ $.
      $( [16-Feb-2005] $)

    ifeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for conditional operator. $)
    ifeq12d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , D ) ) $=
      ( cif ifeq1d ifeq2d eqtrd ) ABCEIBDEIBDFIABCDEGJABEFDHKL $.
      $( [24-Mar-2015] $)
  $}

  $( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-2004.) $)
  ifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
    ( wb wa wn wo cif wceq dfbi3 iftrue eqcomd sylan9eq iffalse jaoi sylbi ) AB
    EABFZAGZBGZFZHACDIZBCDIZJZABKRUDUAABUBCUCACDLBUCCBCDLMNSTUBDUCACDOTUCDBCDOM
    NPQ $.
    $( [15-Jan-2004] $)

  ${
    ifbid.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalence deduction for conditional operators. $)
    ifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
      ( wb cif wceq ifbi syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [18-Apr-2005] $)
  $}

  ${
    ifbieq2i.1 $e |- ( ph <-> ps ) $.
    ifbieq2i.2 $e |- A = B $.
    $( Equivalence/equality inference for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2i $p |- if ( ph , C , A ) = if ( ps , C , B ) $=
      ( cif wb wceq ifbi ax-mp ifeq2 eqtri ) AECHZBECHZBEDHZABIOPJFABECKLCDJPQJ
      GBCDEMLN $.
      $( [20-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    ifbieq2d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq2d.2 $e |- ( ph -> A = B ) $.
    $( Equivalence/equality deduction for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
    ifbieq2d $p |- ( ph -> if ( ps , C , A ) = if ( ch , C , B ) ) $=
      ( cif ifbid ifeq2d eqtrd ) ABFDICFDICFEIABCFDGJACDEFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    ifbieq12i.1 $e |- ( ph <-> ps ) $.
    ifbieq12i.2 $e |- A = C $.
    ifbieq12i.3 $e |- B = D $.
    $( Equivalence deduction for conditional operators. $)
    ifbieq12i $p |- if ( ph , A , B ) = if ( ps , C , D ) $=
      ( cif wceq ifeq1 ax-mp ifbieq2i eqtri ) ACDJZAEDJZBEFJCEKPQKHACEDLMABDFEG
      INO $.
      $( [18-Mar-2013] $)
  $}

  ${
    ifbieq12d.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    ifbieq12d.2 $e |- ( ph -> A = C ) $.
    ifbieq12d.3 $e |- ( ph -> B = D ) $.
    $( Equivalence deduction for conditional operators.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
    ifbieq12d $p |- ( ph -> if ( ps , A , B ) = if ( ch , C , D ) ) $=
      ( cif ifbid ifeq1d ifeq2d 3eqtrd ) ABDEKCDEKCFEKCFGKABCDEHLACDFEIMACEGFJN
      O $.
      $( [22-Jun-2011] $) $( [2-Sep-2009] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d z ph $.
    hbif.1 $e |- ( ph -> A. x ph ) $.
    hbif.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbif.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a conditional operator.  (The
       proof was shortened by Andrew Salmon, 26-Jun-2011.) $)
    hbif $p |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) $=
      ( vz cif cv wcel wi wa cab dfif2 hblem hbim hban hbab hbxfreq ) BCADEJIKZ
      ELZAMZUBDLZANZMZIOAIDEPUGBICUDUFBUCABBCIEHQFRUEABBCIDGQFSRTUA $.
      $( [26-Jun-2011] $) $( [16-Feb-2005] $)
  $}

  ${
    $d x y z $.  $d y z A $.  $d y z B $.  $d y z ph $.  $d z ps $.
    hbifd.1 $e |- ( ph -> A. x ph ) $.
    hbifd.2 $e |- ( ph -> ( ps -> A. x ps ) ) $.
    hbifd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbifd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of ~ hbif . $)
    hbifd $p |- ( ph
  -> ( y e. if ( ps , A , B ) -> A. x y e. if ( ps , A , B ) ) ) $=
      ( vz cif cv wcel wi wa cab wceq hbeld hbimd dfif2 ax-17 alrimi a17d hband
      a1i wal hbabd hbxfrd ) ACDBEFLZKMZFNZBOZUKENZBPZOZKQZGUJUQRABKEFUAUFAUPCK
      DAAKUGCGAKUBUCAUMUOCGAULBCGACDUKFGADMUKNCUDZJSHTAUNBCACDUKEGURISHUETUHUI
      $.
      $( [15-Feb-2013] $)
  $}

  ${
    ifeq1da.1 $e |- ( ( ph /\ ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq1da $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
      ( cif wceq wa ifeq1d wn iffalse eqtr4d adantl pm2.61dan ) ABBCEGZBDEGZHZA
      BIBCDEFJBKZRASPEQBCELBDELMNO $.
      $( [2-Sep-2009] $)
  $}

  ${
    ifeq2da.1 $e |- ( ( ph /\ -. ps ) -> A = B ) $.
    $( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifeq2da $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
      ( cif wceq iftrue eqtr4d adantl wn wa ifeq2d pm2.61dan ) ABBECGZBEDGZHZBR
      ABPEQBECIBEDIJKABLMBCDEFNO $.
      $( [2-Sep-2009] $)
  $}

  ${
    ifclda.1 $e |- ( ( ph /\ ps ) -> A e. C ) $.
    ifclda.2 $e |- ( ( ph /\ -. ps ) -> B e. C ) $.
    $( Conditional closure.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    ifclda $p |- ( ph -> if ( ps , A , B ) e. C ) $=
      ( cif wcel wa wceq iftrue adantl eqeltrd wn iffalse pm2.61dan ) ABBCDHZEI
      ABJRCEBRCKABCDLMFNABOZJRDESRDKABCDPMGNQ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d y A $.  $d y z B $.  $d y z C $.  $d y z ph $.  $d x y z $.
    $( Distribute proper substitution through the conditional operator. $)
    csbifg $p |- ( A e. V -> [_ A / x ]_ if ( ph , B , C )
          = if ( [ A / x ] ph , [_ A / x ]_ B , [_ A / x ]_ C ) ) $=
      ( vy cif csb wsbc wceq csbeq1 dfsbcq ifbieq12d eqeq12d vex hbcsb1 csbeq1a
      vz cv hbs1 wcel ax-17 hbif sbequ12 csbief vtoclg ) BGTZADEHZIZABUHJZBUHDI
      ZBUHEIZHZKBCUIIZABCJZBCDIZBCEIZHZKGCFUHCKZUJUOUNUSBUHCUILUTUKUPULUMUQURAB
      UHCMBUHCDLBUHCELNOBSUHUIUNGPUKBSULUMABGUABSUHDSTUHUBBUCZQBSUHEVAQUDBTUHKA
      UKDEULUMABGUEBUHDRBUHERNUFUG $.
      $( [24-Feb-2013] $)
  $}

  ${
    elimif.1 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
    elimif.2 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
    $( Elimination of a conditional operator contained in a wff ` ps ` . $)
    elimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
      ( wn wo wa exmid biantrur andir cif wceq wb iftrue syl pm5.32i iffalse
      orbi12i 3bitri ) BAAIZJZBKABKZUDBKZJACKZUDDKZJUEBALMAUDBNUFUHUGUIABCAAEFO
      ZEPBCQAEFRGSTUDBDUDUJFPBDQAEFUAHSTUBUC $.
      $( [15-Feb-2005] $)
  $}

  ${
    ifboth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    ifboth.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    ${
      ifbothda.3 $e |- ( ( et /\ ph ) -> ps ) $.
      ifbothda.4 $e |- ( ( et /\ -. ph ) -> ch ) $.
      $( A wff ` th ` containing a conditional operator is true when both of
         its cases are true. $)
      ifbothda $p |- ( et -> th ) $=
        ( wa wb cif wceq iftrue eqcomd syl adantl mpbid wn iffalse pm2.61dan )
        EADEALBDJABDMZEAFAFGNZOUDAUEFAFGPQHRSTEAUAZLCDKUFCDMZEUFGUEOUGUFUEGAFGU
        BQIRSTUC $.
        $( [15-Feb-2015] $)
    $}

    $( A wff ` th ` containing a conditional operator is true when both of its
       cases are true. $)
    ifboth $p |- ( ( ps /\ ch ) -> th ) $=
      ( wa simpll wn simplr ifbothda ) ABCDBCIEFGHBCAJBCAKLM $.
      $( [15-Feb-2015] $) $( [3-Sep-2006] $)
  $}

  $( Identical true and false arguments in the conditional operator. $)
  ifid $p |- if ( ph , A , A ) = A $=
    ( cif wceq iftrue iffalse pm2.61i ) AABBCBDABBEABBFG $.
    $( [18-Apr-2005] $)

  $( Expansion of an equality with a conditional operator. $)
  eqif $p |- ( A = if ( ph , B , C ) <->
             ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
    ( cif wceq eqeq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership in a conditional operator. $)
  elif $p |- ( A e. if ( ph , B , C ) <->
             ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
    ( cif wcel eleq2 elimif ) ABACDEZFBCFBDFCDICBGIDBGH $.
    $( [14-Feb-2005] $)

  $( Membership of a conditional operator. $)
  ifel $p |- ( if ( ph , A , B ) e. C <->
             ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
    ( cif wcel eleq1 elimif ) AABCEZDFBDFCDFBCIBDGICDGH $.
    $( [10-Sep-2005] $)

  $( Membership (closure) of a conditional operator. $)
  ifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
    ( wcel cif eleq1 ifboth ) ABDECDEABCFZDEBCBIDGCIDGH $.
    $( [4-Apr-2005] $)

  $( The possible values of a conditional operator.  (The proof was shortened
     by Andrew Salmon, 26-Jun-2011.) $)
  ifeqor $p |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) $=
    ( cif wceq wn iftrue con3i iffalse syl orri ) ABCDZBEZLCEZMFAFNAMABCGHABCIJ
    K $.
    $( [26-Jun-2011] $) $( [17-Jun-2007] $)

  $( Negating the first argument swaps the last two arguments of a conditional
     operator. $)
  ifnot $p |- if ( -. ph , A , B ) = if ( ph , B , A ) $=
    ( wn cif wceq notnot1 iffalse syl iftrue eqtr4d pm2.61i ) AADZBCEZACBEZFANC
    OAMDNCFAGMBCHIACBJKMNBOMBCJACBHKL $.
    $( [21-Jun-2007] $)
  $( Rewrite a conjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifan $p |- if ( ( ph /\ ps ) , A , B ) = if ( ph , if ( ps , A , B ) , B ) $=
    ( wa cif wceq iftrue ifbid eqtr2d wn simpl con3i iffalse syl eqtr4d pm2.61i
    ibar ) AABEZCDFZABCDFZDFZGAUBUATAUADHABSCDABRIJAKZTDUBUCSKTDGSAABLMSCDNOAUA
    DNPQ $.
    $( [28-Jul-2014] $)

  $( Rewrite a disjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
  ifor $p |- if ( ( ph \/ ps ) , A , B ) = if ( ph , A , if ( ps , A , B ) ) $=
    ( wo cif wceq iftrue orcs eqtr4d wn iffalse biorf ifbid eqtr2d pm2.61i ) AA
    BEZCDFZACBCDFZFZGARCTABRCGQCDHIACSHJAKZTSRACSLUABQCDABMNOP $.
    $( [28-Jul-2014] $)

  ${
    $d x A $.  $d x B $.  $d x ph $.
    dedth.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    dedth.2 $e |- ch $.
    $( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when the
       class variable ` A ` is replaced with a specific class ` B ` .  The
       hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference has
       other hypotheses with class variable ` A ` , these can be kept by
       assigning ~ keephyp to them.  For more information, see the Deduction
       Theorem ~ http://us.metamath.org/mpegif/mmdeduction.html . $)
    dedth $p |- ( ph -> ps ) $=
      ( cif wceq wb iftrue eqcomd syl mpbiri ) ABCGADADEHZIBCJAODADEKLFMN $.
      $( [15-May-1999] $)
  $}

  ${
    dedth2h.1 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
    dedth2h.2 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
    dedth2h.3 $e |- ta $.
    $( Weak deduction theorem eliminating two hypotheses.  This theorem is
       simpler to use than ~ dedth2v but requires that each hypothesis has
       exactly one class variable.  See also comments in ~ dedth . $)
    dedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
      ( wi cif wceq imbi2d dedth imp ) ABCABCMBDMFHFAFHNOCDBJPBDEGIKLQQR $.
      $( [15-May-1999] $)
  $}

  ${
    dedth3h.1 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
    dedth3h.2 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
    dedth3h.3 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
    dedth3h.4 $e |- ze $.
    $( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth2h . $)
    dedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
      ( wa wi cif wceq imbi2d dedth2h dedth 3impib ) ABCDABCRZDSUFESHKHAHKTUADE
      UFNUBBCEFGIJLMOPQUCUDUE $.
      $( [15-May-1999] $)
  $}

  ${
    dedth4h.1 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
    dedth4h.2 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
    dedth4h.3 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
    dedth4h.4 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
    dedth4h.5 $e |- rh $.
    $( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth2h . $)
    dedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
      ( wa wi cif wceq imbi2d dedth2h imp ) ABUCCDUCZEABUJEUDUJFUDUJGUDJKNOJAJN
      UEUFEFUJRUGKBKOUEUFFGUJSUGCDGHILMPQTUAUBUHUHUI $.
      $( [16-May-1999] $)
  $}

  ${
    dedth2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    dedth2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    dedth2v.3 $e |- th $.
    $( Weak deduction theorem for eliminating a hypothesis with 2 class
       variables.  Note: if the hypothesis can be separated into two
       hypotheses, each with one class variable, then ~ dedth2h is simpler to
       use.  See also comments in ~ dedth .  (The proof was shortened by Eric
       Schmidt, 28-Jul-2009.) $)
    dedth2v $p |- ( ph -> ps ) $=
      ( dedth2h anidms ) ABAABCDEFGHIJKLM $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth3v.1 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
    dedth3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    dedth3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    dedth3v.4 $e |- ta $.
    $( Weak deduction theorem for eliminating a hypothesis with 3 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth3v $p |- ( ph -> ps ) $=
      ( dedth3h 3anidm12 anidms ) ABAABAAABCDEFGHIJKLMNOPQR $.
      $( [29-Jul-2009] $) $( [13-Aug-1999] $)
  $}

  ${
    dedth4v.1 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
    dedth4v.2 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
    dedth4v.3 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
    dedth4v.4 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
    dedth4v.5 $e |- et $.
    $( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth2v .  (The proof was shortened by
       Eric Schmidt, 28-Jul-2009.) $)
    dedth4v $p |- ( ph -> ps ) $=
      ( anidms wa dedth4h ) ABAAUABAAAABCDEFGHIJKLMNOPQRSUBTT $.
      $( [29-Jul-2009] $) $( [21-Apr-2007] $)
  $}

  ${
    elimhyp.1 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
    elimhyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
    elimhyp.3 $e |- ch $.
    $( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth . $)
    elimhyp $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl ibi wn iffalse mpbii pm2.61i ) ABABADADEI
      ZJABKATDADELMFNOAPZCBHUAETJCBKUATEADEQMGNRS $.
      $( [15-May-1999] $)
  $}

  ${
    elimhyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
    elimhyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    elimhyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    elimhyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    elimhyp2v.5 $e |- ta $.
    $( Eliminate a hypothesis containing 2 class variables. $)
    elimhyp2v $p |- th $=
      ( cif wceq wb iftrue eqcomd syl bitrd ibi wn iffalse mpbii pm2.61i ) ACAC
      AABCAFAFHOZPABQAUGFAFHRSJTAGAGIOZPBCQAUHGAGIRSKTUAUBAUCZDCNUIDECUIHUGPDEQ
      UIUGHAFHUDSLTUIIUHPECQUIUHIAGIUDSMTUAUEUF $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    elimhyp3v.7 $e |- et $.
    $( Eliminate a hypothesis containing 3 class variables. $)
    elimhyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd ibi wn iffalse mpbii pm2.61i ) ADA
      DAABCDAHAHKUAZUBABUCAUMHAHKUDUENUFAIAILUAZUBBCUCAUNIAILUDUEOUFAJAJMUAZUBC
      DUCAUOJAJMUDUEPUFUGUHAUIZEDTUPEFGDUPKUMUBEFUCUPUMKAHKUJUEQUFUPLUNUBFGUCUP
      UNLAILUJUERUFUPMUOUBGDUCUPUOMAJMUJUESUFUGUKUL $.
      $( [14-Aug-1999] $)
  $}

  ${
    elimhyp4v.1 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
    elimhyp4v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    elimhyp4v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    elimhyp4v.4 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.
    elimhyp4v.5 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    elimhyp4v.6 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    elimhyp4v.7 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
    elimhyp4v.8 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
    elimhyp4v.9 $e |- et $.
    $( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ). $)
    elimhyp4v $p |- ps $=
      ( cif wceq wb iftrue eqcomd syl bitrd 3bitrd ibi wn iffalse mpbii pm2.61i
      ) ABABAADEBAACDAJAJMUGZUHACUIAUTJAJMUJUKRULAKAKNUGZUHCDUIAVAKAKNUJUKSULUM
      ALALOUGZUHDEUIAVBLALOUJUKTULAPAPQUGZUHEBUIAVCPAPQUJUKUAULUNUOAUPZFBUFVDFH
      IBVDFGHVDMUTUHFGUIVDUTMAJMUQUKUBULVDNVAUHGHUIVDVANAKNUQUKUCULUMVDOVBUHHIU
      IVDVBOALOUQUKUDULVDQVCUHIBUIVDVCQAPQUQUKUEULUNURUS $.
      $( [16-Apr-2005] $)
  $}

  ${
    elimel.1 $e |- B e. C $.
    $( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable. $)
    elimel $p |- if ( A e. C , A , B ) e. C $=
      ( wcel cif eleq1 elimhyp ) ACEZIABFZCEBCEABAJCGBJCGDH $.
      $( [15-May-1999] $)
  $}

  ${
    elimdhyp.1 $e |- ( ph -> ps ) $.
    elimdhyp.2 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
    elimdhyp.3 $e |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) $.
    elimdhyp.4 $e |- th $.
    $( Version of ~ elimhyp where the hypothesis is deduced from the final
       antecedent.  See ~ ghomgrplem for an example of its use.  (Contributed
       by Paul Chapman, 25-Mar-2008.) $)
    elimdhyp $p |- ch $=
      ( cif wceq wb iftrue eqcomd syl mpbid wn iffalse mpbii pm2.61i ) ACABCGAE
      AEFKZLBCMAUBEAEFNOHPQARZDCJUCFUBLDCMUCUBFAEFSOIPTUA $.
      $( [25-Mar-2008] $)
  $}

  ${
    keephyp.1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
    keephyp.2 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
    keephyp.3 $e |- ps $.
    keephyp.4 $e |- ch $.
    $( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem. $)
    keephyp $p |- th $=
      ( ifboth mp2an ) BCDIJABCDEFGHKL $.
      $( [15-May-1999] $)
  $}

  ${
    keephyp2v.1 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
    keephyp2v.2 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
    keephyp2v.3 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
    keephyp2v.4 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
    keephyp2v.5 $e |- ps $.
    keephyp2v.6 $e |- ta $.
    $( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ). $)
    keephyp2v $p |- th $=
      ( wceq wb eqcomd syl cif iftrue bitrd mpbii wn iffalse pm2.61i ) ADABDOAB
      CDAGAGIUAZQBCRAUHGAGIUBSKTAHAHJUAZQCDRAUIHAHJUBSLTUCUDAUEZEDPUJEFDUJIUHQE
      FRUJUHIAGIUFSMTUJJUIQFDRUJUIJAHJUFSNTUCUDUG $.
      $( [16-Apr-2005] $)
  $}

  ${
    keephyp3v.1 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
    keephyp3v.2 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
    keephyp3v.3 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
    keephyp3v.4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
    keephyp3v.5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
    keephyp3v.6 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
    keephyp3v.7 $e |- rh $.
    keephyp3v.8 $e |- et $.
    $( Keep a hypothesis containing 3 class variables. $)
    keephyp3v $p |- ta $=
      ( cif wceq wb iftrue eqcomd syl 3bitrd mpbii wn iffalse pm2.61i ) ADAHDUA
      AHBCDAIAILUCZUDHBUEAUNIAILUFUGOUHAJAJMUCZUDBCUEAUOJAJMUFUGPUHAKAKNUCZUDCD
      UEAUPKAKNUFUGQUHUIUJAUKZEDUBUQEFGDUQLUNUDEFUEUQUNLAILULUGRUHUQMUOUDFGUEUQ
      UOMAJMULUGSUHUQNUPUDGDUEUQUPNAKNULUGTUHUIUJUM $.
      $( [27-Sep-1999] $)
  $}

  ${
    keepel.1 $e |- A e. C $.
    keepel.2 $e |- B e. C $.
    $( Keep a membership hypothesis for weak deduction theorem, when special
       case ` B e. C ` is provable. $)
    keepel $p |- if ( ph , A , B ) e. C $=
      ( wcel cif eleq1 keephyp ) ABDGCDGABCHZDGBCBKDICKDIEFJ $.
      $( [14-Aug-1999] $)
  $}

  ${
    dedex.1 $e |- A e. _V $.
    dedex.2 $e |- B e. _V $.
    $( Conditional operator existence. $)
    ifex $p |- if ( ph , A , B ) e. _V $=
      ( cvv keepel ) ABCFDEG $.
      $( [2-Sep-2004] $)
  $}

  ${
    $d A x y $.  $d B y $.  $d ph x y $.
    $( Conditional operator existence. $)
    ifexg $p |- ( ( A e. V /\ B e. W ) -> if ( ph , A , B ) e. _V ) $=
      ( vx vy cv cif cvv wcel wceq ifeq1 eleq1d ifeq2 vex ifex vtocl2g ) AFHZGH
      ZIZJKABTIZJKABCIZJKFGBCDESBLUAUBJASBTMNTCLUBUCJATCBONASTFPGPQR $.
      $( [23-Nov-2012] $) $( [21-Mar-2011] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                          Power classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare the symbol for power class. $)
  $c ~P $.  $( Calligraphic P $)

  $( Extend class notation to include power class.  (The tilde in the Metamath
     token is meant to suggest the calligraphic font of the P.) $)
  cpw $a class ~P A $.

  ${
    $d x A $.  $d y A $.  $d w x $.  $d w y $.  $d w A $.  $d w z $.  $d z x $.
    $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-pw .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    pwjust $p |- { x | x C_ A } = { y | y C_ A } $=
      ( vz cv wss cab sseq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINPD
      BMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define power class.  Definition 5.10 of [TakeutiZaring] p. 17, but we
       also let it apply to proper classes, i.e. those that are not members of
       ` _V ` . $)
    df-pw $a |- ~P A = { x | x C_ A } $.
  $}

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for power class. $)
    pweq $p |- ( A = B -> ~P A = ~P B ) $=
      ( vx wceq cv wss cab cpw sseq2 abbidv df-pw 3eqtr4g ) ABDZCEZAFZCGNBFZCGA
      HBHMOPCABNIJCAKCBKL $.
      $( [5-Aug-1993] $)
  $}

  ${
    pweqi.1 $e |- A = B $.
    $( Equality inference for power class. $)
    pweqi $p |- ~P A = ~P B $=
      ( wceq cpw pweq ax-mp ) ABDAEBEDCABFG $.
      $( [27-Nov-2013] $)
  $}

  ${
    pweqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for power class. $)
    pweqd $p |- ( ph -> ~P A = ~P B ) $=
      ( wceq cpw pweq syl ) ABCEBFCFEDBCGH $.
      $( [27-Nov-2013] $)
  $}

  ${
    $d A x $.  $d B x $.
    ${
      elpw.1 $e |- A e. _V $.
      $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
      elpw $p |- ( A e. ~P B <-> A C_ B ) $=
        ( vx cv wss cpw sseq1 df-pw elab2 ) DEZBFABFDABGCKABHDBIJ $.
        $( [31-Dec-1993] $)
    $}

    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47.  See also
       ~ elpw2g . $)
    elpwg $p |- ( A e. V -> ( A e. ~P B <-> A C_ B ) ) $=
      ( vx cv cpw wcel wss eleq1 sseq1 vex elpw vtoclbg ) DEZBFZGNBHAOGABHDACNA
      OINABJNBDKLM $.
      $( [6-Aug-2000] $)
  $}

  $( Subset relation implied by membership in a power class. $)
  elpwi $p |- ( A e. ~P B -> A C_ B ) $=
    ( cpw wcel wss elpwg ibi ) ABCZDABEABHFG $.
    $( [17-Feb-2007] $)

  $( If ` A ` belongs to a part of ` C ` then ` A ` belongs to ` C ` .
     (Contributed by FL, 3-Aug-2009.) $)
  elelpwi $p |- ( ( A e. B /\ B e. ~P C ) -> A e. C ) $=
    ( cpw wcel elpwi sseld impcom ) BCDEZABEACEIBCABCFGH $.
    $( [4-Mar-2011] $) $( [2-Aug-2009] $)

  ${
    $d y z A $.  $d x y z $.
    hbpw.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for power class. $)
    hbpw $p |- ( y e. ~P A -> A. x y e. ~P A ) $=
      ( vz cv cpw wcel wss vex elpw ax-17 hblem hbss hbxfrbi ) BFZCGHPCIAPCBJKA
      EPCEFPHALABECDMNO $.
      $( [28-Oct-2003] $)
  $}

  $( Membership of the original in a power set.  (Contributed by Stefan O'Rear,
     1-Feb-2015.) $)
  pwidg $p |- ( A e. V -> A e. ~P A ) $=
    ( wcel cpw wss ssid elpwg mpbiri ) ABCAADCAAEAFAABGH $.
    $( [1-Feb-2015] $)

  ${
    pwid.1 $e |- A e. _V $.
    $( A set is a member of its power class.  Theorem 87 of [Suppes] p. 47. $)
    pwid $p |- A e. ~P A $=
      ( cvv wcel cpw pwidg ax-mp ) ACDAAEDBACFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class. $)
    pwss $p |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) $=
      ( cpw wss cv wcel wi wal dfss2 df-pw abeq2i imbi1i albii bitri ) BDZCEAFZ
      PGZQCGZHZAIQBEZSHZAIAPCJTUBARUASUAAPABKLMNO $.
      $( [21-Jun-2009] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Unordered and ordered pairs
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbols needed. $)
  $c <. $.  $( Bracket (the period distinguishes it from 'less than') $)
  $c >. $.  $( Bracket (the period distinguishes it from 'greater than') $)

  $( Extend class notation to include singleton. $)
  csn $a class { A } $.
  $( Extend class notation to include unordered pair. $)
  cpr $a class { A , B } $.
  $( Extend class notation to include unordered triplet. $)
  ctp $a class { A , B , C } $.
  $( Extend class notation to include ordered pair. $)
  cop $a class <. A , B >. $.
  $( Extend class notation to include ordered triple. $)
  cotp $a class <. A , B , C >. $.

  ${
    $d x A $.  $d y A $.  $d z x $.  $d z y $.  $d z A $.
    $( Soundness justification theorem for ~ df-sn .  (Contributed by Rodolfo
       Medina, 28-Apr-2010.)  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    snjust $p |- { x | x = A } = { y | y = A } $=
      ( vz cv wceq cab eqeq1 cbvabv eqtri ) AEZCFZAGDEZCFZDGBEZCFZBGLNADKMCHINP
      DBMOCHIJ $.
      $( [29-Jun-2011] $) $( [28-Apr-2010] $)
  $}

  ${
    $d x A $.
    $( Define the singleton of a class.  Definition 7.1 of [Quine] p. 48.  For
       convenience, it is well-defined for proper classes, i.e., those that are
       not elements of ` _V ` , although it is not very meaningful in this
       case.  For an alternate definition see ~ dfsn2 . $)
    df-sn $a |- { A } = { x | x = A } $.
  $}

  $( Define unordered pair of classes.  Definition 7.1 of [Quine] p. 48.  For
     example, ` A e. { 1 , -u 1 } -> ( A ^ 2 ) = 1 ` ( ~ ex-pr ).  They are
     unordered, so ` { A , B } = { B , A } ` as proven by ~ prcom .  For a more
     traditional definition, but requiring a dummy variable, see ~ dfpr2 . $)
  df-pr $a |- { A , B } = ( { A } u. { B } ) $.

  $( Define unordered triple of classes.  Definition of [Enderton] p. 19. $)
  df-tp $a |- { A , B , C } = ( { A , B } u. { C } ) $.

  ${
    $d x A $.  $d x B $.
    $( Kuratowski's ordered pair definition.  Definition 9.1 of [Quine] p. 58.
       As the behavior of the usual Kuratowski definition is not very useful
       for proper classes, we define it to be empty in this case (see
       ~ opprc1 , ~ 0nelop , and ~ opprc2 ).  For the justifying theorem (for
       sets) see ~ opth .  There are other ways to define ordered pairs; the
       basic requirement is that two ordered pairs are equal iff their
       respective members are equal.  In 1914 Norbert Wiener gave the first
       successful definition ` <. A , B >. ` _2
       ` = { { { A } , (/) } , { { B } } } ` , justified by ~ opthwiener ,
       which was simplified by Kazimierz Kuratowski in 1921 to our present
       definition.  An even simpler definition ` <. A , B >. ` _3
       ` = { A , { A , B } } ` is justified by ~ opthreg , but it requires the
       Axiom of Regularity for its justification and is not commonly used.  A
       definition that also works for proper classes is ` <. A , B >. ` _4
       ` = ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) ` , justified by
       ~ opthprc .  If we restrict our sets to nonnegative integers, an ordered
       pair definition that involves only elementary arithmetic is provided by
       ~ nn0opthi .  Finally, an ordered pair of real numbers can be
       represented by a complex number as shown by ~ crui . $)
    df-op $a |- <. A , B >. = { x |
      ( A e. _V /\ B e. _V /\ x e. { { A } , { A , B } } ) } $.
  $}

  $( Define ordered triple of classes.  Definition of ordered triple in [Stoll]
     p. 25. $)
  df-ot $a |- <. A , B , C >. = <. <. A , B >. , C >. $.

  ${
    $d x A $.  $d x B $.
    $( Equality theorem for singletons.  Part of Exercise 4 of [TakeutiZaring]
       p. 15. $)
    sneq $p |- ( A = B -> { A } = { B } ) $=
      ( vx wceq cv cab csn eqeq2 abbidv df-sn 3eqtr4g ) ABDZCEZADZCFMBDZCFAGBGL
      NOCABMHICAJCBJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    sneqi.1 $e |- A = B $.
    $( Equality inference for singletons. $)
    sneqi $p |- { A } = { B } $=
      ( wceq csn sneq ax-mp ) ABDAEBEDCABFG $.
      $( [22-Jan-2004] $)
  $}

  ${
    sneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for singletons. $)
    sneqd $p |- ( ph -> { A } = { B } ) $=
      ( wceq csn sneq syl ) ABCEBFCFEDBCGH $.
      $( [22-Jan-2004] $)
  $}

  $( Alternate definition of singleton.  Definition 5.1 of [TakeutiZaring]
     p. 15. $)
  dfsn2 $p |- { A } = { A , A } $=
    ( cpr csn cun df-pr unidm eqtr2i ) AABACZHDHAAEHFG $.
    $( [24-Apr-1994] $)

  ${
    $d x A $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsn $p |- ( x e. { A } <-> x = A ) $=
      ( cv wceq csn df-sn abeq2i ) ACBDABEABFG $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Alternate definition of unordered pair.  Definition 5.1 of
       [TakeutiZaring] p. 15. $)
    dfpr2 $p |- { A , B } = { x | ( x = A \/ x = B ) } $=
      ( cpr csn cun cv wceq cab df-pr wcel elun elsn orbi12i bitri abbi2i eqtri
      wo ) BCDBEZCEZFZAGZBHZUBCHZRZAIBCJUEAUAUBUAKUBSKZUBTKZRUEUBSTLUFUCUGUDABM
      ACMNOPQ $.
      $( [24-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15, generalized. $)
    elprg $p |- ( A e. V -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) $=
      ( vx cv wceq wo cpr eqeq1 orbi12d dfpr2 elab2g ) EFZBGZNCGZHABGZACGZHEABC
      IDNAGOQPRNABJNACJKEBCLM $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr.1 $e |- A e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cvv wcel cpr wceq wo wb elprg ax-mp ) AEFABCGFABHACHIJDABCEKL $.
      $( [13-Sep-1995] $)
  $}

  ${
    elpr2.1 $e |- B e. _V $.
    elpr2.2 $e |- C e. _V $.
    $( A member of an unordered pair of classes is one or the other of them.
       Exercise 1 of [TakeutiZaring] p. 15. $)
    elpr2 $p |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) $=
      ( cpr wcel wceq wo elprg ibi cvv wb eleq1 mpbiri jaoi syl ibir impbii ) A
      BCFZGZABHZACHZIZUAUDABCTJKUDUAUDALGZUAUDMUBUEUCUBUEBLGDABLNOUCUECLGEACLNO
      PABCLJQRS $.
      $( [14-Oct-2005] $)
  $}

  $( If a class is an element of a pair, then it is one of the two paired
     elements.  (Contributed by Scott Fenton, 1-Apr-2011.) $)
  elpri $p |- ( A e. { B , C } -> ( A = B \/ A = C ) ) $=
    ( cpr wcel wceq wo elprg ibi ) ABCDZEABFACFGABCJHI $.
    $( [1-Apr-2011] $)

  ${
    $d A x $.  $d B x $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15 (generalized).  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    elsncg $p |- ( A e. V -> ( A e. { B } <-> A = B ) ) $=
      ( vx cv wceq csn eqeq1 df-sn elab2g ) DEZBFABFDABGCKABHDBIJ $.
      $( [29-Jun-2011] $) $( [13-Sep-1995] $)
  $}

  ${
    elsnc.1 $e |- A e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15. $)
    elsnc $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsncg ax-mp ) ADEABFEABGHCABDIJ $.
      $( [13-Sep-1995] $)
  $}

  $( There is only one element in a singleton. $)
  elsni $p |- ( A e. { B } -> A = B ) $=
    ( csn wcel wceq elsncg ibi ) ABCZDABEABHFG $.
    $( [5-Jun-1994] $)

  $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
     p. 49. $)
  snidg $p |- ( A e. V -> A e. { A } ) $=
    ( wcel csn wceq eqid elsncg mpbiri ) ABCAADCAAEAFAABGH $.
    $( [28-Oct-2003] $)

  $( A class is a set iff it is a member of its singleton. $)
  snidb $p |- ( A e. _V <-> A e. { A } ) $=
    ( cvv wcel csn snidg elex impbii ) ABCAADZCABEAHFG $.
    $( [5-Apr-2004] $)

  ${
    snid.1 $e |- A e. _V $.
    $( A set is a member of its singleton.  Part of Theorem 7.6 of [Quine]
       p. 49. $)
    snid $p |- A e. { A } $=
      ( cvv wcel csn snidb mpbi ) ACDAAEDBAFG $.
      $( [31-Dec-1993] $)
  $}

  $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
     p. 15.  This variation requires only that ` B ` , rather than ` A ` , be a
     set. $)
  elsnc2g $p |- ( B e. V -> ( A e. { B } <-> A = B ) ) $=
    ( wcel csn wceq elsni snidg eleq1 syl5ibrcom impbid2 ) BCDZABEZDZABFZABGLNO
    BMDBCHABMIJK $.
    $( [28-Oct-2003] $)

  ${
    elsnc2.1 $e |- B e. _V $.
    $( There is only one element in a singleton.  Exercise 2 of [TakeutiZaring]
       p. 15.  This variation requires only that ` B ` , rather than ` A ` , be
       a set. $)
    elsnc2 $p |- ( A e. { B } <-> A = B ) $=
      ( cvv wcel csn wceq wb elsnc2g ax-mp ) BDEABFEABGHCABDIJ $.
      $( [12-Jun-1994] $)
  $}

  ${
    $d A x $.  $d ps x $.
    $( Substitution expressed in terms of quantification over a singleton. $)
    ralsns $p |- ( A e. V -> ( A. x e. { A } ph <-> [ A / x ] ph ) ) $=
      ( wcel wsbc cv wceq wal csn wral sbc6g df-ral imbi1i albii bitri syl6rbbr
      wi elsn ) CDEABCFBGZCHZARZBIZABCJZKZABCDLUETUDEZARZBIUCABUDMUGUBBUFUAABCS
      NOPQ $.
      $( [23-Apr-2015] $)

    $( Restricted existential quantification over a singleton. $)
    rexsns $p |- ( A e. V -> ( E. x e. { A } ph <-> [ A / x ] ph ) ) $=
      ( wcel wsbc cv wceq wex csn wrex sbc5g df-rex anbi1i exbii bitri syl6rbbr
      wa elsn ) CDEABCFBGZCHZARZBIZABCJZKZABCDLUETUDEZARZBIUCABUDMUGUBBUFUAABCS
      NOPQ $.
      $( [23-Apr-2015] $)

    ralsng.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Substitution expressed in terms of quantification over a singleton. $)
    ralsng $p |- ( A e. V -> ( A. x e. { A } ph <-> ps ) ) $=
      ( wcel csn wral wsbc ralsns sbcieg bitrd ) DEGACDHIACDJBACDEKABCDEFLM $.
      $( [23-Apr-2015] $) $( [14-Dec-2005] $)

    $( Restricted existential quantification over a singleton. $)
    rexsng $p |- ( A e. V -> ( E. x e. { A } ph <-> ps ) ) $=
      ( wcel csn wrex wsbc rexsns sbcieg bitrd ) DEGACDHIACDJBACDEKABCDEFLM $.
      $( [29-Jan-2012] $)
  $}

  ${
    $d A x $.  $d ps x $.
    ralsn.1 $e |- A e. _V $.
    ralsn.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Convert a quantification over a singleton to a substitution. $)
    ralsn $p |- ( A. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wral wb ralsng ax-mp ) DGHACDIJBKEABCDGFLM $.
      $( [27-Apr-2009] $)

    $( Restricted existential quantification over a singleton.  (Contributed by
       Jeff Madsen, 5-Jan-2011.) $)
    rexsn $p |- ( E. x e. { A } ph <-> ps ) $=
      ( cvv wcel csn wrex wb rexsng ax-mp ) DGHACDIJBKEABCDGFLM $.
      $( [5-Jan-2011] $)
  $}

  ${
    $( Members of an unordered triple of classes.  (Contributed by FL,
       2-Feb-2014.)  (The proof was shortened by Mario Carneiro,
       11-Feb-2015.) $)
    eltpg $p |- ( A e. V -> ( A e. { B , C , D } <->
       ( A = B \/ A = C \/ A = D ) ) ) $=
      ( wcel cpr csn wo wceq ctp w3o elprg elsncg orbi12d cun df-tp eleq2i elun
      bitri df-3or 3bitr4g ) AEFZABCGZFZADHZFZIZABJZACJZIZADJZIABCDKZFZUIUJULLU
      CUEUKUGULABCEMADENOUNAUDUFPZFUHUMUOABCDQRAUDUFSTUIUJULUAUB $.
      $( [11-Feb-2015] $) $( [2-Feb-2014] $)
  $}

  ${
    $( A member of an unordered triple of classes is one of them.  (Contributed
       by Mario Carneiro, 11-Feb-2015.) $)
    eltpi $p |- ( A e. { B , C , D } -> ( A = B \/ A = C \/ A = D ) ) $=
      ( ctp wcel wceq w3o eltpg ibi ) ABCDEZFABGACGADGHABCDKIJ $.
      $( [11-Feb-2015] $)
  $}

  ${
    eltp.1 $e |- A e. _V $.
    $( A member of an unordered triple of classes is one of them.  Special case
       of Exercise 1 of [TakeutiZaring] p. 17. $)
    eltp $p |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) $=
      ( cvv wcel ctp wceq w3o wb eltpg ax-mp ) AFGABCDHGABIACIADIJKEABCDFLM $.
      $( [11-Feb-2015] $) $( [8-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Alternate definition of unordered triple of classes.  Special case of
       Definition 5.3 of [TakeutiZaring] p. 16. $)
    dftp2 $p |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } $=
      ( cv wceq w3o ctp vex eltp abbi2i ) AEZBFLCFLDFGABCDHLBCDAIJK $.
      $( [8-Apr-1994] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbpr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hppr.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for unordered pairs. $)
    hbpr $p |- ( y e. { A , B } -> A. x y e. { A , B } ) $=
      ( cv cpr wcel wceq wo vex elpr hbeleq hbor hbxfrbi ) BGZCDHIQCJZQDJZKAQCD
      BLMRSAABCENABDFNOP $.
      $( [14-Nov-1995] $)
  $}

  $( Membership of a conditional operator in an unordered pair. $)
  ifpr $p |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) $=
    ( wcel cvv cif cpr elex wa ifcl wceq wo ifeqor elprg mpbiri syl syl2an ) BD
    FBGFZCGFZABCHZBCIFZCEFBDJCEJTUAKUBGFZUCABCGLUDUCUBBMUBCMNABCOUBBCGPQRS $.
    $( [17-Jun-2007] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x ps $.  $d x ch $.  $d x th $.
    ralprg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ralprg.2 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralprg $p |- ( ( A e. V /\ B e. W ) ->
      ( A. x e. { A , B } ph <-> ( ps /\ ch ) ) ) $=
      ( cpr wral csn wa wcel cun df-pr raleqi ralunb ralsng bi2anan9 syl5bb
      bitri ) ADEFKZLZADEMZLZADFMZLZNZEGOZFHOZNBCNUEADUFUHPZLUJADUDUMEFQRADUFUH
      SUCUKUGBULUICABDEGITACDFHJTUAUB $.
      $( [23-Apr-2015] $) $( [17-Sep-2011] $)

    $( Convert a quantification over a pair to a disjunction. $)
    rexprg $p |- ( ( A e. V /\ B e. W ) ->
      ( E. x e. { A , B } ph <-> ( ps \/ ch ) ) ) $=
      ( cpr wrex csn wo wcel wa cun df-pr rexeqi rexsng orbi1d orbi2d sylan9bb
      rexun bitri syl5bb ) ADEFKZLZADEMZLZADFMZLZNZEGOZFHOZPBCNZUHADUIUKQZLUMAD
      UGUQEFRSADUIUKUDUEUNUMBULNUOUPUNUJBULABDEGITUAUOULCBACDFHJTUBUCUF $.
      $( [23-Apr-2015] $) $( [17-Sep-2011] $)

    raltpg.3 $e |- ( x = C -> ( ph <-> th ) ) $.
    $( Convert a quantification over a triple to a conjunction. $)
    raltpg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
      ( A. x e. { A , B , C } ph <-> ( ps /\ ch /\ th ) ) ) $=
      ( wcel w3a cpr wral csn wa ctp wb ralprg ralsng bi2anan9 3impa cun raleqi
      df-tp ralunb bitri df-3an 3bitr4g ) FIOZGJOZHKOZPAEFGQZRZAEHSZRZTZBCTZDTZ
      AEFGHUAZRZBCDPUNUOUPVAVCUBUNUOTURVBUPUTDABCEFGIJLMUCADEHKNUDUEUFVEAEUQUSU
      GZRVAAEVDVFFGHUIUHAEUQUSUJUKBCDULUM $.
      $( [23-Apr-2015] $) $( [17-Sep-2011] $)

    $( Convert a quantification over a triple to a disjunction.  (Contributed
       by Mario Carneiro, 23-Apr-2015.) $)
    rextpg $p |- ( ( A e. V /\ B e. W /\ C e. X ) ->
      ( E. x e. { A , B , C } ph <-> ( ps \/ ch \/ th ) ) ) $=
      ( wcel w3a cpr wrex csn wo ctp wb wa rexprg orbi1d rexsng orbi2d sylan9bb
      w3o 3impa cun df-tp rexeqi rexun bitri df-3or 3bitr4g ) FIOZGJOZHKOZPAEFG
      QZRZAEHSZRZTZBCTZDTZAEFGHUAZRZBCDUIURUSUTVEVGUBURUSUCZVEVFVDTUTVGVJVBVFVD
      ABCEFGIJLMUDUEUTVDDVFADEHKNUFUGUHUJVIAEVAVCUKZRVEAEVHVKFGHULUMAEVAVCUNUOB
      CDUPUQ $.
      $( [23-Apr-2015] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.  $d x ch $.
    ralpr.1 $e |- A e. _V $.
    ralpr.2 $e |- B e. _V $.
    ralpr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    ralpr.4 $e |- ( x = B -> ( ph <-> ch ) ) $.
    $( Convert a quantification over a pair to a conjunction. $)
    ralpr $p |- ( A. x e. { A , B } ph <-> ( ps /\ ch ) ) $=
      ( cvv wcel cpr wral wa wb ralprg mp2an ) EKLFKLADEFMNBCOPGHABCDEFKKIJQR
      $.
      $( [23-Apr-2015] $) $( [3-Jun-2007] $)

    $( Convert an existential quantification over a pair to a disjunction. $)
    rexpr $p |- ( E. x e. { A , B } ph <-> ( ps \/ ch ) ) $=
      ( cvv wcel cpr wrex wo wb rexprg mp2an ) EKLFKLADEFMNBCOPGHABCDEFKKIJQR
      $.
      $( [23-Apr-2015] $) $( [3-Jun-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x ps $.  $d x ch $.  $d x th $.
    raltp.1 $e |- A e. _V $.
    raltp.2 $e |- B e. _V $.
    raltp.3 $e |- C e. _V $.
    raltp.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    raltp.5 $e |- ( x = B -> ( ph <-> ch ) ) $.
    raltp.6 $e |- ( x = C -> ( ph <-> th ) ) $.
    $( Convert a quantification over a triple to a conjunction. $)
    raltp $p |- ( A. x e. { A , B , C } ph <-> ( ps /\ ch /\ th ) ) $=
      ( cvv wcel ctp wral w3a wb raltpg mp3an ) FOPGOPHOPAEFGHQRBCDSTIJKABCDEFG
      HOOOLMNUAUB $.
      $( [23-Apr-2015] $) $( [13-Sep-2011] $)

    $( Convert a quantification over a triple to a disjunction. $)
    rextp $p |- ( E. x e. { A , B , C } ph <-> ( ps \/ ch \/ th ) ) $=
      ( cvv wcel ctp wrex w3o wb rextpg mp3an ) FOPGOPHOPAEFGHQRBCDSTIJKABCDEFG
      HOOOLMNUAUB $.
      $( [23-Apr-2015] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( MAY BE REVISED - make obsolete; use ralsns instead - also,
       shorten posn w/ ralsn or ralsng $)
    $( Substitution expressed in terms of quantification over a singleton.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    sbcsng $p |- ( A e. V -> ( [ A / x ] ph <-> A. x e. { A } ph ) ) $=
      ( wcel csn wral wsbc ralsns bicomd ) CDEABCFGABCHABCDIJ $.
      $( [23-Apr-2015] $) $( [14-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbsn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for singletons. $)
    hbsn $p |- ( y e. { A } -> A. x y e. { A } ) $=
      ( csn cpr dfsn2 hbpr hbxfreq ) ABCECCFCGABCCDDHI $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d A y $.  $d B y $.  $d V y $.  $d x y $.
    $( Distribute proper substitution through the singleton of a class.
       ~ csbsng is derived from the virtual deduction proof ~ csbsngVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbsng $p |- ( A e. V -> [_ A / x ]_ { B } = { [_ A / x ]_ B } ) $=
      ( vy wcel csn csb cv wceq wsbc df-sn csbeq2i csbabg sbceq2g abbidv 3eqtrd
      cab syl6eqr ) BDFZABCGZHZEIZABCHZJZERZUDGTUBABUCCJZERZHUGABKZERUFABUAUHDE
      CLMUGAEBDNTUIUEEABUCCDOPQEUDLS $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Intersection with the singleton of a non-member is disjoint.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.)  (The proof was shortened
       by Wolf Lammen, 30-Sep-2014.) $)
    disjsn $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx csn cin c0 wceq cv wcel wn wi wal wa disj1 con2b imbi1i imnan 3bitri
      elsn albii wex alnex df-clel xchbinxr ) ABDZEFGCHZAIZUFUEIZJKZCLUFBGZUGMZ
      JZCLZBAIZJCAUENUIULCUIUHUGJZKUJUOKULUGUHOUHUJUOCBSPUJUGQRTUMUKCUAUNUKCUBC
      BAUCUDR $.
      $( [30-Sep-2014] $) $( [22-May-1998] $)

    $( Obsolete proof of ~ disjsn as of 30-Sep-2014. $)
    disjsnOLD $p |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) $=
      ( vx cv wcel csn wn wi wal wceq wa wex cin con2b elsn imbi1i imnan 3bitri
      c0 albii alnex bitri disj1 df-clel notbii 3bitr4i ) CDZAEZUGBFZEZGHZCIZUG
      BJZUHKZCLZGZAUIMSJBAEZGULUNGZCIUPUKURCUKUJUHGZHUMUSHURUHUJNUJUMUSCBOPUMUH
      QRTUNCUAUBCAUIUCUQUOCBAUDUEUF $.
      $( [29-Jun-2011] $) $( [22-May-1998] $)
  $}

  $( Intersection of distinct singletons is disjoint. $)
  disjsn2 $p |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) $=
    ( wne csn wcel wn cin c0 wceq elsni eqcomd necon3ai disjsn sylibr ) ABCBADZ
    EZFOBDGHIPABPBABAJKLOBMN $.
    $( [2-Jun-2007] $) $( [25-May-1998] $)

  ${
    $d x A $.
    $( The singleton of a proper class (one that doesn't exist) is the empty
       set.  Theorem 7.2 of [Quine] p. 48. $)
    snprc $p |- ( -. A e. _V <-> { A } = (/) ) $=
      ( vx csn c0 wceq cvv wcel cv wex wn elsn exbii neq0 isset 3bitr4i con1bii
      ) ACZDEZAFGZBHZQGZBITAEZBIRJSUAUBBBAKLBQMBANOP $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x B $.
    r19.12sn.1 $e |- A e. _V $.
    $( Special case of ~ r19.12 where its converse holds. $)
    r19.12sn $p |- ( E. x e. { A } A. y e. B ph
                <-> A. y e. B E. x e. { A } ph ) $=
      ( cvv wcel wral csn wrex wb wsbc sbcralg rexsns ralbidv 3bitr4d ax-mp ) D
      GHZACEIZBDJZKZABUAKZCEIZLFSTBDMABDMZCEIUBUDABCDEGNTBDGOSUCUECEABDGOPQR $.
      $( [23-Apr-2015] $) $( [19-May-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Condition where a restricted class abstraction is a singleton. $)
    rabsn $p |- ( B e. A -> { x e. A | x = B } = { B } ) $=
      ( wcel cv wceq wa cab crab csn eleq1 pm5.32ri abbidv df-rab df-sn 3eqtr4g
      baib ) CBDZAEZBDZSCFZGZAHUAAHUAABICJRUBUAAUBRUAUATRSCBKLQMUAABNACOP $.
      $( [28-May-2006] $)
  $}

  ${
    $d x y z $.  $d y ph $.
    $( Another way to express existential uniqueness of a wff: its class
       abstraction is a singleton. $)
    euabsn $p |- ( E! x ph <-> E. x { x | ph } = { x } ) $=
      ( vy vz cab cv csn wceq wex wb wal weu wcel abeq1 elsn bibi2i albii bitri
      exbii ax-17 hbab1 hbeq sneq eqeq2d cbvex df-eu 3bitr4ri ) ABEZCFZGZHZCIAB
      FZUIHZJZBKZCIUHULGZHZBIABLUKUOCUKAULUJMZJZBKUOABUJNUSUNBURUMABUIOPQRSUQUK
      BCUQCTBCDUHUJABCUADFUJMBTUBUMUPUJUHULUIUCUDUEABCUFUG $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( Two ways to express " ` A ` is a singleton." $)
    eusn $p |- ( E! x x e. A <-> E. x A = { x } ) $=
      ( cv wcel weu cab csn wceq wex euabsn abid2 eqeq1i exbii bitri ) ACZBDZAE
      PAFZOGZHZAIBRHZAIPAJSTAQBRABKLMN $.
      $( [30-Oct-2010] $)
  $}

  $( Commutative law for unordered pairs. $)
  prcom $p |- { A , B } = { B , A } $=
    ( csn cun cpr uncom df-pr 3eqtr4i ) ACZBCZDJIDABEBAEIJFABGBAGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq1 $p |- ( A = B -> { A , C } = { B , C } ) $=
    ( wceq csn cun cpr sneq uneq1d df-pr 3eqtr4g ) ABDZAEZCEZFBEZNFACGBCGLMONAB
    HIACJBCJK $.
    $( [29-Mar-1998] $)

  $( Equality theorem for unordered pairs. $)
  preq2 $p |- ( A = B -> { C , A } = { C , B } ) $=
    ( wceq cpr preq1 prcom 3eqtr4g ) ABDACEBCECAECBEABCFCAGCBGH $.
    $( [5-Aug-1993] $)

  $( Equality theorem for unordered pairs. $)
  preq12 $p |- ( ( A = C /\ B = D ) -> { A , B } = { C , D } ) $=
    ( wceq cpr preq1 preq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [19-Oct-2012] $)

  ${
    preq1i.1 $e |- A = B $.
    $( Equality inference for unordered pairs. $)
    preq1i $p |- { A , C } = { B , C } $=
      ( wceq cpr preq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [19-Oct-2012] $)

    $( Equality inference for unordered pairs. $)
    preq2i $p |- { C , A } = { C , B } $=
      ( wceq cpr preq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [19-Oct-2012] $)

    ${
      preq12i.2 $e |- C = D $.
      $( Equality inference for unordered pairs. $)
      preq12i $p |- { A , C } = { B , D } $=
        ( wceq cpr preq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [19-Oct-2012] $)
    $}
  $}

  ${
    preq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for unordered pairs. $)
    preq1d $p |- ( ph -> { A , C } = { B , C } ) $=
      ( wceq cpr preq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [19-Oct-2012] $)

    $( Equality deduction for unordered pairs. $)
    preq2d $p |- ( ph -> { C , A } = { C , B } ) $=
      ( wceq cpr preq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [19-Oct-2012] $)

    preq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for unordered pairs. $)
    preq12d $p |- ( ph -> { A , C } = { B , D } ) $=
      ( wceq cpr preq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
      $( [19-Oct-2012] $)
  $}

  $( Equality theorem for unordered triples. $)
  tpeq1 $p |- ( A = B -> { A , C , D } = { B , C , D } ) $=
    ( wceq cpr csn cun ctp preq1 uneq1d df-tp 3eqtr4g ) ABEZACFZDGZHBCFZPHACDIB
    CDINOQPABCJKACDLBCDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq2 $p |- ( A = B -> { C , A , D } = { C , B , D } ) $=
    ( wceq cpr csn cun ctp preq2 uneq1d df-tp 3eqtr4g ) ABEZCAFZDGZHCBFZPHCADIC
    BDINOQPABCJKCADLCBDLM $.
    $( [13-Sep-2011] $)

  $( Equality theorem for unordered triples. $)
  tpeq3 $p |- ( A = B -> { C , D , A } = { C , D , B } ) $=
    ( wceq cpr csn cun ctp sneq uneq2d df-tp 3eqtr4g ) ABEZCDFZAGZHOBGZHCDAICDB
    INPQOABJKCDALCDBLM $.
    $( [13-Sep-2011] $)

  ${
    tpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for unordered triples. $)
    tpeq1d $p |- ( ph -> { A , C , D } = { B , C , D } ) $=
      ( wceq ctp tpeq1 syl ) ABCGBDEHCDEHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    $( Equality theorem for unordered triples. $)
    tpeq2d $p |- ( ph -> { C , A , D } = { C , B , D } ) $=
      ( wceq ctp tpeq2 syl ) ABCGDBEHDCEHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    $( Equality theorem for unordered triples. $)
    tpeq3d $p |- ( ph -> { C , D , A } = { C , D , B } ) $=
      ( wceq ctp tpeq3 syl ) ABCGDEBHDECHGFBCDEIJ $.
      $( [22-Jun-2014] $)

    tpeq123d.2 $e |- ( ph -> C = D ) $.
    tpeq123d.3 $e |- ( ph -> E = F ) $.
    $( Equality theorem for unordered triples. $)
    tpeq123d $p |- ( ph -> { A , C , E } = { B , D , F } ) $=
      ( ctp tpeq1d tpeq2d tpeq3d 3eqtrd ) ABDFKCDFKCEFKCEGKABCDFHLADECFIMAFGCEJ
      NO $.
      $( [22-Jun-2014] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Rotation of the elements of an unordered triple.  (Contributed by Alan
       Sare, 24-Oct-2011.) $)
    tprot $p |- { A , B , C } = { B , C , A } $=
      ( vx cv wceq w3o cab ctp 3orrot abbii dftp2 3eqtr4i ) DEZAFZNBFZNCFZGZDHP
      QOGZDHABCIBCAIRSDOPQJKDABCLDBCALM $.
      $( [24-Oct-2011] $)
  $}

  $( Swap 1st and 2nd members of an undordered triple. $)
  tpcoma $p |- { A , B , C } = { B , A , C } $=
    ( cpr csn cun ctp prcom uneq1i df-tp 3eqtr4i ) ABDZCEZFBADZMFABCGBACGLNMABH
    IABCJBACJK $.
    $( [22-May-2015] $)

  $( Swap 2nd and 3rdd members of an undordered triple. $)
  tpcomb $p |- { A , B , C } = { A , C , B } $=
    ( ctp tpcoma tprot 3eqtr4i ) BCADCBADABCDACBDBCAEABCFACBFG $.
    $( [22-May-2015] $)

  $( Unordered triple ` { A , A , B } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm12 $p |- { A , A , B } = { A , B } $=
    ( ctp csn cun cpr df-tp dfsn2 uneq1i eqtr4i df-pr ) AABCZADZBDZEZABFLAAFZNE
    OAABGMPNAHIJABKJ $.
    $( [4-Jun-2015] $)

  $( Unordered triple ` { A , B , A } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm13 $p |- { A , B , A } = { A , B } $=
    ( ctp cpr tprot tpidm12 eqtr3i ) AABCABACABDAABEABFG $.
    $( [4-Jun-2015] $)

  $( Unordered triple ` { A , B , B } ` is just an overlong way to write
     ` { A , B } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm23 $p |- { A , B , B } = { A , B } $=
    ( ctp cpr tprot tpidm12 prcom 3eqtri ) ABBCBBACBADABDABBEBAFBAGH $.
    $( [10-May-2015] $)

  $( Unordered triple ` { A , A , A } ` is just an overlong way to write
     ` { A } ` .  (Contributed by David A. Wheeler, 10-May-2015.) $)
  tpidm $p |- { A , A , A } = { A } $=
    ( ctp cpr csn tpidm12 dfsn2 eqtr4i ) AAABAACADAAEAFG $.
    $( [10-May-2015] $)

  $( An unordered pair contains its first member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid1g $p |- ( A e. V -> A e. { A , B } ) $=
    ( wcel cpr wceq wo eqid orci elprg mpbiri ) ACDAABEDAAFZABFZGLMAHIAABCJK $.
    $( [7-Nov-2008] $)

  $( An unordered pair contains its second member.  Part of Theorem 7.6 of
     [Quine] p. 49.  (Contributed by Stefan Allan, 8-Nov-2008.) $)
  prid2g $p |- ( B e. V -> B e. { A , B } ) $=
    ( wcel cpr prid1g prcom syl6eleq ) BCDBBAEABEBACFBAGH $.
    $( [7-Nov-2008] $)

  ${
    prid1.1 $e |- A e. _V $.
    $( An unordered pair contains its first member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid1 $p |- A e. { A , B } $=
      ( cvv wcel cpr prid1g ax-mp ) ADEAABFECABDGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    prid2.1 $e |- B e. _V $.
    $( An unordered pair contains its second member.  Part of Theorem 7.6 of
       [Quine] p. 49. $)
    prid2 $p |- B e. { A , B } $=
      ( cpr prid1 prcom eleqtri ) BBADABDBACEBAFG $.
      $( [5-Aug-1993] $)
  $}

  $( A proper class vanishes in an unordered pair. $)
  prprc1 $p |- ( -. A e. _V -> { A , B } = { B } ) $=
    ( cvv wcel wn csn c0 wceq cpr snprc cun uneq1 df-pr uncom un0 3eqtr4g sylbi
    eqtr2i ) ACDEAFZGHZABIZBFZHAJTSUBKGUBKZUAUBSGUBLABMUCUBGKUBGUBNUBORPQ $.
    $( [5-Aug-1993] $)

  $( A proper class vanishes in an unordered pair. $)
  prprc2 $p |- ( -. B e. _V -> { A , B } = { A } ) $=
    ( cvv wcel wn cpr csn prcom prprc1 syl5eq ) BCDEABFBAFAGABHBAIJ $.
    $( [22-Mar-2006] $)

  $( An unordered pair containing two proper classes is the empty set. $)
  prprc $p |- ( ( -. A e. _V /\ -. B e. _V ) -> { A , B } = (/) ) $=
    ( cvv wcel wn cpr csn c0 prprc1 wceq snprc biimpi sylan9eq ) ACDEBCDEZABFBG
    ZHABINOHJBKLM $.
    $( [22-Mar-2006] $)

  ${
    tpid1.1 $e |- A e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid1 $p |- A e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix1 ax-mp eltp mpbir ) AABCEFAAGZABGZACGZHZNQA
      INOPJKAABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    tpid2.1 $e |- B e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid2 $p |- B e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix2 ax-mp eltp mpbir ) BABCEFBAGZBBGZBCGZHZOQB
      IONPJKBABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.  $d x ps $.
    $( Closed theorem form of ~ tpid3 .  This proof was automatically generated
       from the virtual deduction proof ~ tpid3gVD using a translation
       program.  (Contributed by Alan Sare, 24-Oct-2011.) $)
    tpid3g $p |- ( A e. B -> A e. { C , D , A } ) $=
      ( vx wcel cv wceq wex ctp elisset w3o cab wi 3mix3 a1i abid syl6ibr dftp2
      eleq2i eleq1 mpbidi exlimdv mpd ) ABFZEGZAHZEIACDAJZFZEABKUEUGUIEUGUFUHFZ
      UIUEUEUGUFUFCHZUFDHZUGLZEMZFZUJUEUGUMUOUGUMNUEUGUKULOPUMEQRUHUNUFECDASTRU
      FAUHUAUBUCUD $.
      $( [24-Oct-2011] $)
  $}

  ${
    tpid3.1 $e |- C e. _V $.
    $( One of the three elements of an unordered triple.  (The proof was
       shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpid3 $p |- C e. { A , B , C } $=
      ( ctp wcel wceq w3o eqid 3mix3 ax-mp eltp mpbir ) CABCEFCAGZCBGZCCGZHZPQC
      IPNOJKCABCDLM $.
      $( [29-Jun-2011] $) $( [7-Apr-1994] $)
  $}

  $( The singleton of a set is not empty. $)
  snnzg $p |- ( A e. V -> { A } =/= (/) ) $=
    ( wcel csn c0 wne snidg ne0i syl ) ABCAADZCJEFABGJAHI $.
    $( [14-Dec-2008] $)

  ${
    snnz.1 $e |- A e. _V $.
    $( The singleton of a set is not empty. $)
    snnz $p |- { A } =/= (/) $=
      ( cvv wcel csn c0 wne snnzg ax-mp ) ACDAEFGBACHI $.
      $( [2-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    prnz.1 $e |- A e. _V $.
    $( A pair containing a set is not empty. $)
    prnz $p |- { A , B } =/= (/) $=
      ( cpr wcel c0 wne prid1 ne0i ax-mp ) AABDZEKFGABCHKAIJ $.
      $( [17-Jan-2007] $) $( [9-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A pair containing a set is not empty.  (Contributed by FL,
       19-Sep-2011.) $)
    prnzg $p |- ( A e. V -> { A , B } =/= (/) ) $=
      ( vx cv cpr c0 wne wceq preq1 neeq1d vex prnz vtoclg ) DEZBFZGHABFZGHDACO
      AIPQGOABJKOBDLMN $.
      $( [19-Sep-2011] $)
  $}

  ${
    tpnz.1 $e |- A e. _V $.
    $( A triplet containing a set is not empty. $)
    tpnz $p |- { A , B , C } =/= (/) $=
      ( ctp wcel c0 wne tpid1 ne0i ax-mp ) AABCEZFLGHABCDILAJK $.
      $( [13-Apr-2007] $) $( [10-Apr-1994] $)
  $}

  ${
    $d A x $.  $d B x $.
    snss.1 $e |- A e. _V $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snss $p |- ( A e. B <-> { A } C_ B ) $=
      ( vx cv csn wcel wi wal wceq wss elsn imbi1i albii dfss2 clel2 3bitr4ri )
      DEZAFZGZRBGZHZDIRAJZUAHZDISBKABGUBUDDTUCUADALMNDSBODABCPQ $.
      $( [5-Aug-1993] $)
  $}

  $( Membership in a set with an element removed. $)
  eldifsn $p |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) $=
    ( csn cdif wcel wn wa wne eldif elsncg necon3bbid pm5.32i bitri ) ABCDZEFAB
    FZAOFZGZHPACIZHABOJPRSPQACACBKLMN $.
    $( [10-Oct-2007] $)

  $( Membership in a set with an element removed. $)
  eldifsni $p |- ( A e. ( B \ { C } ) -> A =/= C ) $=
    ( csn cdif wcel wne eldifsn simprbi ) ABCDEFABFACGABCHI $.
    $( [10-Mar-2015] $)

  $( Restricted existential quantification over a set with an element
     removed. $)
  rexdifsn $p |- ( E. x e. ( A \ { B } ) ph <-> E. x e. A ( x =/= B /\ ph ) )
      $=
    ( cv wne wa csn cdif wcel eldifsn anbi1i anass bitri rexbii2 ) ABEZDFZAGZBC
    DHIZCPSJZAGPCJZQGZAGUARGTUBAPCDKLUAQAMNO $.
    $( [4-Feb-2015] $)

  ${
    $d A x $.  $d B x $.
    $( The singleton of an element of a class is a subset of the class.
       Theorem 7.4 of [Quine] p. 49. $)
    snssg $p |- ( A e. V -> ( A e. B <-> { A } C_ B ) ) $=
      ( vx cv wcel csn wss eleq1 wceq sneq sseq1d vex snss vtoclbg ) DEZBFPGZBH
      ABFAGZBHDACPABIPAJQRBPAKLPBDMNO $.
      $( [22-Jul-2001] $)

    $( An element not in a set can be removed without affecting the set.  (The
       proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    difsn $p |- ( -. A e. B -> ( B \ { A } ) = B ) $=
      ( vx wcel wn csn cdif cv wne wa eldifsn simpl wceq eleq1 biimpcd necon3bd
      com12 ancld impbid2 syl5bb eqrdv ) ABDZEZCBAFGZBCHZUDDUEBDZUEAIZJZUCUFUEB
      AKUCUHUFUFUGLUCUFUGUFUCUGUFUBUEAUEAMUFUBUEABNOPQRSTUA $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)

    $( Removal of a singleton from an unordered pair.  (The proof was shortened
       by Andrew Salmon, 29-Jun-2011.) $)
    difprsn $p |- ( { A , B } \ { A } ) C_ { B } $=
      ( vx cpr csn cdif cv wcel wn wa wceq wo elpr elsn notbii biimparc syl2anb
      vex biorf eldif 3imtr4i ssriv ) CABDZAEZFZBEZCGZUCHZUGUDHZIZJUGBKZUGUEHUG
      UFHUHUGAKZUKLZULIZUKUJUGABCRMUIULCANOUNUKUMULUKSPQUGUCUDTCBNUAUB $.
      $( [29-Jun-2011] $) $( [16-Mar-2006] $)
  $}

  $( The singleton of an element of a class is a subset of the class. $)
  snssi $p |- ( A e. B -> { A } C_ B ) $=
    ( wcel csn wss snssg ibi ) ABCADBEABBFG $.
    $( [6-Jun-1994] $)

  ${
    snssd.1 $e |- ( ph -> A e. B ) $.
    $( The singleton of an element of a class is a subset of the class
       (deduction rule).  (Contributed by Jonathan Ben-Naim 3-Jun-2011). $)
    snssd $p |- ( ph -> { A } C_ B ) $=
      ( wcel csn wss wb snssg syl mpbid ) ABCEZBFCGZDALLMHDBCCIJK $.
      $( [3-Jun-2011] $)
  $}

  $( If we remove a single element from a class then put it back in, we end up
     with the original class. $)
  difsnid $p |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) $=
    ( wcel csn cdif cun uncom wss wceq snssi undif sylib syl5eq ) BACZABDZEZOFO
    PFZAPOGNOAHQAIBAJOAKLM $.
    $( [2-Oct-2006] $)

  $( Note that ` x ` is a dummy variable in the proof below. $)
  $( Compute the power set of the empty set.  Theorem 89 of [Suppes] p. 47.
     (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
  pw0 $p |- ~P (/) = { (/) } $=
    ( vx cv c0 wss cab wceq cpw csn ss0b abbii df-pw df-sn 3eqtr4i ) ABZCDZAENC
    FZAECGCHOPANIJACKACLM $.
    $( [29-Jun-2011] $) $( [5-Aug-1993] $)

  ${
    $d x y $.
    $( Compute the power set of the power set of the empty set.  (See ~ pw0 for
       the power set of the empty set.)  Theorem 90 of [Suppes] p. 48.
       Although this theorem is a special case of ~ pwsn , we have chosen to
       show a direct elementary proof. $)
    pwpw0 $p |- ~P { (/) } = { (/) , { (/) } } $=
      ( vx vy cv c0 csn wss cab wceq wo cpw cpr wn wa wcel wal dfss2 elsn sylbi
      wi wex imbi2i albii bitri neq0 exintr syl5bi exancom df-clel bitr4i snssi
      syl6 anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi impbii abbii df-pw
      0ss dfpr2 3eqtr4i ) ACZDEZFZAGVFDHZVFVGHZIZAGVGJDVGKVHVKAVHVKVHVIVJVHVILZ
      VHVGVFFZMVJVHVLVMVHBCZVFNZVNDHZSZBOZVLVMSVHVOVNVGNZSZBOVRBVFVGPVTVQBVSVPV
      OBDQUAUBUCVRVLVOVPMBTZVMVLVOBTVRWABVFUDVOVPBUEUFWADVFNZVMWAVPVOMBTWBVOVPB
      UGBDVFUHUIDVFUJRUKRULVFVGUMUNUOVIVHVJVIVHDVGFVGVCVFDVGUPUQVFVGURUSUTVAAVG
      VBADVGVDVE $.
      $( [28-Sep-2006] $) $( [7-Aug-1994] $)
  $}

  $( A singleton is a subset of an unordered pair containing its member. $)
  snsspr1 $p |- { A } C_ { A , B } $=
    ( csn cun cpr ssun1 df-pr sseqtr4i ) ACZIBCZDABEIJFABGH $.
    $( [27-Aug-2004] $)

  $( A singleton is a subset of an unordered pair containing its member. $)
  snsspr2 $p |- { B } C_ { A , B } $=
    ( csn cun cpr ssun2 df-pr sseqtr4i ) BCZACZIDABEIJFABGH $.
    $( [2-May-2009] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp1 $p |- { A } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr1 ssun1 sstri df-tp sseqtr4i ) ADZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.
    $( [9-Oct-2013] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp2 $p |- { B } C_ { A , B , C } $=
    ( csn cpr cun ctp snsspr2 ssun1 sstri df-tp sseqtr4i ) BDZABEZCDZFZABCGMNPA
    BHNOIJABCKL $.
    $( [9-Oct-2013] $)

  $( A singleton is a subset of an unordered triple containing its member. $)
  snsstp3 $p |- { C } C_ { A , B , C } $=
    ( csn cpr cun ctp ssun2 df-tp sseqtr4i ) CDZABEZKFABCGKLHABCIJ $.
    $( [9-Oct-2013] $)

  ${
    $d A x $.  $d B x $.  $d C x $.
    prss.1 $e |- A e. _V $.
    prss.2 $e |- B e. _V $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prss $p |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) $=
      ( csn wss wa cun wcel cpr unss snss anbi12i df-pr sseq1i 3bitr4i ) AFZCGZ
      BFZCGZHRTIZCGACJZBCJZHABKZCGRTCLUCSUDUAACDMBCEMNUEUBCABOPQ $.
      $( [29-Jun-2011] $) $( [30-May-1994] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( A pair of elements of a class is a subset of the class.  Theorem 7.5 of
       [Quine] p. 49.  (The proof was shortened by Andrew Salmon,
       29-Jun-2011.) $)
    prssg $p |- ( ( A e. V /\ B e. W ) ->
                ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) $=
      ( wcel wa csn wss cpr snssg bi2anan9 cun unss df-pr sseq1i bitr4i syl6bb
      ) ADFZBEFZGACFZBCFZGAHZCIZBHZCIZGZABJZCIZSUAUDTUBUFACDKBCEKLUGUCUEMZCIUIU
      CUECNUHUJCABOPQR $.
      $( [29-Jun-2011] $) $( [22-Mar-2006] $)
  $}

  $( A pair of elements of a class is a subset of the class. $)
  prssi $p |- ( ( A e. C /\ B e. C ) -> { A , B } C_ C ) $=
    ( wcel wa cpr wss prssg ibi ) ACDBCDEABFCGABCCCHI $.
    $( [16-Jan-2015] $)

  ${
    $d x A $.  $d x B $.
    $( The subsets of a singleton. $)
    sssn $p |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) $=
      ( vx csn wss c0 wceq wo wn wa wcel cv wex neq0 ssel elsni syl6 eleq1 ibd
      wb exlimdv syl5bi snssi anc2li eqss syl6ibr orrd sseq1 mpbiri eqimss jaoi
      0ss impbii ) ABDZEZAFGZAUNGZHUOUPUQUOUPIZUOUNAEZJUQUOURUSUOURBAKZUSURCLZA
      KZCMUOUTCANUOVBUTCUOVBUTUOVBVABGZVBUTTUOVBVAUNKVCAUNVAOVABPQVABARQSUAUBBA
      UCQUDAUNUEUFUGUPUOUQUPUOFUNEUNULAFUNUHUIAUNUJUKUM $.
      $( [24-Apr-2004] $)

    $( Two ways to express that a nonempty set equals a singleton. $)
    eqsn $p |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) $=
      ( c0 wne csn wceq wss cv wral eqimss wn df-ne wo sssn biimpi syl5bi com12
      ord impbid2 wcel dfss3 elsn ralbii bitri syl6bb ) BDEZBCFZGZBUHHZAIZCGZAB
      JZUGUIUJBUHKUJUGUIUGBDGZLUJUIBDMUJUNUIUJUNUINBCOPSQRTUJUKUHUAZABJUMABUHUB
      UOULABACUCUDUEUF $.
      $( [15-Dec-2007] $)
  $}

  ${
    $( The subsets of a pair. $)
    sspr $p |- ( A C_ { B , C } <->
     ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) $=
      ( cpr wss c0 wceq csn wo wn wa wcel cdif difsn adantl adantr sseq1 mpbiri
      ex jaoi simpll pm2.45 anim1i ioran sylibr ssdif difprsn syl6ss sssn con1d
      eqsstr3d syl6ib imp sylan2 anassrs prcom sseq2i sylbi prssi syl2anc eqssd
      orrd 0ss snsspr1 snsspr2 eqimss impbii ) ABCDZEZAFGZABHZGZIZACHZGZAVHGZIZ
      IVIVMVQVIVMJZVQVIVRKZVOVPVSVOJZVPVSVTKZAVHVIVRVTUAWABALZCALZVHAEVIVRVTWBV
      RVTKZVIVJVOIZJZWBWDVJJZVTKWFVRWGVTVJVLUBUCVJVOUDUEVIWFWBVIWBWEVIWBJZAVNEZ
      WEVIWHWIVIWHKAAVKMZVNWHWJAGVIBANOVIWJVNEWHVIWJVHVKMVNAVHVKUFBCUGUHPUKSACU
      IULUJUMUNUOVSWCVTVIVRWCVIWCVMVIWCJZAVKEZVMVIWKWLVIWKKZAAVNMZVKWKWNAGVICAN
      OWMWNCBDZVNMZVKVIWNWPEZWKVIAWOEWQVHWOABCUPUQAWOVNUFURPCBUGUHUKSABUIULUJUM
      PBCAUSUTVASVBSVBVMVIVQVJVIVLVJVIFVHEVHVCAFVHQRVLVIVKVHEBCVDAVKVHQRTVOVIVP
      VOVIVNVHEBCVEAVNVHQRAVHVFTTVG $.
      $( [16-Mar-2006] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d D x $.
    tpss.1 $e |- A e. _V $.
    tpss.2 $e |- B e. _V $.
    tpss.3 $e |- C e. _V $.
    $( A triplet of elements of a class is a subset of the class.  (The proof
       was shortened by Andrew Salmon, 29-Jun-2011.) $)
    tpss $p |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) $=
      ( cpr wss csn wa cun wcel w3a ctp unss df-3an prss snss anbi12i 3bitr4i
      bitri df-tp sseq1i ) ABHZDIZCJZDIZKZUEUGLZDIADMZBDMZCDMZNZABCOZDIUEUGDPUN
      UKULKZUMKUIUKULUMQUPUFUMUHABDEFRCDGSTUBUOUJDABCUCUDUA $.
      $( [29-Jun-2011] $) $( [9-Apr-1994] $)
  $}

  ${
    sneqr.1 $e |- A e. _V $.
    $( If the singletons of two sets are equal, the two sets are equal.  Part
       of Exercise 4 of [TakeutiZaring] p. 15. $)
    sneqr $p |- ( { A } = { B } -> A = B ) $=
      ( csn wceq wcel snid eleq2 mpbii elsnc sylib ) ADZBDZEZAMFZABENALFOACGLMA
      HIABCJK $.
      $( [27-Aug-1993] $)

    $( If a singleton is a subset of another, their members are equal. $)
    snsssn $p |- ( { A } C_ { B } -> A = B ) $=
      ( csn wss c0 wceq wo sssn wne wn snnz df-ne mpbi pm2.21i sneqr jaoi sylbi
      ) ADZBDZESFGZSTGZHABGZSBIUAUCUBUAUCSFJUAKACLSFMNOABCPQR $.
      $( [28-May-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Closed form of ~ sneqr .  (Contributed by Scott Fenton, 1-Apr-2011.) $)
    sneqrg $p |- ( A e. V -> ( { A } = { B } -> A = B ) ) $=
      ( vx cv csn wceq wi sneq eqeq1d eqeq1 imbi12d vex sneqr vtoclg ) DEZFZBFZ
      GZPBGZHAFZRGZABGZHDACPAGZSUBTUCUDQUARPAIJPABKLPBDMNO $.
      $( [1-Apr-2011] $)

  $}

  $( Two singletons of sets are equal iff their elements are equal.
     (Contributed by Scott Fenton, 16-Apr-2012.) $)
  sneqbg $p |- ( A e. V -> ( { A } = { B } <-> A = B ) ) $=
    ( wcel csn wceq sneqrg sneq impbid1 ) ACDAEBEFABFABCGABHI $.
    $( [16-Apr-2012] $)

  ${
    $d x A $.
    $( The singleton of a class is a subset of its power class. $)
    snsspw $p |- { A } C_ ~P A $=
      ( vx csn cpw cv wceq wss wcel eqimss elsn df-pw abeq2i 3imtr4i ssriv ) BA
      CZADZBEZAFQAGZQOHQPHQAIBAJRBPBAKLMN $.
      $( [5-Aug-1993] $)
  $}


  ${
    $d x A $.  $d x B $.  $d x C $.
    prsspw.1 $e |- A e. _V $.
    prsspw.2 $e |- B e. _V $.
    $( An unordered pair belongs to the power class of a class iff each member
       belongs to the class.  (The proof was shortened by Andrew Salmon,
       26-Jun-2011.) $)
    prsspw $p |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) $=
      ( cpr cpw wss wcel wa prss elpw anbi12i bitr3i ) ABFCGZHAOIZBOIZJACHZBCHZ
      JABODEKPRQSACDLBCELMN $.
      $( [29-Jun-2011] $) $( [10-Dec-2003] $)
  $}

  ${
    preqr1.1 $e |- A e. _V $.
    preqr1.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same second element, the first elements are equal. $)
    preqr1 $p |- ( { A , C } = { B , C } -> A = B ) $=
      ( cpr wceq wcel wo prid1 eleq2 mpbii elpr sylib mpbiri eqcom eqeq2 oplem1
      ) ACFZBCFZGZABGZACGZBAGZBCGZUAATHZUBUCIUAASHUFACDJSTAKLABCDMNUABSHZUDUEIU
      AUGBTHBCEJSTBKOBACEMNABPACBQR $.
      $( [18-Oct-1995] $)
  $}

  ${
    preqr2.1 $e |- A e. _V $.
    preqr2.2 $e |- B e. _V $.
    $( Reverse equality lemma for unordered pairs.  If two unordered pairs have
       the same first element, the second elements are equal. $)
    preqr2 $p |- ( { C , A } = { C , B } -> A = B ) $=
      ( cpr wceq prcom eqeq12i preqr1 sylbi ) CAFZCBFZGACFZBCFZGABGLNMOCAHCBHIA
      BCDEJK $.
      $( [5-Aug-1993] $)
  $}

  ${
    preq12b.1 $e |- A e. _V $.
    preq12b.2 $e |- B e. _V $.
    preq12b.3 $e |- C e. _V $.
    preq12b.4 $e |- D e. _V $.
    $( Equality relationship for two unordered pairs. $)
    preq12b $p |- ( { A , B } = { C , D } <->
                   ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) $=
      ( cpr wceq wa wo wcel preq1 eqeq1d preqr2 syl6bi com12 ancld prcom eqeq2i
      prid1 eleq2 mpbii elpr sylib wi sylbi orim12d preq12 syl6eq sylan9eq jaoi
      mpd impbii ) ABIZCDIZJZACJZBDJZKZADJZBCJZKZLZURUSVBLZVEURAUQMZVFURAUPMVGA
      BEUBUPUQAUCUDACDEUEUFURUSVAVBVDURUSUTUSURUTUSURCBIZUQJUTUSUPVHUQACBNOBDCF
      HPQRSURVBVCURUPDCIZJZVBVCUGUQVIUPCDTUAVBVJVCVBVJDBIZVIJVCVBUPVKVIADBNZOBC
      DFGPQRUHSUIUNVAURVDABCDUJVBVCUPBDIZUQVBUPVKVMVLDBTUKBCDNULUMUO $.
      $( [17-Oct-1996] $)

    $( Equality of two unordered pairs. $)
    prel12 $p |- ( -. A = B -> ( { A , B } = { C , D } <->
                   ( A e. { C , D } /\ B e. { C , D } ) ) ) $=
      ( wceq wn cpr wcel wa eleq2 mpbii wo wi elpr eqeq2 notbid prid1 prid2 jca
      orel2 syl6bi com3l imp ancrd orel1 orim12d orcom bitri preq12b 3imtr4g ex
      syl5bi imp3a impbid2 ) ABIZJZABKZCDKZIZAVBLZBVBLZMVCVDVEVCAVALVDABEUAVAVB
      ANOVCBVALVEABFUBVAVBBNOUCUTVDVEVCVDACIZADIZPZUTVEVCQZACDERUTVHVIUTVHMZBDI
      ZBCIZPZVFVKMZVGVLMZPVEVCVJVKVNVLVOVJVKVFUTVHVKVFQVKUTVHVFVKUTVGJVHVFQVKUS
      VGBDASTVGVFUDUEUFUGUHVJVLVGUTVHVLVGQVLUTVHVGVLUTVFJVHVGQVLUSVFBCASTVFVGUI
      UEUFUGUHUJVEVLVKPVMBCDFRVLVKUKULABCDEFGHUMUNUOUPUQUR $.
      $( [17-Oct-1996] $)

    $( A way to represent ordered pairs using unordered pairs with distinct
       members. $)
    opthpr $p |- ( A =/= D ->
                 ( { A , B } = { C , D } <-> ( A = C /\ B = D ) ) ) $=
      ( cpr wceq wa wo wne preq12b idd wn wi df-ne pm2.21 sylbi jaod orc syl5bb
      imp3a impbid1 ) ABICDIJACJBDJKZADJZBCJZKZLZADMZUFABCDEFGHNUKUJUFUKUFUFUIU
      KUFOUKUGUHUFUKUGPUGUHUFQZQADRUGULSTUDUAUFUIUBUEUC $.
      $( [27-Mar-2007] $)
  $}

  ${
    $d A x y z w $.  $d B x y z w $.  $d C x y z w $.  $d D x y z w $.
    $d V x y z w $.  $d W x y z w $.  $d X x y z w $.  $d Y x y z w $.
    $( Closed form of ~ preq12b .  (Contributed by Scott Fenton,
       28-Mar-2014.) $)
    preq12bg $p |- ( ( ( A e. V /\ B e. W ) /\ ( C e. X /\ D e. Y ) ) ->
       ( { A , B } = { C , D } <->
         ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ) $=
      ( vx vy vz vw wcel wa cpr wceq wo wb wi cv weq preq1 eqeq1d eqeq1 orbi12d
      anbi1d bibi12d imbi2d preq2 anbi2d eqeq2 w3a vex preq12b vtoclbg vtocl3ga
      eqeq2d a1i 3expa impr ) AEMZBFMZNCGMZDHMZABOZCDOZPZACPZBDPZNZADPZBCPZNZQZ
      RZVAVBVCVDVOSZVDITZJTZOZKTZDOZPZIKUAZVRDPZNZVQDPZJKUAZNZQZRZSZVDAVROZWAPZ
      AVTPZWDNZVKWGNZQZRZSVDVEWAPZWNVINZVKBVTPZNZQZRZSVPIJKABCEFGVQAPZWJWRVDXEW
      BWMWIWQXEVSWLWAVQAVRUBUCXEWEWOWHWPXEWCWNWDVQAVTUDUFXEWFVKWGVQADUDUFUEUGUH
      VRBPZWRXDVDXFWMWSWQXCXFWLVEWAVRBAUIUCXFWOWTWPXBXFWDVIWNVRBDUDUJXFWGXAVKVR
      BVTUDUJUEUGUHVTCPZXDVOVDXGWSVGXCVNXGWAVFVEVTCDUBUQXGWTVJXBVMXGWNVHVIVTCAU
      KUFXGXAVLVKVTCBUKUJUEUGUHWKVQEMVRFMVTGMULVSVTLTZOZPWCJLUAZNZILUAZWGNZQWBW
      ILDHXHDPZXIWAVSXHDVTUIUQXNXKWEXMWHXNXJWDWCXHDVRUKUJXNXLWFWGXHDVQUKUFUEVQV
      RVTXHIUMJUMKUMLUMUNUOURUPUSUT $.
      $( [19-Apr-2014] $) $( [28-Mar-2014] $)
  $}

  ${
    preqsn.1 $e |- A e. _V $.
    preqsn.2 $e |- B e. _V $.
    preqsn.3 $e |- C e. _V $.
    $( Equivalence for a pair equal to a singleton. $)
    preqsn $p |- ( { A , B } = { C } <-> ( A = B /\ B = C ) ) $=
      ( cpr csn wceq wa dfsn2 eqeq2i preq12b oridm eqtr3 simpr jca eqtr impbii
      wo bitri 3bitri ) ABGZCHZIUCCCGZIACIZBCIZJZUHTZABIZUGJZUDUEUCCKLABCCDEFFM
      UIUHUKUHNUHUKUHUJUGABCOUFUGPQUKUFUGABCRUJUGPQSUAUB $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Rewrite ~ df-op using ` if ` .  When both arguments are sets, it reduces
       to the standard Kuratowski definition; otherwise, it is defined to be
       the empty set.  (Contributed by Mario Carneiro, 26-Apr-2015.) $)
    dfopif $p |- <. A , B >. =
      if ( ( A e. _V /\ B e. _V ) , { { A } , { A , B } } , (/) ) $=
      ( vx cop cvv wcel cv csn cpr w3a cab wa c0 df-op df-3an abbii wceq iftrue
      cif abid2 ibar abbidv syl5eqr eqtr2d wn wss pm2.21 adantrd abssdv ss0 syl
      iffalse eqtr4d pm2.61i 3eqtri ) ABDAEFZBEFZCGZAHABIIZFZJZCKUPUQLZUTLZCKZV
      BUSMSZCABNVAVCCUPUQUTOPVBVDVEQVBVEUSVDVBUSMRVBUSUTCKVDCUSTVBUTVCCVBUTUAUB
      UCUDVBUEZVDMVEVFVDMUFVDMQVFVCCMVFVBURMFZUTVBVGUGUHUIVDUJUKVBUSMULUMUNUO
      $.
      $( [26-Apr-2015] $)
  $}

  $( Value of the ordered pair when the arguments are sets. $)
  dfopg $p |- ( ( A e. V /\ B e. W ) ->
    <. A , B >. = { { A } , { A , B } } ) $=
    ( wcel cvv cop csn cpr wceq elex wa c0 cif dfopif iftrue syl5eq syl2an ) AC
    EAFEZBFEZABGZAHABIIZJBDEACKBDKSTLZUAUCUBMNUBABOUCUBMPQR $.
    $( [26-Apr-2015] $)

  ${
    dfop.1 $e |- A e. _V $.
    dfop.2 $e |- B e. _V $.
    $( Value of the ordered pair when the arguments are sets. $)
    dfop $p |- <. A , B >. = { { A } , { A , B } } $=
      ( cvv wcel cop csn cpr wceq dfopg mp2an ) AEFBEFABGAHABIIJCDABEEKL $.
      $( [25-Jun-1998] $)
  $}

  $( Equality theorem for ordered pairs. $)
  opeq1 $p |- ( A = B -> <. A , C >. = <. B , C >. ) $=
    ( wceq cvv wcel wa csn cpr c0 cif cop eleq1 anbi1d sneq preq1 preq12d eqidd
    ifbieq12d dfopif 3eqtr4g ) ABDZAEFZCEFZGZAHZACIZIZJKBEFZUDGZBHZBCIZIZJKACLB
    CLUBUEUJUHJUMJUBUCUIUDABEMNUBUFUKUGULABOABCPQUBJRSACTBCTUA $.
    $( [26-Apr-2015] $) $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq2 $p |- ( A = B -> <. C , A >. = <. C , B >. ) $=
    ( wceq cvv wcel wa csn cpr c0 cif eleq1 anbi2d preq2 preq2d eqidd ifbieq12d
    cop dfopif 3eqtr4g ) ABDZCEFZAEFZGZCHZCAIZIZJKUBBEFZGZUECBIZIZJKCARCBRUAUDU
    IUGJUKJUAUCUHUBABELMUAUFUJUEABCNOUAJPQCASCBST $.
    $( [26-Apr-2015] $) $( [25-Jun-1998] $)

  $( Equality theorem for ordered pairs. $)
  opeq12 $p |- ( ( A = C /\ B = D ) -> <. A , B >. = <. C , D >. ) $=
    ( wceq cop opeq1 opeq2 sylan9eq ) ACEBDEABFCBFCDFACBGBDCHI $.
    $( [28-May-1995] $)

  ${
    opeq1i.1 $e |- A = B $.
    $( Equality inference for ordered pairs. $)
    opeq1i $p |- <. A , C >. = <. B , C >. $=
      ( wceq cop opeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Dec-2006] $)

    $( Equality inference for ordered pairs. $)
    opeq2i $p |- <. C , A >. = <. C , B >. $=
      ( wceq cop opeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Dec-2006] $)

    ${
      opeq12i.2 $e |- C = D $.
      $( Equality inference for ordered pairs.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.) $)
      opeq12i $p |- <. A , C >. = <. B , D >. $=
        ( wceq cop opeq12 mp2an ) ABGCDGACHBDHGEFACBDIJ $.
        $( [16-Dec-2006] $)
    $}
  $}

  ${
    opeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for ordered pairs. $)
    opeq1d $p |- ( ph -> <. A , C >. = <. B , C >. ) $=
      ( wceq cop opeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Dec-2006] $)

    $( Equality deduction for ordered pairs. $)
    opeq2d $p |- ( ph -> <. C , A >. = <. C , B >. ) $=
      ( wceq cop opeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Dec-2006] $)

    ${
      opeq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for ordered pairs.  (The proof was shortened by
         Andrew Salmon, 29-Jun-2011.) $)
      opeq12d $p |- ( ph -> <. A , C >. = <. B , D >. ) $=
        ( wceq cop opeq12 syl2anc ) ABCHDEHBDICEIHFGBDCEJK $.
        $( [29-Jun-2011] $) $( [16-Dec-2006] $)
    $}
  $}
  $( Equality theorem for ordered triples. $)
  oteq1 $p |- ( A = B -> <. A , C , D >. = <. B , C , D >. ) $=
    ( wceq cop cotp opeq1 opeq1d df-ot 3eqtr4g ) ABEZACFZDFBCFZDFACDGBCDGLMNDAB
    CHIACDJBCDJK $.
    $( [3-Apr-2015] $)

  $( Equality theorem for ordered triples. $)
  oteq2 $p |- ( A = B -> <. C , A , D >. = <. C , B , D >. ) $=
    ( wceq cop cotp opeq2 opeq1d df-ot 3eqtr4g ) ABEZCAFZDFCBFZDFCADGCBDGLMNDAB
    CHICADJCBDJK $.
    $( [3-Apr-2015] $)

  $( Equality theorem for ordered triples. $)
  oteq3 $p |- ( A = B -> <. C , D , A >. = <. C , D , B >. ) $=
    ( wceq cop cotp opeq2 df-ot 3eqtr4g ) ABECDFZAFKBFCDAGCDBGABKHCDAICDBIJ $.
    $( [3-Apr-2015] $)

  ${
    $d y A $.  $d y B $.  $d x y $.
    hbop.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbop.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for ordered pairs. $)
    hbop $p |- ( y e. <. A , B >. -> A. x y e. <. A , B >. ) $=
      ( cop cvv wcel wa csn cpr c0 cif dfopif cv ax-17 hbel hban hbpr hbsn hbif
      hbxfreq ) ABCDGCHIZDHIZJZCKZCDLZLZMNCDOUFABUIMUDUEAABBCHEBPZHIAQZRABBDHFU
      KRSABUGUHABCEUAABCDEFTTUJMIAQUBUC $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d y z B $.  $d y z A $.  $d y ph $.  $d x y z $.
    hbopd.1 $e |- ( ph -> A. x ph ) $.
    hbopd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbopd.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbop . $)
    hbopd $p |- ( ph -> ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ) $=
      ( vz cv wcel wal cab cop wi hba1 hbab wceq alrimiv abidhb a1i syl opeq12d
      hbop eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUIEKZBLZIMZNZKZUQBLZUHDENZKZU
      TBLUQUROABCULUOUKBICUJBPQUNBICUMBPQUDUAAUPUSUHAULDUOEAUHDKZVABLOZCLULDRAV
      BCGSBCIDTUBAUHEKZVCBLOZCLUOERAVDCHSBCIETUBUCUEZAUQUTBFVEUFUG $.
      $( [4-Feb-2008] $)
  $}

  ${
    opid.1 $e |- A e. _V $.
    $( The ordered pair ` <. A , A >. ` in Kuratowski's representation.
       (Contributed by FL, 28-Dec-2011.) $)
    opid $p |- <. A , A >. = { { A } } $=
      ( csn cpr cop dfsn2 eqcomi preq2i dfop 3eqtr4i ) ACZAADZDKKDAAEKCLKKKLAFG
      HAABBIKFJ $.
      $( [28-Dec-2011] $)
  $}

  ${
    $d B x $.  $d ps x $.
    ralunsn.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Restricted quantification over the union of a set and a singleton, using
       implicit substitution.  (Contributed by Paul Chapman, 17-Nov-2012.) $)
    ralunsn $p |- ( B e. C -> ( A. x e. ( A u. { B } ) ph <->
                                ( A. x e. A ph /\ ps ) ) ) $=
      ( csn cun wral wa wcel ralunb ralsng anbi2d syl5bb ) ACDEHZIJACDJZACQJZKE
      FLZRBKACDQMTSBRABCEFGNOP $.
      $( [23-Apr-2015] $) $( [17-Nov-2012] $)
  $}

  ${
    $d A x $.  $d B x y $.  $d C x $.  $d ch x $.  $d ps y $.  $d th x $.
    2ralunsn.1 $e |- ( x = B -> ( ph <-> ch ) ) $.
    2ralunsn.2 $e |- ( y = B -> ( ph <-> ps ) ) $.
    2ralunsn.3 $e |- ( x = B -> ( ps <-> th ) ) $.
    $( Double restricted quantification over the union of a set and a
       singleton, using implicit substitution.  (Contributed by Paul Chapman,
       17-Nov-2012.) $)
    2ralunsn $p |- ( B e. C ->
                     ( A. x e. ( A u. { B } ) A. y e. ( A u. { B } ) ph <->
                       ( ( A. x e. A A. y e. A ph /\ A. x e. A ps ) /\
                         ( A. y e. A ch /\ th ) ) ) ) $=
      ( wcel csn cun wral wa ralunsn ralbidv cv wceq r19.26 anbi1i syl6bb bitrd
      anbi12d ) HIMZAFGHNOZPZEUHPAFGPZBQZEUHPZUJEGPBEGPQZCFGPZDQZQZUGUIUKEUHABF
      GHIKRSUGULUKEGPZUOQUPUKUOEGHIETHUAZUJUNBDURACFGJSLUFRUQUMUOUJBEGUBUCUDUE
      $.
      $( [17-Nov-2012] $)
  $}

  $( Expansion of an ordered pair when either member is a proper class.
     (Contributed by Mario Carneiro, 26-Apr-2015.) $)
  opprc $p |- ( -. ( A e. _V /\ B e. _V ) -> <. A , B >. = (/) ) $=
    ( cvv wcel wa wn cop csn cpr c0 cif dfopif iffalse syl5eq ) ACDBCDEZFABGOAH
    ABIIZJKJABLOPJMN $.
    $( [26-Apr-2015] $)

  $( Expansion of an ordered pair when the first member is a proper class.  See
     also ~ opprc .  (Revised by Mario Carneiro, 26-Apr-2015.) $)
  opprc1 $p |- ( -. A e. _V -> <. A , B >. = (/) ) $=
    ( cvv wcel wn wa cop c0 wceq simpl con3i opprc syl ) ACDZENBCDZFZEABGHIPNNO
    JKABLM $.
    $( [26-Apr-2015] $) $( [10-Apr-2004] $)

  $( Expansion of an ordered pair when the second member is a proper class.
     See also ~ opprc .  (Revised by Mario Carneiro, 26-Apr-2015.) $)
  opprc2 $p |- ( -. B e. _V -> <. A , B >. = (/) ) $=
    ( cvv wcel wn wa cop c0 wceq simpr con3i opprc syl ) BCDZEACDZNFZEABGHIPNON
    JKABLM $.
    $( [26-Apr-2015] $) $( [15-Nov-1994] $)

  $( If an ordered pair has an element, then its arguments are sets.
     (Contributed by Mario Carneiro, 26-Apr-2015.) $)
  oprcl $p |- ( C e. <. A , B >. -> ( A e. _V /\ B e. _V ) ) $=
    ( cop wcel c0 wceq wn cvv wa n0i opprc con1i syl ) CABDZEOFGZHAIEBIEJZOCKQP
    ABLMN $.
    $( [26-Apr-2015] $)

  ${
    $d x A $.  $d x B $.
    $( The power set of a singleton. $)
    pwsn $p |- ~P { A } = { (/) , { A } } $=
      ( vx cv csn wss cab c0 wceq wo cpw cpr sssn abbii df-pw dfpr2 3eqtr4i ) B
      CZADZEZBFQGHQRHIZBFRJGRKSTBQALMBRNBGROP $.
      $( [5-Jun-2006] $)

    $d x y $.  $d y A $.
    $( MAY BE REVISED - should we keep this? $)
    $( The power set of a singleton (direct proof). $)
    pwsnALT $p |- ~P { A } = { (/) , { A } } $=
      ( vx vy cv csn wss cab c0 wceq wo cpw cpr wn wa wcel wal dfss2 wex sylbi
      wi elsn imbi2i albii bitri neq0 exintr syl5bi df-clel exancom bitr2i syl6
      snssi anc2li eqss syl6ibr orrd 0ss sseq1 mpbiri eqimss impbii abbii df-pw
      jaoi dfpr2 3eqtr4i ) BDZAEZFZBGVGHIZVGVHIZJZBGVHKHVHLVIVLBVIVLVIVJVKVIVJM
      ZVIVHVGFZNVKVIVMVNVICDZVGOZVOAIZTZCPZVMVNTVIVPVOVHOZTZCPVSCVGVHQWAVRCVTVQ
      VPCAUAUBUCUDVSVMVPVQNCRZVNVMVPCRVSWBCVGUEVPVQCUFUGWBAVGOZVNWCVQVPNCRWBCAV
      GUHVQVPCUIUJAVGULSUKSUMVGVHUNUOUPVJVIVKVJVIHVHFVHUQVGHVHURUSVGVHUTVDVAVBB
      VHVCBHVHVEVF $.
      $( [8-Aug-2008] $) $( [5-Jun-2006] $)

    $( The power set of an unordered pair. $)
    pwpr $p |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) $=
      ( vx cpr cpw cv wss cab c0 csn cun wcel df-pw wceq elpr orbi12i elun sspr
      wo vex 3bitr4ri abbii abid2 3eqtri ) ABDZECFZUEGZCHUFIAJZDZBJZUEDZKZLZCHU
      LCUEMUGUMCUFUILZUFUKLZSUFINUFUHNSZUFUJNUFUENSZSUMUGUNUPUOUQUFIUHCTZOUFUJU
      EUROPUFUIUKQUFABRUAUBCULUCUD $.
      $( [1-May-2009] $)
  $}

  ${
    $d x y $.
    $( Compute the power set of the power set of the power set of the empty
       set.  (See also ~ pw0 and ~ pwpw0 .) $)
    pwpwpw0 $p |- ~P { (/) , { (/) } } =
                ( { (/) , { (/) } } u. { { { (/) } } , { (/) , { (/) } } } ) $=
      ( c0 csn pwpr ) AABC $.
      $( [29-Jul-2011] $) $( [2-May-2009] $)
  $}

  ${

    $( The power class of the universe is the universe.  Exercise 4.12(d) of
       [Mendelson] p. 235. $)
    pwv $p |- ~P _V = _V $=
      ( vx cvv cpw cv wcel wss ssv vex elpw mpbir 2th eqriv ) ABCZBADZMEZNBEONB
      FNGNBAHZIJPKL $.
      $( [14-Sep-2003] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                       The union of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class union symbol. $)
  $c U. $. $( Big cup $)

  $( Extend class notation to include the union of a class (read:  'union
     ` A ` ') $)
  cuni $a class U. A $.

  ${
    $d x y A $.
    $( Define the union of a class i.e. the collection of all members of the
       members of the class.  Definition 5.5 of [TakeutiZaring] p. 16.  For
       example, ` U. { { 1 , 3 } , { 1 , 8 } } = { 1 , 3 , 8 } ` .  This is
       similar to the union of two classes ~ df-un . $)
    df-uni $a |- U. A = { x | E. y ( x e. y /\ y e. A ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class union. $)
    dfuni2 $p |- U. A = { x | E. y e. A x e. y } $=
      ( cuni cv wcel wa wex cab wrex df-uni exancom df-rex bitr4i abbii eqtri )
      CDAEBEZFZQCFZGBHZAIRBCJZAIABCKTUAATSRGBHUARSBLRBCMNOP $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    $( Membership in class union. $)
    eluni $p |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) $=
      ( vy cuni wcel cvv cv wa wex elex adantr exlimiv wceq eleq1 anbi1d exbidv
      df-uni elab2g pm5.21nii ) BCEZFBGFZBAHZFZUCCFZIZAJZBUAKUFUBAUDUBUEBUCKLMD
      HZUCFZUEIZAJUGDBUAGUHBNZUJUFAUKUIUDUEUHBUCOPQDACRST $.
      $( [22-May-1994] $)

    $( Membership in class union.  Restricted quantifier version. $)
    eluni2 $p |- ( A e. U. B <-> E. x e. B A e. x ) $=
      ( cv wcel wa wex cuni wrex exancom eluni df-rex 3bitr4i ) BADZEZNCEZFAGPO
      FAGBCHEOACIOPAJABCKOACLM $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in class union. $)
    elunii $p |- ( ( A e. B /\ B e. C ) -> A e. U. C ) $=
      ( vx wcel wa cv wex cuni eleq2 eleq1 anbi12d cla4egv anabsi7 eluni sylibr
      wceq ) ABEZBCEZFZADGZEZUACEZFZDHZACIERSUEUDTDBCUABQUBRUCSUABAJUABCKLMNDAC
      OP $.
      $( [24-Mar-1995] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbuni.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for union.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbuni $p |- ( y e. U. A -> A. x y e. U. A ) $=
      ( vz cv cuni wcel wa wex eluni ax-17 hblem hban hbex hbxfrbi ) BFZCGHQEFZ
      HZRCHZIZEJAEQCKUAAESTASALABECDMNOP $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d y z A $.  $d x y z $.  $d y z ph $.
    hbunid.1 $e |- ( ph -> A. x ph ) $.
    hbunid.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of ~ hbuni . $)
    hbunid $p |- ( ph -> ( y e. U. A -> A. x y e. U. A ) ) $=
      ( vz cv wcel wa wex wal cuni ax-17 a17d hblemd hband hbexd eluni albii
      3imtr4g ) ACHZGHZIZUCDIZJZGKZUGBLUBDMIZUHBLAUFBGAGNAUDUEBAUDBOABCGDEACNFP
      QRGUBDSZUHUGBUITUA $.
      $( [18-Feb-2013] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d V y z $.  $d x y z $.
    $( Distribute proper substitution through the union of a class. ~ csbunig
       is derived from the virtual deduction proof ~ csbunigVD .  (Contributed
       by Alan Sare, 10-Nov-2012. ) $)
    csbunig $p |- ( A e. V -> [_ A / x ]_ U. B = U. [_ A / x ]_ B ) $=
      ( vz vy wcel cuni csb wel cv wa wex cab wsbc df-uni csbeq2i csbabg sbcexg
      bitrd sbcang sbcg sbcel2g anbi12d exbidv abbidv 3eqtrd syl6eqr ) BDGZABCH
      ZIZEFJZFKZABCIZGZLZFMZENZUNHUIUKABULUMCGZLZFMZENZIVAABOZENURABUJVBDEFCPQV
      AAEBDRUIVCUQEUIVCUTABOZFMUQUTFABDSUIVDUPFUIVDULABOZUSABOZLUPULUSABDUAUIVE
      ULVFUOULABDUBABUMCDUCUDTUETUFUGEFUNPUH $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality theorem for class union.  Exercise 15 of [TakeutiZaring]
       p. 18.  (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    unieq $p |- ( A = B -> U. A = U. B ) $=
      ( vy vx wceq cv wcel wrex cab cuni rexeq abbidv dfuni2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [29-Jun-2011] $) $( [10-Aug-1993] $)
  $}

  ${
    unieqi.1 $e |- A = B $.
    $( Inference of equality of two class unions. $)
    unieqi $p |- U. A = U. B $=
      ( wceq cuni unieq ax-mp ) ABDAEBEDCABFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    unieqd.1 $e |- ( ph -> A = B ) $.
    $( Deduction of equality of two class unions. $)
    unieqd $p |- ( ph -> U. A = U. B ) $=
      ( wceq cuni unieq syl ) ABCEBFCFEDBCGH $.
      $( [21-Apr-1995] $)
  $}

  ${
    $d x A y $.  $d ph y $.
    $( Membership in union of a class abstraction. $)
    eluniab $p |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) $=
      ( vy cab cuni wcel cv wex eluni ax-17 hbab1 hban wceq eleq2 eleq1 anbi12d
      wa abid anbi2i syl6bb cbvex bitri ) CABEZFGCDHZGZUEUDGZRZDICBHZGZARZBIDCU
      DJUHUKDBUFUGBUFBKABDLMUKDKUEUINZUHUJUIUDGZRUKULUFUJUGUMUEUICOUEUIUDPQUMAU
      JABSTUAUBUC $.
      $( [11-Aug-1994] $)

    $( Membership in union of a class abstraction. $)
    elunirab $p |- ( A e. U. { x e. B | ph } <->
                   E. x e. B ( A e. x /\ ph ) ) $=
      ( cv wcel cab cuni wex crab wrex eluniab df-rab unieqi eleq2i df-rex an12
      wa exbii bitri 3bitr4i ) CBEZDFZARZBGZHZFCUBFZUDRZBIZCABDJZHZFUGARZBDKZUD
      BCLUKUFCUJUEABDMNOUMUCULRZBIUIULBDPUNUHBUCUGAQSTUA $.
      $( [4-Oct-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    unipr.1 $e |- A e. _V $.
    unipr.2 $e |- B e. _V $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    unipr $p |- U. { A , B } = ( A u. B ) $=
      ( vx vy cv wcel wo cab cpr wa wex cun cuni wceq 19.43 bitri clel3 exancom
      vex elpr anbi2i andi exbii orbi12i 3bitr4ri abbii df-un df-uni 3eqtr4ri )
      EGZAHZULBHZIZEJULFGZHZUPABKZHZLZFMZEJABNUROUOVAEUQUPAPZLZUQUPBPZLZIZFMVCF
      MZVEFMZIVAUOVCVEFQUTVFFUTUQVBVDIZLVFUSVIUQUPABFUAUBUCUQVBVDUDRUEUMVGUNVHU
      MVBUQLFMVGFULACSVBUQFTRUNVDUQLFMVHFULBDSVDUQFTRUFUGUHEABUIEFURUJUK $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The union of a pair is the union of its members.  Proposition 5.7 of
       [TakeutiZaring] p. 16. $)
    uniprg $p |- ( ( A e. V /\ B e. W ) -> U. { A , B } = ( A u. B ) ) $=
      ( vx vy cv cpr cuni cun wceq preq1 unieqd uneq1 eqeq12d preq2 uneq2 unipr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
      $( [25-Aug-2006] $)
  $}

  ${
    unisn.1 $e |- A e. _V $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisn $p |- U. { A } = A $=
      ( csn cuni cpr cun dfsn2 unieqi unipr unidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( A set equals the union of its singleton.  Theorem 8.2 of [Quine]
       p. 53. $)
    unisng $p |- ( A e. V -> U. { A } = A ) $=
      ( vx cv csn cuni wceq sneq unieqd id eqeq12d vex unisn vtoclg ) CDZEZFZOG
      AEZFZAGCABOAGZQSOATPROAHITJKOCLMN $.
      $( [13-Aug-2002] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbeqel.1 $e |- A e. _V $.
    hbeqel.2 $e |- ( y = A -> A. x y = A ) $.
    $( If ` x ` is effectively bound in ` y = A ` , then it is effectively
       bound in ` y e. A ` .  This is the other direction of ~ hbeleq , showing
       the two conditions are equivalent when ` A ` is a set. $)
    hbeqel $p |- ( y e. A -> A. x y e. A ) $=
      ( csn cuni unisn eqcomi cv wcel wceq elsn hbxfrbi hbuni hbxfreq ) ABCCFZG
      ZRCCDHIABQBJZQKSCLABCMENOP $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The class union of the union of two classes.  Theorem 8.3 of [Quine]
       p. 53. $)
    uniun $p |- U. ( A u. B ) = ( U. A u. U. B ) $=
      ( vx vy cun cuni cv wcel wa wo 19.43 elun anbi2i andi bitri exbii orbi12i
      wex eluni 3bitr4i eqriv ) CABEZFZAFZBFZEZCGZDGZHZUHUBHZIZDRZUGUDHZUGUEHZJ
      ZUGUCHUGUFHUIUHAHZIZUIUHBHZIZJZDRUQDRZUSDRZJULUOUQUSDKUKUTDUKUIUPURJZIUTU
      JVCUIUHABLMUIUPURNOPUMVAUNVBDUGASDUGBSQTDUGUBSUGUDUELTUA $.
      $( [20-Aug-1993] $)

    $( The class union of the intersection of two classes.  Exercise 4.12(n) of
       [Mendelson] p. 235.  See ~ uninqs for a condition where equality holds.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniin $p |- U. ( A i^i B ) C_ ( U. A i^i U. B ) $=
      ( vx vy cin cuni cv wcel wex 19.40 elin anbi2i anandi bitri exbii anbi12i
      wa eluni 3imtr4i ssriv ) CABEZFZAFZBFZEZCGZDGZHZUGUAHZQZDIZUFUCHZUFUDHZQZ
      UFUBHUFUEHUHUGAHZQZUHUGBHZQZQZDIUPDIZURDIZQUKUNUPURDJUJUSDUJUHUOUQQZQUSUI
      VBUHUGABKLUHUOUQMNOULUTUMVADUFARDUFBRPSDUFUARUFUCUDKST $.
      $( [29-Jun-2011] $) $( [4-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subclass relationship for class union.  Theorem 61 of [Suppes] p. 39.
       (The proof was shortened by Andrew Salmon, 29-Jun-2011.) $)
    uniss $p |- ( A C_ B -> U. A C_ U. B ) $=
      ( vx vy wss cuni cv wcel wa wex ssel anim2d eximdv eluni 3imtr4g ssrdv )
      ABEZCAFZBFZQCGZDGZHZUAAHZIZDJUBUABHZIZDJTRHTSHQUDUFDQUCUEUBABUAKLMDTANDTB
      NOP $.
      $( [29-Jun-2011] $) $( [22-Mar-1998] $)

    $( Subclass relationship for class union.  (The proof was shortened by
       Andrew Salmon, 29-Jun-2011.) $)
    ssuni $p |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) $=
      ( vy vx wcel wss cuni cv wi wal eleq2 imbi1d elunii expcom vtoclga imim2d
      wceq alimdv dfss2 3imtr4g impcom ) BCFZABGZACHZGZUCDIZAFZUGBFZJZDKUHUGUEF
      ZJZDKUDUFUCUJULDUCUIUKUHUGEIZFZUKJUIUKJEBCUMBRUNUIUKUMBUGLMUNUMCFUKUGUMCN
      OPQSDABTDAUETUAUB $.
      $( [29-Jun-2011] $) $( [24-May-1994] $)
  $}

  ${
    $d x y A $.
    $( The union of a set is empty iff the set is included in the singleton of
       the empty set. $)
    uni0b $p |- ( U. A = (/) <-> A C_ { (/) } ) $=
      ( vx vy cv c0 csn wcel wral wceq wss cuni elsn ralbii dfss3 wex wrex neq0
      wn rexcom4 3bitr4ri rexbii eluni2 exbii rexnal 3bitri con4bii ) BDZEFZGZB
      AHUGEIZBAHZAUHJAKZEIZUIUJBABELMBAUHNUMUKUMRCDZULGZCOZUJRZBAPZUKRCULQUNUGG
      ZCOZBAPUSBAPZCOURUPUSBCASUQUTBACUGQUAUOVACBUNAUBUCTUJBAUDUEUFT $.
      $( [12-Sep-2004] $)

    $( The union of a set is empty iff all of its members are empty. $)
    uni0c $p |- ( U. A = (/) <-> A. x e. A x = (/) ) $=
      ( cuni c0 wceq csn wss cv wcel wral uni0b dfss3 elsn ralbii 3bitri ) BCDE
      BDFZGAHZPIZABJQDEZABJBKABPLRSABADMNO $.
      $( [16-Aug-2006] $)
  $}

  $( The union of the empty set is the empty set.  Theorem 8.7 of [Quine]
     p. 54.  (Reproved without relying on ~ ax-nul by Eric Schmidt,
     4-Apr-2007.) $)
  uni0 $p |- U. (/) = (/) $=
    ( c0 cuni wceq csn wss 0ss uni0b mpbir ) ABACAADZEIFAGH $.
    $( [4-Apr-2007] $) $( [16-Sep-1993] $)

  $( An element of a class is a subclass of its union.  Theorem 8.6 of [Quine]
     p. 54.  Also the basis for Proposition 7.20 of [TakeutiZaring] p. 40. $)
  elssuni $p |- ( A e. B -> A C_ U. B ) $=
    ( wss wcel cuni ssid ssuni mpan ) AACABDABECAFAABGH $.
    $( [6-Jun-1994] $)

  $( Condition turning a subclass relationship for union into an equality. $)
  unissel $p |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) $=
    ( cuni wss wcel wa simpl elssuni adantl eqssd ) ACZBDZBAEZFKBLMGMBKDLBAHIJ
    $.
    $( [18-Jul-2006] $)

  ${
    $d x y A $.  $d x y B $.
    $( Relationship involving membership, subset, and union.  Exercise 5 of
       [Enderton] p. 26 and its converse. $)
    unissb $p |- ( U. A C_ B <-> A. x e. A x C_ B ) $=
      ( vy cuni wss cv wcel wi wal wral wa dfss2 wex eluni imbi1i 19.23v bitr4i
      albii bitri alcom 19.21v impexp bi2.04 imbi2i 3bitr4i 3bitri df-ral ) BEZ
      CFZAGZBHZUKCFZIZAJZUMABKUJDGZUIHZUPCHZIZDJUPUKHZULLZURIZAJZDJZUODUICMUSVC
      DUSVAANZURIVCUQVEURAUPBOPVAURAQRSVDVBDJZAJUOVBDAUAVFUNAULUTURIZIZDJULVGDJ
      ZIVFUNULVGDUBVBVHDVBUTULURIIVHUTULURUCUTULURUDTSUMVIULDUKCMUEUFSTUGUMABUH
      R $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x y B $.
    $( A subclass condition on the members of two classes that implies a
       subclass relation on their unions.  Proposition 8.6 of [TakeutiZaring]
       p. 59.  See ~ iunss2 for a generalization to indexed unions. $)
    uniss2 $p |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) $=
      ( cv wss wrex wral cuni wcel ssuni expcom rexlimiv ralimi unissb sylibr )
      AEZBEZFZBDGZACHQDIZFZACHCIUAFTUBACSUBBDSRDJUBQRDKLMNACUAOP $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( If the difference ` A \ B ` contains the largest members of ` A ` , then
       the union of the difference is the union of ` A ` . $)
    unidif $p |- ( A. x e. A E. y e. ( A \ B ) x C_ y ->
               U. ( A \ B ) = U. A ) $=
      ( cv wss cdif wrex wral cuni wa wceq uniss2 difss uniss ax-mp eqss sylibr
      jctil ) AEBEFBCDGZHACIZTJZCJZFZUCUBFZKUBUCLUAUEUDABCTMTCFUDCDNTCOPSUBUCQR
      $.
      $( [22-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Relationship implying union. $)
    ssunieq $p |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) $=
      ( wcel cv wss wral cuni wceq elssuni unissb biimpri anim12i eqss sylibr
      wa ) BCDZAEBFACGZPBCHZFZSBFZPBSIQTRUABCJUARACBKLMBSNO $.
      $( [10-Nov-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Any member of a class is the largest of those members that it
       includes. $)
    unimax $p |- ( A e. B -> U. { x e. B | x C_ A } = A ) $=
      ( vy wcel cv wss crab wral cuni wceq ssid sseq1 elrab3 elrab simprbi rgen
      mpbiri wa ssunieq eqcomd sylancl ) BCEZBAFZBGZACHZEZDFZBGZDUFIZUFJZBKUCUG
      BBGZBLUEULABCUDBBMNRUIDUFUHUFEUHCEUIUEUIAUHCUDUHBMOPQUGUJSBUKDBUFTUAUB $.
      $( [9-Oct-2006] $) $( [13-Aug-2002] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Closure law for "the unique element in ` A ` such that ` ph ` ." $)
    reucl $p |- ( E! x e. A ph -> U. { x e. A | ph } e. A ) $=
      ( vy cv wcel weu cab cuni wreu crab csn wceq wex euabsn hbab1 hbuni ax-17
      wa hbel unieq unisn syl6req snid eleq2 mpbiri abid simpld eqeltrrd exlimi
      vex sylib sylbi df-reu df-rab unieqi eleq1i 3imtr4i ) BEZCFZASZBGZVABHZIZ
      CFZABCJABCKZIZCFVBVCUSLZMZBNVEVABOVIVEBBDDVDCBDVCVABDPQDECFBRTVIUSVDCVIVD
      VHIUSVCVHUAUSBUKZUBUCVIUTAVIUSVCFZVAVIVKUSVHFUSVJUDVCVHUSUEUFVABUGULUHUIU
      JUMABCUNVGVDCVFVCABCUOUPUQUR $.
      $( [22-Nov-1994] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The intersection of a class
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare class intersection symbol. $)
  $c |^| $. $( Big cap $)

  $( Extend class notation to include the intersection of a class (read:
     'intersect ` A ` '). $)
  cint $a class |^| A $.

  ${
    $d x y A $.
    $( Define the intersection of a class.  Definition 7.35 of [TakeutiZaring]
       p. 44.  For example, ` |^| { { 1 , 3 } , { 1 , 8 } } = { 1 } ` .
       Compare this with the intersection of two classes, ~ df-in . $)
    df-int $a |- |^| A = { x | A. y ( y e. A -> x e. y ) } $.
  $}

  ${
    $d x y A $.
    $( Alternate definition of class intersection. $)
    dfint2 $p |- |^| A = { x | A. y e. A x e. y } $=
      ( cint cv wcel wi wal cab wral df-int df-ral abbii eqtr4i ) CDBEZCFAEOFZG
      BHZAIPBCJZAIABCKRQAPBCLMN $.
      $( [28-Jun-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Equality law for intersection. $)
    inteq $p |- ( A = B -> |^| A = |^| B ) $=
      ( vx vy wceq cv wcel wral cab cint raleq abbidv dfint2 3eqtr4g ) ABEZCFDF
      GZDAHZCIPDBHZCIAJBJOQRCPDABKLCDAMCDBMN $.
      $( [13-Sep-1999] $)
  $}

  ${
    inteqi.1 $e |- A = B $.
    $( Equality inference for class intersection. $)
    inteqi $p |- |^| A = |^| B $=
      ( wceq cint inteq ax-mp ) ABDAEBEDCABFG $.
      $( [2-Sep-2003] $)
  $}

  ${
    inteqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for class intersection. $)
    inteqd $p |- ( ph -> |^| A = |^| B ) $=
      ( wceq cint inteq syl ) ABCEBFCFEDBCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x A y $.  $d x B y $.
    elint.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint $p |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) $=
      ( vy cv wcel wi wal cint wceq eleq1 imbi2d albidv df-int elab2 ) AFZCGZEF
      ZQGZHZAIRBQGZHZAIEBCJDSBKZUAUCAUDTUBRSBQLMNEACOP $.
      $( [21-May-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    elint2.1 $e |- A e. _V $.
    $( Membership in class intersection. $)
    elint2 $p |- ( A e. |^| B <-> A. x e. B A e. x ) $=
      ( cint wcel cv wi wal wral elint df-ral bitr4i ) BCEFAGZCFBNFZHAIOACJABCD
      KOACLM $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Membership in class intersection, with the sethood requirement expressed
       as an antecedent. $)
    elintg $p |- ( A e. V -> ( A e. |^| B <-> A. x e. B A e. x ) ) $=
      ( vy cv cint wcel wral eleq1 wceq ralbidv vex elint2 vtoclbg ) EFZCGZHPAF
      ZHZACIBQHBRHZACIEBDPBQJPBKSTACPBRJLAPCEMNO $.
      $( [20-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in class intersection.  (The proof was shortened by Andrew
       Salmon, 9-Jul-2011.) $)
    elinti $p |- ( A e. |^| B -> ( C e. B -> A e. C ) ) $=
      ( vx cint wcel wi cv wral elintg eleq2 rcla4cv syl6bi pm2.43i ) ABEZFZCBF
      ACFZGZPPADHZFZDBIRDABOJTQDCBSCAKLMN $.
      $( [9-Jul-2011] $) $( [14-Oct-1999] $)
  $}

  ${
    $d y z A $.  $d x y z $.
    hbint.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for intersection.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbint $p |- ( y e. |^| A -> A. x y e. |^| A ) $=
      ( vz cv cint wcel wral vex elint2 hblem ax-17 hbral hbxfrbi ) BFZCGHPEFHZ
      ECIAEPCBJKQAECABECDLQAMNO $.
      $( [12-Aug-2011] $) $( [2-Feb-1997] $)
  $}

  ${
    $d A x y $.  $d ph y $.
    inteqab.1 $e |- A e. _V $.
    $( Membership in the intersection of a class abstraction. $)
    elintab $p |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) $=
      ( vy cab cint wcel cv wi wal elint hbab1 ax-17 hbim wceq eleq1 abid eleq2
      syl6bb imbi12d cbval bitri ) CABFZGHEIZUDHZCUEHZJZEKACBIZHZJZBKECUDDLUHUK
      EBUFUGBABEMUGBNOUKENUEUIPZUFAUGUJULUFUIUDHAUEUIUDQABRTUEUICSUAUBUC $.
      $( [30-Aug-1993] $)

    $( Membership in the intersection of a class abstraction. $)
    elintrab $p |- ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) $=
      ( cv wcel wa cab cint wi wal crab wral elintab impexp albii df-rab inteqi
      bitri eleq2i df-ral 3bitr4i ) CBFZDGZAHZBIZJZGZUEACUDGZKZKZBLZCABDMZJZGUK
      BDNUIUFUJKZBLUMUFBCEOUPULBUEAUJPQTUOUHCUNUGABDRSUAUKBDUBUC $.
      $( [17-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d y ph $.
    $( Membership in the intersection of a class abstraction. $)
    elintrabg $p |- ( A e. V -> ( A e. |^| { x e. B | ph } <->
                 A. x e. B ( ph -> A e. x ) ) ) $=
      ( vy cv crab cint wcel wi wral eleq1 wceq imbi2d ralbidv elintrab vtoclbg
      vex ) FGZABDHIZJATBGZJZKZBDLCUAJACUBJZKZBDLFCETCUAMTCNZUDUFBDUGUCUEATCUBM
      OPABTDFSQR $.
      $( [17-Feb-2007] $)

    $( The intersection of the empty set is the universal class.  Exercise 2 of
       [TakeutiZaring] p. 44. $)
    int0 $p |- |^| (/) = _V $=
      ( vy vx cv c0 wcel wi wal cab wceq cint cvv noel pm2.21i ax-gen 2th abbii
      eqid df-int df-v 3eqtr4i ) ACZDEZBCZUAEZFZAGZBHUCUCIZBHDJKUFUGBUFUGUEAUBU
      DUALMNUCQOPBADRBST $.
      $( [18-Aug-1993] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( An element of a class includes the intersection of the class.  Exercise
       4 of [TakeutiZaring] p. 44 (with correction), generalized to classes. $)
    intss1 $p |- ( A e. B -> |^| B C_ A ) $=
      ( vx vy wcel cint cv wi wal elint wceq eleq1 eleq2 imbi12d cla4gv pm2.43a
      vex syl5bi ssrdv ) ABEZCBFZACGZUAEDGZBEZUBUCEZHZDIZTUBAEZDUBBCQJUGTUHUFTU
      HHDABUCAKUDTUEUHUCABLUCAUBMNOPRS $.
      $( [18-Nov-1995] $)

    $( Subclass of a class intersection.  Theorem 5.11(viii) of [Monk1] p. 52
       and its converse. $)
    ssint $p |- ( A C_ |^| B <-> A. x e. B A C_ x ) $=
      ( vy cint wss cv wcel wral dfss3 vex elint2 ralbii ralcom bitr4i 3bitri )
      BCEZFDGZQHZDBIRAGZHZACIZDBIZBTFZACIZDBQJSUBDBARCDKLMUCUADBIZACIUEUADABCNU
      DUFACDBTJMOP $.
      $( [14-Oct-1999] $)

    $( Subclass of the intersection of a class abstraction.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssintab $p |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) $=
      ( vy cab cint wss cv wral wcel wi wal ssint df-ral hbab1 ax-17 hbim eleq1
      wceq abid syl6bb sseq2 imbi12d cbval 3bitri ) CABEZFGCDHZGZDUFIUGUFJZUHKZ
      DLACBHZGZKZBLDCUFMUHDUFNUJUMDBUIUHBABDOUHBPQUMDPUGUKSZUIAUHULUNUIUKUFJAUG
      UKUFRABTUAUGUKCUBUCUDUE $.
      $( [9-Jul-2011] $) $( [31-Jul-2006] $)

    $( Subclass of a least upper bound. $)
    ssintub $p |- A C_ |^| { x e. B | A C_ x } $=
      ( vy cv wss crab cint ssint wcel sseq2 elrab simprbi mprgbir ) BBAEZFZACG
      ZHFBDEZFZDQDBQIRQJRCJSPSARCORBKLMN $.
      $( [8-Aug-2000] $)

    $( Subclass of the minimum value of class of supersets. $)
    ssmin $p |- A C_ |^| { x | ( A C_ x /\ ph ) } $=
      ( cv wss wa cab cint wi ssintab simpl mpgbir ) CCBDEZAFZBGHENMIBNBCJMAKL
      $.
      $( [10-Aug-2006] $)

    $( Any member of a class is the smallest of those members that include it.
       (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    intmin $p |- ( A e. B -> |^| { x e. B | A C_ x } = A ) $=
      ( vy wcel cv wss crab cint wi wral elintrab ssid wceq sseq2 eleq2 imbi12d
      vex rcla4v mpii syl5bi ssrdv ssintub a1i eqssd ) BCEZBAFZGZACHIZBUFDUIBDF
      ZUIEUHUJUGEZJZACKZUFUJBEZUHAUJCDRLUFUMBBGZUNBMULUOUNJABCUGBNUHUOUKUNUGBBO
      UGBUJPQSTUAUBBUIGUFABCUCUDUE $.
      $( [9-Jul-2011] $) $( [13-Aug-2002] $)

    $( Intersection of subclasses. $)
    intss $p |- ( A C_ B -> |^| B C_ |^| A ) $=
      ( vy vx cv wcel wal cint wss imim1 al2imi vex elint 3imtr4g alrimiv dfss2
      wi 3imtr4i ) CEZAFZSBFZQZCGZDEZBHZFZUDAHZFZQZDGABIUEUGIUCUIDUCUAUDSFZQZCG
      TUJQZCGUFUHUBUKULCTUAUJJKCUDBDLZMCUDAUMMNOCABPDUEUGPR $.
      $( [14-Oct-1999] $)

    $( The intersection of a nonempty set is a subclass of its union. $)
    intssuni $p |- ( A =/= (/) -> |^| A C_ U. A ) $=
      ( vx vy c0 wne cint cuni cv wcel wral r19.2z ex vex elint2 eluni2 3imtr4g
      wrex ssrdv ) ADEZBAFZAGZSBHZCHIZCAJZUCCAQZUBTIUBUAISUDUEUCCAKLCUBABMNCUBA
      OPR $.
      $( [29-Jul-2006] $)
  $}

  ${
    $d x A $.
    $( Subclass of the intersection of a restricted class builder. $)
    ssintrab $p |- ( A C_ |^| { x e. B | ph }
           <-> A. x e. B ( ph -> A C_ x ) ) $=
      ( crab cint wss cv wcel wa cab wral df-rab inteqi sseq2i wal impexp albii
      wi ssintab df-ral 3bitr4i bitri ) CABDEZFZGCBHZDIZAJZBKZFZGZACUFGZSZBDLZU
      EUJCUDUIABDMNOUHULSZBPUGUMSZBPUKUNUOUPBUGAULQRUHBCTUMBDUAUBUC $.
      $( [30-Jan-2015] $)
  $}

  $( If the union of a class is included in its intersection, the class is
     either the empty set or a singleton ( ~ uniintsn ).  (The proof was
     shortened by Andrew Salmon, 25-Jul-2011.) $)
  unissint $p |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) $=
    ( cuni cint wss c0 wo wn wa simpl wne df-ne intssuni sylbir adantl eqssd ex
    wceq orrd cvv ssv int0 sseqtr4i inteq syl5sseqr eqimss jaoi impbii ) ABZACZ
    DZAEQZUHUIQZFUJUKULUJUKGZULUJUMHUHUIUJUMIUMUIUHDZUJUMAEJUNAEKALMNOPRUKUJULU
    KECZUHUIUHSUOUHTUAUBAEUCUDUHUIUEUFUG $.
    $( [25-Jul-2011] $) $( [30-Oct-2010] $)

  $( Subclass relationship for intersection and union. $)
  intssuni2 $p |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) $=
    ( c0 wne wss cint cuni intssuni uniss sylan9ssr ) ACDABEAFAGBGAHABIJ $.
    $( [29-Jul-2006] $)

  ${
    $d x A $.  $d x B $.  $d x ps $.
    intminss.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Under subset ordering, the intersection of a restricted class
       abstraction is less than or equal to any of its members. $)
    intminss $p |- ( ( A e. B /\ ps ) -> |^| { x e. B | ph } C_ A ) $=
      ( wcel wa crab cint wss elrab intss1 sylbir ) DEGBHDACEIZGOJDKABCDEFLDOMN
      $.
      $( [7-Sep-2013] $)
  $}

  ${
    $d x A $.
    intmin2.1 $e |- A e. _V $.
    $( Any set is the smallest of all sets that include it. $)
    intmin2 $p |- |^| { x | A C_ x } = A $=
      ( cv wss cvv crab cint cab rabab inteqi wcel wceq intmin ax-mp eqtr3i ) B
      ADEZAFGZHZQAIZHBRTQAJKBFLSBMCABFNOP $.
      $( [30-Nov-2006] $) $( [20-Sep-2003] $)
  $}

  ${
    $d x A $.  $d x ps $.
    intmin3.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    intmin3.3 $e |- ps $.
    $( Under subset ordering, the intersection of a class abstraction is less
       than or equal to any of its members. $)
    intmin3 $p |- ( A e. V -> |^| { x | ph } C_ A ) $=
      ( wcel cab cint wss elabg mpbiri intss1 syl ) DEHZDACIZHZQJDKPRBGABCDEFLM
      DQNO $.
      $( [3-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Elimination of a conjunct in a class intersection. $)
    intmin4 $p |- ( A C_ |^| { x | ph } ->
                  |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) $=
      ( vy cab cint wss cv wa wcel wi wal wb ssintab simpr impbid2 imbi1d alimi
      ancr elintab albi syl sylbi vex 3bitr4g eqrdv ) CABEFZGZDCBHZGZAIZBEFZUGU
      HUKDHZUIJZKZBLZAUNKZBLZUMULJUMUGJUHAUJKZBLZUPURMZABCNUTUOUQMZBLVAUSVBBUSU
      KAUNUSUKAUJAOAUJSPQRUOUQBUAUBUCUKBUMDUDZTABUMVCTUEUF $.
      $( [31-Jul-2006] $)
  $}

  ${
    $d x z A $.  $d x z ph $.  $d x y z $.
    intab.1 $e |- A e. _V $.
    intab.2 $e |- { x | E. y ( ph /\ x = A ) } e. _V $.
    $( The intersection of a special case of a class abstraction. ` y ` may be
       free in ` ph ` and ` A ` , which can be thought of a ` ph ( y ) ` and
       ` A ( y ) ` .  Typically, ~ abrexex2 or ~ abexssex can be used to
       satisfy the second hypothesis. $)
    intab $p |- |^| { x | A. y ( ph -> A e. x ) } =
                { x | E. y ( ph /\ x = A ) } $=
      ( vz cv wcel wi wal cab wceq wa wex wsbc cvv wb ax-mp sylibr eqeq1 anbi2d
      cint exbidv cbvabv eqeltri hbe1 hbab hbeleq eleq2 imbi2d albid sbcie sbcg
      wss biimpri csb csbvarg sbceq1g mpbir jctir sbcang 19.8a ax-gen a4sbc mp2
      sbcimg mpbi syl elabsbc mpgbir intss1 hba1 hbint ax-4 com12 adantr adantl
      eleq1 sylibrd alrimiv vex elintab exlimi abssi eqssi eqtri ) ADBHZIZJZCKZ
      BLZUCZAGHZDMZNZCOZGLZAWHDMZNZCOZBLZWMWRWRWLIZWMWRUOXCWKBWRPZXDADWRIZJZCWK
      XFCKBWRWRXBQWQXAGBWNWHMZWPWTCXGWOWSAWNWHDUAUBUDUEZFUFZWHWRMZWJXFCCBWRWQCG
      BWPCUGUHUIXJWIXEAWHWRDUJUKULUMAWQGDPZXEAWPGDPZXKAAGDPZWOGDPZNZXLAXMXNXMAD
      QIZXMAREAGDQUNSUPXNGDWNUQDMZXPXQEGDQURSXPXNXQREGDWNDQUSSUTVAXPXLXOREAWOGD
      QVBSTWPWQJZGDPZXLXKJZXPXRGKXSEXRGWPCVCVDXRGDQVEVFXPXSXTREWPWQGDQVGSVHVIWQ
      GDEVJTVKWKBWRXIVJUTWRWLVLSWQGWMWPWNWMIZCCGWLWKCBGWJCVMUHVNWPWKWNWHIZJZBKY
      AWPYCBWPWKWIYBAWKWIJWOWKAWIWJCVOVPVQWOYBWIRAWNDWHVSVRVTWAWKBWNGWBWCTWDWEW
      FXHWG $.
      $( [28-Jul-2006] $)
  $}

  $( The intersection of a class containing the empty set is empty. $)
  int0el $p |- ( (/) e. A -> |^| A = (/) ) $=
    ( c0 wcel cint intss1 wss 0ss a1i eqssd ) BACZADZBBAEBKFJKGHI $.
    $( [24-Apr-2004] $)

  ${
    $d x y A $.  $d x y B $.
    $( The class intersection of the union of two classes.  Theorem 78 of
       [Suppes] p. 42. $)
    intun $p |- |^| ( A u. B ) = ( |^| A i^i |^| B ) $=
      ( vx vy cun cint cin cv wcel wi wal wa 19.26 elun imbi1i jaob bitri elint
      wo 3bitr4i albii vex anbi12i elin eqriv ) CABEZFZAFZBFZGZDHZUFIZCHZUKIZJZ
      DKZUMUHIZUMUIIZLZUMUGIUMUJIUKAIZUNJZUKBIZUNJZLZDKVADKZVCDKZLUPUSVAVCDMUOV
      DDUOUTVBSZUNJVDULVGUNUKABNOUTUNVBPQUAUQVEURVFDUMACUBZRDUMBVHRUCTDUMUFVHRU
      MUHUIUDTUE $.
      $( [22-Sep-2002] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    intpr.1 $e |- A e. _V $.
    intpr.2 $e |- B e. _V $.
    $( The intersection of a pair is the intersection of its members.  Theorem
       71 of [Suppes] p. 42. $)
    intpr $p |- |^| { A , B } = ( A i^i B ) $=
      ( vx vy cpr cint cin cv wcel wi wal wa wceq 19.26 wo vex clel4 3bitr4i
      elpr imbi1i jaob bitri albii anbi12i elint elin eqriv ) EABGZHZABIZFJZUJK
      ZEJZUMKZLZFMZUOAKZUOBKZNZUOUKKUOULKUMAOZUPLZUMBOZUPLZNZFMVCFMZVEFMZNURVAV
      CVEFPUQVFFUQVBVDQZUPLVFUNVIUPUMABFRUAUBVBUPVDUCUDUEUSVGUTVHFUOACSFUOBDSUF
      TFUOUJERUGUOABUHTUI $.
      $( [14-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The intersection of a pair is the intersection of its members.  Closed
       form of ~ intpr .  Theorem 71 of [Suppes] p. 42.  (Contributed by FL,
       27-Apr-2008.) $)
    intprg $p |- ( ( A e. V /\ B e. W ) -> |^| { A , B } = ( A i^i B ) ) $=
      ( vx vy cv cpr cint cin wceq preq1 inteqd ineq1 eqeq12d preq2 ineq2 intpr
      vex vtocl2g ) EGZFGZHZIZUAUBJZKAUBHZIZAUBJZKABHZIZABJZKEFABCDUAAKZUDUGUEU
      HULUCUFUAAUBLMUAAUBNOUBBKZUGUJUHUKUMUFUIUBBAPMUBBAQOUAUBESFSRT $.
      $( [6-Mar-2011] $) $( [27-Apr-2008] $)
  $}

  ${
    intsn.1 $e |- A e. _V $.
    $( The intersection of a singleton is its member.  Theorem 70 of [Suppes]
       p. 41. $)
    intsn $p |- |^| { A } = A $=
      ( csn cint cpr cin dfsn2 inteqi intpr inidm 3eqtri ) ACZDAAEZDAAFALMAGHAA
      BBIAJK $.
      $( [29-Sep-2002] $)
  $}

  ${
    $d x y A $.
    $( Two ways to express " ` A ` is a singleton."  See also ~ en1 , ~ en1b ,
       ~ card1 , and ~ eusn . $)
    uniintsn $p |- ( U. A = |^| A <-> E. x A = { x } ) $=
      ( vy cuni cint wceq cv wex wcel wa wal c0 inteq syl6eq adantl unieq sylib
      wne cvv wss csn wi vn0 int0 eqeq1 syl5ib imp eqtr3d ex necon3d mpi n0 cpr
      uni0 vex prss cun cin uniss simpl sseqtrd intss sstrd unipr intpr 3sstr3g
      inss1 ssun1 sstri jctir eqss uneqin bitr3i syl5bi alrimivv jca weu euabsn
      cab eleq1 abid2 eqeq1i exbii 3bitr3i unisn intsn 3eqtr4a exlimiv impbii
      eu4 ) BDZBEZFZBAGZUAZFZAHZWMWNBIZAHZWRCGZBIZJZWNWTFZUBZCKAKZJZWQWMWSXEWMB
      LRZWSWMSLRXGUCWMBLSLWMBLFZSLFWMXHJWLSLXHWLSFWMXHWLLESBLMUDNOWMXHWLLFZXHWK
      LFWMXIXHWKLDLBLPUNNWKWLLUEUFUGUHUIUJUKABULQWMXDACXBWNWTUMZBTZWMXCWNWTBAUO
      ZCUOZUPWMXKXCWMXKJZWNWTUQZWNWTURZTZXPXOTZJZXCXNXQXRXNXJDZXJEZXOXPXNXTWLYA
      XNXTWKWLXKXTWKTWMXJBUSOWMXKUTVAXKWLYATWMXJBVBOVCWNWTXLXMVDWNWTXLXMVEVFXPW
      NXOWNWTVGWNWTVHVIVJXSXOXPFXCXOXPVKWNWTVLVMQUIVNVOVPWRAVQWRAVSZWOFZAHXFWQW
      RAVRWRXAACWNWTBVTWJYCWPAYBBWOABWAWBWCWDQWPWMAWPWODWNWKWLWNXLWEBWOPWPWLWOE
      WNBWOMWNXLWFNWGWHWI $.
      $( [2-Aug-2010] $)
  $}

  ${
    intunsn.1 $e |- B e. _V $.
    $( Theorem joining a singleton to an intersection. $)
    intunsn $p |- |^| ( A u. { B } ) = ( |^| A i^i B ) $=
      ( csn cun cint cin intun intsn ineq2i eqtri ) ABDZEFAFZLFZGMBGALHNBMBCIJK
      $.
      $( [29-Sep-2002] $)
  $}

  $( Relative intersection of an empty set. $)
  rint0 $p |- ( X = (/) -> ( A i^i |^| X ) = A ) $=
    ( c0 wceq cint cin inteq ineq2d cvv int0 ineq2i inv1 eqtri syl6eq ) BCDZABE
    ZFACEZFZAOPQABCGHRAIFAQIAJKALMN $.
    $( [3-Apr-2015] $)

  ${
    $d B y $.  $d X y $.
    $( Membership in a restricted intersection. $)
    elrint $p |- ( X e. ( A i^i |^| B ) <-> ( X e. A /\ A. y e. B X e. y ) ) $=
      ( cint cin wcel wa cv wral elin elintg pm5.32i bitri ) DBCEZFGDBGZDOGZHPD
      AIGACJZHDBOKPQRADCBLMN $.
      $( [3-Apr-2015] $)

    $( Membership in a restricted intersection. $)
    elrint2 $p |- ( X e. A -> ( X e. ( A i^i |^| B ) <->
          A. y e. B X e. y ) ) $=
      ( cint cin wcel cv wral elrint baib ) DBCEFGDBGDAHGACIABCDJK $.
      $( [3-Apr-2015] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Indexed union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $c U_ $. $( Underlined big cup. $)
  $c |^|_ $. $( Underlined big cap. $)

  $( Extend class notation to include indexed union.  Note:  Historically
     (prior to 21-Oct-2005), set.mm used the notation ` U. x e. A B ` , with
     the same union symbol as ~ cuni .  While that syntax was unambiguous, it
     did not allow for LALR parsing of the syntax constructions in set.mm.  The
     new syntax uses as distinguished symbol ` U_ ` instead of ` U. ` and does
     allow LALR parsing.  Thanks to Peter Backes for suggesting this change. $)
  ciun $a class U_ x e. A B $.

  $( Extend class notation to include indexed intersection.  Note:
     Historically (prior to 21-Oct-2005), set.mm used the notation
     ` |^| x e. A B ` , with the same intersection symbol as ~ cint .  Although
     that syntax was unambiguous, it did not allow for LALR parsing of the
     syntax constructions in set.mm.  The new syntax uses a distinguished
     symbol ` |^|_ ` instead of ` |^| ` and does allow LALR parsing.  Thanks to
     Peter Backes for suggesting this change. $)
  ciin $a class |^|_ x e. A B $.

  ${
    $d x y $.  $d y A $.  $d y B $.
    $( Define indexed union.  Definition indexed union in [Stoll] p. 45.  In
       most applications, ` A ` is independent of ` x ` (although this is not
       required by the definition), and ` B ` depends on ` x ` i.e. can be read
       informally as ` B ( x ) ` .  We call ` x ` the index, ` A ` the index
       set, and ` B ` the indexed set.  In most books, ` x e. A ` is written as
       a subscript or underneath a union symbol ` U. ` .  We use a special
       union symbol ` U_ ` to make it easier to distinguish from plain class
       union.  In many theorems, you will see that ` x ` and ` A ` are in the
       same distinct variable group (meaning ` A ` cannot depend on ` x ` ) and
       that ` B ` and ` x ` do not share a distinct variable group (meaning
       that can be thought of as ` B ( x ) ` i.e. can be substituted with a
       class expression containing ` x ` ).  An alternate definition tying
       indexed union to ordinary union is ~ dfiun2 .  Theorem ~ uniiun provides
       a definition of ordinary union in terms of indexed union.  Theorems
       ~ fniunfv and ~ funiunfv are useful when ` B ` is a function. $)
    df-iun $a |- U_ x e. A B = { y | E. x e. A y e. B } $.

    $( Define indexed intersection.  Definition of [Stoll] p. 45.  See the
       remarks for its sibling operation of indexed union ~ df-iun .  An
       alternate definition tying indexed intersection to ordinary intersection
       is ~ dfiin2 .  Theorem ~ intiin provides a definition of ordinary
       intersection in terms of indexed intersection. $)
    df-iin $a |- |^|_ x e. A B = { y | A. x e. A y e. B } $.
  $}

  ${
    $d x y A $.  $d y B $.  $d y C $.
    $( Membership in indexed union. $)
    eliun $p |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) $=
      ( vy ciun wcel wrex elex rexlimivw cv wceq eleq1 rexbidv df-iun pm5.21nii
      cvv elab2g ) BACDFZGBQGZBDGZACHZBSIUATACBDIJEKZDGZACHUBEBSQUCBLUDUAACUCBD
      MNAECDORP $.
      $( [3-Sep-2003] $)

    $( Membership in indexed intersection. $)
    eliin $p |- ( A e. V -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) $=
      ( vy cv wcel wral ciin wceq eleq1 ralbidv df-iin elab2g ) FGZDHZACIBDHZAC
      IFBACDJEPBKQRACPBDLMAFCDNO $.
      $( [3-Sep-2003] $)
  $}

  ${
    $d y z A $.  $d x z B $.  $d z C $.  $d x y $.
    $( Commutation of indexed unions. $)
    iuncom $p |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C $=
      ( vz ciun cv wcel wrex rexcom eliun rexbii 3bitr4i eqriv ) FACBDEGZGZBDAC
      EGZGZFHZPIZACJZTRIZBDJZTQITSITEIZBDJZACJUEACJZBDJUBUDUEABCDKUAUFACBTDELMU
      CUGBDATCELMNATCPLBTDRLNO $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Commutation of union with indexed union.  (Contributed by Mario
       Carneiro, 18-Jan-2014.) $)
    iuncom4 $p |- U_ x e. A U. B = U. U_ x e. A B $=
      ( vy vz cuni ciun cv wcel wa wex df-rex rexbii rexcom4 bitri exbii eluni2
      wrex eliun 3bitr4i r19.41v anbi1i eqriv ) DABCFZGZABCGZFZDHZUDIZABRZUHEHZ
      IZEUFRZUHUEIUHUGIULECRZABRZUKCIZABRZULJZEKZUJUMUOUPULJZABRZEKZUSUOUTEKZAB
      RVBUNVCABULECLMUTAEBNOVAUREUPULABUAPOUIUNABEUHCQMUMUKUFIZULJZEKUSULEUFLVE
      UREVDUQULAUKBCSUBPOTAUHBUDSEUHUFQTUC $.
      $( [18-Jan-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Indexed union of a constant class, i.e. where ` B ` does not depend on
       ` x ` .  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iunconst $p |- ( A =/= (/) -> U_ x e. A B = B ) $=
      ( vy c0 wne ciun cv wcel wrex r19.9rzv eliun syl6rbbr eqrdv ) BEFZDABCGZC
      ODHZCIZRABJQPIRABKAQBCLMN $.
      $( [25-Jul-2011] $) $( [5-Sep-2004] $)

    $( Indexed intersection of a constant class, i.e. where ` B ` does not
       depend on ` x ` .  (Contributed by Mario Carneiro, 6-Feb-2015.) $)
    iinconst $p |- ( A =/= (/) -> |^|_ x e. A B = B ) $=
      ( vy c0 wne ciin cv wcel wral r19.3rzv cvv vex eliin ax-mp syl6rbbr eqrdv
      wb ) BEFZDABCGZCSDHZCIZUBABJZUATIZUBABKUALIUDUCRDMAUABCLNOPQ $.
      $( [6-Feb-2015] $)
  $}

  ${
    $d x y $.  $d y z A $.  $d x z B $.  $d z C $.
    $( Law combining indexed union with indexed intersection.  Eq.  (14),
       p. 109, in _Set Theory, with an Introduction to Descriptive Set Theory_
       by K. Kuratowski and A. Mostowski (2nd ed., 1976).  (This theorem also
       appears as the last example at
       ~ http://en.wikipedia.org/wiki/Union%5F%28set%5Ftheory%29 .)  (The proof
       was shortened by Andrew Salmon, 25-Jul-2011.) $)
    iuniin $p |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C $=
      ( vz ciin ciun cv wcel wrex wral r19.12 cvv vex eliin ax-mp eliun 3imtr4i
      wb rexbii ralbii ssriv ) FACBDEGZHZBDACEHZGZFIZUDJZACKZUHUFJZBDLZUHUEJUHU
      GJZUHEJZBDLZACKUNACKZBDLUJULUNABCDMUIUOACUHNJZUIUOTFOZBUHDENPQUAUKUPBDAUH
      CERUBSAUHCUDRUQUMULTURBUHDUFNPQSUC $.
      $( [25-Jul-2011] $) $( [17-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss1 $p |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) $=
      ( vy wss ciun cv wcel wrex ssrexv eliun 3imtr4g ssrdv ) BCFZEABDGZACDGZOE
      HZDIZABJSACJRPIRQISABCKARBDLARCDLMN $.
      $( [25-Jul-2011] $) $( [10-Dec-2004] $)

    $( Subclass theorem for indexed union. $)
    iinss1 $p |- ( A C_ B -> |^|_ x e. B C C_ |^|_ x e. A C ) $=
      ( vy wss ciin cv wcel wral ssralv cvv wb vex eliin ax-mp 3imtr4g ssrdv )
      BCFZEACDGZABDGZSEHZDIZACJZUCABJZUBTIZUBUAIZUCABCKUBLIZUFUDMENZAUBCDLOPUHU
      GUEMUIAUBBDLOPQR $.
      $( [24-Jan-2012] $)

    $( Equality theorem for indexed union. $)
    iuneq1 $p |- ( A = B -> U_ x e. A C = U_ x e. B C ) $=
      ( wss wa ciun wceq iunss1 anim12i eqss 3imtr4i ) BCEZCBEZFABDGZACDGZEZPOE
      ZFBCHOPHMQNRABCDIACBDIJBCKOPKL $.
      $( [27-Jun-1998] $)

    $( Equality theorem for restricted existential quantifier. $)
    iineq1 $p |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) $=
      ( vy wceq cv wcel wral cab ciin raleq abbidv df-iin 3eqtr4g ) BCFZEGDHZAB
      IZEJQACIZEJABDKACDKPRSEQABCLMAEBDNAECDNO $.
      $( [27-Jun-1998] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Subclass theorem for indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    ss2iun $p |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) $=
      ( vy wss wral ciun cv wcel wrex ssel ralimi rexim syl eliun 3imtr4g ssrdv
      wi ) CDFZABGZEABCHZABDHZUAEIZCJZABKZUDDJZABKZUDUBJUDUCJUAUEUGSZABGUFUHSTU
      IABCDUDLMUEUGABNOAUDBCPAUDBDPQR $.
      $( [25-Jul-2011] $) $( [26-Nov-2003] $)

    $( Equality theorem for indexed union. $)
    iuneq2 $p |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) $=
      ( wss wral wa ciun wceq ss2iun anim12i eqss ralbii r19.26 bitri 3imtr4i )
      CDEZABFZDCEZABFZGZABCHZABDHZEZUCUBEZGCDIZABFZUBUCIRUDTUEABCDJABDCJKUGQSGZ
      ABFUAUFUHABCDLMQSABNOUBUCLP $.
      $( [22-Oct-2003] $)

    $( Equality theorem for indexed intersection.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iineq2 $p |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( vy wceq wral cv wcel cab ciin wb eleq2 ralimi syl abbidv df-iin 3eqtr4g
      ralbi ) CDFZABGZEHZCIZABGZEJUBDIZABGZEJABCKABDKUAUDUFEUAUCUELZABGUDUFLTUG
      ABCDUBMNUCUEABSOPAEBCQAEBDQR $.
      $( [25-Jul-2011] $) $( [22-Oct-2003] $)
  $}

  ${
    iuneq2i.1 $e |- ( x e. A -> B = C ) $.
    $( Equality inference for indexed union. $)
    iuneq2i $p |- U_ x e. A B = U_ x e. A C $=
      ( wceq ciun iuneq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)

    $( Equality inference for indexed intersection. $)
    iineq2i $p |- |^|_ x e. A B = |^|_ x e. A C $=
      ( wceq ciin iineq2 mprg ) CDFABCGABDGFABABCDHEI $.
      $( [22-Oct-2003] $)
  $}

  ${
    iineq2d.1 $e |- ( ph -> A. x ph ) $.
    iineq2d.2 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed intersection. $)
    iineq2d $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( wceq wral ciin cv wcel ex ralrimi iineq2 syl ) ADEHZBCIBCDJBCEJHAQBCFAB
      KCLQGMNBCDEOP $.
      $( [7-Dec-2011] $)
  $}

  ${
    $d x ph $.
    iuneq2dv.1 $e |- ( ( ph /\ x e. A ) -> B = C ) $.
    $( Equality deduction for indexed union. $)
    iuneq2dv $p |- ( ph -> U_ x e. A B = U_ x e. A C ) $=
      ( wceq wral ciun ralrimiva iuneq2 syl ) ADEGZBCHBCDIBCEIGAMBCFJBCDEKL $.
      $( [5-Oct-2006] $) $( [3-Aug-2004] $)

    $( Equality deduction for indexed intersection. $)
    iineq2dv $p |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) $=
      ( ax-17 iineq2d ) ABCDEABGFH $.
      $( [3-Jan-2007] $) $( [3-Aug-2004] $)
  $}

  ${
    $d w z A $.  $d w z B $.  $d w x y z $.
    hbiun.1 $e |- ( z e. A -> A. y z e. A ) $.
    hbiun.2 $e |- ( z e. B -> A. y z e. B ) $.
    $( Bound-variable hypothesis builder for indexed union.  (Contributed by
       Mario Carneiro, 25-Jan-2014.) $)
    hbiun $p |- ( z e. U_ x e. A B -> A. y z e. U_ x e. A B ) $=
      ( vw ciun cv wcel wrex cab df-iun hblem hbrex hbab hbxfreq ) BCADEIHJEKZA
      DLZHMAHDENTBHCSBADBCADFOBCHEGOPQR $.
      $( [25-Jan-2014] $)

    $( Bound-variable hypothesis builder for indexed intersection.
       (Contributed by Mario Carneiro, 25-Jan-2014.) $)
    hbiin $p |- ( z e. |^|_ x e. A B -> A. y z e. |^|_ x e. A B ) $=
      ( vw ciin cv wcel wral cab df-iin hblem hbral hbab hbxfreq ) BCADEIHJEKZA
      DLZHMAHDENTBHCSBADBCADFOBCHEGOPQR $.
      $( [25-Jan-2014] $)
  $}

  ${
    $d z A $.  $d z B $.  $d x y z $.
    $( Bound-variable hypothesis builder for indexed union. $)
    hbiu1 $p |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) $=
      ( vz ciun cv wcel wrex cab df-iun hbre1 hbab hbxfreq ) ABACDFEGDHZACIZEJA
      ECDKPAEBOACLMN $.
      $( [12-Oct-2003] $)

    $( Bound-variable hypothesis builder for indexed intersection. $)
    hbii1 $p |- ( y e. |^|_ x e. A B -> A. x y e. |^|_ x e. A B ) $=
      ( vz ciin cv wcel wral cab df-iin hbra1 hbab hbxfreq ) ABACDFEGDHZACIZEJA
      ECDKPAEBOACLMN $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C z $.  $d w x y z $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    dfiun2g $p |- ( A. x e. A B e. C ->
                  U_ x e. A B = U. { y | E. x e. A y = B } ) $=
      ( vz wcel wral ciun cv wceq wrex cab cuni wa wex hbra1 wb ra4 syl6bb syl6
      clel3g rexbida rexcom4 r19.41v exbii exancom bitri eliun eluniab 3bitr4g
      imp eqrdv ) DEGZACHZFACDIZBJZDKZACLZBMNZUOFJZDGZACLZVAUQGZUSOBPZVAUPGVAUT
      GUOVCURVDOZACLZBPZVEUOVCVFBPZACLVHUOVBVIACUNACQUOAJCGZVBVIRZUOVJUNVKUNACS
      BVADEUBUAULUCVFABCUDTVHUSVDOZBPVEVGVLBURVDACUEUFUSVDBUGUHTAVACDUIUSBVAUJU
      KUM $.
      $( [25-Jul-2011] $) $( [23-Mar-2006] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.
    dfiun2.1 $e |- B e. _V $.
    $( Alternate definition of indexed union when ` B ` is a set.  Definition
       15(a) of [Suppes] p. 44.  (Unnecessary distinct variable restrictions
       were removed by David Abernethy, 19-Jun-2012.) $)
    dfiun2 $p |- U_ x e. A B = U. { y | E. x e. A y = B } $=
      ( cvv wcel ciun cv wceq wrex cab cuni dfiun2g a1i mprg ) DFGZACDHBIDJACKB
      LMJACABCDFNQAICGEOP $.
      $( [19-Jun-2012] $) $( [27-Jun-1998] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w C $.  $d w x y z $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       (Contributed by Jeff Hankins, 27-Aug-2009.) $)
    dfiin2g $p |- ( A. x e. A B e. C
               -> |^|_ x e. A B = |^| { y | E. x e. A y = B } ) $=
      ( vw vz wcel wral cv cab wceq wrex wi wal ciin df-ral wb eqeq1 albii cint
      eleq2 biimprcd alrimiv eqid imbi12d cla4gv mpii impbid2 imim2i alimi albi
      pm5.74d syl sylbi alcom 19.21v 3bitr2ri r19.23v vex rexbidv imbi1i bitr4i
      elab bitri syl6bb syl5bb abbidv df-iin df-int 3eqtr4g ) DEHZACIZFJZDHZACI
      ZFKGJZBJZDLZACMZBKZHZVNVQHZNZGOZFKACDPWAUAVMVPWEFVPAJCHZVONZAOZVMWEVOACQV
      MWHWFVQDLZWCNZGOZNZAOZWEVMWFVLNZAOZWHWMRZVLACQWOWGWLRZAOWPWNWQAWNWFVOWKVL
      VOWKRWFVLVOWKVOWJGWIWCVOVQDVNUBZUCUDVLWKDDLZVODUEWJWSVONGDEWIWIWSWCVOVQDD
      SWRUFUGUHUIUJUMUKWGWLAULUNUOWMWJACIZGOZWEXAWFWJNZAOZGOXBGOZAOWMWTXCGWJACQ
      TXBAGUPXDWLAWFWJGUQTURWTWDGWTWIACMZWCNWDWIWCACUSWBXEWCVTXEBVQGUTVRVQLVSWI
      ACVRVQDSVAVDVBVCTVEVFVGVHAFCDVIFGWAVJVK $.
      $( [20-Sep-2011] $) $( [27-Aug-2009] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d w x y z $.
    dfiin2.1 $e |- B e. _V $.
    $( Alternate definition of indexed intersection when ` B ` is a set.
       Definition 15(b) of [Suppes] p. 44.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    dfiin2 $p |- |^|_ x e. A B = |^| { y | E. x e. A y = B } $=
      ( vz ciin cv wceq wrex cab cint wcel wral wi wal clel4 ralbii ralcom4 cvv
      r19.23v albii 3bitri wb vex eliin ax-mp elintab 3bitr4i eqriv ) FACDGZBHZ
      DIZACJZBKLZFHZDMZACNZUNUPULMZOZBPZUPUKMZUPUOMURUMUSOZBPZACNVCACNZBPVAUQVD
      ACBUPDEQRVCABCSVEUTBUMUSACUAUBUCUPTMVBURUDFUEZAUPCDTUFUGUNBUPVFUHUIUJ $.
      $( [25-Jul-2011] $) $( [28-Jun-1998] $)
  $}

  ${
    $d w y A $.  $d w x A $.  $d w z B $.  $d w z C $.
    cbviun.1 $e |- ( z e. B -> A. y z e. B ) $.
    cbviun.2 $e |- ( z e. C -> A. x z e. C ) $.
    cbviun.3 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       25-Jul-2011.) $)
    cbviun $p |- U_ x e. A B = U_ y e. A C $=
      ( vw ciun cv wcel wrex hblem wceq eleq2d cbvrex eliun 3bitr4i eqriv ) JAD
      EKZBDFKZJLZEMZADNUDFMZBDNUDUBMUDUCMUEUFABDBCJEGOACJFHOALBLPEFUDIQRAUDDESB
      UDDFSTUA $.
      $( [25-Jul-2011] $) $( [26-Mar-2006] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviin $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vw ciin cv wcel wral hblem wceq cvv wb eliin ax-mp eleq2d 3bitr4i eqriv
      cbvral vex ) JADEKZBDFKZJLZEMZADNZUHFMZBDNZUHUFMZUHUGMZUIUKABDBCJEGOACJFH
      OALBLPEFUHIUAUDUHQMZUMUJRJUEZAUHDEQSTUOUNULRUPBUHDFQSTUBUC $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x A $.  $d y A $.  $d y z B $.  $d x z C $.
    cbviunv.1 $e |- ( x = y -> B = C ) $.
    $( Rule used to change the bound variables in an indexed union, with the
       substitution specified implicitly by the hypothesis. $)
    cbviunv $p |- U_ x e. A B = U_ y e. A C $=
      ( vz cv wcel ax-17 cbviun ) ABGCDEGHZDIBJLEIAJFK $.
      $( [25-Jul-2011] $) $( [15-Sep-2003] $)

    $( Change bound variables in an indexed intersection.  (Contributed by Jeff
       Hankins, 26-Aug-2009.) $)
    cbviinv $p |- |^|_ x e. A B = |^|_ y e. A C $=
      ( vz cv wcel ax-17 cbviin ) ABGCDEGHZDIBJLEIAJFK $.
      $( [26-Aug-2009] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed union.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunss $p |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) $=
      ( vy ciun wss cv wcel wrex cab wal wral df-iun sseq1i abss ralbii ralcom4
      wi dfss2 r19.23v albii 3bitrri 3bitri ) ABCFZDGEHZCIZABJZEKZDGUHUFDIZSZEL
      ZCDGZABMZUEUIDAEBCNOUHEDPUNUGUJSZELZABMUOABMZELULUMUPABECDTQUOAEBRUQUKEUG
      UJABUAUBUCUD $.
      $( [25-Jul-2011] $) $( [13-Sep-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed union.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    ssiun $p |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) $=
      ( vy wss wrex ciun cv wcel ssel reximi r19.37av syl eliun syl6ibr ssrdv
      wi ) DCFZABGZEDABCHZTEIZDJZUBCJZABGZUBUAJTUCUDRZABGUCUERSUFABDCUBKLUCUDAB
      MNAUBBCOPQ $.
      $( [25-Jul-2011] $) $( [3-Sep-2003] $)
  $}

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( Identity law for subset of an indexed union.  (The proof was shortened
       by Andrew Salmon, 25-Jul-2011.) $)
    ssiun2 $p |- ( x e. A -> B C_ U_ x e. A B ) $=
      ( vy cv wcel ciun wrex ra4e ex eliun syl6ibr ssrdv ) AEBFZDCABCGZNDEZCFZQ
      ABHZPOFNQRQABIJAPBCKLM $.
      $( [25-Jul-2011] $) $( [12-Oct-2003] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    ssiun2s.1 $e |- ( x = C -> B = D ) $.
    $( Subset relationship for an indexed union. $)
    ssiun2s $p |- ( C e. A -> D C_ U_ x e. A B ) $=
      ( vy ciun wss cv wcel ax-17 hbiu1 hbss wceq sseq1d ssiun2 vtoclgaf ) CABC
      HZIESIAGDBGJZDKALAGESTEKALAGBCMNAJDOCESFPABCQR $.
      $( [26-Oct-2003] $)
  $}

  ${
    $d x y $.  $d x B $.  $d y C $.  $d x D $.
    $( A subclass condition on the members of two indexed classes ` C ( x ) `
       and ` D ( y ) ` that implies a subclass relation on their indexed
       unions.  Generalization of Proposition 8.6 of [TakeutiZaring] p. 59.
       Compare ~ uniss2 . $)
    iunss2 $p |- ( A. x e. A E. y e. B C C_ D ->
                 U_ x e. A C C_ U_ y e. B D ) $=
      ( wss wrex wral ciun ssiun ralimi iunss sylibr ) EFGBDHZACIEBDFJZGZACIACE
      JPGOQACBDFEKLACEPMN $.
      $( [9-Dec-2004] $)
  $}

  ${
    $d y z A $.  $d x y z B $.  $d z ph $.
    $( The indexed union of a restricted class abstraction. $)
    iunrab $p |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } $=
      ( vz cv wsbc wrex crab wcel cab ciun df-rab ax-17 hbs1 hbrex wceq sbequ12
      wa rexbidv cbvrab eliun elrabsf rexbii r19.42v 3bitri abbi2i 3eqtr4ri ) A
      CFGZHZBDIZFEJUJEKZULTZFLABDIZCEJBDACEJZMZULFENUOULCFBEBGZEKZCOZUSFOUOFOUK
      CBDURDKCOACFPQCGUJRAUKBDACFSUAUBUNFUQUJUQKUJUPKZBDIUMUKTZBDIUNBUJDUPUCVAV
      BBDACBUJEUTUDUEUMUKBDUFUGUHUI $.
      $( [3-Jan-2004] $)
  $}

  ${
    $d y A $.  $d x y $.
    $( The indexed union of a class abstraction. $)
    iunab $p |- U_ x e. A { y | ph } = { y | E. x e. A ph } $=
      ( cvv crab ciun wrex cab iunrab wceq cv wcel rabab a1i iuneq2i 3eqtr3i )
      BDACEFZGABDHZCEFBDACIZGSCIABCDEJBDRTRTKBLDMACNOPSCNQ $.
      $( [27-Dec-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x D $.
    iunxdif2.1 $e |- ( x = y -> C = D ) $.
    $( Indexed union with a class difference as its index. $)
    iunxdif2 $p |- ( A. x e. A E. y e. ( A \ B ) C C_ D ->
                 U_ y e. ( A \ B ) D = U_ x e. A C ) $=
      ( wss cdif wrex wral ciun wceq iunss2 difss iunss1 ax-mp cbviunv sseqtr4i
      wa jctil eqss sylibr ) EFHBCDIZJACKZBUDFLZACELZHZUGUFHZTUFUGMUEUIUHABCUDE
      FNUFBCFLZUGUDCHUFUJHCDOBUDCFPQABCEFGRSUAUFUGUBUC $.
      $( [10-Dec-2004] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d x y z $.
    ssiinf.1 $e |- ( y e. C -> A. x y e. C ) $.
    $( Subset theorem for an indexed intersection.  (Contributed by FL,
       15-Oct-2012.) $)
    ssiinf $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( ciin wss cv wcel wi wal wral dfss2 cvv wb vex eliin ax-mp albii ralcom4
      imbi2i ralbii r19.21 3bitrri 3bitri ) EACDGZHBIZEJZUHUGJZKZBLUIUHDJZACMZK
      ZBLZEDHZACMZBEUGNUKUNBUJUMUIUHOJUJUMPBQAUHCDORSUBTUQUIULKZBLZACMURACMZBLU
      OUPUSACBEDNUCURABCUAUTUNBUIULACFUDTUEUF $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset theorem for an indexed intersection. $)
    ssiin $p |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) $=
      ( vy cv wcel ax-17 ssiinf ) AEBCDEFDGAHI $.
      $( [15-Oct-2003] $)
  $}

  ${
    $d x y C $.  $d y A $.  $d y B $.
    $( Subset implication for an indexed intersection.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    iinss $p |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) $=
      ( vy wss wrex ciin cv wcel wral cvv wb vex eliin ax-mp wi reximi r19.36av
      ssel syl syl5bi ssrdv ) CDFZABGZEABCHZDEIZUFJZUGCJZABKZUEUGDJZUGLJUHUJMEN
      AUGBCLOPUEUIUKQZABGUJUKQUDULABCDUGTRUIUKABSUAUBUC $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d A y $.  $d B y $.  $d x y $.
    $( An indexed intersection is included in any of its members.  (Contributed
       by FL, 15-Oct-2012.) $)
    iinss2 $p |- ( x e. A -> |^|_ x e. A B C_ B ) $=
      ( vy cv wcel ciin wral wi cvv wb vex eliin ax-mp ra4 sylbi com12 ssrdv )
      AEBFZDABCGZCDEZTFZSUACFZUBUCABHZSUCIUAJFUBUDKDLAUABCJMNUCABOPQR $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y A $.
    $( Class union in terms of indexed union.  Definition in [Stoll] p. 43. $)
    uniiun $p |- U. A = U_ x e. A x $=
      ( vy cuni cv wcel wrex cab ciun dfuni2 df-iun eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( Class intersection in terms of indexed intersection.  Definition in
       [Stoll] p. 44. $)
    intiin $p |- |^| A = |^|_ x e. A x $=
      ( vy cint cv wcel wral cab ciin dfint2 df-iin eqtr4i ) BDCEAEZFABGCHABMIC
      ABJACBMKL $.
      $( [28-Jun-1998] $)

    $( An indexed union of singletons recovers the index set. $)
    iunid $p |- U_ x e. A { x } = A $=
      ( vy cv csn ciun wceq cab wrex df-sn equcom abbii eqtri a1i iuneq2i iunab
      wcel risset abid2 eqtr3i 3eqtri ) ABADZEZFABUBCDZGZCHZFUEABIZCHZBABUCUFUC
      UFGUBBQUCUDUBGZCHUFCUBJUIUECCAKLMNOUEACBPUDBQZCHUHBUJUGCAUDBRLCBSTUA $.
      $( [18-Dec-2008] $) $( [6-Sep-2005] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( An indexed union of the empty set is empty.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.) $)
    iun0 $p |- U_ x e. A (/) = (/) $=
      ( vy c0 ciun cv wcel wrex wn noel a1i nrex eliun mtbir 2false eqriv ) CAB
      DEZDCFZQGZRDGZSTABHTABTIAFBGRJZKLARBDMNUAOP $.
      $( [25-Jul-2011] $) $( [26-Mar-2003] $)

    $( An empty indexed union is empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    0iun $p |- U_ x e. (/) A = (/) $=
      ( vy c0 ciun cv wcel wrex rex0 eliun mtbir noel 2false eqriv ) CADBEZDCFZ
      OGZPDGQPBGZADHRAIAPDBJKPLMN $.
      $( [25-Jul-2011] $) $( [4-Dec-2004] $)

    $( An empty indexed intersection is the universal class. $)
    0iin $p |- |^|_ x e. (/) A = _V $=
      ( vy c0 ciin cv wcel wral cab cvv df-iin vex ral0 2th abbi2i eqtr4i ) ADB
      ECFZBGZADHZCIJACDBKSCJQJGSCLRAMNOP $.
      $( [20-Oct-2005] $)

    $( Indexed intersection with a universal index class.  When ` A ` doesn't
       depend on ` x ` , this evaluates to ` A ` by ~ 19.3 and ~ abid2 .  When
       ` A = x ` , this evaluates to ` (/) ` by ~ intiin and ~ intv . $)
    viin $p |- |^|_ x e. _V A = { y | A. x y e. A } $=
      ( cvv ciin cv wcel wral cab wal df-iin ralv abbii eqtri ) ADCEBFCGZADHZBI
      OAJZBIABDCKPQBOALMN $.
      $( [11-Sep-2008] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( There is a non-empty class in an indexed collection ` B ( x ) ` iff the
       indexed union of them is non-empty.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    iunn0 $p |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) $=
      ( vy cv wcel wex wrex c0 wne rexcom4 eliun exbii bitr4i n0 rexbii 3bitr4i
      ciun ) DEZCFZDGZABHZSABCRZFZDGZCIJZABHUCIJUBTABHZDGUETADBKUDUGDASBCLMNUFU
      AABDCOPDUCOQ $.
      $( [25-Jul-2011] $) $( [15-Oct-2003] $)
  $}

  ${
    $d y z A $.  $d z ph $.  $d x y z $.
    $( Indexed intersection of a class builder. $)
    iinab $p |- |^|_ x e. A { y | ph } = { y | A. x e. A ph } $=
      ( vz cab wcel wral wsbc ciin df-clab ralbii abbii df-iin ax-17 hbs1 hbral
      cv wceq sbequ12 ralbidv cbvab 3eqtr4i ) ERZACFZGZBDHZEFACUDIZBDHZEFBDUEJA
      BDHZCFUGUIEUFUHBDAECKLMBEDUENUJUICEUJEOUHCBDBRDGCOACEPQCRUDSAUHBDACETUAUB
      UC $.
      $( [6-Dec-2011] $)

    $d x A $.  $d x B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab $p |- ( A =/= (/)
          -> |^|_ x e. A { y e. B | ph } = { y e. B | A. x e. A ph } ) $=
      ( c0 wne cv wcel wa wral cab crab ciin r19.28zv abbidv df-rab a1i iineq2i
      wceq iinab eqtri 3eqtr4g ) DFGZCHEIZAJZBDKZCLZUEABDKZJZCLBDACEMZNZUICEMUD
      UGUJCUEABDOPULBDUFCLZNUHBDUKUMUKUMTBHDIACEQRSUFBCDUAUBUICEQUC $.
      $( [6-Dec-2011] $)

    $d y B $.
    $( Indexed intersection of a restricted class builder. $)
    iinrab2 $p |- ( |^|_ x e. A { y e. B | ph } i^i B )
                      = { y e. B | A. x e. A ph } $=
      ( crab ciin cin wral wceq c0 cvv iineq1 0iin syl6eq incom inv1 eqtri rzal
      ineq1d rabid2 ralcom bitr2i sylib wne iinrab wss ssrab2 dfss mpbi syl6eqr
      eqtrd pm2.61ine ) BDACEFZGZEHZABDIZCEFZJDKDKJZUPEURUSUPLEHZEUSUOLEUSUOBKU
      NGLBDKUNMBUNNOTUTELHELEPEQROUSACEIZBDIZEURJZVABDSVCUQCEIVBUQCEUAACBEDUBUC
      UDULDKUEZUPUREHZURVDUOUREABCDEUFTUREUGURVEJUQCEUHUREUIUJUKUM $.
      $( [6-Dec-2011] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y C $.
    $( Indexed union of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iunin2 $p |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) $=
      ( vy cin ciun cv wcel wrex r19.42v elin rexbii eliun anbi2i 3bitr4i eqriv
      wa ) EABCDFZGZCABDGZFZEHZSIZABJZUCCIZUCUAIZRZUCTIUCUBIUFUCDIZRZABJUFUIABJ
      ZRUEUHUFUIABKUDUJABUCCDLMUGUKUFAUCBDNOPAUCBSNUCCUALPQ $.
      $( [26-Mar-2004] $)

    $( Indexed intersection of union.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem. $)
    iinun2 $p |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) $=
      ( vy cun ciin cv wcel wral wo r19.32v elun ralbii cvv eliin ax-mp 3bitr4i
      wb vex orbi2i eqriv ) EABCDFZGZCABDGZFZEHZUCIZABJZUGCIZUGUEIZKZUGUDIZUGUF
      IUJUGDIZKZABJUJUNABJZKUIULUJUNABLUHUOABUGCDMNUKUPUJUGOIZUKUPSETZAUGBDOPQU
      ARUQUMUISURAUGBUCOPQUGCUEMRUB $.
      $( [19-Aug-2004] $)

    $( Indexed union of class difference.  Generalization of half of theorem
       "De Morgan's laws" in [Enderton] p. 31.  Use ~ intiin to recover
       Enderton's theorem. $)
    iundif2 $p |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) $=
      ( vy cdif ciun ciin cv wcel wrex wn wa eldif rexbii r19.42v rexnal cvv wb
      wral vex eliin ax-mp xchbinxr anbi2i 3bitri eliun 3bitr4i eqriv ) EABCDFZ
      GZCABDHZFZEIZUJJZABKZUNCJZUNULJZLZMZUNUKJUNUMJUPUQUNDJZLZMZABKUQVBABKZMUT
      UOVCABUNCDNOUQVBABPVDUSUQVDVAABTZURVAABQUNRJURVESEUAAUNBDRUBUCUDUEUFAUNBU
      JUGUNCULNUHUI $.
      $( [19-Aug-2004] $)
  $}

  ${
    $d x B $.  $d y C $.  $d x D $.  $d x y $.
    $( Rearrange indexed unions over intersection. $)
    2iunin $p |- U_ x e. A U_ y e. B ( C i^i D )
        = ( U_ x e. A C i^i U_ y e. B D ) $=
      ( cin ciun wceq cv wcel iunin2 a1i iuneq2i incom eqtri 3eqtri ) ACBDEFGHZ
      HACEBDFHZGZHZSACEHZGZUBSGACRTRTIAJCKZBDEFLMNUAACSEGZHUCACTUETUEIUDESOMNAC
      SELPSUBOQ $.
      $( [18-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d x y z C $.  $d x y z D $.
    $( A disjoint collection yields disjoint indexed unions for disjoint index
       sets.  (Contributed by Mario Carneiro, 26-Mar-2015.) $)
    disjiun $p |- ( ( A. y E* x ( x e. A /\ y e. B ) /\
      ( C C_ A /\ D C_ A /\ ( C i^i D ) = (/) ) ) ->
        ( U_ x e. C B i^i U_ x e. D B ) = (/) ) $=
      ( vz cv wcel wa wal wss cin c0 wceq wi wrex wral impcom syl wmo ciun elin
      w3a wne eliun anbi12i bitri wex ax-17 mo2 an4 impexp df-ral bitr4i ssralv
      wn albii r19.29 id eleq1d biimpcd rexlimiv ex expimpd anim12d inelcm syl6
      imp sylbi exlimiv syl5bi exp3a necon2bd impancom 3impa alimdv eq0 sylibr
      ) AHZCIZBHZDIZJZAUAZBKZECLZFCLZEFMZNOZUDZJWBAEDUBZAFDUBZMZIZUQZBKZWNNOWKW
      FWQWKWEWPBWGWHWJWEWPPWGWHJZWEWJWPWRWEJZWOWINWOWCAEQZWCAFQZJZWSWINUEZWOWBW
      LIZWBWMIZJXBWBWLWMUCXDWTXEXAAWBEDUFAWBFDUFUGUHWEWRXBXCPZWEWDVTGHZOZPZAKZG
      UIZWRXFPWDAGWDGUJUKXKWRXBXCWRXBJWGWTJZWHXAJZJZXKXCWGWHWTXAULXJXNXCPZGXJWC
      XHPZACRZXOXJWAXPPZAKXQXIXRAWAWCXHUMURXPACUNUOXQXNXGEIZXGFIZJXCXQXLXSXMXTX
      QWGWTXSXQWGJXPAERZWTXSPWGXQYAXPAECUPSYAWTXSYAWTJXPWCJZAEQXSXPWCAEUSYBXSAE
      YBVTEIXSYBVTXGEXPWCXHXPUTVIZVAVBVCTVDTVEXQWHXAXTXQWHJXPAFRZXAXTPWHXQYDXPA
      FCUPSYDXAXTYDXAJYBAFQXTXPWCAFUSYBXTAFYBVTFIXTYBVTXGFYCVAVBVCTVDTVEVFXGEFV
      GVHVJVKVLVMVJSVLVNVOVPVQSBWNVRVS $.
      $( [26-Mar-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.
    $( Indexed intersection of class difference.  Generalization of half of
       theorem "De Morgan's laws" in [Enderton] p. 31.  Use ~ uniiun to recover
       Enderton's theorem. $)
    iindif2 $p |- ( A =/= (/) ->
                 |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) $=
      ( vy c0 wne cdif ciin ciun cv wcel wn wa r19.28zv eldif bicomi ralbii cvv
      wral wrex ralnex eliun xchbinxr anbi2i 3bitr3g wb vex eliin ax-mp 3bitr4g
      eqrdv ) BFGZEABCDHZIZCABDJZHZUMEKZUNLZABTZURCLZURUPLZMZNZURUOLZURUQLUMVAU
      RDLZMZNZABTVAVGABTZNUTVDVAVGABOVHUSABUSVHURCDPQRVIVCVAVIVFABUAVBVFABUBAUR
      BDUCUDUEUFURSLVEUTUGEUHAURBUNSUIUJURCUPPUKUL $.
      $( [5-Oct-2006] $)

    $( Indexed intersection of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem.  (Contributed by Mario Carneiro, 19-Mar-2015.) $)
    iinin2 $p |- ( A =/= (/) ->
      |^|_ x e. A ( B i^i C ) = ( B i^i |^|_ x e. A C ) ) $=
      ( vy c0 wne cin ciin cv wcel wral wa r19.28zv elin wb eliin ax-mp 3bitr4g
      cvv ralbii vex anbi2i eqrdv ) BFGZEABCDHZIZCABDIZHZUEEJZUFKZABLZUJCKZUJUH
      KZMZUJUGKZUJUIKUEUMUJDKZMZABLUMUQABLZMULUOUMUQABNUKURABUJCDOUAUNUSUMUJTKZ
      UNUSPEUBZAUJBDTQRUCSUTUPULPVAAUJBUFTQRUJCUHOSUD $.
      $( [19-Mar-2015] $)

    $( Indexed intersection of intersection.  Generalization of half of theorem
       "Distributive laws" in [Enderton] p. 30.  Use ~ intiin to recover
       Enderton's theorem. $)
    iinin1 $p |- ( A =/= (/) ->
      |^|_ x e. A ( C i^i B ) = ( |^|_ x e. A C i^i B ) ) $=
      ( c0 wne cin ciin iinin2 wceq cv wcel incom a1i iineq2i 3eqtr4g ) BEFABCD
      GZHCABDHZGABDCGZHRCGABCDIABSQSQJAKBLDCMNORCMP $.
      $( [19-Mar-2015] $)
  $}

  ${
    $d A x y $.  $d X x y $.
    $( Relative intersection of an empty family. $)
    riin0 $p |- ( X = (/) -> ( A i^i |^|_ x e. X S ) = A ) $=
      ( c0 wceq ciin cin iineq1 ineq2d cvv 0iin ineq2i inv1 eqtri syl6eq ) DEFZ
      BADCGZHBAECGZHZBQRSBADECIJTBKHBSKBACLMBNOP $.
      $( [3-Apr-2015] $)

    $( Relative intersection of a nonempty family. $)
    riinn0 $p |- ( ( A. x e. X S C_ A /\ X =/= (/) ) ->
        ( A i^i |^|_ x e. X S ) = |^|_ x e. X S ) $=
      ( wss wral c0 wne wa ciin incom wceq wrex r19.2z ancoms iinss df-ss sylib
      cin syl syl5eq ) CBEZADFZDGHZIZBADCJZSUFBSZUFBUFKUEUFBEZUGUFLUEUBADMZUHUD
      UCUIUBADNOADCBPTUFBQRUA $.
      $( [3-Apr-2015] $)

    $( Relative intersection of a relative abstraction. $)
    riinrab $p |- ( A i^i |^|_ x e. X { y e. A | ph } ) =
        { y e. A | A. x e. X ph } $=
      ( crab ciin cin wral wceq c0 riin0 rzal ralrimivw rabid2 sylibr eqtrd wne
      wss ssrab2 rgenw riinn0 mpan iinrab pm2.61ine ) DBEACDFZGZHZABEIZCDFZJEKE
      KJZUHDUJBDUFELUKUICDIDUJJUKUICDABEMNUICDOPQEKRZUHUGUJUFDSZBEIULUHUGJUMBEA
      CDTUABDUFEUBUCABCEDUDQUE $.
      $( [3-Apr-2015] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d y V $.
    iinxsng.1 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed intersection's
       argument. $)
    iinxsng $p |- ( A e. V -> |^|_ x e. { A } B = C ) $=
      ( vy wcel csn ciin cv wceq wi wal wral cvv wb vex eliin ax-mp df-ral elsn
      imbi1i albii 3bitri ax-17 eleq2d ceqsalg syl5bb eqrdv ) BEHZGABIZCJZDGKZU
      MHZAKZBLZUNCHZMZANZUKUNDHZUOURAULOZUPULHZURMZANUTUNPHUOVBQGRAUNULCPSTURAU
      LUAVDUSAVCUQURABUBUCUDUEURVAABEVAAUFUQCDUNFUGUHUIUJ $.
      $( [15-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y C $.  $d x y D $.  $d x y E $.  $d y V $.
    $d y W $.
    iinxprg.1 $e |- ( x = A -> C = D ) $.
    iinxprg.2 $e |- ( x = B -> C = E ) $.
    $( Indexed intersection with an unordered pair index. $)
    iinxprg $p |- ( ( A e. V /\ B e. W )
        -> |^|_ x e. { A , B } C = ( D i^i E ) ) $=
      ( vy wcel wa cv wceq wi wal ax-17 eleq2d ceqsalg cpr ciin cin bi2anan9 wb
      wral cvv vex eliin ax-mp df-ral elpr imbi1i jaob bitri albii 19.26 3bitri
      wo elin 3bitr4g eqrdv ) BGLZCHLZMZKABCUAZDUBZEFUCZVEANZBOZKNZDLZPZAQZVICO
      ZVLPZAQZMZVKELZVKFLZMVKVGLZVKVHLVCVNVSVDVQVTVLVSABGVSARVJDEVKISTVLVTACHVT
      ARVODFVKJSTUDWAVLAVFUFZVIVFLZVLPZAQZVRVKUGLWAWBUEKUHAVKVFDUGUIUJVLAVFUKWE
      VMVPMZAQVRWDWFAWDVJVOUSZVLPWFWCWGVLVIBCAUHULUMVJVLVOUNUOUPVMVPAUQUOURVKEF
      UTVAVB $.
      $( [25-Jan-2012] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    iunxsn.1 $e |- A e. _V $.
    iunxsn.2 $e |- ( x = A -> B = C ) $.
    $( A singleton index picks out an instance of an indexed union's
       argument. $)
    iunxsn $p |- U_ x e. { A } B = C $=
      ( vy csn ciun cv wcel wrex wa wex eliun df-rex wceq elsn anbi1i exbii
      eleq2d ceqsexv bitri 3bitri eqriv ) GABHZCIZDGJZUGKUHCKZAUFLAJZUFKZUIMZAN
      ZUHDKZAUHUFCOUIAUFPUMUJBQZUIMZANUNULUPAUKUOUIABRSTUIUNABEUOCDUHFUAUBUCUDU
      E $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y $.  $d y A $.  $d y B $.  $d y C $.
    $( Separate a union in an indexed union. $)
    iunun $p |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) $=
      ( vy cv cun wcel wrex cab ciun elun rexbii r19.43 bitri abbii unab eqtr4i
      wo df-iun uneq12i 3eqtr4i ) EFZCDGZHZABIZEJZUCCHZABIZEJZUCDHZABIZEJZGZABU
      DKABCKZABDKZGUGUIULSZEJUNUFUQEUFUHUKSZABIUQUEURABUCCDLMUHUKABNOPUIULEQRAE
      BUDTUOUJUPUMAEBCTAEBDTUAUB $.
      $( [27-Dec-2004] $)

    $( Separate a union in the index of an indexed union. $)
    iunxun $p |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) $=
      ( vy cun ciun cv wcel wrex wo wa wex df-rex elun anbi1i andir bitri exbii
      eliun 19.43 orbi12i bitr4i 3bitri 3bitr4i eqriv ) EABCFZDGZABDGZACDGZFZEH
      ZDIZAUGJZULUIIZULUJIZKZULUHIULUKIUNAHZUGIZUMLZAMURBIZUMLZURCIZUMLZKZAMZUQ
      UMAUGNUTVEAUTVAVCKZUMLVEUSVGUMURBCOPVAVCUMQRSVFVBAMZVDAMZKUQVBVDAUAUOVHUP
      VIUOUMABJVHAULBDTUMABNRUPUMACJVIAULCDTUMACNRUBUCUDAULUGDTULUIUJOUEUF $.
      $( [26-Mar-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A relationship involving union and indexed intersection.  Exercise 23 of
       [Enderton] p. 33. $)
    iinuni $p |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) $=
      ( vy cint cv ciin wcel wo wral r19.32v elun ralbii elint2 orbi2i 3bitr4ri
      cun vex cvv wb eliin ax-mp 3bitr4i eqriv ) DBCEZQZACBAFZQZGZDFZBHZUJUEHZI
      ZUJUHHZACJZUJUFHUJUIHZUKUJUGHZIZACJUKUQACJZIUOUMUKUQACKUNURACUJBUGLMULUSU
      KAUJCDRZNOPUJBUELUJSHUPUOTUTAUJCUHSUAUBUCUD $.
      $( [25-Nov-2003] $)

    $( A relationship involving union and indexed union.  Exercise 25 of
       [Enderton] p. 33.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    iununi $p |- ( ( B = (/) -> A = (/) ) <->
                ( A u. U. B ) = U_ x e. B ( A u. x ) ) $=
      ( vy c0 wceq wi cun cv wcel wrex wo elun wn biorf orbi2i bitri wex neq0
      wa cuni ciun rexbii wb wne df-ne r19.45zv sylbir n0i con2i rexbidv bitr3d
      syl ja syl5rbb eluni2 eliun 3bitr4g eqrdv eleq2 eluni ax-17 19.45 3bitr4i
      df-rex 3bitr3g biimpd 19.39 simpl imim12i eximi 3syl 19.37v sylib exlimdv
      orc 3imtr4g con4d impbii ) CEFZBEFZGZBCUAZHZACBAIZHZUBZFZWBDWDWGWBDIZBJZW
      IWEJZACKZLZWIWFJZACKZWIWDJZWIWGJZWOWJWKLZACKZWBWMWNWRACWIBWEMUCVTWAWSWMUD
      ZVTNZCEUEWTCEUFWJWKACUGUHWAWJNZWTWJWABWIUIUJXBWLWSWMXBWKWRACWJWKOUKWJWLOU
      LUMUNUOWPWJWIWCJZLZWMWIBWCMZXCWLWJAWICUPPQAWICWFUQZURUSWHWAVTWHWJDRWECJZA
      RZWANXAWHWJXHDWHWJXGGZARZWJXHGWHWJWKXGTZLZARZXGWNTZARZGXLXNGZARXJWHXMXOWH
      WPWQXMXOWDWGWIUTXDWJXKARZLWPXMXCXQWJAWICVAPXEWJXKAWJAVBVCVDWQWOXOXFWNACVE
      QVFVGXLXNAVHXPXIAWJXLXNXGWJXKVPXGWNVIVJVKVLWJXGAVMVNVODBSACSVQVRVS $.
      $( [25-Jul-2011] $) $( [25-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Subclass relationship for power class and union. $)
    sspwuni $p |- ( A C_ ~P B <-> U. A C_ B ) $=
      ( vx cv cpw wcel wral wss cuni vex elpw ralbii dfss3 unissb 3bitr4i ) CDZ
      BEZFZCAGPBHZCAGAQHAIBHRSCAPBCJKLCAQMCABNO $.
      $( [5-May-2009] $) $( [18-Jul-2006] $)

    $( Two ways to express a collection of subclasses. $)
    pwssb $p |- ( A C_ ~P B <-> A. x e. A x C_ B ) $=
      ( cpw wss cuni cv wral sspwuni unissb bitri ) BCDEBFCEAGCEABHBCIABCJK $.
      $( [19-Jul-2006] $)
  $}

  $( Relationship for power class and union. $)
  elpwuni $p |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) $=
    ( cpw wss cuni wcel wceq sspwuni unissel expcom eqimss impbid1 syl5bb ) ABC
    DAEZBDZBAFZNBGZABHPOQOPQABIJNBKLM $.
    $( [13-May-2007] $) $( [18-Jul-2006] $)

  ${
    $d x y A $.
    $( The power class of an intersection in terms of indexed intersection.
       Exercise 24(a) of [Enderton] p. 33. $)
    iinpw $p |- ~P |^| A = |^|_ x e. A ~P x $=
      ( vy cint cpw cv ciin wss wcel wral ssint vex elpw ralbii bitr4i wb eliin
      cvv ax-mp 3bitr4i eqriv ) CBDZEZABAFZEZGZCFZUBHZUGUEIZABJZUGUCIUGUFIZUHUG
      UDHZABJUJAUGBKUIULABUGUDCLZMNOUGUBUMMUGRIUKUJPUMAUGBUERQSTUA $.
      $( [29-Nov-2003] $)

    $( Inclusion of an indexed union of a power class in the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33. $)
    iunpwss $p |- U_ x e. A ~P x C_ ~P U. A $=
      ( vy cpw ciun cuni wss wrex wcel ssiun eliun vex elpw rexbii bitri uniiun
      cv sseq2i 3imtr4i ssriv ) CABAQZDZEZBFZDZCQZUAGZABHZUFABUAEZGZUFUCIZUFUEI
      ZABUAUFJUKUFUBIZABHUHAUFBUBKUMUGABUFUACLZMNOULUFUDGUJUFUDUNMUDUIUFABPROST
      $.
      $( [25-Nov-2003] $)
  $}

  $( Relative intersection of a nonempty set.  (Contributed by Stefan O'Rear,
     3-Apr-2015.)  (Revised by Mario Carneiro, 5-Jun-2015.) $)
  rintn0 $p |- ( ( X C_ ~P A /\ X =/= (/) ) -> ( A i^i |^| X ) = |^| X ) $=
    ( cpw wss c0 wne wa cint incom wceq cuni intssuni2 ssid sspwuni mpbi syl6ss
    cin df-ss sylib syl5eq ) BACZDBEFGZABHZQUCAQZUCAUCIUBUCADUDUCJUBUCUAKZABUAL
    UAUADUEADUAMUAANOPUCARST $.
    $( [5-Jun-2015] $) $( [3-Apr-2015] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                     Binary relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend wff notation to include the general binary relation predicate.
     Note that the syntax is simply three class symbols in a row.  Since binary
     relations are the only possible wff expressions consisting of three class
     expressions in a row, the syntax is unambiguous.  (For an example of how
     syntax could become ambiguous if we are not careful, see the comment in
     ~ cneg .) $)
  wbr $a wff A R B $.

  $( Define a general binary relation.  Note that the syntax is simply three
     class symbols in a row.  Definition 6.18 of [TakeutiZaring] p. 29
     generalized to arbitrary classes.  Class ` R ` often denotes a relation
     such as " ` < ` " that compares two classes ` A ` and ` B ` , which might
     be numbers such as ` 1 ` and ` 2 ` (see ~ df-ltxr for the specific
     definition of ` < ` ).  As a wff, relations are true or false.  For
     example, ` ( R = { <. 2 , 6 >. , <. 3 , 9 >. } -> 3 R 9 ) ` ( ~ ex-br ).
     Often class ` R ` meets the ` Rel ` criteria to be defined in ~ df-rel ,
     and in particular ` R ` may be a function (see ~ df-fun ).  This
     definition of relations is well-defined, although not very meaningful,
     when classes ` A ` and/or ` B ` are proper classes (i.e. are not sets).
     On the other hand, we often find uses for this definition when ` R ` is a
     proper class. $)
  df-br $a |- ( A R B <-> <. A , B >. e. R ) $.

  $( Equality theorem for binary relations. $)
  breq $p |- ( R = S -> ( A R B <-> A S B ) ) $=
    ( wceq cop wcel wbr eleq2 df-br 3bitr4g ) CDEABFZCGLDGABCHABDHCDLIABCJABDJK
    $.
    $( [4-Jun-1995] $)

  $( Equality theorem for a binary relation. $)
  breq1 $p |- ( A = B -> ( A R C <-> B R C ) ) $=
    ( wceq cop wcel wbr opeq1 eleq1d df-br 3bitr4g ) ABEZACFZDGBCFZDGACDHBCDHMN
    ODABCIJACDKBCDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation. $)
  breq2 $p |- ( A = B -> ( C R A <-> C R B ) ) $=
    ( wceq cop wcel wbr opeq2 eleq1d df-br 3bitr4g ) ABEZCAFZDGCBFZDGCADHCBDHMN
    ODABCIJCADKCBDKL $.
    $( [31-Dec-1993] $)

  $( Equality theorem for a binary relation. $)
  breq12 $p |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) $=
    ( wceq wbr breq1 breq2 sylan9bb ) ABFACEGBCEGCDFBDEGABCEHCDBEIJ $.
    $( [8-Feb-1996] $)

  ${
    breqi.1 $e |- R = S $.
    $( Equality inference for binary relations. $)
    breqi $p |- ( A R B <-> A S B ) $=
      ( wceq wbr wb breq ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [19-Feb-2005] $)
  $}

  ${
    breq1i.1 $e |- A = B $.
    $( Equality inference for a binary relation. $)
    breq1i $p |- ( A R C <-> B R C ) $=
      ( wceq wbr wb breq1 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    $( Equality inference for a binary relation. $)
    breq2i $p |- ( C R A <-> C R B ) $=
      ( wceq wbr wb breq2 ax-mp ) ABFCADGCBDGHEABCDIJ $.
      $( [8-Feb-1996] $)

    ${
      breq12i.2 $e |- C = D $.
      $( Equality inference for a binary relation.  (The proof was shortened by
         Eric Schmidt, 4-Apr-2007.) $)
      breq12i $p |- ( A R C <-> B R D ) $=
        ( wceq wbr wb breq12 mp2an ) ABHCDHACEIBDEIJFGABCDEKL $.
        $( [4-Apr-2007] $) $( [8-Feb-1996] $)
    $}
  $}

  ${
    breq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for a binary relation. $)
    breq1d $p |- ( ph -> ( A R C <-> B R C ) ) $=
      ( wceq wbr wb breq1 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    $( Equality deduction for a binary relation. $)
    breqd $p |- ( ph -> ( C A D <-> C B D ) ) $=
      ( wceq wbr wb breq syl ) ABCGDEBHDECHIFDEBCJK $.
      $( [29-Oct-2011] $)

    $( Equality deduction for a binary relation. $)
    breq2d $p |- ( ph -> ( C R A <-> C R B ) ) $=
      ( wceq wbr wb breq2 syl ) ABCGDBEHDCEHIFBCDEJK $.
      $( [8-Feb-1996] $)

    ${
      breq12d.2 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation.  (The proof was shortened by
         Andrew Salmon, 9-Jul-2011.) $)
      breq12d $p |- ( ph -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl2anc ) ABCIDEIBDFJCEFJKGHBCDEFLM $.
        $( [9-Jul-2011] $) $( [8-Feb-1996] $)
    $}

    ${
      breq123d.2 $e |- ( ph -> R = S ) $.
      breq123d.3 $e |- ( ph -> C = D ) $.
      $( Equality deduction for a binary relation. $)
      breq123d $p |- ( ph -> ( A R C <-> B S D ) ) $=
        ( wbr breq12d breqd bitrd ) ABDFKCEFKCEGKABCDEFHJLAFGCEIMN $.
        $( [29-Oct-2011] $)
    $}

    ${
      breqan12i.2 $e |- ( ps -> C = D ) $.
      $( Equality deduction for a binary relation. $)
      breqan12d $p |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) $=
        ( wceq wbr wb breq12 syl2an ) ACDJEFJCEGKDFGKLBHICDEFGMN $.
        $( [8-Feb-1996] $)

      $( Equality deduction for a binary relation. $)
      breqan12rd $p |- ( ( ps /\ ph ) -> ( A R C <-> B R D ) ) $=
        ( wbr wb breqan12d ancoms ) ABCEGJDFGJKABCDEFGHILM $.
        $( [8-Feb-1996] $)
    $}
  $}

  $( Two classes are different if they don't have the same relationship to a
     third class. $)
  nbrne1 $p |- ( ( A R B /\ -. A R C ) -> B =/= C ) $=
    ( wbr wn wne wceq breq2 biimpcd necon3bd imp ) ABDEZACDEZFBCGMNBCBCHMNBCADI
    JKL $.
    $( [3-Jun-2012] $)

  $( Two classes are different if they don't have the same relationship to a
     third class. $)
  nbrne2 $p |- ( ( A R C /\ -. B R C ) -> A =/= B ) $=
    ( wbr wn wne wceq breq1 biimpcd necon3bd imp ) ACDEZBCDEZFABGMNABABHMNABCDI
    JKL $.
    $( [3-Jun-2012] $)

  ${
    eqbrtr.1 $e |- A = B $.
    eqbrtr.2 $e |- B R C $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtri $p |- A R C $=
      ( wbr breq1i mpbir ) ACDGBCDGFABCDEHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrd.2 $e |- ( ph -> B R C ) $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrd $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbird ) ABDEHCDEHGABCDEFIJ $.
      $( [8-Oct-1999] $)
  $}

  ${
    eqbrtrr.1 $e |- A = B $.
    eqbrtrr.2 $e |- A R C $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrri $p |- B R C $=
      ( eqcomi eqbrtri ) BACDABEGFH $.
      $( [5-Aug-1993] $)
  $}

  ${
    eqbrtrrd.1 $e |- ( ph -> A = B ) $.
    eqbrtrrd.2 $e |- ( ph -> A R C ) $.
    $( Substitution of equal classes into a binary relation. $)
    eqbrtrrd $p |- ( ph -> B R C ) $=
      ( eqcomd eqbrtrd ) ACBDEABCFHGI $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtr.1 $e |- A R B $.
    breqtr.2 $e |- B = C $.
    $( Substitution of equal classes into a binary relation. $)
    breqtri $p |- A R C $=
      ( wbr breq2i mpbi ) ABDGACDGEBCADFHI $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrd.1 $e |- ( ph -> A R B ) $.
    breqtrd.2 $e |- ( ph -> B = C ) $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrd $p |- ( ph -> A R C ) $=
      ( wbr breq2d mpbid ) ABCEHBDEHFACDBEGIJ $.
      $( [24-Oct-1999] $)
  $}

  ${
    breqtrr.1 $e |- A R B $.
    breqtrr.2 $e |- C = B $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrri $p |- A R C $=
      ( eqcomi breqtri ) ABCDECBFGH $.
      $( [5-Aug-1993] $)
  $}

  ${
    breqtrrd.1 $e |- ( ph -> A R B ) $.
    breqtrrd.2 $e |- ( ph -> C = B ) $.
    $( Substitution of equal classes into a binary relation. $)
    breqtrrd $p |- ( ph -> A R C ) $=
      ( eqcomd breqtrd ) ABCDEFADCGHI $.
      $( [24-Oct-1999] $)
  $}

  ${
    3brtr3.1 $e |- A R B $.
    3brtr3.2 $e |- A = C $.
    3brtr3.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3i $p |- C R D $=
      ( eqbrtrri breqtri ) CBDEACBEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr4.1 $e |- A R B $.
    3brtr4.2 $e |- C = A $.
    3brtr4.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4i $p |- C R D $=
      ( eqbrtri breqtrri ) CBDECABEGFIHJ $.
      $( [11-Aug-1999] $)
  $}

  ${
    3brtr3d.1 $e |- ( ph -> A R B ) $.
    3brtr3d.2 $e |- ( ph -> A = C ) $.
    3brtr3d.3 $e |- ( ph -> B = D ) $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbid ) ABCFJDEFJGABDCEFHIKL $.
      $( [18-Oct-1999] $)
  $}

  ${
    3brtr4d.1 $e |- ( ph -> A R B ) $.
    3brtr4d.2 $e |- ( ph -> C = A ) $.
    3brtr4d.3 $e |- ( ph -> D = B ) $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4d $p |- ( ph -> C R D ) $=
      ( wbr breq12d mpbird ) ADEFJBCFJGADBECFHIKL $.
      $( [21-Feb-2005] $)
  $}

  ${
    3brtr3g.1 $e |- ( ph -> A R B ) $.
    3brtr3g.2 $e |- A = C $.
    3brtr3g.3 $e |- B = D $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr3g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylib ) ABCFJDEFJGBDCEFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    3brtr4g.1 $e |- ( ph -> A R B ) $.
    3brtr4g.2 $e |- C = A $.
    3brtr4g.3 $e |- D = B $.
    $( Substitution of equality into both sides of a binary relation. $)
    3brtr4g $p |- ( ph -> C R D ) $=
      ( wbr breq12i sylibr ) ABCFJDEFJGDBECFHIKL $.
      $( [16-Jan-1997] $)
  $}

  ${
    syl5eqbr.1 $e |- A = B $.
    syl5eqbr.2 $e |- ( ph -> B R C ) $.
    $( B chained equality inference for a binary relation. $)
    syl5eqbr $p |- ( ph -> A R C ) $=
      ( eqid 3brtr4g ) ACDBDEGFDHI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5eqbrr.1 $e |- B = A $.
    syl5eqbrr.2 $e |- ( ph -> B R C ) $.
    $( B chained equality inference for a binary relation. $)
    syl5eqbrr $p |- ( ph -> A R C ) $=
      ( eqid 3brtr3g ) ACDBDEGFDHI $.
      $( [17-Sep-2004] $)
  $}

  ${
    syl5breq.1 $e |- A R B $.
    syl5breq.2 $e |- ( ph -> B = C ) $.
    $( B chained equality inference for a binary relation. $)
    syl5breq $p |- ( ph -> A R C ) $=
      ( wbr a1i breqtrd ) ABCDEBCEHAFIGJ $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl5breqr.1 $e |- A R B $.
    syl5breqr.2 $e |- ( ph -> C = B ) $.
    $( B chained equality inference for a binary relation. $)
    syl5breqr $p |- ( ph -> A R C ) $=
      ( eqcomd syl5breq ) ABCDEFADCGHI $.
      $( [24-Apr-2005] $)
  $}

  ${
    syl6eqbr.1 $e |- ( ph -> A = B ) $.
    syl6eqbr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation. $)
    syl6eqbr $p |- ( ph -> A R C ) $=
      ( wbr breq1d mpbiri ) ABDEHCDEHGABCDEFIJ $.
      $( [12-Oct-1999] $)
  $}

  ${
    syl6eqbrr.1 $e |- ( ph -> B = A ) $.
    syl6eqbrr.2 $e |- B R C $.
    $( A chained equality inference for a binary relation. $)
    syl6eqbrr $p |- ( ph -> A R C ) $=
      ( eqcomd syl6eqbr ) ABCDEACBFHGI $.
      $( [4-Jan-2006] $)
  $}

  ${
    syl6breq.1 $e |- ( ph -> A R B ) $.
    syl6breq.2 $e |- B = C $.
    $( A chained equality inference for a binary relation. $)
    syl6breq $p |- ( ph -> A R C ) $=
      ( eqid 3brtr3g ) ABCBDEFBHGI $.
      $( [11-Oct-1999] $)
  $}

  ${
    syl6breqr.1 $e |- ( ph -> A R B ) $.
    syl6breqr.2 $e |- C = B $.
    $( A chained equality inference for a binary relation. $)
    syl6breqr $p |- ( ph -> A R C ) $=
      ( eqcomi syl6breq ) ABCDEFDCGHI $.
      $( [24-Apr-2005] $)
  $}


  ${
    ssbrd.1 $e |- ( ph -> A C_ B ) $.
    $( Deduction from a subclass relationship of binary relations. $)
    ssbrd $p |- ( ph -> ( C A D -> C B D ) ) $=
      ( cop wcel wbr sseld df-br 3imtr4g ) ADEGZBHMCHDEBIDECIABCMFJDEBKDECKL $.
      $( [30-Apr-2004] $)
  $}

  ${
    ssbri.1 $e |- A C_ B $.
    $( Inference from a subclass relationship of binary relations.  (The proof
       was shortened by Andrew Salmon, 9-Jul-2011.) $)
    ssbri $p |- ( C A D -> C B D ) $=
      ( wbr wi wtru wss a1i ssbrd trud ) CDAFCDBFGHABCDABIHEJKL $.
      $( [8-Feb-2015] $) $( [28-Mar-2007] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y R $.  $d x y $.
    hbbr.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbbr.2 $e |- ( y e. R -> A. x y e. R ) $.
    hbbr.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for binary relation. $)
    hbbr $p |- ( A R B -> A. x A R B ) $=
      ( wbr cop wcel df-br hbop hbel hbxfrbi ) CDEICDJZEKACDELABBPEABCDFHMGNO
      $.
      $( [1-Sep-1999] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z R $.  $d x y z $.  $d y ph $.
    hbbrd.1 $e |- ( ph -> A. x ph ) $.
    hbbrd.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbbrd.3 $e |- ( ph -> ( y e. R -> A. x y e. R ) ) $.
    hbbrd.4 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbbr .  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    hbbrd $p |- ( ph -> ( A R B -> A. x A R B ) ) $=
      ( cop wcel wal wbr hbopd hbeld df-br albii 3imtr4g ) ADEKZFLZUABMDEFNZUBB
      MABCTFGABCDEGHJOIPDEFQZUBUABUCRS $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d y z $.  $d w x $.  $d w R z $.  $d w A z $.
    $( Relationship between a binary relation and a class abstraction.
       (Contributed by Andrew Salmon, 8-Jul-2011.) $)
    brab1 $p |- ( x R A <-> x e. { z | z R A } ) $=
      ( vw cv wbr wsbc wcel ax-17 sbco2 breq1 sbie sbbii bitr2i df-clab 3bitr4i
      cab ) BFZCDGZBEFZHZEAFZHZTBUCHUCCDGZUCTBRITBAETEJKUDUACDGZEUCHUEUBUFEATUF
      BEUFBJSUACDLMNUFUEEAUEEJUAUCCDLMOTABPQ $.
      $( [9-Jul-2011] $) $( [7-Apr-1994] $)
  $}

  $( The union of two binary relations. $)
  brun $p |- ( A ( R u. S ) B <-> ( A R B \/ A S B ) ) $=
    ( cop cun wcel wo wbr elun df-br orbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [21-Dec-2008] $)

  $( The intersection of two relations.  (Contributed by FL, 7-Oct-2008.) $)
  brin $p |- ( A ( R i^i S ) B <-> ( A R B /\ A S B ) ) $=
    ( cop cin wcel wa wbr elin df-br anbi12i 3bitr4i ) ABEZCDFZGNCGZNDGZHABOIAB
    CIZABDIZHNCDJABOKRPSQABCKABDKLM $.
    $( [1-Dec-2010] $) $( [6-Oct-2008] $)

  $( The difference of two binary relations.  (Contributed by Scott Fenton,
     11-Apr-2011.) $)
  brdif $p |- ( A ( R \ S ) B <-> ( A R B /\ -. A S B ) ) $=
    ( cop cdif wcel wn wa wbr eldif df-br notbii anbi12i 3bitr4i ) ABEZCDFZGPCG
    ZPDGZHZIABQJABCJZABDJZHZIPCDKABQLUARUCTABCLUBSABDLMNO $.
    $( [12-Apr-2012] $) $( [11-Apr-2011] $)

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z D $.  $d y z R $.
    $d x y z $.
    $( Move substitution in and out of a binary relation.  (The proof was
       shortened by Andrew Salmon, 9-Jul-2011.) $)
    sbcbrg $p |- ( A e. D -> ( [ A / x ] B R C <->
           [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) $=
      ( vy vz wbr cv wsbc dfsbcq wceq csbeq1 breq123d wcel ax-17 hbcsb1 csbeq1a
      csb hbbr sbie vtoclbg ) CDFIZAGJZKAUECTZAUEDTZAUEFTZIZUDABKABCTZABDTZABFT
      ZIGBEUDAUEBLUEBMUFUJUGUKUHULAUEBCNAUEBFNAUEBDNOUDUIAGAHUFUGUHAHUECHJUEPAQ
      ZRAHUEFUMRAHUEDUMRUAAJUEMCUFDUGFUHAUECSAUEFSAUEDSOUBUC $.
      $( [9-Jul-2011] $) $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr12g $p |- ( A e. D ->
                 ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) $=
      ( wcel wbr wsbc csb sbcbrg csbconstgfv breqd bitrd ) BEGZCDFHABIABCJZABDJ
      ZABFJZHPQFHABCDEFKORFPQABFELMN $.
      $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y C $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr1g $p |- ( A e. D ->
                  ( [ A / x ] B R C <-> [_ A / x ]_ B R C ) ) $=
      ( wcel wbr wsbc csb sbcbr12g csbconstgfv breq2d bitrd ) BEGZCDFHABIABCJZA
      BDJZFHPDFHABCDEFKOQDPFABDELMN $.
      $( [13-Dec-2005] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d y D $.  $d x y R $.
    $( Move substitution in and out of a binary relation. $)
    sbcbr2g $p |- ( A e. D ->
                  ( [ A / x ] B R C <-> B R [_ A / x ]_ C ) ) $=
      ( wcel wbr wsbc csb sbcbr12g csbconstgfv breq1d bitrd ) BEGZCDFHABIABCJZA
      BDJZFHCQFHABCDEFKOPCQFABCELMN $.
      $( [13-Dec-2005] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (class builders)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Extend class notation to include ordered-pair class abstraction (class
     builder). $)
  copab $a class { <. x , y >. | ph } $.

  ${
    $d x z $.  $d y z $.  $d z ph $.
    $( Define the class abstraction of a collection of ordered pairs.
       Definition 3.3 of [Monk1] p. 34.  Usually ` x ` and ` y ` are distinct,
       although the definition doesn't strictly require it (see ~ dfid2 for a
       case where they are not distinct).  The brace notation is called "class
       abstraction" by Quine; it is also (more commonly) called a "class
       builder" in the literature.  An alternate definition using no
       existential quantifiers is shown by ~ dfopab2 .  For example,
` R = { <. x , y >. | ( x e. CC /\ y e. CC /\ ( x + 1 ) = y ) } -> 3 R 4 `
       ( ~ ex-opab ). $)
    df-opab $a |- { <. x , y >. | ph } =
                  { z | E. x E. y ( z = <. x , y >. /\ ph ) } $.
  $}

  ${
    $d x z R $.  $d y z R $.
    $( The collection of ordered pairs in a class is a subclass of it.  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabss $p |- { <. x , y >. | x R y } C_ R $=
      ( vz cv wbr copab cop wceq wa wex cab df-opab df-br eleq1 biimpar sylan2b
      wcel exlimivv abssi eqsstri ) AEZBEZCFZABGDEZUBUCHZIZUDJZBKAKZDLCUDABDMUI
      DCUHUECRZABUDUGUFCRZUJUBUCCNUGUJUKUEUFCOPQSTUA $.
      $( [9-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.  $d z ch $.
    opabbid.1 $e |- ( ph -> A. x ph ) $.
    opabbid.2 $e |- ( ph -> A. y ph ) $.
    opabbid.3 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule).  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    opabbid $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( vz cv cop wceq wa wex cab copab anbi2d exbid abbidv df-opab 3eqtr4g ) A
      IJDJEJKLZBMZENZDNZIOUBCMZENZDNZIOBDEPCDEPAUEUHIAUDUGDFAUCUFEGABCUBHQRRSBD
      EITCDEITUA $.
      $( [9-Jul-2011] $) $( [21-Feb-2004] $)
  $}

  ${
    $d x ph $.  $d y z ph $.  $d z ps $.  $d z ch $.
    opabbidv.1 $e |- ( ph -> ( ps <-> ch ) ) $.
    $( Equivalent wff's yield equal ordered-pair class abstractions (deduction
       rule). $)
    opabbidv $p |- ( ph -> { <. x , y >. | ps } = { <. x , y >. | ch } ) $=
      ( ax-17 opabbid ) ABCDEADGAEGFH $.
      $( [15-May-1995] $)
  $}

  ${
    $d x z $.  $d y z $.  $d z ph $.  $d z ps $.
    opabbii.1 $e |- ( ph <-> ps ) $.
    $( Equivalent wff's yield equal class abstractions. $)
    opabbii $p |- { <. x , y >. | ph } = { <. x , y >. | ps } $=
      ( vz cv wceq copab eqid wb a1i opabbidv ax-mp ) FGZOHZACDIBCDIHOJPABCDABK
      PELMN $.
      $( [25-Jul-2011] $) $( [15-May-1995] $)
  $}

  ${
    $d x y z w v $.  $d v ph $.  $d v ps $.
    cbvopab.1 $e |- ( ph -> A. z ph ) $.
    cbvopab.2 $e |- ( ph -> A. w ph ) $.
    cbvopab.3 $e |- ( ps -> A. x ps ) $.
    cbvopab.4 $e |- ( ps -> A. y ps ) $.
    cbvopab.5 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopab $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( vv cv cop wceq wa wex cab ax-17 hban copab opeq12 eqeq2d anbi12d cbvex2
      abbii df-opab 3eqtr4i ) LMZCMZDMZNZOZAPZDQCQZLRUIEMZFMZNZOZBPZFQEQZLRACDU
      ABEFUAUOVALUNUTCDEFUMAEUMESGTUMAFUMFSHTUSBCUSCSITUSBDUSDSJTUJUPOUKUQOPZUM
      USABVBULURUIUJUKUPUQUBUCKUDUEUFACDLUGBEFLUGUH $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x y z w $.  $d z w v ph $.  $d x y v ps $.
    cbvopabv.1 $e |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) $.
    $( Rule used to change bound variables in an ordered-pair class
       abstraction, using implicit substitution. $)
    cbvopabv $p |- { <. x , y >. | ph } = { <. z , w >. | ps } $=
      ( ax-17 cbvopab ) ABCDEFAEHAFHBCHBDHGI $.
      $( [15-Oct-1996] $)
  $}

  ${
    $d v w x y $.  $d v w y z $.  $d v w ph $.  $d v w ps $.
    cbvopab1.1 $e |- ( ph -> A. z ph ) $.
    cbvopab1.2 $e |- ( ps -> A. x ps ) $.
    cbvopab1.3 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1 $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( vw vv cv cop wceq wa wex cab copab wsbc ax-17 hban opeq1 eqeq2d sbequ12
      hbs1 hbex anbi12d exbidv cbvex hbsb sbequ sbie syl6bb bitri abbii df-opab
      3eqtr4i ) IKZCKZDKZLZMZANZDOZCOZIPUQEKZUSLZMZBNZDOZEOZIPACDQBEDQVDVJIVDUQ
      JKZUSLZMZACVKRZNZDOZJOVJVCVPCJVCJSVOCDVMVNCVMCSACJUDTUEURVKMZVBVODVQVAVMA
      VNVQUTVLUQURVKUSUAUBACJUCUFUGUHVPVIJEVOEDVMVNEVMESACJEFUITUEVIJSVKVEMZVOV
      HDVRVMVGVNBVRVLVFUQVKVEUSUAUBVRVNACVERBAJECUJABCEGHUKULUFUGUHUMUNACDIUOBE
      DIUOUP $.
      $( [6-Oct-2004] $)
  $}

  ${
    $d w x y z $.  $d w ph $.  $d w ps $.
    cbvopab2.1 $e |- ( ph -> A. z ph ) $.
    cbvopab2.2 $e |- ( ps -> A. y ps ) $.
    cbvopab2.3 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Change second bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab2 $p |- { <. x , y >. | ph } = { <. x , z >. | ps } $=
      ( vw cv cop wceq wa wex cab copab ax-17 hban opeq2 df-opab eqeq2d anbi12d
      cbvex exbii abbii 3eqtr4i ) IJZCJZDJZKZLZAMZDNZCNZIOUGUHEJZKZLZBMZENZCNZI
      OACDPBCEPUNUTIUMUSCULURDEUKAEUKEQFRUQBDUQDQGRUIUOLZUKUQABVAUJUPUGUIUOUHSU
      AHUBUCUDUEACDITBCEITUF $.
      $( [22-Aug-2013] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.
    $( Change first bound variable in an ordered-pair class abstraction, using
       explicit substitution. $)
    cbvopab1s $p |- { <. x , y >. | ph } = { <. z , y >. | [ z / x ] ph } $=
      ( vw cv cop wceq wa wex cab wsbc copab ax-17 hbs1 hban hbex opeq1 df-opab
      eqeq2d sbequ12 anbi12d exbidv cbvex abbii 3eqtr4i ) EFZBFZCFZGZHZAIZCJZBJ
      ZEKUGDFZUIGZHZABUOLZIZCJZDJZEKABCMURDCMUNVAEUMUTBDUMDNUSBCUQURBUQBNABDOPQ
      UHUOHZULUSCVBUKUQAURVBUJUPUGUHUOUIRTABDUAUBUCUDUEABCESURDCESUF $.
      $( [5-Nov-2004] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y $.  $d y z $.  $d z ph $.  $d x ps $.
    cbvopab1v.1 $e |- ( x = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the first bound variable in an ordered pair
       abstraction, using implicit substitution.  (The proof was shortened by
       Eric Schmidt, 4-Apr-2007.) $)
    cbvopab1v $p |- { <. x , y >. | ph } = { <. z , y >. | ps } $=
      ( ax-17 cbvopab1 ) ABCDEAEGBCGFH $.
      $( [4-Apr-2007] $) $( [31-Jul-2003] $)
  $}

  ${
    $d x y z w $.  $d z w ph $.  $d y w ps $.
    cbvopab2v.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    $( Rule used to change the second bound variable in an ordered pair
       abstraction, using implicit substitution. $)
    cbvopab2v $p |- { <. x , y >. | ph } = { <. x , z >. | ps } $=
      ( vw cv cop wceq wex cab copab opeq2 eqeq2d anbi12d cbvexv exbii df-opab
      wa abbii 3eqtr4i ) GHZCHZDHZIZJZATZDKZCKZGLUCUDEHZIZJZBTZEKZCKZGLACDMBCEM
      UJUPGUIUOCUHUNDEUEUKJZUGUMABUQUFULUCUEUKUDNOFPQRUAACDGSBCEGSUB $.
      $( [2-Sep-1999] $)
  $}

  ${
    $d w y z A $.  $d w ph $.  $d w x y z $.
    $( Move substitution into a class abstraction. $)
    csbopabg $p |- ( A e. V -> [_ A / x ]_ { <. y , z >. | ph } =
               { <. y , z >. | [ A / x ] ph } ) $=
      ( vw wcel cvv copab csb wsbc wceq cv wa wex cab df-opab sbcexg bitrd elex
      cop csbeq2i csbabg sbcang sbcg anbi1d exbidv abbidv eqcomi a1i 3eqtrd syl
      eqtrd ) EFHEIHZBEACDJZKZABELZCDJZMEFUAUOUQBEGNCNDNUBMZAOZDPZCPZGQZKZUTURO
      ZDPZCPZGQZUSBEUPVDIACDGRUCUOVEVCBELZGQVIVCBGEIUDUOVJVHGUOVJVBBELZCPVHVBCB
      EISUOVKVGCUOVKVABELZDPVGVADBEISUOVLVFDUOVLUTBELZUROVFUTABEIUEUOVMUTURUTBE
      IUFUGTUHTUHTUIUNVIUSMUOUSVIURCDGRUJUKULUM $.
      $( [6-Aug-2007] $)
  $}

  ${
    $d x z $.  $d y z $.  $d ph z $.  $d ps z $.
    $( Union of two ordered pair class abstractions. $)
    unopab $p |- ( { <. x , y >. | ph } u. { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph \/ ps ) } $=
      ( vz cv cop wceq wa wex cab wo copab unab 19.43 andi exbii bitr2i df-opab
      cun bitr3i abbii eqtri uneq12i 3eqtr4i ) EFCFDFGHZAIZDJZCJZEKZUFBIZDJZCJZ
      EKZTZUFABLZIZDJZCJZEKZACDMZBCDMZTUPCDMUOUIUMLZEKUTUIUMENVCUSEVCUHULLZCJUS
      UHULCOVDURCURUGUKLZDJVDUQVEDUFABPQUGUKDORQUAUBUCVAUJVBUNACDESBCDESUDUPCDE
      SUE $.
      $( [30-Sep-2002] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Transitive classes
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare a new symbol. $)
  $c Tr $. $( Transitive predicate (read:  "the following class is
              transitive") $)

  $( Extend wff notation to include transitive classes.  Notation from
     [TakeutiZaring] p. 35. $)
  wtr $a wff Tr A $.

  $( Define the transitive class predicate.  Not to be confused with a
     transitive relation (see ~ cotr ).  Definition of [Enderton] p. 71
     extended to arbitrary classes.  For alternate definitions, see ~ dftr2
     (which is suggestive of the word "transitive"), ~ dftr3 , ~ dftr4 ,
     ~ dftr5 , and (when ` A ` is a set) ~ unisuc .  The term "complete" is
     used instead of "transitive" in Definition 3 of [Suppes] p. 130. $)
  df-tr $a |- ( Tr A <-> U. A C_ A ) $.

  ${
    $d x y A $.
    $( An alternate way of defining a transitive class.  Exercise 7 of
       [TakeutiZaring] p. 40. $)
    dftr2 $p |- ( Tr A <-> A. x A. y ( ( x e. y /\ y e. A ) -> x e. A ) ) $=
      ( cuni wss cv wcel wi wal wa dfss2 df-tr 19.23v eluni imbi1i bitr4i albii
      wtr wex 3bitr4i ) CDZCEAFZUAGZUBCGZHZAICRUBBFZGUFCGJZUDHBIZAIAUACKCLUHUEA
      UHUGBSZUDHUEUGUDBMUCUIUDBUBCNOPQT $.
      $( [24-Apr-1994] $)

    $( An alternate way of defining a transitive class. $)
    dftr5 $p |- ( Tr A <-> A. x e. A A. y e. x y e. A ) $=
      ( wtr cv wcel wa wal wral dftr2 alcom impexp albii df-ral r19.21v 3bitr2i
      wi bitr4i 3bitri ) CDBEZAEZFZUACFZGTCFZQZAHBHUEBHZAHZUDBUAIZACIZBACJUEBAK
      UGUCUHQZAHUIUFUJAUFUBUCUDQZQZBHUKBUAIUJUEULBUBUCUDLMUKBUANUCUDBUAOPMUHACN
      RS $.
      $( [20-Mar-2004] $)

    $( An alternate way of defining a transitive class.  Definition 7.1 of
       [TakeutiZaring] p. 35. $)
    dftr3 $p |- ( Tr A <-> A. x e. A x C_ A ) $=
      ( vy wtr cv wcel wral wss dftr5 dfss3 ralbii bitr4i ) BDCEBFCAEZGZABGMBHZ
      ABGACBIONABCMBJKL $.
      $( [29-Aug-1993] $)
  $}

  $( An alternate way of defining a transitive class.  Definition of [Enderton]
     p. 71. $)
  dftr4 $p |- ( Tr A <-> A C_ ~P A ) $=
    ( wtr cuni wss cpw df-tr sspwuni bitr4i ) ABACADAAEDAFAAGH $.
    $( [8-May-2009] $) $( [29-Aug-1993] $)

  $( Equality theorem for the transitive class predicate. $)
  treq $p |- ( A = B -> ( Tr A <-> Tr B ) ) $=
    ( wceq cuni wss wtr unieq sseq1d sseq2 bitrd df-tr 3bitr4g ) ABCZADZAEZBDZB
    EZAFBFMOPAEQMNPAABGHABPIJAKBKL $.
    $( [17-Sep-1993] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( In a transitive class, the membership relation is transitive.  (The
       proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    trel $p |- ( Tr A -> ( ( B e. C /\ C e. A ) -> B e. A ) ) $=
      ( vy vx wtr cv wcel wa wi wal dftr2 eleq12 wb eleq1 adantl anbi12d adantr
      wceq imbi12d cla42gv pm2.43b sylbi ) AFDGZEGZHZUEAHZIZUDAHZJZEKDKZBCHZCAH
      ZIZBAHZJZDEALUKUNUOUJUPDEBCCAUDBSZUECSZIZUHUNUIUOUSUFULUGUMUDBUECMURUGUMN
      UQUECAOPQUQUIUONURUDBAORTUAUBUC $.
      $( [9-Jul-2011] $) $( [19-Apr-1994] $)
  $}

  $( In a transitive class, the membership relation is transitive. $)
  trel3 $p |- ( Tr A -> ( ( B e. C /\ C e. D /\ D e. A ) -> B e. A ) ) $=
    ( wtr wcel w3a wa 3anass trel anim2d syl5bi syld ) AEZBCFZCDFZDAFZGZOCAFZHZ
    BAFROPQHZHNTOPQINUASOACDJKLABCJM $.
    $( [19-Apr-1994] $)

  ${
    $d x A $.  $d x B $.
    $( An element of a transitive class is a subset of the class. $)
    trss $p |- ( Tr A -> ( B e. A -> B C_ A ) ) $=
      ( vx wtr wcel wss cv wceq eleq1 sseq1 imbi12d imbi2d wral dftr3 ra4 sylbi
      wi vtoclg pm2.43b ) ADZBAEZBAFZTCGZAEZUCAFZQZQTUAUBQZQCBAUCBHZUFUGTUHUDUA
      UEUBUCBAIUCBAJKLTUECAMUFCANUECAOPRS $.
      $( [7-Aug-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The intersection of transitive classes is transitive. $)
    trin $p |- ( ( Tr A /\ Tr B ) -> Tr ( A i^i B ) ) $=
      ( vx wtr cin wss wral wcel elin trss im2anan9 syl5bi ssin syl6ib ralrimiv
      wa cv dftr3 sylibr ) ADZBDZPZCQZABEZFZCUDGUDDUBUECUDUBUCUDHZUCAFZUCBFZPZU
      EUFUCAHZUCBHZPUBUIUCABITUJUGUAUKUHAUCJBUCJKLUCABMNOCUDRS $.
      $( [9-May-1994] $)
  $}

  $( The empty set is transitive. $)
  tr0 $p |- Tr (/) $=
    ( c0 wtr cpw wss 0ss dftr4 mpbir ) ABAACZDHEAFG $.
    $( [16-Sep-1993] $)

  $( The universe is transitive. $)
  trv $p |- Tr _V $=
    ( cvv wtr cuni wss ssv df-tr mpbir ) ABACZADHEAFG $.
    $( [14-Sep-2003] $)

  ${
    $d x y z A $.  $d y z B $.
    $( The indexed union of a class of transitive sets is transitive.
       (Contributed by Mario Carneiro, 16-Nov-2014.) $)
    triun $p |- ( A. x e. A Tr B -> Tr U_ x e. A B ) $=
      ( vy vz wtr wral cv ciun wss wcel wrex eliun r19.29 ax-17 hbiu1 hbss trss
      wa imp ssiun2 sstr2 syl5com syl5 rexlimi sylan2b ralrimiva dftr3 sylibr
      syl ) CFZABGZDHZABCIZJZDUNGUNFULUODUNUMUNKULUMCKZABLZUOAUMBCMULUQSUKUPSZA
      BLUOUKUPABNURUOABAEUMUNEHUMKAOAEBCPQURUMCJZAHBKZUOUKUPUSCUMRTUTCUNJUSUOAB
      CUAUMCUNUBUCUDUEUJUFUGDUNUHUI $.
      $( [16-Nov-2014] $)

    $( The union of a class of transitive sets is transitive.  Exercise 5(a) of
       [Enderton] p. 73.  (Contributed by Scott Fenton, 21-Feb-2011.)  (The
       proof was shortened by Mario Carneiro, 26-Apr-2014.) $)
    truni $p |- ( A. x e. A Tr x -> Tr U. A ) $=
      ( cv wtr wral ciun cuni triun wceq wb uniiun treq ax-mp sylibr ) ACZDABEA
      BOFZDZBGZDZABOHRPISQJABKRPLMN $.
      $( [26-Apr-2014] $) $( [21-Feb-2011] $)

    $( The intersection of a class of transitive sets is transitive.  Exercise
       5(b) of [Enderton] p. 73.  (Contributed by Scott Fenton,
       25-Feb-2011.) $)
    trint $p |- ( A. x e. A Tr x -> Tr |^| A ) $=
      ( vy cv wtr wral wel wss wi cint dftr3 ralbii biimpi df-ral ralcom4 bitri
      wal sylib ralim alimi syl wcel elint2 ssint imbi12i albii 3bitri sylibr
      vex ) ADZEZABFZCAGZABFZCDZUJHZABFZIZCQZBJZEZULUMUPIZABFZCQZUSULUPCUJFZABF
      ZVDULVFUKVEABCUJKLMVFVBCQZABFVDVEVGABUPCUJNLVBACBOPRVCURCUMUPABSTUAVAUOUT
      HZCUTFUOUTUBZVHIZCQUSCUTKVHCUTNVJURCVIUNVHUQAUOBCUIUCAUOBUDUEUFUGUH $.
      $( [25-Feb-2011] $)

    $( If ` A ` is transitive and non-null, then ` |^| A ` is a subset of
       ` A ` .  (Contributed by Scott Fenton, 3-Mar-2011.) $)
    trintss $p |- ( ( A =/= (/) /\ Tr A ) -> |^| A C_ A ) $=
      ( vy vx c0 wne wtr wa cint cv wcel wel wral elint2 wrex r19.2z exp3acom23
      vex ex trel rexlimdv sylan9 syl5bi ssrdv ) ADEZAFZGZBAHZABIZUGJBCKZCALZUF
      UHAJZCUHABQMUDUJUICANZUEUKUDUJULUICAORUEUIUKCAUEUICIZAJUKAUHUMSPTUAUBUC
      $.
      $( [3-Mar-2011] $)

    $( Any non-empty transitive class includes its intersection.  Exercise 2 in
       [TakeutiZaring] p. 44.  (Contributed by Andrew Salmon, 14-Nov-2011.) $)
    trint0 $p |- ( ( Tr A /\ A =/= (/) ) -> |^| A C_ A ) $=
      ( vx c0 wne wtr cint wss cv wcel wex wi intss1 trss com12 sylsyld exlimiv
      n0 sstr2 sylbi impcom ) ACDZAEZAFZAGZUABHZAIZBJUBUDKZBAQUFUGBUFUCUEGUBUEA
      GZUDUEALUBUFUHAUEMNUCUEAROPST $.
      $( [14-Nov-2011] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Replacement
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Introduce the Axiom of Replacement
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.
    $( Axiom of Replacement.  An axiom scheme of Zermelo-Fraenkel set theory.
       Axiom 5 of [TakeutiZaring] p. 19.  It tells us that the image of any set
       under a function is also a set (see the variant ~ funimaex ).  Although
       ` ph ` may be any wff whatsoever, this axiom is useful (i.e. its
       antecedent is satisfied) when we are given some function and ` ph `
       encodes the predicate "the value of the function at ` w ` is ` z ` ."
       Thus ` ph ` will ordinarily have free variables ` w ` and ` z ` - think
       of it informally as ` ph ( w , z ) ` .  We prefix ` ph ` with the
       quantifier ` A. y ` in order to "protect" the axiom from any ` ph `
       containing ` y ` , thus allowing us to eliminate any restrictions on
       ` ph ` .  This makes the axiom usable in a formalization that omits the
       logically redundant axiom ~ ax-17 .  Another common variant is derived
       as ~ axrep5 , where you can find some further remarks.  A slightly more
       compact version is shown as ~ axrep2 .  A quite different variant is
       ~ zfrep6 , which if used in place of ~ ax-rep would also require that
       the Separation Scheme ~ axsep be stated as a separate axiom.

       There is very a strong generalization of Replacement that doesn't demand
       function-like behavior of ` ph ` .  Two versions of this generalization
       are called the Collection Principle ~ cp and the Boundedness Axiom
       ~ bnd .

       Many developments of set theory distinguish the uses of Replacement from
       uses the weaker axioms of Separation ~ axsep , Null Set ~ axnul , and
       Pairing ~ axpr , all of which we derive from Replacement.  In order to
       make it easier to identify the uses of those redundant axioms, we
       restate them as axioms ~ ax-sep , ~ ax-nul , and ~ ax-pr below the
       theorems that prove them. $)
    ax-rep $a |- ( A. w E. y A. z ( A. y ph -> z = y ) ->
                     E. y A. z ( z e. y <-> E. w ( w e. x /\ A. y ph ) ) ) $.
  $}

  ${
    $d w y ph $.  $d w x y z $.
    $( The version of the Axiom of Replacement used in the Metamath Solitaire
       applet ~ http://us.metamath.org/mmsolitaire/mms.html .  Equivalence is
       shown via the path ~ ax-rep ` -> ` ~ axrep1 ` -> ` ~ axrep2 ` -> `
       ~ axrepnd ` -> ` ~ zfcndrep = ~ ax-rep . $)
    axrep1 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                 A. z ( z e. x <-> E. x ( x e. y /\ ph ) ) ) $=
      ( vw cv wceq wi wal wcel wa wb elequ2 exbidv albidv alimi ax-17 hbbi hbal
      wex anbi1d bibi2d imbi2d ax-4 imim1i eximi ax-rep syl hbe1 hba1 hban hbex
      bibi1d cbvex sylib chvarv 19.35ri 19.3 anbi2i exbii bibi2i albii imbi2i
      mpbi ) ADFZCFZGZHZDIZCTZVEBFZJZVKVFJZACIZKZBTZLZDIZHZBTVJVLVMAKZBTZLZDIZH
      ZBTVJVRBVJBIZVLVKEFZJZVNKZBTZLZDIZBTZHWEVRBTZHECWFVFGZWLWMWEWNWKVRBWNWJVQ
      DWNWIVPVLWNWHVOBWNWGVMVNECBMUANUBONUCWEVEVFJZWILZDIZCTZWLWEVNVGHZDIZCTZBI
      WRVJXABVIWTCVHWSDVNAVGACUDUEPUFPAECDBUGUHWQWKCBWPBDWOWIBWOBQWHBUIRSWJCDVL
      WICVLCQWHCBWGVNCWGCQACUJUKULRSVFVKGZWPWJDXBWOVLWICBDMUMOUNUOUPUQVSWDBVRWC
      VJVQWBDVPWAVLVOVTBVNAVMACACQURUSUTVAVBVCUTVD $.
      $( [19-Nov-2005] $)
  $}

  ${
    $d w ph $.  $d w x y z $.
    $( Axiom of Replacement expressed with the fewest number of different
       variables and without any restrictions on ` ph ` . $)
    axrep2 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                        A. z ( z e. x <-> E. x ( x e. y /\ A. y ph ) ) ) $=
      ( vw wal cv wceq wi wex wcel wa wb ax-17 hbim exbidv albidv imbi2d imim1i
      eximi hbe1 hbex elequ2 anbi1d bibi2d axrep1 chvar ax-4 alimi hba1 equequ2
      hbal cbvex sylib ax-mp ) ACFZDGZEGZHZIZDFZEJZUQBGZKZVCCGZKZUPLZBJZMZDFZIZ
      BJZAUQVEHZIZDFZCJZVJIZBJVBVDVCURKZUPLZBJZMZDFZIZBJVLECVKEBVBVJEVAEUAVJENO
      UBURVEHZWCVKBWDWBVJVBWDWAVIDWDVTVHVDWDVSVGBWDVRVFUPECBUCUDPUEQRPUPBEDUFUG
      VKVQBVPVBVJVPUPVMIZDFZCJVBVOWFCVNWEDUPAVMACUHSUITWFVACEWFENUTCDUPUSCACUJU
      SCNOULVEURHZWEUTDWGVMUSUPCEDUKRQUMUNSTUO $.
      $( [15-Aug-2003] $)
  $}

  ${
    $d w x y z $.
    $( Axiom of Replacement slightly strengthened from ~ axrep2 ; ` w ` may
       occur free in ` ph ` . $)
    axrep3 $p |- E. x ( E. y A. z ( ph -> z = y ) ->
                 A. z ( z e. x <-> E. x ( x e. w /\ A. y ph ) ) ) $=
      ( cv wceq wi wal wex wcel wa wb hbe1 ax-17 hba1 hban hbex hbbi exbidv
      hbal hbim elequ2 anbi1d bibi2d albidv imbi2d axrep2 chvar ) ADFZCFZGHDIZC
      JZUJBFZKZUNUKKZACIZLZBJZMZDIZHZBJUMUOUNEFZKZUQLZBJZMZDIZHZBJCEVICBUMVHCUL
      CNVGCDUOVFCUOCOVECBVDUQCVDCOACPQRSUAUBRUKVCGZVBVIBVJVAVHUMVJUTVGDVJUSVFUO
      VJURVEBVJUPVDUQCEBUCUDTUEUFUGTABCDUHUI $.
      $( [2-Jan-1997] $)
  $}

  ${
    $d x y z w $.
    axrep4.1 $e |- ( ph -> A. z ph ) $.
    $( A more traditional version of the Axiom of Replacement. $)
    axrep4 $p |- ( A. x E. z A. y ( ph -> y = z ) ->
                E. z A. y ( y e. z <-> E. x ( x e. w /\ ph ) ) ) $=
      ( cv wceq wi wal wex wcel wa wb axrep3 19.35i ax-17 hba1 hbbi hbal elequ2
      hban hbex hbe1 19.3 anbi2i exbii a1i bibi12d albid cbvex sylib ) ACGZDGZH
      ICJDKZBJUMBGZLZUPEGLZADJZMZBKZNZCJZBKUMUNLZURAMZBKZNZCJZDKUOVCBABDCEOPVCV
      HBDVBDCUQVADUQDQUTDBURUSDURDQADRUBUCSTVGBCVDVFBVDBQVEBUDSTUPUNHZVBVGCVICQ
      VIUQVDVAVFBDCUAVAVFNVIUTVEBUSAURADFUEUFUGUHUIUJUKUL $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d x y z w $.
    axrep5.1 $e |- ( ph -> A. z ph ) $.
    $( Axiom of Replacement (similar to Axiom Rep of [BellMachover] p. 463).
       The antecedent tells us ` ph ` is analogous to a "function" from ` x `
       to ` y ` (although it is not really a function since it is a wff and not
       a class).  In the consequent we postulate the existence of a set ` z `
       that corresponds to the "image" of ` ph ` restricted to some other set
       ` w ` .  The hypothesis says ` z ` must not be free in ` ph ` . $)
    axrep5 $p |- ( A. x ( x e. w -> E. z A. y ( ph -> y = z ) ) ->
                E. z A. y ( y e. z <-> E. x ( x e. w /\ ph ) ) ) $=
      ( cv wcel wceq wi wal wex wa wb 19.37v impexp albii 19.21v bitr2i exbii
      bitr3i ax-17 hban axrep4 sylbi anabs5 bibi2i sylib ) BGEGHZACGZDGZIZJZCKZ
      DLJZBKZUJUKHZUIUIAMZMZBLZNZCKZDLZUQURBLZNZCKZDLUPURULJZCKZDLZBKVCUOVIBUOU
      IUNJZDLVIUIUNDOVJVHDVHUIUMJZCKVJVGVKCUIAULPQUIUMCRSTUAQURBCDEUIADUIDUBFUC
      UDUEVBVFDVAVECUTVDUQUSURBUIAUFTUGQTUH $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d y z A v $.  $d z ph v $.  $d A w v $.  $d x y z v $.  $d x w v $.
    zfrepclf.1 $e |- ( w e. A -> A. x w e. A ) $.
    zfrepclf.2 $e |- A e. _V $.
    zfrepclf.3 $e |- ( x e. A -> E. z A. y ( ph -> y = z ) ) $.
    $( An inference rule based on the Axiom of Replacement.  Typically, ` ph `
       defines a function from ` x ` to ` y ` . $)
    zfrepclf $p |- E. z A. y ( y e. z <-> E. x ( x e. A /\ ph ) ) $=
      ( vv cv wcel wa wex wb wal wceq wi ax-17 hbeq syl6bi alrimi axrep5 anbi1d
      eleq2 syl exbid bibi2d albidv exbidv mpbid vtocle ) CKZDKZLZBKZFLZAMZBNZO
      ZCPZDNZJFHJKZFQZUOUPVCLZAMZBNZOZCPZDNZVBVDVEAUMUNQRCPDNZRZBPVJVDVLBBEEVCF
      EKVCLBSGTZVDVEUQVKVCFUPUEZIUAUBABCDJADSUCUFVDVIVADVDVHUTCVDVGUSUOVDVFURBV
      MVDVEUQAVNUDUGUHUIUJUKUL $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d x y z A $.  $d z ph $.
    zfrep3cl.1 $e |- A e. _V $.
    zfrep3cl.2 $e |- ( x e. A -> E. z A. y ( ph -> y = z ) ) $.
    $( An inference rule based on the Axiom of Replacement.  Typically, ` ph `
       defines a function from ` x ` to ` y ` . $)
    zfrep3cl $p |- E. z A. y ( y e. z <-> E. x ( x e. A /\ ph ) ) $=
      ( cv wcel ax-17 zfrepclf ) ABCDCECHEIBJFGK $.
      $( [26-Nov-1995] $)
  $}

  ${
    $d ph y z $.  $d ps z $.  $d x y z $.
    zfrep4.1 $e |- { x | ph } e. _V $.
    zfrep4.2 $e |- ( ph -> E. z A. y ( ps -> y = z ) ) $.
    $( A version of Replacement using class abstractions. $)
    zfrep4 $p |- { y | E. x ( ph /\ ps ) } e. _V $=
      ( cv cab wcel wa wex cvv abid anbi1i exbii abbii wceq wb wal hbab1 sylbi
      wi zfrepclf abeq2 mpbir issetri eqeltrri ) CHACIZJZBKZCLZDIZABKZCLZDIMULU
      ODUKUNCUJABACNZOPQEUMEHZUMRZELDHZUQJULSDTZELBCDEDUIACDUAFUJABUSUQRUCDTELU
      PGUBUDURUTEULDUQUEPUFUGUH $.
      $( [26-Nov-1995] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                    Derive the Axiom of Separation
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.  $d y z ph w $.
    $( Separation Scheme, which is an axiom scheme of Zermelo's original
       theory.  Scheme Sep of [BellMachover] p. 463.  As we show here, it is
       redundant if we assume Replacement in the form of ~ ax-rep .  Some
       textbooks present Separation as a separate axiom scheme in order to show
       that much of set theory can be derived without the stronger
       Replacement.  The Separation Scheme is a weak form of Frege's Axiom of
       Comprehension, conditioning it (with ` x e. z ` ) so that it asserts the
       existence of a collection only if it is smaller than some other
       collection ` z ` that already exists.  This prevents Russell's paradox
       ~ ru .  In some texts, this scheme is called "Aussonderung" or the
       Subset Axiom.

       The variable ` x ` can appear free in the wff ` ph ` , which in
       textbooks is often written ` ph ( x ) ` .  To specify this in the
       Metamath language, we _omit_ the distinct variable requirement ($d) that
       ` x ` not appear in ` ph ` .

       For a version using a class variable, see ~ zfauscl , which requires the
       Axiom of Extensionality as well as Replacement for its derivation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows (contradicting ~ zfauscl ).
       However, as ~ axsep2 shows, we can eliminate the restriction that ` z `
       not occur in ` ph ` .

       Note: the distinct variable restriction that ` z ` not occur in ` ph `
       is actually redundant in this particular proof, but we keep it since its
       purpose is to demonstrate the derivation of the exact ~ ax-sep from
       ~ ax-rep .

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-sep below so that the uses of the Axiom of Separation can be more
       easily identified. $)
    axsep $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wcel wceq wa wex wb wal ax-17 axrep5 a9e equtr equcomi syl6 exbii
      wi adantrd alrimiv eximi mp1i mpg an12 elequ1 anbi1d equsex bitr3i bibi2i
      albii mpbi ) BFZCFZGZEFZDFZGZUQUNHZAIZIZEJZKZBLZCJZUPUNURGZAIZKZBLZCJUSVA
      UNUOHZTZBLZCJZTVFEVAEBCDVACMNUOUQHZCJVNUSCEOVOVMCVOVLBVOUTVKAVOUTUOUNHVKC
      EBPCBQRUAUBUCUDUEVEVJCVDVIBVCVHUPVCUTUSAIZIZEJVHVQVBEUTUSAUFSVPVHEBVHEMUT
      USVGAEBDUGUHUIUJUKULSUM $.
      $( [11-Sep-2006] $)

    $( The Axiom of Separation of ZF set theory.  See ~ axsep for more
       information.  It was derived as ~ axsep above and is therefore
       redundant, but we state it as a separate axiom here so that its uses can
       be identified more easily. $)
    ax-sep $a |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $.
  $}

  ${
    $d x y z w $.  $d y ph w $.  $d z w $.
    $( A less restrictive version of the Separation Scheme ~ axsep , where
       variables ` x ` and ` z ` can both appear free in the wff ` ph ` , which
       can therefore be thought of as ` ph ( x , z ) ` .  This version was
       derived from the more restrictive ~ ax-sep with no additional set theory
       axioms. $)
    axsep2 $p |- E. y A. x ( x e. y <-> ( x e. z /\ ph ) ) $=
      ( vw cv wceq wex wcel wa wb wal a9e ax-sep elequ2 biimprd pm4.71rd anbi1d
      anass syl6bb bibi2d albidv exbidv mpbiri exlimiv ax-mp ) EFZDFZGZEHBFZCFI
      ZUJUHIZAJZKZBLZCHZEDMUIUPEUIUPUKUJUGIZUMJZKZBLZCHUMBCENUIUOUTCUIUNUSBUIUM
      URUKUIUMUQULJZAJURUIULVAAUIULUQUIUQULEDBOPQRUQULASTUAUBUCUDUEUF $.
      $( [10-Dec-2006] $)
  $}

  ${
    $d x y A z $.  $d y ph z $.
    zfauscl.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) using a class variable.  To derive this
       from ~ ax-sep , we invoke the Axiom of Extensionality (indirectly via
       ~ vtocl ), which is needed for the justification of class variable
       notation.

       If we omit the requirement that ` y ` not occur in ` ph ` , we can
       derive a contradiction, as ~ notzfaus shows. $)
    zfauscl $p |- E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
      ( vz cv wcel wa wb wal wex eleq2 anbi1d bibi2d albidv exbidv ax-sep vtocl
      wceq ) BGZCGHZUAFGZHZAIZJZBKZCLUBUADHZAIZJZBKZCLFDEUCDTZUGUKCULUFUJBULUEU
      IUBULUDUHAUCDUAMNOPQABCFRS $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x ph z $.  $d x y z $.
    bm1.3ii.1 $e |- E. x A. y ( ph -> y e. x ) $.
    $( Convert implication to equivalence using the Separation Scheme
       (Aussonderung) ~ ax-sep .  Similar to Theorem 1.3ii of [BellMachover]
       p. 463. $)
    bm1.3ii $p |- E. x A. y ( y e. x <-> ph ) $=
      ( vz cv wcel wi wal wa wex wceq elequ2 imbi2d albidv cbvexv ax-sep pm3.2i
      wb mpbi exan 19.42v bimsc1 alanimi eximi sylbir exlimiv ax-mp ) ACFZEFZGZ
      HZCIZUIBFZGZUKAJSZCIZBKZJZEKUOASZCIZBKZUMUREUMEKZURAUOHZCIZBKVCDVEUMBEUNU
      JLZVDULCVFUOUKABECMNOPTACBEQRUAUSVBEUSUMUQJZBKVBUMUQBUBVGVABULUPUTCAUKUOU
      CUDUEUFUGUH $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y z $.
    $( Lemma for ~ ax9sep .  Derive a weakened version of ~ ax-9 , where ` x `
       and ` y ` must be distinct, from Separation ~ ax-sep and Extensionality
       ~ ax-ext . $)
    ax9seplem $p |- -. A. x -. x = y $=
      ( vz cv wceq wex wn wal wcel wi wa wb ax-sep biantru bibi2i biimpri alimi
      id ax-ext syl eximi ax-mp df-ex mpbi ) ADZBDZEZAFZUGGAHGCDZUEIZUIUFIZUIUI
      EZULJZKZLZCHZAFUHUMCABMUPUGAUPUJUKLZCHUGUOUQCUQUOUKUNUJUMUKULRNOPQABCSTUA
      UBUGAUCUD $.
      $( [12-Nov-2013] $)
  $}

  ${
    $d x z w v u t $.  $d y z w v u t $.
    $( Show that the Separation Axiom ~ ax-sep and Extensionality ~ ax-ext
       implies ~ ax-9 .  Note that ~ ax-9 and ~ ax-4 (which can be derived from
       ~ ax-9 ) are not used by the proof. $)
    ax9sep $p |- -. A. x -. x = y $=
      ( vz vw vv vu vt ax9seplem a9wa9 ) ABCDEFGGFHGCHFAHFDHCAHCDHAGHACHDGHDCHD
      BHAEHEBHI $.
      $( [12-Nov-2013] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Derive the Null Set Axiom
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    zfnuleu.1 $e |- E. x A. y -. y e. x $.
    $( Show the uniqueness of the empty set (using the Axiom of Extensionality
       via ~ bm1.1 to strengthen ~ axnul ). $)
    zfnuleu $p |- E! x A. y -. y e. x $=
      ( cv wcel wn wal weu wceq wb wex equid nbn3 albii exbii ax-17 bm1.1 ax-mp
      mpbi eubii mpbir ) BDZADEZFZBGZAHUCUBUBIZFZJZBGZAHZUIAKZUJUEAKUKCUEUIAUDU
      HBUFUCBLMNZOSUGABUGAPQRUEUIAULTUA $.
      $( [22-Dec-2007] $)
  $}

  ${
    $d x y z w $.
    $( Prove ~ axnul directly from ~ ax-rep without using any equality axioms
       ( ~ ax-9 thru ~ ax-16 ).  The wff ` x = x ` substituted for ` ph ` in
       the ~ ax-rep instance is arbitrary.  Here, we don't need to know if
       ` x = x ` is true or false, only that it's not both.  (Contributed by
       Jeff Hoffman, 4-Feb-2008.) $)
    axnulALT $p |- E. x A. y -. y e. x $=
      ( vw vz cv wceq wn wb wal wi wex wcel wa ax-rep pm5.19 mto intnan nex mpg
      ax-4 nbn albii exbii sylibr 19.8a pm2.21i ) AEZUGFZUHGHZAIZBEZUGFZJZBIZAK
      ZUKUGLZGZBIZAKZCUOCIUPCEDELZUJMZCKZHZBIZAKUSUIDABCNURVDAUQVCBVBUPVACUJUTU
      JUIUHOUIATPZQRUAUBUCUDUMUOBUNAUEUJULVEUFSS $.
      $( [4-Feb-2008] $)

    $( The Null Set Axiom of ZF set theory: there exists a set with no
       elements.  Axiom of Empty Set of [Enderton] p. 18.  In some textbooks,
       this is presented as a separate axiom; here we show it can be derived
       from Separation ~ ax-sep .  This version of the Null Set Axiom tells us
       that at least one empty set exists, but does not tells us that it is
       unique - we need the Axiom of Extensionality to do that (see
       ~ zfnuleu ).

       This proof, suggested by Jeff Hoffman (3-Feb-2008), uses only ~ ax-5 and
       ~ ax-gen from predicate calculus, which are valid in "free logic" i.e.
       logic holding in an empty domain (see Axiom A5 and Rule R2 of [LeBlanc]
       p. 277).  Thus our ~ ax-sep implies the existence of at least one set.
       Note that Kunen's version of ~ ax-sep (Axiom 3 of [Kunen] p. 11) does
       not imply the existence of a set because his is universally closed i.e.
       prefixed with universal quantifiers to eliminate all free variables.
       His existence is provided by a separate axiom stating ` E. x x = x `
       (Axiom 0 of [Kunen] p. 10).

       See ~ axnulALT for a proof directly from ~ ax-rep .

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-nul below so that the uses of the Null Set Axiom can be more easily
       identified. $)
    axnul $p |- E. x A. y -. y e. x $=
      ( vz cv wn wa wb wal wex ax-sep pm3.24 intnan id mtbiri alimi eximi ax-mp
      wcel ) BDZADRZSCDRZSSRZUBEFZFZGZBHZAITEZBHZAIUCBACJUFUHAUEUGBUETUDUCUAUBK
      LUEMNOPQ $.
      $( [9-Nov-2013] $)  $( [7-Aug-2003] $)

    $( The Null Set Axiom of ZF set theory.  It was derived as ~ axnul above
       and is therefore redundant, but we state it as a separate axiom here so
       that its uses can be identified more easily. $)
    ax-nul $a |- E. x A. y -. y e. x $.

    $( The Null Set Axiom of ZF set theory: the empty set exists.  Corollary
       5.16 of [TakeutiZaring] p. 20.  For the unabbreviated version, see
       ~ ax-nul .  (The proof was shortened by Andrew Salmon, 9-Jul-2011.) $)
    0ex $p |- (/) e. _V $=
      ( vx vy c0 cv wceq wex wcel wn wal ax-nul eq0 exbii mpbir issetri ) ACADZ
      CEZAFBDOGHBIZAFABJPQABOKLMN $.
      $( [9-Jul-2011] $) $( [5-Aug-1993] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           Theorems requiring subset and intersection existence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z $.
    $( No set contains all sets.  Theorem 41 of [Suppes] p. 30. $)
    nalset $p |- -. E. x A. y y e. x $=
      ( vz cv wcel wn wex wal alexn wa ax-sep wceq elequ1 elequ2 notbid anbi12d
      wb bitrd bibi12d a4v pclem6 syl eximi ax-mp mpgbi ) BDZADZEZFZBGZUHBHAGFA
      UHABICDZUFEZUKUGEZUKUKEZFZJZQZCHZBGUJUOCBAKURUIBURUFUFEZUHUSFZJZQZUIUQVBC
      BUKUFLZULUSUPVACBBMVCUMUHUOUTCBAMVCUNUSVCUNUFUKEUSCBCMCBBNROPSTUSUHUAUBUC
      UDUE $.
      $( [23-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( The universal class is not a member of itself (and thus is not a set).
       Proposition 5.21 of [TakeutiZaring] p. 21; our proof, however, does not
       depend on the Axiom of Regularity. $)
    vprc $p |- -. _V e. _V $=
      ( vx vy cvv wcel cv wceq wex wal nalset vex tbt albii dfcleq bitr4i exbii
      wb mtbi isset mtbir ) CCDAEZCFZAGZBEZTDZBHZAGUBABIUEUAAUEUDUCCDZPZBHUAUDU
      GBUFUDBJKLBTCMNOQACRS $.
      $( [23-Aug-1993] $)
  $}

  $( The universal class doesn't belong to any class.  (Contributed by FL,
     31-Dec-2006.) $)
  nvel $p |- -. _V e. A $=
    ( cvv wcel vprc elex mto ) BACBBCDBAEF $.
    $( [29-Dec-2006] $)

  $( The universal class does not exist. $)
  vnex $p |- -. E. x x = _V $=
    ( cvv wcel cv wceq wex vprc isset mtbi ) BBCADBEAFGABHI $.
    $( [4-Jul-2005] $)

  ${
    $d A x y $.  $d B x y $.
    inex1.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) using class notation.  Compare Exercise
       4 of [TakeutiZaring] p. 22. $)
    inex1 $p |- ( A i^i B ) e. _V $=
      ( vx vy cin cv wceq wex wcel wa wb zfauscl dfcleq elin bibi2i albii bitri
      wal exbii mpbir issetri ) DABFZDGZUCHZDIEGZUDJZUFAJUFBJZKZLZESZDIUHEDACMU
      EUKDUEUGUFUCJZLZESUKEUDUCNUMUJEULUIUGUFABOPQRTUAUB $.
      $( [5-Aug-1993] $)
  $}

  ${
    inex2.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) using class notation. $)
    inex2 $p |- ( B i^i A ) e. _V $=
      ( cin cvv incom inex1 eqeltri ) BADABDEBAFABCGH $.
      $( [27-Apr-1994] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Closed-form, generalized Separation Scheme. $)
    inex1g $p |- ( A e. V -> ( A i^i B ) e. _V ) $=
      ( vx cv cin cvv wcel wceq ineq1 eleq1d vex inex1 vtoclg ) DEZBFZGHABFZGHD
      ACOAIPQGOABJKOBDLMN $.
      $( [7-Apr-1995] $)
  $}

  ${
    ssex.1 $e |- B e. _V $.
    $( The subset of a set is also a set.  Exercise 3 of [TakeutiZaring]
       p. 22.  This is one way to express the Axiom of Separation ~ ax-sep
       (a.k.a.  Subset Axiom). $)
    ssex $p |- ( A C_ B -> A e. _V ) $=
      ( wss cin wceq cvv wcel df-ss inex2 eleq1 mpbii sylbi ) ABDABEZAFZAGHZABI
      ONGHPBACJNAGKLM $.
      $( [27-Apr-1994] $)
  $}

  ${
    ssexi.1 $e |- B e. _V $.
    ssexi.2 $e |- A C_ B $.
    $( The subset of a set is also a set. $)
    ssexi $p |- A e. _V $=
      ( wss cvv wcel ssex ax-mp ) ABEAFGDABCHI $.
      $( [9-Sep-1993] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The subset of a set is also a set.  Exercise 3 of [TakeutiZaring] p. 22
       (generalized). $)
    ssexg $p |- ( ( A C_ B /\ B e. C ) -> A e. _V ) $=
      ( vx wcel wss cvv cv wi wceq sseq2 imbi1d vex ssex vtoclg impcom ) BCEABF
      ZAGEZADHZFZRIQRIDBCSBJTQRSBAKLASDMNOP $.
      $( [11-Sep-2006] $) $( [14-Aug-1994] $)
  $}

  $( Existence of a difference. $)
  difexg $p |- ( A e. V -> ( A \ B ) e. _V ) $=
    ( cdif wss wcel cvv difss ssexg mpan ) ABDZAEACFKGFABHKACIJ $.
    $( [26-May-1998] $)

  ${
    $d x y A $.  $d y ph $.
    zfausab.1 $e |- A e. _V $.
    $( Separation Scheme (Aussonderung) in terms of a class abstraction. $)
    zfausab $p |- { x | ( x e. A /\ ph ) } e. _V $=
      ( cv wcel wa cab ssab2 ssexi ) BECFAGBHCDABCIJ $.
      $( [8-Jun-1994] $)
  $}

  ${
    $d x A $.
    $( Separation Scheme in terms of a restricted class abstraction. $)
    rabexg $p |- ( A e. V -> { x e. A | ph } e. _V ) $=
      ( crab wss wcel cvv ssrab2 ssexg mpan ) ABCEZCFCDGLHGABCILCDJK $.
      $( [23-Oct-1999] $)
  $}

  ${
    $d x A $.
    rabex.1 $e |- A e. _V $.
    $( Separation Scheme in terms of a restricted class abstraction. $)
    rabex $p |- { x e. A | ph } e. _V $=
      ( cvv wcel crab rabexg ax-mp ) CEFABCGEFDABCEHI $.
      $( [19-Jul-1996] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    elssabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Membership in a class abstraction involving a subset.  Unlike ~ elabg ,
       ` A ` does not have to be a set. $)
    elssabg $p |- ( B e. V ->
                  ( A e. { x | ( x C_ B /\ ph ) } <-> ( A C_ B /\ ps ) ) ) $=
      ( wcel wss wa cvv wi cv cab wb ssexg expcom adantrd wceq sseq1 elab3g syl
      anbi12d ) EFHZDEIZBJZDKHZLDCMZEIZAJZCNHUFOUDUEUGBUEUDUGDEFPQRUJUFCDKUHDSU
      IUEABUHDETGUCUAUB $.
      $( [29-Aug-2007] $) $( [29-Aug-2006] $)
  $}

  $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
  elpw2g $p |- ( B e. V -> ( A e. ~P B <-> A C_ B ) ) $=
    ( wcel cpw wss elpwi cvv ssexg elpwg biimparc syldan expcom impbid2 ) BCDZA
    BEDZABFZABGQOPQOAHDZPABCIRPQABHJKLMN $.
    $( [7-Aug-2000] $)

  ${
    elpw2.1 $e |- B e. _V $.
    $( Membership in a power class.  Theorem 86 of [Suppes] p. 47. $)
    elpw2 $p |- ( A e. ~P B <-> A C_ B ) $=
      ( cvv wcel cpw wss wb elpw2g ax-mp ) BDEABFEABGHCABDIJ $.
      $( [11-Oct-2007] $)
  $}

  ${
    $d x A $.
    $( The intersection of a non-empty class exists.  Exercise 5 of
       [TakeutiZaring] p. 44 and its converse. $)
    intex $p |- ( A =/= (/) <-> |^| A e. _V ) $=
      ( vx c0 wne cint cvv wcel cv wex n0 wss intss1 vex ssex syl exlimiv sylbi
      wceq vprc inteq int0 syl6eq eleq1d mtbiri necon2ai impbii ) ACDZAEZFGZUGB
      HZAGZBIUIBAJUKUIBUKUHUJKUIUJALUHUJBMNOPQUIACACRZUIFFGSULUHFFULUHCEFACTUAU
      BUCUDUEUF $.
      $( [15-Mar-2007] $) $( [13-Aug-2002] $)
  $}

  $( If a class intersection is not a set, it must be the universe. $)
  intnex $p |- ( -. |^| A e. _V <-> |^| A = _V ) $=
    ( cint cvv wcel wn wceq intex necon1bbii inteq int0 syl6eq sylbi vprc eleq1
    c0 mtbiri impbii ) ABZCDZEZRCFZTAOFZUASAOAGHUBROBCAOIJKLUASCCDMRCCNPQ $.
    $( [3-Jul-2005] $)

  ${
    $d x y $.  $d ph y $.
    $( The intersection of a non-empty class abstraction exists. $)
    intexab $p |- ( E. x ph <-> |^| { x | ph } e. _V ) $=
      ( wex cab c0 wne cint cvv wcel abn0 intex bitr3i ) ABCABDZEFMGHIABJMKL $.
      $( [21-Oct-2003] $)
  $}

  $( The intersection of a non-empty restricted class abstraction exists. $)
  intexrab $p |- ( E. x e. A ph <-> |^| { x e. A | ph } e. _V ) $=
    ( cv wcel wa wex cab cint cvv wrex crab intexab df-rex df-rab inteqi eleq1i
    3bitr4i ) BDCEAFZBGSBHZIZJEABCKABCLZIZJESBMABCNUCUAJUBTABCOPQR $.
    $( [21-Oct-2003] $)

  ${
    $d A x y $.  $d B y $.
    $( The existence of an indexed union. ` x ` is normally a free-variable
       parameter in ` B ` , which should be read ` B ( x ) ` .  (Contributed by
       FL, 19-Sep-2011.) $)
    iinexg $p |- ( ( A =/= (/) /\ A. x e. A B e. C )
    -> |^|_ x e. A B e. _V ) $=
      ( vy c0 wne wcel wral wa ciin cv wceq wrex cab cint cvv wex wi sylib abn0
      dfiin2g adantl elisset rgenw r19.2z mpan2 r19.35 imp rexcom4 sylibr intex
      eqeltrd ) BFGZCDHZABIZJZABCKZELCMZABNZEOZPZQUPURVBMUNAEBCDUBUCUQVAFGZVBQH
      UQUTERZVCUQUSERZABNZVDUNUPVFUNUOVESZABNZUPVFSUNVGABIVHVGABECDUDUEVGABUFUG
      UOVEABUHTUIUSAEBUJTUTEUAUKVAULTUM $.
      $( [19-Sep-2011] $)
  $}

  ${
    $d x y $.  $d x A $.  $d y ph $.  $d x ps $.  $d x ch $.
    intabs.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    intabs.2 $e |- ( x = |^| { y | ps } -> ( ph <-> ch ) ) $.
    intabs.3 $e |- ( |^| { y | ps } C_ A /\ ch ) $.
    $( Absorption of a redundant conjunct in the intersection of a class
       abstraction. $)
    intabs $p |- |^| { x | ( x C_ A /\ ph ) } = |^| { x | ph } $=
      ( cv wss wa cab cint cvv wcel wceq sseq1 anbi12d intmin3 intnex ssv sseq2
      wn mpbiri sylbi pm2.61i cbvabv inteqi sseqtr4i simpr ss2abi intss ax-mp
      eqssi ) DJZFKZALZDMZNZADMZNZUTBEMZNZVBVDOPZUTVDKZURVDFKZCLDVDOUPVDQUQVGAC
      UPVDFRHSITVEUDVDOQZVFVCUAVHVFUTOKUTUBVDOUTUCUEUFUGVAVCABDEGUHUIUJUSVAKVBU
      TKURADUQAUKULUSVAUMUNUO $.
      $( [3-Jul-2005] $)
  $}

  ${
    $d A x y z $.  $d B x y z $.
    $( The intersection of a union ` U. A ` with a class ` B ` is equal to the
       union of the intersections of each element of ` A ` with ` B ` .
       (Contributed by FL, 24-Mar-2007.) $)
    inuni $p |- ( U. A i^i B ) = U. { x | E. y e. A x = ( y i^i B ) } $=
      ( vz cuni cin cv wceq wrex cab wcel wex eluni2 anbi1i elin r19.41v bitr4i
      wa ancom exbii rexcom4 vex inex1 eleq2 ceqsexv bitri rexbii 3bitr4i eqriv
      3bitri eluniab ) ECFZDGZAHZBHZDGZIZBCJZAKFZEHZUNLZVAUOLZUSSZAMZVAUTLVAUML
      ZVADLZSVAUPLZBCJZVGSZVBVEVFVIVGBVACNOVAUMDPVEURVCSZAMZBCJZVHVGSZBCJVJVEVK
      BCJZAMVMVDVOAVDUSVCSVOVCUSTURVCBCQRUAVKBACUBRVLVNBCVLVAUQLZVNVCVPAUQUPDBU
      CUDUOUQVAUEUFVAUPDPUGUHVHVGBCQUKUIUSAVAULRUJ $.
      $( [25-Mar-2011] $) $( [24-Mar-2007] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Theorems requiring empty set existence
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    $( Construct, from any class ` A ` , a set equal to it when the class
       exists and equal to the empty set when the class is proper.  This
       theorem shows that the constructed set always exists. $)
    class2set $p |- { x e. A | A e. _V } e. _V $=
      ( wcel crab rabexg wn c0 wrex wceq cv simpl nrexdv rabn0 necon1bbii sylib
      cvv 0ex syl6eqel pm2.61i ) BPCZTABDZPCTABPETFZUAGPUBTABHZFUAGIUBTABUBAJBC
      KLUCUAGTABMNOQRS $.
      $( [16-Oct-2003] $)

    $( Equality theorem based on ~ class2set .  (The proof was shortened by
       Raph Levien, 30-Jun-2006.) $)
    class2seteq $p |- ( A e. V -> { x e. A | A e. _V } = A ) $=
      ( wcel cvv crab wceq elex wral cv ax-1 ralrimiv rabid2 sylibr eqcomd syl
      ) BCDBEDZQABFZBGBCHQBRQQABIBRGQQABQAJBDKLQABMNOP $.
      $( [13-Dec-2005] $)
  $}

  $( Every power class contains the empty set. $)
  0elpw $p |- (/) e. ~P A $=
    ( c0 cpw wcel wss 0ss 0ex elpw mpbir ) BACDBAEAFBAGHI $.
    $( [25-Oct-2007] $)

  $( The empty set and its power set are not equal. $)
  0nep0 $p |- (/) =/= { (/) } $=
    ( c0 csn 0ex snnz necomi ) ABAACDE $.
    $( [13-Apr-2007] $) $( [23-Dec-1993] $)

  $( Something cannot be equal to both the null set and the power set of the
     null set. $)
  0inp0 $p |- ( A = (/) -> -. A = { (/) } ) $=
    ( c0 wceq csn wne wn 0nep0 neeq1 mpbiri df-ne sylib ) ABCZABDZEZAMCFLNBMEGA
    BMHIAMJK $.
    $( [30-Sep-2003] $)

  $( The removal of the empty set from a class does not affect its union. $)
  unidif0 $p |- U. ( A \ { (/) } ) = U. A $=
    ( c0 csn cdif cuni cun uniun undif1 uncom eqtr2i unieqi 0ex uneq2i 3eqtr4ri
    unisn un0 uneq1i 3eqtri ) ABCZDZEZBAEZFZUBBFUBUASAFZEZSEZUBFUCTSFZEUAUFFZUE
    UATSGUDUGUGASFUDASHASIJKUHUABFUAUFBUABLOZMUAPJNSAGUFBUBUIQRBUBIUBPR $.
    $( [22-Mar-2004] $)

  ${
    $d x y A $.  $d y B $.
    $( An indexed intersection of the empty set, with a non-empty index set, is
       empty. $)
    iin0 $p |- ( A =/= (/) <-> |^|_ x e. A (/) = (/) ) $=
      ( vy c0 wne ciin wceq cv wcel cab r19.3rzv abbi2dv df-iin syl6reqr cvv wn
      wral 0ex n0i ax-mp 0iin eqeq1i mtbir iineq1 eqeq1d mtbiri necon2ai impbii
      ) BDEZABDFZDGZUIDCHDIZABQZCJUJUIUMCDULABKLACBDMNUKBDBDGZUKADDFZDGZUPODGZD
      OIUQPRODSTUOODADUAUBUCUNUJUODABDDUDUEUFUGUH $.
      $( [20-Oct-2005] $)
  $}

  ${
    $d x A $.
    notzfaus.1 $e |- A = { (/) } $.
    notzfaus.2 $e |- ( ph <-> -. x e. y ) $.
    $( In the Separation Scheme ~ zfauscl , we require that ` y ` not occur in
       ` ph ` (which can be generalized to "not be free in").  Here we show
       special cases of ` A ` and ` ph ` that result in a contradiction by
       violating this requirement. $)
    notzfaus $p |- -. E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
      ( cv wcel wa wb wal wn wex c0 wne csn 0ex snnz eqnetri mpbi n0 biimt iman
      wi anbi2i xchbinxr syl6bb xor3 sylibr eximi ax-mp exnal nex ) BGZCGHZUNDH
      ZAIZJZBKZCURLZBMZUSLUPBMZVADNOVBDNPNENQRSBDUATUPUTBUPUOUQLZJUTUPUOUPUOUDZ
      VCUPUOUBVDUPUOLZIUQUPUOUCAVEUPFUEUFUGUOUQUHUIUJUKURBULTUM $.
      $( [8-Oct-2006] $) $( [8-Feb-2006] $)
  $}

  $( The intersection of the universal class is empty. $)
  intv $p |- |^| _V = (/) $=
    ( c0 cvv wcel cint wceq 0ex int0el ax-mp ) ABCBDAEFBGH $.
    $( [11-Sep-2008] $)

  ${
    $d x y z A $.
    axpweq.1 $e |- A e. _V $.
    $( Two equivalent ways to express the Power Set Axiom.  Note that ~ ax-pow
       is not used by the proof. $)
    axpweq $p |- ( ~P A e. _V
                <-> E. x A. y ( A. z ( z e. y -> z e. A ) -> y e. x ) ) $=
      ( cpw cvv wcel cv wex wal wss ssid elpwg mpbiri wceq pweq eleq2d cla4egv
      wi mpd elex exlimiv impbii vex elpw2 pwss dfss2 imbi1i albii 3bitri exbii
      bitri ) DFZGHZUNAIZFZHZAJZCIZBIZHUTDHTCKZVAUPHZTZBKZAJUOUSUOUNUNFZHZUSUOV
      GUNUNLUNMUNUNGNOURVGAUNGUPUNPUQVFUNUPUNQRSUAURUOAUNUQUBUCUDURVEAURUNUPLVA
      DLZVCTZBKVEUNUPAUEUFBDUPUGVIVDBVHVBVCCVADUHUIUJUKULUM $.
      $( [22-Jun-2009] $)
  $}

$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Power Sets
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
            Introduce the Axiom of Power Sets
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y z w $.
    $( Axiom of Power Sets.  An axiom of Zermelo-Fraenkel set theory.  It
       states that a set ` y ` exists that includes the power set of a given
       set ` x ` i.e. contains every subset of ` x ` .  The variant ~ axpow2
       uses explicit subset notation.  A version using class notation is
       ~ pwex . $)
    ax-pow $a |- E. y A. z ( A. w ( w e. z -> w e. x ) -> z e. y ) $.

    $( Axiom of Power Sets expressed with fewest number of different
       variables. $)
    zfpow $p |- E. x A. y ( A. x ( x e. y -> x e. z ) -> y e. x ) $=
      ( vw cv wcel wal wex ax-pow wceq elequ1 imbi12d cbvalv imbi1i albii exbii
      wi mpbi ) DEZBEZFZSCEZFZQZDGZTAEZFZQZBGZAHUFTFZUFUBFZQZAGZUGQZBGZAHCABDIU
      IUOAUHUNBUEUMUGUDULDASUFJUAUJUCUKDABKDACKLMNOPR $.
      $( [14-Aug-2003] $)

    $( A variant of the Axiom of Power Sets ~ ax-pow using subset notation.
       Problem in {BellMachover] p. 466. $)
    axpow2 $p |- E. y A. z ( z C_ x -> z e. y ) $=
      ( vw cv wss wcel wi wal wex ax-pow dfss2 imbi1i albii exbii mpbir ) CEZAE
      ZFZQBEGZHZCIZBJDEZQGUCRGHDIZTHZCIZBJABCDKUBUFBUAUECSUDTDQRLMNOP $.
      $( [4-Jun-2006] $)

    $( A variant of the Axiom of Power Sets ~ ax-pow .  For any set ` x ` ,
       there exists a set ` y ` whose members are exactly the subsets of ` x `
       i.e. the power set of ` x ` .  Axiom Pow of [BellMachover] p. 466. $)
    axpow3 $p |- E. y A. z ( z C_ x <-> z e. y ) $=
      ( cv wss wcel wb wal wex axpow2 bm1.3ii bicom albii exbii mpbir ) CDZADEZ
      PBDFZGZCHZBIRQGZCHZBIQBCABCJKTUBBSUACQRLMNO $.
      $( [26-Jun-2009] $) $( [4-Jun-2006] $)
  $}

  ${
    $d w x y z $.
    $( Every set is an element of some other set.  See ~ elALT for a shorter
       proof using more axioms.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    el $p |- E. y x e. y $=
      ( vz cv wcel wal zfpow wceq ax-14 alrimiv ax-13 embantd a4imv eximi ax-mp
      wi wex ) BDZCDZERADZEPZBFZSREZPZCFZBQTREZBQBCAGUEUFBUDUFCASTHZUBUCUFUGUAB
      CABIJCABKLMNO $.
      $( [25-Jul-2011] $) $( [4-Jan-2002] $)
  $}

  ${
    $d A x y z $.
    zfpowcl.1 $e |- A e. _V $.
    $( Power set axiom expressed in class notation.  Axiom 4 of [TakeutiZaring]
       p. 17.  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    pwex $p |- ~P A e. _V $=
      ( vz vy vx cv cpw cvv wcel wceq pweq eleq1d wss cab df-pw wex wal bm1.3ii
      wb axpow2 abeq2 exbii mpbir issetri eqeltri vtocl ) CFZGZHIAGZHICABUGAJUH
      UIHUGAKLUHDFZUGMZDNZHDUGOEULEFZULJZEPUJUMIUKSDQZEPUKEDCEDTRUNUOEUKDUMUAUB
      UCUDUEUF $.
      $( [25-Jul-2011] $) $( [5-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( Power set axiom expressed in class notation, with the sethood
       requirement as an antecedent.  Axiom 4 of [TakeutiZaring] p. 17. $)
    pwexg $p |- ( A e. V -> ~P A e. _V ) $=
      ( vx cv cpw cvv wcel wceq pweq eleq1d vex pwex vtoclg ) CDZEZFGAEZFGCABNA
      HOPFNAIJNCKLM $.
      $( [30-Oct-2003] $)

    $( Existence of a class of subsets.  (The proof was shortened by Andrew
       Salmon, 25-Jul-2011.) $)
    abssexg $p |- ( A e. V -> { x | ( x C_ A /\ ph ) } e. _V ) $=
      ( wcel cpw cvv cv wss wa pwexg df-pw eleq1i simpl ss2abi ssexg mpan sylbi
      cab syl ) CDECFZGEZBHCIZAJZBSZGEZCDKUBUCBSZGEZUFUAUGGBCLMUEUGIUHUFUDUCBUC
      ANOUEUGGPQRT $.
      $( [25-Jul-2011] $) $( [15-Jul-2006] $)
  $}

  ${
    $d x y A $.
    $( A singleton is a set.  Theorem 7.13 of [Quine] p. 51, but proved using
       only Extensionality, Power Set, and Separation.  Unlike the proof of
       ~ zfpair , Replacement is not needed.  (The proof was shortened by
       Andrew Salmon, 25-Jul-2011.)  See also ~ snex . $)
    snexALT $p |- { A } e. _V $=
      ( cpw cvv wcel csn wss snsspw ssexg mpan wn pwexg con3i wceq snprc biimpi
      c0 0ex syl6eqel syl pm2.61i ) ABZCDZAEZCDZUCUAFUBUDAGUCUACHIUBJACDZJZUDUE
      UBACKLUFUCPCUFUCPMANOQRST $.
      $( [25-Jul-2011] $) $( [7-Aug-1994] $)
  $}

  $( The power set of the empty set (the ordinal 1) is a set. $)
  p0ex $p |- { (/) } e. _V $=
    ( c0 cpw csn cvv pw0 0ex pwex eqeltrri ) ABACDEAFGH $.
    $( [23-Dec-1993] $)

  $( The power set of the empty set (the ordinal 1) is a set.  This has a
     shorter proof than ~ p0ex but uses more axioms. $)
  p0exALT $p |- { (/) } e. _V $=
    ( c0 snexALT ) AB $.
    $( [23-Dec-1993] $)

  $( The power set of the power set of the empty set (the ordinal 2) is a
     set. $)
  pp0ex $p |- { (/) , { (/) } } e. _V $=
    ( c0 csn cpw cpr cvv pwpw0 p0ex pwex eqeltrri ) ABZCAJDEFJGHI $.
    $( [5-Aug-1993] $)

  $( The ordinal number 3 is a set, proved without the Axiom of Union
     ~ ax-un . $)
  ord3ex $p |- { (/) , { (/) } , { (/) , { (/) } } } e. _V $=
    ( c0 csn cpr ctp cun cvv df-tp cpw pwpr pp0ex pwex eqeltrri wss unss2 ax-mp
    snsspr2 ssexi eqeltri ) AABZASCZDTTBZEZFASTGUBTSBZTCZEZTHUEFASITJKLUAUDMUBU
    EMUCTPUAUDTNOQR $.
    $( [2-May-2009] $)

  ${
    $d w x y z $.
    $( At least two sets exist (or in terms of first-order logic, the universe
       of discourse has two or more objects).  Note that we may not substitute
       the same variable for both ` x ` and ` y ` (as indicated by the distinct
       variable requirement), for otherwise we would contradict ~ stdpc6 .

       This theorem is proved directly from set theory axioms (no set theory
       definitions) and does not use ~ ax-ext or ~ ax-sep .  See ~ dtruALT for
       a shorter proof using these axioms.

       The proof makes use of dummy variables ` z ` and ` w ` which do not
       appear in the final theorem.  They must be distinct from each other and
       from ` x ` and ` y ` .  In other words, if we were to substitute ` x `
       for ` z ` throughout the proof, the proof would fail.  Although this
       requirement is made explicitly in the set.mm source file, it is implicit
       on the web page (i.e. doesn't appear in the "Distinct variable
       group"). $)
    dtru $p |- -. A. x x = y $=
      ( vw vz cv wceq wn wex wcel wa wi ax-pow id ax-gen eximi ax-mp con3d ax-8
      wal a4imev elequ2 imbi1d albidv elequ1 imbi12d ax-nul ax-4 eeanv mpbir2an
      a4v mpi ax-14 com12 imp 2eximi equequ2 notbid syl6bi a1d pm2.61i exlimivv
      exnal mpbi ) AEZBEZFZGZAHZVFASGCEZDEZFZGZDHCHZVHVDVIIZVDVJIZGZJZDHCHZVMVR
      VNCHZVPDHZVEVJIZVEVDIZKZBSZVJVIIZKZDSZCHVSACDBLWGVNCWGWBWBKZBSZVNWHBWBMNW
      FWIVNKDAVJVDFZWDWIWEVNWJWCWHBWJWAWBWBDABUAUBUCDACUDUEUJUKOPVPASZDHVTDAUFW
      KVPDVPAUGOPVNVPCDUHUIVQVLCDVNVPVLVNVKVOVKVNVOCDAULUMQUNUOPVLVHCDVJVEFZVLV
      HKWLVLVIVEFZGZVHWLVKWMDBCUPUQWNVGACVDVIFVFWMACBRQTURWLGZVHVLWOVGADVDVJFVF
      WLADBRQTUSUTVAPVFAVBVC $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x y $.
    $( This theorem shows that axiom ~ ax-16 is redundant in the presence of
       theorem ~ dtru , which states simply that at least two things exist.
       This justifies the remark at
       ~ http://us.metamath.org/mpegif/mmzfcnd.html#twoness (which links to
       this theorem). $)
    ax16b $p |- ( A. x x = y -> ( ph -> A. x ph ) ) $=
      ( cv wceq wal wi dtru pm2.21i ) BDCDEBFAABFGBCHI $.
      $( [7-Nov-2006] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( Existential uniqueness implies there is a value for which the wff
       argument is false. $)
    eunex $p |- ( E! x ph -> E. x -. ph ) $=
      ( vy wex cv wceq wi wal wa wn weu dtru alim mtoi exlimiv adantl ax-17 eu3
      exnal 3imtr4i ) ABDZABECEFZGBHZCDZIABHZJZABKAJBDUDUFUAUCUFCUCUEUBBHBCLAUB
      BMNOPABCACQRABST $.
      $( [24-Oct-2010] $)
  $}

  ${
    $d A x $.
    $( A class is a subclass of the power class of its union.  Exercise 6(b) of
       [Enderton] p. 38. $)
    pwuni $p |- A C_ ~P U. A $=
      ( vx cuni cpw cv wcel wss elssuni vex elpw sylibr ssriv ) BAACZDZBEZAFOMG
      ONFOAHOMBIJKL $.
      $( [14-Oct-1996] $)
  $}

  ${
    $d x y $.
    $( A version of ~ dtru ("two things exist") with a shorter proof that uses
       more axioms but may be easier to understand.

       Assuming that ZF set theory is consistent, we cannot prove this theorem
       unless we specify that ` x ` and ` y ` be distinct.  Specifically,
       theorem ~ cla4ev requires that ` x ` must not occur in the subexpression
       ` -. y = { (/) } ` in step 4 nor in the subexpression ` -. y = (/) ` in
       step 9.  The proof verifier will require that ` x ` and ` y ` be in a
       distinct variable group to ensure this.  You can check this by deleting
       the $d statement in set.mm and rerunning the verifier, which will print
       a detailed explanation of the distinct variable violation. $)
    dtruALT $p |- -. A. x x = y $=
      ( cv wceq wn wex wal csn 0inp0 p0ex eqeq2 notbid cla4ev syl pm2.61i exnal
      c0 0ex eqcom albii xchbinx mpbi ) BCZACZDZEZAFZUDUCDZAGZEUCQDZUGUJUCQHZDZ
      EZUGUCIUFUMAUKJUDUKDUEULUDUKUCKLMNUFUJEAQRUDQDUEUJUDQUCKLMOUGUEAGUIUEAPUE
      UHAUCUDSTUAUB $.
      $( [15-Jul-1994] $)
  $}

  ${
    $d x y $.
    dtrucor.1 $e |- x = y $.
    $( Corollary of ~ dtru .  This example illustrates the danger of blindly
       trusting the standard Deduction Theorem without accounting for free
       variables: the theorem form of this deduction is not valid, as shown by
       ~ dtrucor2 . $)
    dtrucor $p |- x =/= y $=
      ( cv wceq wne wal dtru pm2.21i mpg ) ADZBDZEZKLFZAMAGNABHICJ $.
      $( [27-Jun-2002] $)
  $}

  ${
    dtrucor2.1 $e |- ( x = y -> x =/= y ) $.
    $( The theorem form of the deduction ~ dtrucor leads to a contradiction, as
       mentioned in the "Wrong!" example at
       ~ http://us.metamath.org/mpegif/mmdeduction.html#bad . $)
    dtrucor2 $p |- ( ph /\ -. ph ) $=
      ( cv wceq wex wn wa a9e wi necon2bi pm2.01 ax-mp nex pm2.24ii ) BEZCEZFZB
      GAAHIBCJSBSSHZKTSQRDLSMNOP $.
      $( [20-Oct-2007] $)
  $}


  ${
    $d x y $.
    $( Demonstration of a theorem (scheme) that requires (meta)variables ` x `
       and ` y ` to be distinct, but no others.  It bundles the theorem schemes
       ` E. x ( x = y -> x e. x ) ` and ` E. x ( x = y -> y e. x ) ` .  Compare
       ~ dvdemo2 .  ("Bundles" is a term introduced by Raph Levien.) $)
    dvdemo1 $p |- E. x ( x = y -> z e. x ) $=
      ( cv wceq wn wex wcel wi wal dtru exnal mpbir pm2.21 eximi ax-mp ) ADZBDE
      ZFZAGZRCDQHZIZAGTRAJFABKRALMSUBARUANOP $.
      $( [1-Dec-2006] $)
  $}

  ${
    $d x z $.
    $( Demonstration of a theorem (scheme) that requires (meta)variables ` x `
       and ` z ` to be distinct, but no others.  It bundles the theorem schemes
       ` E. x ( x = x -> z e. x ) ` and ` E. x ( x = y -> y e. x ) ` .  Compare
       ~ dvdemo1 . $)
    dvdemo2 $p |- E. x ( x = y -> z e. x ) $=
      ( cv wcel wex wceq wi el ax-1 eximi ax-mp ) CDADZEZAFMBDGZNHZAFCAINPANOJK
      L $.
      $( [1-Dec-2006] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Derive the Axiom of Pairing
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z w v $.  $d y z w v $.
    $( The Axiom of Pairing of Zermelo-Fraenkel set theory.  Axiom 2 of
       [TakeutiZaring] p. 15.  In some textbooks this is stated as a separate
       axiom; here we show it is redundant since it can be derived from the
       other axioms.

       This theorem should not be referenced by any proof other than ~ axpr .
       Instead, use ~ zfpair2 below so that the uses of the Axiom of Pairing
       can be more easily identified. $)
    zfpair $p |- { x , y } e. _V $=
      ( vw vz vv cv cpr wceq wo cab cvv dfpr2 wex isseti 19.41v mpbiran equequ2
      c0 wa prlem1 csn 19.43 prlem2 exbii 0ex p0ex orbi12i 3bitr3ri abbii pp0ex
      eqeltrri wal 0inp0 alrimdv a4imev orcom con2i syl7bi jaoi zfrep4 eqeltri
      wi ) AFZBFZGCFZVCHZVEVDHZIZCJZKCVCVDLVIDFZRHZVJRUAZHZIZVKVFSZVMVGSZIZSZDM
      ZCJKVHVSCVQDMVODMZVPDMZIVSVHVOVPDUBVQVRDVKVFVMVGUCUDVTVFWAVGVTVKDMVFDRUEN
      VKVFDOPWAVMDMVGDVLUFNVMVGDOPUGUHUIVNVQDCERVLGVNDJKDRVLLUJUKVKVQVEEFZHZVBZ
      CULZEMVMVKWEEAWBVCHZVKWDCWFVKVFVMVGWCEACQVJUMZTUNUOVMWEEBWBVDHZVMWDCVQVPV
      OIWHVMWCVOVPUPWHVMVGVKVFWCEBCQVKVMWGUQTURUNUOUSUTVAVA $.
      $( [18-Oct-1995] $)

    $( Unabbreviated version of the Axiom of Pairing of ZF set theory, derived
       as a theorem from the other axioms.

       This theorem should not be referenced by any proof.  Instead, use
       ~ ax-pr below so that the uses of the Axiom of Pairing can be more
       easily identified. $)
    axpr $p |- E. z A. w ( ( w = x \/ w = y ) -> w e. z ) $=
      ( cv cpr wceq wex wo wcel wi wal zfpair isseti wb dfcleq vex bibi2i sylbi
      elpr bi2 alimi eximi ax-mp ) CEZAEZBEZFZGZCHDEZUFGUJUGGIZUJUEJZKZDLZCHCUH
      ABMNUIUNCUIULUJUHJZOZDLUNDUEUHPUPUMDUPULUKOUMUOUKULUJUFUGDQTRULUKUASUBSUC
      UD $.
      $( [14-Nov-2006] $)

    $( The Axiom of Pairing of ZF set theory.  It was derived as theorem ~ axpr
       above and is therefore redundant, but we state it as a separate axiom
       here so that its uses can be identified more easily. $)
    ax-pr $a |- E. z A. w ( ( w = x \/ w = y ) -> w e. z ) $.

    $( Derive the abbreviated version of the Axiom of Pairing from ~ ax-pr .
       See ~ zfpair for its derivation from the other axioms. $)
    zfpair2 $p |- { x , y } e. _V $=
      ( vz vw cv cpr wceq wex wcel wo wal ax-pr bm1.3ii dfcleq vex bibi2i albii
      wb elpr bitri exbii mpbir issetri ) CAEZBEZFZCEZUFGZCHDEZUGIZUIUDGUIUEGJZ
      RZDKZCHUKCDABCDLMUHUMCUHUJUIUFIZRZDKUMDUGUFNUOULDUNUKUJUIUDUEDOSPQTUAUBUC
      $.
      $( [14-Nov-2006] $)
  $}

  ${
    $d x A $.
    $( A singleton is a set.  Theorem 7.13 of [Quine] p. 51, proved using
       Extensionality, Separation, and Pairing.  See also ~ snexALT .  (Revised
       by Mario Carneiro, 19-May-2013.) $)
    snex $p |- { A } e. _V $=
      ( vx cvv wcel csn cpr dfsn2 cv wceq preq12 anidms eleq1d zfpair2 syl5eqel
      vtoclg wn c0 snprc biimpi 0ex syl6eqel pm2.61i ) ACDZAEZCDUCUDAAFZCAGBHZU
      FFZCDUECDBACUFAIZUGUECUHUGUEIUFUFAAJKLBBMONUCPZUDQCUIUDQIARSTUAUB $.
      $( [19-May-2013] $) $( [7-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The Axiom of Pairing using class variables.  Theorem 7.13 of [Quine]
       p. 51.  By virtue of its definition, an unordered pair remains a set
       (even though no longer a pair) even when its components are proper
       classes (see ~ prprc ), so we can dispense with hypotheses requiring
       them to be sets. $)
    prex $p |- { A , B } e. _V $=
      ( vx vy cvv wcel cpr wi wceq preq2 eleq1d zfpair2 vtoclg preq1 syl5ib csn
      cv wn snex syl6eqel vtocleg prprc1 prprc2 pm2.61nii ) AEFZBEFZABGZEFZUFUH
      HCAEUFCQZBGZEFZUIAIZUHUIDQZGZEFUKDBEUMBIUNUJEUMBUIJKCDLMULUJUGEUIABNKOUAU
      ERUGBPEABUBBSTUFRUGAPEABUCASTUD $.
      $( [5-Aug-1993] $)
  $}

  ${
    $d x y $.
    $( Every set is an element of some other set.  This has a shorter proof
       than ~ el but uses more axioms. $)
    elALT $p |- E. y x e. y $=
      ( cv csn wcel wex vex snid snex eleq2 cla4ev ax-mp ) ACZMDZEZMBCZEZBFMAGH
      QOBNMIPNMJKL $.
      $( [4-Jan-2002] $)
  $}

  ${
    $( A singleton of a set belongs to the power class of a class containing
       the set.  (Contributed by Alan Sare, 25-Aug-2011.) $)
    snelpwi $p |- ( A e. B -> { A } e. ~P B ) $=
      ( wcel csn wss cpw snssi snex elpw sylibr ) ABCADZBEKBFCABGKBAHIJ $.
      $( [25-Aug-2011] $)
  $}

  ${
    snelpw.1 $e |- A e. _V $.
    $( A singleton of a set belongs to the power class of a class containing
       the set. $)
    snelpw $p |- ( A e. B <-> { A } e. ~P B ) $=
      ( wcel csn wss cpw snss snex elpw bitr4i ) ABDAEZBFLBGDABCHLBAIJK $.
      $( [1-Apr-1998] $)
  $}

  ${
    $d x y z $.
    $( A theorem similar to extensionality, requiring the existence of a
       singleton.  Exercise 8 of [TakeutiZaring] p. 16. $)
    rext $p |- ( A. z ( x e. z -> y e. z ) -> x = y ) $=
      ( cv wcel wal csn wceq vex snid snex eleq2 imbi12d cla4v mpi elsn equcomi
      wi sylbi syl ) ADZCDZEZBDZUBEZRZCFZUDUAGZEZUAUDHZUGUAUHEZUIUAAIJUFUKUIRCU
      HUAKUBUHHUCUKUEUIUBUHUALUBUHUDLMNOUIUDUAHUJBUAPBAQST $.
      $( [10-Aug-1993] $)
  $}

  ${
    $d A x $.  $d B x $.
    $( Classes are subclasses if and only if their power classes are
       subclasses.  Exercise 18 of [TakeutiZaring] p. 18. $)
    sspwb $p |- ( A C_ B <-> ~P A C_ ~P B ) $=
      ( vx wss cpw wcel sstr2 com12 vex elpw 3imtr4g ssrdv csn ssel snex bitr4i
      cv snss 3imtr3g impbii ) ABDZAEZBEZDZUACUBUCUACQZADZUEBDZUEUBFUEUCFUFUAUG
      UEABGHUEACIZJUEBUHJKLUDCABUDUEMZUBFZUIUCFZUEAFZUEBFZUBUCUINUJUIADULUIAUEO
      ZJUEAUHRPUKUIBDUMUIBUNJUEBUHRPSLT $.
      $( [13-Oct-1996] $)
  $}

  ${
    $d A x y $.
    $( A class equals the union of its power class.  Exercise 6(a) of
       [Enderton] p. 38.  (The proof was shortened by Alan Sare,
       28-Dec-2008.) $)
    unipw $p |- U. ~P A = A $=
      ( vx vy cpw cuni cv wcel wex eluni elelpwi exlimiv sylbi csn snid snelpwi
      wa vex elunii sylancr impbii eqriv ) BADZEZABFZUCGZUDAGZUEUDCFZGUGUBGPZCH
      UFCUDUBIUHUFCUDUGAJKLUFUDUDMZGUIUBGUEUDBQNUDAOUDUIUBRSTUA $.
      $( [29-Dec-2008] $) $( [14-Oct-1996] $)
  $}

  $( Membership of a power class.  Exercise 10 of [Enderton] p. 26. $)
  pwel $p |- ( A e. B -> ~P A e. ~P ~P U. B ) $=
    ( wcel cpw cuni wss elssuni sspwb sylib cvv wb pwexg elpwg syl mpbird ) ABC
    ZADZBEZDZDCZQSFZPARFUAABGARHIPQJCTUAKABLQSJMNO $.
    $( [13-Jan-2007] $)

  $( A class is transitive iff its power class is transitive.  (Contributed by
     Alan Sare, 25-Aug-2011.) $)
  pwtr $p |- ( Tr A <-> Tr ~P A ) $=
    ( cpw cuni wss wtr unipw sseq1i df-tr dftr4 3bitr4ri ) ABZCZKDAKDKEAELAKAFG
    KHAIJ $.
    $( [15-Jun-2014] $) $( [25-Aug-2011] $)

  ${
    $d A x $.  $d B x $.
    $( An extensionality-like principle defining subclass in terms of
       subsets. $)
    ssextss $p |- ( A C_ B <-> A. x ( x C_ A -> x C_ B ) ) $=
      ( wss cpw cv wcel wi wal sspwb dfss2 vex elpw imbi12i albii 3bitri ) BCDB
      EZCEZDAFZQGZSRGZHZAISBDZSCDZHZAIBCJAQRKUBUEATUCUAUDSBALZMSCUFMNOP $.
      $( [30-Jun-2004] $)

    $( An extensionality-like principle that uses the subset instead of the
       membership relation: two classes are equal iff they have the same
       subsets. $)
    ssext $p |- ( A = B <-> A. x ( x C_ A <-> x C_ B ) ) $=
      ( wss wa cv wi wal wceq wb ssextss anbi12i eqss albiim 3bitr4i ) BCDZCBDZ
      EAFZBDZRCDZGAHZTSGAHZEBCISTJAHPUAQUBABCKACBKLBCMSTANO $.
      $( [30-Jun-2004] $)

    $( Negation of subclass relationship.  Compare ~ nss .  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    nssss $p |- ( -. A C_ B <-> E. x ( x C_ A /\ -. x C_ B ) ) $=
      ( cv wss wn wa wex wi wal exanali ssextss xchbinxr bicomi ) ADZBEZOCEZFGA
      HZBCEZFRPQIAJSPQAKABCLMN $.
      $( [25-Jul-2011] $) $( [30-Jun-2004] $)
  $}

  $( Classes are equal if and only if their power classes are equal.  Exercise
     19 of [TakeutiZaring] p. 18. $)
  pweqb $p |- ( A = B <-> ~P A = ~P B ) $=
    ( wss wa cpw wceq sspwb anbi12i eqss 3bitr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNF
    KOLPABGBAGHABIMNIJ $.
    $( [13-Oct-1996] $)

  ${
    $d x A $.
    intid.1 $e |- A e. _V $.
    $( The intersection of all sets to which a set belongs is the singleton of
       that set. $)
    intid $p |- |^| { x | A e. x } = { A } $=
      ( cv wcel cab cint csn cvv wss snex eleq2 intmin3 ax-mp wi elintab mpgbir
      snid id snssi eqssi ) BADZEZAFGZBHZUEIEUDUEJBKUCBUEEAUEIUBUEBLBCRMNBUDEZU
      EUDJUFUCUCOAUCABCPUCSQBUDTNUA $.
      $( [5-Jun-2009] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( "At most one" existence implies a class abstraction exists. $)
    moabex $p |- ( E* x ph -> { x | ph } e. _V ) $=
      ( vy wmo cv wceq wi wal wex cab cvv wcel ax-17 mo2 hba1 pm4.71 biimpi a4s
      wa wb ancom syl6bb abbid csn df-sn eqeltrri simpl ss2abi syl6eqel exlimiv
      snex ssexi sylbi ) ABDABECEZFZGZBHZCIABJZKLZABCACMNUQUSCUQURUOASZBJZKUQAU
      TBUPBOUQAAUOSZUTUPAVBTZBUPVCAUOPQRAUOUAUBUCVAUOBJZUNUDVDKBUNUEUNUKUFUTUOB
      UOAUGUHULUIUJUM $.
      $( [30-Dec-1996] $)
  $}

  $( The abstraction of a wff with existential uniqueness exists. $)
  euabex $p |- ( E! x ph -> { x | ph } e. _V ) $=
    ( weu wmo cab cvv wcel eumo moabex syl ) ABCABDABEFGABHABIJ $.
    $( [25-Nov-1994] $)

  ${
    $d x y A $.
    $( A non-empty class (even if proper) has a non-empty subset. $)
    nnullss $p |- ( A =/= (/) -> E. x ( x C_ A /\ x =/= (/) ) ) $=
      ( vy c0 wne cv wcel wex wss wa n0 csn vex snss snnz snex wceq sseq1 neeq1
      sylbi anbi12d cla4ev mpan2 exlimiv ) BDECFZBGZCHAFZBIZUGDEZJZAHZCBKUFUKCU
      FUELZBIZUKUEBCMZNUMULDEZUKUEUNOUJUMUOJAULUEPUGULQUHUMUIUOUGULBRUGULDSUAUB
      UCTUDT $.
      $( [27-May-2007] $) $( [23-Aug-2003] $)
  $}

  ${
    $d x y z A $.  $d y z ph $.
    $( Restricted existence in a class (even if proper) implies restricted
       existence in a subset. $)
    exss $p |- ( E. x e. A ph -> E. y ( y C_ A /\ E. x e. y ph ) ) $=
      ( vz wrex cv wcel wa cab wex wss crab c0 wne df-rab rabn0 sylbi wsbc wceq
      neeq1i 3bitr3i csn vex snss ssab2 sstr2 mpi simpr equsb1 elsn sbbii mpbir
      jctil df-clab sban bitri eleq2i 3bitri 3imtr4i ne0i syl sylib sseq1 rexeq
      n0 snex anbi12d cla4ev syl2anc exlimiv ) ABDFZEGZBGZDHZAIZBJZHZEKZCGZDLZA
      BVTFZIZCKZABDMZNOVQNOVLVSWEVQNABDPUAABDQEVQVFUBVRWDEVRVMUCZDLZABWFFZWDVRW
      FVQLZWGVMVQEUDUEWIVQDLWGABDUFWFVQDUGUHRVRABWFMZNOZWHVRVMWJHZWKVOBVMSZABVM
      SZIZVNWFHZBVMSZWNIZVRWLWOWNWQWMWNUIWQVNVMTZBVMSBEUJWPWSBEBVMUKULUMUNVRVPB
      VMSWOVPEBUOVOABEUPUQWLVMWPAIZBJZHWTBVMSWRWJXAVMABWFPURWTEBUOWPABEUPUSUTWJ
      VMVAVBABWFQVCWCWGWHICWFVMVGVTWFTWAWGWBWHVTWFDVDABVTWFVEVHVIVJVKR $.
      $( [23-Aug-2003] $)
  $}

  $( An ordered pair of classes is a set.  Exercise 7 of [TakeutiZaring]
     p. 16. $)
  opex $p |- <. A , B >. e. _V $=
    ( cop cvv wcel wa csn cpr c0 cif dfopif prex 0ex ifex eqeltri ) ABCADEBDEFZ
    AGZABHZHZIJDABKPSIQRLMNO $.
    $( [26-Apr-2015] $) $( [18-Aug-1993] $)

  $( An ordered triple of classes is a set. $)
  otex $p |- <. A , B , C >. e. _V $=
    ( cotp cop cvv df-ot opex eqeltri ) ABCDABEZCEFABCGJCHI $.
    $( [3-Apr-2015] $)

  ${
    elop.1 $e |- A e. _V $.
    elop.2 $e |- B e. _V $.
    elop.3 $e |- C e. _V $.
    $( An ordered pair has two elements.  Exercise 3 of [TakeutiZaring] p. 15.
       (Revised by Mario Carneiro, 26-Apr-2015.) $)
    elop $p |- ( A e. <. B , C >. <-> ( A = { B } \/ A = { B , C } ) ) $=
      ( cop wcel csn cpr wceq wo dfop eleq2i elpr bitri ) ABCGZHABIZBCJZJZHARKA
      SKLQTABCEFMNARSDOP $.
      $( [26-Apr-2015] $) $( [5-Aug-1993] $)
  $}

  ${
    opi1.1 $e |- A e. _V $.
    opi1.2 $e |- B e. _V $.
    $( One of the two elements in an ordered pair. $)
    opi1 $p |- { A } e. <. A , B >. $=
      ( csn cpr cop snex prid1 dfop eleqtrri ) AEZLABFZFABGLMAHIABCDJK $.
      $( [26-Apr-2015] $) $( [5-Aug-1993] $)

    $( One of the two elements of an ordered pair. $)
    opi2 $p |- { A , B } e. <. A , B >. $=
      ( cpr csn cop prex prid2 dfop eleqtrri ) ABEZAFZLEABGMLABHIABCDJK $.
      $( [26-Apr-2015] $) $( [5-Aug-1993] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                   Ordered pair theorem
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $( An ordered pair is nonempty iff the arguments are sets.  (Revised by
       Mario Carneiro, 26-Apr-2015.) $)
    opnz $p |- ( <. A , B >. =/= (/) <-> ( A e. _V /\ B e. _V ) ) $=
      ( cop c0 wne cvv wcel wa opprc necon1ai csn cpr dfopg snex eqnetrd impbii
      prnz a1i ) ABCZDEAFGBFGHZTSDABIJTSAKZABLZLZDABFFMUCDETUAUBANQROP $.
      $( [26-Apr-2015] $) $( [24-Jan-2004] $)
  $}

  ${
    opth1.1 $e |- A e. _V $.
    opth1.2 $e |- B e. _V $.
    $( An ordered pair is nonempty if the arguments are sets.  (Contributed by
       Mario Carneiro, 26-Apr-2015.) $)
    opnzi $p |- <. A , B >. =/= (/) $=
      ( cop c0 wne cvv wcel wa pm3.2i opnz mpbir ) ABEFGAHIZBHIZJNOCDKABLM $.
      $( [26-Apr-2015] $)

    $( Equality of the first members of equal ordered pairs.  (Revised by Mario
       Carneiro, 26-Apr-2015.) $)
    opth1 $p |- ( <. A , B >. = <. C , D >. -> A = C ) $=
      ( cop wceq csn cpr wo wcel opi1 id syl5eleq cvv wa oprcl dfopg syl wi a1i
      3syl eleqtrd elpri sneqr simpld prid1g eleq2 syl5ibrcom elsni eqcomd syl6
      jaod mpd ) ABGZCDGZHZAIZCIZHZUSCDJZHZKZACHZURUSUTVBJZLVDURUSUQVFURUSUPUQA
      BEFMURNOZURUSUQLZCPLZDPLZQZUQVFHVGCDUSRZCDPPSUCUDUSUTVBUETURVAVEVCVAVEUAU
      RACEUFUBURVCCUSLZVEURVMVCCVBLZURVIVNURVIVJURVHVKVGVLTUGCDPUHTUSVBCUIUJVMC
      ACAUKULUMUNUO $.
      $( [26-Apr-2015] $) $( [28-May-2008] $)

    $d x B $.  $d x C $.  $d x D $.
    $( The ordered pair theorem.  If two ordered pairs are equal, their first
       elements are equal and their second elements are equal.  Exercise 6 of
       [TakeutiZaring] p. 16.  Note that ` C ` and ` D ` are not required to be
       sets due our specific ordered pair definition. $)
    opth $p |- ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) $=
      ( vx cop wceq wa opth1 cvv wcel cpr csn syl dfopg prex preqr2 wi syl5eleq
      opi1 id oprcl simprd opeq1d eqtr3d simpld sylancl 3eqtr3d cv preq2 eqeq2d
      eqeq2 imbi12d vex vtoclg sylc jca opeq12 impbii ) ABHZCDHZIZACIZBDIZJVDVE
      VFABCDEFKZVDDLMZCBNZCDNZIZVFVDCLMZVHVDAOZVCMVLVHJZVDVMVBVCABEFUBVDUCZUACD
      VMUDPZUEVDCOZVINZVQVJNZIVKVDCBHZVCVRVSVDVBVTVCVDACBVGUFVOUGVDVLBLMVTVRIVD
      VLVHVPUHFCBLLQUIVDVNVCVSIVPCDLLQPUJVIVJVQCBRCDRSPVICGUKZNZIZBWAIZTVKVFTGD
      LWADIZWCVKWDVFWEWBVJVIWADCULUMWADBUNUOBWACFGUPSUQURUSABCDUTVA $.
      $( [28-May-1995] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    $( Ordered pair theorem. ` C ` and ` D ` are not required to be sets under
       our specific ordered pair definition. $)
    opthg $p |- ( ( A e. V /\ B e. W ) ->
                 ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) ) $=
      ( vx vy cv cop wceq wa wb opeq1 eqeq1d eqeq1 anbi1d bibi12d opeq2 vex
      anbi2d opth vtocl2g ) GIZHIZJZCDJZKZUDCKZUEDKZLZMAUEJZUGKZACKZUJLZMABJZUG
      KZUNBDKZLZMGHABEFUDAKZUHUMUKUOUTUFULUGUDAUENOUTUIUNUJUDACPQRUEBKZUMUQUOUS
      VAULUPUGUEBASOVAUJURUNUEBDPUARUDUECDGTHTUBUC $.
      $( [26-Apr-2015] $) $( [14-Oct-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.  $d x y X $.
    $( Ordered pair theorem. $)
    opthg2 $p |- ( ( C e. V /\ D e. W ) ->
                 ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) ) $=
      ( wcel wa cop wceq opthg eqcom anbi12i 3bitr4g ) CEGDFGHCDIZABIZJCAJZDBJZ
      HPOJACJZBDJZHCDABEFKPOLSQTRACLBDLMN $.
      $( [26-Apr-2015] $) $( [14-Oct-2005] $)
  $}

  ${
    opth2.1 $e |- C e. _V $.
    opth2.2 $e |- D e. _V $.
    $( Ordered pair theorem. $)
    opth2 $p |- ( <. A , B >. = <. C , D >. <-> ( A = C /\ B = D ) ) $=
      ( cvv wcel cop wceq wa wb opthg2 mp2an ) CGHDGHABICDIJACJBDJKLEFABCDGGMN
      $.
      $( [21-Sep-2014] $)
  $}

  ${
    otth.1 $e |- A e. _V $.
    otth.2 $e |- B e. _V $.
    otth.3 $e |- R e. _V $.
    $( Ordered triple theorem, with triple express with ordered pairs.
       (Revised by Mario Carneiro, 26-Apr-2015.) $)
    otth2 $p |- ( <. <. A , B >. , R >. = <. <. C , D >. , S >. <->
                ( A = C /\ B = D /\ R = S ) ) $=
      ( cop wceq wa w3a opth anbi1i opex df-3an 3bitr4i ) ABJZCDJZKZEFKZLACKZBD
      KZLZUBLSEJTFJKUCUDUBMUAUEUBABCDGHNOSETFABPINUCUDUBQR $.
      $( [26-Apr-2015] $) $( [1-May-1995] $)

    $( Ordered triple theorem. $)
    otth $p |- ( <. A , B , R >. = <. C , D , S >. <->
      ( A = C /\ B = D /\ R = S ) ) $=
      ( cotp wceq cop w3a df-ot eqeq12i otth2 bitri ) ABEJZCDFJZKABLELZCDLFLZKA
      CKBDKEFKMRTSUAABENCDFNOABCDEFGHIPQ $.
      $( [26-Apr-2015] $) $( [25-Sep-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    eqvinop.1 $e |- B e. _V $.
    eqvinop.2 $e |- C e. _V $.
    $( A variable introduction law for ordered pairs.  Analog of Lemma 15 of
       [Monk2] p. 109. $)
    eqvinop $p |- ( A = <. B , C >. <-> E. x E. y ( A = <. x , y >. /\
                  <. x , y >. = <. B , C >. ) ) $=
      ( cv cop wceq wa wex vex opth anbi2i ancom 3bitri exbii eqeq2d ceqsexv
      anass 19.42v opeq2 opeq1 bitr2i ) CAHZBHZIZJZUHDEIZJZKZBLZALUFDJZCUFEIZJZ
      KZALCUJJZUMUQAUMUNUGEJZUIKZKZBLUNUTBLZKUQULVABULUIUNUSKZKVCUIKVAUKVCUIUFU
      GDEAMBMNOUIVCPUNUSUIUAQRUNUTBUBVBUPUNUIUPBEGUSUHUOCUGEUFUCSTOQRUPURADFUNU
      OUJCUFDEUDSTUE $.
      $( [28-May-1995] $)
  $}

  ${
    $d x z w A $.  $d y z w A $.  $d z w ph $.
    $( Substitution of class ` A ` for ordered pair ` <. x , y >. ` .
       (Unnecessary distinct variable restrictions were removed by Andrew
       Salmon, 11-Jul-2011.) $)
    copsexg $p |- ( A = <. x , y >. ->
                  ( ph <-> E. x E. y ( A = <. x , y >. /\ ph ) ) ) $=
      ( vz vw cv cop wceq wa wex wb wi vex 19.8a syl5bi syl5 weu euequ1 eubii
      eqvinop 19.23bi ex opth anbi1i 2exbii hbe1 wal hbae anass a1i eximd biidd
      anim2d drex1 sylibd wn exbii 19.40 hbn1 dveeq2 anim1d syl6 pm2.61i exlimi
      19.9d equcom eupick com12 eqcom sylan9 sylbi impbid anbi1d 2exbidv bibi2d
      mpbi mpan eqeq1 imbi12d mpbiri adantr exlimivv pm2.43i ) DBGZCGZHZIZAWHAJ
      ZCKBKZLZWHDEGZFGZHZIZWNWGIZJZFKEKWHWKMZEFDWEWFBNCNUAWQWREFWOWRWPWOWRWPAWP
      AJZCKZBKZLZMWPAXAWPAXAWSXACWTBOUBUCWPWLWEIZWMWFIZJZXAAMWLWMWEWFENFNUDZXAX
      EAJZCKZBKZXEAWSXGBCWPXEAXFUEUFXIXCXDAJZCKZJZBKZXEAXHXMBXLBUGWFWEIZCUHZXHX
      MMXOXHXLCKXMXOXGXLCCBCUIXGXCXJJZXOXLXCXDAUJZXOXJXKXCXJXKMXOXJCOUKUNPULXLX
      LCBXOXLUMUOUPXOUQZXHXLXMXHXPCKZXRXLXGXPCXQURXSXCCKZXKJXRXLXCXJCUSXRXTXCXK
      XCXRCXNCUTCBEVAVFVBQPXLBOVCVDVEXCXMXKXDAXMXCXKXCBRZXMXCXKMWEWLIZBRYABESYB
      XCBBEVGTVQXCXKBVHVRVIXKXDAXDCRZXKXDAMWFWMIZCRYCCFSYDXDCWFWMVJTVQXDACVHVRV
      IVKQPVLVMWOWHWPWKXBDWNWGVSZWOWJXAAWOWIWSBCWOWHWPAYEVNVOVPVTWAWBWCVLWD $.
      $( [25-Jul-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    $( Closed theorem form of ~ copsex2g . $)
    copsex2t $p |- ( ( A. x A. y ( ( x = A /\ y = B ) -> ( ph <-> ps ) )
      /\ ( A e. V /\ B e. W ) ) ->
                  ( E. x E. y ( <. A , B >. = <. x , y >. /\ ph ) <-> ps ) ) $=
      ( wcel wa cv wceq wb wal wex cop elisset hbe1 ax-17 hbbi wi anim12i eeanv
      sylibr hba1 hba2 hbex opeq12 copsexg eqcoms syl adantl 19.21bi imp bitr3d
      ax-4 ex exlimd sylan2 ) EGIZFHIZJZCKZELZDKZFLZJZABMZUAZDNZCNZVGDOZCOZEFPZ
      VCVEPZLAJZDOZCOZBMZVBVDCOZVFDOZJVMUTVTVAWACEGQDFHQUBVDVFCDUCUDVKVMVSVKVLV
      SCVJCUEVRBCVQCRBCSTVKVGVSDVIDCUFVRBDVQDCVPDRUGBDSTVKVGVSVKVGJAVRBVGAVRMZV
      KVGVOVNLWBVCVEEFUHWBVNVOACDVNUIUJUKULVKVGVHVKVIDVJCUPUMUNUOUQURURUNUS $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d x y ps $.  $d x y A $.  $d x y B $.
    copsex2g.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( Implicit substitution inference for ordered pairs. $)
    copsex2g $p |- ( ( A e. V /\ B e. W ) ->
                  ( E. x E. y ( <. A , B >. = <. x , y >. /\ ph ) <-> ps ) ) $=
      ( wcel cv wceq wex cop wa wb elisset hbe1 ax-17 hbbi eeanv opeq12 copsexg
      hbex eqcoms syl bitr3d exlimi sylbir syl2an ) EGJCKZELZCMZDKZFLZDMZEFNZUK
      UNNZLAOZDMZCMZBPZFHJCEGQDFHQUMUPOULUOOZDMZCMVBULUOCDUAVDVBCVABCUTCRBCSTVC
      VBDVABDUTDCUSDRUDBDSTVCAVABVCURUQLAVAPZUKUNEFUBVEUQURACDUQUCUEUFIUGUHUHUI
      UJ $.
      $( [28-May-1995] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y z w ps $.  $d x y z w R $.  $d x y z w S $.
    copsex4g.1 $e |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) ->
                     ( ph <-> ps ) ) $.
    $( An implicit substitution inference for 2 ordered pairs. $)
    copsex4g $p |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) ->
                      ( E. x E. y E. z E. w ( ( <. A , B >. = <. x , y >. /\
                      <. C , D >. = <. z , w >. ) /\ ph ) <-> ps ) ) $=
      ( wcel wa cop cv wceq wex vex eqcom opth bitri anbi12i anbi1i a1i 4exbidv
      wb id cgsex4g bitrd ) GKNHLNOIKNJLNOOZGHPZCQZDQZPZRZIJPZEQZFQZPZRZOZAOZFS
      ESDSCSUNGRUOHROZUSIRUTJROZOZAOZFSESDSCSBULVDVHCDEFVDVHUHULVCVGAUQVEVBVFUQ
      UPUMRVEUMUPUAUNUOGHCTDTUBUCVBVAURRVFURVAUAUSUTIJETFTUBUCUDUEUFUGABVGCDEFG
      HIJKLVGUIMUJUK $.
      $( [5-Aug-1995] $)
  $}

  $( A property of ordered pairs.  (Contributed by Mario Carneiro,
     26-Apr-2015.) $)
  0nelop $p |- -. (/) e. <. A , B >. $=
    ( c0 cop wcel csn cpr wo id cvv wa oprcl dfopg syl eleqtrd elpri wne necomd
    wceq wn simpld snnzg prnzg jca neanior sylib pm2.65i ) CABDZEZCAFZSCABGZSHZ
    UICUJUKGZEULUICUHUMUIIUIAJEZBJEZKUHUMSABCLZABJJMNOCUJUKPNUICUJQZCUKQZKULTUI
    UQURUIUJCUIUNUJCQUIUNUOUPUAZAJUBNRUIUKCUIUNUKCQUSABJUCNRUDCUJCUKUEUFUG $.
    $( [26-Apr-2015] $)

  $( Equivalence of existence implied by equality of ordered pairs. $)
  opeqex $p |- ( <. A , B >. = <. C , D >. ->
    ( ( A e. _V /\ B e. _V ) <-> ( C e. _V /\ D e. _V ) ) ) $=
    ( cop wceq c0 wne cvv wcel wa neeq1 opnz 3bitr3g ) ABEZCDEZFOGHPGHAIJBIJKCI
    JDIJKOPGLABMCDMN $.
    $( [28-May-2008] $)

  $( Equivalence of existence implied by equality of ordered triples. $)
  oteqex2 $p |- ( <. <. A , B >. , C >. = <. <. R , S >. , T >. ->
    ( C e. _V <-> T e. _V ) ) $=
    ( cop wceq cvv wcel wa opeqex opex biantrur 3bitr4g ) ABGZCGDEGZFGHPIJZCIJZ
    KQIJZFIJZKSUAPCQFLRSABMNTUADEMNO $.
    $( [26-Apr-2015] $)

  $( Equivalence of existence implied by equality of ordered triples. $)
  oteqex $p |- ( <. <. A , B >. , C >. = <. <. R , S >. , T >. ->
    ( ( A e. _V /\ B e. _V /\ C e. _V ) <->
      ( R e. _V /\ S e. _V /\ T e. _V ) ) ) $=
    ( cop wceq cvv wcel w3a wi simp3 a1i oteqex2 syl5ibr wb wa opex df-3an mpan
    opthg simprbda opeqex syl adantl anbi12d 3bitr4g expcom pm5.21ndd ) ABGZCGD
    EGZFGHZCIJZAIJZBIJZUNKZDIJZEIJZFIJZKZUQUNLUMUOUPUNMNVAUNUMUTURUSUTMABCDEFOZ
    PUNUMUQVAQUNUMRZUOUPRZUNRURUSRZUTRUQVAVCVDVEUNUTVCUKULHZVDVEQUNUMVFCFHZUKIJ
    UNUMVFVGRQABSUKCULFIIUBUAUCABDEUDUEUMUNUTQUNVBUFUGUOUPUNTURUSUTTUHUIUJ $.
    $( [26-Apr-2015] $) $( [28-May-2008] $)

  ${
    opcom.1 $e |- A e. _V $.
    opcom.2 $e |- B e. _V $.
    $( An ordered pair commutes iff its members are equal. $)
    opcom $p |- ( <. A , B >. = <. B , A >. <-> A = B ) $=
      ( cop wceq wa opth eqcom anbi2i anidm 3bitri ) ABEBAEFABFZBAFZGMMGMABBACD
      HNMMBAIJMKL $.
      $( [28-May-2009] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    moop2.1 $e |- B e. _V $.
    $( "At most one" property of an ordered pair.  (Revised by Mario Carneiro,
       26-Apr-2015.) $)
    moop2 $p |- E* x A = <. B , x >. $=
      ( vy vz cv cop wceq wmo csb wa wi wal eqtr2 vex opth simprbi wcel ax-17
      syl gen2 hbcsb1 hbop hbeq csbeq1a id opeq12d eqeq2d mo4f mpbir ) BCAGZHZI
      ZAJUNBAEGZCKZUOHZIZLZULUOIZMZENANVAAEUSUMUQIZUTBUMUQOVBCUPIUTCULUPUODAPQR
      UAUBUNURAEAFFBUQFGZBSATAFUPUOAFUOCVCUOSATZUCVDUDUEUTUMUQBUTCUPULUOAUOCUFU
      TUGUHUIUJUK $.
      $( [26-Apr-2015] $) $( [11-Apr-2004] $)
  $}

  ${
    opeqsn.1 $e |- A e. _V $.
    opeqsn.2 $e |- B e. _V $.
    opeqsn.3 $e |- C e. _V $.
    $( Equivalence for an ordered pair equal to a singleton. $)
    opeqsn $p |- ( <. A , B >. = { C } <-> ( A = B /\ C = { A } ) ) $=
      ( cop csn wceq cpr dfop eqeq1i snex prex preqsn eqcom anbi2i bitri 3bitri
      wa anidm anbi1i dfsn2 preq2 syl5req eqeq1d syl6bb pm5.32i ) ABGZCHZIAHZAB
      JZJZUJIUKULIZULCIZTZABIZCUKIZTZUIUMUJABDEKLUKULCAMABNFOUPUQUOTUSUNUQUOUNU
      LUKIUQBAIZTZUQUKULPABADEDOVAUQUQTUQUTUQUQBAPQUQUARSUBUQUOURUQUOUKCIURUQUL
      UKCUQUKAAJULAUCABAUDUEUFUKCPUGUHRS $.
      $( [3-Jun-2008] $)
  $}

  ${
    opeqpr.1 $e |- A e. _V $.
    opeqpr.2 $e |- B e. _V $.
    opeqpr.3 $e |- C e. _V $.
    opeqpr.4 $e |- D e. _V $.
    $( Equivalence for an ordered pair equal to an unordered pair. $)
    opeqpr $p |- ( <. A , B >. = { C , D }
  <-> ( ( C = { A } /\ D = { A , B } ) \/ ( C = { A , B } /\ D = { A } ) ) ) $=
      ( cop cpr wceq csn wa wo eqcom dfop eqeq2i snex prex preq12b 3bitri ) ABI
      ZCDJZKUCUBKUCALZABJZJZKCUDKDUEKMCUEKDUDKMNUBUCOUBUFUCABEFPQCDUDUEGHARABST
      UA $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x y z A $.
    $( "At most one" remains true inside ordered pair quantification. $)
    mosubopt $p |- ( A. y A. z E* x ph ->
                 E* x E. y E. z ( A = <. y , z >. /\ ph ) ) $=
      ( wmo wal cv cop wceq wex wa hba1 hbe1 hbmo wi hbex a4s exlimd wn copsexg
      ax-17 mobid biimpcd simpl 2eximi exlimiv con3i exmo ori syl pm2.61d1 ) AB
      FZDGZCGZECHDHIJZDKZCKZUPALZDKZCKZBFZUOUQVBCUNCMVACBUTCNOUNUQVBPCUNUPVBDUM
      DMVADBUTDCUSDNQOUMUPVBPDUPUMVBUPAVABUPBUBACDEUAUCUDRSRSURTVABKZTVBVCURVAU
      RBUSUPCDUPAUEUFUGUHVCVBVABUIUJUKUL $.
      $( [28-Aug-2007] $)
  $}

  ${
    $d x y z A $.
    mosubop.1 $e |- E* x ph $.
    $( "At most one" remains true inside ordered pair quantification. $)
    mosubop $p |- E* x E. y E. z ( A = <. y , z >. /\ ph ) $=
      ( wmo wal cv cop wceq wa wex gen2 mosubopt ax-mp ) ABGZDHCHECIDIJKALDMCMB
      GQCDFNABCDEOP $.
      $( [28-May-1995] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x y $.
    euop2.1 $e |- A e. _V $.
    $( Transfer existential uniqueness to second member of an ordered pair. $)
    euop2 $p |- ( E! x E. y ( x = <. A , y >. /\ ph ) <-> E! y ph ) $=
      ( cv cop opex moop2 euxfr2 ) ABCDCFZGDKHCBFDEIJ $.
      $( [10-Apr-2004] $)
  $}

  ${
    $d a b c x y A $.  $d a b c x y B $.  $d a b c x y C $.  $d a b c x ph $.
    $d y ps $.
    euotd.1 $e |- ( ph -> A e. _V ) $.
    euotd.2 $e |- ( ph -> B e. _V ) $.
    euotd.3 $e |- ( ph -> C e. _V ) $.
    euotd.4 $e |- ( ph -> ( ps <-> ( a = A /\ b = B /\ c = C ) ) ) $.
    $( Prove existential uniqueness for an ordered triple. $)
    euotd $p |- ( ph -> E! x E. a E. b E. c ( x = <. a , b , c >. /\ ps ) ) $=
      ( cv wceq wa wex cvv wcel wtru vy cotp wal weu w3a biimpa vex otth sylibr
      eqeq2d biimpd impancom expimpd exlimdv exlimdvv tru adantr ad2antrr simpr
      wsbc eqcomd biimpar jca a1i 2thd 3exp2 imp41 sbcied mpbiri hbsbc1 sbceq1a
      ax-17 cla4egf sylc hbex exbidv 2exbidv excom13 sylib eqeq1 anbi1d 3exbidv
      wb syl5ibrcom impbid alrimiv otex eqeq2 bibi2d albidv cla4ev syl df-eu )
      ACNZGNZHNZINZUBZOZBPZIQZHQGQZWNUANZOZWCZCUCZUAQZXBCUDAXBWNDEFUBZOZWCZCUCZ
      XGAXJCAXBXIAXAXIGHAWTXIIAWSBXIABWSXIABPZWSXIXLWRXHWNXLWODOZWPEOZWQFOZUEZW
      RXHOZABXPMUFWOWPDEWQFGUGHUGIUGUHZUIUJUKULUMUNUOAXBXIXHWROZBPZIQHQGQZAXTGQ
      HQZIQZYAAFRSZXTIFUTZGQZHQZYCLAERSZYEHEUTZGQZYGKADRSYIGDUTZYJJAYKTUPAYITGD
      RJAXMPZYETHERAYHXMKUQYLXNPXTTIFRAYDXMXNLURAXMXNXOXTTWCZAXMXNXOYMAXPPZXTTY
      NXSBYNWRXHYNXPXQAXPUSXRUIVAABXPMVBVCTYNUPVDVEVFVGVHVHVHVIYIYKGCDRWNDSGVLZ
      YIGCDYOVJYIGDVKVMVNYFYJHCERWNESHVLZYIHGYEHCEYPVJVOXNYEYIGYEHEVKVPVMVNYBYG
      ICFRWNFSIVLZYFIHYEIGXTICFYQVJVOVOXOXTYEHGXTIFVKVQVMVNXTIHGVRVSXIWTXTGHIXI
      WSXSBWNXHWRVTWAWBWDWEWFXFXKUAXHDEFWGXCXHOZXEXJCYRXDXIXBXCXHWNWHWIWJWKWLXB
      CUAWMUI $.
      $( [20-May-2015] $)
  $}

  ${
    opthw.1 $e |- A e. _V $.
    opthw.2 $e |- B e. _V $.
    $( Justification theorem for the ordered pair definition in Norbert Wiener,
       "A simplification of the logic of relations," _Proc. of the Cambridge
       Philos.  Soc_., 1914, vol. 17, pp.387-390.  It is also shown as a
       definition in [Enderton] p. 36 and as Exercise 4.8(b) of [Mendelson]
       p. 230.  It is meaningful only for classes that exist as sets (i.e. are
       not proper classes).  See ~ df-op for other ordered pair definitions. $)
    opthwiener $p |- ( { { { A } , (/) } , { { B } } } =
                    { { { C } , (/) } , { { D } } } <-> ( A = C /\ B = D ) ) $=
      ( csn c0 cpr wceq wcel snex prid2 wn 0ex eqcom syl sneqr 3syl sneq sylibr
      wa id wo eleq2 mpbii elpr sylib wb snnz elsnc bitri nemtbir nelneq2 mp2an
      mtbi biorf ax-mp preq2d eqtr4d prex preqr1 preq1 preq2 sylan9eq impbii
      jca ) AGZHIZBGZGZIZCGZHIZDGZGZIZJZACJZBDJZUBVRVSVTVRVHVMJZVSVRVIVNJZWAVRV
      LVNVKIZJZWBVRVLVQWCVRUCVRVKVPVNVRVKVNJZVKVPJZUDZWFVRVKVQKZWGVRVKVLKWHVIVK
      VJLZMVLVQVKUEUFVKVNVPWIUGUHWENWFWGUIVNVKJZWEHVNKHVKKZNWJNVMHOMWKVJHBFUJWK
      HVJJVJHJHVJOUKHVJPULUMHVNVKUNUOVNVKPUPWEWFUQURUAZUSUTVIVNVKVHHVAVMHVAVBQV
      HVMHALCLVBQACERQVRWFVJVOJZVTWLVJVOBLRBDFRSVGVSVTVLWCVQVSWAWBWDACTVHVMHVCV
      IVNVKVCSVTWMWFWCVQJBDTVJVOTVKVPVNVDSVEVF $.
      $( [28-Sep-2003] $)

    $( The union of an ordered pair.  Theorem 65 of [Suppes] p. 39. $)
    uniop $p |- U. <. A , B >. = { A , B } $=
      ( cop cuni csn cpr cun dfop snex prex unipr wss wceq snsspr1 ssequn1 mpbi
      unieqi 3eqtri ) ABEZFAGZABHZHZFUBUCIZUCUAUDABCDJSUBUCAKABLMUBUCNUEUCOABPU
      BUCQRT $.
      $( [26-Apr-2015] $) $( [17-Aug-2004] $)

    $( Ordered pair membership is inherited by class union. $)
    uniopel $p |- ( <. A , B >. e. C -> U. <. A , B >. e. U. C ) $=
      ( cop wcel cuni cpr uniop opi2 eqeltri elssuni sseld mpi ) ABFZCGZPHZPGRC
      HZGRABIPABDEJABDEKLQPSRPCMNO $.
      $( [26-Apr-2015] $) $( [13-May-2008] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Ordered-pair class abstractions (cont.)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x z w v $.  $d y z w v $.  $d ph z w v $.
    $( The law of concretion.  Special case of Theorem 9.5 of [Quine] p. 61.
       (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    opabid $p |- ( <. x , y >. e. { <. x , y >. | ph } <-> ph ) $=
      ( vz cv cop wceq wa wex copab opex copsexg bicomd df-opab elab2 ) DEZBEZC
      EZFZGZAHCIBIZADSABCJQRKTAUAABCPLMABCDNO $.
      $( [25-Jul-2011] $) $( [14-Apr-1995] $)
  $}

  ${
    $d x z A $.  $d y z A $.  $d z ph $.
    $( Membership in a class abstraction of pairs. $)
    elopab $p |- ( A e. { <. x , y >. | ph } <->
                 E. x E. y ( A = <. x , y >. /\ ph ) ) $=
      ( vz copab wcel cvv cv cop wceq wa elex opex eleq1 mpbiri adantr exlimivv
      wex eqeq1 anbi1d 2exbidv df-opab elab2g pm5.21nii ) DABCFZGDHGZDBIZCIZJZK
      ZALZCSBSZDUFMULUGBCUKUGAUKUGUJHGUHUINDUJHOPQREIZUJKZALZCSBSUMEDUFHUNDKZUP
      ULBCUQUOUKAUNDUJTUAUBABCEUCUDUE $.
      $( [24-Mar-1998] $)
  $}

  ${
    $d x z v $.  $d y z v $.  $d w z $.  $d ph v $.
    hbopab.1 $e |- ( ph -> A. z ph ) $.
    $( Bound-variable hypothesis builder for class abstraction.  (Unnecessary
       distinct variable restrictions were removed by Andrew Salmon,
       11-Jul-2011.) $)
    hbopab $p |- ( w e. { <. x , y >. | ph } ->
                 A. z w e. { <. x , y >. | ph } ) $=
      ( vv copab cv cop wceq wa wex cab df-opab ax-17 hban hbex hbab hbxfreq )
      DEABCHGIBICIJKZALZCMZBMZGNABCGOUDDGEUCDBUBDCUAADUADPFQRRST $.
      $( [25-Jul-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x w $.  $d y w $.  $d x z $.  $d w ph $.
    $( The first abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab1 $p |- ( z e. { <. x , y >. | ph } ->
                 A. x z e. { <. x , y >. | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbab hbxfreq ) BDABCFEGBGC
      GHIAJCKZBKZELABCEMRBEDQBNOP $.
      $( [16-May-1995] $)
  $}

  ${
    $d x w $.  $d y w $.  $d y z $.  $d w ph $.
    $( The second abstraction variable in an ordered-pair class abstraction
       (class builder) is effectively not free. $)
    hbopab2 $p |- ( z e. { <. x , y >. | ph } ->
                 A. y z e. { <. x , y >. | ph } ) $=
      ( vw copab cv cop wceq wa wex cab df-opab hbe1 hbex hbab hbxfreq ) CDABCF
      EGBGCGHIAJZCKZBKZELABCEMTCEDSCBRCNOPQ $.
      $( [16-May-1995] $)
  $}


  ${
    $d x y z v $.  $d x y w v $.  $d v ph $.
    $( The law of concretion in terms of substitutions.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    opelopabsb $p |- ( <. z , w >. e. { <. x , y >. | ph }
                 <-> [ w / y ] [ z / x ] ph ) $=
      ( cv cop wceq wa wex copab wcel wsbc excom vex opth equcom anbi12i 3bitri
      ancom anbi1i 2exbii bitri elopab 2sb5 3bitr4i ) DFZEFZGZBFZCFZGHZAIZCJBJZ
      UKUHHZUJUGHZIZAIZBJCJZUIABCKLABUGMCUHMUNUMBJCJUSUMBCNUMURCBULUQAULUGUJHZU
      HUKHZIVAUTIUQUGUHUJUKDOEOPUTVATVAUOUTUPECQDBQRSUAUBUCABCUIUDACBEDUEUF $.
      $( [25-Jul-2011] $) $( [30-Sep-2002] $)

    ${
      brabsb.1 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion in terms of substitutions. $)
      brabsb $p |- ( z R w <-> [ w / y ] [ z / x ] ph ) $=
        ( cv wbr copab cop wcel wsbc breqi df-br opelopabsb 3bitri ) DHZEHZFIRS
        ABCJZIRSKTLABRMCSMRSFTGNRSTOABCDEPQ $.
        $( [17-Mar-2008] $)
    $}
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y ch $.  $d z ph $.
    $( Closed theorem form of ~ opelopab . $)
    opelopabt $p |- ( ( A. x A. y ( x = A -> ( ph <-> ps ) )
                     /\ A. x A. y ( y = B -> ( ps <-> ch ) )
                     /\ ( A e. V /\ B e. W ) ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) ) $=
      ( cop copab wcel cv wceq wa wex wb wi wal w3a elopab prth 2alimi copsex2t
      19.26-2 bitr syl6 sylbir sylan 3impa syl5bb ) FGJZADEKLULDMZEMZJNAOEPDPZU
      MFNZABQZRZESDSZUNGNZBCQZRZESDSZFHLGILOZTCADEULUAUSVCVDUOCQZUSVCOZUPUTOZAC
      QZRZESDSZVDVEVFURVBOZESDSVJURVBDEUEVKVIDEVKVGUQVAOVHUPUQUTVAUBABCUFUGUCUH
      ACDEFGHIUDUIUJUK $.
      $( [19-Feb-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopabga.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopabga $p |- ( ( A e. V /\ B e. W ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) ) $=
      ( cop copab wcel cv wceq wa wex elopab copsex2g syl5bb ) EFJZACDKLTCMDMJN
      AODPCPEGLFHLOBACDTQABCDEFGHIRS $.
      $( [19-Dec-2013] $)

    ${
      brabga.2 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation.  (Contributed by Mario
         Carneiro, 19-Dec-2013.) $)
      brabga $p |- ( ( A e. V /\ B e. W ) -> ( A R B <-> ps ) ) $=
        ( wbr cop copab wcel wa df-br eleq2i bitri opelopabga syl5bb ) EFGLZEFM
        ZACDNZOZEHOFIOPBUBUCGOUEEFGQGUDUCKRSABCDEFHIJTUA $.
        $( [19-Dec-2013] $)
    $}

    $d x y C $.  $d x y D $.
    $( Ordered pair membership in an ordered pair class abstraction.
       (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    opelopab2a $p |- ( ( A e. C /\ B e. D ) -> ( <. A , B >. e.
                 { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ps ) ) $=
      ( wcel wa cop cv copab wceq eleq1 bi2anan9 anbi12d opelopabga bianabs ) E
      GJZFHJZKZEFLCMZGJZDMZHJZKZAKZCDNJBUIUCBKCDEFGHUDEOZUFFOZKUHUCABUJUEUAUKUG
      UBUDEGPUFFHPQIRST $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ps $.
    opelopaba.1 $e |- A e. _V $.
    opelopaba.2 $e |- B e. _V $.
    opelopaba.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  (Contributed by
       Mario Carneiro, 19-Dec-2013.) $)
    opelopaba $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) $=
      ( cvv wcel cop copab wb opelopabga mp2an ) EJKFJKEFLACDMKBNGHABCDEFJJIOP
      $.
      $( [19-Dec-2013] $)

    ${
      braba.4 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation. $)
      braba $p |- ( A R B <-> ps ) $=
        ( cvv wcel wbr wb brabga mp2an ) ELMFLMEFGNBOHIABCDEFGLLJKPQ $.
        $( [19-Dec-2013] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopabg.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabg.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopabg $p |- ( ( A e. V /\ B e. W ) ->
                    ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopabga ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [28-May-1995] $)

    ${
      brabg.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation. $)
      brabg $p |- ( ( A e. C /\ B e. D ) -> ( A R B <-> ch ) ) $=
        ( cv wceq sylan9bb brabga ) ACDEFGJHIDNFOABENGOCKLPMQ $.
        $( [19-Dec-2013] $) $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y ch $.
    opelopab2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab2.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( Ordered pair membership in an ordered pair class abstraction. $)
    opelopab2 $p |- ( ( A e. C /\ B e. D ) -> ( <. A , B >. e.
                 { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } <-> ch ) ) $=
      ( cv wceq sylan9bb opelopab2a ) ACDEFGHIDLFMABELGMCJKNO $.
      $( [19-Dec-2013] $) $( [14-Oct-2007] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ch $.
    opelopab.1 $e |- A e. _V $.
    opelopab.2 $e |- B e. _V $.
    opelopab.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopab.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61. $)
    opelopab $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( cvv wcel cop copab wb opelopabg mp2an ) FLMGLMFGNADEOMCPHIABCDEFGLLJKQR
      $.
      $( [16-May-1995] $)

    ${
      brab.5 $e |- R = { <. x , y >. | ph } $.
      $( The law of concretion for a binary relation. $)
      brab $p |- ( A R B <-> ch ) $=
        ( cvv wcel wbr wb brabg mp2an ) FNOGNOFGHPCQIJABCDEFGNNHKLMRS $.
        $( [16-Aug-1999] $)
    $}
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w z ph $.  $d w z ps $.
    opelopabaf.x $e |- ( ps -> A. x ps ) $.
    opelopabaf.y $e |- ( ps -> A. y ps ) $.
    opelopabaf.1 $e |- A e. _V $.
    opelopabaf.2 $e |- B e. _V $.
    opelopabaf.3 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions."  (Contributed by Mario Carneiro, 19-Dec-2013.) $)
    opelopabaf $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ps ) $=
      ( vw vz copab wcel cv wsbc ax-17 wceq cvv cop hbs1 hbsb sbequ12 sylan9bbr
      cbvopab eleq2i wa dfsbcq sbbid wb sbc2iegf mp2an syl6bb opelopaba bitri )
      EFUAZACDNZOUQADLPZQZCMPZQZMLNZOBURVCUQAVBCDMLAMRALRUTCMUBUTCMDADLUBUCDPUS
      SAUTCPVASVBADLUDUTCMUDUEUFUGVBBMLEFIJVAESZUSFSZUHVBADFQZCEQZBVEVBVFCVAQVD
      VGVEUTVFCMVECRADUSFUIUJVFCVAEUIUEETOFTOZVGBUKIJABCDEFTTGHVHCRKULUMUNUOUP
      $.
      $( [19-Dec-2013] $)
  $}

  ${
    $d w x y z A $.  $d w y z B $.  $d w z ch $.  $d w z ph $.
    opelopabf.x $e |- ( ps -> A. x ps ) $.
    opelopabf.y $e |- ( ch -> A. y ch ) $.
    opelopabf.1 $e |- A e. _V $.
    opelopabf.2 $e |- B e. _V $.
    opelopabf.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    opelopabf.4 $e |- ( y = B -> ( ps <-> ch ) ) $.
    $( The law of concretion.  Theorem 9.5 of [Quine] p. 61.  This version of
       ~ opelopab uses bound-variable hypotheses in place of distinct variable
       conditions." $)
    opelopabf $p |- ( <. A , B >. e. { <. x , y >. | ph } <-> ch ) $=
      ( vz vw copab cv wsbc ax-17 wceq cop wcel sbequ12 sylan9bb cbvopab eleq2i
      hbs1 hbsb sbhypf sbbid opelopab bitri ) FGUAZADEPZUBUMADNQZRZEOQZRZNOPZUB
      CUNUSUMAURDENOANSAOSUPEODADNUGUHUPEOUGDQUOTAUPEQUQTURADNUCUPEOUCUDUEUFURB
      EUQRCNOFGJKUOFTZUPBEOUTESABDNFHLUIUJBCEOGIMUIUKUL $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication.
       (Revised by Mario Carneiro, 19-May-2013.) $)
    ssopab2 $p |- ( A. x A. y ( ph -> ps ) ->
        { <. x , y >. | ph } C_ { <. x , y >. | ps } ) $=
      ( vz wi wal cv cop wceq wex cab copab hba1 ax-4 anim2d eximd a4s df-opab
      wa ss2abdv 3sstr4g ) ABFZDGZCGZEHCHDHIJZATZDKZCKZELUFBTZDKZCKZELACDMBCDMU
      EUIULEUEUHUKCUDCNUDUHUKFCUDUGUJDUCDNUDABUFUCDOPQRQUAACDESBCDESUB $.
      $( [19-May-2013] $) $( [27-Dec-1996] $)
  $}

  ${
    $d ph z $.  $d ps z $.  $d x z $.  $d y z $.
    $( Equivalence of ordered pair abstraction subclass and implication. $)
    ssopab2b $p |- ( { <. x , y >. | ph } C_ { <. x , y >. | ps } <->
               A. x A. y ( ph -> ps ) ) $=
      ( vz copab wss wi wal hbopab1 hbss hbopab2 cv cop wex cab df-opab copsexg
      wa alrimi opex wceq sseq12i ss2ab ax-4 sylbi imbi12d syl5bi vtocle impbii
      syl5ibr ssopab2 ) ACDFZBCDFZGZABHZDIZCIUOUQCCEUMUNACDEJBCDEJKUOUPDDEUMUNA
      CDELBCDELKUOUPHECMZDMZNZURUSUAUOEMZUTUBZASDOCOZEPZVBBSDOCOZEPZGZVBUPUMVDU
      NVFACDEQBCDEQUCVGUPVBVCVEHZVGVHEIVHVCVEEUDVHEUEUFVBAVCBVEACDVARBCDVARUGUK
      UHUITTABCDULUJ $.
      $( [27-Dec-1996] $)
  $}

  ${
    ssopab2i.1 $e |- ( ph -> ps ) $.
    $( Inference of ordered pair abstraction subclass from implication. $)
    ssopab2i $p |- { <. x , y >. | ph } C_ { <. x , y >. | ps } $=
      ( wi wal copab wss ssopab2 ax-gen mpg ) ABFZDGACDHBCDHICABCDJMDEKL $.
      $( [5-Apr-1995] $)
  $}

  ${
    $d x ph $.  $d y ph $.
    ssopab2dv.1 $e |- ( ph -> ( ps -> ch ) ) $.
    $( Inference of ordered pair abstraction subclass from implication. $)
    ssopab2dv $p |- ( ph -> { <. x , y >. | ps } C_ { <. x , y >. | ch } ) $=
      ( wi wal copab wss alrimivv ssopab2 syl ) ABCGZEHDHBDEICDEIJANDEFKBCDELM
      $.
      $( [24-Jun-2014] $) $( [19-Jan-2014] $)
  $}

  ${
    $d z ph $.  $d z x $.  $d z y $.
    $( Non-empty ordered pair class abstraction. $)
    opabn0 $p |- ( { <. x , y >. | ph } =/= (/) <-> E. x E. y ph ) $=
      ( vz copab c0 wne cv wcel wex cop wceq wa elopab exbii exrot3 opex isseti
      n0 19.41v mpbiran 2exbii bitri 3bitri ) ABCEZFGDHZUEIZDJUFBHZCHZKZLZAMZCJ
      BJZDJZACJBJZDUESUGUMDABCUFNOUNULDJZCJBJUOULDBCPUPABCUPUKDJADUJUHUIQRUKADT
      UAUBUCUD $.
      $( [10-Oct-2007] $)
  $}

  ${
    $d ph w $.  $d A w x $.  $d A y $.  $d w y z $.  $d x z $.
    $( Move indexed union inside an ordered-pair abstraction.  (Contributed by
       Stefan O'Rear, 20-Feb-2015.) $)
    iunopab $p |- U_ z e. A { <. x , y >. | ph } =
        { <. x , y >. | E. z e. A ph } $=
      ( vw cv copab wcel wrex cab cop wceq wex ciun elopab rexbii rexcom4 exbii
      wa r19.42v bitri 3bitri abbii df-iun df-opab 3eqtr4i ) FGZABCHZIZDEJZFKUH
      BGCGLMZADEJZTZCNZBNZFKDEUIOUMBCHUKUPFUKULATZCNZBNZDEJURDEJZBNUPUJUSDEABCU
      HPQURDBERUTUOBUTUQDEJZCNUOUQDCERVAUNCULADEUASUBSUCUDDFEUIUEUMBCFUFUG $.
      $( [20-Feb-2015] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Power class of union and intersection
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d A x y $.  $d B x y $.
    $( The power class of the intersection of two classes is the intersection
       of their power classes.  Exercise 4.12(j) of [Mendelson] p. 235. $)
    pwin $p |- ~P ( A i^i B ) = ( ~P A i^i ~P B ) $=
      ( vx cpw cin cv wss wa wcel ssin vex elpw anbi12i 3bitr4i ineqri eqcomi )
      ADZBDZEABEZDZCQRTCFZAGZUABGZHUASGUAQIZUARIZHUATIUAABJUDUBUEUCUAACKZLUABUF
      LMUASUFLNOP $.
      $( [23-Nov-2003] $)

    $( The power class of the union of two classes includes the union of their
       power classes.  Exercise 4.12(k) of [Mendelson] p. 235. $)
    pwunss $p |- ( ~P A u. ~P B ) C_ ~P ( A u. B ) $=
      ( vx cpw cun cv wss wcel ssun elun vex elpw orbi12i bitri 3imtr4i ssriv
      wo ) CADZBDZEZABEZDZCFZAGZUCBGZQZUCUAGUCTHZUCUBHUCABIUGUCRHZUCSHZQUFUCRSJ
      UHUDUIUEUCACKZLUCBUJLMNUCUAUJLOP $.
      $( [23-Nov-2003] $)

    $( The power class of the union of two classes is a subset of the union of
       their power classes, iff one class is a subclass of the other.  Exercise
       4.12(l) of [Mendelson] p. 235. $)
    pwssun $p |- ( ( A C_ B \/ B C_ A ) <->
               ~P ( A u. B ) C_ ( ~P A u. ~P B ) ) $=
      ( vy vx wss wo cun cpw wceq pweq eqimss syl sylbi orim12i wn wa wcel elpw
      cv wi ssequn2 ssequn1 orcoms ssun cpr csn vex snss unss12 syl2anb zfpair2
      df-pr sseq1i bitr2i sylib ssel syl5 exp3acom23 imp31 elun simprbi simplbi
      prss bitr4i ord impancom ssrdv exp31 con1b syl6ib com23 imp orrd impbii
      ex ) ABEZBAEZFZABGZHZAHZBHZGZEZVRVTWAEZVTWBEZFZWDVQVPWGVQWEVPWFVQVSAIZWEB
      AUAWHVTWAIWEVSAJVTWAKLMVPVSBIZWFABUBWIVTWBIWFVSBJVTWBKLMNUCVTWAWBUDLWDVPV
      QWDVPOZVQWDWJPCBAWDWJCSZBQZWKAQZTWDWLWJWMWDWLWMOZVPTWJWMTWDWLWNVPWDWLPZWN
      PDABWODSZAQZWNWPBQZWOWQPZWMWRWSWPWKUEZWAQZWTWBQZFZWMWRFWSWTWCQZXCWDWLWQXD
      WDWQWLXDWQWLPZWTVTQZWDXDXEWPUFZWKUFZGZVSEZXFWQXGAEXHBEXJWLWPADUGZUHWKBCUG
      ZUHXGAXHBUIUJXFWTVSEXJWTVSDCUKZRWTXIVSWPWKULUMUNUOVTWCWTUPUQURUSWTWAWBUTU
      OXAWMXBWRXAWQWMXAWTAEWQWMPWTAXMRWPWKAXKXLVCVDVAXBWRWLXBWTBEWRWLPWTBXMRWPW
      KBXKXLVCVDVBNLVEVFVGVHWMVPVIVJVKVLVGVOVMVN $.
      $( [23-Nov-2003] $)

    $( Break up the power class of a union into a union of smaller classes. $)
    pwundif $p |- ~P ( A u. B ) =
                  ( ( ~P ( A u. B ) \ ~P A ) u. ~P A ) $=
      ( vx cun cpw cdif cv wcel wss vex elpw wo wn wa elun eldif notbii anbi12i
      bitri orbi12i ordir pm2.1 biantru id ssun3 jaoi orc 3bitr2i 3bitrri eqriv
      impbii ) CABDZEZUMAEZFZUNDZCGZUMHZUQULIZUQUPHZUQULCJZKZUTUQUOHZUQUNHZLUSU
      QAIZMZNZVELZUSUQUOUNOVCVGVDVEVCURVDMZNVGUQUMUNPURUSVIVFVBVDVEUQAVAKZQRSVJ
      TVHUSVELZVFVELZNVKUSUSVFVEUAVLVKVEUBUCVKUSUSUSVEUSUDUQABUEUFUSVEUGUKUHUIS
      UJ $.
      $( [25-Mar-2007] $)
  $}

  $( The power class of the union of two classes equals the union of their
     power classes, iff one class is a subclass of the other.  Part of Exercise
     7(b) of [Enderton] p. 28. $)
  pwun $p |- ( ( A C_ B \/ B C_ A ) <->
             ~P ( A u. B ) = ( ~P A u. ~P B ) ) $=
    ( cun cpw wss wa wo wceq pwunss biantru pwssun eqss 3bitr4i ) ABCDZADBDCZEZ
    PONEZFABEBAEGNOHQPABIJABKNOLM $.
    $( [23-Nov-2003] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Epsilon and identity relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constant symbols. $)
  $c _E $. $( Letter E (for epsilon relation) $)
  $c _I $.  $( Letter I (for identity relation) $)

  $( Extend class notation to include the epsilon relation. $)
  cep $a class _E $.

  $( Extend the definition of a class to include identity relation. $)
  cid $a class _I $.

  ${
    $d x y $.
    $( Define the epsilon relation.  Similar to Definition 6.22 of
       [TakeutiZaring] p. 30.  The epsilon relation and set membership are the
       same, that is, ` ( A _E B <-> A e. B ) ` when ` B ` is a set by
       ~ epelg .  Thus, ` 5 _E { 1 , 5 } ` ( ~ ex-eprel ). $)
    df-eprel $a |- _E = { <. x , y >. | x e. y } $.
  $}

  ${
    $d A x y $.  $d B x y $.
    $( The epsilon relation and membership are the same.  General version of
       ~ epel .  (Contributed by Scott Fenton, 27-Mar-2011.)  (Revised by Mario
       Carneiro, 28-Apr-2015.) $)
    epelg $p |- ( B e. V -> ( A _E B <-> A e. B ) ) $=
      ( vx vy wcel cvv cep wbr wi cop df-br cv copab wceq wa wex vex sylbi a1i
      elopab pm3.2i opeqex mpbiri simpld adantr exlimivv df-eprel eleq2s eleq12
      elex wb brabga expcom pm5.21ndd ) BCFZAGFZABHIZABFZURUQJUPURABKZHFUQABHLU
      QUTDMZEMZFZDENZHUTVDFUTVAVBKOZVCPZEQDQUQVCDEUTUAVFUQDEVEUQVCVEUQBGFZVEUQV
      GPVAGFZVBGFZPVHVIDRERUBABVAVBUCUDUEUFUGSDEUHZUISTUSUQJUPABUKTUQUPURUSULVC
      USDEABHGCVAAVBBUJVJUMUNUO $.
      $( [28-Apr-2015] $) $( [27-Mar-2011] $)
  $}

  ${
    epelc.1 $e |- B e. _V $.
    $( The epsilon relationship and the membership relation are the same.
       (Contributed by Scott Fenton, 11-Apr-2012.) $)
    epelc $p |- ( A _E B <-> A e. B ) $=
      ( cvv wcel cep wbr wb epelg ax-mp ) BDEABFGABEHCABDIJ $.
      $( [11-Apr-2012] $) $( [13-Aug-1995] $)
  $}

  $( The epsilon relation and the membership relation are the same. $)
  epel $p |- ( x _E y <-> x e. y ) $=
    ( cv vex epelc ) ACBCBDE $.
    $( [13-Aug-1995] $)

  ${
    $d x y $.
    $( Define the identity relation.  Definition 9.15 of [Quine] p. 64.  For
       example, ` 5 _I 5 ` and ` -. 4 _I 5 ` ( ~ ex-id ). $)
    df-id $a |- _I = { <. x , y >. | x = y } $.
  $}

  ${
    $d w z x $.  $d w z y $.
    $( A stronger version of ~ df-id that doesn't require ` x ` and ` y ` to be
       distinct.  Ordinarily, we wouldn't use this as a definition, since
       non-distinct dummy variables would make soundness verification more
       difficult (as the proof here shows).  The proof can be instructive in
       showing how distinct variable requirements may be eliminated, a task
       that is not necessarily obvious. $)
    dfid3 $p |- _I = { <. x , y >. | x = y } $=
      ( vw vz cid cv cop wceq wa wex cab copab df-opab wal exbii eqeq2d equequ2
      wb opeq2 wi df-id ancom equcom anbi1i bitri vex ceqsexv equid 3bitri hbe1
      biantru 19.9 bitr4i anbi12d drex1 drex2 syl5bb wn hbnae dveel2 nalequcoms
      a4s wcel hbopd hbeleqd dveeq1 hband a1i cbvexd exbid pm2.61i abbii 3eqtri
      a17d eqtr4i ) ECFZAFZBFZGZHZVQVRHZIZBJZAJZCKZWAABLEVQDFZHZADLVPVQWFGZHZWG
      IZDJZAJZCKWEADUAWGADCMWLWDCWAANZWLWDRWLVPVQVQGZHZVQVQHZIZAJZAJZWMWDWLWRWS
      WKWQAWKWFVQHZWIIZDJWOWQWJXADWJWGWIIXAWIWGUBWGWTWIADUCUDUEOWIWODVQAUFWTWHW
      NVPWFVQVQSPUGWPWOAUHUKUIOWRAWQAUJULUMWRWCABAWQWBABWAWQWBRAWAWOVTWPWAWAWNV
      SVPVQVRVQSPABAQUNVBUOUPUQWMURZWKWCAABAUSXBWJWBDBABBUSZXBWIWGBXBBCWHXCXBBC
      VQWFXCVPVQVCZXDBNTBABACUTVAXBVPWFVCBVNVDVEWGWGBNTBABADVFVAVGWFVRHZWJWBRTX
      BXEWIVTWGWAXEWHVSVPWFVRVQSPDBAQUNVHVIVJVKVLVMWAABCMVO $.
      $( [5-Feb-2008] $)
  $}

  $( Alternate definition of the identity relation. $)
  dfid2 $p |- _I = { <. x , x >. | x = x } $=
    ( dfid3 ) AAB $.
    $( [15-Mar-2007] $)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Partial and complete ordering
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

$(
We have not yet defined relations ( ~ df-rel ), but here we introduce a
few related notions we will use to develop ordinals.  The class variable
` R ` is no different from other class variables, but it reminds us that
normally it represents what we will later call a "relation."
$)

  $( Declare new constant symbols. $)
  $c Po $.  $( Partial ordering predicate symbol (read: 'partial ordering'). $)
  $c Or $.  $( Strict complete ordering predicate symbol (read: 'orders'). $)

  $( Extend wff notation to include the strict partial ordering predicate.
     Read:  ' ` R ` is a partial order on ` A ` .' $)
  wpo $a wff R Po A $.

  $( Extend wff notation to include the strict complete ordering predicate.
     Read:  ' ` R ` orders ` A ` .' $)
  wor $a wff R Or A $.

  ${
    $d x y z R $.  $d x y z A $.
    $( Define the strict partial order predicate.  Definition of [Enderton]
       p. 168.  The expression ` R Po A ` means ` R ` is a partial order on
       ` A ` .  For example, ` < Po RR ` is true, while ` <_ Po RR ` is false
       ( ~ ex-po ). $)
    df-po $a |- ( R Po A <-> A. x e. A A. y e. A A. z e. A
                ( -. x R x /\ ( ( x R y /\ y R z ) -> x R z ) ) ) $.

    $( Define the strict complete (linear) order predicate.  The expression
       ` R Or A ` is true if relationship ` R ` orders ` A ` .  For example,
       ` < Or RR ` is true ( ~ ltso ). $)
    df-so $a |- ( R Or A <-> ( R Po A /\ A. x e. A A. y e. A
                ( x R y \/ x = y \/ y R x ) ) ) $.
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.
    $( Subset theorem for the partial ordering predicate.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    poss $p |- ( A C_ B -> ( R Po B -> R Po A ) ) $=
      ( vx vy vz wss cv wbr wa wi wral wpo wcel w3a wal ssel r3al 3imtr4g df-po
      wn 3anim123d imim1d alimdv 2alimdv ) ABGZDHZUGCIUAUGEHZCIUHFHZCIJUGUICIKJ
      ZFBLEBLDBLZUJFALEALDALZBCMACMUFUGBNZUHBNZUIBNZOZUJKZFPZEPDPUGANZUHANZUIAN
      ZOZUJKZFPZEPDPUKULUFURVDDEUFUQVCFUFVBUPUJUFUSUMUTUNVAUOABUGQABUHQABUIQUBU
      CUDUEUJDEFBBBRUJDEFAAARSDEFBCTDEFACTS $.
      $( [25-Jul-2011] $) $( [27-Mar-1997] $)
  $}

  ${
    $d x y z R $.  $d x y z S $.  $d x y z A $.
    $( Equality theorem for partial ordering predicate. $)
    poeq1 $p |- ( R = S -> ( R Po A <-> S Po A ) ) $=
      ( vx vy vz wceq cv wbr wn wa wral wpo breq notbid anbi12d imbi12d ralbidv
      wi df-po 2ralbidv 3bitr4g ) BCGZDHZUDBIZJZUDEHZBIZUGFHZBIZKZUDUIBIZSZKZFA
      LZEALDALUDUDCIZJZUDUGCIZUGUICIZKZUDUICIZSZKZFALZEALDALABMACMUCUOVDDEAAUCU
      NVCFAUCUFUQUMVBUCUEUPUDUDBCNOUCUKUTULVAUCUHURUJUSUDUGBCNUGUIBCNPUDUIBCNQP
      RUADEFABTDEFACTUB $.
      $( [27-Mar-1997] $)
  $}

  $( Equality theorem for partial ordering predicate. $)
  poeq2 $p |- ( A = B -> ( R Po A <-> R Po B ) ) $=
    ( wceq wpo wss wa wi wb poss anim12i eqss dfbi2 3imtr4i bicomd ) ABDZBCEZAC
    EZABFZBAFZGQRHZRQHZGPQRISUATUBABCJBACJKABLQRMNO $.
    $( [27-Mar-1997] $)

  ${
    $d y R a b c $.  $d y A a b c $.  $d x y a b c $.
    hbpo.r $e |- ( y e. R -> A. x y e. R ) $.
    hbpo.a $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for partial orders.  (Contributed by
       Stefan O'Rear, 20-Jan-2015.) $)
    hbpo $p |- ( R Po A -> A. x R Po A ) $=
      ( va vb vc wpo cv wbr wn wa wral hblem ax17el hbbr hban hbral wi hbn hbim
      df-po hbxfrbi ) CDJGKZUFDLZMZUFHKZDLZUIIKZDLZNZUFUKDLZUAZNZICOZHCOZGCOAGH
      ICDUDURAGCABGCFPUQAHCABHCFPUPAICABICFPUHUOAUGAABUFUFDBGAQZEUSRUBUMUNAUJUL
      AABUFUIDUSEBHAQZRABUIUKDUTEBIAQZRSABUFUKDUSEVARUCSTTTUE $.
      $( [20-Jan-2015] $)

    $( Bound-variable hypothesis builder for total orders.  (Contributed by
       Stefan O'Rear, 20-Jan-2015.) $)
    hbso $p |- ( R Or A -> A. x R Or A ) $=
      ( va vb wor wpo cv wbr weq w3o wral wa hblem ax17el hbbr hbral df-so hbpo
      ax17eq hb3or hban hbxfrbi ) CDICDJZGKZHKZDLZGHMZUIUHDLZNZHCOZGCOZPAGHCDUA
      UGUOAABCDEFUBUNAGCABGCFQUMAHCABHCFQUJUKULAABUHUIDBGARZEBHARZSGHAUCABUIUHD
      UQEUPSUDTTUEUF $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Properties of partial order relation in class notation. $)
    pocl $p |- ( R Po A -> ( ( B e. A /\ C e. A /\ D e. A ) ->
               ( -. B R B /\ ( ( B R C /\ C R D ) -> B R D ) ) ) ) $=
      ( vx vy vz wcel wbr wa wi cv wceq breq1 imbi2d breq2 anbi2d wal wral r3al
      w3a wn id breq12d notbid anbi1d imbi12d anbi12d imbi1d df-po bitri biimpi
      wpo 19.21bbi 19.21bi com12 vtocl3ga ) BAICAIDAIUBAEUNZBBEJZUCZBCEJZCDEJZK
      ZBDEJZLZKZUSFMZVHEJZUCZVHGMZEJZVKHMZEJZKZVHVMEJZLZKZLUSVABVKEJZVNKZBVMEJZ
      LZKZLUSVAVBCVMEJZKZWALZKZLUSVGLFGHBCDAAAVHBNZVRWCUSWHVJVAVQWBWHVIUTWHVHBV
      HBEWHUDZWIUEUFWHVOVTVPWAWHVLVSVNVHBVKEOUGVHBVMEOUHUIPVKCNZWCWGUSWJWBWFVAW
      JVTWEWAWJVSVBVNWDVKCBEQVKCVMEOUIUJRPVMDNZWGVGUSWKWFVFVAWKWEVDWAVEWKWDVCVB
      VMDCEQRVMDBEQUHRPUSVHAIVKAIVMAIUBZVRUSWLVRLZHUSWMHSZFGUSWNGSFSZUSVRHATGAT
      FATWOFGHAEUKVRFGHAAAUAULUMUOUPUQURUQ $.
      $( [27-Mar-1997] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.  $d x y z ph $.
    ispod.1 $e |- ( ( ph /\ x e. A ) -> -. x R x ) $.
    ispod.2 $e |- ( ( ph /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
                    ( ( x R y /\ y R z ) -> x R z ) ) $.
    $( Sufficient conditions for a partial order. $)
    ispod $p |- ( ph -> R Po A ) $=
      ( cv wbr wn wa wi wral wpo wcel w3a 3ad2antr1 jca ralrimivvva sylibr
      df-po ) ABIZUCFJKZUCCIZFJUEDIZFJLUCUFFJMZLZDENCENBENEFOAUHBCDEEEAUCEPZUEE
      PZUFEPZQLUDUGAUJUIUDUKGRHSTBCDEFUBUA $.
      $( [9-Jul-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z ph $.  $d x y z R $.  $d x y z X $.  $d y z Y $.
    $d z Z $.
    swopolem.1 $e |- ( ( ph /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
                    ( x R y -> ( x R z \/ z R y ) ) ) $.
    $( Perform the substitutions into the strict weak ordering law. $)
    swopolem $p |- ( ( ph /\ ( X e. A /\ Y e. A /\ Z e. A ) ) ->
                    ( X R Y -> ( X R Z \/ Z R Y ) ) ) $=
      ( cv wbr wo wi wral wcel wceq breq1 imbi12d breq2 w3a ralrimivvva orbi12d
      orbi1d orbi2d imbi2d rcla43v mpan9 ) ABKZCKZFLZUIDKZFLZULUJFLZMZNZDEOCEOB
      EOGEPHEPIEPUAGHFLZGIFLZIHFLZMZNZAUPBCDEEEJUBUPVAGUJFLZGULFLZUNMZNUQVCULHF
      LZMZNBCDGHIEEEUIGQZUKVBUOVDUIGUJFRVGUMVCUNUIGULFRUDSUJHQZVBUQVDVFUJHGFTVH
      UNVEVCUJHULFTUESULIQZVFUTUQVIVCURVEUSULIGFTULIHFRUCUFUGUH $.
      $( [31-Dec-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.  $d x y z ph $.
    swopo.1 $e |- ( ( ph /\ ( y e. A /\ z e. A ) ) ->
                    ( y R z -> -. z R y ) ) $.
    swopo.2 $e |- ( ( ph /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
                    ( x R y -> ( x R z \/ z R y ) ) ) $.
    $( A strict weak order is a partial order. $)
    swopo $p |- ( ph -> R Po A ) $=
      ( cv wcel wa wbr wn wi wral wceq breq1 breq2 notbid imbi12d id ralrimivva
      ancli rcla42va syl2anr pm2.01d w3a 3adantr1 wo imp orcomd expimpd sylan2d
      ord ispod ) ABCDEFABIZEJZKUPUPFLZUQUQUQKCIZDIZFLZUTUSFLZMZNZDEOCEOURURMZN
      ZAUQUQUQUAUCAVDCDEEGUBVDVFUPUTFLZUTUPFLZMZNCDUPUPEEUSUPPZVAVGVCVIUSUPUTFQ
      VJVBVHUSUPUTFRSTUTUPPZVGURVIVEUTUPUPFRVKVHURUTUPUPFQSTUDUEUFAUQUSEJZUTEJZ
      UGKZVAVCUPUSFLZVGAVLVMVDUQGUHVNVOVCVGVNVOKZVBVGVPVGVBVNVOVGVBUIHUJUKUNULU
      MUO $.
      $( [9-Jul-2014] $)
  $}

  $( A partial order relation is irreflexive. $)
  poirr $p |- ( ( R Po A /\ B e. A ) -> -. B R B ) $=
    ( wcel wpo w3a wbr wn wa df-3an anabs1 anidm 3bitrri wi pocl simpld sylan2b
    imp ) BADZACEZSSSFZBBCGZHZUASSIZSIUDSSSSJSSKSLMTUAIUCUBUBIUBNZTUAUCUEIABBBC
    ORPQ $.
    $( [27-Mar-1997] $)

  $( A partial order relation is a transitive relation. $)
  potr $p |- ( ( R Po A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             ( ( B R C /\ C R D ) -> B R D ) ) $=
    ( wpo wcel w3a wa wbr wn wi pocl imp simprd ) AEFZBAGCAGDAGHZIBBEJKZBCEJCDE
    JIBDEJLZPQRSIABCDEMNO $.
    $( [27-Mar-1997] $)

  $( A partial order relation has no 2-cycle loops. $)
  po2nr $p |- ( ( R Po A /\ ( B e. A /\ C e. A ) ) ->
              -. ( B R C /\ C R B ) ) $=
    ( wpo wcel wa wbr wn poirr adantrr wi potr 3exp2 com34 pm2.43d imp32 mtod )
    ADEZBAFZCAFZGGBCDHCBDHGZBBDHZSTUCIUAABDJKSTUAUBUCLZSTUAUDLSTUATUDSTUATUDABC
    BDMNOPQR $.
    $( [27-Mar-1997] $)

  $( A partial order relation has no 3-cycle loops. $)
  po3nr $p |- ( ( R Po A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             -. ( B R C /\ C R D /\ D R B ) ) $=
    ( wpo wcel w3a wa wbr wn po2nr 3adantr2 df-3an potr anim1d syl5bi mtod ) AE
    FZBAGZCAGZDAGZHIZBCEJZCDEJZDBEJZHZBDEJZUFIZSTUBUIKUAABDELMUGUDUEIZUFIUCUIUD
    UEUFNUCUJUHUFABCDEOPQR $.
    $( [27-Mar-1997] $)

  ${
    $d x y z R $.
    $( Any relation is a partial ordering of the empty set.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    po0 $p |- R Po (/) $=
      ( vx vy vz c0 wpo cv wbr wn wa wi wral ral0 df-po mpbir ) EAFBGZPAHIPCGZA
      HQDGZAHJPRAHKJDELCELZBELSBMBCDEANO $.
      $( [25-Jul-2011] $) $( [28-Mar-1997] $)
  $}

  ${
    $d R v w x y z $.  $d S v w z $.  $d X v w y z $.  $d Y x z $.
    $d A v w x z $.  $d B v w x z $.
    pofun.1 $e |- S = { <. x , y >. | X R Y } $.
    pofun.2 $e |- ( x = y -> X = Y ) $.
    $( A function preserves a partial order relation.  (Contributed by Jeff
       Madsen, 18-Jun-2011.) $)
    pofun $p |- ( ( R Po B /\ A. x e. A X e. B ) -> S Po A ) $=
      ( vw vz wcel wa cv wbr csb ax-17 wceq cop vv wpo wral hbcsb1 hbel csbeq1a
      wn eleq1d rcla4 impcom poirr copab df-br eleq2i hbbr breq1d csbief csbeq1
      syl5eqr breq2d opelopabf 3bitri sylnibr sylan2 anassrs wi com12 3anim123d
      vex w3a imp adantll potr anbi12i 3imtr4g adantlr syldan ispod ) DEUBZGDMZ
      ACUCZNZUAKLCFVSWAUAOZCMZWCWCFPZUGZWAWDNVSAWCGQZDMZWFWDWAWHVTWHAWCCALLWGDA
      LWCGLOZWCMARUDZWIDMARZUEAOZWCSZGWGDAWCGUFZUHUIZUJVSWHNWGWGEPZWEDWGEUKWEWC
      WCTZFMWQGHEPZABULZMWPWCWCFUMFWSWQIUNWRWGHEPZWPABWCWCALWGHEWJWIEMARZWIHMAR
      ZUOZWPBRUAVIZXDWMGWGHEWNUPZBOZWCSZHWGWGEXGHAXFGQZWGALXFGHBVIXBJUQZAXFWCGU
      RUSUTVAVBVCVDVEWBWDKOZCMZWICMZVJZWHAXJGQZDMZAWIGQZDMZVJZWCXJFPZXJWIFPZNZW
      CWIFPZVFZWAXMXRVSWAXMXRWAWDWHXKXOXLXQWDWAWHWOVGXKWAXOVTXOAXJCALLXNDALXJGW
      IXJMARUDZWKUEWLXJSZGXNDAXJGUFZUHUIVGXLWAXQVTXQAWICAKLXPDAKWIGXJWIMARUDWKU
      EWLWISGXPDAWIGUFUHUIVGVHVKVLVSXRYCWAVSXRNWGXNEPZXNXPEPZNWGXPEPZYAYBDWGXNX
      PEVMXSYGXTYHXSWCXJTZFMYJWSMYGWCXJFUMFWSYJIUNWRWTYGABWCXJXCYGBRXDKVIZXEXFX
      JSZHXNWGEYLHXHXNXIAXFXJGURUSUTVAVBXTXJWITZFMYMWSMYHXJWIFUMFWSYMIUNWRXNHEP
      YHABXJWIALXNHEYDXAXBUOYHBRYKLVIZYEGXNHEYFUPXFWISZHXPXNEYOHXHXPXIAXFWIGURU
      SZUTVAVBVNYBWCWITZFMYQWSMYIWCWIFUMFWSYQIUNWRWTYIABWCWIXCYIBRXDYNXEYOHXPWG
      EYPUTVAVBVOVPVQVR $.
      $( [18-Jun-2010] $)
  $}

  ${
    $d x y R $.  $d x y A $.
    $( A strict linear order is a strict partial order. $)
    sopo $p |- ( R Or A -> R Po A ) $=
      ( vx vy wor wpo cv wbr wceq w3o wral df-so simplbi ) ABEABFCGZDGZBHNOIONB
      HJDAKCAKCDABLM $.
      $( [28-Mar-1997] $)
  $}

  ${
    $d x y R $.  $d x y A $.  $d x y B $.
    $( Subset theorem for the strict ordering predicate.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    soss $p |- ( A C_ B -> ( R Or B -> R Or A ) ) $=
      ( vx vy wss wpo cv wbr wral wa wor wcel wi wal ssel anim12d 3imtr4g df-so
      r2al wceq w3o poss imim1d 2alimdv ) ABFZBCGZDHZEHZCIUHUIUAUIUHCIUBZEBJDBJ
      ZKACGZUJEAJDAJZKBCLACLUFUGULUKUMABCUCUFUHBMZUIBMZKZUJNZEODOUHAMZUIAMZKZUJ
      NZEODOUKUMUFUQVADEUFUTUPUJUFURUNUSUOABUHPABUIPQUDUEUJDEBBTUJDEAATRQDEBCSD
      EACSR $.
      $( [25-Jul-2011] $) $( [16-Mar-1997] $)
  $}

  ${
    $d x y R $.  $d x y S $.  $d x y A $.
    $( Equality theorem for the strict ordering predicate. $)
    soeq1 $p |- ( R = S -> ( R Or A <-> S Or A ) ) $=
      ( vx vy wceq wpo cv wbr w3o wral wa wor poeq1 breq biidd 2ralbidv anbi12d
      3orbi123d df-so 3bitr4g ) BCFZABGZDHZEHZBIZUDUEFZUEUDBIZJZEAKDAKZLACGZUDU
      ECIZUGUEUDCIZJZEAKDAKZLABMACMUBUCUKUJUOABCNUBUIUNDEAAUBUFULUGUGUHUMUDUEBC
      OUBUGPUEUDBCOSQRDEABTDEACTUA $.
      $( [16-Mar-1997] $)
  $}

  $( Equality theorem for the strict ordering predicate. $)
  soeq2 $p |- ( A = B -> ( R Or A <-> R Or B ) ) $=
    ( wceq wor wss wa wi wb soss anim12i eqss dfbi2 3imtr4i bicomd ) ABDZBCEZAC
    EZABFZBAFZGQRHZRQHZGPQRISUATUBABCJBACJKABLQRMNO $.
    $( [16-Mar-1997] $)

  $( A strict order relation is irreflexive. $)
  sonr $p |- ( ( R Or A /\ B e. A ) -> -. B R B ) $=
    ( wor wpo wcel wbr wn sopo poirr sylan ) ACDACEBAFBBCGHACIABCJK $.
    $( [24-Nov-1995] $)

  $( A strict order relation is a transitive relation. $)
  sotr $p |- ( ( R Or A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             ( ( B R C /\ C R D ) -> B R D ) ) $=
    ( wor wpo wcel w3a wbr wa wi sopo potr sylan ) AEFAEGBAHCAHDAHIBCEJCDEJKBDE
    JLAEMABCDENO $.
    $( [21-Jan-1996] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y R $.
    $( A strict order relation is linear (satisfies trichotomy). $)
    solin $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B R C \/ B = C \/ C R B ) ) $=
      ( vx vy wcel wa wor wbr wceq w3o cv wi breq1 eqeq1 breq2 3orbi123d imbi2d
      wral eqeq2 wpo df-so ra42 adantl sylbi com12 vtocl2ga impcom ) BAGCAGHADI
      ZBCDJZBCKZCBDJZLZUJEMZFMZDJZUOUPKZUPUODJZLZNUJBUPDJZBUPKZUPBDJZLZNUJUNNEF
      BCAAUOBKZUTVDUJVEUQVAURVBUSVCUOBUPDOUOBUPPUOBUPDQRSUPCKZVDUNUJVFVAUKVBULV
      CUMUPCBDQUPCBUAUPCBDORSUJUOAGUPAGHZUTUJADUBZUTFATEATZHVGUTNZEFADUCVIVJVHU
      TEFAAUDUEUFUGUHUI $.
      $( [21-Jan-1996] $)
  $}

  $( A strict order relation has no 2-cycle loops. $)
  so2nr $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              -. ( B R C /\ C R B ) ) $=
    ( wor wpo wcel wa wbr wn sopo po2nr sylan ) ADEADFBAGCAGHBCDICBDIHJADKABCDL
    M $.
    $( [21-Jan-1996] $)

  $( A strict order relation has no 3-cycle loops. $)
  so3nr $p |- ( ( R Or A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
             -. ( B R C /\ C R D /\ D R B ) ) $=
    ( wor wpo wcel w3a wbr wn sopo po3nr sylan ) AEFAEGBAHCAHDAHIBCEJCDEJDBEJIK
    AELABCDEMN $.
    $( [21-Jan-1996] $)

  $( A strict order relation satisfies strict trichotomy. $)
  sotric $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B R C <-> -. ( B = C \/ C R B ) ) ) $=
    ( wor wcel wa wceq wo wn wi sonr breq2 notbid syl5ibcom adantrr so2nr imnan
    wbr sylibr con2d jaod w3o solin 3orass df-or bitri sylib impbid con2bid ) A
    DEZBAFZCAFZGGZBCHZCBDSZIZBCDSZUNUQURJZUNUOUSUPUKULUOUSKUMUKULGBBDSZJUOUSABD
    LUOUTURBCBDMNOPUNURUPUNURUPGJURUPJKABCDQURUPRTUAUBUNURUOUPUCZUSUQKZABCDUDVA
    URUQIVBURUOUPUEURUQUFUGUHUIUJ $.
    $( [19-Feb-1996] $)

  $( Trichotomy law for strict order relation.  (The proof was shortened by
     Andrew Salmon, 25-Jul-2011.) $)
  sotrieq $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B = C <-> -. ( B R C \/ C R B ) ) ) $=
    ( wor wcel wa wo wceq wn sonr adantrr pm1.2 nsyl breq2 breq1 orbi12d notbid
    wbr syl5ibcom con2d w3o solin 3orass or12 df-or 3bitri sylib impbid con2bid
    wi ) ADEZBAFZCAFZGGZBCDSZCBDSZHZBCIZUOURUSJZUOUSURUOBBDSZVAHZJUSURJUOVAVBUL
    UMVAJUNABDKLVAMNUSVBURUSVAUPVAUQBCBDOBCBDPQRTUAUOUPUSUQUBZUTURUKZABCDUCVCUP
    USUQHHUSURHVDUPUSUQUDUPUSUQUEUSURUFUGUHUIUJ $.
    $( [25-Jul-2011] $) $( [9-Apr-1996] $)

  $( Trichotomy law for strict order relation. $)
  sotrieq2 $p |- ( ( R Or A /\ ( B e. A /\ C e. A ) ) ->
              ( B = C <-> ( -. B R C /\ -. C R B ) ) ) $=
    ( wor wcel wa wceq wbr wo wn sotrieq ioran syl6bb ) ADEBAFCAFGGBCHBCDIZCBDI
    ZJKOKPKGABCDLOPMN $.
    $( [5-May-1999] $)

  $( A transitivity relation.  (Read ` B <_ C ` and ` C < D ` implies
     ` B < D ` .)  (Contributed by Mario Carneiro, 10-May-2013.) $)
  sotr2 $p |- ( ( R Or A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
                ( ( -. C R B /\ C R D ) -> B R D ) ) $=
    ( wor wcel w3a wa wbr wn wceq wo wi sotric ancom2s 3adantr3 con2bid breq1
    wb biimpd a1i sotr exp3a jaod sylbird imp3a ) AEFZBAGZCAGZDAGZHIZCBEJZKZCDE
    JZBDEJZULUNCBLZBCEJZMZUOUPNZULUMUSUHUIUJUMUSKTZUKUHUJUIVAACBEOPQRULUQUTURUQ
    UTNULUQUOUPCBDESUAUBULURUOUPABCDEUCUDUEUFUG $.
    $( [4-Jan-2015] $)

  ${
    $d x y R $.  $d x y A $.  $d x y ph $.
    issod.1 $e |- ( ph -> R Po A ) $.
    issod.2 $e |- ( ( ph /\ ( x e. A /\ y e. A ) ) ->
                    ( x R y \/ x = y \/ y R x ) ) $.
    $( A irreflexive, transitive, linear relation is a strict ordering. $)
    issod $p |- ( ph -> R Or A ) $=
      ( wpo cv wbr wceq w3o wral wor ralrimivva df-so sylanbrc ) ADEHBIZCIZEJRS
      KSREJLZCDMBDMDENFATBCDDGOBCDEPQ $.
      $( [9-Jul-2014] $) $( [21-Jan-1996] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.
    issoi.1 $e |- ( x e. A -> -. x R x ) $.
    issoi.2 $e |- ( ( x e. A /\ y e. A /\ z e. A ) ->
                  ( ( x R y /\ y R z ) -> x R z ) ) $.
    issoi.3 $e |- ( ( x e. A /\ y e. A ) -> ( x R y \/ x = y \/ y R x ) ) $.
    $( A irreflexive, transitive, linear relation is a strict ordering. $)
    issoi $p |- R Or A $=
      ( wor wtru cv wcel wbr wn adantl w3a wa wi ispod wceq w3o issod trud ) DE
      IJABDEJABCDEAKZDLZUDUDEMNJFOUEBKZDLZCKZDLPUDUFEMZUFUHEMQUDUHEMRJGOSUEUGQU
      IUDUFTUFUDEMUAJHOUBUC $.
      $( [9-Jul-2014] $) $( [21-Jan-1996] $)
  $}

  ${
    $d x y z R $.  $d x y z A $.
    isso2i.1 $e |- ( ( x e. A /\ y e. A ) ->
                     ( x R y <-> -. ( x = y \/ y R x ) ) ) $.
    isso2i.2 $e |- ( ( x e. A /\ y e. A /\ z e. A ) ->
                     ( ( x R y /\ y R z ) -> x R z ) ) $.
    $( Deduce strict ordering from its properties. $)
    isso2i $p |- R Or A $=
      ( cv wcel wbr wn wa wceq wo eqid orci wb wi eleq1 anbi2d eqeq2 notbid w3o
      breq1 orbi12d bibi12d imbi12d con2bid chvarv anidms biimprd 3orass sylibr
      breq2 mpbii df-or bitri issoi ) ABCDEAHZDIZUSUSEJZKZUTUTLZUSUSMZVANZVBVDV
      AUSOPUTBHZDIZLZUSVFMZVFUSEJZNZUSVFEJZKZQZRVCVEVBQZRBAVFUSMZVHVCVNVOVPVGUT
      UTVFUSDSTVPVKVEVMVBVPVIVDVJVAVFUSUSUAVFUSUSEUDUEVPVLVAVFUSUSEUNUBUFUGVHVL
      VKFUHZUIUOUJGVHVMVKRZVLVIVJUCZVHVKVMVQUKVSVLVKNVRVLVIVJULVLVKUPUQUMUR $.
      $( [9-Jul-2014] $) $( [29-Jan-1996] $)
  $}

  ${
    $d x y R $.
    $( Any relation is a strict ordering of the empty set.  (The proof was
       shortened by Andrew Salmon, 25-Jul-2011.) $)
    so0 $p |- R Or (/) $=
      ( vx vy c0 wor wpo cv wbr wceq w3o wral po0 ral0 df-so mpbir2an ) DAEDAFB
      GZCGZAHPQIQPAHJCDKZBDKALRBMBCDANO $.
      $( [25-Jul-2011] $) $( [16-Mar-1997] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    $( A totally ordered set has at most one minimal element.  (Contributed by
       Mario Carneiro, 24-Jun-2015.) $)
    somo $p |- ( R Or A -> E* x ( x e. A /\ A. y e. A -. y R x ) ) $=
      ( vz wor cv wbr wn wral wa wceq wi wcel wmo breq1 notbid rcla4v im2anan9
      wo ancomsd imp ioran w3o solin df-3or or32 bitri sylib syl5bir syl5 exp4b
      ord pm2.43d ralrimivv breq2 ralbidv rmo4 sylibr ) CDFZBGZAGZDHZIZBCJZVAEG
      ZDHZIZBCJZKZVBVFLZMZECJACJVBCNZVEKAOUTVLAECCUTVMVFCNZKZVLUTVOVOVJVKVOVJKV
      BVFDHZIZVFVBDHZIZKZUTVOKZVKVOVJVTVOVIVEVTVMVIVQVNVEVSVHVQBVBCVAVBLVGVPVAV
      BVFDPQRVDVSBVFCVAVFLVCVRVAVFVBDPQRSUAUBVTVPVRTZIWAVKVPVRUCWAWBVKWAVPVKVRU
      DZWBVKTZCVBVFDUEWCVPVKTVRTWDVPVKVRUFVPVKVRUGUHUIUMUJUKULUNUOVEVIAECVKVDVH
      BCVKVCVGVBVFVADUPQUQURUS $.
      $( [24-Jun-2015] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                Founded and well-ordering relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new constant symbols. $)
  $c Fr $. $( Well-founded predicate symbol (read: 'well-founded'). $)
  $c Se $. $( Set-like predicate symbol (read: 'set-like'). $)
  $c We $. $( Well-ordering predicate symbol (read: 'well orders') $)

  $( Extend wff notation to include the well-founded predicate.  Read:  ' ` R `
     is a well-founded relation on ` A ` .' $)
  wfr $a wff R Fr A $.

  $( Extend wff notation to include the set-like predicate.  Read:  ' ` R ` is
     set-like on ` A ` .' $)
  wse $a wff R Se A $.

  $( Extend wff notation to include the well-ordering predicate.
     Read:  ' ` R ` well-orders ` A ` .' $)
  wwe $a wff R We A $.

  ${
    $d x y z R $.  $d x y z A $.
    $( Define the well-founded relation predicate.  Definition 6.24(1) of
       [TakeutiZaring] p. 30.  For alternate definitions, see ~ dffr2 and
       ~ dffr3 . $)
    df-fr $a |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x A. z e. x -. z R y ) ) $.

    $( Define the set-like predicate. $)
    df-se $a |- ( R Se A <-> A. x e. A { y e. A | y R x } e. _V ) $.
  $}

  $( Define the well-ordering predicate.  For an alternate definition, see
     ~ dfwe2 . $)
  df-we $a |- ( R We A <-> ( R Fr A /\ R Or A ) ) $.

  ${
    $d x y z A $.  $d x y z B $.  $d x y z R $.  $d x y V $.
    $( Property of well-founded relation (one direction of definition). $)
    fri $p |- ( ( ( B e. C /\ R Fr A ) /\ ( B C_ A /\ B =/= (/) ) ) ->
                E. x e. B A. y e. B -. y R x ) $=
      ( vz wcel wfr wss c0 wne wa cv wbr wn wral wrex wi wal df-fr wceq anbi12d
      sseq1 neeq1 raleq rexeqbi1dv imbi12d cla4gv syl5bi imp31 ) DEHZCFIZDCJZDK
      LZMZBNANFOPZBDQZADRZUMGNZCJZUTKLZMZUQBUTQZAUTRZSZGTULUPUSSZGABCFUAVFVGGDE
      UTDUBZVCUPVEUSVHVAUNVBUOUTDCUDUTDKUEUCVDURAUTDUQBUTDUFUGUHUIUJUK $.
      $( [3-Apr-2007] $) $( [18-Mar-1997] $)

    $( The ` R ` -preimage of an element of the base set in a set-like relation
       is a set.  (Contributed by Mario Carneiro, 19-Nov-2014.) $)
    seex $p |- ( ( R Se A /\ B e. A ) -> { x e. A | x R B } e. _V ) $=
      ( vy wse cv wbr crab cvv wcel wral df-se wceq breq2 rabbidv eleq1d sylanb
      rcla4cva ) BDFAGZEGZDHZABIZJKZEBLCBKTCDHZABIZJKZEABDMUDUGECBUACNZUCUFJUHU
      BUEABUACTDOPQSR $.
      $( [19-Nov-2014] $)

    $( Any relation on a set is set-like on it.  (Contributed by Mario
       Carneiro, 22-Jun-2015.) $)
    exse $p |- ( A e. V -> R Se A ) $=
      ( vy vx wcel cv wbr crab cvv wral wse rabexg ralrimivw df-se sylibr ) ACF
      ZDGEGBHZDAIJFZEAKABLQSEARDACMNEDABOP $.
      $( [22-Jun-2015] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    $( Alternate definition of well-founded relation.  Similar to Definition
       6.21 of [TakeutiZaring] p. 30.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.)  (The proof was shortened by Mario Carneiro,
       23-Jun-2015.) $)
    dffr2 $p |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x { z e. x | z R y } = (/) ) ) $=
      ( wfr cv wss c0 wne wa wbr wn wral wrex wi wal crab wceq df-fr rabeq0
      rexbii imbi2i albii bitr4i ) DEFAGZDHUFIJKZCGBGELZMCUFNZBUFOZPZAQUGUHCUFR
      ISZBUFOZPZAQABCDETUNUKAUMUJUGULUIBUFUHCUFUAUBUCUDUE $.
      $( [23-Jun-2015] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    frc.1 $e |- B e. _V $.
    $( Property of well-founded relation (one direction of definition using
       class variables). $)
    frc $p |- ( ( R Fr A /\ B C_ A /\ B =/= (/) ) ->
                E. x e. B { y e. B | y R x } = (/) ) $=
      ( wfr wss c0 wne w3a cv wbr wn wral wrex crab wceq cvv wcel wa fri mpanl1
      3impb rabeq0 rexbii sylibr ) CEGZDCHZDIJZKBLALEMZNBDOZADPZUKBDQIRZADPUHUI
      UJUMDSTUHUIUJUAUMFABCDSEUBUCUDUNULADUKBDUEUFUG $.
      $( [19-Nov-2014] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z R $.  $d x y S $.
    $( Subset theorem for the well-founded predicate.  Exercise 1 of
       [TakeutiZaring] p. 31.  (The proof was shortened by Andrew Salmon,
       25-Jul-2011.) $)
    frss $p |- ( A C_ B -> ( R Fr B -> R Fr A ) ) $=
      ( vx vz vy wss cv c0 wne wa wbr wn wral wrex wi wal wfr sstr2 df-fr com12
      anim1d imim1d alimdv 3imtr4g ) ABGZDHZBGZUGIJZKZEHFHCLMEUGNFUGOZPZDQUGAGZ
      UIKZUKPZDQBCRACRUFULUODUFUNUJUKUFUMUHUIUMUFUHUGABSUAUBUCUDDFEBCTDFEACTUE
      $.
      $( [25-Jul-2011] $) $( [3-Apr-1994] $)

    $( Subset theorem for the set-like predicate.  (Contributed by Mario
       Carneiro, 24-Jun-2015.) $)
    sess1 $p |- ( R C_ S -> ( S Se A -> R Se A ) ) $=
      ( vy vx wss cv wbr crab cvv wcel wral wi simpl ssbrd ss2rabdv ssexg df-se
      wse wa ex syl ralimdv 3imtr4g ) BCFZDGZEGZCHZDAIZJKZEALUFUGBHZDAIZJKZEALA
      CSABSUEUJUMEAUEULUIFZUJUMMUEUKUHDAUEUFAKZTBCUFUGUEUONOPUNUJUMULUIJQUAUBUC
      EDACREDABRUD $.
      $( [24-Jun-2015] $)

    $( Subset theorem for the set-like predicate.  (Contributed by Mario
       Carneiro, 24-Jun-2015.) $)
    sess2 $p |- ( A C_ B -> ( R Se B -> R Se A ) ) $=
      ( vy vx wss cv wbr crab cvv wcel wral wse ssralv wi rabss2 ssexg ex df-se
      syl ralimdv syld 3imtr4g ) ABFZDGEGCHZDBIZJKZEBLZUEDAIZJKZEALZBCMACMUDUHU
      GEALUKUGEABNUDUGUJEAUDUIUFFZUGUJOUEDABPULUGUJUIUFJQRTUAUBEDBCSEDACSUC $.
      $( [24-Jun-2015] $)
  $}

  ${
    $d x y z R $.  $d x y z S $.  $d x y z A $.
    $( Equality theorem for the well-founded predicate. $)
    freq1 $p |- ( R = S -> ( R Fr A <-> S Fr A ) ) $=
      ( vx vz vy wceq cv wss c0 wne wa wbr wn wral wrex wi wal wfr df-fr notbid
      breq rexralbidv imbi2d albidv 3bitr4g ) BCGZDHZAIUHJKLZEHZFHZBMZNZEUHOFUH
      PZQZDRUIUJUKCMZNZEUHOFUHPZQZDRABSACSUGUOUSDUGUNURUIUGUMUQFEUHUHUGULUPUJUK
      BCUBUAUCUDUEDFEABTDFEACTUF $.
      $( [9-Mar-1997] $)
  $}

  $( Equality theorem for the well-founded predicate. $)
  freq2 $p |- ( A = B -> ( R Fr A <-> R Fr B ) ) $=
    ( wceq wfr wss wi eqimss2 frss syl eqimss impbid ) ABDZACEZBCEZMBAFNOGBAHBA
    CIJMABFONGABKABCIJL $.
    $( [3-Apr-1994] $)

  $( Equality theorem for the set-like predicate. $)
  seeq1 $p |- ( R = S -> ( R Se A <-> S Se A ) ) $=
    ( wceq wse wss wi eqimss2 sess1 syl eqimss impbid ) BCDZABEZACEZMCBFNOGCBHA
    CBIJMBCFONGBCKABCIJL $.
    $( [24-Jun-2015] $)

  $( Equality theorem for the set-like predicate. $)
  seeq2 $p |- ( A = B -> ( R Se A <-> R Se B ) ) $=
    ( wceq wse wss wi eqimss2 sess2 syl eqimss impbid ) ABDZACEZBCEZMBAFNOGBAHB
    ACIJMABFONGABKABCIJL $.
    $( [24-Jun-2015] $)

  ${
    $d y R a b c $.  $d y A a b c $.  $d x y a b c $.
    hbfr.r $e |- ( y e. R -> A. x y e. R ) $.
    hbfr.a $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for well-founded relations.
       (Contributed by Stefan O'Rear, 20-Jan-2015.) $)
    hbfr $p |- ( R Fr A -> A. x R Fr A ) $=
      ( va vc vb wfr cv wss c0 wne wa wbr wn wral wrex ax17el wi wal df-fr hbss
      ax-17 hban hbbr hbn hbral hbrex hbim hbal hbxfrbi ) CDJGKZCLZUNMNZOZHKZIK
      ZDPZQZHUNRZIUNSZUAZGUBAGIHCDUCVDAGUQVCAUOUPAABUNCBGATFUDUPAUEUFVBAIUNIGAT
      VAAHUNHGATUTAABURUSDBHATEBIATUGUHUIUJUKULUM $.
      $( [20-Jan-2015] $)

    $( Bound-variable hypothesis builder for set-like relations.  (Contributed
       by Mario Carneiro, 24-Jun-2015.) $)
    hbse $p |- ( R Se A -> A. x R Se A ) $=
      ( va vb wse cv wbr crab cvv wcel wral df-se hblem ax-17 hbbr hbrab hbral
      hbel hbxfrbi ) CDIGJZHJZDKZGCLZMNZHCOAHGCDPUHAHCABHCFQABBUGMUFAGBCABUDUED
      BJZUDNAREUIUENARSFTUIMNARUBUAUC $.
      $( [24-Jun-2015] $)

    $( Bound-variable hypothesis builder for well-orderings.  (Contributed by
       Stefan O'Rear, 20-Jan-2015.) $)
    hbwe $p |- ( R We A -> A. x R We A ) $=
      ( wwe wfr wor wa df-we hbfr hbso hban hbxfrbi ) CDGCDHZCDIZJACDKPQAABCDEF
      LABCDEFMNO $.
      $( [20-Jan-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( A well-founded relation is irreflexive.  Special case of Proposition
       6.23 of [TakeutiZaring] p. 30. $)
    frirr $p |- ( ( R Fr A /\ B e. A ) -> -. B R B ) $=
      ( vx vy wfr wcel wa cv wbr csn crab c0 wceq wrex wss adantl wral notbid
      wn wne simpl simpr snssd snnzg frc syl3anc wb rabeq0 breq2 ralbidv syl5bb
      snex rexsng breq1 ralsng bitrd mpbid ) ACFZBAGZHZDIZEIZCJZDBKZLMNZEVEOZBB
      CJZTZVAUSVEAPVEMUAZVGUSUTUBVABAUSUTUCUDUTVJUSBAUEQEDAVECBUMUFUGUTVGVIUHUS
      UTVGVBBCJZTZDVERZVIVFVMEBAVFVDTZDVERVCBNZVMVDDVEUIVOVNVLDVEVOVDVKVCBVBCUJ
      SUKULUNVLVIDBAVBBNVKVHVBBBCUOSUPUQQUR $.
      $( [22-Jun-2015] $) $( [2-Jan-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y R $.
    $( A well-founded relation has no 2-cycle loops.  Special case of
       Proposition 6.23 of [TakeutiZaring] p. 30. $)
    fr2nr $p |- ( ( R Fr A /\ ( B e. A /\ C e. A ) ) ->
                -. ( B R C /\ C R B ) ) $=
      ( vx vy wcel wa wbr wn wo cv wral cvv adantl ad2antrl wceq notbid ralbidv
      breq2 wfr cpr wrex wss wne prex a1i simpl prssi prnzg fri syl22anc rexprg
      c0 wb mpbid wi prid2g ad2antll breq1 rcla4v syl prid1g orim12d mpd orcomd
      ianor sylibr ) ADUAZBAGZCAGZHZHZBCDIZJZCBDIZJZKVNVPHJVMVQVOVMELZBDIZJZEBC
      UBZMZVRCDIZJZEWAMZKZVQVOKVMVRFLZDIZJZEWAMZFWAUCZWFVMWANGZVIWAAUDZWAUNUEZW
      KWLVMBCUFUGVIVLUHVLWMVIBCAUIOVJWNVIVKBCAUJPFEAWANDUKULVLWKWFUOVIWJWBWEFBC
      AAWGBQZWIVTEWAWOWHVSWGBVRDTRSWGCQZWIWDEWAWPWHWCWGCVRDTRSUMOUPVMWBVQWEVOVM
      CWAGZWBVQUQVKWQVIVJBCAURUSVTVQECWAVRCQVSVPVRCBDUTRVAVBVMBWAGZWEVOUQVJWRVI
      VKBCAVCPWDVOEBWAVRBQWCVNVRBCDUTRVAVBVDVEVFVNVPVGVH $.
      $( [22-Jun-2015] $) $( [30-May-1994] $)
  $}

  ${
    $d x y z R $.
    $( Any relation is well-founded on the empty set. $)
    fr0 $p |- R Fr (/) $=
      ( vx vz vy c0 wfr cv wss wne wa wbr crab wceq wrex dffr2 ss0 a1d necon1ad
      wi wn imp mpgbir ) EAFBGZEHZUCEIZJCGDGAKCUCLEMDUCNZSBBDCEAOUDUEUFUDUFUCEU
      DUCEMUFTUCPQRUAUB $.
      $( [17-Sep-1993] $)
  $}

  ${
    $d A x y z $.  $d R x y z $.  $d ph y z $.  $d ps x $.
    frminex.1 $e |- A e. _V $.
    frminex.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( If an element of a well-founded set satisfies a property ` ph ` , then
       there is a minimal element that satisfies ` ph ` .  (Contributed by Jeff
       Madsen, 18-Jun-2010.) $)
    frminex $p |- ( R Fr A -> ( E. x e. A ph ->
                      E. x e. A ( ph /\ A. y e. A ( ps -> -. y R x ) ) ) ) $=
      ( vz wrex cv wbr wn wi wral wa cvv wcel ax-17 sylbi crab c0 wne wfr rabn0
      wss rabex ssrab2 fri hbrab1 hbral wceq breq2 notbid ralbidv cbvrexf rabid
      elrab imbi1i pm3.3 ralimi2 anim2i sylanb anass sylib reximi2 an4s mpanl12
      syl ex syl5bir ) ACEJACEUAZUBUCZEFUDZABDKZCKZFLZMZNZDEOZPZCEJZACEUEVNVMWB
      VLQRZVLEUFZVNVMPWBACEGUGACEUHWCVNWDVMWBWCVNPWDVMPPVOIKZFLZMZDVLOZIVLJZWBI
      DEVLQFUIWIVRDVLOZCVLJWBWHWJICDVLVOVLRZISACDEUJZWGCDVLWLWGCSUKWJISWEVPULZW
      GVRDVLWMWFVQWEVPVOFUMUNUOUPWJWACVLEVPVLRZWJPVPERZAPZVTPZWOWAPWNWPWJWQACEU
      QWJVTWPVRVSDVLEWKVRNVOERZBPZVRNWRVSNWKWSVRABCVOEHURUSWRBVRUTTVAVBVCWOAVTV
      DVEVFTVIVGVHVJVK $.
      $( [18-Jun-2010] $)
  $}

  ${
    $d x A $.
    $( Irreflexivity of the epsilon relation: a class founded by epsilon is not
       a member of itself. $)
    efrirr $p |- ( _E Fr A -> -. A e. A ) $=
      ( cep wfr wcel wn wa wbr frirr wb epelg adantl mtbid ex pm2.01d ) ABCZAAD
      ZOPPEOPFAABGZPAABHPQPIOAAAJKLMN $.
      $( [22-Jun-2015] $) $( [18-Apr-1994] $)
  $}

  $( A set founded by epsilon contains no 2-cycle loops. $)
  efrn2lp $p |- ( ( _E Fr A /\ ( B e. A /\ C e. A ) ) ->
                -. ( B e. C /\ C e. B ) ) $=
    ( cep wfr wcel wa wbr fr2nr wb epelg bi2anan9 ancoms adantl mtbid ) ADEZBAF
    ZCAFZGZGBCDHZCBDHZGZBCFZCBFZGZABCDISUBUEJZPRQUFRTUCQUAUDBCAKCBAKLMNO $.
    $( [19-Apr-1994] $)

  ${
    $d x y A $.
    $( The epsilon relation is set-like on any class.  (This is the origin of
       the term "set-like": a set-like relation "acts like" the epsilon
       relation of sets and their elements.)  (Contributed by Mario Carneiro,
       22-Jun-2015.) $)
    epse $p |- _E Se A $=
      ( vy vx cep wse cv wbr crab cvv wcel wral cab epel bicomi abbi2i eqeltrri
      vex cin dfrab2 inss1 eqsstri ssexi rgenw df-se mpbir ) ADEBFZCFZDGZBAHZIJ
      ZCAKUJCAUIUHBLZUGUKIUHBUGUHUFUGJBCMNOCQPUIUKARUKUHBASUKATUAUBUCCBADUDUE
      $.
      $( [22-Jun-2015] $)
  $}

  $( Similar to Theorem 7.2 of [TakeutiZaring] p. 35, of except that the Axiom
     of Regularity is not required due to antecedent ` _E Fr A ` . $)
  tz7.2 $p |- ( ( Tr A /\ _E Fr A /\ B e. A ) -> ( B C_ A /\ B =/= A ) ) $=
    ( wtr cep wfr wcel wss wne wa trss wn wceq efrirr eleq1 syl5ibrcom necon2ad
    notbid anim12ii 3impia ) ACZADEZBAFZBAGZBAHZITUBUCUAUDABJUAUBBAUAUBKBALZAAF
    ZKAMUEUBUFBAANQOPRS $.
    $( [28-Apr-2007] $) $( [4-May-1994] $)

  ${
    $d x y z A $.
    $( An alternate way of saying that the epsilon relation is well-founded.
       (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
    dfepfr $p |- ( _E Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                  E. y e. x ( x i^i y ) = (/) ) ) $=
      ( vz cep wfr cv wss c0 wne wa wbr crab wceq wrex wi wal cin dffr2 wcel wb
      epel a1i rabbiia dfin5 eqtr4i eqeq1i rexbii imbi2i albii bitri ) CEFAGZCH
      ULIJKZDGZBGZELZDULMZINZBULOZPZAQUMULUORZINZBULOZPZAQABDCESUTVDAUSVCUMURVB
      BULUQVAIUQUNUOTZDULMVAUPVEDULUPVEUAUNULTDBUBUCUDDULUOUEUFUGUHUIUJUK $.
      $( [23-Jun-2015] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    epfrc.1 $e |- B e. _V $.
    $( A subset of an epsilon-founded class has a minimal element.  (A distinct
       variable restriction was removed by David Abernethy, 22-Feb-2011.) $)
    epfrc $p |- ( ( _E Fr A /\ B C_ A /\ B =/= (/) ) ->
                  E. x e. B ( B i^i x ) = (/) ) $=
      ( vy cep wfr wss c0 wne w3a cv wbr crab wceq wrex cin frc wcel dfin5 epel
      wb a1i rabbiia eqtr4i eqeq1i rexbii sylibr ) BFGCBHCIJKELZALZFMZECNZIOZAC
      PCUJQZIOZACPAEBCFDRUOUMACUNULIUNUIUJSZECNULECUJTUKUPECUKUPUBUICSEAUAUCUDU
      EUFUGUH $.
      $( [22-Feb-2011] $) $( [17-Feb-2004] $)
  $}

  $( Subset theorem for the well-ordering predicate.  Exercise 4 of
     [TakeutiZaring] p. 31. $)
  wess $p |- ( A C_ B -> ( R We B -> R We A ) ) $=
    ( wss wfr wor wa wwe frss soss anim12d df-we 3imtr4g ) ABDZBCEZBCFZGACEZACF
    ZGBCHACHNOQPRABCIABCJKBCLACLM $.
    $( [19-Apr-1994] $)

  $( Equality theorem for the well-ordering predicate. $)
  weeq1 $p |- ( R = S -> ( R We A <-> S We A ) ) $=
    ( wceq wfr wor wa wwe freq1 soeq1 anbi12d df-we 3bitr4g ) BCDZABEZABFZGACEZ
    ACFZGABHACHNOQPRABCIABCJKABLACLM $.
    $( [9-Mar-1997] $)

  $( Equality theorem for the well-ordering predicate. $)
  weeq2 $p |- ( A = B -> ( R We A <-> R We B ) ) $=
    ( wceq wfr wor wa wwe freq2 soeq2 anbi12d df-we 3bitr4g ) ABDZACEZACFZGBCEZ
    BCFZGACHBCHNOQPRABCIABCJKACLBCLM $.
    $( [3-Apr-1994] $)

  $( A well-ordering is well-founded. $)
  wefr $p |- ( R We A -> R Fr A ) $=
    ( wwe wfr wor df-we simplbi ) ABCABDABEABFG $.
    $( [22-Apr-1994] $)

  $( A well-ordering is a strict ordering. $)
  weso $p |- ( R We A -> R Or A ) $=
    ( wwe wfr wor df-we simprbi ) ABCABDABEABFG $.
    $( [16-Mar-1997] $)

  $( The elements of an epsilon well-ordering are comparable. $)
  wecmpep $p |- ( ( _E We A /\ ( x e. A /\ y e. A ) ) ->
                 ( x e. y \/ x = y \/ y e. x ) ) $=
    ( cep wwe wor cv wcel wa wceq w3o weso wbr solin epel 3orbi123i sylib sylan
    biid ) CDECDFZAGZCHBGZCHIZUAUBHZUAUBJZUBUAHZKZCDLTUCIUAUBDMZUEUBUADMZKUGCUA
    UBDNUHUDUEUEUIUFABOUESBAOPQR $.
    $( [17-May-1994] $)

  $( An epsilon well-ordering is a transitive relation. $)
  wetrep $p |- ( ( _E We A /\ ( x e. A /\ y e. A /\ z e. A ) ) ->
             ( ( x e. y /\ y e. z ) -> x e. z ) ) $=
    ( cep wwe cv wcel w3a wa wbr wor wi weso sotr sylan epel anbi12i 3imtr3g )
    DEFZAGZDHBGZDHCGZDHIZJUAUBEKZUBUCEKZJZUAUCEKZUAUBHZUBUCHZJUAUCHTDELUDUGUHMD
    ENDUAUBUCEOPUEUIUFUJABQBCQRACQS $.
    $( [22-Apr-1994] $)

  ${
    $d x y z R $.  $d y z A $.  $d x y z B $.
    $( A non-empty (possibly proper) subclass of a class well-ordered by ` _E `
       has a minimal element.  Special case of Proposition 6.26 of
       [TakeutiZaring] p. 31. $)
    wefrc $p |- ( ( _E We A /\ B C_ A /\ B =/= (/) ) ->
               E. x e. B ( B i^i x ) = (/) ) $=
      ( vy vz cep wwe wss c0 wne cv cin wceq wrex wi wcel wa eqeq1d ex elin wex
      wess ineq2 rcla4ev adantl inss1 wfr wefr vex inex2 epfrc syl3an1 3exp mpi
      n0 anbi1i anass bitri rexbii2 syl6ib adantr wral w3a df-3an 3anrot bitr3i
      wetrep exp3a sylan2b exp44 com34 imp3a imp4a com23 ralrimdv dfss3 syl6ibr
      imp syl5bi dfss in32 eqeq2i biimprd syl6 reximdvai syld pm2.61dne exlimdv
      biimpi syl6com 3imp ) BFGZCBHZCIJZCAKZLZIMZACNZWMWLCFGZWNWROCBFUBWNDKZCPZ
      DUAWSWRDCUOWSXAWRDWSXAWRWSXAQZWRCWTLZIXAXCIMZWROWSXAXDWRWQXDAWTCWOWTMWPXC
      IWOWTCUCRUDSUEXBXCIJZWOWTPZXCWOLZIMZQZACNZWRWSXEXJOXAWSXEXHAXCNZXJWSXCCHZ
      XEXKOCWTUFWSXLXEXKWSCFUGXLXEXKCFUHACXCWTCDUIUJUKULUMUNXHXIAXCCWOXCPZXHQWO
      CPZXFQZXHQXNXIQXMXOXHWOCWTTUPXNXFXHUQURUSUTVAXBXIWQACXBXNXFXHWQXBXNXFXHWQ
      OZXBXOWPWTHZXPXBXOEKZWTPZEWPVBXQXBXOXSEWPXBXRWPPZXOXSXBXTXNXFXSXTXRCPZXRW
      OPZQXBXNXFXSOZOZXRCWOTXBYAYBYDXBYAXNYBYCWSXAYAXNYBYCOZOOWSXAYAXNYEXAYAQXN
      QZWSYAXNXAVCZYEYFXAYAXNVCYGXAYAXNVDXAYAXNVEVFWSYGQYBXFXSEADCVGVHVIVJVRVKV
      LVSVMVNVOEWPWTVPVQXQWQXHXQWPXGIXQWPXGMZXQWPWPWTLZMYHWPWTVTYIXGWPCWOWTWAWB
      URWIRWCWDVHVMWEWFWGSWHVSWJWK $.
      $( [18-Mar-2007] $) $( [17-Feb-2004] $)
  $}

  $( Any relation is a well-ordering of the empty set. $)
  we0 $p |- R We (/) $=
    ( c0 wwe wfr wor fr0 so0 df-we mpbir2an ) BACBADBAEAFAGBAHI $.
    $( [16-Mar-1997] $)

  ${
    $d x y z A $.  $d w x y z B $.  $d w x y z R $.
    $( A subset of a well-ordered set has a unique minimal element. $)
    wereu $p |- ( ( R We A /\ ( B e. V /\ B C_ A /\ B =/= (/) ) ) ->
                E! x e. B A. y e. B -. y R x ) $=
      ( wwe wcel wss c0 wne w3a wa cv wbr wn wral wrex wi wor wmo wreu wfr wefr
      fri exp32 expcom 3imp2 sylan simpr2 weso soss sylc somo syl reu5 sylanbrc
      adantr ) CEGZDFHZDCIZDJKZLZMZBNANZEOPBDQZADRZVEDHVFMAUAZVFADUBUSCEUCZVCVG
      CEUDVIUTVAVBVGUTVIVAVBVGSSUTVIMVAVBVGABCDFEUEUFUGUHUIVDDETZVHVDVACETZVJUS
      UTVAVBUJUSVKVCCEUKURDCEULUMABDEUNUOVFADUPUQ $.
      $( [28-Apr-2015] $) $( [18-Mar-1997] $)

    $( All nonempty (possibly proper) subclasses of ` A ` , which has a
       well-founded relation ` R ` , have ` R `-minimal elements.  Proposition
       6.26 of [TakeutiZaring] p. 31.  (Contributed by Scott Fenton,
       29-Jan-2011.)  (Revised by Mario Carneiro, 24-Jun-2015.) $)
    wereu2 $p |- ( ( ( R We A /\ R Se A ) /\ ( B C_ A /\ B =/= (/) ) ) ->
                E! x e. B A. y e. B -. y R x ) $=
      ( vz vw wa c0 cv wbr wn wral wrex wcel wceq wi breq1 syl5bi ad2antrr wreu
      wwe wse wss wne wmo wex crab rabeq0 notbid cbvralv ralbidv syl5bb rcla4ev
      n0 breq2 ex ad2antll cvv wfr simprl simplr sess2 sylc simprr seex syl2anc
      wefr ssrab2 syl5ss fri expr syl21anc rexrab ralrab wor weso soss syl13anc
      simpr sotr ancomsd expdimp an32s con3d idd ralimdva expimpd reximdva syld
      jad pm2.61dne exlimdv impr somo syl reu5 sylanbrc ) CEUBZCEUCZHZDCUDZDIUE
      ZHZHZBJZAJZEKZLZBDMZADNZXGDOZXJHAUFZXJADUAXAXBXCXKXCFJZDOZFUGXAXBHZXKFDUO
      XPXOXKFXAXBXOXKXAXBXOHZHZXKGJZXNEKZGDUHZIYAIPXTLZGDMZXRXKXTGDUIXOYCXKQXAX
      BXOYCXKXJYCAXNDXJXSXGEKZLZGDMXGXNPZYCXIYEBGDXFXSPXHYDXFXSXGERUJUKYFYEYBGD
      YFYDXTXGXNXSEUPUJULUMUNUQURSXRYAIUEZXIBYAMZAYANZXKXRYAUSOZCEUTZYACUDZYGYI
      QXRDEUCZXOYJXRXBWTYMXAXBXOVAZWSWTXQVBDCEVCVDXAXBXOVEZGDXNEVFVGWSYKWTXQCEV
      HTXRYADCXTGDVIYNVJYJYKHYLYGYIABCYAUSEVKVLVMYIXGXNEKZYHHZADNXRXKXTYPYHGADX
      SXGXNERVNXRYQXJADXRXLHZYPYHXJYHXFXNEKZXIQZBDMYRYPHZXJXTYSXIBGDXSXFXNERVOU
      UAYTXIBDUUAXFDOZHZYSXIXIUUCXHYSYRUUBYPXHYSQYRUUBHZYPXHYSUUDXHYPYSUUDDEVPZ
      UUBXLXOXHYPHYSQXRUUEXLUUBXRXBCEVPZUUEYNWSUUFWTXQCEVQZTDCEVRZVDTYRUUBVTXRX
      LUUBVBXRXOXLUUBYOTDXFXGXNEWAVSWBWCWDWEUUCXIWFWKWGSWHWISWJWLVLWMSWNXEUUEXM
      XEXBUUFUUEXAXBXCVAWSUUFWTXDUUGTUUHVDABDEWOWPXJADWQWR $.
      $( [24-Jun-2015] $) $( [29-Jan-2011] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordinals
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c Ord $. $( Ordinal predicate $)
  $c On $. $( The class of ordinal numbers $)
  $c Lim $. $( Limit ordinal predicate $)
  $c suc $. $( Successor function (read:  'successor of') $)

  $( Extend the definition of a wff to include the ordinal predicate. $)
  word $a wff Ord A $.

  $( Extend the definition of a class to include the class of all ordinal
     numbers.  (The 0 in the name prevents creating a file called con.html,
     which causes problems in Windows.) $)
  con0 $a class On $.

  $( Extend the definition of a wff to include the limit ordinal predicate. $)
  wlim $a wff Lim A $.

  $( Extend class notation to include the successor function. $)
  csuc $a class suc A $.

  $( Define the ordinal predicate, which is true for a class that is transitive
     and is well-ordered by the epsilon relation.  Variant of definition of
     [BellMachover] p. 468. $)
  df-ord $a |- ( Ord A <-> ( Tr A /\ _E We A ) ) $.

  $( Define the class of all ordinal numbers.  Definition 7.11 of
     [TakeutiZaring] p. 38. $)
  df-on $a |- On = { x | Ord x } $.

  $( Define the limit ordinal predicate, which is true for a non-empty ordinal
     that is not a successor (i.e. that is the union of itself).  Our
     definition combines the definition of Lim of [BellMachover] p. 471 and
     Exercise 1 of [TakeutiZaring] p. 42.  See ~ dflim2 , ~ dflim3 , and dflim4
     for alternate definitions. $)
  df-lim $a |- ( Lim A <-> ( Ord A /\ A =/= (/) /\ A = U. A ) ) $.

  $( Define the successor of a class.  When applied to an ordinal number, the
     successor means the same thing as "plus 1" (see ~ oa1suc ).  Definition
     7.22 of [TakeutiZaring] p. 41, who use "+ 1" to denote this function.  Our
     definition is a generalization to classes.  Although it is not
     conventional to use it with proper classes, it has no affect on a proper
     class ( ~ sucprc ), so that the successor of any ordinal class is still an
     ordinal class ( ~ ordsuc ), simplifying certain proofs.  Some authors
     denote the successor operation with a prime (apostrophe-like) symbol, such
     as Definition 6 of [Suppes] p. 134 and the definition of successor in
     [Mendelson] p. 246 (who uses the symbol "Suc" as a predicate to mean "is a
     successor ordinal").  The definition of successor of [Enderton] p. 68
     denotes the operation with a plus-sign superscript. $)
  df-suc $a |- suc A = ( A u. { A } ) $.

  $( Equality theorem for the ordinal predicate. $)
  ordeq $p |- ( A = B -> ( Ord A <-> Ord B ) ) $=
    ( wceq wtr cep wwe wa word treq weeq2 anbi12d df-ord 3bitr4g ) ABCZADZAEFZG
    BDZBEFZGAHBHNOQPRABIABEJKALBLM $.
    $( [17-Sep-1993] $)

  ${
    $d x A $.
    $( An ordinal number is an ordinal set. $)
    elong $p |- ( A e. V -> ( A e. On <-> Ord A ) ) $=
      ( vx cv word con0 ordeq df-on elab2g ) CDZEAECAFBJAGCHI $.
      $( [5-Jun-1994] $)
  $}

  ${
    elon.1 $e |- A e. _V $.
    $( An ordinal number is an ordinal set. $)
    elon $p |- ( A e. On <-> Ord A ) $=
      ( cvv wcel con0 word wb elong ax-mp ) ACDAEDAFGBACHI $.
      $( [5-Jun-1994] $)
  $}

  $( An ordinal number has the ordinal property. $)
  eloni $p |- ( A e. On -> Ord A ) $=
    ( con0 wcel word elong ibi ) ABCADABEF $.
    $( [5-Jun-1994] $)

  $( An ordinal number is an ordinal set. $)
  elon2 $p |- ( A e. On <-> ( Ord A /\ A e. _V ) ) $=
    ( con0 wcel word cvv wa eloni elex jca elong biimparc impbii ) ABCZADZAECZF
    MNOAGABHIOMNAEJKL $.
    $( [8-Feb-2004] $)

  $( Equality theorem for the limit predicate.  (The proof was shortened by
     Andrew Salmon, 25-Jul-2011.) $)
  limeq $p |- ( A = B -> ( Lim A <-> Lim B ) ) $=
    ( wceq word c0 wne cuni w3a wlim ordeq neeq1 unieq eqeq12d 3anbi123d df-lim
    id 3bitr4g ) ABCZADZAEFZAAGZCZHBDZBEFZBBGZCZHAIBIRSUCTUDUBUFABJABEKRABUAUER
    PABLMNAOBOQ $.
    $( [25-Jul-2011] $) $( [22-Apr-1994] $)

  $( Epsilon well orders every ordinal.  Proposition 7.4 of [TakeutiZaring]
     p. 36. $)
  ordwe $p |- ( Ord A -> _E We A ) $=
    ( word wtr cep wwe df-ord simprbi ) ABACADEAFG $.
    $( [3-Apr-1994] $)

  $( An ordinal class is transitive. $)
  ordtr $p |- ( Ord A -> Tr A ) $=
    ( word wtr cep wwe df-ord simplbi ) ABACADEAFG $.
    $( [3-Apr-1994] $)

  $( Epsilon is well-founded on an ordinal class. $)
  ordfr $p |- ( Ord A -> _E Fr A ) $=
    ( word cep wwe wfr ordwe wefr syl ) ABACDACEAFACGH $.
    $( [22-Apr-1994] $)

  $( An element of an ordinal class is a subset of it. $)
  ordelss $p |- ( ( Ord A /\ B e. A ) -> B C_ A ) $=
    ( word wtr wcel wss ordtr trss imp sylan ) ACADZBAEZBAFZAGKLMABHIJ $.
    $( [30-May-1994] $)

  $( A transitive subclass of an ordinal class is ordinal. $)
  trssord $p |- ( ( Tr A /\ A C_ B /\ Ord B ) -> Ord A ) $=
    ( wtr wss word wa cep wwe w3a ordwe imp sylan2 anim2i 3anass df-ord 3imtr4i
    wess ) ACZABDZBEZFZFRAGHZFRSTIAEUAUBRTSBGHZUBBJSUCUBABGQKLMRSTNAOP $.
    $( [29-May-1994] $)

  $( Epsilon irreflexivity of ordinals: no ordinal class is a member of
     itself.  Theorem 2.2(i) of [BellMachover] p. 469, generalized to classes.
     We prove this without invoking the Axiom of Regularity. $)
  ordirr $p |- ( Ord A -> -. A e. A ) $=
    ( word cep wfr wcel wn ordfr efrirr syl ) ABACDAAEFAGAHI $.
    $( [2-Jan-1994] $)

  $( A member of an ordinal class is not equal to it. $)
  nordeq $p |- ( ( Ord A /\ B e. A ) -> A =/= B ) $=
    ( word wcel wne wn wceq ordirr eleq1 notbid syl5ibcom necon2ad imp ) ACZBAD
    ZABENOABNAADZFABGZOFAHQPOABAIJKLM $.
    $( [3-Jun-2007] $) $( [25-May-1998] $)

  $( An ordinal class cannot an element of one of its members.  Variant of
     first part of Theorem 2.2(vii) of [BellMachover] p. 469. $)
  ordn2lp $p |- ( Ord A -> -. ( A e. B /\ B e. A ) ) $=
    ( word wcel wa ordirr wtr wi ordtr trel syl mtod ) ACZABDBADEZAADZAFMAGNOHA
    IAABJKL $.
    $( [3-Apr-1994] $)

  ${
    $d x B $.
    $( A subclass (possibly proper) of an ordinal class has a minimal element.
       Proposition 7.5 of [TakeutiZaring] p. 36.  (Some distinct variable
       restrictions were removed by David Abernethy, 16-Mar-2011.) $)
    tz7.5 $p |- ( ( Ord A /\ B C_ A /\ B =/= (/) ) ->
               E. x e. B ( B i^i x ) = (/) ) $=
      ( word cep wwe wss c0 wne cv cin wceq wrex ordwe wefrc syl3an1 ) BDBEFCBG
      CHICAJKHLACMBNABCOP $.
      $( [22-Mar-2011] $) $( [18-Feb-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( An element of an ordinal class is ordinal.  Proposition 7.6 of
       [TakeutiZaring] p. 36. $)
    ordelord $p |- ( ( Ord A /\ B e. A ) -> Ord B ) $=
      ( vx vz vy word wcel cv wa wi wceq eleq1 anbi2d ordeq wtr cep wwe wal w3a
      syl imbi12d simpll 3anrot 3anass ordtr trel3 syl5bir impl trel exp3acom23
      bitr3i imp31 adantrl simplr ordwe wetrep sylan syl13anc ex alrimivv dftr2
      pm2.43d sylibr wss trss wess syl5com syld df-ord sylanbrc vtoclg anabsi7
      imp ) AFZBAGZBFZVNCHZAGZIZVQFZJVNVOIZVPJCBAVQBKZVSWAVTVPWBVRVOVNVQBALMVQB
      NUAVSVQOZVQPQZVTVSDHZEHZGZWFVQGZIZWEVQGZJZERDRWCVSWKDEVSWIWJVSWIWKVSWIIVN
      WEAGZWFAGZVRWKVNVRWIUBVNVRWIWLVRWIIZWGWHVRSZVNWLWOVRWGWHSWNVRWGWHUCVRWGWH
      UDUKVNAOZWOWLJAUEZAWEWFVQUFTUGUHVSWHWMWGVNVRWHWMVNWHVRWMVNWPWHVRIWMJWQAWF
      VQUITUJULUMVNVRWIUNVNAPQZWLWMVRSWKAUOZDECAUPUQURUSVBUTDEVQVAVCVNVRWDVNVRV
      QAVDZWDVNWPVRWTJWQAVQVETVNWRWTWDWSVQAPVFVGVHVMVQVIVJVKVL $.
      $( [23-Apr-1994] $)
  $}

  ${
    $d x y $.
    $( The class of all ordinal numbers is transitive. $)
    tron $p |- Tr On $=
      ( vx vy con0 wtr cv wss dftr3 wcel word vex elon ordelord sylanb ex ssrdv
      syl6ibr mprgbir ) CDAEZCFACACGRCHZBRCSBEZRHZTIZTCHSUAUBSRIUAUBRAJKRTLMNTB
      JKPOQ $.
      $( [4-May-2009] $)
  $}

  $( An element of an ordinal class is an ordinal number. $)
  ordelon $p |- ( ( Ord A /\ B e. A ) -> B e. On ) $=
    ( word wcel wa con0 ordelord wb elong adantl mpbird ) ACZBADZEBFDZBCZABGMNO
    HLBAIJK $.
    $( [26-Oct-2003] $)

  $( An element of an ordinal number is an ordinal number.  Theorem 2.2(iii) of
     [BellMachover] p. 469. $)
  onelon $p |- ( ( A e. On /\ B e. A ) -> B e. On ) $=
    ( con0 wcel word eloni ordelon sylan ) ACDAEBADBCDAFABGH $.
    $( [26-Oct-2003] $)

  ${
    $d x y A $.  $d x y B $.
    $( Proposition 7.7 of [TakeutiZaring] p. 37. $)
    tz7.7 $p |- ( ( Ord A /\ Tr B ) ->
                ( B e. A <-> ( B C_ A /\ B =/= A ) ) ) $=
      ( vx vy word wtr wa wcel wss wne wi cep c0 cv wceq imp32 wn nsyli adantll
      imp wfr ordtr ordfr tz7.2 3exp sylc adantr cdif pssdifn0 wrex difss tz7.5
      cin mp3an2 eldifi trss difin0ss com12 syl56 ad2antrr eleq1 biimpcd eldifn
      syl adantl trel exp3acom23 ex adantld w3o wwe ordwe ssel2 anim12i wecmpep
      syl2an adantlr ecase23d exp44 com34 imp31 ssrdv adantrr ad2antrl eqeltrrd
      eqssd exp32 rexlimdv syl5 exp4b com23 adantrd pm2.43i exp4a pm2.43d imp3a
      syl7 impbid ) AEZBFZGZBAHZBAIZBAJZGZWSXBXEKZWTWSAFZALUAZXFAUBZAUCXGXHXBXE
      ABUDUEUFUGXAXCXDXBXAXCXDXBKXAXCXCXDXBXEABUHZMJZXAXCXBBAUIXAXCXKXBKZKZXAWS
      XMWTXAXCWSXLXAXCWSXKXBWSXKGXJCNZUMMOZCXJUJZXAXCGZXBWSXJAIXKXPABUKCAXJULUN
      XQXOXBCXJXQXNXJHZXOXBXQXRXOGGZXNBAXSXNBXQXRXOXNBIZWSXRXOXTKZKZWTXCWSXGYBX
      IXRXNAHZXGXNAIZYAXNABUOZAXNUPXOYDXTABXNUQURUSVDUTPXQXRBXNIXOXQXRGDBXNXAXC
      XRDNZBHZYFXNHZKXAXCYGXRYHXAXCYGXRYHXAXCYGGZXRGZGYHYFXNOZXNYFHZYJYKQZXAYGX
      RYMXCYGXRYMYGYKXNBHZXRYKYGYNYFXNBVAVBXNABVCZRTSVEWTYJYLQZWSWTYIXRYPWTYGXR
      YPKZXCWTYGYQWTYGGYLYNXRWTYGYLYNKWTYLYGYNBXNYFVFVGTYORVHVIPSWSYJYHYKYLVJZW
      TWSALVKYFAHZYCGYRYJAVLYIYSXRYCBAYFVMYEVNDCAVOVPVQVRVSVTWAWBWCWFXRYCXQXOYE
      WDWEWGWHWIWJWKWLWMWQWNWOWPWR $.
      $( [28-May-2007] $) $( [5-May-1994] $)
  $}

  $( Corollary 7.8 of [TakeutiZaring] p. 37. $)
  ordelssne $p |- ( ( Ord A /\ Ord B ) ->
              ( A e. B <-> ( A C_ B /\ A =/= B ) ) ) $=
    ( word wcel wss wne wa wb wtr ordtr tz7.7 sylan2 ancoms ) BCZACZABDABEABFGH
    ZONAIPAJBAKLM $.
    $( [1-Jun-2007] $) $( [25-Nov-1995] $)

  $( Corollary 7.8 of [TakeutiZaring] p. 37. $)
  ordelpss $p |- ( ( Ord A /\ Ord B ) -> ( A e. B <-> A C. B ) ) $=
    ( word wa wcel wss wne wpss ordelssne df-pss syl6bbr ) ACBCDABEABFABGDABHAB
    IABJK $.
    $( [17-Jun-1998] $)

  $( For ordinal classes, subclass is equivalent to membership or equality.
     (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
  ordsseleq $p |- ( ( Ord A /\ Ord B ) ->
                  ( A C_ B <-> ( A e. B \/ A = B ) ) ) $=
    ( word wa wcel wceq wo wpss wss ordelpss orbi1d sspss syl6rbbr ) ACBCDZABEZ
    ABFZGABHZPGABINOQPABJKABLM $.
    $( [25-Jul-2011] $) $( [25-Nov-1995] $)

  $( The intersection of two ordinal classes is ordinal.  Proposition 7.9 of
     [TakeutiZaring] p. 37. $)
  ordin $p |- ( ( Ord A /\ Ord B ) -> Ord ( A i^i B ) ) $=
    ( word cin wtr ordtr trin syl2an wss inss2 trssord mp3an2 sylancom ) ACZBCZ
    ABDZEZPCZNAEBEQOAFBFABGHQPBIORABJPBKLM $.
    $( [9-May-1994] $)

  ${
    $d x y A $.  $d x y B $.
    $( The intersection of two ordinal numbers is an ordinal number. $)
    onin $p |- ( ( A e. On /\ B e. On ) -> ( A i^i B ) e. On ) $=
      ( con0 wcel wa cin word eloni ordin syl2an cvv wb simpl inex1g elong 3syl
      mpbird ) ACDZBCDZEZABFZCDZUAGZRAGBGUCSAHBHABIJTRUAKDUBUCLRSMABCNUAKOPQ $.
      $( [7-Apr-1995] $)
  $}

  $( A trichotomy law for ordinals.  Proposition 7.10 of [TakeutiZaring]
     p. 38.  (The proof was shortened by Andrew Salmon, 25-Jul-2011.) $)
  ordtri3or $p |- ( ( Ord A /\ Ord B ) -> ( A e. B \/ A = B \/ B e. A ) ) $=
    ( word wa wcel wceq w3o wpss wss wo ordin sylib inss1 ordsseleq mpbii sylan
    cin wn ord df-ss ordirr syl ianor elin incom eleq1i anbi2i xchnxbir anabss1
    bitri syl6ibr anabss4 orim12d mpd sspsstri ordelpss ancoms 3orbi123d mpbird
    biidd wb ) ACZBCZDZABEZABFZBAEZGABHZVFBAHZGZVDABIZBAIZJZVJVDABQZAEZRZBAQZBE
    ZRZJZVMVDVNVNEZRZVTVDVNCZWBABKZVNUAUBVOVRDZVTWAVOVRUCWAVOVNBEZDWEVNABUDWFVR
    VOVNVQBABUEUFUGUJUHLVDVPVKVSVLVDVPVNAFZVKVDVOWGVBVCVOWGJZVDWCVBWHWDWCVBDVNA
    IWHABMVNANOPUISABTUKVDVSVQBFZVLVDVRWIVBVCVRWIJZVCVBDVQCZVCWJBAKWKVCDVQBIWJB
    AMVQBNOPULSBATUKUMUNABUOLVDVEVHVFVFVGVIABUPVDVFUTVCVBVGVIVABAUPUQURUS $.
    $( [25-Jul-2011] $) $( [10-May-1994] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri1 $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B <-> -. B e. A ) ) $=
    ( word wa wss wcel wceq wo wn ordsseleq wi imnan sylibr ordirr eleq2 notbid
    ordn2lp syl5ibrcom jaao w3o ordtri3or df-3or sylib orcomd ord impbid bitrd
    ) ACZBCZDZABEABFZABGZHZBAFZIZABJUJUMUOUHUKUOUIULUHUKUNDIUKUOKABQUKUNLMUIUOU
    LBBFZIBNULUNUPABBOPRSUJUNUMUJUMUNUJUKULUNTUMUNHABUAUKULUNUBUCUDUEUFUG $.
    $( [25-Jul-2011] $) $( [25-Mar-1995] $)

  $( A trichotomy law for ordinal numbers. $)
  ontri1 $p |- ( ( A e. On /\ B e. On ) -> ( A C_ B <-> -. B e. A ) ) $=
    ( con0 wcel word wss wn wb eloni ordtri1 syl2an ) ACDAEBEABFBADGHBCDAIBIABJ
    K $.
    $( [6-Nov-2003] $)

  $( A trichotomy law for ordinals. $)
  ordtri2 $p |- ( ( Ord A /\ Ord B ) ->
               ( A e. B <-> -. ( A = B \/ B e. A ) ) ) $=
    ( word wa wceq wcel wo wn wb wss ordsseleq eqcom orbi2i orcom bitri ordtri1
    syl6bb bitr3d ancoms con2bid ) ACZBCZDABEZBAFZGZABFZUBUAUEUFHZIUBUADZBAJZUE
    UGUHUIUDBAEZGZUEBAKUKUDUCGUEUJUCUDBALMUDUCNOQBAPRST $.
    $( [25-Nov-1995] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri3 $p |- ( ( Ord A /\ Ord B ) ->
               ( A = B <-> -. ( A e. B \/ B e. A ) ) ) $=
    ( word wa wceq wcel wo wn ordirr eleq2 notbid syl5ib syl5ibr anim12d pm4.56
    com12 syl6ib w3o ordtri3or sylib df-3or or32 ord impbid ) ACZBCZDZABEZABFZB
    AFZGZHZUGUHUIHZUJHZDZULUHUGUOUHUEUMUFUNUEAAFZHUHUMAIUHUPUIABAJKLUFUNUHBBFZH
    BIUHUJUQABBJKMNPUIUJOQUGUKUHUGUIUHGUJGZUKUHGUGUIUHUJRURABSUIUHUJUATUIUHUJUB
    TUCUD $.
    $( [25-Jul-2011] $) $( [18-Oct-1995] $)

  $( A trichotomy law for ordinals.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  ordtri4 $p |- ( ( Ord A /\ Ord B ) ->
               ( A = B <-> ( A C_ B /\ -. A e. B ) ) ) $=
    ( wceq wss wa word wcel wn eqss wb ordtri1 ancoms anbi2d syl5bb ) ABCABDZBA
    DZEAFZBFZEZOABGHZEABISPTORQPTJBAKLMN $.
    $( [25-Jul-2011] $) $( [1-Nov-2003] $)

  $( An ordinal class and its singleton are disjoint. $)
  orddisj $p |- ( Ord A -> ( A i^i { A } ) = (/) ) $=
    ( word wcel wn csn cin c0 wceq ordirr disjsn sylibr ) ABAACDAAEFGHAIAAJK $.
    $( [19-May-1998] $)

  ${
    $d x y z $.
    $( The ordinal class is well-founded.  This lemma is needed for ~ ordon in
       order to eliminate the need for the Axiom of Regularity. $)
    onfr $p |- _E Fr On $=
      ( vx vz vy con0 cep wfr cv wss c0 wne wa cin wceq wrex wi wcel eqeq1d vex
      ineq2 ex dfepfr wex n0 rcla4ev expcom a1d word ssel elon syl6ib wtr ordfr
      ordtr inss2 inex1 epfrc mp3an2 ax-17 hbre1 inss1 sseli trss sseqin2 inass
      syl5 syl5req sylbi biimprcd sylan9 imp anim12i exp32 pm2.43b ra4e rexlimd
      com23 syl8 syl2anc syl6 com3r pm2.61ine exlimdv syl5bi mpgbir ) DEFAGZDHZ
      WEIJZKWEBGZLZIMZBWENZOAABDUAWFWGWKWGCGZWEPZCUBWFWKCWEUCWFWMWKCWFWMWKOZOWE
      WLLZIWOIMZWNWFWMWPWKWJWPBWLWEWHWLMWIWOIWHWLWESQUDUEUFWFWMWOIJZWKWFWMWLUGZ
      WQWKOZWFWMWLDPWRWEDWLUHWLCRUIUJWRWLEFZWLUKZWSWLULWLUMWTWQWOWHLZIMZBWONZXA
      WKWTWQXDWTWOWLHWQXDWEWLUNZBWLWOWEWLARUOUPUQTXAXCWKBWOXABURWJBWEUSXAWHWOPZ
      XCWHWEPZWJKZWKXAXCXFXHXAXCXFXHOXAXCKZXFXHXFXIXFXHXFXGXIXFKWJWOWEWHWEWLUTV
      AXIXFWJXAXFWHWLHZXCWJXFWHWLPXAXJWOWLWHXEVAWLWHVBVEXJWJXCXJWIXBIXJWLWHLZWH
      MZWIXBMWHWLVCXLXBWEXKLWIWEWLWHVDXKWHWESVFVGQVHVIVJVKVLVMTVPWJBWEVNVQVOVIV
      RVSVTWAWBWCVJWD $.
      $( [17-May-1994] $)
  $}

  $( Relationship between membership and proper subset of an ordinal number. $)
  onelpss $p |- ( ( A e. On /\ B e. On ) ->
               ( A e. B <-> ( A C_ B /\ A =/= B ) ) ) $=
    ( con0 wcel word wss wne wa wb eloni ordelssne syl2an ) ACDAEBEABDABFABGHIB
    CDAJBJABKL $.
    $( [2-Jun-2007] $) $( [15-Sep-1995] $)

  $( Relationship between subset and membership of an ordinal number. $)
  onsseleq $p |- ( ( A e. On /\ B e. On ) ->
                 ( A C_ B <-> ( A e. B \/ A = B ) ) ) $=
    ( con0 wcel word wss wceq wo wb eloni ordsseleq syl2an ) ACDAEBEABFABDABGHI
    BCDAJBJABKL $.
    $( [15-Sep-1995] $)

  $( An element of an ordinal number is a subset of the number.  (The proof was
     shortened by Andrew Salmon, 25-Jul-2011.) $)
  onelss $p |- ( A e. On -> ( B e. A -> B C_ A ) ) $=
    ( con0 wcel word wss wi eloni ordelss ex syl ) ACDAEZBADZBAFZGAHLMNABIJK $.
    $( [25-Jul-2011] $) $( [5-Jun-1994] $)

  $( Transitive law for ordinal classes. $)
  ordtr1 $p |- ( Ord C -> ( ( A e. B /\ B e. C ) -> A e. C ) ) $=
    ( word wtr wcel wa wi ordtr trel syl ) CDCEABFBCFGACFHCICABJK $.
    $( [12-Dec-2004] $)

  $( Transitive law for ordinal classes.  (The proof was shortened by Andrew
     Salmon, 25-Jul-2011.) $)
  ordtr2 $p |- ( ( Ord A /\ Ord C ) -> ( ( A C_ B /\ B e. C ) -> A e. C ) ) $=
    ( word wa wss wcel wpss wi ordelord ex ancld anc2li ordelpss ancoms sspsstr
    wb expcom syl6bi com23 imp32 com12 syl9 imp3a adantl sylibrd ) ADZCDZEABFZB
    CGZEZACHZACGUHUKULIUGUHUIUJULUHUJUHUJBDZEZEZUIULUHUJUNUHUJUMUHUJUMCBJKLMUOU
    IULUHUJUMUIULIZUHUMUJUPUHUMUJUPIUHUMEUJBCHZUPUMUHUJUQQBCNOUIUQULABCPRSKTUAU
    BUCUDUEACNUF $.
    $( [25-Jul-2011] $) $( [12-Dec-2004] $)

  $( Transitive law for ordinal classes. $)
  ordtr3 $p |- ( ( Ord B /\ Ord C ) -> ( A e. B -> ( A e. C \/ C e. B ) ) ) $=
    ( word wa wcel wo wss simplr ordelord adantlr ordtri1 syl2anc ordtr2 ancoms
    wn wb wi ancomsd expdimp sylbird orrd ex ) BDZCDZEZABFZACFZCBFZGUFUGEZUHUIU
    JUHPZCAHZUIUJUEADZULUKQUDUEUGIUDUGUMUEBAJKCALMUFUGULUIUFULUGUIUEUDULUGEUIRC
    ABNOSTUAUBUC $.
    $( [30-Dec-2014] $)

  $( Transitive law for ordinal numbers.  Theorem 7M(b) of [Enderton]
     p. 192. $)
  ontr1 $p |- ( C e. On -> ( ( A e. B /\ B e. C ) -> A e. C ) ) $=
    ( con0 wcel word wa wi eloni ordtr1 syl ) CDECFABEBCEGACEHCIABCJK $.
    $( [11-Aug-1994] $)

  $( Transitive law for ordinal numbers.  Exercise 3 of [TakeutiZaring]
     p. 40. $)
  ontr2 $p |- ( ( A e. On /\ C e. On ) ->
              ( ( A C_ B /\ B e. C ) -> A e. C ) ) $=
    ( con0 wcel word wss wa wi eloni ordtr2 syl2an ) ADEAFCFABGBCEHACEICDEAJCJA
    BCKL $.
    $( [6-Nov-2003] $)

  ${
    $d x y A $.  $d x y B $.
    $( The union of an ordinal stays the same if a subset equal to one of its
       elements is removed. $)
    ordunidif $p |- ( ( Ord A /\ B e. A ) -> U. ( A \ B ) = U. A ) $=
      ( vx vy word wcel wa cv wss cdif wrex cuni wi syl wn eldif adantl rcla4ev
      sseq2 syl6 wral wceq con0 ordelon onelss eloni ordirr simplbi2 mpd jctild
      syl5 adantr biimpri ssid jctir ex pm2.61d ralrimiva unidif ) AEZBAFZGZCHZ
      DHZIZDABJZKZCAUAVFLALUBVBVGCAVBVCAFZGZVCBFZVGVIVJBVFFZVCBIZGZVGVBVJVMMVHV
      BVJVLVKVBBUCFZVJVLMABUDZBVCUENVBVNVKVOVAVNVKMUTVNBBFOZVAVKVNBEVPBUFBUGNVK
      VAVPBABPUHUKQUIUJULVEVLDBVFVDBVCSRTVHVJOZVGMVBVHVQVCVFFZVCVCIZGZVGVHVQVTV
      HVQGZVRVSVRWAVCABPUMVCUNUOUPVEVSDVCVFVDVCVCSRTQUQURCDABUSN $.
      $( [10-Dec-2004] $)

    $( If ` B ` is smaller than ` A ` , then it equals the intersection of the
       difference.  Exercise 11 in [TakeutiZaring] p. 44.  (Contributed by
       Andrew Salmon, 14-Nov-2011.) $)
    ordintdif $p |- ( ( Ord A /\ Ord B /\ ( A \ B ) =/= (/) )
      -> B = |^| ( A \ B ) ) $=
      ( vx cdif c0 wne word wss wn cint wceq ssdif0 necon3bbii w3a cv wcel crab
      dfdif2 wa ordtri1 inteqi con2bid wb ordelord ancoms sylan bicomd rabbidva
      an32s inteqd intmin sylan9eq ex sylbird 3impia syl5req syl3an3br ) ABDZEF
      AGZBGZABHZIZBURJZKVAUREABLMUSUTVBNVCCOZBPIZCAQZJZBURVFCABRUAUSUTVBVGBKZUS
      UTSZVBBAPZVHVIVAVJABTUBVIVJVHVIVJVGBVDHZCAQZJBVIVFVLVIVEVKCAVIVDAPZSVKVEU
      SVMUTVKVEUCZUSVMSVDGZUTVNAVDUDUTVOVNBVDTUEUFUIUGUHUJCBAUKULUMUNUOUPUQ $.
      $( [14-Nov-2011] $)
  $}

  ${
    $d x ps $.  $d x A $.
    onintss.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( If a property is true for an ordinal number, then the minimum ordinal
       number for which it is true is smaller or equal.  Theorem Schema 61 of
       [Suppes] p. 228. $)
    onintss $p |- ( A e. On -> ( ps -> |^| { x e. On | ph } C_ A ) ) $=
      ( con0 wcel crab cint wss intminss ex ) DFGBACFHIDJABCDFEKL $.
      $( [3-Oct-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A way to show that an ordinal number equals the minimum of a collection
       of ordinal numbers: it must be in the collection, and it must not be
       larger than any member of the collection. $)
    oneqmini $p |- ( B C_ On -> ( ( A e. B /\ A. x e. A -. x e. B )
                    -> A = |^| B ) ) $=
      ( con0 wss wcel cv wn wral wa cint wceq ssint wi ssel anim12d ontri1 syl6
      wb expdimp pm5.74d con2b syl6bb syl5bb biimprd expimpd intss1 a1i adantrd
      ralbidv2 jcad eqss syl6ibr ) CDEZBCFZAGZCFZHZABIZJZBCKZEZVABEZJBVALUNUTVB
      VCUNUOUSVBUNUOJZVBUSVBBUPEZACIVDUSABCMVDVEURACBVDUQVENUQUPBFZHZNVFURNVDUQ
      VEVGUNUOUQVEVGSZUNUOUQJBDFZUPDFZJVHUNUOVIUQVJCDBOCDUPOPBUPQRTUAUQVFUBUCUJ
      UDUEUFUNUOVCUSUOVCNUNBCUGUHUIUKBVAULUM $.
      $( [14-Nov-2003] $)
  $}

  $( The empty set is an ordinal class. $)
  ord0 $p |- Ord (/) $=
    ( c0 word wtr cep wwe tr0 we0 df-ord mpbir2an ) ABACADEFDGAHI $.
    $( [11-May-1994] $)

  $( The empty set is an ordinal number.  Corollary 7N(b) of [Enderton]
     p. 193. $)
  0elon $p |- (/) e. On $=
    ( c0 con0 wcel word ord0 0ex elon mpbir ) ABCADEAFGH $.
    $( [17-Sep-1993] $)

  $( A non-empty ordinal contains the empty set. $)
  ord0eln0 $p |- ( Ord A -> ( (/) e. A <-> A =/= (/) ) ) $=
    ( word c0 wcel wne ne0i wceq wn df-ne wo ord0 wa noel ordtri2 con2bid mpan2
    mpbiri ord syl5bi impbid2 ) ABZCADZACEZACFUCACGZHUAUBACIUAUDUBUACBZUDUBJZKU
    AUELZUFACDZHAMUGUHUFACNOQPRST $.
    $( [5-Apr-2007] $) $( [25-Nov-1995] $)

  $( An ordinal number contains zero iff it is nonzero. $)
  on0eln0 $p |- ( A e. On -> ( (/) e. A <-> A =/= (/) ) ) $=
    ( con0 wcel word c0 wne wb eloni ord0eln0 syl ) ABCADEACAEFGAHAIJ $.
    $( [30-Apr-2007] $) $( [6-Dec-2004] $)

  $( An alternate definition of a limit ordinal. $)
  dflim2 $p |- ( Lim A <-> ( Ord A /\ (/) e. A /\ A = U. A ) ) $=
    ( wlim word c0 wne cuni wceq w3a wcel df-lim ord0eln0 anbi1d pm5.32i 3anass
    wa 3bitr4i bitr4i ) ABACZADEZAAFGZHZRDAIZTHZAJRUBTOZORSTOZOUCUARUDUERUBSTAK
    LMRUBTNRSTNPQ $.
    $( [4-Nov-2004] $)

  $( The intersection of the class of ordinal numbers is the empty set. $)
  inton $p |- |^| On = (/) $=
    ( c0 con0 wcel cint wceq 0elon int0el ax-mp ) ABCBDAEFBGH $.
    $( [20-Oct-2003] $)

  $( The empty set is not a limit ordinal.  (The proof was shortened by Andrew
     Salmon, 25-Jul-2011.) $)
  nlim0 $p |- -. Lim (/) $=
    ( c0 wlim word wcel cuni wceq w3a noel simp2 mto dflim2 mtbir ) ABACZAADZAA
    EFZGZPNAHMNOIJAKL $.
    $( [25-Jul-2011] $) $( [24-Mar-1995] $)

  $( A limit ordinal is ordinal. $)
  limord $p |- ( Lim A -> Ord A ) $=
    ( wlim word c0 wne cuni wceq df-lim simp1bi ) ABACADEAAFGAHI $.
    $( [4-May-1995] $)

  $( A limit ordinal is its own supremum (union). $)
  limuni $p |- ( Lim A -> A = U. A ) $=
    ( wlim word c0 wne cuni wceq df-lim simp3bi ) ABACADEAAFGAHI $.
    $( [4-May-1995] $)

  $( The union of a limit ordinal is a limit ordinal. $)
  limuni2 $p |- ( Lim A -> Lim U. A ) $=
    ( wlim cuni wceq wb limuni limeq syl ibi ) ABZACZBZJAKDJLEAFAKGHI $.
    $( [19-Sep-2006] $)

  $( A limit ordinal contains the empty set. $)
  0ellim $p |- ( Lim A -> (/) e. A ) $=
    ( wlim c0 wcel wne wceq nlim0 limeq mtbiri necon2ai word wb limord ord0eln0
    syl mpbird ) ABZCADZACEZQACACFQCBGACHIJQAKRSLAMANOP $.
    $( [15-May-1994] $)

  $( A limit ordinal class that is also a set is an ordinal number. $)
  limelon $p |- ( ( A e. B /\ Lim A ) -> A e. On ) $=
    ( wcel wlim con0 word limord elong syl5ibr imp ) ABCZADZAECZLMKAFAGABHIJ $.
    $( [26-Apr-2004] $)

  $( The class of all ordinal numbers in not empty. $)
  onn0 $p |- On =/= (/) $=
    ( c0 con0 wcel wne 0elon ne0i ax-mp ) ABCBADEBAFG $.
    $( [5-Apr-2007] $) $( [17-Sep-1995] $)

  $( Equality of successors.  (The proof was shortened by Andrew Salmon,
     25-Jul-2011.) $)
  suceq $p |- ( A = B -> suc A = suc B ) $=
    ( wceq csn cun csuc id sneq uneq12d df-suc 3eqtr4g ) ABCZAADZEBBDZEAFBFLABM
    NLGABHIAJBJK $.
    $( [25-Jul-2011] $) $( [30-Aug-1993] $)

  $( Membership in a successor.  This one-way implication does not require that
     either ` A ` or ` B ` be sets. $)
  elsuci $p |- ( A e. suc B -> ( A e. B \/ A = B ) ) $=
    ( csuc wcel csn wo wceq cun df-suc eleq2i elun bitri elsni orim2i sylbi ) A
    BCZDZABDZABEZDZFZRABGZFQABSHZDUAPUCABIJABSKLTUBRABMNO $.
    $( [6-Jun-1994] $)

  $( Membership in a successor.  Exercise 5 of [TakeutiZaring] p. 17. $)
  elsucg $p |- ( A e. V -> ( A e. suc B <-> ( A e. B \/ A = B ) ) ) $=
    ( csuc wcel csn wo wceq cun df-suc eleq2i elun bitri elsncg orbi2d syl5bb )
    ABDZEZABEZABFZEZGZACEZSABHZGRABTIZEUBQUEABJKABTLMUCUAUDSABCNOP $.
    $( [15-Sep-1995] $)

  $( Variant of membership in a successor, requiring that ` B ` rather than
     ` A ` be a set. $)
  elsuc2g $p |- ( B e. V -> ( A e. suc B <-> ( A e. B \/ A = B ) ) ) $=
    ( csuc wcel csn cun wceq wo df-suc eleq2i elun elsnc2g orbi2d syl5bb ) ABDZ
    EABBFZGZEZBCEZABEZABHZIZPRABJKSUAAQEZITUCABQLTUDUBUAABCMNOO $.
    $( [28-Oct-2003] $)

  ${
    elsuc.1 $e |- A e. _V $.
    $( Membership in a successor.  Exercise 5 of [TakeutiZaring] p. 17. $)
    elsuc $p |- ( A e. suc B <-> ( A e. B \/ A = B ) ) $=
      ( cvv wcel csuc wceq wo wb elsucg ax-mp ) ADEABFEABEABGHICABDJK $.
      $( [15-Sep-2003] $)

    $( Membership in a successor. $)
    elsuc2 $p |- ( B e. suc A <-> ( B e. A \/ B = A ) ) $=
      ( cvv wcel csuc wceq wo wb elsuc2g ax-mp ) ADEBAFEBAEBAGHICBADJK $.
      $( [15-Sep-2003] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbsuc.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for successor. $)
    hbsuc $p |- ( y e. suc A -> A. x y e. suc A ) $=
      ( cv csuc wcel wceq wo vex elsuc hbeleq hbor hbxfrbi ) BEZCFGOCGZOCHZIAOC
      BJKPQADABCDLMN $.
      $( [15-Sep-2003] $)
  $}

  $( Membership in a successor. $)
  elelsuc $p |- ( A e. B -> A e. suc B ) $=
    ( wcel csuc wceq wo orc elsucg mpbird ) ABCZABDCJABEZFJKGABBHI $.
    $( [20-Jun-1998] $)

  ${
    $d x y A $.  $d x B $.
    $( Membership of a successor in another class. $)
    sucel $p |- ( suc A e. B <->
                E. x e. B A. y ( y e. x <-> ( y e. A \/ y = A ) ) ) $=
      ( csuc wcel cv wceq wrex wo wb wal risset dfcleq elsuc bibi2i albii bitri
      vex rexbii ) CEZDFAGZUAHZADIBGZUBFZUDCFUDCHJZKZBLZADIAUADMUCUHADUCUEUDUAF
      ZKZBLUHBUBUANUJUGBUIUFUEUDCBSOPQRTR $.
      $( [29-Jun-2004] $)
  $}

  $( The successor of the empty set. $)
  suc0 $p |- suc (/) = { (/) } $=
    ( c0 csuc csn cun df-suc uncom un0 3eqtri ) ABAACZDIADIAEAIFIGH $.
    $( [1-Feb-2005] $)

  $( A proper class is its own successor. $)
  sucprc $p |- ( -. A e. _V -> suc A = A ) $=
    ( cvv wcel wn csuc cun csn df-suc wceq snprc uneq2 sylbi syl5eq un0 syl6eq
    c0 ) ABCDZAEZAPFZAQRAAGZFZSAHQTPIUASIAJTPAKLMANO $.
    $( [3-Apr-1995] $)

  ${
    unisuc.1 $e |- A e. _V $.
    $( A transitive class is equal to the union of its successor.  Combines
       Theorem 4E of [Enderton] p. 72 and Exercise 6 of [Enderton] p. 73. $)
    unisuc $p |- ( Tr A <-> U. suc A = A ) $=
      ( cuni wss cun wceq wtr csuc ssequn1 df-tr csn df-suc unieqi uniun uneq2i
      unisn 3eqtri eqeq1i 3bitr4i ) ACZADTAEZAFAGAHZCZAFTAIAJUCUAAUCAAKZEZCTUDC
      ZEUAUBUEALMAUDNUFATABPOQRS $.
      $( [22-Sep-2004] $) $( [30-Aug-1993] $)
  $}

  $( A class is included in its own successor.  Part of Proposition 7.23 of
     [TakeutiZaring] p. 41 (generalized to arbitrary classes). $)
  sssucid $p |- A C_ suc A $=
    ( csn cun csuc ssun1 df-suc sseqtr4i ) AAABZCADAHEAFG $.
    $( [31-May-1994] $)

  $( Part of Proposition 7.23 of [TakeutiZaring] p. 41 (generalized).  (The
     proof was shortened by Scott Fenton, 20-Feb-2012.) $)
  sucidg $p |- ( A e. V -> A e. suc A ) $=
    ( wcel csuc wceq wo eqid olci elsucg mpbiri ) ABCAADCAACZAAEZFLKAGHAABIJ $.
    $( [20-Feb-2012] $) $( [25-Mar-1995] $)

  ${
    sucid.1 $e |- A e. _V $.
    $( A set belongs to its successor.  (The proof was shortened by Alan Sare,
       18-Feb-2012.)  (The proof was shortened by Scott Fenton,
       20-Feb-2012.) $)
    sucid $p |- A e. suc A $=
      ( cvv wcel csuc sucidg ax-mp ) ACDAAEDBACFG $.
      $( [20-Feb-2012] $) $( [22-Jun-1994] $)
  $}

  $( No successor is empty. $)
  nsuceq0 $p |- suc A =/= (/) $=
    ( csuc c0 wne wceq wn cvv wcel noel sucidg syl5ibcom mtoi sucprc eqeq1d 0ex
    eleq2 eleq1 mpbiri syl6bi con3d pm2.43i pm2.61i df-ne mpbir ) ABZCDUECEZFZA
    GHZUGUHUFACHZAIUHAUEHUFUIAGJUECAPKLUHFZUGUJUFUHUJUFACEZUHUJUEACAMNUKUHCGHOA
    CGQRSTUAUBUECUCUD $.
    $( [16-Jan-2007] $) $( [3-Apr-1995] $)

  ${
    eqelsuc.1 $e |- A e. _V $.
    $( A set belongs to the successor of an equal set. $)
    eqelsuc $p |- ( A = B -> A e. suc B ) $=
      ( wceq csuc sucid suceq syl5eleq ) ABDAAEBEACFABGH $.
      $( [18-Aug-1994] $)
  $}

  ${
    $d A x y $.  $d B y $.  $d C x y $.
    iunsuc.1 $e |- A e. _V $.
    iunsuc.2 $e |- ( x = A -> B = C ) $.
    $( Inductive definition for the indexed union at a successor.  (Contributed
       by Mario Carneiro, 4-Feb-2013.) $)
    iunsuc $p |- U_ x e. suc A B = ( U_ x e. A B u. C ) $=
      ( vy csuc ciun cun cv wcel wrex wo hbre1 wi wa ex jaoi eliun ax-17 elsuc2
      hbor wceq ra4e orcd eleq2d biimpa olcd sylbi rexlimi sssucid ssrexv ax-mp
      wss sucid rcla4ev mpan impbii orbi1i bitr4i elun 3bitr4i eqriv ) GABHZCIZ
      ABCIZDJZGKZCLZAVEMZVIVGLZVIDLZNZVIVFLVIVHLVKVJABMZVMNZVNVKVPVJVPAVEVOVMAV
      JABOVMAUAUCAKZVELVQBLZVQBUDZNVJVPPZBVQEUBVRVTVSVRVJVPVRVJQVOVMVJABUEUFRVS
      VJVPVSVJQVMVOVSVJVMVSCDVIFUGZUHUIRSUJUKVOVKVMBVEUOVOVKPBULVJABVEUMUNBVELV
      MVKBEUPVJVMABVEWAUQURSUSVLVOVMAVIBCTUTVAAVIVECTVIVGDVBVCVD $.
      $( [4-Feb-2013] $)
  $}

  ${
    $d z y A $.
    $( The successor of a transtive class is transitive.  (Contributed by Alan
       Sare, 11-Apr-2009.) $)
    suctr $p |- ( Tr A -> Tr suc A ) $=
      ( vz vy wtr cv wcel csuc wa wi wal wceq simpr vex elsuc sylib simpl eleq2
      wo syl6 mpdi syl5ibcom elelsuc trel exp3a adantrd syl8 jao alrimivv dftr2
      sylibr ) ADZBEZCEZFZUMAGZFZHZULUOFZIZCJBJUODUKUSBCUKUQUMAFZUMAKZRZURUQUPV
      BUNUPLUMACMNOUKUQVAURIZVBURIZUQVAULAFZURUQUNVAVEUNUPPUMAULQUAULAUBZSUKUQU
      TURIVCVDIUKUQUTVEURUKUNUTVEIUPUKUNUTVEAULUMUCUDUEVFUFUTURVAUGSTTUHBCUOUIU
      J $.
      $( [11-Apr-2009] $)
  $}

  $( A set whose successor belongs to a transitive class also belongs.  (The
     proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  trsuc $p |- ( ( Tr A /\ suc B e. A ) -> B e. A ) $=
    ( wtr csuc wcel cvv wss sssucid ssexg mpan sucidg syl ancri trel syl5 imp
    wa ) ACZBDZAEZBAEZTBSEZTQRUATUBTBFEZUBBSGTUCBHBSAIJBFKLMABSNOP $.
    $( [12-Aug-2011] $) $( [5-Sep-2003] $)

  ${
    $d x y A $.
    $( The successor of a transitive set is transitive.  (Contributed by Scott
       Fenton, 21-Feb-2011.) $)
    trsuc2 $p |- ( Tr A -> Tr suc A ) $=
      ( vx vy wtr cv wcel csn wo wa wi csuc andi wceq eleq2 biimpac elsn anbi2i
      wal orbi2i elun orim2i trel orc syl6 a1i jaod 3imtr4g syl5bi alrimivv cun
      syl5 wb df-suc treq ax-mp dftr2 imbi12i 2albii 3bitri sylibr ) ADZBEZCEZF
      ZVCAFZVCAGZFZHZIZVBAFZVBVFFZHZJZCRBRZAKZDZVAVMBCVIVDVEIZVDVGIZHZVAVLVDVEV
      GLVAVQVDVCAMZIZHZVJVBAMZHZVSVLWBVQVJHVAWDWAVJVQVTVDVJVCAVBNOUAVAVQWDVJVAV
      QVJWDAVBVCUBVJWCUCZUDVJWDJVAWEUEUFUKVRWAVQVGVTVDCAPQSVKWCVJBAPSUGUHUIVPAV
      FUJZDZVDVCWFFZIZVBWFFZJZCRBRVNVOWFMVPWGULAUMVOWFUNUOBCWFUPWKVMBCWIVIWJVLW
      HVHVDVCAVFTQVBAVFTUQURUSUT $.
      $( [21-Feb-2011] $)
  $}

  $( A member of the successor of a transitive class is a subclass of it. $)
  trsucss $p |- ( Tr A -> ( B e. suc A -> B C_ A ) ) $=
    ( csuc wcel wceq wo wtr wss elsuci trss wi eqimss a1i jaod syl5 ) BACDBADZB
    AEZFAGZBAHZBAIRPSQABJQSKRBALMNO $.
    $( [4-Oct-2003] $)

  $( A subset of an ordinal belongs to its successor. $)
  ordsssuc $p |- ( ( A e. On /\ Ord B ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( con0 wcel word wa wss wceq wo csuc wb eloni ordsseleq sylan elsucg adantr
    bitr4d ) ACDZBEZFABGZABDABHIZABJDZRAESTUAKALABMNRUBUAKSABCOPQ $.
    $( [28-Nov-2003] $)

  $( A subset of an ordinal number belongs to its successor. $)
  onsssuc $p |- ( ( A e. On /\ B e. On ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( con0 wcel word wss csuc wb eloni ordsssuc sylan2 ) BCDACDBEABFABGDHBIABJK
    $.
    $( [15-Sep-1995] $)

  $( An ordinal subset of an ordinal number belongs to its successor.  (The
     proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  ordsssuc2 $p |- ( ( Ord A /\ B e. On ) -> ( A C_ B <-> A e. suc B ) ) $=
    ( cvv wcel word con0 wa wss csuc wb wi elong biimprd anim1d onsssuc syl6 wn
    annim ssexg ex elex a1d pm5.21ni sylbi expcom adantld pm2.61i ) ACDZAEZBFDZ
    GZABHZABIZDZJZKUHUKAFDZUJGUOUHUIUPUJUHUPUIACLMNABOPUHQZUJUOUIUJUQUOUJUQGUJU
    HKZQUOUJUHRULURUNULUJUHABFSTUNUHUJAUMUAUBUCUDUEUFUG $.
    $( [12-Aug-2011] $) $( [1-Feb-2005] $)

  ${
    $d x A $.  $d x B $.
    $( When its successor is subtracted from a class of ordinal numbers, an
       ordinal number is less than the minimum of the resulting subclass. $)
    onmindif $p |- ( ( A C_ On /\ B e. On ) -> B e. |^| ( A \ suc B ) ) $=
      ( vx con0 wss wcel wa csuc cdif cint cv wral wn eldif wi wb ssel2 onsssuc
      ontri1 bitr3d con1bid sylan biimpd exp31 com23 imp4b syl5bi elintg adantl
      ralrimiv mpbird ) ADEZBDFZGZBABHZIZJFZBCKZFZCUPLZUNUSCUPURUPFURAFZURUOFZM
      ZGUNUSURAUONULUMVAVCUSULVAUMVCUSOZULVAUMVDULVAGZUMGVCUSVEURDFZUMVCUSPADUR
      QVFUMGZUSVBVGURBEUSMVBURBSURBRTUAUBUCUDUEUFUGUJUMUQUTPULCBUPDUHUIUK $.
      $( [1-Dec-2003] $)
  $}

  $( There is no set between an ordinal class and its successor.  Generalized
     Proposition 7.25 of [TakeutiZaring] p. 41. $)
  ordnbtwn $p |- ( Ord A -> -. ( A e. B /\ B e. suc A ) ) $=
    ( word wcel wa wo csuc wn ordn2lp ordirr ioran sylanbrc elsuci anim2i sylib
    wceq andi eleq2 biimpac orim2i syl nsyl ) ACZABDZBADZEZAADZFZUDBAGDZEZUCUFH
    UGHUHHABIAJUFUGKLUJUFUDBAPZEZFZUHUJUDUEUKFZEUMUIUNUDBAMNUDUEUKQOULUGUFUKUDU
    GBAARSTUAUB $.
    $( [21-Jun-1998] $)

  $( There is no set between an ordinal number and its successor.  Proposition
     7.25 of [TakeutiZaring] p. 41. $)
  onnbtwn $p |- ( A e. On -> -. ( A e. B /\ B e. suc A ) ) $=
    ( con0 wcel word csuc wa wn eloni ordnbtwn syl ) ACDAEABDBAFDGHAIABJK $.
    $( [9-Jun-1994] $)

  $( A set whose successor is a subset of another class is a member of that
     class. $)
  sucssel $p |- ( A e. V -> ( suc A C_ B -> A e. B ) ) $=
    ( wcel csuc wss sucidg ssel syl5com ) ACDAAEZDJBFABDACGJBAHI $.
    $( [16-Sep-1995] $)

  $( Ordinal derived from its successor. $)
  orddif $p |- ( Ord A -> A = ( suc A \ { A } ) ) $=
    ( word csn cin wceq csuc cdif orddisj disj3 cun df-suc difeq1i difun2 eqtri
    c0 eqeq2i bitr4i sylib ) ABAACZDOEZAAFZSGZEZAHTAASGZEUCASIUBUDAUBASJZSGUDUA
    UESAKLASMNPQR $.
    $( [20-May-1998] $)

  $( An ordinal class includes its union. $)
  orduniss $p |- ( Ord A -> U. A C_ A ) $=
    ( word wtr cuni wss ordtr df-tr sylib ) ABACADAEAFAGH $.
    $( [13-Sep-2003] $)

  $( A trichotomy law for ordinal classes.  (The proof was shortened by Andrew
     Salmon, 12-Aug-2011.) $)
  ordtri2or $p |- ( ( Ord A /\ Ord B ) -> ( A e. B \/ B C_ A ) ) $=
    ( word wa wcel wss wn wb ordtri1 ancoms biimprd orrd ) ACZBCZDZABEZBAFZOQPG
    ZNMQRHBAIJKL $.
    $( [12-Aug-2011] $) $( [13-Sep-2003] $)

  $( A trichotomy law for ordinal classes. $)
  ordtri2or2 $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B \/ B C_ A ) ) $=
    ( word wa wcel wss wo ordtri2or wi ordelss ex orim1d adantl mpd ) ACZBCZDAB
    EZBAFZGZABFZRGZABHPSUAIOPQTRPQTBAJKLMN $.
    $( [2-Nov-2003] $)

  $( Property of a subclass of the maximum (i.e. union) of two ordinals. $)
  ordssun $p |- ( ( Ord B /\ Ord C ) ->
               ( A C_ ( B u. C ) <-> ( A C_ B \/ A C_ C ) ) ) $=
    ( word wa cun wss wo wi ordtri2or2 wceq wb ssequn1 sseq2 olc syl6bi ssequn2
    sylbi orc jaoi syl ssun impbid1 ) BDCDEZABCFZGZABGZACGZHZUDBCGZCBGZHUFUIIZB
    CJUJULUKUJUFUHUIUJUECKUFUHLBCMUECANRUHUGOPUKUFUGUIUKUEBKUFUGLCBQUEBANRUGUHS
    PTUAABCUBUC $.
    $( [28-Nov-2003] $)

  $( The maximum (i.e. union) of two ordinals is either one or the other.
     Similar to Exercise 14 of [TakeutiZaring] p. 40. $)
  ordequn $p |- ( ( Ord B /\ Ord C ) ->
               ( A = ( B u. C ) -> ( A = B \/ A = C ) ) ) $=
    ( word wa wss wo cun wceq wi ordtri2or2 wb ssequn1 eqeq2 olc syl6bi ssequn2
    sylbi orc jaoi syl ) BDCDEBCFZCBFZGABCHZIZABIZACIZGZJZBCKUBUIUCUBUEUGUHUBUD
    CIUEUGLBCMUDCANRUGUFOPUCUEUFUHUCUDBIUEUFLCBQUDBANRUFUGSPTUA $.
    $( [28-Nov-2003] $)

  $( The maximum (i.e. union) of two ordinals is ordinal.  Exercise 12 of
     [TakeutiZaring] p. 40. $)
  ordun $p |- ( ( Ord A /\ Ord B ) -> Ord ( A u. B ) ) $=
    ( word wa cun wceq wo eqid ordequn mpi ordeq biimprcd jaao mpd ) ACZBCZDZAB
    EZAFZRBFZGZRCZQRRFUARHRABIJOSUBPTSUBORAKLTUBPRBKLMN $.
    $( [28-Nov-2003] $)

  ${
    $d x A $.  $d x B $.
    $( A subclass relationship for union and successor of ordinal classes. $)
    ordunisssuc $p |- ( ( A C_ On /\ Ord B ) ->
                      ( U. A C_ B <-> A C_ suc B ) ) $=
      ( vx con0 word wa cv wral csuc wcel cuni wb ssel2 ordsssuc sylan ralbidva
      wss an32s unissb dfss3 3bitr4g ) ADQZBEZFZCGZBQZCAHUEBIZJZCAHAKBQAUGQUDUF
      UHCAUBUEAJZUCUFUHLZUBUIFUEDJUCUJADUEMUEBNORPCABSCAUGTUA $.
      $( [28-Nov-2003] $)
  $}

  $( The successor operation behaves like a one-to-one function.  Compare
     Exercise 16 of [Enderton] p. 194. $)
  suc11 $p |- ( ( A e. On /\ B e. On ) -> ( suc A = suc B <-> A = B ) ) $=
    ( con0 wcel wa csuc wceq wn wo wi word eloni ordn2lp wss sucssel elsuci ord
    syl5 com12 syl9 ianor sylib syl adantr eqimss eqimss2 eqcom syl6ib jaao mpd
    suceq impbid1 ) ACDZBCDZEZAFZBFZGZABGZUOABDZHZBADZHZIZURUSJZUMVDUNUMAKZVDAL
    VFUTVBEHVDABMUTVBUAUBUCUDUMVAVEUNVCUMURAUQDZVAUSURUPUQNUMVGUPUQUEAUQCORVGVA
    USVGUTUSABPQSTUNURBUPDZVCUSURUQUPNUNVHUQUPUFBUPCORVCVHBAGZUSVHVCVIVHVBVIBAP
    QSBAUGUHTUIUJABUKUL $.
    $( [3-Sep-2003] $)

  ${
    on.1 $e |- A e. On $.
    $( An ordinal number is an ordinal class. $)
    onordi $p |- Ord A $=
      ( con0 wcel word eloni ax-mp ) ACDAEBAFG $.
      $( [11-Jun-1994] $)

    $( An ordinal number is a transitive class. $)
    ontrci $p |- Tr A $=
      ( word wtr onordi ordtr ax-mp ) ACADABEAFG $.
      $( [11-Jun-1994] $)

    $( An ordinal number is not a member of itself.  Theorem 7M(c) of
       [Enderton] p. 192. $)
    onirri $p |- -. A e. A $=
      ( word wcel wn onordi ordirr ax-mp ) ACAADEABFAGH $.
      $( [11-Jun-1994] $)

    $( A member of an ordinal number is an ordinal number.  Theorem 7M(a) of
       [Enderton] p. 192. $)
    oneli $p |- ( B e. A -> B e. On ) $=
      ( con0 wcel onelon mpan ) ADEBAEBDECABFG $.
      $( [11-Jun-1994] $)

    $( A member of an ordinal number is a subset of it. $)
    onelssi $p |- ( B e. A -> B C_ A ) $=
      ( con0 wcel wss wi onelss ax-mp ) ADEBAEBAFGCABHI $.
      $( [11-Aug-1994] $)

    $( An ordering law for ordinal numbers. $)
    onssneli $p |- ( A C_ B -> -. B e. A ) $=
      ( wcel wss con0 word wn oneli eloni ordirr 3syl ssel com12 mtod con2i ) B
      ADZABEZQRBBDZQBFDBGSHABCIBJBKLRQSABBMNOP $.
      $( [13-Jun-1994] $)

    $( An ordering law for ordinal numbers. $)
    onssnel2i $p |- ( B C_ A -> -. A e. B ) $=
      ( wss wcel onirri ssel mtoi ) BADABEAAEACFBAAGH $.
      $( [13-Jun-1994] $)

    $( An element of an ordinal number equals the intersection with it. $)
    onelini $p |- ( B e. A -> B = ( B i^i A ) ) $=
      ( wcel wss cin wceq onelssi dfss sylib ) BADBAEBBAFGABCHBAIJ $.
      $( [11-Jun-1994] $)

    $( An ordinal number equals its union with any element. $)
    oneluni $p |- ( B e. A -> ( A u. B ) = A ) $=
      ( wcel wss cun wceq onelssi ssequn2 sylib ) BADBAEABFAGABCHBAIJ $.
      $( [23-Sep-2004] $) $( [13-Jun-1994] $)

    $( An ordinal number is equal to the union of its successor. $)
    onunisuci $p |- U. suc A = A $=
      ( wtr csuc cuni wceq ontrci con0 elexi unisuc mpbi ) ACADEAFABGAAHBIJK $.
      $( [22-Sep-2004] $) $( [12-Jun-1994] $)

    ${
      on.2 $e |- B e. On $.
      $( Subset is equivalent to membership or equality for ordinal numbers. $)
      onsseli $p |- ( A C_ B <-> ( A e. B \/ A = B ) ) $=
        ( con0 wcel wss wceq wo wb onsseleq mp2an ) AEFBEFABGABFABHIJCDABKL $.
        $( [15-Sep-1995] $)

      $( The union of two ordinal numbers is an ordinal number. $)
      onun2i $p |- ( A u. B ) e. On $=
        ( wcel wss wo con0 word onordi ordtri2or mp2an oneluni syl6eqel ssequn1
        cun wceq eleq1 mpbiri sylbi jaoi ax-mp ) BAEZABFZGZABPZHEZBIAIUEBDJACJB
        AKLUCUGUDUCUFAHABCMCNUDUFBQZUGABOUHUGBHEDUFBHRSTUAUB $.
        $( [13-Jun-1994] $)
    $}
  $}

  $( An ordinal equal to its own union is either zero or a limit ordinal. $)
  unizlim $p |- ( Ord A -> ( A = U. A <-> ( A = (/) \/ Lim A ) ) ) $=
    ( word cuni wceq c0 wlim wo wa wn wne df-ne w3a df-lim biimpri 3exp syl5bir
    wi com23 imp orrd ex uni0 eqcomi id unieq 3eqtr4a limuni jaoi impbid1 ) ABZ
    AACZDZAEDZAFZGZUJULUOUJULHUMUNUJULUMIZUNQUJUPULUNUPAEJZUJULUNQAEKUJUQULUNUN
    UJUQULLAMNOPRSTUAUMULUNUMEECZAUKUREUBUCUMUDAEUEUFAUGUHUI $.
    $( [1-Oct-2003] $)

  $( An ordinal number either equals zero or contains zero. $)
  on0eqel $p |- ( A e. On -> ( A = (/) \/ (/) e. A ) ) $=
    ( con0 wcel c0 wceq wo wss 0ss 0elon onsseleq mpan mpbii eqcom orbi2i orcom
    wb bitri sylib ) ABCZDACZDAEZFZADEZTFZSDAGZUBAHDBCSUEUBPIDAJKLUBTUCFUDUAUCT
    DAMNTUCOQR $.
    $( [1-Jun-2004] $)

  $( The singleton of the singleton of the empty set is not an ordinal (nor a
     natural number by ~ omsson ).  It can be used to represent an "undefined"
     value for a partial operation on natural or ordinal numbers.  See also
     ~ onxpdisj .  (The proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
  snsn0non $p |- -. { { (/) } } e. On $=
    ( c0 csn con0 wcel wceq wo wn p0ex snid n0i ax-mp eqcom mtbir elsnc pm3.2ni
    0ex on0eqel mto ) ABZBZCDTAEZATDZFUAUBSTDUAGSHITSJKUBASEZUCSAEZASDUDGAPISAJ
    KASLMASPNMOTQR $.
    $( [12-Aug-2011] $) $( [21-May-2004] $)


$(
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
             ZF Set Theory - add the Axiom of Union
#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#
$)

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                  Introduce the Axiom of Union
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d w x y z $.
    $( Axiom of Union.  An axiom of Zermelo-Fraenkel set theory.  It states
       that a set ` y ` exists that includes the union of a given set ` x `
       i.e. the collection of all members of the members of ` x ` .  The
       variant ~ axun2 states that the union itself exists.  A version with the
       standard abbreviation for union is ~ uniex2 .  A version using class
       notation is ~ uniex .

       The union of a class ~ df-uni should not be confused with the union of
       two classes ~ df-un .  Their relationship is shown in ~ unipr . $)
    ax-un $a |- E. y A. z ( E. w ( z e. w /\ w e. x ) -> z e. y ) $.

    $( Axiom of Union expressed with fewest number of different variables. $)
    zfun $p |- E. x A. y ( E. x ( y e. x /\ x e. z ) -> y e. x ) $=
      ( vw cv wcel wa wex wi wal ax-un wceq elequ2 elequ1 anbi12d cbvexv imbi1i
      albii exbii mpbi ) BEZDEZFZUBCEZFZGZDHZUAAEZFZIZBJZAHUIUHUDFZGZAHZUIIZBJZ
      AHCABDKUKUPAUJUOBUGUNUIUFUMDAUBUHLUCUIUEULDABMDACNOPQRST $.
      $( [14-Aug-2003] $)

    $( A variant of the Axiom of Union ~ ax-un .  For any set ` x ` , there
       exists a set ` y ` whose members are exactly the members of the members
       of ` x ` i.e. the union of ` x ` .  Axiom Union of [BellMachover]
       p. 466. $)
    axun2 $p |- E. y A. z ( z e. y <-> E. w ( z e. w /\ w e. x ) ) $=
      ( cv wcel wa wex ax-un bm1.3ii ) CEDEZFKAEFGDHBCABCDIJ $.
      $( [4-Jun-2006] $)

    $( The Axiom of Union using the standard abbreviation for union.  Given any
       set ` x ` , its union ` y ` exists. $)
    uniex2 $p |- E. y y = U. x $=
      ( vz cv cuni wceq wex wcel wb wi wa zfun eluni imbi1i albii exbii bm1.3ii
      wal mpbir dfcleq ) BDZADZEZFZBGCDZUAHZUEUCHZICRZBGUGBCUGUFJZCRZBGUFUAUBHK
      BGZUFJZCRZBGBCALUJUMBUIULCUGUKUFBUEUBMNOPSQUDUHBCUAUCTPS $.
      $( [4-Jun-2006] $)
  $}

  ${
    $d x y A $.
    uniex.1 $e |- A e. _V $.
    $( The Axiom of Union in class notation.  This says that if ` A ` is a set
       i.e. ` A e. _V ` (see ~ isset ), then the union of ` A ` is also a set.
       Same as Axiom 3 of [TakeutiZaring] p. 16. $)
    uniex $p |- U. A e. _V $=
      ( vx vy cv cuni cvv wcel wceq unieq eleq1d uniex2 issetri vtocl ) CEZFZGH
      AFZGHCABOAIPQGOAJKDPCDLMN $.
      $( [11-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( The ZF Axiom of Union in class notation, in the form of a theorem
       instead of an inference.  We use the antecedent ` A e. V ` instead of
       ` A e. _V ` to make the theorem more general and thus shorten some
       proofs; obviously the universal class constant ` _V ` is one possible
       substitution for class variable ` V ` . $)
    uniexg $p |- ( A e. V -> U. A e. _V ) $=
      ( vx cv cuni cvv wcel wceq unieq eleq1d vex uniex vtoclg ) CDZEZFGAEZFGCA
      BNAHOPFNAIJNCKLM $.
      $( [25-Nov-1994] $)
  $}

  ${
    unex.1 $e |- A e. _V $.
    unex.2 $e |- B e. _V $.
    $( The union of two sets is a set.  Corollary 5.8 of [TakeutiZaring]
       p. 16. $)
    unex $p |- ( A u. B ) e. _V $=
      ( cpr cuni cun cvv unipr prex uniex eqeltrri ) ABEZFABGHABCDIMABJKL $.
      $( [1-Jul-1994] $)
  $}

  $( A triple of classes exists. $)
  tpex $p |- { A , B , C } e. _V $=
    ( ctp cpr csn cun cvv df-tp prex snex unex eqeltri ) ABCDABEZCFZGHABCINOABJ
    CKLM $.
    $( [10-Apr-1994] $)

  ${
    $d x y A $.  $d x y B $.
    $( Existence of union is equivalent to existence of its components. $)
    unexb $p |- ( ( A e. _V /\ B e. _V ) <-> ( A u. B ) e. _V ) $=
      ( vx vy cvv wcel wa cun cv wceq uneq1 eleq1d uneq2 vex unex vtocl2g ssun1
      wss ssexg mpan ssun2 jca impbii ) AEFZBEFZGABHZEFZCIZDIZHZEFAUIHZEFUGCDAB
      EEUHAJUJUKEUHAUIKLUIBJUKUFEUIBAMLUHUICNDNOPUGUDUEAUFRUGUDABQAUFESTBUFRUGU
      EBAUABUFESTUBUC $.
      $( [11-Jun-1998] $)
  $}

  $( A union of two sets is a set.  Corollary 5.8 of [TakeutiZaring] p. 16. $)
  unexg $p |- ( ( A e. V /\ B e. W ) -> ( A u. B ) e. _V ) $=
    ( wcel cvv cun elex wa unexb biimpi syl2an ) ACEAFEZBFEZABGFEZBDEACHBDHMNIO
    ABJKL $.
    $( [18-Sep-2006] $)

  ${
    $( A version of ~ unisn without the ` A e. _V ` hypothesis.  (Contributed
       by Stefan Allan, 14-Mar-2006.) $)
    unisn2 $p |- U. { A } e. { (/) , A } $=
      ( cvv wcel csn cuni c0 cpr unisng prid2g eqeltrd wceq snprc biimpi unieqd
      wn uni0 0ex prid1 eqeltri syl6eqel pm2.61i ) ABCZADZEZFAGZCUBUDAUEABHFABI
      JUBOZUDFEZUEUFUCFUFUCFKALMNUGFUEPFAQRSTUA $.
      $( [14-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Union of a singleton in the form of a restricted class abstraction. $)
    unisn3 $p |- ( A e. B -> U. { x e. B | x = A } = A ) $=
      ( wcel cv wceq crab cuni csn rabsn unieqd unisng eqtrd ) BCDZAEBFACGZHBIZ
      HBNOPACBJKBCLM $.
      $( [3-Jul-2008] $)
  $}

  ${
    $d x y z $.
    $( The class of all singletons is a proper class.  (Proof shortened by Eric
       Schmidt, 7-Dec-2008.) $)
    snnex $p |- { x | E. y x = { y } } e/ _V $=
      ( vz cv csn wceq wex cab cvv wnel wcel wn cuni vprc wa vex snid a9e mpbir
      sneq eqcoms eximi ax-mp snex eleq2 eqeq1 exbidv anbi12d mp2an eluniab 2th
      cla4ev eqriv eleq1i mtbir uniexg mto df-nel ) ADZBDZEZFZBGZAHZIJVDIKZLVEV
      DMZIKZVGIIKNVFIICVFICDZVFKZVHIKVIVHUSKZVCOZAGZVHVHEZKZVMVAFZBGZVLVHCPZQUT
      VHFZBGVPBCRVRVOBVOVHUTVHUTTUAUBUCVKVNVPOAVMVHUDUSVMFZVJVNVCVPUSVMVHUEVSVB
      VOBUSVMVAUFUGUHULUIVCAVHUJSVQUKUMUNUOVDIUPUQVDIURS $.
      $( [10-Oct-2008] $)
  $}

  $( If the subtrahend of a class difference exists, then the minuend exists
     iff the difference exists.  (The proof was shortened by Andrew Salmon,
     12-Aug-2011.) $)
  difex2 $p |- ( B e. C -> ( A e. _V <-> ( A \ B ) e. _V ) ) $=
    ( wcel cvv cdif difexg wa cun ssun2 uncom undif2 eqtr2i sseqtri unexg ssexg
    wss sylancr expcom impbid2 ) BCDZAEDZABFZEDZABEGUDUAUBUDUAHAUCBIZQUEEDUBABA
    IZUEABJUEBUCIUFUCBKBALMNUCBECOAUEEPRST $.
    $( [12-Aug-2011] $) $( [12-Nov-2003] $)

  $( Each member of an ordered pair belongs to the union of the union of a
     class to which the ordered pair belongs.  Lemma 3D of [Enderton] p. 41. $)
  opeluu $p |- ( <. x , y >. e. A ->
               ( x e. U. U. A /\ y e. U. U. A ) ) $=
    ( cv cop wcel cuni cpr vex prid1 opi2 elunii mpan sylancr prid2 jca ) ADZBD
    ZEZCFZQCGZGZFZRUBFZTQQRHZFUEUAFZUCQRAIZJUESFTUFQRUGBIZKUESCLMZQUEUALNTRUEFU
    FUDQRUHOUIRUEUALNP $.
    $( [31-Mar-1995] $)

  ${
    $d A x y v z $.  $d A x y u z $.
    $( Expression for double union that moves union into a class builder.
       (Contributed by FL, 28-May-2007.) $)
    uniuni $p |- U. U. A = U. { x | E. y ( x = U. y /\ y e. A ) } $=
      ( vz vu vv cv wcel cuni wa wex cab eluni anbi2i exbii 19.42v bicomi bitri
      wceq 3bitri excom anass ancom bitr3i 2exbii exdistr uniex ceqsexv exancom
      vex eleq2 3bitr2i eqeq1 anbi1d exbidv elab abbii df-uni 3eqtr4i ) DGZEGZH
      ZVACIZHZJZEKZDLUTFGZHZVGAGZBGZIZSZVJCHZJZBKZALZHZJZFKZDLVCIVPIVFVSDVFVBVA
      VJHZVMJZBKZJZEKZVMUTVKHZJZBKZVSVEWCEVDWBVBBVACMNOWDVMVBVTJZEKZJZBKZWGWDVB
      WAJZBKZEKZVMWHJZEKBKZWKWCWMEWMWCVBWABPQOWNWLEKBKWPWLEBUAWLWOBEWLWHVMJWOVB
      VTVMUBWHVMUCUDUERVMWHBEUFTWJWFBWIWEVMWEWIEUTVJMQNORWGVHVGVKSZVMJZJZBKFKZV
      HWRBKZJZFKVSWGWSFKZBKWTWFXCBWFVMVHWQJZFKZJVMXDJZFKXCWEXEVMWEWQVHJFKXEVHWE
      FVKVJBUJUGVGVKUTUKUHWQVHFUIUDNVMXDFPXFWSFXFXDVMJWSVMXDUCVHWQVMUBROULOWSBF
      UARVHWRFBUFXBVRFXAVQVHVQXAVOXAAVGFUJVIVGSZVNWRBXGVLWQVMVIVGVKUMUNUOUPQNOT
      TUQDEVCURDFVPURUS $.
      $( [5-Feb-2008] $) $( [28-May-2007] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    $( If ` ph ` is true for exactly one ` x ` , then ` U. { x | ph } ` is a
       way to express "the unique element such that ` ph ` is true."  Some
       books use a special symbol such as inverted iota to denote "the unique
       element such that;" see ~ df-iota . $)
    euuni $p |- ( E! x ph -> ( ph <-> U. { x | ph } = x ) ) $=
      ( vy vz weu cab cuni cv wceq wa wex cvv wcel euabex uniexg syl eueq ax-17
      wb sylib eqcom eubii hbab1 hbuni hbeq eqeq2 cbveu 3bitri csn euabsn eleq2
      vex snid mpbiri abid unieq unisn syl6eq jca eximi sylbi eupickb mpd3an23
      ) ABEZABFZGZBHZIZBEZAVHJZBKZAVHSVDVFLMZVIVDVELMVLABNVELOPVLCHZVFIZCEVFVMI
      ZCEVICVFQVNVOCVMVFUAUBVOVHCBBDDVFVMBDVEABDUCUDDHVMMBRUEVHCRVMVGVFUFUGUHTV
      DVEVGUIZIZBKVKABUJVQVJBVQAVHVQVGVEMZAVQVRVGVPMVGBULZUMVEVPVGUKUNABUOTVQVF
      VPGVGVEVPUPVGVSUQURUSUTVAAVHBVBVC $.
      $( [22-Feb-2004] $)
  $}

  ${
    $d x y $.  $d y ph $.
    $( A way to express "the unique element such that" (restricted quantifier
       version).  (The proof was shortened by Andrew Salmon, 12-Aug-2011.) $)
    reuuni1 $p |- ( ( x e. A /\ E! x e. A ph ) ->
            ( ph <-> U. { x e. A | ph } = x ) ) $=
      ( wreu cv wcel crab cuni wceq wb cab weu df-reu euuni sylbi df-rab unieqi
      wa ibar eqeq1i a1i bibi12d syl5ibrcom impcom ) ABCDZBEZCFZAABCGZHZUFIZJZU
      EUKUGUGARZULBKZHZUFIZJZUEULBLUPABCMULBNOUGAULUJUOUGASUJUOJUGUIUNUFUHUMABC
      PQTUAUBUCUD $.
      $( [12-Aug-2011] $) $( [25-Nov-1994] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d y B $.
    reuuni2f.1 $e |- ( y e. B -> A. x y e. B ) $.
    reuuni2f.2 $e |- ( B e. A -> ( ps -> A. x ps ) ) $.
    reuuni2f.3 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( ` U. { x e. A | ph } ` is an explicit representation of "the unique
       element in ` A ` such that ` ph ` ."  This theorem shows a condition
       that allows us to represent this element with a class expression
       ` B ` .  The second hypothesis is a weakened bound variable condition
       that allows ~ hbsbc1g to be used. $)
    reuuni2f $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> U. { x e. A | ph } = B ) ) $=
      ( wcel wreu crab cuni wceq wb wi cv ax-17 wal a1i hbel hbreu1 hbrab1 hbeq
      hbuni hbbid hbimd hbim1 bibi12d imbi2d imbi12d reuuni1 ex vtoclgf pm2.43i
      eleq1 eqeq2 imp ) FEJZACEKZBACELZMZFNZOZUSUTVDPZCQZEJZUTAVBVFNZOZPZPUSVEP
      CDFEGUSVECCDDFEGDQEJCRUAZUSUTVDCVKUTUTCSPUSACEUBTUSBVCCVKHVCVCCSPUSCDDVBF
      CDVAACDEUCUEGUDTUFUGUHVFFNZVGUSVJVEVFFEUPVLVIVDUTVLABVHVCIVFFVBUQUIUJUKVG
      UTVIACEULUMUNUOUR $.
      $( [19-Oct-2005] $)
  $}

  ${
    $d y ph $.  $d x y A $.  $d x y B $.  $d x ps $.
    reuuni2.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( ` U. { x e. A | ph } ` is an explicit representation of "the unique
       element in ` A ` such that ` ph ` ." $)
    reuuni2 $p |- ( ( B e. A /\ E! x e. A ph ) ->
            ( ps <-> U. { x e. A | ph } = B ) ) $=
      ( vy cv wcel ax-17 a17d reuuni2f ) ABCGDEGHEICJEDIBCKFL $.
      $( [27-May-2006] $) $( [28-Mar-1997] $)
  $}

  ${
    $d A x $.  $d ps x $.
    euuni2.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The unique element such that ` ph ` .  (Contributed by Jeff Madsen,
       1-Jun-2011.) $)
    euuni2 $p |- ( ( A e. B /\ E! x ph ) -> ( ps <-> U. { x | ph } = A ) ) $=
      ( wcel cvv wreu cab cuni wceq wb weu elex reuv biimpri wa crab reuuni2
      rabab unieqi eqeq1i syl6bb syl2an ) DEGDHGZACHIZBACJZKZDLZMACNZDEOUGUKACP
      QUFUGRBACHSZKZDLUJABCHDFTUMUIDULUHACUAUBUCUDUE $.
      $( [1-Jun-2011] $)
  $}

  ${
    $d x y A $.  $d y ph $.  $d x ps $.  $d x ch $.
    reuuni3.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    reuuni3.2 $e |- ( x = U. { y e. A | ps } -> ( ph <-> ch ) ) $.
    $( Derive the property ` ch ` of "the unique element in ` A ` such that
       ` ph ` " when expressed explicitly as ` U. { y e. A | ps } ` . $)
    reuuni3 $p |- ( E! x e. A ph -> ch ) $=
      ( crab cuni wcel wreu cbvrabv unieqi reucl syl5eqelr wceq reuuni2 mpbiri
      wa mpancom ) BEFIZJZFKZADFLZCUEUCADFIZJZFUFUBABDEFGMNZADFOPUDUETCUGUCQUHA
      CDFUCHRSUA $.
      $( [11-Nov-2004] $)
  $}

  ${
    $d x y A $.  $d y ph $.
    $( Derive the property of "the unique element in ` A ` such that
       ` ph ` " when expressed explicitly as ` U. { x e. A | ph } ` . $)
    reuunisbc $p |- ( E! x e. A ph -> [ U. { x e. A | ph } / x ] ph ) $=
      ( vy wreu crab cuni wcel wsbc reucl cvv elex wrex wi reurex hbreu1 hbrab1
      hbuni hbsbc1g2 mpd cv wa wceq wb reuuni1 sbceq1a eqcoms syl6bi ibd expcom
      a1i com4l rexlimd syl5 ) ABCEZABCFZGZCHZABUQIZABCJURUQKHZUOUSUQCLUOABCMUT
      USNZABCOUOAVABCABCPABDUQKBDUPABDCQRSUTUOBUAZCHZAUSUOVCAUSNZNNUTVCUOVDVCUO
      UBZAUSVEAUQVBUCAUSUDZABCUEVFVBUQABUQUFUGUHUIUJUKULUMTUNT $.
      $( [11-Nov-2004] $)

    $( Membership law for "the unique element in ` A ` such that ` ph ` ." $)
    reucl2 $p |- ( E! x e. A ph -> U. { x e. A | ph } e. { x e. A | ph } ) $=
      ( vy wreu crab cuni wcel wsbc reucl reuunisbc cv ax-17 elrabsf sylanbrc )
      ABCEABCFZGZCHABQIQPHABCJABCKABDQCDLCHBMNO $.
      $( [11-Jun-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.
    $( Restriction of a unique element to a smaller class. $)
    reuuniss $p |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) ->
                U. { x e. A | ph } = U. { x e. B | ph } ) $=
      ( vy wss wrex wreu w3a crab cuni wsbc wceq reuss reuunisbc syl wcel reucl
      wb wi ssel 3ad2ant1 mpd simp3 hbrab1 hbuni hbsbc1g sbceq1a reuuni2f mpbid
      syl2anc eqcomd ) CDFZABCGZABDHZIZABDJKZABCJZKZUPABUSLZUQUSMZUPABCHZUTABCD
      NZABCOPUPUSDQZUOUTVASUPUSCQZVDUPVBVEVCABCRPUMUNVEVDTUOCDUSUAUBUCUMUNUOUDA
      UTBEDUSBEURABECUEUFZABEUSDVFUGABUSUHUIUKUJUL $.
      $( [19-Oct-2005] $)

    $( Restriction of a unique element to a smaller class. $)
    mouniss $p |- ( ( A C_ B /\ E. x e. A ph /\ E* x ( x e. B /\ ph ) ) ->
                U. { x e. A | ph } = U. { x e. B | ph } ) $=
      ( wss wrex cv wcel wa wmo crab cuni wceq wreu ssrexv anim1i reu5 reuuniss
      imp sylibr 3expa syldan 3impa ) CDEZABCFZBGDHAIBJZABCKLABDKLMZUDUEIZUFABD
      NZUGUHUFIABDFZUFIUIUHUJUFUDUEUJABCDOSPABDQTUDUEUIUGABCDRUAUBUC $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d y ph $.  $d y ps $.
    $( Restriction of a unique element to a smaller class. $)
    reuuniss2 $p |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x e. A ph
           /\ E! x e. B ps ) ) -> U. { x e. A | ph } = U. { x e. B | ps } ) $=
      ( vy wss wi wral wa wrex wreu crab cuni wsbc wceq reuss2 simplr wcel syl
      reuunisbc reucl ra4sbc sbcimg sylibd mpid sylc ad2antrr mpd simprr hbrab1
      wb ssel hbuni hbsbc1g sbceq1a reuuni2f syl2anc mpbid eqcomd ) DEGZABHZCDI
      ZJZACDKZBCELZJZJZBCEMNZACDMZNZVHBCVKOZVIVKPZVHACDLZVCVLABCDEQZVAVCVGRVNVC
      ACVKOZVLACDUAVNVKDSZVCVPVLHZHACDUBZVQVCVBCVKOVRVBCVKDUCABCVKDUDUETUFUGVHV
      KESZVFVLVMULVHVQVTVHVNVQVOVSTVAVQVTHVCVGDEVKUMUHUIVDVEVFUJBVLCFEVKCFVJACF
      DUKUNZBCFVKEWAUOBCVKUPUQURUSUT $.
      $( [20-Oct-2005] $)
  $}

  ${
    $d y z A $.  $d y z ph $.  $d x y z $.
    $( A way to express restricted existential uniqueness of a wff: its
       restricted class abstraction is a singleton.  (The proof was shortened
       by Andrew Salmon, 12-Aug-2011.) $)
    reusn $p |- ( E! x e. A ph <-> E. y { x e. A | ph } = { y } ) $=
      ( vz wreu cv wcel wa weu cab csn wceq wex crab df-reu euabsn ax-17 hbrab1
      hbeq df-rab eqcomi a1i sneq eqeq12d cbvex 3bitri ) ABDFBGZDHAIZBJUIBKZUHL
      ZMZBNABDOZCGZLZMZCNABDPUIBQULUPBCULCRBEEUMUOABEDSEGUOHBRTUHUNMZUJUMUKUOUJ
      UMMUQUMUJABDUAUBUCUHUNUDUEUFUG $.
      $( [12-Aug-2011] $) $( [30-May-2006] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y ph $.  $d x y $.
    reusni.1 $e |- B e. _V $.
    $( Restricted existential uniqueness determined by a singleton. $)
    reusni $p |- ( { x e. A | ph } = { B } -> E! x e. A ph ) $=
      ( vy crab csn wceq cv wex wreu sneq eqeq2d cla4ev reusn sylibr ) ABCGZDHZ
      IZRFJZHZIZFKABCLUCTFDEUADIUBSRUADMNOABFCPQ $.
      $( [29-May-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x ps $.
    rabsnt.1 $e |- B e. _V $.
    rabsnt.2 $e |- ( x = B -> ( ph <-> ps ) ) $.
    $( Truth implied by equality of a restricted class abstraction and a
       singleton. $)
    rabsnt $p |- ( { x e. A | ph } = { B } -> ps ) $=
      ( crab csn wceq wcel wreu wa cuni wss ssrab2 sseq1 mpbii snss sylibr sylc
      reusni jca unieq unisn syl6eq reuuni2 biimprd ) ACDHZEIZJZEDKZACDLZMZUINZ
      EJZBUKULUMUKUJDOZULUKUIDOUQACDPUIUJDQREDFSTACDEFUBUCUKUOUJNEUIUJUDEFUEUFU
      NBUPABCDEGUGUHUA $.
      $( [29-May-2006] $)
  $}

  ${
    $d y A $.  $d y ph $.  $d x y $.
    $( A restricted class abstraction with a unique member can be expressed as
       a singleton. $)
    reuunisn $p |- ( E! x e. A ph ->
                   { x e. A | ph } = { U. { x e. A | ph } } ) $=
      ( vy wreu crab csn wceq wex cuni reusn unieq vex unisn syl6eq sneqd eqtr3
      cv mpdan exlimiv sylbi ) ABCEABCFZDRZGZHZDIUBUBJZGZHZABDCKUEUHDUEUGUDHUHU
      EUFUCUEUFUDJUCUBUDLUCDMNOPUBUGUDQSTUA $.
      $( [30-May-2006] $)
  $}

  ${
    $d x y z $.  $d A y z $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    eusv1 $p |- ( E! y A. x y = A <-> E. y A. x y = A ) $=
      ( vz cv wceq wal weu wex wa wi ax-4 eqtr3 syl2an gen2 albidv eu4 mpbiran2
      eqeq1 ) BEZCFZAGZBHUBBIUBDEZCFZAGZJTUCFZKZDGBGUGBDUBUAUDUFUEUAALUDALTUCCM
      NOUBUEBDUFUAUDATUCCSPQR $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y z w $.  $d A y z w $.
    $( Even if ` x ` is free in ` A ` , it is effectively bound when
       ` A ( x ) ` is single-valued. $)
    eusvhb $p |- ( E! y A. x y = A -> ( y = A -> A. x y = A ) ) $=
      ( vz vw cv wceq wal weu wreu wi wcel wa biantrur eubii df-reu eqeq1 ax-17
      cvv vex bitr4i crab cuni albidv hba1 hbrab hbuni hbeq albid reuuni3 eqtr3
      19.21bi syl5ibrcom syl5 mpan2d sylbi ) BFZCGZAHZBIZUSBSJZURUSKUTUQSLZUSMZ
      BIVAUSVCBVBUSBTNOUSBSPUAVAURDFZCGZAHZDSUBZUCZCGZUSVAVIAUSVFVIAHZBDSUQVDGU
      RVEAUQVDCQUDUQVHGZURVIAAEEUQVHEFZUQLARAEVGVFADESVEAUEVLSLARUFUGUHUQVHCQUI
      ZUJZULURVIMVKVAUSUQVHCUKVAUSVKVJVNVMUMUNUOUP $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y $.  $d A y $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    eusv2i $p |- ( E! y A. x y = A -> E! y E. x y = A ) $=
      ( wceq wal weu wex hbeu1 hba1 hbeu eusvhb exlimd 19.2 impbid1 eubid ibir
      cv ) BQCDZAEZBFZRAGZBFTUASBSBHTUASTRSASABRAIZJUBABCKLRAAMNOP $.
      $( [14-Oct-2010] $)
  $}

  ${
    $d x y z v w $.  $d A y z w v $.
    eusv2.1 $e |- A e. _V $.
    $( Two ways to express single-valuedness of a class expression
       ` A ( x ) ` . $)
    eusv2 $p |- ( E! y E. x y = A <-> E! y A. x y = A ) $=
      ( vz vw vv cv wceq wex weu wal cvv wcel wreu wa ax-17 eqeq1 sylbi wi crab
      cuni vex biantrur eubii exbidv cbveu df-reu 3bitr4i reucl hbe1 hbeu hbrab
      eqid eu4 hbuni exbid anbi1d imbi12d albidv cla4gv com12 adantl mpd bitr4i
      hbeq reuuni3 biantrurd imbi1d mpbird 19.23 albii alcom bitr3i sylib eqeq2
      ax-4 cla4v 3syl mpi alrimi albid cla4egv sylc eusv1 sylibr eusv2i impbii
      ) BHZCIZAJZBKZWJALZBKZWLWMBJZWNWLEHZCIZAJZEMUAZUBZMNZWTCIZALZWOWLWREMOZXA
      WREKWPMNZWRPZEKWLXDWRXFEXEWREUCUDUEWKWRBEWKEQWRBQWIWPIWJWQAWIWPCRUFZUGWRE
      MUHUIWREMUJSZWLXBAWKABWJAUKULWLCCIZXBCUNWLFHZCIZWTXJIZTZFLZALZXNXIXBTZWLX
      KAJZXLTZFLZXOWLXSXBAJZXQPZXLTZFLZWLXAYCXHWLWKBJZWKXQPZWIXJIZTZFLZBLZPXAYC
      TZWKXQBFYFWJXKAWIXJCRUFUOYIYJYDXAYIYCYHYCBWTMWIWTIZYGYBFYKYEYAYFXLYKWKXTX
      QYKWJXBAAGGWIWTGHZWINAQAGWSWRAEGMWQAUKYLMNAQUMUPZVFZWIWTCRZUQZURWIWTXJRUS
      UTVAVBVCSVDWLXRYBFWLXQYAXLWLXTXQWLWKBMOZXTWLWIMNZWKPZBKYQWKYSBYRWKBUCUDUE
      WKBMUHVEWKWRXTBEMXGYPVGSVHVIUTVJXSXMALZFLXOYTXRFXKXLAAGGWTXJYMYLXJNAQVFVK
      VLXMFAVMVNVOXNAVQXMXPFCDXKXKXIXLXBXJCCRXJCWTVPUSVRVSVTWAWMXCBWTMYKWJXBAYN
      YOWBWCWDABCWEWFABCWGWH $.
      $( [15-Oct-2010] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x z C $.
    $( Lemma for ~ reusv1 . $)
    reusv1lem $p |- ( B =/= (/) -> ( E! x e. A A. y e. B x = C
                     <-> E. x e. A A. y e. B x = C ) ) $=
      ( vz c0 wne cv wcel wex wceq wral wreu wrex wb n0 ax-17 hbra1 wa hbreu wi
      hbrex hbbi ra4 eqtr3 syl6com syl5bir a1d ralrimivv biantrud eqeq1 ralbidv
      r19.26 reu4 syl6rbbr exlimi sylbi ) DGHBIDJZBKAIZELZBDMZACNZVBACOZPZBDQUS
      VEBVCVDBVBBACUTCJZBRZVABDSZUAVBBACVGVHUCUDUSVDVDVBFIZELZBDMZTZUTVILZUBZFC
      MACMZTVCUSVOVDUSVNAFCCUSVNVFVICJTVLVAVJTZBDMZUSVMVAVJBDUNVQUSVPVMVPBDUEUT
      VIEUFUGUHUIUJUKVBVKAFCVMVAVJBDUTVIEULUMUOUPUQUR $.
      $( [22-Oct-2010] $)
  $}

  ${
    $d x z A $.  $d w x z B $.  $d x z C $.  $d w x z ph $.  $d w x y z $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` . $)
    reusv1 $p |- ( E. y e. B ph
       -> ( E! x e. A A. y e. B ( ph -> x = C )
                   <-> E. x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( vz vw wrex cv wcel c0 wne wceq wi wral wreu ax-17 reubii rexbii wa crab
      cab rabn0 df-rab neeq1i bitr3i csb reusv1lem hbcsb1 hbeleq csbeq1a eqeq2d
      wb hbab1 cbvralf 3bitr4g abid imbi1i impexp bitr2i ralbii2 sylbi ) ACEIZC
      JZEKZAUAZCUCZLMZABJZFNZOZCEPZBDQZVMBDIZUNVDACEUBZLMVIACEUDVPVHLACEUEUFUGV
      IVKCVHPZBDQZVQBDIZVNVOVIVJCGJZFUHZNZGVHPZBDQWCBDIVRVSBGDVHWAUIVQWCBDVKWBC
      GHVHVGCHUOHJVHKGRVKGRCBWACBVTFVJVTKCRUJUKVEVTNFWAVJCVTFULUMUPZSVQWCBDWDTU
      QVMVQBDVLVKCEVHVEVHKZVKOVGVKOVFVLOWEVGVKVGCURUSVFAVKUTVAVBZSVMVQBDWFTUQVC
      $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    $( Lemma for ~ reusv2 . $)
    reusv2lem1 $p |- ( A =/= (/) -> ( E! x A. y e. A x = B
                     <-> E. x A. y e. A x = B ) ) $=
      ( vz c0 wne cv wcel wex wceq wral weu wb n0 hbra1 hbeu hbex wa wal r19.26
      wi ra4 eqtr3 syl6com syl5bir alrimivv biantrud eqeq1 ralbidv eu4 syl6rbbr
      hbbi exlimi sylbi ) CFGBHCIZBJAHZDKZBCLZAMZUSAJZNZBCOUPVBBUTVABUSBAURBCPZ
      QUSBAVCRUMUPVAVAUSEHZDKZBCLZSZUQVDKZUBZETATZSUTUPVJVAUPVIAEVGURVESZBCLZUP
      VHURVEBCUAVLUPVKVHVKBCUCUQVDDUDUEUFUGUHUSVFAEVHURVEBCUQVDDUIUJUKULUNUO $.
      $( [22-Oct-2010] $)
  $}

  ${
    $d v w x y z A $.  $d v w x z B $.
    $( Lemma for ~ reusv2 . $)
    reusv2lem2 $p |- ( E! x A. y e. A x = B -> E! x E. y e. A x = B ) $=
      ( vz vw vv cv wceq wral weu wrex wi c0 wal wex wa ax-17 wcel cvv wn eunex
      exnal sylib rzal alrimiv nsyl3 pm2.21d wne adantl r19.2z ex eximdv adantr
      euex mpd hbeu1 csb hbcsb1 hbeleq csbeq1a eqeq2d cbvrex anbi2i bitr4i crab
      reean cuni wreu eqeq1 ralbidv hbra1 hbrab hbuni hbeq reuuni3 vex biantrur
      ralbid eubii df-reu anidm 3imtr4i raaan cbvral eqtr2 eqeq12 ralimi sylbir
      syl5ibrcom r19.23v ralbii bitri syl5bir alrimi rexbidv sylanbrc pm2.61ine
      syl eu4 ) AHZDIZBCJZAKZXBBCLZAKZMCNCNIZXDXFXDXCAOZXGXDXCUAAPXHUAXCAUBXCAU
      CUDXGXCAXBBCUEUFUGUHCNUIZXDXFXIXDQZXEAPZXEEHZDIZBCLZQZXAXLIZMZEOZAOZXFXJX
      CAPZXKXDXTXIXCAUOUJXIXTXKMXDXIXCXEAXIXCXEXBBCUKULUMUNUPXDXSXIXDXRAXCAUQXD
      XQEXOXBXLBFHZDURZIZQZFCLZBCLZXDXPYFXEYCFCLZQXOXBYCBFCCXBFRBEYBBEYADXLYASB
      RUSUTZVGXNYGXEXMYCBFCXMFRYHBHYAIZDYBXLBYADVAZVBVCVDVEXDYDXPMZFCJZBCJZYFXP
      MZXDXMBCJZETVFZVHZDIZBCJZYSQZYMXCATVIZYSXDYTXCYOYSAETXPXBXMBCXAXLDVJZVKXA
      YQIXBYRBCBGGXAYQGHZXASBRBGYPYOBEGTXMBCVLUUCTSBRVMVNZVOXAYQDVJVSVPXDXATSZX
      CQZAKUUAXCUUFAUUEXCAVQVRVTXCATWAVEYSWBWCYTYRYQYBIZQZFCJZBCJZYMUUJYSUUGFCJ
      ZQYTYRUUGBFCYRFRZBGGYQYBUUDBGYADUUCYASBRUSVOZWDYSUUKYSYRUUGBFCUULUUMYIDYB
      YQYJVBWEVDVEUUIYLBCUUHYKFCUUHXPYDDYBIYQDYBWFXADXLYBWGWJWHWHWIWSYMYEXPMZBC
      JYNYLUUNBCYDXPFCWKWLYEXPBCWKWMUDWNUFWOUJXEXNAEXPXBXMBCUUBWPWTWQULWR $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    $( Lemma for ~ reusv2 . $)
    reusv2lem3 $p |- ( A. y e. A B e. _V ->
          ( E! x E. y e. A x = B <-> E! x A. y e. A x = B ) ) $=
      ( vz cvv wcel wral cv wceq wrex weu wi c0 wex rex0 rexeq wa wal eqeq1 a1i
      mtbiri nexdv euex pm2.21d wne weq ax-17 eu3 ralcom4 r19.23v albii imbi12d
      nsyl bitri eqid eqcom bitr3i syl6bb cla4gv ral2imi syl5bir eximdv ralbidv
      a1bi cbvexv syl6ibr adantld syl5bi adantr wb reusv2lem1 adantl sylibrd ex
      pm2.61dne reusv2lem2 impbid1 ) DFGZBCHZAIZDJZBCKZALZWBBCHZALZVTWDWFMZCNCN
      JZWGMVTWHWDWFWHWCAOZWDWHWCAWHWCWBBNKWBBPWBBCNQUBUCWCAUDUNUEUAVTCNUFZWGVTW
      JRWDWEAOZWFVTWDWKMWJWDWIWCAEUGZMZASZEOZRVTWKWCAEWCEUHUIVTWOWKWIVTWOEIZDJZ
      BCHZEOWKVTWNWREWNWBWLMZASZBCHZVTWRXAWSBCHZASWNWSBACUJXBWMAWBWLBCUKULUOVSW
      TWQBCWSWQADFWBWSDDJZDWPJZMZWQWBWBXCWLXDWADDTWADWPTUMXEXDWQXCXDDUPVEDWPUQU
      RUSUTVAVBVCWEWRAEWLWBWQBCWAWPDTVDVFVGVHVIVJWJWFWKVKVTABCDVLVMVNVOVPABCDVQ
      VR $.
      $( [14-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.  $d x z C $.  $d x z ph $.
    $( Lemma for ~ reusv2 . $)
    reusv2lem4 $p |- ( E! x e. A E. y e. B ( ph /\ x = C )
            <-> E! x A. y e. B ( ( C e. A /\ ph ) -> x = C ) ) $=
      ( vz cv wceq wa wrex wcel weu cab wi wex anass ax-17 wal bitri csb df-reu
      wreu wral r19.42v df-rex abid anbi1i eleq1 anbi2d anbi1d pm5.32ri 3bitrri
      bitr3i exbii hbab1 hbcsb1 hbeleq hban csbeq1a eqeq2d anbi12d cbvex bitr4i
      3bitri eubii cvv wb reusv2lem3 simplr ss2abi sseli hbel eleq1d elabf elex
      vex sylbi syl mprg df-ral hbim imbi12d cbval imbi1i impexp albii 3bitr2i
      ) ABHZFIZJZCEKZBDUCWIDLZWLJZBMWICGHZFUAZIZGCHZELZFDLZJZAJZCNZKZBMZWTAJZWJ
      OZCEUDZBMZWLBDUBWNXDBWNWMWKJZCEKZXDWMWKCEUEXKWSXJJZCPWRXCLZWJJZCPZXDXJCEU
      FXLXNCXNXBWJJZWSWMJZWKJZXLXMXBWJXBCUGZUHXPXQAJZWJJXRWJXTXBWJXQXAAWJWMWTWS
      WIFDUIUJUKULXQAWJQUNWSWMWKQUMUOXOWOXCLZWQJZGPXDXNYBCGXNGRYAWQCXBCGUPZCBWP
      CBWOFWIWOLCRUQZURZUSWRWOIZXMYAWJWQWRWOXCUIZYFFWPWICWOFUTZVAZVBVCWQGXCUFVD
      VEUNVFXEWQGXCUDZBMZXIWPVGLZXEYKVHGXCBGXCWPVIYAWOWTCNZLZYLXCYMWOXBWTCWSWTA
      VJVKVLYNWPDLZYLWTYOCWOCBGWPDYDWODLCRVMGVQYFFWPDYHVNVOWPDVPVRVSVTYJXHBYJYA
      WQOZGSXMWJOZCSZXHWQGXCWAYQYPCGYQGRYAWQCYCYEWBYFXMYAWJWQYGYIWCWDYRWSXGOZCS
      XHYQYSCYQWSXFJZWJOYSXMYTWJXMXBYTXSWSWTAQTWEWSXFWJWFTWGXGCEWAVDWHVFTVE $.
      $( [13-Dec-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.
    $( Lemma for ~ reusv2 . $)
    reusv2lem5 $p |- ( ( A. y e. B C e. A /\ B =/= (/) )
          -> ( E! x e. A E. y e. B x = C <-> E! x e. A A. y e. B x = C ) ) $=
      ( wcel wral c0 wne wa cv wceq wrex wreu weu wi wb bitrd eubidv syl5bb ra4
      equid biantrur rexbii reubii reusv2lem4 hbra1 id imp eleq1 pm5.32ri biimt
      baib biantru imbi1i syl6rbb ralbida adantr r19.28zv adantl df-reu syl6bbr
      syl sylan ) ECFZBDGZDHIZJZAKZELZBDMZACNZVICFZVJBDGZJZAOZVNACNVHVLVMVJJZBD
      GZAOZVPVLBKZVTLZVJJZBDMZACNZVHVSVKWCACVJWBBDWAVJBUBZUCUDUEWDVEWAJZVJPZBDG
      ZAOZVHVSWAABCDEUFVFWIVSQVGVFWHVRAVFWGVQBDVEBDUGVFVTDFZVEPZWJWGVQQZVEBDUAW
      KWJJVEWLWKWJVEWKUHUIVEVQVEVJPZWGVEVQVJWMVQVEVJVJVMVEVIECUJUKUMVEVJULRVEWF
      VJWAVEWEUNUOUPVCVDUQSURTTVGVSVPQVFVGVRVOAVMVJBDUSSUTRVNACVAVB $.
      $( [4-Jan-2013] $)
  $}

  ${
    $d w x y z A $.  $d w x z B $.  $d w x z C $.  $d w x z ph $.
    $( Two ways to express single-valuedness of a class expression ` C ( y ) `
       that is constant for those ` y e. B ` such that ` ph ` .  The first
       antecedent ensures that the constant value belongs to the existential
       uniqueness domain ` A ` , and the second ensures that ` C ( y ) ` is
       evaluated for at least one ` y ` . $)
    reusv2 $p |- ( ( A. y e. B ( ph -> C e. A ) /\ E. y e. B ph )
          -> ( E! x e. A E. y e. B ( ph /\ x = C )
                   <-> E! x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( vz vw wcel wi wral cv wa c0 wrex wreu wal ax-17 wsb reubii csb cab wceq
      wne wb df-ral hbab1 wel hbcsb1 hbel hbim weq sbequ12 sbim df-clab cvv vex
      sbcel1g ax-mp bicomi bitr4i syl6bb cbval impexp albii 3bitr2ri bitri crab
      imbi12i rabn0 df-rab neeq1i bitr3i hbeleq csbeq1a cbvrexf cbvralf 3bitr4g
      reusv2lem5 eqeq2d abid anbi1i anass bitr2i rexbii2 imbi1i ralbii2 syl2anb
      ) AFDIZJZCEKZCGLZFUAZDIZGCLZEIZAMZCUBZKZWRNUDZABLZFUCZMZCEOZBDPZAXBJZCEKZ
      BDPZUEACEOZWKWPWJJZCQZWSWJCEUFWSWLWRIZWNJZGQWQWIJZCQXKWNGWRUFXNXMCGXNGRXL
      WNCWQCGUGCHHWMDCHWLFHGUHCRUIHLZDICRUJUKCGULZXNXNCGSZXMXNCGUMXQWQCGSZWICGS
      ZJXMWQWICGUNXLXRWNXSWQGCUOXSWNWLUPIXSWNUEGUQCWLFDUPURUSUTVIVAVBVCXNXJCWPA
      WIVDVEVFVGXIACEVHZNUDWTACEVJXTWRNACEVKVLVMWSWTMZXBCWROZBDPZXBCWRKZBDPZXEX
      HYAXAWMUCZGWROZBDPYFGWRKZBDPYCYEBGDWRWMVSYBYGBDXBYFCGHWRWQCHUGZXOWRIGRZXB
      GRZCBWMCBWLFBGUHCRUIVNZXPFWMXACWLFVOVTZVPTYDYHBDXBYFCGHWRYIYJYKYLYMVQTVRX
      DYBBDXCXBCEWRWOWRIZXBMWQXBMWPXCMYNWQXBWQCWAZWBWPAXBWCWDWETXGYDBDXFXBCEWRY
      NXBJWQXBJWPXFJYNWQXBYOWFWPAXBVDWDWGTVRWH $.
      $( [4-Jan-2013] $)
  $}

  ${
    $d x y z B $.  $d x z C $.  $d x y D $.  $d x z ph $.  $d x y ps $.
    reusv3.1 $e |- ( y = z -> ( ph <-> ps ) ) $.
    reusv3.2 $e |- ( y = z -> C = D ) $.
    $( Two ways of expressing existential uniqueness via an indirect
       equality. $)
    reusv3i $p |- ( E. x e. A A. y e. B ( ph -> x = C )
            -> A. y e. B A. z e. B ( ( ph /\ ps ) -> C = D ) ) $=
      ( cv wceq wi wral wa eqeq2d imbi12d cbvralv ralimi biimpi prth eqtr2 syl6
      raaanv sylbir mpdan rexlimivw ) ACLZHMZNZDGOZABPZHIMZNZEGOZDGOZCFULBUIIMZ
      NZEGOZUQULUTUKUSDEGDLELMZABUJURJVAHIUIKQRSUAULUTPUKUSPZEGOZDGOUQUKUSDEGUE
      VCUPDGVBUOEGVBUMUJURPUNAUJBURUBUIHIUCUDTTUFUGUH $.
      $( [23-Dec-2012] $)

    $d x y z A $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` .  See ~ reusv1 for the connection to uniqueness. $)
    reusv3 $p |- ( E. y e. B ( ph /\ C e. A )
          -> ( A. y e. B A. z e. B ( ( ph /\ ps ) -> C = D )
                   <-> E. x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( wcel wa wrex wceq wi wral cv ax-17 bitri eleq1d hbra1 hbral hbim risset
      anbi12d cbvrexv ralcom impexp bi2.04 ralbii r19.21v ra4 sylbi com3l imp31
      eqeq1 eqcom syl6bb imbi2d ralbidv syl5ibrcom reximdv com23 syl5bi expimpd
      ex rexlimi reusv3i impbid1 ) AHFLZMZDGNZABMHIOZPZEGQZDGQZACRZHOZPZDGQZCFN
      ZVMBIFLZMZEGNVQWBPZVLWDDEGDRZERZOZABVKWCJWHHIFKUAUFUGWDWEEGVQWBEVPEDGWFGL
      ESVOEGUBUCWBESUDWGGLZBWCWEWCVRIOZCFNZWIBMZWECIFUEWLVQWKWBWLVQWKWBPWLVQMZW
      JWACFWMWAWJAVNPZDGQZWIBVQWOVQWIBWOVQBWOPZEGQZWIWPPVQVODGQZEGQWQVODEGGUHWR
      WPEGWRBWNPZDGQWPVOWSDGVOABVNPPWSABVNUIABVNUJTUKBWNDGULTUKTWPEGUMUNUOUPWJV
      TWNDGWJVSVNAWJVSIHOVNVRIHUQIHURUSUTVAVBVCVGVDVEVFVHUNABCDEFGHIJKVIVJ $.
      $( [27-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    eusv4.1 $e |- B e. _V $.
    $( Two ways to express single-valuedness of a class expression
       ` B ( x ) ` . $)
    eusv4 $p |- ( E! x E. y e. A x = B <-> E! x A. y e. A x = B ) $=
      ( cvv wcel cv wceq wrex weu wral wb reusv2lem3 a1i mprg ) DFGZAHDIZBCJAKR
      BCLAKMBCABCDNQBHCGEOP $.
      $( [27-Oct-2010] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x C $.  $d x y $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` . $)
    reusv5OLD $p |- ( B =/= (/) -> ( E! x e. A A. y e. B x = C
                     <-> E. x e. A A. y e. B x = C ) ) $=
      ( c0 wne cv wceq wrex wral wreu wb wcel wex wa equid biantru exbii n0 wi
      df-rex 3bitr4i reusv1 a1bi ralbii reubii rexbii 3bitr4g sylbi ) DFGZBHZUL
      IZBDJZAHEIZBDKZACLZUPACJZMULDNZBOUSUMPZBOUKUNUSUTBUMUSBQZRSBDTUMBDUBUCUNU
      MUOUAZBDKZACLVCACJUQURUMABCDEUDUPVCACUOVBBDUMUOVAUEUFZUGUPVCACVDUHUIUJ $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.  $d v w x z C $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` .  The converse does not hold.  Note that ` U. A = |^| A `
       means ` A ` is a singleton ( ~ uniintsn ). $)
    reusv6OLD $p |- ( ( U. A =/= |^| A \/ B =/= (/) )
          -> ( E! x e. A A. y e. B x = C -> E! x e. A E. y e. B x = C ) ) $=
      ( vz vw vv cv wceq wral wreu wrex wi c0 wcel wa bitr4i ax-17 a1d cuni wne
      cint wn raleq reubidv weu df-reu csn wex uniintsn eusn ral0 biantru eubii
      3bitr2i syl6bb necon3bbid pm2.21 syl6bir reurex adantl r19.2z reximdv mpd
      ex adantr hbreu1 csb hbcsb1 hbeleq reean csbeq1a eqeq2d cbvrex crab eqeq1
      anbi2i ralbidv hbra1 hbrab hbuni ralbid reuuni3 anidm sylibr raaan cbvral
      hbeq eqtr2 eqeq12 syl5ibrcom ralimi sylbir syl r19.23v ralbii bitri sylib
      syl5bir ralrimiv ralrimi rexbidv reu4 sylanbrc pm2.61ine jaoi ) CUAZCUCZU
      BZAIZEJZBDKZACLZXLBDMZACLZNZDOUBZXJXQNDODOJZXJXNUDXQXSXNXHXIXSXNXLBOKZACL
      ZXHXIJZXSXMXTACXLBDOUEUFYAXKCPZXTQZAUGZYBXTACUHYBCXKUIJAUJYCAUGYEACUKACUL
      YCYDAXTYCXLBUMUNUOUPRUQURXNXPUSUTXRXQXJXRXNXPXRXNQZXOACMZXOFIZEJZBDMZQZXK
      YHJZNZFCKZACKZXPYFXMACMZYGXNYPXRXMACVAVBXRYPYGNXNXRXMXOACXRXMXOXLBDVCVFVD
      VGVEXNYOXRXNYNACXMACVHXNYNYCXNYMFCXNYMYHCPYKXLYHBGIZEVIZJZQZGDMZBDMZXNYLU
      UBXOYSGDMZQYKXLYSBGDDXLGSBFYRBFYQEYHYQPBSVJVKZVLYJUUCXOYIYSBGDYIGSUUDBIYQ
      JZEYRYHBYQEVMZVNVOVRRXNYTYLNZGDKZBDKZUUBYLNZXNYIBDKZFCVPZUAZEJZBDKZUUOQZU
      UIXNUUOUUPXMUUKUUOAFCYLXLYIBDXKYHEVQZVSXKUUMJXLUUNBDBHHXKUUMHIZXKPBSBHUUL
      UUKBFHCYIBDVTUURCPBSWAWBZWIXKUUMEVQWCWDUUOWEWFUUPUUNUUMYRJZQZGDKZBDKZUUIU
      VCUUOUUTGDKZQUUPUUNUUTBGDUUNGSZBHHUUMYRUUSBHYQEUURYQPBSVJWIZWGUUOUVDUUOUU
      NUUTBGDUVEUVFUUEEYRUUMUUFVNWHVRRUVBUUHBDUVAUUGGDUVAYLYTEYRJUUMEYRWJXKEYHY
      RWKWLWMWMWNWOUUIUUAYLNZBDKUUJUUHUVGBDYTYLGDWPWQUUAYLBDWPWRWSWTTXATXBVBXOY
      JAFCYLXLYIBDUUQXCXDXEVFZTXFUVHXG $.
      $( [30-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x C $.
    reusv7.1 $e |- ( y e. B -> C e. A ) $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` .  Note that ` U. A = |^| A ` means ` A ` is a singleton
       ( ~ uniintsn ). $)
    reusv7OLD $p |- ( ( U. A =/= |^| A \/ B =/= (/) )
          -> ( E! x e. A E. y e. B x = C <-> E! x e. A A. y e. B x = C ) ) $=
      ( wne cv wceq wrex wreu wral wb c0 wi wn wa wcel weu df-reu raleq reubidv
      cuni cint csn uniintsn eusn ral0 biantru 3bitr2i bitr4i syl6bb necon3bbid
      eubii biimprd reurex rexn0 rexlimivw necon2bi jctild pm5.21 syl6 r19.28zv
      wex syl eubidv reusv2lem4 equid biantrur rexbii reubii biantrurd pm5.32ri
      eleq1 syl6rbbr biimt bitrd imbi1i ralbiia 3bitr4i 3bitr4g pm2.61ine jaoi
      a1d ) CUCZCUDZGZAHZEIZBDJZACKZWIBDLZACKZMZDNGZWGWNODNDNIZWGWKPZWMPZQWNWPW
      GWRWQWPWRWGWPWMWEWFWPWMWIBNLZACKZWEWFIZWPWLWSACWIBDNUAUBWTWHCRZWSQZASZXAW
      SACTXACWHUEIAVDXBASXDACUFACUGXBXCAWSXBWIBUHUIUNUJUKULUMUOWKDNWKWJACJWOWJA
      CUPWJWOACWIBDUQURVEUSUTWKWMVAVBWOWNWGWOXBWIQZBDLZASZXBWLQZASWKWMWOXFXHAXB
      WIBDVCVFBHZXIIZWIQZBDJZACKECRZXJQZWIOZBDLZASWKXGXJABCDEVGWJXLACWIXKBDXJWI
      BVHZVIVJVKXFXPAXEXOBDXIDRZXEXMWIOZXOXRXEWIXSXRWIXMWIQXEXRXMWIFVLWIXBXMWHE
      CVNVMVOXRXMWIXSMFXMWIVPVEVQXMXNWIXJXMXQUIVRULVSUNVTWLACTWAZWDWBXTWC $.
      $( [14-Dec-2012] $)
  $}

  ${
    $d w x y z A $.  $d w x z B $.  $d x z C $.  $d w x z ph $.
    reusv8.1 $e |- ( ( y e. B /\ ph ) -> C e. A ) $.
    $( Two ways to express single-valuedness of a class expression
       ` C ( y ) ` .  Note that ` U. A = |^| A ` means ` A ` is a singleton
       ( ~ uniintsn ). $)
    reusv8OLD $p |- ( ( U. A =/= |^| A \/ E. y e. B ph )
          -> ( E! x e. A E. y e. B ( ph /\ x = C )
                   <-> E! x e. A A. y e. B ( ph -> x = C ) ) ) $=
      ( vz vw wne wrex cv wcel wa c0 wceq wreu wi wral reubii cuni cint wo crab
      cab wb rabn0 df-rab neeq1i bitr3i orbi2i csb wsbc df-clab sbimi sylbi cvv
      sbcel1g ax-mp sylib reusv7OLD hbab1 hbcsb1 hbeleq csbeq1a cbvrexf cbvralf
      vex ax-17 eqeq2d 3bitr4g abid anbi1i bitr2i rexbii2 imbi1i impexp ralbii2
      anass ) DUADUBJZACEKZUCVTCLZEMZANZCUEZOJZUCZABLZFPZNZCEKZBDQZAWIRZCESZBDQ
      ZUFWAWFVTWAACEUDZOJWFACEUGWPWEOACEUHUIUJUKWGWICWEKZBDQZWICWESZBDQZWLWOWGW
      HCHLZFULZPZHWEKZBDQXCHWESZBDQWRWTBHDWEXBXAWEMZFDMZCXAUMZXBDMZXFWDCXAUMXHW
      DHCUNWDXGCHGUOUPXAUQMXHXIUFHVHCXAFDUQURUSUTVAWQXDBDWIXCCHIWEWDCIVBZILWEMH
      VIZWIHVIZCBXBCBXAFWHXAMCVIVCVDZWBXAPFXBWHCXAFVEVJZVFTWSXEBDWIXCCHIWEXJXKX
      LXMXNVGTVKWKWQBDWJWICEWEWBWEMZWINWDWINWCWJNXOWDWIWDCVLZVMWCAWIVSVNVOTWNWS
      BDWMWICEWEXOWIRWDWIRWCWMRXOWDWIXPVPWCAWIVQVNVRTVKUP $.
      $( [16-Dec-2012] $)
  $}

  ${
    $d x y z A $.  $d x z B $.
    eusvobj1.1 $e |- B e. _V $.
    $( Specify the same object in two ways when class ` B ( y ) ` is
       single-valued. $)
    eusvobj1 $p |- ( E! x E. y e. A x = B
       -> U. { x | E. y e. A x = B } = U. { x | A. y e. A x = B } ) $=
      ( vz cv wceq wrex weu wcel wex cab cuni wral wa cvv crab eqeq1 hbuni wreu
      eusv4 reuv ralbidv hbra1 ax-17 hbrab hbeleq ralbid reuuni3 sylbir rexbidv
      sylbi hbre1 rexbid r19.29 syl2anc eqtr3 cbvabv rabab eqtr4i unieqi ancoms
      3eqtr4g reximi syl df-rex hbab hbeq 19.41 bitri sylib simprd ) AGZDHZBCIZ
      AJZBGCKZBLZVPAMZNZVOBCOZAMZNZHZVQWEBCIZVSWEPZVQFGZDHZBCOZFQRZNZDHZWIBCIZF
      QRZNZDHZPZBCIZWFVQWMBCOZWQBCIZWSVQWBAJZWTABCDEUBXBWBAQUAWTWBAUCWBWJWTAFQV
      NWHHZVOWIBCVNWHDSZUDZVNWLHVOWMBCBAWLBAWKWJBFAQWIBCUEVNQKBUFZUGTUHVNWLDSUI
      UJUKUMVQVPAQUAXAVPAUCVPWNXAAFQXCVOWIBCXDULZVNWPHVOWQBCBAWPBAWOWNBFAQWIBCU
      NXFUGTUHVNWPDSUOUJUKWMWQBCUPUQWRWEBCWQWMWEWQWMPWPWLWAWDWPWLDURVTWOVTWNFMW
      OVPWNAFXGUSWNFUTVAVBWCWKWCWJFMWKWBWJAFXEUSWJFUTVAVBVDVCVEVFWFVRWEPBLWGWEB
      CVGVRWEBBFFWAWDBFVTVPBAFVOBCUNVHTBFWCWBBAFVOBCUEVHTVIVJVKVLVM $.
      $( [1-Nov-2010] $)

    $( Specify the same property in two ways when class ` B ( y ) ` is
       single-valued. $)
    eusvobj2 $p |- ( E! x E. y e. A x = B
       -> ( E. y e. A x = B <-> A. y e. A x = B ) ) $=
      ( cv wceq weu cab wcel cvv crab cuni rabab unieqi wreu reuv reuunisn abid
      csn wrex eusvobj1 3eqtr4g sneqd sylbir eusv4 bitr4i sylbi 3eqtr4d 3eqtr3g
      wral eleq2d 3bitr3g ) AFZDGZBCUAZAHZUNUPAIZJUNUOBCUKZAIZJUPUSUQURUTUNUQUP
      AKLZUSAKLZURUTUQVAMZTZVBMZTZVAVBUQVCVEUQURMUTMVCVEABCDEUBVAURUPANZOVBUTUS
      ANZOUCUDUQUPAKPVAVDGUPAQUPAKRUEUQUSAKPZVBVFGUQUSAHVIABCDEUFUSAQUGUSAKRUHU
      IVGVHUJULUPASUSASUM $.
      $( [29-Jul-2011] $) $( [1-Nov-2010] $)
  $}

  ${
    $d x A $.  $d y ph $.  $d x ps $.  $d x y $.
    alxfr.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    alxfr $p |- ( ( A. y A e. B /\ A. x E. y x = A ) ->
                ( A. x ph <-> A. y ps ) ) $=
      ( wcel wal cv wceq wex wa wi hba1 ax-17 cla4gv a4s alrimd adantr syl5ibr
      hbim ax-4 exlimi adantl impbid ) EFHZDIZCJEKZDLZCIZMACIZBDIZUHULUMNUKUHUL
      BDUGDOULDPUGULBNDABCEFGQRSTUKUMULNUHUKUMACUJCOUMCPUJUMANZCUIUNDUMADBDOADP
      UBUMAUIBBDUCGUAUDRSUEUF $.
      $( [18-Feb-2007] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x C $.  $d x ch $.  $d x y ph $.  $d y ps $.
    ralxfrd.1 $e |- ( ( ph /\ y e. C ) -> A e. B ) $.
    ralxfrd.2 $e |- ( ( ph /\ x e. B ) -> E. y e. C x = A ) $.
    ralxfrd.3 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfrd $p |- ( ph -> ( A. x e. B ps <-> A. y e. C ch ) ) $=
      ( wral cv wcel wi ex rcla4dv com23 ralrimdv ax-17 syld wceq wrex wa hbra1
      hban ra4 exbiri sylan9r rexlimd syl5d impbid ) ABDGLZCEHLZAUMCEHAEMHNZUMC
      AUOFGNZUMCOZAUOUPIPAUPUQABCDFGKQPUARSAUNBDGADMZGNZURFUBZEHUCZUNBAUSVAJPAU
      NVABOAUNUDUTBEHAUNEAETCEHUEUFBETUNUOCAUTBOCEHUGAUTCBAUTBCKUHRUIUJPUKSUL
      $.
      $( [15-Aug-2014] $)

    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by FL,
       10-Apr-2007.) $)
    rexxfrd $p |- ( ph -> ( E. x e. B ps <-> E. y e. C ch ) ) $=
      ( wn wral wrex cv wceq wa notbid ralxfrd dfrex2 3bitr4g ) ABLZDGMZLCLZEHM
      ZLBDGNCEHNAUCUEAUBUDDEFGHIJADOFPQBCKRSRBDGTCEHTUA $.
      $( [15-Aug-2014] $) $( [10-Apr-2007] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x C $.  $d x ch $.  $d x y ph $.  $d y ps $.
    ralxfr2d.1 $e |- A e. _V $.
    ralxfr2d.2 $e |- ( ph -> ( x e. B <-> E. y e. C x = A ) ) $.
    ralxfr2d.3 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by Mario
       Carneiro, 20-Aug-2014.) $)
    ralxfr2d $p |- ( ph -> ( A. x e. B ps <-> A. y e. C ch ) ) $=
      ( cv wcel wa wceq wi wal wrex wral biimprd r19.23v r19.21bi alrimiv eleq1
      sylibr ceqsalv sylib biimpa ralxfrd ) ABCDEFGHAELHMNZDLZFOZUKGMZPZDQFGMZU
      JUNDAUNEHAULEHRZUMPUNEHSAUMUPJTULUMEHUAUEUBUCUMUODFIUKFGUDUFUGAUMUPJUHKUI
      $.
      $( [20-Aug-2014] $)

    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  (Contributed by Mario
       Carneiro, 20-Aug-2014.) $)
    rexxfr2d $p |- ( ph -> ( E. x e. B ps <-> E. y e. C ch ) ) $=
      ( cv wcel wa wceq wi wal wrex wral biimprd r19.23v r19.21bi alrimiv eleq1
      sylibr ceqsalv sylib biimpa rexxfrd ) ABCDEFGHAELHMNZDLZFOZUKGMZPZDQFGMZU
      JUNDAUNEHAULEHRZUMPUNEHSAUMUPJTULUMEHUAUEUBUCUMUODFIUKFGUDUFUGAUMUPJUHKUI
      $.
      $( [20-Aug-2014] $)
  $}

  ${
    $d x y ph $.  $d x ch $.  $d y ps $.  $d x A $.  $d x y B $.
    ralxfrdOLD.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    ralxfrdOLD.2 $e |- ( ( ph /\ x e. B ) -> E. y e. B x = A ) $.
    ralxfrdOLD.3 $e |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) $.
    $( Obsolete version of ~ ralxfrd as of 14-Aug-2014. $)
    ralxfrdOLD $p |- ( ph -> ( A. x e. B ps <-> A. y e. B ch ) ) $=
      ( wral cv wcel wi ex rcla4dv syld com23 ralrimdv ax-17 wceq wrex wa hbra1
      hban ra4 exbiri sylan9r rexlimd syl5d impbid ) ABDGKZCEGKZAULCEGAELGMZULC
      AUNFGMZULCNZAUNUOHOAUOUPABCDFGJPOQRSAUMBDGADLZGMZUQFUAZEGUBZUMBAURUTIOAUM
      UTBNAUMUCUSBEGAUMEAETCEGUDUEBETUMUNCAUSBNCEGUFAUSCBAUSBCJUGRUHUIOUJSUK $.
      $( [17-Feb-2007] $)

    $( Obsolete version of ~ rexxfrd as of 14-Aug-2014. $)
    rexxfrdOLD $p |- ( ph -> ( E. x e. B ps <-> E. y e. B ch ) ) $=
      ( rexxfrd ) ABCDEFGGHIJK $.
      $( [10-Apr-2007] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.  $d x y B $.  $d x C $.
    ralxfr.1 $e |- ( y e. C -> A e. B ) $.
    ralxfr.2 $e |- ( x e. B -> E. y e. C x = A ) $.
    ralxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfr $p |- ( A. x e. B ph <-> A. y e. C ps ) $=
      ( wral wb wtru cv wcel adantl wceq wrex ralxfrd trud ) ACFKBDGKLMABCDEFGD
      NGOEFOMHPCNZFOUAEQZDGRMIPUBABLMJPST $.
      $( [15-Aug-2014] $) $( [10-Jun-2005] $)

    $( Transfer universal quantification from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    ralxfrALT $p |- ( A. x e. B ph <-> A. y e. C ps ) $=
      ( wral cv wcel wi rcla4v syl com12 ralrimiv wceq wrex hbra1 biimprcd syl6
      ax-17 ra4 rexlimd syl5 impbii ) ACFKZBDGKZUIBDGDLGMZUIBUKEFMUIBNHABCEFJOP
      QRUJACFCLZFMULESZDGTUJAIUJUMADGBDGUAADUDUJUKBUMANBDGUEUMABJUBUCUFUGRUH $.
      $( [15-Aug-2014] $) $( [10-Jun-2005] $)

    $( Transfer existence from a variable ` x ` to another variable ` y `
       contained in expression ` A ` . $)
    rexxfr $p |- ( E. x e. B ph <-> E. y e. C ps ) $=
      ( wrex wn wral dfrex2 cv wceq notbid ralxfr xchbinxr bitr4i ) ACFKALZCFMZ
      LBDGKZACFNUCBLZDGMUBBDGNUAUDCDEFGHICOEPABJQRST $.
      $( [15-Aug-2014] $) $( [10-Jun-2005] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.  $d x y B $.
    ralxfrOLD.1 $e |- ( y e. B -> A e. B ) $.
    ralxfrOLD.2 $e |- ( x e. B -> E. y e. B x = A ) $.
    ralxfrOLD.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Obsolete version of ~ ralxfr as of 14-Aug-2014. $)
    ralxfrOLD $p |- ( A. x e. B ph <-> A. y e. B ps ) $=
      ( ralxfr ) ABCDEFFGHIJ $.
      $( [10-Jun-2005] $)

    $( Obsolete version of ~ ralxfrALT as of 14-Aug-2014. $)
    ralxfrALTOLD $p |- ( A. x e. B ph <-> A. y e. B ps ) $=
      ( ralxfrALT ) ABCDEFFGHIJ $.
      $( [10-Jun-2005] $)

    $( Obsolete version of ~ rexxfr as of 14-Aug-2014. $)
    rexxfrOLD $p |- ( E. x e. B ph <-> E. y e. B ps ) $=
      ( rexxfr ) ABCDEFFGHIJ $.
      $( [10-Jun-2005] $)
  $}

  ${
    $d x A $.  $d z B $.  $d z C $.  $d x y z D $.  $d y ph $.  $d y z ps $.
    $d x z ch $.
    rabxfrd.1 $e |- ( z e. B -> A. y z e. B ) $.
    rabxfrd.2 $e |- ( z e. C -> A. y z e. C ) $.
    rabxfrd.3 $e |- ( ( ph /\ y e. D ) -> A e. D ) $.
    rabxfrd.4 $e |- ( x = A -> ( ps <-> ch ) ) $.
    rabxfrd.5 $e |- ( y = B -> A = C ) $.
    $( Class builder membership after substituting an expression ` A `
       (containing ` y ` ) for ` x ` in the class expression ` ch ` . $)
    rabxfrd $p |- ( ( ph /\ B e. D ) ->
                 ( C e. { x e. D | ps } <-> B e. { y e. D | ch } ) ) $=
      ( wcel crab wb wa wi cv ibibr sylib imp anbi1d elrab rabid 3bitr4g eleq2d
      rabbidva ax-17 hbel wceq eleq1d elrabf hbrab1 eleq1 3bitr3g pm5.32 sylibr
      ex ) AHJPZIBDJQZPZHCEJQZPZRZAVBVDSZVBVFSZRVBVGTAHGVCPZEJQZPHEUAZVEPZEJQZP
      VHVIAVKVNHAVJVMEJAVLJPZSZGJPZCSVOCSVJVMVPVQVOCAVOVQVORZAVOVQTVOVRTAVOVQMV
      AVOVQUBUCUDUEBCDGJNUFCEJUGUHUJUIVJVDEFHJKFUAZJPEUKZEFFIVCLVSVCPEUKULVLHUM
      GIVCOUNUOVMVFEFHJKVTEFFHVEKCEFJUPULVLHVEUQUOURVBVDVFUSUTUD $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x A $.  $d z B $.  $d z C $.  $d x y z D $.  $d y z ph $.  $d x z ps $.
    rabxfr.1 $e |- ( z e. B -> A. y z e. B ) $.
    rabxfr.2 $e |- ( z e. C -> A. y z e. C ) $.
    rabxfr.3 $e |- ( y e. D -> A e. D ) $.
    rabxfr.4 $e |- ( x = A -> ( ph <-> ps ) ) $.
    rabxfr.5 $e |- ( y = B -> A = C ) $.
    $( Class builder membership after substituting an expression ` A `
       (containing ` y ` ) for ` x ` in the class expression ` ph ` . $)
    rabxfr $p |- ( B e. D ->
                 ( C e. { x e. D | ph } <-> B e. { y e. D | ps } ) ) $=
      ( wtru wcel crab wb tru cv adantl rabxfrd mpan ) OGIPHACIQPGBDIQPRSOABCDE
      FGHIJKDTIPFIPOLUAMNUBUC $.
      $( [10-Jun-2005] $)
  $}

  ${
    $d x y ph $.  $d x ps $.  $d x A $.  $d x y B $.
    reuxfr2d.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    reuxfr2d.2 $e |- ( ( ph /\ x e. B ) -> E* y ( y e. B /\ x = A ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    reuxfr2d $p |- ( ph
        -> ( E! x e. B E. y e. B ( x = A /\ ps ) <-> E! y e. B ps ) ) $=
      ( cv wa wrex wreu wcel wmo wi syl ancom bitri mobii 2reuswap wceq impbid1
      wral moan anass sylib ralrimiva moeq moani an12 mpbi a1i mprg wb ceqsrexv
      biidd reubidva bitrd ) ACIZEUAZBJZDFKCFLZVACFKZDFLZBDFLAVBVDADIFMZVAJZDNZ
      CFUCVBVDOAVGCFAUSFMZJZBVEUTJZJZDNZVGVIVJDNVLHVJBDUDPVKVFDVKVJBJVFBVJQVEUT
      BUERSUFUGVACDFTPVHVAJZCNZVDVBODFVADCFTVNVEVHBJZUTJZCNVNUTVOCCEUHUIVPVMCVP
      UTVOJVMVOUTQUTVHBUJRSUKULUMUBAVCBDFAVEJEFMVCBUNGBBCEFUTBUPUOPUQUR $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x ph $.  $d x A $.  $d x y B $.
    reuxfr2.1 $e |- ( y e. B -> A e. B ) $.
    reuxfr2.2 $e |- ( x e. B -> E* y ( y e. B /\ x = A ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` . $)
    reuxfr2 $p |- ( E! x e. B E. y e. B ( x = A /\ ph ) <-> E! y e. B ph ) $=
      ( cv wceq wa wrex wreu wb wtru wcel adantl wmo reuxfr2d trud ) BHZDIZAJCE
      KBELACELMNABCDECHEOZDEONFPTEOUBUAJCQNGPRS $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d x y ph $.  $d y ps $.  $d x ch $.  $d x A $.  $d x y B $.
    reuxfrd.1 $e |- ( ( ph /\ y e. B ) -> A e. B ) $.
    reuxfrd.2 $e |- ( ( ph /\ x e. B ) -> E! y e. B x = A ) $.
    reuxfrd.3 $e |- ( x = A -> ( ps <-> ch ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  Use ~ reuhypd to
       eliminate the second hypothesis. $)
    reuxfrd $p |- ( ph -> ( E! x e. B ps <-> E! y e. B ch ) ) $=
      ( wreu cv wceq wa wrex wcel reurex syl biantrurd r19.41v pm5.32i reubidva
      rexbii bitr3i syl6bb wmo weu df-reu eumo sylbi reuxfr2d bitrd ) ABDGKDLZF
      MZCNZEGOZDGKCEGKABUPDGAUMGPNZBUNEGOZBNZUPUQURBUQUNEGKZURIUNEGQRSUSUNBNZEG
      OUPUNBEGTVAUOEGUNBCJUAUCUDUEUBACDEFGHUQUTELGPUNNZEUFZIUTVBEUGVCUNEGUHVBEU
      IUJRUKUL $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x A $.  $d x y B $.
    reuxfr.1 $e |- ( y e. B -> A e. B ) $.
    reuxfr.2 $e |- ( x e. B -> E! y e. B x = A ) $.
    reuxfr.3 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( Transfer existential uniqueness from a variable ` x ` to another
       variable ` y ` contained in expression ` A ` .  Use ~ reuhyp to
       eliminate the second hypothesis. $)
    reuxfr $p |- ( E! x e. B ph <-> E! y e. B ps ) $=
      ( wreu wb wtru cv wcel adantl wceq reuxfrd trud ) ACFJBDFJKLABCDEFDMFNEFN
      LGOCMZFNSEPDFJLHOIQR $.
      $( [14-Nov-2004] $)
  $}

  ${
    $d y ph $.  $d y B $.  $d y C $.  $d x y $.
    reuhypd.1 $e |- ( ( ph /\ x e. C ) -> B e. C ) $.
    reuhypd.2 $e |- ( ( ph /\ x e. C /\ y e. C ) -> ( x = A <-> y = B ) ) $.
    $( A theorem useful for eliminating the restricted existential uniqueness
       hypotheses in ~ riotaxfrd . $)
    reuhypd $p |- ( ( ph /\ x e. C ) -> E! y e. C x = A ) $=
      ( cv wcel wa wceq weu wreu cvv elex syl eueq sylib eleq1 syl5ibrcom 3expa
      pm4.71rd wb pm5.32da bitr4d eubidv mpbid df-reu sylibr ) ABIZFJZKZCIZFJZU
      KDLZKZCMZUPCFNUMUNELZCMZURUMEOJZUTUMEFJZVAGEFPQCERSUMUSUQCUMUSUOUSKUQUMUS
      UOUMUOUSVBGUNEFTUAUCUMUOUPUSAULUOUPUSUDHUBUEUFUGUHUPCFUIUJ $.
      $( [16-Jan-2012] $)
  $}

  ${
    $d y B $.  $d y C $.  $d x y $.
    reuhyp.1 $e |- ( x e. C -> B e. C ) $.
    reuhyp.2 $e |- ( ( x e. C /\ y e. C ) -> ( x = A <-> y = B ) ) $.
    $( A theorem useful for eliminating the restricted existential uniqueness
       hypotheses in ~ reuxfr . $)
    reuhyp $p |- ( x e. C -> E! y e. C x = A ) $=
      ( wtru cv wcel wceq wreu tru adantl wb 3adant1 reuhypd mpan ) HAIZEJZSCKZ
      BELMHABCDETDEJHFNTBIZEJUAUBDKOHGPQR $.
      $( [15-Nov-2004] $)
  $}

  ${
    $d x B $.  $d x z C $.  $d x y z A $.  $d ph y z $.  $d ps x z $.
    reuunixfr.1 $e |- ( z e. C -> A. y z e. C ) $.
    reuunixfr.2 $e |- ( y e. A -> B e. A ) $.
    reuunixfr.3 $e |- ( U. { y e. A | ps } e. A -> C e. A ) $.
    reuunixfr.4 $e |- ( x = B -> ( ph <-> ps ) ) $.
    reuunixfr.5 $e |- ( y = U. { y e. A | ps } -> B = C ) $.
    reuunixfr.6 $e |- ( x e. A -> E! y e. A x = B ) $.
    $( Change the variable ` x ` in the expression for "the unique ` A ` such
       that ` ph ` " to another variable ` y ` contained in expression ` B ` .
       Use ~ reuhyp to eliminate the last hypothesis. $)
    reuunixfr $p |- ( E! x e. A ph -> U. { x e. A | ph } = C ) $=
      ( wreu crab cuni cv wcel wb rabid baib rabbiia unieqi reuxfr reucl2 reucl
      wceq hbrab1 hbuni rabxfr syl mpbird sylbi baibr reubiia biimpi ax-17 hbel
      wal wi a1i eleq1 reuuni2f syl2anc mpbid syl5eqr ) ACFOZACFPZQCRZVISZCFPZQ
      ZHVLVIVKACFVKVJFSZAACFUAZUBUCUDVHHVISZVMHUHZVHBDFOZVPABCDGFJNLUEZVRVPBDFP
      ZQZVTSZBDFUFVRWAFSZVPWBTBDFUGZABCDEGWAHFDEVTBDEFUIUJIJLMUKULUMUNVHHFSZVKC
      FOZVPVQTVHVRWEVSVRWCWEWDKULUNVHWFAVKCFVKVNAVOUOUPUQVKVPCEFHERHSCURZVPVPCU
      TVAWECEEHVIWGACEFUIUSVBVJHVIVCVDVEVFVG $.
      $( [13-Jun-2005] $)
  $}

  $( The Axiom of Union and its converse.  A class is a set iff its union is a
     set. $)
  uniexb $p |- ( A e. _V <-> U. A e. _V ) $=
    ( cvv wcel cuni uniexg cpw wss pwuni pwexg ssexg sylancr impbii ) ABCZADZBC
    ZABEOANFZGPBCMAHNBIAPBJKL $.
    $( [11-Nov-2003] $)

  $( The Axiom of Power Sets and its converse.  A class is a set iff its power
     class is a set. $)
  pwexb $p |- ( A e. _V <-> ~P A e. _V ) $=
    ( cpw cvv wcel cuni uniexb unipw eleq1i bitr2i ) ABZCDJEZCDACDJFKACAGHI $.
    $( [11-Nov-2003] $)

  $( The union of the universe is the universe.  Exercise 4.12(c) of
     [Mendelson] p. 235. $)
  univ $p |- U. _V = _V $=
    ( cvv cpw cuni pwv unieqi unipw eqtr3i ) ABZCACAHADEAFG $.
    $( [14-Sep-2003] $)

  ${
    eldifpw.1 $e |- C e. _V $.
    $( Membership in a power class difference. $)
    eldifpw $p |- ( ( A e. ~P B /\ -. C C_ B ) ->
                   ( A u. C ) e. ( ~P ( B u. C ) \ ~P B ) ) $=
      ( cpw wcel wss wn wa cun elpwi unss1 cvv wb unexg mpan2 elpwg syl syl5ibr
      cdif mpd unss simpr sylbir con3i anim12i eldif sylibr ) ABEZFZCBGZHZIACJZ
      BCJZEZFZUMUIFZHZIUMUOUITFUJUPULURUJABGZUPABKUSUPUJUMUNGZABCLUJUMMFZUPUTNU
      JCMFVADACUIMOPUMUNMQRSUAUQUKUQUMBGZUKUMBKVBUSUKIUKACBUBUSUKUCUDRUEUFUMUOU
      IUGUH $.
      $( [25-Mar-2007] $)

    $( Membership in the power class of a union. $)
    elpwun $p |- ( A e. ~P ( B u. C ) <-> ( A \ C ) e. ~P B ) $=
      ( cun cpw wcel cvv cdif wb difex2 ax-mp sylibr wss elpwg difexg syl uncom
      elex sseq2i ssundif bitri syl6rbbr bitrd pm5.21nii ) ABCEZFZGZAHGZACIZBFZ
      GZAUGSULUJHGZUIUJUKSCHGUIUMJDACHKLMUIUHAUFNZULAUFHOUIULUJBNZUNUIUMULUOJAC
      HPUJBHOQUNACBEZNUOUFUPABCRTACBUAUBUCUDUE $.
      $( [26-Mar-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( Membership in an extension of a power class. $)
    elpwunsn $p |- ( A e. ( ~P ( B u. { C } ) \ ~P B ) -> C e. A ) $=
      ( vx csn cun cpw cdif wcel wn wa eldif cv wrex wral elpwg wi sylbi imim2i
      wss dfss3 syl6bb notbid biimpa rexnal sylibr wceq elpwi ssel elsni orim2i
      wo elun ord imp3a syl eleq1 biimpd 3syl exp3a pm2.43b rexlimdv imp syldan
      com4r ) ABCEZFZGZBGZHIAVHIZAVIIZJZKZCAIZAVHVILVJVLDMZBIZJZDANZVNVMVPDAOZJ
      ZVRVJVLVTVJVKVSVJVKABTVSABVHPDABUAUBUCUDVPDAUEUFVJVRVNVJVQVNDAVJVOAIZVQVN
      QVJWAVQWAVNVJWAVQWAVNQZVJAVGTZWAVQKZVOCUGZQZWDWBQAVGUHWCWAVOVGIZQZWFAVGVO
      UIWHWAVQWEWGVQWEQZWAWGVPVOVFIZULZWIVOBVFUMWKVPWEWJWEVPVOCUJUKUNRSUOUPWEWB
      WDWEWAVNVOCAUQURSUSUTVEVAVBVCVDR $.
      $( [26-Mar-2007] $)
  $}

  ${
    op1stb.1 $e |- A e. _V $.
    op1stb.2 $e |- B e. _V $.
    $( Extract the first member of an ordered pair.  Theorem 73 of [Suppes]
       p. 42.  (See ~ op2ndb to extract the second member, ~ op1sta for an
       alternate version, and ~ op1st for the preferred version.) $)
    op1stb $p |- |^| |^| <. A , B >. = A $=
      ( cop cint csn cpr cin dfop inteqi snex prex intpr wss wceq snsspr1 df-ss
      mpbi 3eqtri intsn eqtri ) ABEZFZFAGZFAUDUEUDUEABHZHZFUEUFIZUEUCUGABCDJKUE
      UFALABMNUEUFOUHUEPABQUEUFRSTKACUAUB $.
      $( [25-Nov-2003] $)
  $}

  ${
    $d x y A $.
    iunpw.1 $e |- A e. _V $.
    $( An indexed union of a power class in terms of the power class of the
       union of its index.  Part of Exercise 24(b) of [Enderton] p. 33. $)
    iunpw $p |- ( E. x e. A x = U. A <-> ~P U. A = U_ x e. A ~P x ) $=
      ( vy cuni wceq wrex cpw ciun wcel sseq2 biimprcd reximdv com12 ssiun elpw
      cv wss eliun wa uniiun syl6sseqr impbid1 df-pw abeq2i bitri 3bitr4g eqrdv
      vex rexbii ssid uniex eleq2 syl5bbr mpbii sylib elssuni elpwi eqss sylibr
      anim12i ex reximia syl impbii ) AQZBEZFZABGZVGHZABVFHZIZFZVIDVJVLVIDQZVGR
      ZVNVFRZABGZVNVJJVNVLJZVIVOVQVOVIVQVOVHVPABVHVPVOVFVGVNKLMNVQVNABVFIVGABVF
      VNOABUAUBUCVNVGDUIPVRVNVKJZABGVQAVNBVKSVSVPABVPDVKDVFUDUEUJUFUGUHVMVGVKJZ
      ABGZVIVMVGVLJZWAVMVGVGRZWBVGUKWCVGVJJVMWBVGVGBCULPVJVLVGUMUNUOAVGBVKSUPVT
      VHABVFBJZVTVHWDVTTVFVGRZVGVFRZTVHWDWEVTWFVFBUQVGVFURVAVFVGUSUTVBVCVDVE $.
      $( [29-Nov-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y R $.
    $( A well-founded relation has no 3-cycle loops.  Special case of
       Proposition 6.23 of [TakeutiZaring] p. 30. $)
    fr3nr $p |- ( ( R Fr A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
                -. ( B R C /\ C R D /\ D R B ) ) $=
      ( vy vx wcel w3a wbr wn wral wss csn wb snssg syl mpbiri wceq notbid wrex
      wfr wa w3o cv ctp cvv c0 wne tpex a1i simpl cpr df-tp simpr1 simpr2 prssi
      cun syl2anc simpr3 snssd unssd syl5eqss snsstp1 ne0i fri syl22anc ralbidv
      breq2 rextpg adantl mpbid wi snsstp3 breq1 rcla4v 3orim123d 3ianor sylibr
      snsstp2 mpd 3anrot sylnib ) AEUBZBAHZCAHZDAHZIZUCZDBEJZBCEJZCDEJZIZWKWLWJ
      IWIWJKZWKKZWLKZUDZWMKWIFUEZBEJZKZFBCDUFZLZWRCEJZKZFXALZWRDEJZKZFXALZUDZWQ
      WIWRGUEZEJZKZFXALZGXAUAZXIWIXAUGHZWDXAAMXAUHUIZXNXOWIBCDUJUKWDWHULWIXABCU
      MZDNZURABCDUNWIXQXRAWIWEWFXQAMWDWEWFWGUOZWDWEWFWGUPZBCAUQUSWIDAWDWEWFWGUT
      ZVAVBVCWIBXAHZXPWIYBBNXAMZBCDVDWIWEYBYCOXSBXAAPQRZXABVEQGFAXAUGEVFVGWHXNX
      IOWDXMXBXEXHGBCDAAAXJBSZXLWTFXAYEXKWSXJBWREVITVHXJCSZXLXDFXAYFXKXCXJCWREV
      ITVHXJDSZXLXGFXAYGXKXFXJDWREVITVHVJVKVLWIXBWNXEWOXHWPWIDXAHZXBWNVMWIYHXRX
      AMZBCDVNWIWGYHYIOYADXAAPQRWTWNFDXAWRDSWSWJWRDBEVOTVPQWIYBXEWOVMYDXDWOFBXA
      WRBSXCWKWRBCEVOTVPQWICXAHZXHWPVMWIYJCNXAMZBCDVTWIWFYJYKOXTCXAAPQRXGWPFCXA
      WRCSXFWLWRCDEVOTVPQVQWAWJWKWLVRVSWJWKWLWBWC $.
      $( [22-Jun-2015] $) $( [10-Apr-1994] $)
  $}

  $( A set well-founded by epsilon contains no 3-cycle loops. $)
  epne3 $p |- ( ( _E Fr A /\ ( B e. A /\ C e. A /\ D e. A ) ) ->
                -. ( B e. C /\ C e. D /\ D e. B ) ) $=
    ( cep wfr wcel w3a wa wbr fr3nr wb epelg 3ad2ant2 3ad2ant3 3anbi123d adantl
    3ad2ant1 mtbid ) AEFZBAGZCAGZDAGZHZIBCEJZCDEJZDBEJZHZBCGZCDGZDBGZHZABCDEKUD
    UHULLTUDUEUIUFUJUGUKUBUAUEUILUCBCAMNUCUAUFUJLUBCDAMOUAUBUGUKLUCDBAMRPQS $.
    $( [22-Jun-2015] $) $( [19-Apr-1994] $)

  ${
    $d x y z R $.  $d x y z A $.
    $( Alternate definition of well-ordering.  Definition 6.24(2) of
       [TakeutiZaring] p. 30.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    dfwe2 $p |- ( R We A <-> ( R Fr A /\ A. x e. A A. y e. A
                ( x R y \/ x = y \/ y R x ) ) ) $=
      ( vz wa cv wbr wceq w3o wral wn wi wcel w3a wal breq2 r3al 3imtr4g ralbii
      wwe wfr wor df-we df-so simpr ax-1 fr2nr 3adantr3 anbi2d notbid syl5ibcom
      wpo a1i pm2.21 syl6 fr3nr df-3an biimpri ancoms pm2.21d exp3a 3jaod frirr
      nsyl 3ad2antr1 jctild a2d alimdv 2alimdv ralidm equequ2 3orbi123d cbvralv
      ex breq1 bitr3i df-po ancrd impbid2 syl5bb pm5.32i bitri ) CDUACDUBZCDUCZ
      FWDAGZBGZDHZWFWGIZWGWFDHZJZBCKZACKZFCDUDWDWEWMWECDUMZWMFZWDWMABCDUEWDWOWM
      WNWMUFWDWMWNWDWFEGZDHZWFWPIZWPWFDHZJZECKZBCKZACKZWFWFDHLZWHWGWPDHZFZWQMZF
      ZECKBCKACKZWMWNWDWFCNZWGCNZWPCNZOZWTMZEPZBPAPXMXHMZEPZBPAPXCXIWDXOXQABWDX
      NXPEWDXMWTXHWDXMWTXHMWDXMFZWTXGXDXRWQXGWRWSWQXGMXRWQXFUGUNXRWRXFLZXGXRWHW
      JFZLZWRXSWDXJXKYAXLCWFWGDUHUIWRXTXFWRWJXEWHWFWPWGDQUJUKULXFWQUOUPXRWSXFWQ
      XRWSXFFZWQXRWHXEWSOZYBCWFWGWPDUQXFWSYCYCXFWSFWHXEWSURUSUTVEVAVBVCWDXKXJXD
      XLCWFDVDVFVGVOVHVIVJWTABECCCRXHABECCCRSWLXBACWLWLBCKXBWKBCVKWLXABCWKWTBEC
      WGWPIWHWQWIWRWJWSWGWPWFDQBEAVLWGWPWFDVPVMVNTVQTABECDVRSVSVTWAWBWC $.
      $( [12-Aug-2011] $) $( [16-Mar-1997] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Ordinals (continued)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x y $.
    $( The class of all ordinal numbers is ordinal.  Proposition 7.12 of
       [TakeutiZaring] p. 38, but without using the Axiom of Regularity. $)
    ordon $p |- Ord On $=
      ( vx vy con0 word wtr cep wwe tron wfr cv wbr wceq w3o wral onfr eloni wa
      wcel epel mpbir2an ordtri3or 3orbi123i sylibr syl2an rgen2a dfwe2 df-ord
      biid ) CDCECFGZHUICFIAJZBJZFKZUJUKLZUKUJFKZMZBCNACNOUOABCUJCRUJDZUKDZUOUK
      CRUJPUKPUPUQQUJUKRZUMUKUJRZMUOUJUKUAULURUMUMUNUSABSUMUHBASUBUCUDUEABCFUFT
      CUGT $.
      $( [17-May-1994] $)
  $}

  $( The epsilon relation well-orders the class of ordinal numbers.
     Proposition 4.8(g) of [Mendelson] p. 244. $)
  epweon $p |- _E We On $=
    ( con0 word cep wwe ordon ordwe ax-mp ) ABACDEAFG $.
    $( [1-Nov-2003] $)

  $( No set contains all ordinal numbers.  Proposition 7.13 of [TakeutiZaring]
     p. 38, but without using the Axiom of Regularity.  This is also known as
     the Burali-Forti paradox (remark in [Enderton] p. 194).  In 1897, Cesare
     Burali-Forti noticed that since the "set" of all ordinal numbers is an
     ordinal class ( ~ ordon ), it must be both an element of the set of all
     ordinal numbers yet greater than every such element.  ZF set theory
     resolves this paradox by not allowing the class of all ordinal numbers to
     be a set (so instead it is a proper class).  Here we prove the denial of
     its existence. $)
  onprc $p |- -. On e. _V $=
    ( con0 cvv wcel word wn ordon ordirr ax-mp elong mpbiri mto ) ABCZAACZADZME
    FAGHLMNFABIJK $.
    $( [18-May-1994] $)

  ${
    $d x y A $.
    $( The union of a class of ordinal numbers is ordinal.  Proposition 7.19 of
       [TakeutiZaring] p. 40.  (The proof was shortened by Andrew Salmon,
       12-Aug-2011.) $)
    ssorduni $p |- ( A C_ On -> Ord U. A ) $=
      ( vx vy con0 wss cuni wtr word cv wral wcel wrex eluni2 wa wi ssel onelss
      syl6 rexlimdv syl5bi anc2r syl ssuni syl8 ralrimiv dftr3 sylibr onelon ex
      ssrdv ordon trssord 3exp mpii sylc ) ADEZAFZGZUQDEZUQHZUPBIZUQEZBUQJURUPV
      BBUQVAUQKZVACIZKZCALZUPVBCVAAMZUPVEVBCAUPVDAKZVEVAVDEZVHNZVBUPVHVEVIOZOVH
      VEVJOOUPVHVDDKZVKADVDPZVDVAQRVHVEVIUAUBVAVDAUCUDSTUEBUQUFUGUPBUQDVCVFUPVA
      DKZVGUPVEVNCAUPVHVLVEVNOVMVLVEVNVDVAUHUIRSTUJURUSDHZUTUKURUSVOUTUQDULUMUN
      UO $.
      $( [12-Aug-2011] $) $( [30-May-1994] $)
  $}

  $( The union of a set of ordinal numbers is an ordinal number.  Theorem 9 of
     [Suppes] p. 132. $)
  ssonuni $p |- ( A e. V -> ( A C_ On -> U. A e. On ) ) $=
    ( con0 wss cuni wcel word ssorduni cvv wb uniexg elong syl syl5ibr ) ACDAEZ
    CFZABFZOGZAHQOIFPRJABKOILMN $.
    $( [1-Nov-2003] $)

  ${
    ssonuni.1 $e |- A e. _V $.
    $( The union of a set of ordinal numbers is an ordinal number.  Corollary
       7N(d) of [Enderton] p. 193. $)
    ssonunii $p |- ( A C_ On -> U. A e. On ) $=
      ( cvv wcel con0 wss cuni wi ssonuni ax-mp ) ACDAEFAGEDHBACIJ $.
      $( [20-Sep-2003] $)
  $}

  $( A way to express the ordinal property of a class in terms of the class of
     ordinal numbers.  Corollary 7.14 of [TakeutiZaring] p. 38 and its
     converse. $)
  ordeleqon $p |- ( Ord A <-> ( A e. On \/ A = On ) ) $=
    ( word con0 wcel wceq wo cvv onprc elex mto w3o ordon ordtri3or mpan2 sylib
    df-3or ord mt3i eloni ordeq mpbiri jaoi impbii ) ABZACDZACEZFZUDUGCADZUHCGD
    HCAIJUDUGUHUDUEUFUHKZUGUHFUDCBZUILACMNUEUFUHPOQRUEUDUFASUFUDUJLACTUAUBUC $.
    $( [1-Jun-2003] $)

  $( Any ordinal class is a subclass of the class of ordinal numbers.
     Corollary 7.15 of [TakeutiZaring] p. 38.  (The proof was shortened by
     Andrew Salmon, 12-Aug-2011.) $)
  ordsson $p |- ( Ord A -> A C_ On ) $=
    ( word con0 wss ordon wa wcel wceq ordeleqon biimpi adantr ordsseleq mpbird
    wo mpan2 ) ABZCBZACDZEPQFRACGACHNZPSQPSAIJKACLMO $.
    $( [12-Aug-2011] $) $( [18-May-1994] $)

  $( An ordinal number is a subset of the class of ordinal numbers. $)
  onss $p |- ( A e. On -> A C_ On ) $=
    ( con0 wcel word wss eloni ordsson syl ) ABCADABEAFAGH $.
    $( [5-Jun-1994] $)

  $( Two ways of saying a class of ordinals is unbounded.  (Contributed by
     Mario Carneiro, 8-Jun-2013.) $)
  ssonprc $p |- ( A C_ On -> ( A e/ _V <-> U. A = On ) ) $=
    ( cvv wnel wcel wn con0 wss cuni wceq df-nel word ssorduni ordeleqon orcomd
    wo sylib ord elex uniexb sylibr syl6 con1d onprc uniexg syl5ib mtoi impbid1
    eleq1 syl5bb ) ABCABDZEZAFGZAHZFIZABJULUKUNULUNUJULUNEUMFDZUJULUNUOULUOUNUL
    UMKUOUNOALUMMPNQUOUMBDZUJUMFRASTUAUBUNUJFBDZUCUJUPUNUQABUDUMFBUHUEUFUGUI $.
    $( [8-Jun-2013] $)

  $( The union of an ordinal number is an ordinal number. $)
  onuni $p |- ( A e. On -> U. A e. On ) $=
    ( con0 wcel wss cuni onss ssonuni mpd ) ABCABDAEBCAFABGH $.
    $( [29-Sep-2006] $)

  $( The union of an ordinal class is ordinal. $)
  orduni $p |- ( Ord A -> Ord U. A ) $=
    ( word con0 wss cuni ordsson ssorduni syl ) ABACDAEBAFAGH $.
    $( [12-Sep-2003] $)

  ${
    $d x y z A $.
    $( The intersection (infimum) of a non-empty class of ordinal numbers
       belongs to the class.  Compare Exercise 4 of [TakeutiZaring] p. 45. $)
    onint $p |- ( ( A C_ On /\ A =/= (/) ) -> |^| A e. A ) $=
      ( vx vy vz con0 wss c0 wne cint wcel wa cv wceq wrex word ssel wral exp32
      cin wi ordon tz7.5 mp3an1 imdistani wn ontri1 sylan9 com4r imp31 ralimdva
      syl6bir ex disj vex elint2 sylan2 com4l imp32 ssrdv intss1 ad2antrl eqssd
      3imtr4g eleq1d biimpd com34 pm2.43d rexlimdv syl5 anabsi5 ) AEFZAGHZAIZAJ
      ZVKVLKABLZSGMZBANZVKVNEOVKVLVQUABEAUBUCVKVPVNBAVKVOAJZVPVNTVKVRVPVRVNVKVR
      VPVRVNTVKVRVPKKZVRVNVSVOVMAVSVOVMVSCVOVMVKVRVPCLZVOJZVTVMJZTWAVKVRVPWBWAV
      KVRVPWBTZVKVRKWAVKVOEJZKZWCVKVRWDAEVOPUDWAWEKZDLZVOJUEZDAQVTWGJZDAQVPWBWF
      WHWIDAWAWEWGAJZWHWITWEWJWHWAWIVKWJWGEJZWDWHWAWITZTZAEWGPWDWKWMWDWKKWHVOWG
      FWLVOWGUFVOWGVTPUKULUGUHUIUJDAVOUMDVTACUNUOVCUPRUQURUSVRVMVOFVKVPVOAUTVAV
      BVDVERVFVGVHVIVJ $.
      $( [18-Mar-2007] $) $( [31-Jan-1997] $)
  $}

  $( The intersection of a class of ordinal numbers is zero iff the class
     contains zero. $)
  onint0 $p |- ( A C_ On -> ( |^| A = (/) <-> (/) e. A ) ) $=
    ( con0 wss cint c0 wceq wcel wa wne cvv 0ex eleq1 mpbiri intex sylibr onint
    sylan2 wb adantl mpbid ex int0el impbid1 ) ABCZADZEFZEAGZUDUFUGUDUFHUEAGZUG
    UFUDAEIZUHUFUEJGZUIUFUJEJGKUEEJLMANOAPQUFUHUGRUDUEEALSTUAAUBUC $.
    $( [24-Apr-2004] $)

  ${
    $d x y A $.
    $( A non-empty class of ordinal numbers has a smallest member.  Exercise 9
       of [TakeutiZaring] p. 40. $)
    onssmin $p |- ( ( A C_ On /\ A =/= (/) ) -> E. x e. A A. y e. A x C_ y ) $=
      ( con0 wss c0 wne wa cint wcel cv wral wrex onint rgen wceq sseq1 ralbidv
      intss1 rcla4ev sylancl ) CDECFGHCIZCJUBBKZEZBCLZAKZUCEZBCLZACMCNUDBCUCCSO
      UHUEAUBCUFUBPUGUDBCUFUBUCQRTUA $.
      $( [30-May-2007] $) $( [3-Oct-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.
    onminsb.1 $e |- ( ps -> A. x ps ) $.
    onminsb.2 $e |- ( x = |^| { x e. On | ph } -> ( ph <-> ps ) ) $.
    $( If a property is true for some ordinal number, it is true for a minimal
       ordinal number.  This version uses implicit substitution.  Theorem
       Schema 62 of [Suppes] p. 228. $)
    onminsb $p |- ( E. x e. On ph -> ps ) $=
      ( vy con0 wrex crab cint wcel c0 wne rabn0 wss ssrab2 onint sylbir hbrab1
      mpan hbint cv ax-17 elrabf simprbi syl ) ACGHZACGIZJZUHKZBUGUHLMZUJACGNUH
      GOUKUJACGPUHQTRUJUIGKBABCFUIGCFUHACFGSUAFUBGKCUCDEUDUEUF $.
      $( [3-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( If a property is true for some ordinal number, it is true for a minimal
       ordinal number.  This version uses explicit substitution.  Theorem
       Schema 62 of [Suppes] p. 228. $)
    onminesb $p |- ( E. x e. On ph -> [ |^| { x e. On | ph } / x ] ph ) $=
      ( vy con0 wrex crab cint wcel wsbc wne rabn0 wss ssrab2 onint mpan sylbir
      c0 cv ax-17 elrabsf simprbi syl ) ABDEZABDFZGZUDHZABUEIZUCUDQJZUFABDKUDDL
      UHUFABDMUDNOPUFUEDHUGABCUEDCRDHBSTUAUB $.
      $( [29-Sep-2003] $)
  $}

  $( The intersection of a non-empty collection of ordinal numbers is an
     ordinal number.  Compare Exercise 6 of [TakeutiZaring] p. 44. $)
  oninton $p |- ( ( A C_ On /\ A =/= (/) ) -> |^| A e. On ) $=
    ( con0 wss c0 wne cint wcel onint ex ssel syld imp ) ABCZADEZAFZBGZMNOAGZPM
    NQAHIABOJKL $.
    $( [20-Mar-2007] $) $( [29-Jan-1997] $)

  $( The intersection of a class of ordinal numbers exists iff it is an ordinal
     number. $)
  onintrab $p |- ( |^| { x e. On | ph } e. _V <->
                 |^| { x e. On | ph } e. On ) $=
    ( con0 crab cint cvv wcel c0 wne wss ssrab2 oninton mpan sylbir elex impbii
    intex ) ABCDZEZFGZSCGZTRHIZUARQRCJUBUAABCKRLMNSCOP $.
    $( [6-Nov-2003] $)

  $( An existence condition equivalent to an intersection's being an ordinal
     number. $)
  onintrab2 $p |- ( E. x e. On ph <-> |^| { x e. On | ph } e. On ) $=
    ( con0 wrex crab cint cvv wcel intexrab onintrab bitri ) ABCDABCEFZGHLCHABC
    IABJK $.
    $( [6-Nov-2003] $)

  $( No member of a set of ordinal numbers belongs to its minimum. $)
  onnmin $p |- ( ( A C_ On /\ B e. A ) -> -. B e. |^| A ) $=
    ( con0 wss wcel wa cint wn intss1 adantl wb c0 wne ne0i sylan2 ssel2 ontri1
    oninton syl2anc mpbid ) ACDZBAEZFZAGZBDZBUDEHZUBUEUABAIJUCUDCEZBCEUEUFKUBUA
    ALMUGABNAROACBPUDBQST $.
    $( [2-Feb-1997] $)

  ${
    $d x A $.  $d x ps $.
    onnminsb.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( An ordinal number smaller than the minimum of a set of ordinal numbers
       does not have the property determining that set. ` ps ` is the wff
       resulting from the substitution of ` A ` for ` x ` in wff ` ph ` . $)
    onnminsb $p |- ( A e. On -> ( A e. |^| { x e. On | ph } -> -. ps ) ) $=
      ( con0 wcel crab cint wn wa elrab wss ssrab2 onnmin mpan sylbir ex con2d
      ) DFGZBDACFHZIGZTBUBJZTBKDUAGZUCABCDFELUAFMUDUCACFNUADOPQRS $.
      $( [9-Nov-2003] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A way to show that an ordinal number equals the minimum of a non-empty
       collection of ordinal numbers: it must be in the collection, and it must
       not be larger than any member of the collection. $)
    oneqmin $p |- ( ( B C_ On /\ B =/= (/) ) -> ( A = |^| B <->
                  ( A e. B /\ A. x e. A -. x e. B ) ) ) $=
      ( con0 wss c0 wne wa cint wceq wcel cv wn onint eleq1 syl5ibrcom wi eleq2
      wral adantr biimpd onnmin ex con2d syl9r ralrimdv jcad oneqmini impbid )
      CDEZCFGZHZBCIZJZBCKZALZCKZMZABSZHZULUNUOUSULUOUNUMCKCNBUMCOPUJUNUSQUKUJUN
      URABUNUPBKZUPUMKZUJURUNVAVBBUMUPRUAUJUQVBUJUQVBMCUPUBUCUDUEUFTUGUJUTUNQUK
      ABCUHTUI $.
      $( [10-May-2007] $) $( [14-Nov-2003] $)
  $}

  ${
    $d x y A $.
    bm2.5ii.1 $e |- A e. _V $.
    $( Problem 2.5(ii) of [BellMachover] p. 471. $)
    bm2.5ii $p |- ( A C_ On -> U. A = |^| { x e. On | A. y e. A y C_ x } ) $=
      ( con0 wss cuni wcel cv wral crab cint wceq ssonunii wb unissb a1i inteqi
      rabbiia intmin syl5reqr syl ) CEFCGZEHZUCBIAIZFBCJZAEKZLZMCDNUDUHUCUEFZAE
      KZLUCUJUGUIUFAEUIUFOUEEHBCUEPQSRAUCETUAUB $.
      $( [20-Sep-2003] $)
  $}

  ${
    $d x y $.  $d y ph $.  $d x ps $.
    onminex.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    $( If a wff is true for an ordinal number, there is a smallest ordinal
       number for which it is true. $)
    onminex $p |- ( E. x e. On ph -> E. x e. On ( ph /\ A. y e. x -. ps ) ) $=
      ( cv con0 wcel wa wex wn wrex wi wal mpan ex wceq eleq1 anbi12d df-rex c0
      wral cab wne cint wss ssab2 onint oninton onelon elab onnmin sylbir con2d
      syl vex syli alrimiv hbab1 hbint hbel ax-17 hbim hbal eleq2 imbi1d albidv
      hban cla4egf anabsi5 syl2anc abn0 abid bicomi df-ral anbi12i anass bitr3i
      exbii 3imtr3i 3imtr4i ) CFZGHZAIZCJZWCABKZDWBUBZIZIZCJZACGLWHCGLWDCUCZUAU
      DZWBWKHZDFZWBHZWFMZDNZIZCJZWEWJWLWKUEZWKHZWNWTHZWFMZDNZWSWKGUFZWLXAACGUGZ
      WKUHOWLXCDXBWLWNGHZWFWLWTGHZXBXGMXEWLXHXFWKUIOXHXBXGWTWNUJPUOXGBXBXGBXBKZ
      XGBIZWNWKHZXIWDXJCWNDUPWBWNQWCXGABWBWNGRESUKXEXKXIXFWKWNULOUMPUNUQURXAXDW
      SWRXAXDICDWTWKCDWKWDCDUSZUTZXAXDCCDDWTWKXMXLVAXCCDXBWFCXMWFCVBVCVDVHWBWTQ
      ZWMXAWQXDWBWTWKRXNWPXCDXNWOXBWFWBWTWNVEVFVGSVIVJVKWDCVLWRWICWRWDWGIWIWDWM
      WGWQWMWDWDCVMVNWFDWBVOVPWCAWGVQVRVSVTACGTWHCGTWA $.
      $( [2-Feb-1997] $)
  $}

  $( The class of all ordinal numbers is its own successor. $)
  sucon $p |- suc On = On $=
    ( con0 cvv wcel wn csuc wceq onprc sucprc ax-mp ) ABCDAEAFGAHI $.
    $( [12-Sep-2003] $)

  $( A successor exists iff its class argument exists. $)
  sucexb $p |- ( A e. _V <-> suc A e. _V ) $=
    ( cvv wcel csn wa cun csuc unexb snex biantru df-suc eleq1i 3bitr4i ) ABCZA
    DZBCZEAOFZBCNAGZBCAOHPNAIJRQBAKLM $.
    $( [22-Jun-1998] $)

  $( The successor of a set is a set (generalization). $)
  sucexg $p |- ( A e. V -> suc A e. _V ) $=
    ( wcel cvv csuc elex sucexb sylib ) ABCADCAEDCABFAGH $.
    $( [5-Jun-1994] $)

  ${
    sucex.1 $e |- A e. _V $.
    $( The successor of a set is a set. $)
    sucex $p |- suc A e. _V $=
      ( cvv wcel csuc sucexg ax-mp ) ACDAECDBACFG $.
      $( [30-Aug-1993] $)
  $}

  ${
    $d x A $.
    $( The minimum of a class of ordinal numbers is less than the minimum of
       that class with its minimum removed. $)
    onmindif2 $p |- ( ( A C_ On /\ A =/= (/) ) ->
                   |^| A e. |^| ( A \ { |^| A } ) ) $=
      ( vx con0 wss c0 wne wa cint cdif wcel cv wral eldifsn wn wceq wo adantlr
      csn wb cvv onnmin oninton adantr ssel2 ontri1 onsseleq bitr3d syl2anc ord
      mpbid eqcom syl6ib necon1ad expimpd syl5bi ralrimiv elintg adantl mpbird
      intex sylbi ) ACDZAEFZGZAHZAVERIZHJZVEBKZJZBVFLZVDVIBVFVHVFJVHAJZVHVEFZGV
      DVIVHAVEMVDVKVLVIVDVKGZVIVHVEVMVINVEVHOZVHVEOVMVIVNVMVHVEJNZVIVNPZVBVKVOV
      CAVHUAQVMVECJZVHCJZVOVPSVDVQVKAUBUCVBVKVRVCACVHUDQVQVRGVEVHDVOVPVEVHUEVEV
      HUFUGUHUJUIVEVHUKULUMUNUOUPVCVGVJSZVBVCVETJVSAUTBVEVFTUQVAURUS $.
      $( [28-May-2007] $) $( [20-Nov-2003] $)
  $}

  ${
    $d x A $.
    $( The successor of an ordinal number is an ordinal number.  Proposition
       7.24 of [TakeutiZaring] p. 41. $)
    suceloni $p |- ( A e. On -> suc A e. On ) $=
      ( vx con0 wcel csuc word wtr wss cv wral csn wo onelss wi wceq elsn sylbi
      eqimss a1i cvv orim12d cun df-suc eleq2i elun oridm 3imtr3g sssucid sstr2
      bitr2i syl6mpi ralrimiv dftr3 sylibr onss snssi unssd syl5eqss ordon 3exp
      trssord mpii sylc wb sucexg elong syl mpbird ) ACDZAEZCDZVJFZVIVJGZVJCHZV
      LVIBIZVJHZBVJJVMVIVPBVJVIVOVJDZVOAHZAVJHVPVIVOADZVOAKZDZLZVRVRLVQVRVIVSVR
      WAVRAVOMWAVRNVIWAVOAOVRBAPVOARQSUAVQVOAVTUBZDWBVJWCVOAUCZUDVOAVTUEUJVRUFU
      GAUHVOAVJUIUKULBVJUMUNVIVJWCCWDVIAVTCAUOACUPUQURVMVNCFZVLUSVMVNWEVLVJCVAU
      TVBVCVIVJTDVKVLVDACVEVJTVFVGVH $.
      $( [6-Jun-1994] $)
  $}

  $( The successor of an ordinal class is ordinal. $)
  ordsuc $p |- ( Ord A <-> Ord suc A ) $=
    ( cvv wcel word csuc wb elong suceloni eloni syl syl6bir sucidg ordelord ex
    con0 syl5com impbid wn wceq sucprc eqcomd ordeq pm2.61i ) ABCZADZAEZDZFZUDU
    EUGUDUEAOCZUGABGUIUFOCUGAHUFIJKUDAUFCZUGUEABLUGUJUEUFAMNPQUDRZAUFSUHUKUFAAT
    UAAUFUBJUC $.
    $( [3-Apr-1995] $)

  ${
    $d x A $.
    $( The collection of ordinals in the power class of an ordinal is its
       successor. $)
    ordpwsuc $p |- ( Ord A -> ( ~P A i^i On ) = suc A ) $=
      ( vx word cpw con0 cin csuc cv wcel wss elin vex elpw anbi1i ancom 3bitri
      wa wb ordsssuc expcom pm5.32d simpr wi ordsuc ordelon sylbi ancrd impbid2
      ex bitrd syl5bb eqrdv ) ACZBADZEFZAGZBHZUOIZUQEIZUQAJZQZUMUQUPIZURUQUNIZU
      SQUTUSQVAUQUNEKVCUTUSUQABLMNUTUSOPUMVAUSVBQZVBUMUSUTVBUSUMUTVBRUQASTUAUMV
      DVBUSVBUBUMVBUSUMUPCZVBUSUCAUDVEVBUSUPUQUEUIUFUGUHUJUKUL $.
      $( [30-Jan-2005] $)

    $( The collection of ordinal numbers in the power set of an ordinal number
       is its successor. $)
    onpwsuc $p |- ( A e. On -> ( ~P A i^i On ) = suc A ) $=
      ( con0 wcel word cpw cin csuc wceq eloni ordpwsuc syl ) ABCADAEBFAGHAIAJK
      $.
      $( [19-Oct-2004] $)
  $}

  $( The successor of an ordinal number is an ordinal number. $)
  sucelon $p |- ( A e. On <-> suc A e. On ) $=
    ( word cvv wcel wa csuc con0 ordsuc sucexb anbi12i elon2 3bitr4i ) ABZACDZE
    AFZBZOCDZEAGDOGDMPNQAHAIJAKOKL $.
    $( [9-Sep-2003] $)

  $( The successor of an element of an ordinal class is a subset of it. $)
  ordsucss $p |- ( Ord B -> ( A e. B -> suc A C_ B ) ) $=
    ( word wcel csuc wss wi wa ordelord wn ordnbtwn imnan sylibr adantr ordtri1
    wb ordsuc sylanb sylibrd pm2.43b sylan exp31 ) BCZABDZAEZBFZUDUCUDUFGZUCUDU
    CUGUCUDHACZUCUGBAIUHUCHUDBUEDZJZUFUHUDUJGZUCUHUDUIHJUKABKUDUILMNUHUECUCUFUJ
    PAQUEBORSUAUBTT $.
    $( [21-Jun-1998] $)

  $( An ordinal number is a proper subset of its successor.  (Contributed by
     Stefan O'Rear, 18-Nov-2014.) $)
  onpsssuc $p |- ( A e. On -> A C. suc A ) $=
    ( con0 wcel csuc wpss sucidg word eloni ordsuc sylib ordelpss syl2anc mpbid
    wb ) ABCZAADZCZAPEZABFOAGZPGZQRNAHZOSTUAAIJAPKLM $.
    $( [18-Nov-2014] $)

  $( A set belongs to an ordinal iff its successor is a subset of the ordinal.
     Exercise 8 of [TakeutiZaring] p. 42 and its converse. $)
  ordelsuc $p |- ( ( A e. C /\ Ord B ) -> ( A e. B <-> suc A C_ B ) ) $=
    ( wcel word wa csuc wss wi ordsucss adantl sucssel adantr impbid ) ACDZBEZF
    ABDZAGBHZPQRIOABJKORQIPABCLMN $.
    $( [29-Nov-2003] $)

  ${
    $d x A $.
    $( The successor of an ordinal number is the smallest larger ordinal
       number. $)
    onsucmin $p |- ( A e. On -> suc A = |^| { x e. On | A e. x } ) $=
      ( con0 wcel cv crab cint csuc wss word wb ordelsuc sylan2 rabbidva inteqd
      eloni wceq sucelon intmin sylbi eqtr2d ) BCDZBAEZDZACFZGBHZUCIZACFZGZUFUB
      UEUHUBUDUGACUCCDUBUCJUDUGKUCPBUCCLMNOUBUFCDUIUFQBRAUFCSTUA $.
      $( [28-Nov-2003] $)
  $}

  $( Membership is inherited by successors.  Generalization of Exercise 9 of
     [TakeutiZaring] p. 42.  (The proof was shortened by Andrew Salmon,
     12-Aug-2011.) $)
  ordsucelsuc $p |- ( Ord B -> ( A e. B <-> suc A e. suc B ) ) $=
    ( word wcel csuc wa simpl ordelord jca ordsuc sylibr sylanb cvv wb wss wceq
    wi wo adantr elex ancoms adantl ordsucss sucssel impbid sucexb elsucg sylbi
    ordsseleq ad2antrl 3bitr4d ex wn pm5.21ni a1d pm2.61i pm5.21nd ) BCZABDZAEZ
    BEZDZURACZFZURUSFURVCURUSGBAHIURVBFURVCURVBGURVACZVBVCBJVEVBFUTCZVCVAUTHAJZ
    KLIAMDZVDUSVBNZQVHVDVIVHVDFZUTBOZUTBDUTBPRZUSVBVDVKVLNZVHVCURVMVCVFURVMVGUT
    BUILUAUBVJUSVKURUSVKQVHVCABUCUJVHVKUSQVDABMUDSUEVHVBVLNZVDVHUTMDZVNAUFZUTBM
    UGUHSUKULVHUMVIVDUSVHVBABTVBVOVHUTVATVPKUNUOUPUQ $.
    $( [12-Aug-2011] $) $( [22-Jun-1998] $)

  $( The subclass relationship between two ordinal classes is inherited by
     their successors. $)
  ordsucsssuc $p |- ( ( Ord A /\ Ord B ) -> ( A C_ B <-> suc A C_ suc B ) ) $=
    ( word wa wcel wn csuc wss ordsucelsuc notbid adantr ordtri1 ordsuc syl2anb
    wb 3bitr4d ) ACZBCZDBAEZFZBGZAGZEZFZABHUBUAHZQTUDORQSUCBAIJKABLQUBCUACUEUDO
    RAMBMUBUALNP $.
    $( [4-Oct-2003] $)

  $( Given an element ` A ` of the union of an ordinal ` B ` , ` suc A ` is an
     element of ` B ` itself.  (Contributed by Scott Fenton, 28-Mar-2012.)
     (The proof was shortened by Mario Carneiro, 29-May-2015.) $)
  ordsucuniel $p |- ( Ord B -> ( A e. U. B <-> suc A e. B ) ) $=
    ( word cuni wcel csuc wi orduni ordelord ex syl wa ordsuc sylibr wb wn con0
    wss sylan ordtri1 ordsson ordunisssuc sylan2b 3bitr3d con4bid pm5.21ndd ) B
    CZACZABDZEZAFZBEZUGUICZUJUHGBHZUMUJUHUIAIJKUGULUHUGULLUKCZUHBUKIAMZNJUGUHUJ
    ULOUGUHLZUJULUQUIARZBUKRZUJPZULPZUGBQRUHURUSOBUABAUBSUGUMUHURUTOUNUIATSUHUG
    UOUSVAOUPBUKTUCUDUEJUF $.
    $( [29-May-2015] $) $( [28-Mar-2012] $)

  ${
    $d x A $.  $d x B $.
    $( The successor of the maximum (i.e. union) of two ordinals is the maximum
       of their successors. $)
    ordsucun $p |- ( ( Ord A /\ Ord B ) ->
               suc ( A u. B ) = ( suc A u. suc B ) ) $=
      ( vx word wa cun csuc cv con0 wcel wi ordun ordsuc ordelon ex wb ordsssuc
      syl wo wss syl2anb ordssun adantl adantrr adantrl orbi12d 3bitr3d syl6bbr
      sylbi sylan2 elun expcom pm5.21ndd eqrdv ) ADZBDZEZCABFZGZAGZBGZFZUQCHZIJ
      ZVCUSJZVCVBJZUQURDZVEVDKZABLZVGUSDZVHURMVJVEVDUSVCNOUIRUOUTDZVADZVFVDKZUP
      AMBMVKVLEVBDZVMUTVALVNVFVDVBVCNORUAVDUQVEVFPVDUQEZVEVCUTJZVCVAJZSZVFVOVCU
      RTZVCATZVCBTZSZVEVRUQVSWBPVDVCABUBUCUQVDVGVSVEPVIVCURQUJVOVTVPWAVQVDUOVTV
      PPUPVCAQUDVDUPWAVQPUOVCBQUEUFUGVCUTVAUKUHULUMUN $.
      $( [28-Nov-2003] $)
  $}

  $( The maximum of two ordinals is equal to one of them. $)
  ordunpr $p |- ( ( B e. On /\ C e. On ) -> ( B u. C ) e. { B , C } ) $=
    ( con0 wcel wa cun cpr wceq wss word eloni ordtri2or2 syl2an orcomd ssequn2
    wo ssequn1 orbi12i sylib cvv wb unexg elprg syl mpbird ) ACDZBCDZEZABFZABGD
    ZUIAHZUIBHZPZUHBAIZABIZPUMUHUOUNUFAJBJUOUNPUGAKBKABLMNUNUKUOULBAOABQRSUHUIT
    DUJUMUAABCCUBUIABTUCUDUE $.
    $( [25-Jun-2015] $)

  $( The maximum of two ordinals belongs to a third if each of them do. $)
  ordunel $p |- ( ( Ord A /\ B e. A /\ C e. A ) -> ( B u. C ) e. A ) $=
    ( word wcel w3a cpr cun wss 3adant1 ordelon 3adant3 3adant2 ordunpr syl2anc
    prssi con0 sseldd ) ADZBAEZCAEZFZBCGZABCHZTUAUCAISBCAPJUBBQEZCQEZUDUCESTUEU
    AABKLSUAUFTACKMBCNOR $.
    $( [25-Jun-2015] $) $( [18-Sep-2006] $)

  $( A class of ordinal numbers is a subclass of the successor of its union.
     Similar to Proposition 7.26 of [TakeutiZaring] p. 41. $)
  onsucuni $p |- ( A C_ On -> A C_ suc U. A ) $=
    ( con0 wss cuni word csuc ssorduni wa ssid ordunisssuc mpbii mpdan ) ABCZAD
    ZEZANFCZAGMOHNNCPNIANJKL $.
    $( [19-Sep-2003] $)

  $( An ordinal class is a subclass of the successor of its union. $)
  ordsucuni $p |- ( Ord A -> A C_ suc U. A ) $=
    ( word con0 wss cuni csuc ordsson onsucuni syl ) ABACDAAEFDAGAHI $.
    $( [12-Sep-2003] $)

  $( An ordinal class is either its union or the successor of its union.  If we
     adopt the view that zero is a limit ordinal, this means every ordinal
     class is either a limit or a successor. $)
  orduniorsuc $p |- ( Ord A -> ( A = U. A \/ A = suc U. A ) ) $=
    ( word cuni wceq csuc wne wss wa wn wcel orduniss wb orduni mpancom biimprd
    ordelssne mpand ordsucss syld ordsucuni jctild df-ne necom bitr3i eqss orrd
    3imtr4g ) ABZAACZDZAUIEZDZUHUIAFZAUKGZUKAGZHUJIZULUHUMUOUNUHUMUIAJZUOUHUIAG
    ZUMUQAKUHUQURUMHZUIBUHUQUSLAMUIAPNOQUIARSATUAUPAUIFUMAUIUBAUIUCUDAUKUEUGUF
    $.
    $( [13-Sep-2003] $)

  ${
    $d x y A $.
    $( The class of all ordinal numbers is its own union.  Exercise 11 of
       [TakeutiZaring] p. 40. $)
    unon $p |- U. On = On $=
      ( vx vy con0 cuni cv wcel wrex eluni2 onelon rexlimiva sylbi vex suceloni
      csuc sucid elunii sylancr impbii eqriv ) ACDZCAEZTFZUACFZUBUABEZFZBCGUCBU
      ACHUEUCBCUDUAIJKUCUAUANZFUFCFUBUAALOUAMUAUFCPQRS $.
      $( [12-Nov-2003] $)

    $( An ordinal class is equal to the union of its successor.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    ordunisuc $p |- ( Ord A -> U. suc A = A ) $=
      ( vx word con0 wcel wceq wo csuc ordeleqon cv suceq unieqd id eqeq12d wtr
      cuni eloni ordtr syl vex unisuc sylib vtoclga sucon unon eqtri jaoi sylbi
      unieqi 3eqtr4a ) ACADEZADFZGAHZPZAFZAIUKUOULBJZHZPZUPFZUOBADUPAFZURUNUPAU
      TUQUMUPAKLUTMNUPDEZUPOZUSVAUPCVBUPQUPRSUPBTUAUBUCULDHZPZDUNAVDDPDVCDUDUIU
      EUFULUMVCADKLULMUJUGUH $.
      $( [27-Aug-2011] $) $( [10-Dec-2004] $)

    $( The union of the ordinal subsets of an ordinal number is that number. $)
    orduniss2 $p |- ( Ord A -> U. { x e. On | x C_ A } = A ) $=
      ( word cv wss con0 crab cuni csuc cpw cin wcel wa cab df-rab incom eqtr3i
      inab df-pw eqcomi abid2 ineq12i 3eqtri ordpwsuc syl5eq unieqd ordunisuc
      eqtrd ) BCZADZBEZAFGZHBIZHBUIULUMUIULBJZFKZUMULUJFLZUKMANZUKANZUPANZKZUOU
      KAFOUSURKUQUTUPUKARUSURPQURUNUSFUNURABSTAFUAUBUCBUDUEUFBUGUH $.
      $( [30-Jan-2005] $)
  $}

  $( A successor ordinal is the successor of its union.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  onsucuni2 $p |- ( ( A e. On /\ A = suc B ) -> suc U. A = A ) $=
    ( con0 wcel csuc wceq cuni word eleq1 biimpac eloni ordsuc ordunisuc sylbir
    wa suceq syl eqtr4d 3syl unieq unieqd eqeq12d syl5ibr anabsi7 adantr eqtrd
    ) ACDZABEZFZOZAGZEZAEZGZAUGUIULUNFZUJUOUIUHGZEZUHEZGZFZUJUHCDZUHHZUTUIUGVAA
    UHCIJUHKVBUQUHUSVBUPBFZUQUHFVBBHVCBLBMNUPBPQUHMRSUIULUQUNUSUIUKUPFULUQFAUHT
    UKUPPQUIUMURAUHPUAUBUCUDUGUNAFZUIUGAHVDAKAMQUEUF $.
    $( [27-Aug-2011] $) $( [10-Dec-2004] $)

  $( The successor of an ordinal class contains the empty set. $)
  0elsuc $p |- ( Ord A -> (/) e. suc A ) $=
    ( word csuc c0 wcel ordsuc wne nsuceq0 ord0eln0 mpbiri sylbi ) ABACZBZDLEZA
    FMNLDGAHLIJK $.
    $( [4-Apr-1995] $)

  $( The class of ordinal numbers is a limit ordinal. $)
  limon $p |- Lim On $=
    ( con0 wlim word c0 wne cuni wceq ordon onn0 unon eqcomi df-lim mpbir3an )
    ABACADEAAFZGHINAJKALM $.
    $( [24-Mar-1995] $)

  ${
    onssi.1 $e |- A e. On $.
    $( An ordinal number is a subset of ` On ` . $)
    onssi $p |- A C_ On $=
      ( con0 wcel wss onss ax-mp ) ACDACEBAFG $.
      $( [11-Aug-1994] $)

    $( The successor of an ordinal number is an ordinal number.  Corollary
       7N(c) of [Enderton] p. 193. $)
    onsuci $p |- suc A e. On $=
      ( con0 wcel csuc suceloni ax-mp ) ACDAECDBAFG $.
      $( [12-Jun-1994] $)

    $( An ordinal number is either its own union (if zero or a limit ordinal)
       or the successor of its union. $)
    onuniorsuci $p |- ( A = U. A \/ A = suc U. A ) $=
      ( word cuni wceq csuc wo onordi orduniorsuc ax-mp ) ACAADZEAKFEGABHAIJ $.
      $( [13-Jun-1994] $)

    ${
      $d x A $.
      $( A limit ordinal is not a successor ordinal. $)
      onuninsuci $p |- ( A = U. A <-> -. E. x e. On A = suc x ) $=
        ( cv csuc wceq con0 wrex cuni wn wi wa wcel onirri cun csn df-suc sylib
        id wtr eqeq2i unieq sylbi uniun vex unisn uneq2i eqtri syl6eq wss eleq1
        mpbii tron trsuc mpan word eloni ordtr syl df-tr 3syl ssequn1 sylan9eqr
        eqtrd sucid eleq2 mpbiri adantr eqeltrd mto imnan mpbir rexlimivw onuni
        ax-mp onuniorsuci ori suceq eqeq2d rcla4ev sylancr impbii con2bii ) BAD
        ZEZFZAGHZBBIZFZWGWIJZWFWJAGWFWJKWFWILZJWKBBMBCNWKBWDBWIWFBWHWDWISWFWHWD
        IZWDOZWDWFWHWDWDPZOZIZWMWFBWOFWHWPFWEWOBWDQUABWOUBUCWPWLWNIZOWMWDWNUDWQ
        WDWLWDAUEZUFUGUHUIWFWLWDUJZWMWDFWFWEGMZWDGMZWSWFBGMZWTCBWEGUKULGTWTXAUM
        GWDUNUOXAWDTZWSXAWDUPXCWDUQWDURUSWDUTRVAWLWDVBRVDVCWFWDBMZWIWFXDWDWEMWD
        WRVEBWEWDVFVGVHVIVJWFWIVKVLVMWJWHGMZBWHEZFZWGXBXECBVNVOWIXGBCVPVQWFXGAW
        HGWDWHFWEXFBWDWHVRVSVTWAWBWC $.
        $( [18-Feb-2004] $)
    $}

    ${
      onsucssi.2 $e |- B e. On $.
      $( A set belongs to an ordinal number iff its successor is a subset of
         the ordinal number.  Exercise 8 of [TakeutiZaring] p. 42 and its
         converse. $)
      onsucssi $p |- ( A e. B <-> suc A C_ B ) $=
        ( con0 wcel word csuc wss wb onordi ordelsuc mp2an ) AEFBGABFAHBIJCBDKA
        BELM $.
        $( [16-Sep-1995] $)
    $}
  $}

  $( A successor is not a limit ordinal.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  nlimsucg $p |- ( A e. V -> -. Lim suc A ) $=
    ( csuc wlim wcel word cuni wn c0 wne w3a simp1 df-lim ordsuc 3imtr4i limuni
    wceq ordunisuc eqeq2d ordirr eleq2 notbid syl5ibrcom sucidg con3i syl6 sylc
    sylbid con2i ) ACZDZABEZUKAFZUJUJGZQZULHZUJFZUJIJZUOKUQUKUMUQURUOLUJMANOUJP
    UMUOUJAQZUPUMUNAUJARSUMUSAUJEZHZUPUMVAUSAAEZHATUSUTVBUJAAUAUBUCULUTABUDUEUF
    UHUGUI $.
    $( [20-Sep-2006] $) $( [25-Mar-1995] $)

  ${
    $d x A $.
    $( An ordinal equal to its union is not a successor. $)
    orduninsuc $p |- ( Ord A -> ( A = U. A <-> -. E. x e. On A = suc x ) ) $=
      ( word con0 wcel wceq cuni wn wb c0 id unieq eqeq12d eqeq1 rexbidv notbid
      wrex bibi12d cvv mpbiri wo cv ordeleqon cif 0elon elimel onuninsuci dedth
      csuc unon eqcomi onprc vex sucex eleq1 mto a1i nrex 2th jaoi sylbi ) BCBD
      EZBDFZUABBGZFZBAUBZUIZFZADQZHZIZBUCVBVKVCVBVKVBBJUDZVLGZFZVLVGFZADQZHZIBJ
      BVLFZVEVNVJVQVRBVLVDVMVRKBVLLMVRVIVPVRVHVOADBVLVGNOPRAVLBJDUEUFUGUHVCVKDD
      GZFZDVGFZADQZHZIVTWCVSDUJUKWAADWAHVFDEWADSEZULWAWDVGSEVFAUMUNDVGSUOTUPUQU
      RUSVCVEVTVJWCVCBDVDVSVCKBDLMVCVIWBVCVHWAADBDVGNOPRTUTVA $.
      $( [18-Feb-2004] $)

    $( An ordinal equal to its union contains the successor of each of its
       members. $)
    ordunisuc2 $p |- ( Ord A -> ( A = U. A <-> A. x e. A suc x e. A ) ) $=
      ( word cuni wceq cv csuc con0 wn wcel wral wi wa wo eloni adantr simpr ex
      syl5bbr bitrd wrex orduninsuc ralnex suceloni syl ordtri3 con2bid onnbtwn
      wb sylan2 imnan sylibr con2d pm2.21 syl6 adantl ax-1 jaod ordtri2or sylan
      a1i wss ancoms orcomd ordsssuc2 biimpd orim12d mpd impbid bitr3d pm5.74da
      impexp ordelon ancrd impbid2 imbi1d ralbidv2 ) BCZBBDEBAFZGZEZAHUAIZVTBJZ
      ABKZABUBWBWAIZAHKVRWDWAAHUCVRWEWCAHBVRVSHJZWELWFVSBJZWCLZLZWHVRWFWEWHVRWF
      MZBVTJZWCNZWEWHWJWAWLWFVRVTCZWAWLIUIWFVTHJWMVSUDVTOUEBVTUFUJUGWJWLWHWJWKW
      HWCWFWKWHLVRWFWKWGIWHWFWGWKWFWGWKMIWGWKILVSBUHWGWKUKULUMWGWCUNUOUPWCWHLWJ
      WCWGUQVAURWJWHWLWJWHMZBVSVBZWGNZWLWJWPWHWJWGWOWFVRWGWONZWFVSCVRWQVSOVSBUS
      UTVCVDPWNWOWKWGWCWJWOWKLWHWJWOWKBVSVEVFPWJWHQVGVHRVIVJVKWIWFWGMZWCLVRWHWF
      WGWCVLVRWRWGWCVRWRWGWFWGQVRWGWFVRWGWFBVSVMRVNVOVPSTVQST $.
      $( [1-Feb-2005] $)

    $( An ordinal is zero, a successor ordinal, or a limit ordinal. $)
    ordzsl $p |- ( Ord A <->
                  ( A = (/) \/ E. x e. On A = suc x \/ Lim A ) ) $=
      ( word c0 wceq cv csuc con0 wrex wlim w3o cuni orduninsuc biimprd unizlim
      wo wn sylibd orrd wcel 3orass or12 bitri sylibr ord0 ordeq suceloni eleq1
      mpbiri syl5ibr eloni syl6com rexlimiv limord 3jaoi impbii ) BCZBDEZBAFZGZ
      EZAHIZBJZKZUQVBURVCPZPZVDUQVBVEUQVBQZBBLEZVEUQVHVGABMNBORSVDURVBVCPPVFURV
      BVCUAURVBVCUBUCUDURUQVBVCURUQDCUEBDUFUIVAUQAHVAUSHTZBHTZUQVIVJVAUTHTUSUGB
      UTHUHUJBUKULUMBUNUOUP $.
      $( [1-Oct-2003] $)

    $( An ordinal number is zero, a successor ordinal, or a limit ordinal
       number.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    onzsl $p |- ( A e. On <->
               ( A = (/) \/ E. x e. On A = suc x \/ ( A e. _V /\ Lim A ) ) ) $=
      ( con0 wcel c0 wceq cv csuc wrex cvv wlim wa word elex eloni ordzsl 3mix1
      w3o adantl eleq1 3mix2 3jaodan sylan2b syl2anc mpbiri suceloni syl5ibrcom
      3mix3 0elon rexlimiv limelon 3jaoi impbii ) BCDZBEFZBAGZHZFZACIZBJDZBKZLZ
      RZUNUTBMZVCBCNBOVDUTUOUSVARVCABPUTUOVCUSVAUOVCUTUOUSVBQSUSVCUTUSUOVBUASVB
      UOUSUHUBUCUDUOUNUSVBUOUNECDUIBECTUEURUNACUPCDUNURUQCDUPUFBUQCTUGUJBJUKULU
      M $.
      $( [27-Aug-2011] $) $( [1-Oct-2003] $)

    $( An alternate definition of a limit ordinal, which is any ordinal that is
       neither zero nor a successor.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    dflim3 $p |- ( Lim A <->
                 ( Ord A /\ -. ( A = (/) \/ E. x e. On A = suc x ) ) ) $=
      ( wlim word c0 wne cuni wceq w3a wa cv csuc con0 wrex wo wn df-lim 3anass
      wb df-ne a1i orduninsuc anbi12d ioran syl6bbr pm5.32i 3bitri ) BCBDZBEFZB
      BGHZIUHUIUJJZJUHBEHZBAKLHAMNZOPZJBQUHUIUJRUHUKUNUHUKULPZUMPZJUNUHUIUOUJUP
      UIUOSUHBETUAABUBUCULUMUDUEUFUG $.
      $( [27-Aug-2011] $) $( [1-Nov-2004] $)

    $( An alternate definition of a limit ordinal. $)
    dflim4 $p |- ( Lim A <->
                 ( Ord A /\ (/) e. A /\ A. x e. A suc x e. A ) ) $=
      ( wlim word wcel cuni wceq w3a csuc wral dflim2 ordunisuc2 anbi2d pm5.32i
      c0 cv wa 3anass 3bitr4i bitri ) BCBDZOBEZBBFGZHZUAUBAPIBEABJZHZBKUAUBUCQZ
      QUAUBUEQZQUDUFUAUGUHUAUCUEUBABLMNUAUBUCRUAUBUERST $.
      $( [1-Feb-2005] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( The successor of a member of a limit ordinal is also a member. $)
    limsuc $p |- ( Lim A -> ( B e. A <-> suc B e. A ) ) $=
      ( vx wlim wcel csuc word c0 cv wral w3a dflim4 wceq suceq eleq1d 3ad2ant3
      wi rcla4cv sylbi wtr limord ordtr trsuc ex 3syl impbid ) ADZBAEZBFZAEZUGA
      GZHAEZCIZFZAEZCAJZKUHUJQZCALUPUKUQULUOUJCBAUMBMUNUIAUMBNORPSUGUKATZUJUHQA
      UAAUBURUJUHABUCUDUEUF $.
      $( [3-Sep-2003] $)

    $( A class includes a limit ordinal iff the successor of the class includes
       it. $)
    limsssuc $p |- ( Lim A -> ( A C_ B <-> A C_ suc B ) ) $=
      ( vx wlim wss csuc sssucid sstr2 wa cv wcel wceq wn wi eleq1 biimpcd word
      mpi sylib ex limsuc biimpa wb limord adantr ordelord sylan ordsuc ordtri1
      syl2anc con2bid mpbid sylan9r con2d com23 imp31 ssel2 vex elsuc ord con1d
      wo adantll mpd ssrdv impbid2 ) ADZABEZABFZEZVHBVIEVJBGABVIHRVGVJVHVGVJIZC
      ABVKCJZAKZVLBKZVKVMIVLBLZMZVNVGVJVMVPVGVMVJVPVGVMVJVPNVGVMIVOVJVMVOBAKZVG
      VJMZVOVMVQVLBAOPVGVQVRVGVQIZVIAKZVRVGVQVTABUAUBVSVJVTVSAQZVIQZVJVTMUCVGWA
      VQAUDZUEVSBQZWBVGWAVQWDWCABUFUGBUHSAVIUIUJUKULTUMUNTUOUPVJVMVPVNNVGVJVMIZ
      VNVOWEVNVOWEVLVIKVNVOVBAVIVLUQVLBCURUSSUTVAVCVDTVETVF $.
      $( [30-Oct-2003] $)
  $}

  ${
    $d x y $.
    $( Two ways to express the class of non-limit ordinal numbers.  Part of
       Definition 7.27 of [TakeutiZaring] p. 42, who use the symbol K_I for
       this class. $)
    nlimon $p |- { x e. On | ( x = (/) \/ E. y e. On x = suc y ) } =
                   { x e. On | -. Lim x } $=
      ( cv c0 wceq csuc con0 wrex wo wlim wn wcel word wb eloni dflim3 baib syl
      con2bid rabbiia ) ACZDEUABCFEBGHIZUAJZKZAGUAGLUAMZUBUDNUAOUEUCUBUCUEUBKBU
      APQSRT $.
      $( [1-Nov-2004] $)
  $}

  ${
    $d x y z A $.
    $( The union of a nonempty class of limit ordinals is a limit ordinal. $)
    limuni3 $p |- ( ( A =/= (/) /\ A. x e. A Lim x ) -> Lim U. A ) $=
      ( vy vz c0 wne cv wlim wral wa cuni word wcel csuc con0 wss cvv adantl wi
      elunii limeq rcla4v vex limelon mpan syl6com ssrdv ssorduni syl n0 0ellim
      wex expcom syl5 syld exlimiv imp wrex eluni2 rcla4cv limsuc anbi1d syl6bi
      sylbi exp3a com3r sylcom rexlimdv syl5bi ralrimiv dflim4 syl3anbrc ) BEFZ
      AGZHZABIZJBKZLZEVQMZCGZNZVQMZCVQIZVQHVPVRVMVPBOPVRVPDBODGZBMZVPWDHZWDOMZV
      OWFAWDBVNWDUAZUBZWDQMWFWGDUCWDQUDUEUFUGBUHUIRVMVPVSVMWEDULVPVSSZDBUJWEWJD
      WEVPWFVSWIWFEWDMZWEVSWDUKWKWEVSEWDBTUMUNUOUPVDUQVPWCVMVPWBCVQVTVQMVTWDMZD
      BURVPWBDVTBUSVPWLWBDBVPWEWFWLWBSVOWFAWDBWHUTWFWLWEWBWFWLWEWBWFWLWEJWAWDMZ
      WEJWBWFWLWMWEWDVTVAVBWAWDBTVCVEVFVGVHVIVJRCVQVKVL $.
      $( [29-May-2007] $) $( [1-Feb-2005] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
          Transfinite induction
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    $( The Principle of Transfinite Induction.  Theorem 7.17 of [TakeutiZaring]
       p. 39.  This principle states that if ` A ` is a class of ordinal
       numbers with the property that every ordinal number included in ` A `
       also belongs to ` A ` , then every ordinal number is in ` A ` .

       See theorem ~ tfindes or ~ tfinds for the version involving basis and
       induction hypotheses. $)
    tfi $p |- ( ( A C_ On /\ A. x e. On ( x C_ A -> x e. A ) ) -> A = On ) $=
      ( con0 wss cv wcel wi wral wa wceq cdif cin c0 wrex wn eldifn adantl onss
      eldifi difin0ss syl5com imim1d a2i syl5 imp mtod ralimi2 ralnex sylib wne
      ssdif0 necon3bbii word ordon difss tz7.5 mp3an12 sylbi anim2i eqss sylibr
      ex nsyl2 ) BCDZAEZBDZVEBFZGZACHZIVDCBDZIBCJVIVJVDVICBKZVELMJZAVKNZVJVIVLO
      ZAVKHVMOVHVNACVKVECFZVHGZVEVKFZVNVPVQIVLVGVQVGOVPVECBPQVPVQVLVGGZVQVOVPVR
      VECBSVOVHVRVOVLVFVGVOVECDVLVFVERCBVETUAUBUCUDUEUFVBUGVLAVKUHUIVJOVKMUJZVM
      VJVKMCBUKULCUMVKCDVSVMUNCBUOACVKUPUQURVCUSBCUTVA $.
      $( [18-Feb-2004] $)
  $}

  ${
    $d y ph z $.  $d x y z $.
    tfis.1 $e |- ( x e. On -> ( A. y e. x [ y / x ] ph -> ph ) ) $.
    $( Transfinite Induction Schema.  If all ordinal numbers less than a given
       number ` x ` have a property (induction hypothesis), then all ordinal
       numbers have the property (conclusion).  Exercise 25 of [Enderton]
       p. 200. $)
    tfis $p |- ( x e. On -> ph ) $=
      ( vz cv con0 wcel crab wss wi wral wceq ssrab2 wsbc ax-17 elrabsf simprbi
      wa hbs1 dfss3 ralimi sylbi hbral hbim raleq sbequ12 imbi12d vtoclgaf syl5
      anc2li syl6ibr rgen tfi mp2an eqcomi rabeq2i ) BFZGHZUSAABGGABGIZGUTGJEFZ
      UTJZVAUTHZKZEGLUTGMABGNVDEGVAGHZVBVEABVAOZSVCVEVBVFVBABCFZOZCVALZVEVFVBVG
      UTHZCVALVICVAUTUAVJVHCVAVJVGGHVHABEVGGVEBPZQRUBUCVHCURLZAKVIVFKBCVAGVGVAH
      BPZVIVFBVHBCVAVMABCTUDABETUEURVAMVLVIAVFVHCURVAUFABEUGUHDUIUJUKABEVAGVKQU
      LUMEUTUNUOUPUQR $.
      $( [1-Mar-2004] $) $( [1-Aug-1994] $)
  $}

  ${
    $d y ph $.  $d x y $.
    tfis2f.1 $e |- ( ps -> A. x ps ) $.
    tfis2f.2 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis2f.3 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis2f $p |- ( x e. On -> ph ) $=
      ( cv wsbc wral con0 wcel sbie ralbii syl5bi tfis ) ACDACDHIZDCHZJBDRJRKLA
      QBDRABCDEFMNGOP $.
      $( [1-Mar-2004] $) $( [18-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x y $.
    tfis2.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis2.2 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis2 $p |- ( x e. On -> ph ) $=
      ( ax-17 tfis2f ) ABCDBCGEFH $.
      $( [1-Mar-2004] $) $( [18-Aug-1994] $)
  $}

  ${
    $d x ps $.  $d y ph $.  $d x ch $.  $d x A $.  $d x y $.
    tfis3.1 $e |- ( x = y -> ( ph <-> ps ) ) $.
    tfis3.2 $e |- ( x = A -> ( ph <-> ch ) ) $.
    tfis3.3 $e |- ( x e. On -> ( A. y e. x ps -> ph ) ) $.
    $( Transfinite Induction Schema, using implicit substitition. $)
    tfis3 $p |- ( A e. On -> ch ) $=
      ( con0 tfis2 vtoclga ) ACDFJHABDEGIKL $.
      $( [4-Nov-2003] $)
  $}

  ${
    $d x y z $.  $d x A $.  $d x z ch $.  $d x ta $.  $d y z ph $.
    $( Substitutions. $)
    tfinds.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfinds.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfinds.5 $e |- ps $.
    $( Induction hypothesis for successors. $)
    tfinds.6 $e |- ( y e. On -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds.7 $e |- ( Lim x -> ( A. y e. x ch -> ph ) ) $.
    $( Principle of Transfinite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last three are the basis, the induction hypothesis for
       successors, and the induction hypothesis for limit ordinals.  Theorem
       Schema 4 of [Suppes] p. 197.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    tfinds $p |- ( A e. On -> ta ) $=
      ( vz cv con0 wral wi wcel wlim wn word c0 wceq csuc wrex wo dflim3 notbii
      wa iman eloni pm2.27 syl mpbiri a1d hbra1 ax-17 hbim vex sucid ax-mp syl5
      rcla4v wsbc raleq sbie syl5bbr cbvralv cbvralsv 3bitr4g imbi1d syl5ibrcom
      sbequ biimprd a1i syldd rexlimi jaoi syl6 syl5bir syl5bi pm2.61d2 tfis3 )
      ACEFGHJLFQZRUAZWGUBZCGWGSZATZWIUCWGUDZWGUEUFZWGGQZUGZUFZGRUHZUIZUCULZUCZW
      HWKWIWSGWGUJUKWTWLWRTZWHWKWLWRUMWHXAWRWKWHWLXAWRTWGUNWLWRUOUPWMWKWQWMAWJW
      MABMIUQURWPWKGRWJAGCGWGUSAGUTVAWNRUAZWPWJDAXBWJDTWPAFWOSZDTXCCXBDWNWOUAXC
      CTWNGVBVCACFWNWOJVFVDNVEWPWJXCDWPAFPQZVGZPWGSXEPWOSWJXCXEPWGWOVHCXEGPWGCA
      FWNVGWNXDUFXEACFGCFUTJVIAGPFVPVJVKAFPWOVLVMVNVOWPDATTXBWPADKVQVRVSVTWAWBW
      CWDOWEWF $.
      $( [27-Aug-2011] $) $( [16-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ch $.  $d x th $.  $d x ta $.  $d y ph $.
    $( Substitutions. $)
    tfindsg.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    tfindsg.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfindsg.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfindsg.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfindsg.5 $e |- ( B e. On -> ps ) $.
    $( Induction hypothesis for successor ordinals. $)
    tfindsg.6 $e |- ( ( ( y e. On /\ B e. On ) /\ B C_ y ) -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfindsg.7 $e |- ( ( ( Lim x /\ B e. On ) /\ B C_ x ) ->
                   ( A. y e. x ( B C_ y -> ch ) -> ph ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first four hypotheses establish the substitutions we need.  The last
       three are the basis, the induction hypothesis for successors, and the
       induction hypothesis for limit ordinals.  The basis of this version is
       an arbitrary ordinal ` B ` instead of zero.  Remark in [TakeutiZaring]
       p. 57. $)
    tfindsg $p |- ( ( ( A e. On /\ B e. On ) /\ B C_ A ) -> ta ) $=
      ( wcel wi wceq wa con0 wss cv c0 csuc wb sseq2 adantl syl6bir imp imbi12d
      eqeq2 imbi1d ss0 con3i pm2.21d pm5.74d sylan9bbr pm2.61ian imbi2d a1d wex
      vex sucex eqvinc syl5ibr biimpd sylan9r exlimiv sylbi eqcoms imim2i com4r
      wne df-ne anbi2i annim bitri onsssuc suceloni onelpss sylan2 bitrd ancoms
      wn ax-1 syl8 a2d com23 sylbird syl5bir pm2.61d wlim wral ralimdv ad2antlr
      ex pm2.27 syld exp31 com3l com4t tfinds imp31 ) HUAQIUAQZIHUBZEXEIFUCZUBZ
      ARZRXEIUDUBZBRZRXEIGUCZUBZCRZRZXEIXLUEZUBZDRZRXEXFERZRFGHXGUDSZXIXKXEIUDS
      ZXTXIXKUFYAXTTXHXJABXTXHXJUFYAXGUDIUGZUHYAXTABUFZYAXTXGISZYCIUDXGULJUIUJU
      KXTXIXJARYAWEZXKXTXHXJAYBUMYEXJABYEXJYCXJYAIUNUOUPUQURUSUTXGXLSZXIXNXEYFX
      HXMACXGXLIUGKUKUTXGXPSZXIXRXEYGXHXQADXGXPIUGLUKUTXGHSZXIXSXEYHXHXFAEXGHIU
      GMUKUTXEBXJNVAXLUAQZXEXNXRYIXEXNXRRZYIXETZXQIXPSZRZYJXEYMYJRYIYMXNXQXEDYM
      XQXEDRZRXNYLYNXQYNXPIXPISYGYDTZFVBYNFXPIXLGVCVDVEYOYNFYDXEAYGDXEAYDBNJVFY
      GADLVGVHVIVJVKVLVAVMUHYMWEZXQIXPVNZTZYKYJYRXQYLWEZTYPYQYSXQIXPVOVPXQYLVQV
      RYKYRXMYJXEYIXMYRUFXEYITXMIXPQZYRIXLVSYIXEXPUAQYTYRUFXLVTIXPWAWBWCWDYKXNX
      MXRYKXMCXRYKXMCDXRYKXMCDROWQDXQWFWGWHWIWJWKWLWQWHXEXHXGWMZXOGXGWNZAUUAXEX
      HUUBARZUUAXEXHUUCUUAXETXHTUUBXNGXGWNZAXEUUBUUDRUUAXHXEXOXNGXGXEXNWRWOWPPW
      SWTXAXBXCXD $.
      $( [5-Mar-2004] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ch $.  $d x th $.  $d x ta $.  $d y ph $.
    $( Substitutions. $)
    tfindsg2.1 $e |- ( x = suc B -> ( ph <-> ps ) ) $.
    tfindsg2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfindsg2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfindsg2.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfindsg2.5 $e |- ( B e. On -> ps ) $.
    $( Induction hypothesis for successor ordinals. $)
    tfindsg2.6 $e |- ( ( y e. On /\ B e. y ) -> ( ch -> th ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfindsg2.7 $e |- ( ( Lim x /\ B e. x ) ->
                   ( A. y e. x ( B e. y -> ch ) -> ph ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first four hypotheses establish the substitutions we need.  The last
       three are the basis, the induction hypothesis for successors, and the
       induction hypothesis for limit ordinals.  The basis of this version is
       an arbitrary ordinal ` suc B ` instead of zero.  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Jun-2012.) $)
    tfindsg2 $p |- ( ( A e. On /\ B e. A ) -> ta ) $=
      ( con0 wcel wa wi csuc wss onelon sucelon sylib eloni ordsucss syl sylbir
      word imp cv wb ordelsuc sylan2 ancoms ex adantr sylbird sylan2br wlim cvv
      wral vex limelon mpan anassrs imbi1d ralbidva imbi12d tfindsg expl mp2and
      mpbid ) HQRZIHRZSZIUAZQRZVRHUBZEVQIQRZVSHIUCIUDZUEVOVPVTVOHUJVPVTTHUFIHUG
      UHUKVOVSVTSETVPVOVSVTEABCDEFGHVRJKLMVSWABWBNUIGULZQRZVSSVRWCUBZCDTZVSWDWA
      WEWFTWBWDWASWEIWCRZWFWAWDWGWEUMZWDWAWCUJZWHWCUFZIWCQUNZUOUPWDWGWFTWAWDWGW
      FOUQURUSUTUKFULZVAZVSSVRWLUBZWECTZGWLVCZATZVSWMWAWNWQTZWBWMWASIWLRZWGCTZG
      WLVCZATZTZWRWMXCWAWMWSXBPUQURWAWMXCWRUMZWMWAWLQRZXDWLVBRWMXEFVDWLVBVEVFWA
      XESZWSWNXBWQXEWAWLUJWSWNUMWLUFIWLQUNUOXFXAWPAXFWTWOGWLXFWCWLRZSWGWECWAXEX
      GWHXEXGSZWAWIWHXHWDWIWLWCUCWJUHWKUOVGVHVIVHVJUOUPVNUTUKVKVLURVM $.
      $( [19-Jun-2012] $) $( [5-Jan-2005] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    tfindes.1 $e |- [ (/) / x ] ph $.
    tfindes.2 $e |- ( x e. On -> ( ph -> [ suc x / x ] ph ) ) $.
    tfindes.3 $e |- ( Lim y -> ( A. x e. y ph -> [ y / x ] ph ) ) $.
    $( Transfinite Induction with explicit substitution.  The first hypothesis
       is the basis, the second is the induction hypothesis for successors, and
       the third is the induction hypothesis for limit ordinals.  Theorem
       Schema 4 of [Suppes] p. 197. $)
    tfindes $p |- ( x e. On -> ph ) $=
      ( vz cv wsbc c0 csuc dfsbcq sbequ con0 wcel wi hbim wceq imbi12d wral vex
      sbequ12r ax-17 hbs1 sucex hbsbc1v eleq1 sbequ12 suceq chvar wlim cbvralsv
      wb syl syl5bir tfinds ) ABCHZIZABJIABGHZIZABUSKZIZACGBHZABUQJLACGBMABUQVA
      LACBUBDVCNOZAABVCKZIZPZPUSNOZUTVBPZPBGVHVIBVHBUCUTVBBABGUDABVAUSGUAUEUFQQ
      VCUSRZVDVHVGVIVCUSNUGVJAUTVFVBABGUHVJVEVARVFVBUMVCUSUIABVEVALUNSSEUJUTGUQ
      TABUQTUQUKURABGUQULFUOUP $.
      $( [5-Mar-2004] $)
  $}

  ${
    $d x y ta $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    tfinds2.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    tfinds2.4 $e |- ( ta -> ps ) $.
    $( Induction hypothesis for successors. $)
    tfinds2.5 $e |- ( y e. On -> ( ta -> ( ch -> th ) ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds2.6 $e |- ( Lim x -> ( ta -> ( A. y e. x ch -> ph ) ) ) $.
    $( Transfinite Induction (inference schema), using implicit substititions.
       The first three hypotheses establish the substitutions we need.  The
       last three are the basis and the induction hypotheses (for successor and
       limit ordinals respectively).  Theorem Schema 4 of [Suppes] p. 197.  The
       wff ` ta ` is an auxiliary antecedent to help shorten proofs using this
       theorem. $)
    tfinds2 $p |- ( x e. On -> ( ta -> ph ) ) $=
      ( wi c0 wsbc wceq imbi2d sbcie con0 0ex mpbir wcel csuc a2d sbimi clelsb3
      cv sbim 3imtr3i wb bicomd equcoms sucex sbbii suceq sbcco2 bitr3i 3imtr3g
      vex wral wlim sbralie r19.21v syl5bi ax-17 limeq sbie syl5bir tfindes ) E
      ANZFGVKFOPEBNZKVKVLFOUAFUHZOQABEHRSUBVMTUCZECNZGVMPZEDNZGVMPZVKVKFVMUDZPZ
      GUHZTUCZGVMPVOVQNZGVMPVNVPVRNWBWCGFWBECDLUEUFFGTUGVOVQGFUIUJVOVKGVMFUTWAV
      MQCAECAUKFGVMWAQACIULUMRZSVRVKFWAUDZPZGVMPVTWFVQGFVKVQFWEWAGUTUNVMWEQADEJ
      RSUOVKFGVSWEVMWAUPUQURUSVKFWAVAVOGVMVAZFWAPZWAVBZVKFWAPZVOVKGFWDVCVMVBZFW
      APWGVKNZFWAPWIWHWJNWKWLFGWGECGVMVAZNWKVKECGVMVDWKEWMAMUEVEUFWKWIFGWIFVFVM
      WAVGVHWGVKFGUIUJVIVJ $.
      $( [4-Sep-2004] $)
  $}

  ${
    $d x A $.  $d y ph $.  $d x ch $.  $d x ta $.  $d x y et $.
    $( Substitutions. $)
    tfinds3.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    tfinds3.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    tfinds3.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    tfinds3.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    tfinds3.5 $e |- ( et -> ps ) $.
    $( Induction hypothesis for successors. $)
    tfinds3.6 $e |- ( y e. On -> ( et -> ( ch -> th ) ) ) $.
    $( Induction hypothesis for limit ordinals. $)
    tfinds3.7 $e |- ( Lim x -> ( et -> ( A. y e. x ch -> ph ) ) ) $.
    $( Principle of Transfinite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last three are the basis, the induction hypothesis for
       successors, and the induction hypothesis for limit ordinals.
       (Unnecessary distinct variable restrictions were removed by David
       Abernethy, 21-Jun-2011.) $)
    tfinds3 $p |- ( A e. On -> ( et -> ta ) ) $=
      ( wi cv wceq imbi2d c0 csuc con0 wcel a2d wral wlim r19.21v syl5bi tfinds
      ) FAQZFBQFCQZFDQFEQGHIGRZUASABFJTUMHRZSACFKTUMUNUBSADFLTUMISAEFMTNUNUCUDF
      CDOUEULHUMUFFCHUMUFZQUMUGZUKFCHUMUHUPFUOAPUEUIUJ $.
      $( [21-Jun-2011] $) $( [6-Jan-2005] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        The natural numbers (i.e. finite ordinals)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Declare new symbol. $)
  $c om $. $( Greek letter omega $)

  $( Extend class notation to include the class of natural numbers. $)
  com $a class om $.

  ${
    $d x y $.
    $( Define the class of natural numbers, which are all ordinal numbers that
       are less than every limit ordinal, i.e. all finite ordinals.  Our
       definition is a variant of the Definition of N of [BellMachover]
       p. 471.  See ~ dfom2 for an alternate definition.  Later, when we assume
       the Axiom of Infinity, we show ` om ` is a set in ~ omex , and ` om `
       can then be defined per ~ dfom3 (the smallest inductive set) and
       ~ dfom4 .

       _Note_: the natural numbers ` om ` are a subset of the ordinal numbers
       ~ df-on .  They are completely different from the natural numbers ` NN `
       ( ~ df-n ) that are a subset of the complex numbers defined much later
       in our development, although the two sets have analogous properties and
       operations defined on them. $)
    df-om $a |- om = { x | ( Ord x /\ A. y ( Lim y -> x e. y ) ) } $.
  $}

  ${
    $d x z $.  $d y z $.
    $( An alternate definition of the set of natural numbers ` om ` .
       Definition 7.28 of [TakeutiZaring] p. 42, who use the symbol K_I for the
       inner class builder of non-limit ordinal numbers (see ~ nlimon ). $)
    dfom2 $p |- om = { x e. On | suc x C_ { y e. On | -. Lim y } } $=
      ( vz cv word wlim wcel wi wal wa cab con0 csuc wn crab wss vex cvv impexp
      wb com elon anbi1i onsssuc ontri1 bitr3d ancoms wceq limeq notbid imbi12d
      elrab a1i pm5.74da limelon mpan pm4.71ri imbi1i con34b ibar imbi2d syl5bb
      pm5.74i 3bitri syl6rbbr simpr suceloni onelon ex syl ancrd impbid2 imbi1d
      syl5bbr bitrd albidv dfss2 syl6bbr pm5.32i bitr3i abbii df-rab 3eqtr4i
      df-om ) ADZEZCDZFZWEWGGZHZCIZJZAKWELGZWEMZBDZFZNZBLOZPZJZAKUAWSALOWLWTAWL
      WMWKJWTWMWFWKWEAQUBUCWMWKWSWMWKWGWNGZWGWRGZHZCIWSWMWJXCCWMWJWGLGZXCHZXCWM
      XEXDWINZXDWHNZJZHZHZWJWMXDXCXIWMXDJZXAXFXBXHXDWMXAXFTXDWMJWGWEPXAXFWGWEUD
      WGWEUEUFUGXBXHTXKWQXGBWGLWOWGUHWPWHWOWGUIUJULUMUKUNWJXDWHJZWIHXDWJHXJWHXL
      WIWHXDWGRGWHXDCQWGRUOUPUQURXDWHWISXDWJXIWJXFXGHXDXIWHWIUSXDXGXHXFXDXGUTVA
      VBVCVDVEXEXDXAJZXBHWMXCXDXAXBSWMXMXAXBWMXMXAXDXAVFWMXAXDWMWNLGZXAXDHWEVGX
      NXAXDWNWGVHVIVJVKVLVMVNVOVPCWNWRVQVRVSVTWAACWDWSALWBWC $.
      $( [1-Nov-2004] $)
  $}

  ${
    $d A x y $.
    elom.1 $e |- A e. _V $.
    $( Membership in omega.  The hypothesis can be eliminated if we assume the
       Axiom of Infinity; see ~ elom3 . $)
    elom $p |- ( A e. om <-> ( Ord A /\ A. x ( Lim x -> A e. x ) ) ) $=
      ( vy cv word wlim wcel wi wal wa com wceq ordeq eleq1 imbi2d albidv df-om
      anbi12d elab2 ) DEZFZAEZGZUAUCHZIZAJZKBFZUDBUCHZIZAJZKDBLCUABMZUBUHUGUKUA
      BNULUFUJAULUEUIUDUABUCOPQSDART $.
      $( [15-May-1994] $)
  $}

  ${
    $d A x y $.
    $( Membership in omega.  The antecedent can be eliminated if we assume the
       Axiom of Infinity; see ~ elom3 . $)
    elomg $p |- ( A e. V ->
                ( A e. om <-> ( Ord A /\ A. x ( Lim x -> A e. x ) ) ) ) $=
      ( vy cv com wcel word wlim wi wal wa eleq1 wceq imbi2d albidv anbi12d vex
      ordeq elom vtoclbg ) DEZFGUBHZAEZIZUBUDGZJZAKZLBFGBHZUEBUDGZJZAKZLDBCUBBF
      MUBBNZUCUIUHULUBBSUMUGUKAUMUFUJUEUBBUDMOPQAUBDRTUA $.
      $( [25-Mar-1995] $)
  $}

  ${
    $d x y $.
    $( Omega is a subset of ` On ` .  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    omsson $p |- om C_ On $=
      ( vx vy com cv csuc wlim wn con0 crab wss dfom2 ssrab2 eqsstri ) CADEBDFG
      BHIJZAHIHABKNAHLM $.
      $( [27-Aug-2011] $) $( [13-Jun-1994] $)
  $}

  ${
    $d x y A $.
    $( The class of natural numbers is a subclass of any (infinite) limit
       ordinal.  Exercise 1 of [TakeutiZaring] p. 44.  Remarkably, our proof
       does not require the Axiom of Infinity. $)
    limomss $p |- ( Lim A -> om C_ A ) $=
      ( vx vy word wlim com wss limord con0 wcel wceq wo wi ordeleqon wa cv wal
      vex elom simprbi limeq eleq2 imbi12d cla4gv syl5 com23 imp ssrdv ex sseq2
      omsson mpbiri a1d jaoi sylbi mpcom ) ADZAEZFAGZAHUQAIJZAIKZLURUSMZANUTVBV
      AUTURUSUTUROBFAUTURBPZFJZVCAJZMUTVDURVEVDCPZEZVCVFJZMZCQZUTURVEMZVDVCDVJC
      VCBRSTVIVKCAIVFAKVGURVHVEVFAUAVFAVCUBUCUDUEUFUGUHUIVAUSURVAUSFIGUKAIFUJUL
      UMUNUOUP $.
      $( [30-Oct-2003] $)
  $}

  $( A natural number is an ordinal number. $)
  nnon $p |- ( A e. om -> A e. On ) $=
    ( com con0 omsson sseli ) BCADE $.
    $( [27-Jun-1994] $)

  ${
    nnoni.1 $e |- A e. om $.
    $( A natural number is an ordinal number. $)
    nnoni $p |- A e. On $=
      ( com wcel con0 nnon ax-mp ) ACDAEDBAFG $.
      $( [27-Jun-1994] $)
  $}

  $( A natural number is ordinal. $)
  nnord $p |- ( A e. om -> Ord A ) $=
    ( com wcel con0 word nnon eloni syl ) ABCADCAEAFAGH $.
    $( [17-Oct-1995] $)

  ${
    $d x y z $.
    $( Omega is ordinal.  Theorem 7.32 of [TakeutiZaring] p. 43.  (The proof
       was shortened by Andrew Salmon, 27-Aug-2011.) $)
    ordom $p |- Ord om $=
      ( vy vx vz com wtr con0 wss word cv wcel wa wi dftr2 wlim ordelord expcom
      wal limord vex elom ordtr trel exp3a com12 a2d alimdv anim12d 3imtr4g imp
      3syl ax-gen mpgbir omsson ordon trssord mp3an ) DEZDFGFHDHUQAIZBIZJZUSDJZ
      KURDJZLZBQAABDMVCBUTVAVBUTUSHZCIZNZUSVEJZLZCQZKURHZVFURVEJZLZCQZKVAVBUTVD
      VJVIVMVDUTVJUSUROPUTVHVLCUTVFVGVKVFUTVGVKLVFUTVGVKVFVEHVEEUTVGKVKLVERVEUA
      VEURUSUBUJUCUDUEUFUGCUSBSTCURASTUHUIUKULUMUNDFUOUP $.
      $( [18-Oct-1995] $)
  $}

  $( A member of a natural number is a natural number. $)
  elnn $p |- ( ( A e. B /\ B e. om ) -> A e. om ) $=
    ( com word wtr wcel wa wi ordom ordtr trel mp2b ) CDCEABFBCFGACFHICJCABKL
    $.
    $( [21-Jun-1998] $)

  $( The class of natural numbers ` om ` is either an ordinal number (if we
     accept the Axiom of Infinity) or the proper class of all ordinal numbers
     (if we deny the Axiom of Infinity).  Remark in [TakeutiZaring] p. 43. $)
  omon $p |- ( om e. On \/ om = On ) $=
    ( com word con0 wcel wceq wo ordom ordeleqon mpbi ) ABACDACEFGAHI $.
    $( [10-May-1998] $)

  ${
    $( Omega is an ordinal number.  (Contributed by Mario Carneiro,
       9-Feb-2013.) $)
    omelon2 $p |- ( om e. _V -> om e. On ) $=
      ( com con0 wcel cvv wn wceq omon ori onprc eleq1 mtbiri syl con4i ) ABCZA
      DCZNEABFZOENPGHPOBDCIABDJKLM $.
      $( [30-Jan-2013] $)
  $}

  ${
    $d x y A $.
    $( A natural number is not a limit ordinal. $)
    nnlim $p |- ( A e. om -> -. Lim A ) $=
      ( vx com wcel wlim word wn nnord ordirr syl cv wi wal wa elomg ibi simprd
      wceq limeq eleq2 imbi12d cla4gv mpd mtod ) ACDZAEZAADZUEAFZUGGAHAIJUEBKZE
      ZAUIDZLZBMZUFUGLZUEUHUMUEUHUMNBACOPQULUNBACUIARUJUFUKUGUIASUIAATUAUBUCUD
      $.
      $( [18-Oct-1995] $)

    $( The class of natural numbers is a subclass of the class of non-limit
       ordinal numbers.  Exercise 4 of [TakeutiZaring] p. 42.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    omssnlim $p |- om C_ { x e. On | -. Lim x } $=
      ( com cv wlim wn con0 crab wss wral omsson nnlim rgen ssrab mpbir2an ) BA
      CZDEZAFGHBFHPABIJPABOKLPAFBMN $.
      $( [27-Aug-2011] $) $( [2-Nov-2004] $)
  $}

  $( Omega is a limit ordinal.  Theorem 2.8 of [BellMachover] p. 473.  Our
     proof, however, does not require the Axiom of Infinity. $)
  limom $p |- Lim om $=
    ( vx com word wlim ordom con0 wcel wceq wo ordeleqon wn ordirr ax-mp cv wal
    wi wa limord biimpd limeq wss wb ordtri1 adantr ordsseleq nnlim a1i con3rr3
    jaod sylan9 sylbird con4d sylan ex pm2.43b alrimiv jctil elomg syl5ibr mt3i
    mpanl2 limon mpbiri jaoi sylbi ) BCZBDZEVFBFGZBFHZIVGBJVHVGVIVHVGBBGZVFVJKE
    BLMVGKZVJVHVFANZDZBVLGZPZAOZQVKVPVFVKVOAVKVMVNVMVKVOVMVLCZVKVOVLRVQVFVKVOEV
    QVFQZVKQZVNVMVSVNKZVLBUAZVMKZVRWAVTUBVKVLBUCUDVRWAVLBGZVLBHZIZVKWBVRWAWEVLB
    UESVKWCWBWDWCWBPVKVLUFUGWDVMVGWDVMVGVLBTSUHUIUJUKULVAUMUNUOUPEUQABFURUSUTVI
    VGFDVBBFTVCVDVEM $.
    $( [26-Mar-1995] $)

  $( A class belongs to omega iff its successor does. $)
  peano2b $p |- ( A e. om <-> suc A e. om ) $=
    ( com wlim wcel csuc wb limom limsuc ax-mp ) BCABDAEBDFGBAHI $.
    $( [3-Dec-1995] $)

  ${
    $d x y A $.
    $( A nonzero natural number is a successor. $)
    nnsuc $p |- ( ( A e. om /\ A =/= (/) ) -> E. x e. om A = suc x ) $=
      ( com wcel c0 wne wa cv csuc wceq con0 wrex wlim wn nnlim adantr wi nnord
      word cuni orduninsuc w3a df-lim biimpri 3expia sylbird sylan mt3d biimpcd
      wb eleq1 peano2b syl6ibr ancrd adantld reximdv2 mpd ) BCDZBEFZGZBAHZIZJZA
      KLZVCACLZUTVDBMZURVFNUSBOPURBSZUSVDNZVFQBRVGUSGVHBBTJZVFVGVIVHUJUSABUAPVG
      USVIVFVFVGUSVIUBBUCUDUEUFUGUHURVDVEQUSURVCVCAKCURVCVACDZVCGVAKDURVCVJURVC
      VBCDZVJVCURVKBVBCUKUIVAULUMUNUOUPPUQ $.
      $( [6-Apr-2007] $) $( [18-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( An ordinal subclass of non-limit ordinals is a class of natural
       numbers.  Exercise 7 of [TakeutiZaring] p. 42. $)
    ssnlim $p |- ( ( Ord A /\ A C_ { x e. On | -. Lim x } ) -> A C_ om ) $=
      ( word cv wlim wn con0 crab wss wa com wcel limom ssel limeq notbid elrab
      wceq simprbi syl6 mt2i adantl wb ordom ordtri1 mpan2 adantr mpbird ) BCZB
      ADZEZFZAGHZIZJBKIZKBLZFZUNUQUIUNUPKEZMUNUPKUMLZURFZBUMKNUSKGLUTULUTAKGUJK
      RUKURUJKOPQSTUAUBUIUOUQUCZUNUIKCVAUDBKUEUFUGUH $.
      $( [2-Nov-2004] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Peano's postulates
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Zero is a natural number.  One of Peano's 5 postulates for arithmetic.
     Proposition 7.30(1) of [TakeutiZaring] p. 42.  Note:  Unlike most
     textbooks, our proofs of ~ peano1 through ~ peano5 do not use the Axiom of
     Infinity.  Unlike Takeuti and Zaring, they also do not use the Axiom of
     Regularity. $)
  peano1 $p |- (/) e. om $=
    ( com wlim c0 wcel limom 0ellim ax-mp ) ABCADEAFG $.
    $( [15-May-1994] $)

  $( The successor of any natural number is a natural number.  One of Peano's 5
     postulates for arithmetic.  Proposition 7.30(2) of [TakeutiZaring]
     p. 42. $)
  peano2 $p |- ( A e. om -> suc A e. om ) $=
    ( com wcel csuc peano2b biimpi ) ABCADBCAEF $.
    $( [3-Sep-2003] $)

  $( The successor of any natural number is not zero.  One of Peano's 5
     postulates for arithmetic.  Proposition 7.30(3) of [TakeutiZaring]
     p. 42. $)
  peano3 $p |- ( A e. om -> suc A =/= (/) ) $=
    ( csuc c0 wne com wcel nsuceq0 a1i ) ABCDAEFAGH $.
    $( [2-Jun-2007] $) $( [3-Sep-2003] $)

  $( Two natural numbers are equal iff their successors are equal, i.e. the
     successor function is one-to-one.  One of Peano's 5 postulates for
     arithmetic.  Proposition 7.30(4) of [TakeutiZaring] p. 43. $)
  peano4 $p |- ( ( A e. om /\ B e. om ) -> ( suc A = suc B <-> A = B ) ) $=
    ( com wcel con0 csuc wceq wb nnon suc11 syl2an ) ACDAEDBEDAFBFGABGHBCDAIBIA
    BJK $.
    $( [3-Sep-2003] $)

  ${
    $d x y A $.
    $( The induction postulate: any class containing zero and closed under the
       successor operation contains all natural numbers.  One of Peano's 5
       postulates for arithmetic.  Proposition 7.30(5) of [TakeutiZaring]
       p. 43, except our proof does not require the Axiom of Infinity.  The
       more traditional statement of mathematical induction as a theorem
       schema, with a basis and an induction hypothesis, is derived from this
       theorem as theorem ~ findes . $)
    peano5 $p |- ( ( (/) e. A /\
                 A. x e. om ( x e. A -> suc x e. A ) ) -> om C_ A ) $=
      ( vy c0 wcel cv csuc wi com wral wa wceq wrex wn adantl eleq1 ax-17 exp32
      wss wne cdif cin eldifn eldifi elndif biimpcd mpan9 nnsuc syl2anc adantlr
      necon3bd adantr hbra1 ra4 sucid eleq2 mpbiri peano2b syl6bbr minel neldif
      hban vex sylan2 syl6bi mpid syl5 imp3a eleq1a com12 imim12d com13 rexlimd
      sylan9 a1i imp41 mpd mtand nrexdv word ordom difss tz7.5 mp3an12 necon1bi
      syl ssdif0 sylibr ) DBEZAFZBEZWJGZBEZHZAIJZKZIBUAZDLZIBSWPWQCFZUBDLZCWQMZ
      NWRWPWTCWQWPWSWQEZKZWTWSBEZXBXDNWPWSIBUCOXCWTKWSWLLZAIMZXDXCXFWTWIXBXFWOW
      IXBKWSIEZWSDTZXFXBXGWIWSIBUDZOWIDWQEZNXBXHDBIUEXBXJWSDWSDLXBXJWSDWQPUFUKU
      GAWSUHUIUJULWIWOXBWTXFXDHZWOXBWTXKHHHWIWOXBWTXKWOXBWTKZKXEXDAIWOXLAWNAIUM
      XLAQVBXDAQWOWJIEZWNXLXEXDHWNAIUNXEWNXLXDXEXLWKWMXDXEXBWTWKXBXGXEWTWKHZXIX
      EXGWJWSEZXNXEXOWJWLEWJAVCUOWSWLWJUPUQXEXGXMXOXNHXEXGWLIEXMWSWLIPWJURUSXMX
      OWTWKXOWTKXMWJWQENWKWJWSWQUTWJIBVAVDRVEVFVGVHWMXEXDWLBWSVIVJVKVLVNVMRVOVP
      VQVRVSXAWQDIVTWQISWQDTXAWAIBWBCIWQWCWDWEWFIBWGWH $.
      $( [18-Feb-2004] $)
  $}

  ${
    $d x A $.
    $( A natural number is either 0 or a successor. $)
    nn0suc $p |- ( A e. om -> ( A = (/) \/ E. x e. om A = suc x ) ) $=
      ( com wcel c0 wceq cv csuc wrex wn wne df-ne nnsuc sylan2br ex orrd ) BCD
      ZBEFZBAGHFACIZQRJZSTQBEKSBELABMNOP $.
      $( [27-May-1998] $)
  $}

$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
              Finite induction (for finite ordinals)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  ${
    $d x A $.
    find.1 $e |- ( A C_ om /\ (/) e. A /\ A. x e. A suc x e. A ) $.
    $( The Principle of Finite Induction (mathematical induction).  Corollary
       7.31 of [TakeutiZaring] p. 43.  The simpler hypothesis shown here was
       suggested in an email from "Colin" on 1-Oct-2001.  The hypothesis states
       that ` A ` is a set of natural numbers, zero belongs to ` A ` , and
       given any member of ` A ` the member's successor also belongs to
       ` A ` .  The conclusion is that every natural number is in ` A ` .  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    find $p |- A = om $=
      ( com wss c0 wcel cv csuc wral simp1i wi wa w3a 3simpc ax-mp df-ral alral
      wal sylbi anim2i peano5 eqssi ) BDBDEZFBGZAHZIBGZABJZCKUEUFBGUGLZADJZMZDB
      EUEUHMZUKUDUEUHNULCUDUEUHOPUHUJUEUHUIASUJUGABQUIADRTUAPABUBPUC $.
      $( [27-Aug-2011] $) $( [22-Feb-2004] $)
  $}

  ${
    $d x y $.  $d x A $.  $d x ps $.  $d x ch $.  $d x th $.  $d x ta $.
    $d y ph $.
    $( Substitutions. $)
    finds.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    finds.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    finds.5 $e |- ps $.
    $( Induction hypothesis. $)
    finds.6 $e |- ( y e. om -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last two are the basis and the induction hypothesis.  Theorem
       Schema 22 of [Suppes] p. 136. $)
    finds $p |- ( A e. om -> ta ) $=
      ( com wcel cab c0 cv elab csuc wi wral wss 0ex mpbir sucex 3imtr4g peano5
      vex rgen mp2an sseli elabg mpbid ) HOPHAFQZPEOUPHRUPPZGSZUPPZURUAZUPPZUBZ
      GOUCOUPUDUQBMABFRUEITUFVBGOUROPCDUSVANACFURGUJZJTADFUTURVCUGKTUHUKGUPUIUL
      UMAEFHOLUNUO $.
      $( [14-Apr-1995] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x ps $.  $d x ch $.  $d x th $.  $d x ta $.
    $d y ph $.
    $( Substitutions. $)
    findsg.1 $e |- ( x = B -> ( ph <-> ps ) ) $.
    findsg.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    findsg.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    findsg.4 $e |- ( x = A -> ( ph <-> ta ) ) $.
    $( Basis. $)
    findsg.5 $e |- ( B e. om -> ps ) $.
    $( Induction hypothesis. $)
    findsg.6 $e |- ( ( ( y e. om /\ B e. om ) /\ B C_ y ) -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first four hypotheses establish the substitutions we
       need.  The last two are the basis and the induction hypothesis.  The
       basis of this version is an arbitrary natural number ` B ` instead of
       zero. $)
    findsg $p |- ( ( ( A e. om /\ B e. om ) /\ B C_ A ) -> ta ) $=
      ( wcel wss wi wceq wa com cv c0 wb sseq2 adantl eqeq2 syl6bir imp imbi12d
      csuc wn imbi1d ss0 pm2.21d pm5.74d sylan9bbr pm2.61ian imbi2d a1d wex vex
      con3i sucex eqvinc syl5ibr biimpd sylan9r exlimiv sylbi eqcoms imim2i wne
      com4r df-ne anbi2i annim bitri con0 onsssuc suceloni onelpss sylan2 bitrd
      nnon syl2anr ex ax-1 syl8 a2d com23 sylbird syl5bir pm2.61d finds imp31 )
      HUAPIUAPZIHQZEWQIFUBZQZARZRWQIUCQZBRZRWQIGUBZQZCRZRWQIXDUKZQZDRZRWQWRERZR
      FGHWSUCSZXAXCWQIUCSZXKXAXCUDXLXKTWTXBABXKWTXBUDXLWSUCIUEZUFXLXKABUDZXLXKW
      SISZXNIUCWSUGJUHUIUJXKXAXBARXLULZXCXKWTXBAXMUMXPXBABXPXBXNXBXLIUNVCUOUPUQ
      URUSWSXDSZXAXFWQXQWTXEACWSXDIUEKUJUSWSXGSZXAXIWQXRWTXHADWSXGIUELUJUSWSHSZ
      XAXJWQXSWTWRAEWSHIUEMUJUSWQBXBNUTXDUAPZWQXFXIXTWQXFXIRZXTWQTZXHIXGSZRZYAW
      QYDYARXTYDXFXHWQDYDXHWQDRZRXFYCYEXHYEXGIXGISXRXOTZFVAYEFXGIXDGVBVDVEYFYEF
      XOWQAXRDWQAXOBNJVFXRADLVGVHVIVJVKVLUTVNUFYDULZXHIXGVMZTZYBYAYIXHYCULZTYGY
      HYJXHIXGVOVPXHYCVQVRYBYIXEYAWQIVSPZXDVSPZXEYIUDXTIWEXDWEYKYLTXEIXGPZYIIXD
      VTYLYKXGVSPYMYIUDXDWAIXGWBWCWDWFYBXFXEXIYBXECXIYBXECDXIYBXECDROWGDXHWHWIW
      JWKWLWMWNWGWJWOWP $.
      $( [16-Sep-1995] $)
  $}

  ${
    $d x y ta $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    finds2.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds2.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds2.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    finds2.4 $e |- ( ta -> ps ) $.
    $( Induction hypothesis. $)
    finds2.5 $e |- ( y e. om -> ( ta -> ( ch -> th ) ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first three hypotheses establish the substitutions
       we need.  The last two are the basis and the induction hypothesis.
       Theorem Schema 22 of [Suppes] p. 136. $)
    finds2 $p |- ( x e. om -> ( ta -> ph ) ) $=
      ( cv com wcel wi c0 wceq imbi2d elab cab csuc wss 0ex mpbir a2d vex sucex
      wral 3imtr4g rgen peano5 mp2an sseli abid sylib ) FMZNOUQEAPZFUAZOURNUSUQ
      QUSOZGMZUSOZVAUBZUSOZPZGNUINUSUCUTEBPZKURVFFQUDUQQRABEHSTUEVEGNVANOZECPZE
      DPZVBVDVGECDLUFURVHFVAGUGZUQVARACEISTURVIFVCVAVJUHUQVCRADEJSTUJUKGUSULUMU
      NURFUOUP $.
      $( [29-Nov-2002] $)
  $}

  ${
    $d x y $.  $d x ps $.  $d x ch $.  $d x th $.  $d y ph $.
    $( Substitutions. $)
    finds1.1 $e |- ( x = (/) -> ( ph <-> ps ) ) $.
    finds1.2 $e |- ( x = y -> ( ph <-> ch ) ) $.
    finds1.3 $e |- ( x = suc y -> ( ph <-> th ) ) $.
    $( Basis. $)
    finds1.4 $e |- ps $.
    $( Induction hypothesis. $)
    finds1.5 $e |- ( y e. om -> ( ch -> th ) ) $.
    $( Principle of Finite Induction (inference schema), using implicit
       substitutions.  The first three hypotheses establish the substitutions
       we need.  The last two are the basis and the induction hypothesis.
       Theorem Schema 22 of [Suppes] p. 136. $)
    finds1 $p |- ( x e. om -> ph ) $=
      ( cv com wcel c0 wceq eqid a1i wi a1d finds2 mpi ) ELMNOOPZAOQABCDUCEFGHI
      BUCJRFLMNCDSUCKTUAUB $.
      $( [22-Mar-2006] $)
  $}

  ${
    $d x y z $.  $d y z ph $.
    findes.1 $e |- [ (/) / x ] ph $.
    findes.2 $e |- ( x e. om -> ( ph -> [ suc x / x ] ph ) ) $.
    $( Finite induction with explicit substitution.  The first hypothesis is
       the basis and the second is the induction hypothesis.  Theorem Schema 22
       of [Suppes] p. 136.  See ~ tfindes for the transfinite version.
       (Contributed by Raph Levien, 9-Jul-2003.) $)
    findes $p |- ( x e. om -> ph ) $=
      ( vz vy cv wsbc c0 csuc dfsbcq sbequ sbequ12r com wcel wi ax-17 hbim wceq
      imbi12d hbs1 vex sucex hbsbc1v eleq1 sbequ12 wb suceq syl chvar finds ) A
      BEGZHABIHABFGZHZABUMJZHZAEFBGZABULIKAEFBLABULUOKAEBMCUQNOZAABUQJZHZPZPUMN
      OZUNUPPZPBFVBVCBVBBQUNUPBABFUAABUOUMFUBUCUDRRUQUMSZURVBVAVCUQUMNUEVDAUNUT
      UPABFUFVDUSUOSUTUPUGUQUMUHABUSUOKUITTDUJUK $.
      $( [9-Jul-2003] $)
  $}


$(
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Functions and relations
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)

  $( Introduce new constant symbols. $)
  $c X. $. $( Times symbol (cross product symbol) (read: 'cross') $)
  $c `' $. $( Small elevated smiley (converse operation) $)
  $c dom $. $( Domain $)
  $c ran $. $( Range $)
  $c |` $. $( Right hook (restriction symbol) $)
  $c " $. $( Left quote (image symbol) $)
  $c o. $. $( Small circle (composition symbol) $)
  $c Rel $. $( Relation predicate $)
  $c Fun $. $( Function predicate $)
  $c Fn $. $( Function connective $)
  $c : $. $( Colon $)
  $c --> $. $( Domain-codomain connective $)
  $c -1-1-> $. $( 'One-to-one' domain-codomain connective $)
  $c -onto-> $. $( 'Onto' domain-codomain connective $)
  $c -1-1-onto-> $. $( 'One-to-one' and 'onto' domain-codomain connective $)
  $c ` $. $( Left apostrophe (function value symbol) $)
  $c Isom $. $( Isomorphism $)

  $( Extend the definition of a class to include the cross product. $)
  cxp $a class ( A X. B ) $.

  $( Extend the definition of a class to include the converse of a class. $)
  ccnv $a class `' A $.

  $( Extend the definition of a class to include the domain of a class. $)
  cdm $a class dom A $.

  $( Extend the definition of a class to include the range of a class. $)
  crn $a class ran A $.

  $( Extend the definition of a class to include the restriction of a class.
     (Read:  The restriction of ` A ` to ` B ` .) $)
  cres $a class ( A |` B ) $.

  $( Extend the definition of a class to include the image of a class.  (Read:
     The image of ` B ` under ` A ` .) $)
  cima $a class ( A " B ) $.

  $( Extend the definition of a class to include the composition of two
     classes.  (Read:  The composition of ` A ` and ` B ` .) $)
  ccom $a class ( A o. B ) $.

  $( Extend the definition of a wff to include the relation predicate.  (Read:
     ` A ` is a relation.) $)
  wrel $a wff Rel A $.

  $( Extend the definition of a wff to include the function predicate.  (Read:
     ` A ` is a function.) $)
  wfun $a wff Fun A $.

  $( Extend the definition of a wff to include the function predicate with a
     domain.  (Read: ` A ` is a function on ` B ` .) $)
  wfn $a wff A Fn B $.

  $( Extend the definition of a wff to include the function predicate with
     domain and codomain.  (Read: ` F ` maps ` A ` into ` B ` .) $)
  wf $a wff F : A --> B $.

  $( Extend the definition of a wff to include one-to-one functions.  (Read:
     ` F ` maps ` A ` one-to-one into ` B ` .)  The notation ("1-1" above the
     arrow) is from Definition 6.15(5) of [TakeutiZaring] p. 27. $)
  wf1 $a wff F : A -1-1-> B $.

  $( Extend the definition of a wff to include onto functions.  (Read: ` F `
     maps ` A ` onto ` B ` .)  The notation ("onto" below the arrow) is from
     Definition 6.15(4) of [TakeutiZaring] p. 27. $)
  wfo $a wff F : A -onto-> B $.

  $( Extend the definition of a wff to include one-to-one onto functions.
     (Read: ` F ` maps ` A ` one-to-one onto ` B ` .)  The notation ("1-1"
     above the arrow and "onto" below the arrow) is from Definition 6.15(6) of
     [TakeutiZaring] p. 27. $)
  wf1o $a wff F : A -1-1-onto-> B $.

  $( Extend the definition of a class to include the value of a function.
     (Read:  The value of ` F ` at ` A ` , or " ` F ` of ` A ` .") $)
  cfv $a class ( F ` A ) $.

  $( Extend the definition of a wff to include the isomorphism property.
     (Read: ` H ` is an ` R ` , ` S ` isomorphism of ` A ` onto ` B ` .) $)
  wiso $a wff H Isom R , S ( A , B ) $.

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Define the cross product of two classes.  Definition 9.11 of [Quine]
       p. 64.  For example, ` ( { 1 , 5 } X. { 2 , 7 } ) = `
       ` ( { <. 1 , 2 >. , <. 1 , 7 >. } u. { <. 5 , 2 >. , <. 5 , 7 >. } ) `
       ( ~ ex-xp ).  Another example is that the set of rational numbers are
       defined in ~ df-q using the cross-product ` ( ZZ X. NN ) ` ; the left-
       and right-hand sides of the cross-product represent the top (integer)
       and bottom (natural) numbers of a fraction. $)
    df-xp $a |- ( A X. B ) = { <. x , y >. | ( x e. A /\ y e. B ) } $.

    $( Define the relation predicate.  Definition 6.4(1) of [TakeutiZaring]
       p. 23.  For alternate definitions, see ~ dfrel2 and ~ dfrel3 . $)
    df-rel $a |- ( Rel A <-> A C_ ( _V X. _V ) ) $.

    $( Define the converse of a class.  Definition 9.12 of [Quine] p. 64.  The
       converse of a binary relation swaps its arguments, i.e., if ` A e. _V `
       and ` B e. _V ` then ` ( A ``' R B <-> B R A ) ` , as proven in ~ brcnv
       (see ~ df-br and ~ df-rel for more on relations).  For example,
       ` ``' { <. 2 , 6 >. , <. 3 , 9 >. } = { <. 6 , 2 >. , <. 9 , 3 >. } `
       ( ~ ex-cnv ).  We use Quine's breve accent (smile) notation.  Like
       Quine, we use it as a prefix, which eliminates the need for
       parentheses.  Many authors use the postfix superscript "to the minus
       one."  "Converse" is Quine's terminology; some authors call it
       "inverse," especially when the argument is a function. $)
    df-cnv $a |- `' A = { <. x , y >. | y A x } $.

    $( Define the composition of two classes.  Definition 6.6(3) of
       [TakeutiZaring] p. 24.  For example, ` ( ( exp o. cos ) `` 0 ) = _e `
       ( ~ ex-co ) because ` ( cos `` 0 ) = 1 ` (see ~ cos0 ) and
       ` ( exp `` 1 ) = _e ` (see ~ df-e ).  Note that Definition 7 of [Suppes]
       p. 63 reverses ` A ` and ` B ` , uses ` /. ` instead of ` o. ` , and
       calls the operation "relative product." $)
    df-co $a |- ( A o. B ) = { <. x , y >. | E. z ( x B z /\ z A y ) } $.

    $( Define the domain of a class.  Definition 3 of [Suppes] p. 59.  For
       example, ` F = { <. 2 , 6 >. , <. 3 , 9 >. } -> dom F = { 2 , 3 } `
       ( ~ ex-dm ).  Another example is the domain of the complex arctangent,
       ` ( A e. dom arctan <-> ( A e. CC /\ A =/= -u _i /\ A =/= _i ) ) ` (for
       proof see ~ atandm ).  Contrast with range (defined in ~ df-rn ).  For
       alternate definitions see ~ dfdm2 , ~ dfdm3 , and ~ dfdm4 .  The
       notation " ` dom ` " is used by Enderton; other authors sometimes use
       script D. $)
    df-dm $a |- dom A = { x | E. y x A y } $.

    $( Define the range of a class.  For example,
       ` F = { <. 2 , 6 >. , <. 3 , 9 >. } -> ran F = { 6 , 9 } ` ( ~ ex-rn ).
       Contrast with domain (defined in ~ df-dm ).  For alternate definitions,
       see ~ dfrn2 , ~ dfrn3 , and ~ dfrn4 .  The notation " ` ran ` " is used
       by Enderton; other authors sometimes use script R or script W. $)
    df-rn $a |- ran A = dom `' A $.

    $( Define the restriction of a class.  Definition 6.6(1) of [TakeutiZaring]
       p. 24.  For example, the expression ` ( exp |`` RR ) ` (used in
       ~ reeff1 ) means "the exponential function e to the x, but the exponent
       x must be in the reals" ( ~ df-ef defines the exponential function,
       which normally allows the exponent to be a complex number).  Another
       example is that ` ( F = { <. 2 , 6 >. , <. 3 , 9 >. } `
       ` /\ B = { 1 , 2 } ) -> ( F |`` B ) = { <. 2 , 6 >. } ` ( ~ ex-res ). $)
    df-res $a |- ( A |` B ) = ( A i^i ( B X. _V ) ) $.

    $( Define the image of a class (as restricted by another class).
       Definition 6.6(2) of [TakeutiZaring] p. 24.  For example,
` ( F = { <. 2 , 6 >. , <. 3 , 9 >. } /\ B = { 1 , 2 } ) -> ( F " B ) = { 6 } `
       ( ~ ex-ima ).  Contrast with restriction ( ~ df-res ) and range
       ( ~ df-rn ).  For an alternate definition, see ~ dfima2 . $)
    df-ima $a |- ( A " B ) = ran ( A |` B ) $.

    $( Define predicate that determines if some class ` A ` is a function.
       Definition 10.1 of [Quine] p. 65.  For example, the expression
       ` Fun cos ` is true once we define cosine ( ~ df-cos ).  This is not the
       same as defining a specific function's mapping, which is typically done
       using the format of ~ cmpt with the maps-to notation (see ~ df-mpt and
       ~ df-mpt2 ).  Contrast this predicate with the predicates to determine
       if some class is a function with a given domain ( ~ df-fn ), a function
       with a given domain and codomain ( ~ df-f ), a one-to-one function
       ( ~ df-f1 ), an onto function ( ~ df-fo ), or a one-to-one onto function
       ( ~ df-f1o ).  For alternate definitions, see ~ dffun2 , ~ dffun3 ,
       ~ dffun4 , ~ dffun5 , ~ dffun6 , ~ dffun7 , ~ dffun8 , and ~ dffun9 . $)
    df-fun $a |- ( Fun A <-> ( Rel A /\ ( A o. `' A ) C_ _I ) ) $.

    $( Define a function with domain.  Definition 6.15(1) of [TakeutiZaring]
       p. 27.  For alternate definitions, see ~ dffn2 , ~ dffn3 , ~ dffn4 , and
       ~ dffn5 . $)
    df-fn $a |- ( A Fn B <-> ( Fun A /\ dom A = B ) ) $.

    $( Define a function (mapping) with domain and codomain.  Definition
       6.15(3) of [TakeutiZaring] p. 27.  For alternate definitions, see
       ~ dff2 , ~ dff3 , and ~ dff4 . $)
    df-f $a |- ( F : A --> B <-> ( F Fn A /\ ran F C_ B ) ) $.

    $( Define a one-to-one function.  For equivalent definitions see ~ dff12
       and ~ dff13 .  Compare Definition 6.15(5) of [TakeutiZaring] p. 27.  We
       use their notation ("1-1" above the arrow). $)
    df-f1 $a |- ( F : A -1-1-> B <-> ( F : A --> B /\ Fun `' F ) ) $.

    $( Define an onto function.  Definition 6.15(4) of [TakeutiZaring] p. 27.
       We use their notation ("onto" under the arrow).  For alternate
       definitions, see ~ dffo2 , ~ dffo3 , ~ dffo4 , and ~ dffo5 . $)
    df-fo $a |- ( F : A -onto-> B <-> ( F Fn A /\ ran F = B ) ) $.

    $( Define a one-to-one onto function.  For equivalent definitions see
       ~ dff1o2 , ~ dff1o3 , ~ dff1o4 , and ~ dff1o5 .  Compare Definition
       6.15(6) of [TakeutiZaring] p. 27.  We use their notation ("1-1" above
       the arrow and "onto" below the arrow). $)
    df-f1o $a |- ( F : A -1-1-onto-> B <->
                ( F : A -1-1-> B /\ F : A -onto-> B ) ) $.

    $( Define the value of a function, ` ( F `` A ) ` , also known as function
       application.  For example, ` ( cos `` 0 ) = 1 ` (we prove this in ~ cos0
       after we define cosine in ~ df-cos ).  Typically function ` F ` is
       defined using maps-to notation (see ~ df-mpt and ~ df-mpt2 ), but this
       is not required.  For example,
       ` F = { <. 2 , 6 >. , <. 3 , 9 >. } -> ( F `` 3 ) = 9 ` ( ~ ex-fv ).
       Note that ~ df-ov will define two-argument functions using ordered pairs
       as ` ( A F B ) = ( F `` <. A , B >. ) ` .  Although based on the idea
       embodied by Definition 10.2 of [Quine] p. 65 (see ~ args ), our
       definition apparently does not appear in the literature.  However, it is
       quite convenient: it can be applied to any class and evaluates to the
       empty set when it is not meaningful (as shown by ~ ndmfv and ~ fvprc ).
       The left apostrophe notation originated with Peano and was adopted in
       Definition *30.01 of [WhiteheadRussell] p. 235, Definition 10.11 of
       [Quine] p. 68, and Definition 6.11 of [TakeutiZaring] p. 26.  It means
       the same thing as the more familiar ` F ( A ) ` notation for a
       function's value at ` A ` , i.e.  " ` F ` of ` A ` ," but without
       context-dependent notational ambiguity.  Alternate definitions are
       ~ dffv2 and ~ dffv3 .  For other alternate definitions (that fail to
       evaluate to the empty set for proper classes), see ~ fv2 , ~ fv3 , and
       ~ fv4 .  Restricted equivalents that require ` F ` to be a function are
       shown in ~ funfv and ~ funfv2 .  For the familiar definition of function
       value in terms of ordered pair membership, see ~ funopfvb . $)
    df-fv $a |- ( F ` A ) = U. { x | ( F " { A } ) = { x } } $.
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( Define the isomorphism predicate.  We read this as " ` H ` is an ` R ` ,
       ` S ` isomorphism of ` A ` onto ` B ` ."  Normally, ` R ` and ` S ` are
       ordering relations on ` A ` and ` B ` respectively.  Definition 6.28 of
       [TakeutiZaring] p. 32, whose notation is the same as ours except that
       ` R ` and ` S ` are subscripts. $)
    df-iso $a |- ( H Isom R , S ( A , B ) <-> ( H : A -1-1-onto-> B /\
                 A. x e. A A. y e. A ( x R y <-> ( H ` x ) S ( H ` y ) ) ) ) $.
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.
    $( Equality theorem for cross product. $)
    xpeq1 $p |- ( A = B -> ( A X. C ) = ( B X. C ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi1d opabbidv df-xp 3eqtr4g ) A
      BFZDGZAHZEGCHZIZDEJRBHZTIZDEJACKBCKQUAUCDEQSUBTABRLMNDEACODEBCOP $.
      $( [4-Jul-1994] $)

    $( Equality theorem for cross product. $)
    xpeq2 $p |- ( A = B -> ( C X. A ) = ( C X. B ) ) $=
      ( vx vy wceq cv wcel wa copab cxp eleq2 anbi2d opabbidv df-xp 3eqtr4g ) A
      BFZDGCHZEGZAHZIZDEJRSBHZIZDEJCAKCBKQUAUCDEQTUBRABSLMNDECAODECBOP $.
      $( [5-Jul-1994] $)

    $( Membership in a cross product.  Uses fewer axioms than ~ elxp . $)
    elxpi $p |- ( A e. ( B X. C ) -> E. x E. y ( A = <. x , y >. /\
               ( x e. B /\ y e. C ) ) ) $=
      ( vz cv cop wceq wcel wa wex cab cxp eqeq1 anbi1d 2exbidv elabg ibi copab
      df-xp df-opab eqtri eleq2s ) CAGZBGZHZIZUEDJUFEJKZKZBLALZCFGZUGIZUIKZBLAL
      ZFMZDENZCUPJUKUOUKFCUPULCIZUNUJABURUMUHUIULCUGOPQRSUQUIABTUPABDEUAUIABFUB
      UCUD $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp $p |- ( A e. ( B X. C ) <-> E. x E. y ( A = <. x , y >. /\
               ( x e. B /\ y e. C ) ) ) $=
      ( cxp wcel cv wa copab cop wceq wex df-xp eleq2i elopab bitri ) CDEFZGCAH
      ZDGBHZEGIZABJZGCSTKLUAIBMAMRUBCABDENOUAABCPQ $.
      $( [4-Jul-1994] $)

    $( Membership in a cross product. $)
    elxp2 $p |- ( A e. ( B X. C ) <-> E. x e. B E. y e. C A = <. x , y >. ) $=
      ( cv wcel cop wceq wrex wa wex cxp df-rex r19.42v an13 exbii 3bitr3i elxp
      3bitr4ri ) AFZDGZCUABFZHIZBEJZKZALUDUBUCEGZKKZBLZALUEADJCDEMGUFUIAUBUDKZB
      EJUGUJKZBLUFUIUJBENUBUDBEOUKUHBUGUBUDPQRQUEADNABCDEST $.
      $( [23-Feb-2004] $)
  $}

  $( Equality theorem for cross product.  (Contributed by FL, 31-Aug-2009.) $)
  xpeq12 $p |- ( ( A = B /\ C = D ) -> ( A X. C ) = ( B X. D ) ) $=
    ( wceq cxp xpeq1 xpeq2 sylan9eq ) ABECDEACFBCFBDFABCGCDBHI $.
    $( [31-Aug-2009] $)

  ${
    xpeq1i.1 $e |- A = B $.
    $( Equality inference for cross product. $)
    xpeq1i $p |- ( A X. C ) = ( B X. C ) $=
      ( wceq cxp xpeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality inference for cross product. $)
    xpeq2i $p |- ( C X. A ) = ( C X. B ) $=
      ( wceq cxp xpeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    xpeq12i.1 $e |- A = B $.
    xpeq12i.2 $e |- C = D $.
    $( Equality inference for cross product.  (Contributed by FL,
       31-Aug-2009.) $)
    xpeq12i $p |- ( A X. C ) = ( B X. D ) $=
      ( wceq cxp xpeq12 mp2an ) ABGCDGACHBDHGEFABCDIJ $.
      $( [31-Aug-2009] $)
  $}

  ${
    xpeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq1d $p |- ( ph -> ( A X. C ) = ( B X. C ) ) $=
      ( wceq cxp xpeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [17-Jun-2010] $)

    $( Equality deduction for cross product.  (Contributed by Jeff Madsen,
       17-Jun-2010.) $)
    xpeq2d $p |- ( ph -> ( C X. A ) = ( C X. B ) ) $=
      ( wceq cxp xpeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [17-Jun-2010] $)

    xpeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for cross product. $)
    xpeq12d $p |- ( ph -> ( A X. C ) = ( B X. D ) ) $=
      ( wceq cxp xpeq12 syl2anc ) ABCHDEHBDICEIHFGBCDEJK $.
      $( [8-Dec-2013] $)
  $}

  ${
    $d y z w A $.  $d y z w B $.  $d x y z w $.
    hbxp.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbxp.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for cross product.  (The proof was
       shortened by Andrew Salmon, 12-Aug-2011.) $)
    hbxp $p |- ( y e. ( A X. B ) -> A. x y e. ( A X. B ) ) $=
      ( vz vw cxp cv wcel wa copab df-xp hblem hban hbopab hbxfreq ) ABCDIGJCKZ
      HJDKZLZGHMGHCDNUAGHABSTAABGCEOABHDFOPQR $.
      $( [12-Aug-2011] $) $( [15-Sep-2003] $)
  $}

  ${
    $d A w y z $.  $d B w y z $.  $d C w y z $.  $d D w y z $.  $d w x y z $.
    $( Distribute proper substitution through the cross product of two classes.
       ~ csbxpg is derived from the virtual deduction proof ~ csbxpgVD .
       (Contributed by Alan Sare, 10-Nov-2012. ) $)
    csbxpg $p |- ( A e. D -> [_ A / x ]_ ( B X. C ) =
                ( [_ A / x ]_ B X. [_ A / x ]_ C ) ) $=
      ( vz vw vy wcel cxp csb cv wa wex cab wsbc copab df-xp df-opab bitrd wceq
      cop eqtri csbeq2i csbabg sbcexg sbcang sbcg sbcel2g anbi12d exbidv abbidv
      3eqtrd syl6eqr ) BEIZABCDJZKZFLGLZHLZUBUAZURABCKZIZUSABDKZIZMZMZHNZGNZFOZ
      VAVCJZUOUQABUTURCIZUSDIZMZMZHNZGNZFOZKVPABPZFOVIABUPVQEUPVMGHQVQGHCDRVMGH
      FSUCUDVPAFBEUEUOVRVHFUOVRVOABPZGNVHVOGABEUFUOVSVGGUOVSVNABPZHNVGVNHABEUFU
      OVTVFHUOVTUTABPZVMABPZMVFUTVMABEUGUOWAUTWBVEUTABEUHUOWBVKABPZVLABPZMVEVKV
      LABEUGUOWCVBWDVDABURCEUIABUSDEUIUJTUJTUKTUKTULUMVJVEGHQVIGHVAVCRVEGHFSUCU
      N $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( The empty set is not a member of a cross product. $)
    0nelxp $p |- -. (/) e. ( A X. B ) $=
      ( vx vy c0 cxp wcel cv cop wceq wa wex wne wn opnzi simpl eqcomd necon3ai
      vex nex ax-mp elxp mtbir ) EABFGECHZDHZIZJZUDAGUEBGKZKZDLZCLUJCUIDUFEMUIN
      UDUECSDSOUIUFEUIEUFUGUHPQRUATTCDEABUBUC $.
      $( [26-Apr-2015] $) $( [2-May-1996] $)

    $( A member of a cross product (ordered pair) doesn't contain the empty
       set. $)
    0nelelxp $p |- ( C e. ( A X. B ) -> -. (/) e. C ) $=
      ( vx vy cxp wcel cv cop wceq wa wex c0 wn elxp 0nelop simpl eleq2d mtbiri
      exlimivv sylbi ) CABFGCDHZEHZIZJZUBAGUCBGKZKZELDLMCGZNZDECABOUGUIDEUGUHMU
      DGUBUCPUGCUDMUEUFQRSTUA $.
      $( [15-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Ordered pair membership in a cross product.  (The proof was shortened by
       Andrew Salmon, 12-Aug-2011.)  (Revised by Mario Carneiro,
       26-Apr-2015.) $)
    opelxp $p |- ( <. A , B >. e. ( C X. D ) <-> ( A e. C /\ B e. D ) ) $=
      ( vx vy cop cxp wcel cv wceq wrex wa elxp2 wb opth2 eleq1 bi2anan9 eqeq2d
      vex sylbi biimprcd rexlimivv opeq1 opeq2 rcla42ev mp3an3 impbii bitri
      eqid ) ABGZCDHIUKEJZFJZGZKZFDLECLZACIZBDIZMZEFUKCDNUPUSUOUSEFCDUOUSULCIZU
      MDIZMZUOAULKZBUMKZMUSVBOABULUMETFTPVCUQUTVDURVAAULCQBUMDQRUAUBUCUQURUKUKK
      ZUPUKUJUOVEUKAUMGZKEFABCDULAKUNVFUKULAUMUDSUMBKVFUKUKUMBAUESUFUGUHUI $.
      $( [12-Aug-2011] $) $( [15-Nov-1994] $)

    $( Binary relation on a cross product. $)
    brxp $p |- ( A ( C X. D ) B <-> ( A e. C /\ B e. D ) ) $=
      ( cxp wbr cop wcel wa df-br opelxp bitri ) ABCDEZFABGMHACHBDHIABMJABCDKL
      $.
      $( [22-Apr-2004] $)
  $}

  $( Ordered pair membership in a cross product (implication). $)
  opelxpi $p |- ( ( A e. C /\ B e. D ) -> <. A , B >. e. ( C X. D ) ) $=
    ( cop cxp wcel wa opelxp biimpri ) ABECDFGACGBDGHABCDIJ $.
    $( [28-May-1995] $)

  $( The first member of an ordered pair of classes in a cross product belongs
     to first cross product argument. $)
  opelxp1 $p |- ( <. A , B >. e. ( C X. D ) -> A e. C ) $=
    ( cop cxp wcel opelxp simplbi ) ABECDFGACGBDGABCDHI $.
    $( [26-Apr-2015] $) $( [28-May-2008] $)

  $( The second member of an ordered pair of classes in a cross product belongs
     to second cross product argument. $)
  opelxp2 $p |- ( <. A , B >. e. ( C X. D ) -> B e. D ) $=
    ( cop cxp wcel opelxp simprbi ) ABECDFGACGBDGABCDHI $.
    $( [26-Apr-2015] $)

  $( The first member of an ordered triple of classes in a cross product
     belongs to first cross product argument. $)
  otelxp1 $p |- ( <. <. A , B >. , C >. e. ( ( R X. S ) X. T )
          -> A e. R ) $=
    ( cop cxp wcel opelxp1 syl ) ABGZCGDEHZFHILMIADILCMFJABDEJK $.
    $( [28-May-2008] $)

  ${
    $d x y z A $.  $d x y z B $.  $d y z ph $.  $d x ps $.
    rabxp.1 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Membership in a class builder restricted to a cross product. $)
    rabxp $p |- { x e. ( A X. B ) | ph }
             = { <. y , z >. | ( y e. A /\ z e. B /\ ps ) } $=
      ( cv cxp wcel wa cab cop wceq w3a wex crab copab elxp anbi1i anass anbi2d
      19.41vv df-3an syl6bbr pm5.32i bitri 2exbii 3bitr2i abbii df-opab 3eqtr4i
      df-rab ) CIZFGJZKZALZCMUODIZEIZNOZUSFKZUTGKZBPZLZEQDQZCMACUPRVDDESURVFCUR
      VAVBVCLZLZEQDQZALVHALZEQDQVFUQVIADEUOFGTUAVHADEUDVJVEDEVJVAVGALZLVEVAVGAU
      BVAVKVDVAVKVGBLVDVAABVGHUCVBVCBUEUFUGUHUIUJUKACUPUNVDDECULUM $.
      $( [20-Feb-2014] $)
  $}

  $( A true binary relation on a relation implies the arguments are sets.
     (This is a property of our ordered pair definition.)  (Contributed by
     Mario Carneiro, 26-Apr-2015.) $)
  brrelex12 $p |- ( ( Rel R /\ A R B ) -> ( A e. _V /\ B e. _V ) ) $=
    ( wrel wbr wa cvv cxp wcel wss df-rel biimpi ssbrd imp brxp sylib ) CDZABCE
    ZFABGGHZEZAGIBGIFQRTQCSABQCSJCKLMNABGGOP $.
    $( [26-Apr-2015] $)

  $( A true binary relation on a relation implies the first argument is a set.
     (This is a property of our ordered pair definition.) $)
  brrelex $p |- ( ( Rel R /\ A R B ) -> A e. _V ) $=
    ( wrel wbr wa cvv wcel brrelex12 simpld ) CDABCEFAGHBGHABCIJ $.
    $( [26-Apr-2015] $) $( [18-May-2004] $)

  $( A true binary relation on a relation implies the second argument is a
     set.  (This is a property of our ordered pair definition.)  (Contributed
     by Mario Carneiro, 26-Apr-2015.) $)
  brrelex2 $p |- ( ( Rel R /\ A R B ) -> B e. _V ) $=
    ( wrel wbr wa cvv wcel brrelex12 simprd ) CDABCEFAGHBGHABCIJ $.
    $( [26-Apr-2015] $) $( [18-May-2004] $)

  ${
    brrelexi.1 $e |- Rel R $.
    $( The first argument of a binary relation exists.  (An artifact of our
       ordered pair definition.) $)
    brrelexi $p |- ( A R B -> A e. _V ) $=
      ( wrel wbr cvv wcel brrelex mpan ) CEABCFAGHDABCIJ $.
      $( [4-Jun-1998] $)

    $( The second argument of a binary relation exists.  (An artifact of our
       ordered pair definition.) $)
    brrelex2i $p |- ( A R B -> B e. _V ) $=
      ( wrel wbr cvv wcel brrelex2 mpan ) CEABCFBGHDABCIJ $.
      $( [26-Apr-2015] $)
  $}

  ${
    nprrel.1 $e |- Rel R $.
    nprrel.2 $e |- -. A e. _V $.
    $( No proper class is related to anything via any relation.  (Contributed
       by Roy F. Longton, 30-Jul-2005.) $)
    nprrel $p |- -. A R B $=
      ( wbr cvv wcel brrelexi mto ) ABCFAGHEABCDIJ $.
      $( [30-Jul-2005] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Representation of a constant function using ordered pairs. $)
    fconstopab $p |- ( A X. { B } ) = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( csn cxp cv wcel wa copab wceq df-xp elsn anbi2i opabbii eqtri ) CDEZFAG
      CHZBGZQHZIZABJRSDKZIZABJABCQLUAUCABTUBRBDMNOP $.
      $( [12-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y z C $.  $d x y z R $.
    vtoclr.1 $e |- Rel R $.
    vtoclr.2 $e |- ( ( x R y /\ y R z ) -> x R z ) $.
    $( Variable to class conversion of transitive relation. $)
    vtoclr $p |- ( ( A R B /\ B R C ) -> A R C ) $=
      ( wbr wa wi cvv wcel brrelex2i cv wceq breq1 imbi12d breq2 anbi1d anbi12d
      brrelexi jca imbi2d imbi1d anbi2d vtoclg vtocl2g syl2im imp pm2.43i ) DEG
      JZEFGJZKZDFGJZUMUNUOUPLZUMDMNZEMNZKUNFMNZUQUMURUSDEGHUCDEGHOUDEFGHOUTAPZB
      PZGJZVBFGJZKZVAFGJZLZLUTDVBGJZVDKZUPLZLUTUQLABDEMMVADQZVGVJUTVKVEVIVFUPVK
      VCVHVDVADVBGRUAVADFGRSUEVBEQZVJUQUTVLVIUOUPVLVHUMVDUNVBEDGTVBEFGRUBUFUEVC
      VBCPZGJZKZVAVMGJZLVGCFMVMFQZVOVEVPVFVQVNVDVCVMFVBGTUGVMFVAGTSIUHUIUJUKUL
      $.
      $( [26-Apr-2015] $) $( [9-Jun-1998] $)
  $}

  $( Ordered pair membership in the universal class of ordered pairs.
     (Contributed by Mario Carneiro, 3-May-2015.) $)
  opelvvg $p |- ( ( A e. V /\ B e. W ) -> <. A , B >. e. ( _V X. _V ) ) $=
    ( wcel cvv cop cxp elex opelxpi syl2an ) ACEAFEBFEABGFFHEBDEACIBDIABFFJK $.
    $( [3-May-2015] $)

  ${
    opelvv.1 $e |- A e. _V $.
    opelvv.2 $e |- B e. _V $.
    $( Ordered pair membership in the universal class of ordered pairs.
       (Revised by Mario Carneiro, 26-Apr-2015.) $)
    opelvv $p |- <. A , B >. e. ( _V X. _V ) $=
      ( cvv wcel cop cxp opelxpi mp2an ) AEFBEFABGEEHFCDABEEIJ $.
      $( [26-Apr-2015] $) $( [22-Aug-2013] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x D $.
    $( Justification theorem for an ordered pair definition that works for any
       classes, including proper classes.  This is a possible definition
       implied by the footnote in [Jech] p. 78, which says, "The sophisticated
       reader will not object to our use of a pair of classes." $)
    opthprc $p |- ( ( ( A X. { (/) } ) u. ( B X. { { (/) } } ) ) =
                    ( ( C X. { (/) } ) u. ( D X. { { (/) } } ) )
                  <-> ( A = C /\ B = D ) ) $=
      ( vx c0 csn cxp cun wceq wa wcel wo opelxp mpbiran2 bianfi bitr4i orbi12i
      elun 3bitr4ri cop eleq2 0ex snid 0nep0 elsnc nemtbir biorfi 3bitr4g eqrdv
      cv p0ex eqcom bitri wn wb biorf ax-mp jca xpeq1 uneq12 syl2an impbii ) AF
      GZHZBVDGZHZIZCVDHZDVFHZIZJZACJZBDJZKVLVMVNVLEACVLEUKZFUAZVHLZVPVKLZVOALZV
      OCLZVHVKVPUBVPVELZVPVGLZMVSFVFLZMVQVSWAVSWBWCWAVSFVDLZFUCUDZVOFAVDNOWBVOB
      LZWCKWCVOFBVFNWCWFWCFVDUEFVDUCUFUGZPQRVPVEVGSWCVSWGUHTVPVILZVPVJLZMVTWCMV
      RVTWHVTWIWCWHVTWDWEVOFCVDNOWIVODLZWCKWCVOFDVFNWCWJWGPQRVPVIVJSWCVTWGUHTUI
      UJVLEBDVLVOVDUAZVHLZWKVKLZWFWJVHVKWKUBWKVELZWKVGLZMVDVDLZWFMZWLWFWNWPWOWF
      WNVSWPKWPVOVDAVDNWPVSWPFVDUEWPVDFJFVDJVDFULUFVDFUMUNUGZPQWOWFVDVFLZVDULUD
      ZVOVDBVFNORWKVEVGSWPUOZWFWQUPWRWPWFUQURTWKVILZWKVJLZMWPWJMZWMWJXBWPXCWJXB
      VTWPKWPVOVDCVDNWPVTWRPQXCWJWSWTVOVDDVFNORWKVIVJSXAWJXDUPWRWPWJUQURTUIUJUS
      VMVEVIJVGVJJVLVNACVDUTBDVFUTVEVIVGVJVAVBVC $.
      $( [28-Sep-2003] $)
  $}

  ${
    brel.1 $e |- R C_ ( C X. D ) $.
    $( Two things in a binary relation belong to the relation's domain.
       (Revised by Mario Carneiro, 26-Apr-2015.) $)
    brel $p |- ( A R B -> ( A e. C /\ B e. D ) ) $=
      ( wbr cxp wcel wa ssbri brxp sylib ) ABEGABCDHZGACIBDIJENABFKABCDLM $.
      $( [26-Apr-2015] $) $( [17-May-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a cross product. $)
    elxp3 $p |- ( A e. ( B X. C ) <->
            E. x E. y ( <. x , y >. = A /\ <. x , y >. e. ( B X. C ) ) ) $=
      ( cxp wcel cv cop wceq wa wex elxp eqcom opelxp anbi12i 2exbii bitr4i ) C
      DEFZGCAHZBHZIZJZTDGUAEGKZKZBLALUBCJZUBSGZKZBLALABCDEMUHUEABUFUCUGUDUBCNTU
      ADEOPQR $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d z C $.  $d z V $.
    $( Membership in a union of cross products. $)
    opeliunxp $p |- ( <. x , C >. e. U_ x e. A ( { x } X. B ) <->
                     ( x e. A /\ C e. B ) ) $=
      ( vz vy cv cop csn cxp ciun wcel csb wa wex wceq wrex ax-17 hbcsb1 3bitri
      hbxp csbeq1a xpeq12d cbviun eleq2i eliun df-rex opelxp anbi2i eqcom bitri
      sneq an12 elsn anbi1i exbii eleq1 sylbir eqcomd eleq2d anbi12d ceqsexv
      vex ) AGZDHZABVDIZCJZKZLZEGZBLZVEVJIZAVJCMZJZLZNZEOZVJVDPZVKDVMLZNZNZEOVD
      BLZDCLZNZVIVEEBVNKZLVOEBQVQVHWEVEAEFBVGVNFGZVGLERAFVLVMWFVLLARAFVJCWFVJLA
      RSUAVDVJPZVFVLCVMVDVJULAVJCUBZUCUDUEEVEBVNUFVOEBUGTVPWAEVPVKVDVLLZVSNZNWI
      VTNWAVOWJVKVDDVLVMUHUIVKWIVSUMWIVRVTWIWGVRAVJUNVDVJUJZUKUOTUPVTWDEVDAVCVR
      VKWBVSWCVJVDBUQVRVMCDVRCVMVRWGCVMPWKWHURUSUTVAVBT $.
      $( [29-Dec-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Distributive law for cross product over union.  Theorem 103 of [Suppes]
       p. 52. $)
    xpundi $p |- ( A X. ( B u. C ) ) = ( ( A X. B ) u. ( A X. C ) ) $=
      ( vx vy cv wcel cun wa copab cxp wo elun anbi2i andi bitri opabbii unopab
      eqtr4i df-xp uneq12i 3eqtr4i ) DFAGZEFZBCHZGZIZDEJZUCUDBGZIZDEJZUCUDCGZIZ
      DEJZHZAUEKABKZACKZHUHUJUMLZDEJUOUGURDEUGUCUIULLZIURUFUSUCUDBCMNUCUIULOPQU
      JUMDERSDEAUETUPUKUQUNDEABTDEACTUAUB $.
      $( [12-Aug-2004] $)

    $( Distributive law for cross product over union.  Similar to Theorem 103
       of [Suppes] p. 52. $)
    xpundir $p |- ( ( A u. B ) X. C ) = ( ( A X. C ) u. ( B X. C ) ) $=
      ( vx vy cv cun wcel wa copab cxp wo elun anbi1i andir bitri unopab eqtr4i
      opabbii df-xp uneq12i 3eqtr4i ) DFZABGZHZEFCHZIZDEJZUCAHZUFIZDEJZUCBHZUFI
      ZDEJZGZUDCKACKZBCKZGUHUJUMLZDEJUOUGURDEUGUIULLZUFIURUEUSUFUCABMNUIULUFOPS
      UJUMDEQRDEUDCTUPUKUQUNDEACTDEBCTUAUB $.
      $( [30-Sep-2002] $)
  $}

  ${
    $d w y z A $.  $d w y z B $.  $d w x y z C $.  $d x F $.
    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.) $)
    xpiundi $p |- ( C X. U_ x e. A B ) = U_ x e. A ( C X. B ) $=
      ( vz vw vy ciun cxp cv wrex wcel wa wex eliun exbii df-rex rexbii 3bitr4i
      elxp2 cop wceq rexcom anbi1i rexcom4 r19.41v 3bitri eqriv ) EDABCHZIZABDC
      IZHZEJZFJGJZUAUBZGUIKZFDKZUMUKLZABKZUMUJLUMULLUOGCKZABKZFDKUTFDKZABKUQUSU
      TFADBUCUPVAFDUNUILZUOMZGNUNCLZABKZUOMZGNZUPVAVDVGGVCVFUOAUNBCOUDPUOGUIQVA
      VEUOMZGNZABKVIABKZGNVHUTVJABUOGCQRVIAGBUEVKVGGVEUOABUFPUGSRURVBABFGUMDCTR
      SFGUMDUITAUMBUKOSUH $.
      $( [27-Apr-2014] $)

    $( Distributive law for cross product over indexed union.  (Revised by
       Mario Carneiro, 27-Apr-2014.) $)
    xpiundir $p |- ( U_ x e. A B X. C ) = U_ x e. A ( B X. C ) $=
      ( vz vy vw ciun cxp cv cop wrex wcel wa df-rex rexbii eliun elxp2 3bitr4i
      wex wceq rexcom4 anbi1i r19.41v bitr4i exbii 3bitr4ri eqriv ) EABCHZDIZAB
      CDIZHZEJZFJZGJKUAGDLZFUILZUMUKMZABLZUMUJMUMULMUNUIMZUONZFTZUOFCLZABLZUPUR
      UNCMZUONZFTZABLVEABLZFTVCVAVEAFBUBVBVFABUOFCOPUTVGFUTVDABLZUONVGUSVHUOAUN
      BCQUCVDUOABUDUEUFUGUOFUIOUQVBABFGUMCDRPSFGUMUIDRAUMBUKQSUH $.
      $( [27-Apr-2014] $)

    $( Distributive law for cross product over restriction.  (Contributed by
       Mario Carneiro, 11-Nov-2014.) $)
    resiundi $p |- ( F |` U_ x e. A B ) = U_ x e. A ( F |` B ) $=
      ( ciun cvv cxp cin cres xpiundir ineq2i iunin2 eqtr4i df-res wceq cv wcel
      a1i iuneq2i 3eqtr4i ) DABCEZFGZHZABDCFGZHZEZDUAIABDCIZEUCDABUDEZHUFUBUHDA
      BCFJKABDUDLMDUANABUGUEUGUEOAPBQDCNRST $.
      $( [11-Nov-2014] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( Membership in a union of cross products when the second factor is
       constant. $)
    iunxpconst $p |- U_ x e. A ( { x } X. B ) = ( A X. B ) $=
      ( cv csn ciun cxp xpiundir iunid xpeq1i eqtr3i ) ABADEZFZCGABLCGFBCGABLCH
      MBCABIJK $.
      $( [29-Dec-2014] $)
  $}

  $( The cross product of two unions. $)
  xpun $p |- ( ( A u. B ) X. ( C u. D ) ) =
            ( ( ( A X. C ) u. ( A X. D ) ) u. ( ( B X. C ) u. ( B X. D ) ) ) $=
    ( cun cxp xpundi xpundir uneq12i un4 3eqtri ) ABEZCDEFLCFZLDFZEACFZBCFZEZAD
    FZBDFZEZEOREPSEELCDGMQNTABCHABDHIOPRSJK $.
    $( [12-Aug-2004] $)

  ${
    $d w x y z A $.
    $( Membership in universal class of ordered pairs. $)
    elvv $p |- ( A e. ( _V X. _V ) <-> E. x E. y A = <. x , y >. ) $=
      ( cvv cxp wcel cv cop wceq wa wex elxp vex pm3.2i biantru 2exbii bitr4i )
      CDDEFCAGZBGZHIZRDFZSDFZJZJZBKAKTBKAKABCDDLTUDABUCTUAUBAMBMNOPQ $.
      $( [4-Jul-1994] $)

    $( Membership in universal class of ordered triples. $)
    elvvv $p |- ( A e. ( ( _V X. _V ) X. _V )
                 <-> E. x E. y E. z A = <. <. x , y >. , z >. ) $=
      ( vw cvv cxp wcel cv cop wceq wa wex elxp anass elvv anbi2i 2exbii bitr3i
      vex biantru ancom 19.42vv bitr2i 3bitr3i exrot4 excom opex eqeq2d ceqsexv
      opeq1 exbii bitri 3bitri ) DFFGZFGHDEIZCIZJZKZUPUOHZUQFHZLLZCMEMUPAIZBIZJ
      ZKZUSLZBMAMZCMEMZDVEUQJZKZCMZBMAMZECDUOFNVBVHECVBUSUTLZVALZVHUSUTVAOVNUSV
      FBMAMZLZVOVHUTVPUSABUPPQVAVNCTUAVHUSVFLZBMAMVQVGVRABVFUSUBRUSVFABUCUDUESR
      VIVGCMEMZBMAMVMVGABECUFVSVLABVSVGEMZCMVLVGECUGVTVKCUSVKEVEVCVDUHVFURVJDUP
      VEUQUKUIUJULUMRSUN $.
      $( [17-Dec-2008] $)

    $( An ordered pair contains its union. $)
    elvvuni $p |- ( A e. ( _V X. _V ) -> U. A e. A ) $=
      ( vx vy cvv cxp wcel cv cop wceq wex cuni elvv cpr vex uniop opi2 eqeltri
      unieq id eleq12d mpbiri exlimivv sylbi ) ADDEFABGZCGZHZIZCJBJAKZAFZBCALUG
      UIBCUGUIUFKZUFFUJUDUEMUFUDUEBNZCNZOUDUEUKULPQUGUHUJAUFAUFRUGSTUAUBUC $.
      $( [16-Sep-2006] $)
  $}

  $( Intersection of binary relation with cross product. $)
  brinxp2 $p |- ( A ( R i^i ( C X. D ) ) B <->
                ( A e. C /\ B e. D /\ A R B ) ) $=
    ( cxp cin wbr wa wcel w3a brin ancom brxp anbi1i df-3an bitr4i 3bitri ) ABE
    CDFZGHABEHZABSHZIUATIZACJZBDJZTKZABESLTUAMUBUCUDIZTIUEUAUFTABCDNOUCUDTPQR
    $.
    $( [26-Apr-2015] $) $( [3-Mar-2007] $)

  $( Intersection of binary relation with cross product. $)
  brinxp $p |- ( ( A e. C /\ B e. D ) ->
               ( A R B <-> A ( R i^i ( C X. D ) ) B ) ) $=
    ( cxp cin wbr wcel wa w3a brinxp2 df-3an bitri baibr ) ABECDFGHZACIZBDIZJZA
    BEHZPQRTKSTJABCDELQRTMNO $.
    $( [9-Mar-1997] $)

  ${
    $d x y z A $.  $d x y z R $.
    $( Intersection of partial order with cross product of its field. $)
    poinxp $p |- ( R Po A <-> ( R i^i ( A X. A ) ) Po A ) $=
      ( vx vy vz cv wbr wn wa wi wral cxp cin wpo wcel wb brinxp ralbidva df-po
      anbi12d simpll syl2anc notbid adantll adantlr imbi12d ralbiia 3bitr4i
      adantr ) CFZUJBGZHZUJDFZBGZUMEFZBGZIZUJUOBGZJZIZEAKZDAKZCAKUJUJBAALMZGZHZ
      UJUMVCGZUMUOVCGZIZUJUOVCGZJZIZEAKZDAKZCAKABNAVCNVBVMCAUJAOZVAVLDAVNUMAOZI
      ZUTVKEAVPUOAOZIZULVEUSVJVRUKVDVRVNVNUKVDPVNVOVQUAZVSUJUJAABQUBUCVRUQVHURV
      IVRUNVFUPVGVPUNVFPVQUJUMAABQUIVOVQUPVGPVNUMUOAABQUDTVNVQURVIPVOUJUOAABQUE
      UFTRRUGCDEABSCDEAVCSUH $.
      $( [10-Jul-2014] $)

    $( Intersection of total order with cross product of its field. $)
    soinxp $p |- ( R Or A <-> ( R i^i ( A X. A ) ) Or A ) $=
      ( vx vy wpo cv wbr wceq w3o wral wa cxp cin wor poinxp brinxp biidd df-so
      wcel wb ancoms 3orbi123d ralbidva ralbiia anbi12i 3bitr4i ) ABEZCFZDFZBGZ
      UHUIHZUIUHBGZIZDAJZCAJZKABAALMZEZUHUIUPGZUKUIUHUPGZIZDAJZCAJZKABNAUPNUGUQ
      UOVBABOUNVACAUHASZUMUTDAVCUIASZKZUJURUKUKULUSUHUIAABPVEUKQVDVCULUSTUIUHAA
      BPUAUBUCUDUECDABRCDAUPRUF $.
      $( [10-Jul-2014] $)

    $( Intersection of well-founded relation with cross product of its
       field. $)
    frinxp $p |- ( R Fr A <-> ( R i^i ( A X. A ) ) Fr A ) $=
      ( vz vy vx cv wss c0 wa wbr wn wral wrex wi wal wfr wb wcel ssel df-fr
      wne cxp cin anim12d brinxp ancoms notbid ralbidva rexbidva adantr pm5.74i
      syl6 impl albii 3bitr4i ) CFZAGZUPHUAZIZDFZEFZBJZKZDUPLZEUPMZNZCOUSUTVABA
      AUBUCZJZKZDUPLZEUPMZNZCOABPAVGPVFVLCUSVEVKUQVEVKQURUQVDVJEUPUQVAUPRZIZVCV
      IDUPVNUTUPRZIVBVHUQVMVOVBVHQZUQVMVOIVAARZUTARZIVPUQVMVQVOVRUPAVASUPAUTSUD
      VRVQVPUTVAAABUEUFULUMUGUHUIUJUKUNCEDABTCEDAVGTUO $.
      $( [10-Jul-2014] $)

    $( Intersection of set-like relation with cross product of its field. $)
    seinxp $p |- ( R Se A <-> ( R i^i ( A X. A ) ) Se A ) $=
      ( vy vx cv wbr crab cvv wcel cxp cin wse wb brinxp ancoms rabbidva eleq1d
      wral ralbiia df-se 3bitr4i ) CEZDEZBFZCAGZHIZDARUBUCBAAJKZFZCAGZHIZDARABL
      AUGLUFUJDAUCAIZUEUIHUKUDUHCAUBAIUKUDUHMUBUCAABNOPQSDCABTDCAUGTUA $.
      $( [22-Jun-2015] $)

    $( Intersection of well-ordering with cross product of its field. $)
    weinxp $p |- ( R We A <-> ( R i^i ( A X. A ) ) We A ) $=
      ( wfr wor wa cxp cin wwe frinxp soinxp anbi12i df-we 3bitr4i ) ABCZABDZEA
      BAAFGZCZAPDZEABHAPHNQORABIABJKABLAPLM $.
      $( [10-Jul-2014] $) $( [9-Mar-1997] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    $( Partial ordering of a singleton.  (Revised by Mario Carneiro,
       28-Dec-2014.) $)
    posn $p |- ( Rel R -> ( R Po { A } <-> -. A R A ) ) $=
      ( vx vy vz cvv wpo wbr wn wb cv wa wi wral breq2 anbi2d ralsng ralbidv c0
      wceq wrel wcel csn df-po simpl syl5ib biantrud bicomd bitrd breq12 anidms
      imbi12d notbid adantl syl5bb po0 snprc poeq2 sylbi mpbiri brrelex ex 2thd
      con3d imp pm2.61dan ) BUAZAFUBZAUCZBGZAABHZIZJVJCKZVMBHZIZVMDKZBHZVPEKZBH
      ZLZVMVRBHZMZLZEVINZDVINZCVINZVGVHLVLCDEVIBUDVHWFVLJVGVHWFVOCVINVLVHWEVOCV
      IVHWEVOVQVPABHZLZVMABHZMZLZDVINVOVHWDWKDVIWCWKEAFVRATZWBWJVOWLVTWHWAWIWLV
      SWGVQVRAVPBOPVRAVMBOULPQRWKVODAFVPATZVOWKWMWJVOWHVQWMWIVQWGUEVPAVMBOUFUGU
      HQUIRVOVLCAFVMATZVNVKWNVNVKJVMAVMABUJUKUMQUIUNUOVGVHIZLVJVLWOVJVGWOVJSBGZ
      BUPWOVISTVJWPJAUQVISBURUSUTUNVGWOVLVGVKVHVGVKVHAABVAVBVDVEVCVF $.
      $( [23-Apr-2015] $) $( [27-Apr-2009] $)

    $( Strict ordering on a singleton.  (Contributed by Mario Carneiro,
       28-Dec-2014.) $)
    sosn $p |- ( Rel R -> ( R Or { A } <-> -. A R A ) ) $=
      ( vx vy csn wor wpo wrel wbr wn cv wceq wral wa df-so wcel elsni sylan9eq
      w3o eqcomd 3mix2 syl rgen2 biantru bitr4i posn syl5bb ) AEZBFZUHBGZBHAABI
      JUIUJCKZDKZBIZUKULLZULUKBIZSZDUHMCUHMZNUJCDUHBOUQUJUPCDUHUHUKUHPZULUHPZNU
      NUPURUSUKAULUKAQUSULAULAQTRUNUMUOUAUBUCUDUEABUFUG $.
      $( [28-Dec-2014] $)

    $( Founded relation on a singleton.  (Contributed by Mario Carneiro,
       28-Dec-2014.) $)
    frsn $p |- ( Rel R -> ( R Fr { A } <-> -. A R A ) ) $=
      ( vz vy vx cvv wcel wfr wbr wn wb wa cv wral wrex c0 wne wi wceq adantl
      wrel csn wss wal df-fr df-ne wo simpr sssn sylib syl5bi impr eqimss snnzg
      ord ad2antlr eqnetrd jca impbida imbi1d snex idi raleq rexeqbi1dv ceqsalv
      albidv syl6bb syl5bb breq2 notbid ralbidv rexsng breq1 ralsng bitrd snprc
      fr0 freq2 mpbiri sylbi brrelex ex con3d imp 2thd pm2.61dan ) BUAZAFGZAUBZ
      BHZAABIZJZKWGWHLZWJCMZDMZBIZJZCWINZDWIOZWLWJEMZWIUCZWTPQZLZWQCWTNZDWTOZRZ
      EUDZWMWSEDCWIBUEWMXGWTWISZXERZEUDWSWMXFXIEWMXCXHXEWMXCXHWMXAXBXHXBWTPSZJW
      MXALZXHWTPUFXKXJXHXKXAXJXHUGWMXAUHWTAUIUJUOUKULWMXHLZXAXBXHXAWMWTWIUMTXLW
      TWIPWMXHUHWHWIPQWGXHAFUNUPUQURUSUTVFXEWSEWIWIFGAVAVBXDWRDWTWIWQCWTWIVCVDV
      EVGVHWHWSWLKWGWHWSWNABIZJZCWINZWLWRXODAFWOASZWQXNCWIXPWPXMWOAWNBVIVJVKVLX
      NWLCAFWNASXMWKWNAABVMVJVNVOTVOWGWHJZLWJWLXQWJWGXQWIPSZWJAVPXRWJPBHBVQWIPB
      VRVSVTTWGXQWLWGWKWHWGWKWHAABWAWBWCWDWEWF $.
      $( [23-Apr-2015] $) $( [28-Dec-2014] $)

    $( Well-ordering of a singleton.  (Contributed by Mario Carneiro,
       28-Dec-2014.) $)
    wesn $p |- ( Rel R -> ( R We { A } <-> -. A R A ) ) $=
      ( wrel csn wfr wor wa wbr wn wwe frsn sosn anbi12d df-we pm4.24 3bitr4g )
      BCZADZBEZRBFZGAABHIZUAGRBJUAQSUATUAABKABLMRBNUAOP $.
      $( [28-Dec-2014] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( An abstraction relation is a subset of a related cross product. $)
    opabssxp $p |- { <. x , y >. | ( ( x e. A /\ y e. B ) /\ ph ) }
                   C_ ( A X. B ) $=
      ( cv wcel wa copab cxp simpl ssopab2i df-xp sseqtr4i ) BFDGCFEGHZAHZBCIOB
      CIDEJPOBCOAKLBCDEMN $.
      $( [16-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y ps $.
    brab2ga.1 $e |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) $.
    brab2ga.2 $e |- R = { <. x , y >. | ( ( x e. C /\ y e. D ) /\ ph ) } $.
    $( The law of concretion for a binary relation.  (Contributed by Mario
       Carneiro, 28-Apr-2015.) $)
    brab2ga $p |- ( A R B <-> ( ( A e. C /\ B e. D ) /\ ps ) ) $=
      ( wbr wcel wa cv copab cxp opabssxp eqsstri brel eleq2i opelopab2a syl5bb
      cop df-br bitri biadan2 ) EFILZEGMFHMNZBEFGHIICOGMDOHMNANCDPZGHQKACDGHRST
      UHEFUDZUJMZUIBUHUKIMULEFIUEIUJUKKUAUFABCDEFGHJUBUCUG $.
      $( [28-Apr-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ps $.
    optocl.1 $e |- D = ( B X. C ) $.
    optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    optocl.3 $e |- ( ( x e. B /\ y e. C ) -> ph ) $.
    $( Implicit substitution of class for ordered pair. $)
    optocl $p |- ( A e. D -> ps ) $=
      ( cxp wcel cv cop wceq wa wex elxp3 sylbi opelxp syl5ib exlimivv eleq2s
      imp ) BEFGLZHEUFMCNZDNZOZEPZUIUFMZQZDRCRBCDEFGSULBCDUJUKBUKAUJBUKUGFMUHGM
      QAUGUHFGUAKTJUBUEUCTIUD $.
      $( [5-Mar-1995] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.  $d x y z w D $.
    $d x y ps $.  $d z w ch $.  $d z w R $.
    2optocl.1 $e |- R = ( C X. D ) $.
    2optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    2optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    2optocl.4 $e |- ( ( ( x e. C /\ y e. D ) /\ ( z e. C /\ w e. D ) ) ->
                   ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    2optocl $p |- ( ( A e. R /\ B e. R ) -> ch ) $=
      ( wcel wi cv cop wceq imbi2d wa ex optocl com12 impcom ) ILQHLQZCUHBRUHCR
      FGIJKLMFSZGSZTIUABCUHOUBUHUIJQUJKQUCZBUKARUKBRDEHJKLMDSZESZTHUAABUKNUBULJ
      QUMKQUCUKAPUDUEUFUEUG $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d z w v u B $.  $d v u C $.  $d x y z w v u D $.
    $d x y z w v u F $.  $d z w v u R $.  $d x y ps $.  $d z w ch $.
    $d v u th $.
    3optocl.1 $e |- R = ( D X. F ) $.
    3optocl.2 $e |- ( <. x , y >. = A -> ( ph <-> ps ) ) $.
    3optocl.3 $e |- ( <. z , w >. = B -> ( ps <-> ch ) ) $.
    3optocl.4 $e |- ( <. v , u >. = C -> ( ch <-> th ) ) $.
    3optocl.5 $e |- ( ( ( x e. D /\ y e. F ) /\ ( z e. D /\ w e. F )
                    /\ ( v e. D /\ u e. F ) ) -> ph ) $.
    $( Implicit substitution of classes for ordered pairs. $)
    3optocl $p |- ( ( A e. R /\ B e. R /\ C e. R ) -> th ) $=
      ( wcel wa wi cv cop wceq imbi2d 3expia 2optocl com12 optocl impcom 3impa
      ) KOUBZLOUBZMOUBZDUQUOUPUCZDURCUDURDUDIJMNPOQIUEZJUEZUFMUGCDURTUHURUSNUBU
      TPUBUCZCVAAUDVABUDVACUDEFGHKLNPOQEUEZFUEZUFKUGABVARUHGUEZHUEZUFLUGBCVASUH
      VBNUBVCPUBUCVDNUBVEPUBUCVAAUAUIUJUKULUMUN $.
      $( [12-Mar-1995] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u D $.  $d x y z w v u S $.  $d x y ph $.  $d z w v u ps $.
    opbrop.1 $e |- ( ( ( z = A /\ w = B ) /\ ( v = C /\ u = D ) ) ->
                     ( ph <-> ps ) ) $.
    opbrop.2 $e |- R = { <. x , y >. | ( ( x e. ( S X. S ) /\
                      y e. ( S X. S ) ) /\
                      E. z E. w E. v E. u ( ( x = <. z , w >. /\
                      y = <. v , u >. ) /\ ph ) ) } $.
    $( Ordered pair membership in a relation.  Special case. $)
    opbrop $p |- ( ( ( A e. S /\ B e. S ) /\ ( C e. S /\ D e. S ) ) ->
                   ( <. A , B >. R <. C , D >. <-> ps ) ) $=
      ( wcel wa cv wex cop wbr cxp wceq opex eleq1 anbi1d eqeq1 4exbidv anbi12d
      anbi2d brab copsex4g syl5bb opelxpi anim12i biantrurd bitr4d ) INQJNQRZKN
      QLNQRZRZIJUAZKLUAZMUBZVBNNUCZQZVCVEQZRZBRZBVDVHVBESFSUAZUDZVCGSHSUAZUDZRZ
      ARZHTGTFTETZRZVAVICSZVEQZDSZVEQZRZVRVJUDZVTVLUDZRZARZHTGTFTETZRVFWARZVKWD
      RZARZHTGTFTETZRVQCDVBVCMIJUEKLUEVRVBUDZWBWHWGWKWLVSVFWAVRVBVEUFUGWLWFWJEF
      GHWLWEWIAWLWCVKWDVRVBVJUHUGUGUIUJVTVCUDZWHVHWKVPWMWAVGVFVTVCVEUFUKWMWJVOE
      FGHWMWIVNAWMWDVMVKVTVCVLUHUKUGUIUJPULVAVPBVHABEFGHIJKLNNOUMUKUNVAVHBUSVFU
      TVGIJNNUOKLNNUOUPUQUR $.
      $( [5-Aug-1995] $)
  $}

  ${
    $d x y z A $.
    $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
       of [Monk1] p. 37. $)
    xp0r $p |- ( (/) X. A ) = (/) $=
      ( vz vx vy c0 cxp cv wcel cop wceq wa wex elxp noel simprl mto nex 2false
      bitri eqriv ) BEAFZEBGZUAHUBCGZDGZIJZUCEHZUDAHZKKZDLZCLZUBEHZCDUBEAMUJUKU
      ICUHDUHUFUCNUEUFUGOPQQUBNRST $.
      $( [4-Jul-1994] $)
  $}

  ${
    $d x y z $.
    $( Ordinal numbers and ordered pairs are disjoint collections.  This
       theorem can be used if we want to extend a set of ordinal numbers or
       ordered pairs with disjoint elements.  See also ~ snsn0non .  (The proof
       was shortened by Andrew Salmon, 27-Aug-2011.) $)
    onxpdisj $p |- ( On i^i ( _V X. _V ) ) = (/) $=
      ( vx con0 cvv cxp cin c0 wceq cv wcel wn disj on0eqel 0nelxp eleq1 mtbiri
      wo 0nelelxp con2i jaoi syl mprgbir ) BCCDZEFGAHZUBIZJZABABUBKUCBIUCFGZFUC
      IZPUEUCLUFUEUGUFUDFUBICCMUCFUBNOUDUGCCUCQRSTUA $.
      $( [27-Aug-2011] $) $( [1-Jun-2004] $)
  $}

  $( The class of ordinal numbers is not equal to the universe.  (The proof was
     shortened by Mario Carneiro, 10-Jan-2013.) $)
  onnev $p |- On =/= _V $=
    ( c0 csn con0 wcel wn cvv wne snsn0non wceq snex syl5eleqr necon3bi ax-mp
    id ) ABZBZCDZECFGHQCFCFIZPFCOJRNKLM $.
    $( [26-Apr-2015] $) $( [16-Jun-2007] $)

  $( The class of ordinal numbers is not equal to the universe. $)
  onnevOLD $p |- On =/= _V $=
    ( cvv cxp c0 wne con0 cop wcel opelxpi mp2an ne0i ax-mp wceq ineq1 onxpdisj
    0ex cin incom inv1 eqtri 3eqtr3g eqcomd necon3i ) AABZCDZEADCCFZUCGZUDCAGZU
    GUFOOCCAAHIUCUEJKEAUCCEALZCUCUHEUCPAUCPZCUCEAUCMNUIUCAPUCAUCQUCRSTUAUBK $.
    $( [16-Jun-2007] $)

  $( Equality theorem for the relation predicate. $)
  releq $p |- ( A = B -> ( Rel A <-> Rel B ) ) $=
    ( wceq cvv cxp wss wrel sseq1 df-rel 3bitr4g ) ABCADDEZFBKFAGBGABKHAIBIJ $.
    $( [1-Aug-1994] $)

  ${
    releqi.1 $e |- A = B $.
    $( Equality inference for the relation predicate. $)
    releqi $p |- ( Rel A <-> Rel B ) $=
      ( wceq wrel wb releq ax-mp ) ABDAEBEFCABGH $.
      $( [8-Dec-2006] $)
  $}

  ${
    releqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the relation predicate. $)
    releqd $p |- ( ph -> ( Rel A <-> Rel B ) ) $=
      ( wceq wrel wb releq syl ) ABCEBFCFGDBCHI $.
      $( [8-Mar-2014] $)
  $}

  ${
    $d y A $.  $d x y $.
    hbrel.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for a relation. $)
    hbrel $p |- ( Rel A -> A. x Rel A ) $=
      ( wrel cvv cxp wss df-rel cv wcel ax-17 hbss hbxfrbi ) CECFFGZHACIABCODBJ
      OKALMN $.
      $( [31-Jan-2004] $)
  $}

  $( Subclass theorem for relation predicate.  Theorem 2 of [Suppes] p. 58. $)
  relss $p |- ( A C_ B -> ( Rel B -> Rel A ) ) $=
    ( wss cvv cxp wrel sstr2 df-rel 3imtr4g ) ABCBDDEZCAJCBFAFABJGBHAHI $.
    $( [15-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A subclass relationship depends only on a relation's ordered pairs.
       Theorem 3.2(i) of [Monk1] p. 33.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ssrel $p |- ( Rel A -> ( A C_ B <->
                A. x A. y ( <. x , y >. e. A -> <. x , y >. e. B ) ) ) $=
      ( vz wrel wss cv cop wcel wi wal ssel alrimivv wceq wex eleq1 imbi12d cvv
      dfss2 biimprcd 2alimi 19.23vv sylib com23 alimdv df-rel elvv imbi2i albii
      a2d cxp 3bitri 3imtr4g com12 impbid2 ) CFZCDGZAHBHIZCJZUSDJZKZBLALZURVBAB
      CDUSMNVCUQURVCEHZCJZVDUSOZBPAPZKZELZVEVDDJZKZELUQURVCVHVKEVCVEVGVJVCVGVEV
      JVCVFVKKZBLALVGVKKVBVLABVFVKVBVFVEUTVJVAVDUSCQVDUSDQRUAUBVFVKABUCUDUEUKUF
      UQCSSULZGVEVDVMJZKZELVICUGECVMTVOVHEVNVGVEABVDUHUIUJUMECDTUNUOUP $.
      $( [27-Aug-2011] $) $( [2-Aug-1994] $)

    $( Extensionality principle for relations.  Theorem 3.2(ii) of [Monk1]
       p. 33. $)
    eqrel $p |- ( ( Rel A /\ Rel B ) -> ( A = B <->
                A. x A. y ( <. x , y >. e. A <-> <. x , y >. e. B ) ) ) $=
      ( wrel wa wss cv cop wcel wi wal wceq ssrel bi2anan9 eqss 2albiim 3bitr4g
      wb ) CEZDEZFCDGZDCGZFAHBHIZCJZUDDJZKBLALZUFUEKBLALZFCDMUEUFSBLALTUBUGUAUC
      UHABCDNABDCNOCDPUEUFABQR $.
      $( [2-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    relssi.1 $e |- Rel A $.
    relssi.2 $e |- ( <. x , y >. e. A -> <. x , y >. e. B ) $.
    $( Inference from subclass principle for relations. $)
    relssi $p |- A C_ B $=
      ( wss cv cop wcel wi wal wrel wb ssrel ax-mp ax-gen mpgbir ) CDGZAHBHIZCJ
      TDJKZBLZACMSUBALNEABCDOPUABFQR $.
      $( [31-Mar-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y ph $.
    relssdv.1 $e |- ( ph -> Rel A ) $.
    relssdv.2 $e |- ( ph -> ( <. x , y >. e. A -> <. x , y >. e. B ) ) $.
    $( Deduction from subclass principle for relations. $)
    relssdv $p |- ( ph -> A C_ B ) $=
      ( wss cv cop wcel wi wal alrimivv wrel wb ssrel syl mpbird ) ADEHZBICIJZD
      KUAEKLZCMBMZAUBBCGNADOTUCPFBCDEQRS $.
      $( [11-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqrelriv.1 $e |- ( <. x , y >. e. A <-> <. x , y >. e. B ) $.
    $( Inference from extensionality principle for relations.  (Contributed by
       FL, 15-Oct-2012.) $)
    eqrelriv $p |- ( ( Rel A /\ Rel B ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal gen2 eqrel mpbiri ) CFDFGCDHAIBIJZCKQDK
      LZBMAMRABENABCDOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqreliiv.1 $e |- Rel A $.
    eqreliiv.2 $e |- Rel B $.
    eqreliiv.3 $e |- ( <. x , y >. e. A <-> <. x , y >. e. B ) $.
    $( Inference from extensionality principle for relations. $)
    eqrelriiv $p |- A = B $=
      ( wrel wceq eqrelriv mp2an ) CHDHCDIEFABCDGJK $.
      $( [17-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eqbrriv.1 $e |- Rel A $.
    eqbrriv.2 $e |- Rel B $.
    eqbrriv.3 $e |- ( x A y <-> x B y ) $.
    $( Inference from extensionality principle for relations. $)
    eqbrriv $p |- A = B $=
      ( cv wbr cop wcel df-br 3bitr3i eqrelriiv ) ABCDEFAHZBHZCIOPDIOPJZCKQDKGO
      PCLOPDLMN $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv.1 $e |- Rel A $.
    eqrelrdv.2 $e |- Rel B $.
    eqrelrdv.3 $e |- ( ph -> ( <. x , y >. e. A <-> <. x , y >. e. B ) ) $.
    $( Deduce equality of relations from equivalence of membership.
       (Contributed by Rodolfo Medina, 10-Oct-2010.) $)
    eqrelrdv $p |- ( ph -> A = B ) $=
      ( cv cop wcel wb wal wceq alrimivv wrel eqrel mp2an sylibr ) ABICIJZDKTEK
      LZCMBMZDENZAUABCHODPEPUCUBLFGBCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d ph x $.  $d ph y $.
    eqrelrdv2.1 $e |- ( ph
       -> ( <. x , y >. e. A <-> <. x , y >. e. B ) ) $.
    $( A version of ~ eqrelrdv .  (Contributed by Rodolfo Medina,
       10-Oct-2010.) $)
    eqrelrdv2 $p |- ( ( ( Rel A /\ Rel B ) /\ ph ) -> A = B ) $=
      ( wrel wa wceq cv cop wcel wb wal alrimivv adantl eqrel adantr mpbird ) D
      GEGHZAHDEIZBJCJKZDLUBELMZCNBNZAUDTAUCBCFOPTUAUDMABCDEQRS $.
      $( [10-Oct-2010] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.
    $( A subclass relationship determined by ordered triples.  Use ~ relrelss
       to express the antecedent in terms of the relation predicate.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    ssrelrel $p |- ( A C_ ( ( _V X. _V ) X. _V ) -> ( A C_ B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       -> <. <. x , y >. , z >. e. B ) ) ) $=
      ( vw cvv cxp wss cv cop wcel wi wal ssel alrimiv wex eleq1 sylib dfss2
      alrimivv wceq elvvv imbi12d biimprcd alimi 19.23v 2alimi syl5bi com23 a2d
      19.23vv alimdv 3imtr4g com12 impbid2 ) DGGHGHZIZDEIZAJBJKCJKZDLZUTELZMZCN
      ZBNANZUSVDABUSVCCDEUTOPUAVEURUSVEFJZDLZVFUQLZMZFNVGVFELZMZFNURUSVEVIVKFVE
      VGVHVJVEVHVGVJVHVFUTUBZCQZBQAQZVEVKABCVFUCVEVMVKMZBNANVNVKMVDVOABVDVLVKMZ
      CNVOVCVPCVLVKVCVLVGVAVJVBVFUTDRVFUTERUDUEUFVLVKCUGSUHVMVKABULSUIUJUKUMFDU
      QTFDETUNUOUP $.
      $( [27-Aug-2011] $) $( [17-Dec-2008] $)

    $( Extensionality principle for ordered triples (used by 2-place operations
       ~ df-oprab ), analogous to ~ eqrel .  Use ~ relrelss to express the
       antecedent in terms of the relation predicate. $)
    eqrelrel $p |- ( ( A u. B ) C_ ( ( _V X. _V ) X. _V ) -> ( A = B <->
                   A. x A. y A. z ( <. <. x , y >. , z >. e. A
                       <-> <. <. x , y >. , z >. e. B ) ) ) $=
      ( cun cvv cxp wss wa wceq cv cop wcel wb wal unss wi ssrelrel bi2anan9
      eqss 2albiim albii 19.26 bitri 3bitr4g sylbir ) DEFGGHGHZIDUHIZEUHIZJZDEK
      ZALBLMCLMZDNZUMENZOCPBPZAPZODEUHQUKDEIZEDIZJUNUORCPBPZAPZUOUNRCPBPZAPZJZU
      LUQUIURVAUJUSVCABCDESABCEDSTDEUAUQUTVBJZAPVDUPVEAUNUOBCUBUCUTVBAUDUEUFUG
      $.
      $( [17-Dec-2008] $)
  $}

  ${
    $d x y A $.
    $( A member of a relation is an ordered pair. $)
    elrel $p |- ( ( Rel R /\ A e. R ) -> E. x E. y A = <. x , y >. ) $=
      ( wrel wcel wa cvv cxp cop wceq wex wss df-rel biimpi sselda elvv sylib
      cv ) DEZCDFGCHHIZFCASBSJKBLALTDUACTDUAMDNOPABCQR $.
      $( [17-Sep-2006] $)
  $}

  ${
    relsn.1 $e |- A e. _V $.
    $( A singleton is a relation iff it is an ordered pair. $)
    relsn $p |- ( Rel { A } <-> A e. ( _V X. _V ) ) $=
      ( csn wrel cvv cxp wss wcel df-rel snss bitr4i ) ACZDLEEFZGAMHLIAMBJK $.
      $( [24-Sep-2013] $)

    relsnop.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is a relation. $)
    relsnop $p |- Rel { <. A , B >. } $=
      ( cop csn wrel cvv cxp wcel opelvv opex relsn mpbir ) ABEZFGOHHIJABCDKOAB
      LMN $.
      $( [26-Apr-2015] $) $( [17-May-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.
    $( Subset theorem for cross product.  Generalization of Theorem 101 of
       [Suppes] p. 52.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    xpss12 $p |- ( ( A C_ B /\ C C_ D ) -> ( A X. C ) C_ ( B X. D ) ) $=
      ( vx vy wss wa cv wcel copab cxp ssel im2anan9 ssopab2dv df-xp 3sstr4g )
      ABGZCDGZHZEIZAJZFIZCJZHZEFKUABJZUCDJZHZEFKACLBDLTUEUHEFRUBUFSUDUGABUAMCDU
      CMNOEFACPEFBDPQ $.
      $( [27-Aug-2011] $) $( [26-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is included in the ordered pair universe.  Exercise 3 of
       [TakeutiZaring] p. 25. $)
    xpss $p |- ( A X. B ) C_ ( _V X. _V ) $=
      ( cvv wss cxp ssv xpss12 mp2an ) ACDBCDABECCEDAFBFACBCGH $.
      $( [2-Aug-1994] $)
  $}

  $( A cross product is a relation.  Theorem 3.13(i) of [Monk1] p. 37. $)
  relxp $p |- Rel ( A X. B ) $=
    ( cxp wrel cvv wss xpss df-rel mpbir ) ABCZDJEECFABGJHI $.
    $( [2-Aug-1994] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss1 $p |- ( A C_ B -> ( A X. C ) C_ ( B X. C ) ) $=
    ( wss cxp ssid xpss12 mpan2 ) ABDCCDACEBCEDCFABCCGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  $( Subset relation for cross product.  (Contributed by Jeff Hankins,
     30-Aug-2009.) $)
  xpss2 $p |- ( A C_ B -> ( C X. A ) C_ ( C X. B ) ) $=
    ( wss cxp ssid xpss12 mpan ) CCDABDCAECBEDCFCCABGH $.
    $( [8-Mar-2011] $) $( [14-Aug-2009] $)

  ${
    $d A x y z $.  $d B x y z $.
    $( A cross product is included in the power of the power of the union of
       its arguments. $)
    xpsspw $p |- ( A X. B ) C_ ~P ~P ( A u. B ) $=
      ( vz vx vy cun cpw cv wcel wss wceq wa wex csn cpr snssi sseq1 syl5ibrcom
      vex syl cxp cop elxpi dfop wo ssun3 adantr df-pr ssun4 anim12i unss sylib
      syl5eqss jaod elpr 3imtr4g ssrdv biimpar sylan2 exlimivv sylibr ssriv
      elpw ) CABUAZABFZGZGZCHZVDIZVHVFJZVHVGIVIVHDHZEHZUBZKZVKAIZVLBIZLZLZEMDMV
      JDEVHABUCVRVJDEVQVNVMVFJZVJVQVMVKNZVKVLOZOZVFVKVLDSESUDVQCWBVFVQVHVTKZVHW
      AKZUEVHVEJZVHWBIVHVFIVQWCWEWDVQWEWCVTVEJZVOWFVPVOVTAJWFVKAPVTABUFTZUGVHVT
      VEQRVQWEWDWAVEJVQWAVTVLNZFZVEVKVLUHVQWFWHVEJZLWIVEJVOWFVPWJWGVPWHBJWJVLBP
      WHBAUITUJVTWHVEUKULUMVHWAVEQRUNVHVTWACSZUOVHVEWKVCUPUQUMVNVJVSVHVMVFQURUS
      UTTVHVFWKVCVAVB $.
      $( [13-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( A cross product is included in the power of the power of the union of
       its arguments. $)
    xpsspwOLD $p |- ( A X. B ) C_ ~P ~P ( A u. B ) $=
      ( vx vy cxp cun cpw relxp cv wcel csn cpr wss snssi syl elpw sylibr sylib
      wa vex opelxp ssun3 snex adantr df-pr ssun4 anim12i unss syl5eqss zfpair2
      cop jca prex dfop eleq1i prss 3bitr4ri sylbi relssi ) CDABEZABFZGZGZABHCI
      ZDIZUKZUTJVDAJZVEBJZSZVFVCJZVDVEABUAVIVDKZVBJZVDVELZVBJZSZVJVIVLVNVGVLVHV
      GVKVAMZVLVGVKAMVPVDANVKABUBOZVKVAVDUCZPQUDVIVMVAMVNVIVMVKVEKZFZVAVDVEUEVI
      VPVSVAMZSVTVAMVGVPVHWAVQVHVSBMWAVEBNVSBAUFOUGVKVSVAUHRUIVMVACDUJZPQULVKVM
      LZVCJWCVBMVJVOWCVBVKVMUMPVFWCVCVDVECTDTUNUOVKVMVBVRWBUPUQRURUS $.
      $( [13-Sep-2006] $)
  $}

  $( The double class union of a cross product is included in the union of its
     arguments. $)
  unixpss $p |- U. U. ( A X. B ) C_ ( A u. B ) $=
    ( cxp cuni cun cpw wss xpsspw uniss ax-mp unipw sseqtri ) ABCZDZDZABEZFZDZP
    NQGORGNQFZDZQMSGNTGABHMSIJQKLNQIJPKL $.
    $( [16-Sep-2006] $)

  $( The cross product of two sets is a set.  Proposition 6.2 of
     [TakeutiZaring] p. 23. $)
  xpexg $p |- ( ( A e. V /\ B e. W ) -> ( A X. B ) e. _V ) $=
    ( wcel wa cun cpw cvv cxp unexg pwexg syl wss xpsspw ssexg mpan 3syl ) ACEB
    DEFZABGZHZIEZUAHZIEZABJZIEZSTIEUBABCDKTILMUAILUEUCNUDUFABOUEUCIPQR $.
    $( [14-Aug-1994] $)

  ${
    xpex.1 $e |- A e. _V $.
    xpex.2 $e |- B e. _V $.
    $( The cross product of two sets is a set.  Proposition 6.2 of
       [TakeutiZaring] p. 23. $)
    xpex $p |- ( A X. B ) e. _V $=
      ( cvv wcel cxp xpexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [14-Aug-1994] $)
  $}

  $( The union of two relations is a relation.  Compare Exercise 5 of
     [TakeutiZaring] p. 25. $)
  relun $p |- ( Rel ( A u. B ) <-> ( Rel A /\ Rel B ) ) $=
    ( cvv cxp wss wa cun wrel unss df-rel anbi12i 3bitr4ri ) ACCDZEZBMEZFABGZME
    AHZBHZFPHABMIQNROAJBJKPJL $.
    $( [12-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin1 $p |- ( Rel A -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss1 relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [16-Aug-1994] $)

  $( The intersection with a relation is a relation. $)
  relin2 $p |- ( Rel B -> Rel ( A i^i B ) ) $=
    ( cin wss wrel wi inss2 relss ax-mp ) ABCZBDBEJEFABGJBHI $.
    $( [17-Jan-2006] $)

  $( A difference cutting down a relation is a relation. $)
  reldif $p |- ( Rel A -> Rel ( A \ B ) ) $=
    ( cdif wss wrel wi difss relss ax-mp ) ABCZADAEJEFABGJAHI $.
    $( [31-Mar-1998] $)

  ${
    $d y A $.  $d y B $.  $d x y $.
    $( An indexed union is a relation iff each member of its indexed family is
       a relation. $)
    reliun $p |- ( Rel U_ x e. A B <-> A. x e. A Rel B ) $=
      ( vy ciun wrel cv wcel wrex cab cvv cxp wss wral df-iun releqi df-rel wal
      wi 3bitri abss dfss2 bitri ralbii ralcom4 r19.23v albii bitr4i ) ABCEZFDG
      ZCHZABIZDJZFUMKKLZMZCFZABNZUIUMADBCOPUMQUOULUJUNHZSZDRZUQULDUNUAUQUKURSZD
      RZABNVAABNZDRUTUPVBABUPCUNMVBCQDCUNUBUCUDVAADBUEVCUSDUKURABUFUGTUHT $.
      $( [19-Dec-2008] $)
  $}

  $( An indexed intersection is a relation if if at least one of the member of
     the indexed family is a relation. $)
  reliin $p |- ( E. x e. A Rel B -> Rel |^|_ x e. A B ) $=
    ( cvv cxp wss wrex ciin wrel iinss df-rel rexbii 3imtr4i ) CDDEZFZABGABCHZN
    FCIZABGPIABCNJQOABCKLPKM $.
    $( [8-Mar-2014] $)

  ${
    $d x A $.
    $( The union of a class is a relation iff any member is a relation.
       Exercise 6 of [TakeutiZaring] p. 25 and its converse. $)
    reluni $p |- ( Rel U. A <-> A. x e. A Rel x ) $=
      ( cuni wrel cv ciun wral uniiun releqi reliun bitri ) BCZDABAEZFZDMDABGLN
      ABHIABMJK $.
      $( [21-Dec-2008] $) $( [13-Aug-2004] $)

    $( The intersection of a class is a relation if at least one member is a
       relation. $)
    relint $p |- ( E. x e. A Rel x -> Rel |^| A ) $=
      ( cv wrel wrex ciin cint reliin intiin releqi sylibr ) ACZDABEABLFZDBGZDA
      BLHNMABIJK $.
      $( [8-Mar-2014] $)
  $}

  $( The empty set is a relation. $)
  rel0 $p |- Rel (/) $=
    ( c0 wrel cvv cxp wss 0ss df-rel mpbir ) ABACCDZEIFAGH $.
    $( [26-Apr-1998] $)

  ${
    $d ph z $.  $d u v x z $.  $d u v y z $.
    relopabi.1 $e |- A = { <. x , y >. | ph } $.
    $( A class of ordered pairs is a relation.  (The proof was shortened by
       Mario Carneiro, 21-Dec-2013.) $)
    relopabi $p |- Rel A $=
      ( vz wrel cvv cxp wss cv cop wceq wa wex cab copab df-opab wcel vex eqtri
      opelvv eleq1 mpbiri adantr exlimivv abssi eqsstri df-rel mpbir ) DGDHHIZJ
      DFKZBKZCKZLZMZANZCOBOZFPZUKDABCQUSEABCFRUAURFUKUQULUKSZBCUPUTAUPUTUOUKSUM
      UNBTCTUBULUOUKUCUDUEUFUGUHDUIUJ $.
      $( [21-Dec-2013] $)
  $}

  $( A class of ordered pairs is a relation.  (Unnecessary distinct variable
     restrictions were removed by Alan Sare, 9-Jul-2013.)  (The proof was
     shortened by Mario Carneiro, 21-Dec-2013.) $)
  relopab $p |- Rel { <. x , y >. | ph } $=
    ( copab eqid relopabi ) ABCABCDZGEF $.
    $( [9-Jul-2013] $) $( [8-Mar-1995] $)

  ${
    $d w x y z A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d ph z w $.
    $d ps z w $.
    $( The identity relation is a relation.  Part of Exercise 4.12(p) of
       [Mendelson] p. 235. $)
    reli $p |- Rel _I $=
      ( vx vy cv wceq cid dfid3 relopabi ) ACBCDABEABFG $.
      $( [21-Dec-2013] $) $( [26-Apr-1998] $)

    $( The membership relation is a relation. $)
    rele $p |- Rel _E $=
      ( vx vy cv wcel cep df-eprel relopabi ) ACBCDABEABFG $.
      $( [21-Dec-2013] $) $( [26-Apr-1998] $)

    $( A relation expressed as an ordered pair abstraction. $)
    opabid2 $p |- ( Rel A -> { <. x , y >. | <. x , y >. e. A } = A ) $=
      ( vz vw wrel cv cop wcel copab wceq wb wal vex opeq1 eleq1d opelopab gen2
      opeq2 relopab eqrel mpan mpbiri ) CFZAGZBGZHZCIZABJZCKZDGZEGZHZUIIUMCIZLZ
      EMDMZUODEUHUKUFHZCIUNABUKULDNENUEUKKUGUQCUEUKUFOPUFULKUQUMCUFULUKSPQRUIFU
      DUJUPLUHABTDEUICUAUBUC $.
      $( [11-Dec-2006] $)

    $( Intersection of two ordered pair class abstractions. $)
    inopab $p |- ( { <. x , y >. | ph } i^i { <. x , y >. | ps } ) =
               { <. x , y >. | ( ph /\ ps ) } $=
      ( vz vw copab cin wrel relopab relin1 ax-mp cop wcel wsbc sban opelopabsb
      wa cv sbbii anbi12i 3bitr4ri elin 3bitr4i eqrelriiv ) EFACDGZBCDGZHZABRZC
      DGZUFIUHIACDJUFUGKLUICDJESZFSZMZUFNZUMUGNZRZUICUKOZDULOZUMUHNUMUJNACUKOZB
      CUKOZRZDULOUSDULOZUTDULOZRURUPUSUTDFPUQVADFABCEPTUNVBUOVCACDEFQBCDEFQUAUB
      UMUFUGUCUICDEFQUDUE $.
      $( [30-Sep-2002] $)

    $( The difference of two ordered-pair abstractions.  (Contributed by Stefan
       O'Rear, 17-Jan-2015.) $)
    difopab $p |- ( { <. x , y >. | ph } \ { <. x , y >. | ps } ) =
        { <. x , y >. | ( ph /\ -. ps ) } $=
      ( vz vw copab cdif wn wa wrel relopab cv wcel sban sbbii bitri opelopabsb
      wsb sbn reldif ax-mp cop anbi2i notbii anbi12i 3bitr4ri 3bitr4i eqrelriiv
      eldif ) EFACDGZBCDGZHZABIZJZCDGZUKKUMKACDLUKULUAUBUOCDLEMFMUCZUKNZUQULNZI
      ZJZUOCESZDFSZUQUMNUQUPNACESZUNCESZJZDFSZVDDFSZBCESZDFSZIZJZVCVAVGVHVEDFSZ
      JVLVDVEDFOVMVKVHVMVIIZDFSVKVEVNDFBCETPVIDFTQUDQVBVFDFAUNCEOPURVHUTVKACDEF
      RUSVJBCDEFRUEUFUGUQUKULUJUOCDEFRUHUI $.
      $( [17-Jan-2015] $)

    $( The intersection of two cross products.  Exercise 9 of [TakeutiZaring]
       p. 25.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    inxp $p |- ( ( A X. B ) i^i ( C X. D ) ) =
                   ( ( A i^i C ) X. ( B i^i D ) ) $=
      ( vx vy cv wcel wa copab cin cxp inopab elin anbi12i bitr4i opabbii eqtri
      an4 df-xp ineq12i 3eqtr4i ) EGZAHZFGZBHZIZEFJZUCCHZUEDHZIZEFJZKZUCACKZHZU
      EBDKZHZIZEFJZABLZCDLZKUNUPLUMUGUKIZEFJUSUGUKEFMVBUREFVBUDUIIZUFUJIZIURUDU
      FUIUJSUOVCUQVDUCACNUEBDNOPQRUTUHVAULEFABTEFCDTUAEFUNUPTUB $.
      $( [27-Aug-2011] $) $( [3-Aug-1994] $)

    $( Distributive law for cross product over intersection.  Theorem 102 of
       [Suppes] p. 52. $)
    xpindi $p |- ( A X. ( B i^i C ) ) = ( ( A X. B ) i^i ( A X. C ) ) $=
      ( cxp cin inxp inidm xpeq1i eqtr2i ) ABDACDEAAEZBCEZDAKDABACFJAKAGHI $.
      $( [26-Sep-2004] $)

    $( Distributive law for cross product over intersection.  Similar to
       Theorem 102 of [Suppes] p. 52. $)
    xpindir $p |- ( ( A i^i B ) X. C ) = ( ( A X. C ) i^i ( B X. C ) ) $=
      ( cxp cin inxp inidm xpeq2i eqtr2i ) ACDBCDEABEZCCEZDJCDACBCFKCJCGHI $.
      $( [26-Sep-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z C $.  $d y z B $.
    $( Distributive law for cross product over indexed intersection.
       (Contributed by Mario Carneiro, 21-Mar-2015.) $)
    xpiindi $p |- ( A =/= (/) ->
      ( C X. |^|_ x e. A B ) = |^|_ x e. A ( C X. B ) ) $=
      ( vy vz ciin cxp wrel wa wral relxp cv wcel wb eliin ax-mp opelxp 3bitr4g
      cvv wne wceq wrex rgenw r19.2z mpan2 reliin syl jctil cop r19.28zv bicomd
      c0 vex anbi2i ralbii opex eqrelrdv2 mpancom ) DABCGZHZIZABDCHZGZIZJBUMUAZ
      VAVDUBVFVEVBVFVCIZABUCZVEVFVGABKVHVGABDCLUDVGABUEUFABVCUGUHDUTLUIVFEFVAVD
      VFEMZDNZFMZUTNZJZVIVKUJZVCNZABKZVNVANVNVDNZVFVJVKCNZABKZJZVJVRJZABKZVMVPV
      FWBVTVJVRABUKULVLVSVJVKTNVLVSOFUNAVKBCTPQUOVOWAABVIVKDCRUPSVIVKDUTRVNTNVQ
      VPOVIVKUQAVNBVCTPQSURUS $.
      $( [27-Apr-2014] $)

    $( Distributive law for cross product over relativized indexed
       intersection.  (Contributed by Mario Carneiro, 21-Mar-2015.) $)
    xpriindi $p |- ( C X. ( D i^i |^|_ x e. A B ) ) =
      ( ( C X. D ) i^i |^|_ x e. A ( C X. B ) ) $=
      ( ciin cin cxp wceq c0 cvv iineq1 0iin syl6eq ineq2d xpeq2d eqtr4d xpindi
      inv1 wne xpiindi syl5eq pm2.61ine ) DEABCFZGZHZDEHZABDCHZFZGZIBJBJIZUFUGU
      JUKUEEDUKUEEKGEUKUDKEUKUDAJCFKABJCLACMNOESNPUKUJUGKGUGUKUIKUGUKUIAJUHFKAB
      JUHLAUHMNOUGSNQBJTZUFUGDUDHZGUJDEUDRULUMUIUGABCDUAOUBUC $.
      $( [21-Mar-2015] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.  $d x E $.  $d x V $.
    $( Membership in a union of cross products.  Analogue of ~ elxp for
       nonconstant ` B ( x ) ` . $)
    eliunxp $p |- ( C e. U_ x e. A ( { x } X. B ) <->
      E. x E. y ( C = <. x , y >. /\ ( x e. A /\ y e. B ) ) ) $=
      ( cv csn cxp ciun wcel cop wceq wex wa wrel wral relxp rgenw reliun exbii
      mpbir elrel mpan pm4.71ri ax-17 hbiu1 19.41 19.41v eleq1 opeliunxp syl6bb
      hbel pm5.32i bitr3i 3bitr2i ) EACAFZGZDHZIZJZEUPBFZKZLZBMZAMZUTNVDUTNZAMV
      CUPCJVADJNZNZBMZAMUTVEUSOZUTVEVJUROZACPVKACUQDQRACURSUAABEUSUBUCUDVDUTAAB
      BEUSVAEJAUEABCURUFULUGVFVIAVFVCUTNZBMVIVCUTBUHVLVHBVCUTVGVCUTVBUSJVGEVBUS
      UIACDVAUJUKUMTUNTUO $.
      $( [29-Dec-2014] $)

    opeliunxp2.1 $e |- ( x = C -> B = E ) $.
    $( Membership in a union of cross products. $)
    opeliunxp2 $p |- ( <. C , D >. e. U_ x e. A ( { x } X. B ) <->
      ( C e. A /\ D e. E ) ) $=
      ( vy cop cv csn cxp ciun wcel cvv wa wbr wrel wb ax-17 df-br relxp reliun
      wral rgenw mpbir mpan sylbir elex adantr hbiu1 hbel hbbi wceq opeq1 eleq1
      brrelex eleq1d eleq2d anbi12d bibi12d opeliunxp vtoclgf pm5.21nii ) DEIZA
      BAJZKZCLZMZNZDONZDBNZEFNZPZVJDEVIQZVKDEVIUAVIRZVOVKVPVHRZABUDVQABVGCUBUEA
      BVHUCUFDEVIUQUGUHVLVKVMDBUIUJVFEIZVINZVFBNZECNZPZSVJVNSAHDOHJZDNATVJVNAAH
      HVEVIWCVENATAHBVHUKULVNATUMVFDUNZVSVJWBVNWDVRVEVIVFDEUOURWDVTVLWAVMVFDBUP
      WDCFEGUSUTVAABCEVBVCVD $.
      $( [14-Feb-2015] $)
  $}

  ${
    $d x y z A $.  $d x z B $.  $d y z ph $.  $d x ps $.
    ralxp.1 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Write a double restricted quantification as one universal quantifier.
       In this version of ~ ralxp , ` B ( y ) ` is not assumed to be
       constant. $)
    raliunxp $p |- ( A. x e. U_ y e. A ( { y } X. B ) ph <->
      A. y e. A A. z e. B ps ) $=
      ( cv csn cxp ciun wcel wi wal wa wral cop wex albii eliunxp imbi1i bitr4i
      wceq 19.23vv alrot3 impexp opex imbi2d ceqsalv bitri 2albii 3bitri df-ral
      r2al 3bitr4i ) CIZDFDIZJGKLZMZANZCOZURFMEIZGMPZBNZEODOZACUSQBEGQDFQVBUQUR
      VCRZUDZVDPZANZEODOZCOVJCOZEODOVFVAVKCVAVIESDSZANVKUTVMADEFGUQUAUBVIADEUEU
      CTVJCDEUFVLVEDEVLVHVDANZNZCOVEVJVOCVHVDAUGTVNVECVGURVCUHVHABVDHUIUJUKULUM
      ACUSUNBDEFGUOUP $.
      $( [29-Dec-2014] $)

    $( Write a double restricted quantification as one universal quantifier.
       In this version of ~ rexxp , ` B ( y ) ` is not assumed to be constant.
       (Contributed by Mario Carneiro, 14-Feb-2015.) $)
    rexiunxp $p |- ( E. x e. U_ y e. A ( { y } X. B ) ph <->
      E. y e. A E. z e. B ps ) $=
      ( wn cv csn cxp ciun wral wrex cop wceq notbid raliunxp dfrex2 3bitr4i
      ralnex ralbii bitri notbii ) AIZCDFDJZKGLMZNZIBEGOZIZDFNZIACUHOUJDFOUIULU
      IBIZEGNZDFNULUFUMCDEFGCJUGEJPQABHRSUNUKDFBEGUBUCUDUEACUHTUJDFTUA $.
      $( [14-Feb-2015] $)

    $d y B $.
    $( Universal quantification restricted to a cross product is equivalent to
       a double restricted quantification.  The hypothesis specifies an
       implicit substitution. $)
    ralxp $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( cxp wral cv csn ciun iunxpconst raleqi raliunxp bitr3i ) ACFGIZJACDFDKL
      GIMZJBEGJDFJACSRDFGNOABCDEFGHPQ $.
      $( [29-Dec-2014] $) $( [7-Feb-2004] $)

    $( Existential quantification restricted to a cross product is equivalent
       to a double restricted quantification. $)
    rexxp $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( cxp wrex cv csn ciun wceq wb iunxpconst rexeq ax-mp rexiunxp bitr3i ) A
      CFGIZJZACDFDKLGIMZJZBEGJDFJUCUANUDUBODFGPACUCUAQRABCDEFGHST $.
      $( [14-Feb-2015] $) $( [11-Nov-1995] $)
  $}

  ${
    $d x A $.
    $( Disjoint union is a subset of a cross product.  (Contributed by Stefan
       O'Rear, 21-Nov-2014.) $)
    djussxp $p |- U_ x e. A ( { x } X. B ) C_ ( A X. _V ) $=
      ( cv csn cxp ciun cvv wss iunss wcel snssi ssv xpss12 sylancl mprgbir ) A
      BADZEZCFZGBHFZISTIZABABSTJQBKRBICHIUAQBLCMRBCHNOP $.
      $( [21-Nov-2014] $)
  $}

  ${
    $d u v w x y A $.  $d u v w x y z B $.  $d u v w ph $.  $d u v w ps $.
    ralxpf.1 $e |- ( ph -> A. y ph ) $.
    ralxpf.2 $e |- ( ph -> A. z ph ) $.
    ralxpf.3 $e |- ( ps -> A. x ps ) $.
    ralxpf.4 $e |- ( x = <. y , z >. -> ( ph <-> ps ) ) $.
    $( Version of ~ ralxp with bound-variable hypotheses. $)
    ralxpf $p |- ( A. x e. ( A X. B ) ph <-> A. y e. A A. z e. B ps ) $=
      ( vw vu vv wral cv wsbc wceq vex hbsb cxp cbvralsv ralbii ax-17 wcel hbs1
      hbral sbequ12 ralbidv cbvral cop wa wex eqvinop hbbi sbhypf opth sylan9bb
      wb sylbi exlimi ralxp 3bitr4ri bitri ) ACFGUAZOACLPZQZLVEOZBEGOZDFOZACLVE
      UBBDMPZQZEGOZMFOVLENPZQZNGOZMFOVJVHVMVPMFVLENGUBUCVIVMDMFVIMUDVLDEGEPZGUE
      DUDBDMUFZUGDPZVKRZBVLEGBDMUHZUIUJVGVOLMNFGVFVKVNUKZRVFVSVQUKZRZWCWBRZULZE
      UMZDUMVGVOUSZDEVFVKVNMSNSUNWGWHDVGVODACLDHTVLENDVRTUOWFWHEVGVOEACLEITVLEN
      UFUOWDVGBWEVOABCLWCJKUPWEVTVQVNRZULBVOUSVSVQVKVNDSESUQVTBVLWIVOWAVLENUHUR
      UTURVAVAUTVBVCVD $.
      $( [20-Dec-2008] $) $( [18-Aug-2006] $)

    $( Version of ~ rexxp with bound-variable hypotheses. $)
    rexxpf $p |- ( E. x e. ( A X. B ) ph <-> E. y e. A E. z e. B ps ) $=
      ( wn cxp wral wrex hbn cv cop wceq dfrex2 notbid ralxpf ralnex 3bitr4i
      ralbii bitri notbii ) ALZCFGMZNZLBEGOZLZDFNZLACUIOUKDFOUJUMUJBLZEGNZDFNUM
      UHUNCDEFGADHPAEIPBCJPCQDQEQRSABKUAUBUOULDFBEGUCUEUFUGACUITUKDFTUD $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d w x y A $.  $d w x y z B $.  $d w C $.  $d w D $.
    iunxpf.1 $e |- ( w e. C -> A. y w e. C ) $.
    iunxpf.2 $e |- ( w e. C -> A. z w e. C ) $.
    iunxpf.3 $e |- ( w e. D -> A. x w e. D ) $.
    iunxpf.4 $e |- ( x = <. y , z >. -> C = D ) $.
    $( Indexed union on a cross product is equals a double indexed union.  The
       hypothesis specifies an implicit substitution. $)
    iunxpf $p |- U_ x e. ( A X. B ) C = U_ y e. A U_ z e. B D $=
      ( cxp ciun cv wcel wrex cop wceq eliun eleq2d rexxpf rexbii bitri 3bitr4i
      eqriv ) DAEFMZGNZBECFHNZNZDOZGPZAUGQUKHPZCFQZBEQZUKUHPUKUJPZULUMABCEFIJKA
      OBOCORSGHUKLUAUBAUKUGGTUPUKUIPZBEQUOBUKEUITUQUNBECUKFHTUCUDUEUF $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x y A $.  $d x y ph $.
    opabbi2dv.1 $e |- Rel A $.
    opabbi2dv.3 $e |- ( ph -> ( <. x , y >. e. A <-> ps ) ) $.
    $( Deduce equality of a relation and an ordered-pair class builder.
       Compare ~ abbi2dv . $)
    opabbi2dv $p |- ( ph -> A = { <. x , y >. | ps } ) $=
      ( cv cop wcel copab wrel wceq opabid2 ax-mp opabbidv syl5eqr ) AECHDHIEJZ
      CDKZBCDKELSEMFCDENOARBCDGPQ $.
      $( [24-Feb-2014] $)
  $}

  ${
    $d v w x y z A $.  $d v w x y z B $.
    relop.1 $e |- A e. _V $.
    relop.2 $e |- B e. _V $.
    $( A necessary and sufficient condition for a Kuratowski ordered pair to be
       a relation. $)
    relop $p |- ( Rel <. A , B >.
             <-> E. x E. y ( A = { x } /\ B = { x , y } ) ) $=
      ( vz vw vv cop cv wceq cpr wa wex wi wal vex bitri eqeq2d cvv cxp wss csn
      wrel df-rel wcel dfss2 wo elop elvv imbi12i jaob albii 19.26 3bitri eqeq1
      snex eqcom opeqsn syl6bb 2exbidv imbi12d cla4v sneq cbvexv a9e exbii mpbi
      equcom 19.41v mpbiran eqid a1bi 3bitr2ri sylib prex mpi opeqpr idd preqsn
      eqtr2 simplbi syl dfsn2 preq2 syl5req syl5eq anbi12d biimpd adantr expcom
      exp3a com12 mpd imp3a syl5bi 2eximdv exlimiv imp syl2an sylbi simpr equid
      jaod jctl sylibr eqtr4d opeq12 cla42ev adantlr preq12 biimpa dfop syl6eqr
      jaodan ex 3imtr4g ssrdv exlimivv impbii ) CDJZUEYBUAUAUBZUCZCAKZUDZLZDYEB
      KZMZLZNZBOAOZYBUFYDYLYDGKZCUDZLZYMYEYHJZLZBOAOZPZGQZYMCDMZLZYRPZGQZNZYLYD
      YMYBUGZYMYCUGZPZGQYSUUCNZGQUUEGYBYCUHUUHUUIGUUHYOUUBUIZYRPUUIUUFUUJUUGYRY
      MCDGREFUJZABYMUKULYOYRUUBUMSUNYSUUCGUOUPYTCHKZUDZLZHOZUUAYPLZBOAOZYLUUDYT
      YNYNLZYEYHLZYGNZBOZAOZPZUUOYSUVCGYNCURYOYOUURYRUVBYMYNYNUQYOYQUUTABYOYQYN
      YPLZUUTYMYNYPUQUVDYPYNLUUTYNYPUSYEYHCARZBRZEUTSVAVBVCVDUUOYGAOUVBUVCUUNYG
      HAUULYELZUUMYFCUULYEVETVFUVAYGAUVAUUSBOZYGYHYELZBOUVHBAVGUVIUUSBBAVJVHVIU
      USYGBVKVLVHUURUVBYNVMVNVOVPUUDUUAUUALZUUQUUAVMUUCUVJUUQPGUUACDVQUUBUUBUVJ
      YRUUQYMUUAUUAUQUUBYQUUPABYMUUAYPUQVBVCVDVRUUOUUQYLUUNUUQYLPHUUNUUPYKABUUP
      YKCYILZDYFLZNZUIZUUNYKUUPYPUUALUVNUUAYPUSYEYHCDUVEUVFEFVSSUUNYKYKUVMUUNYK
      VTUUNUVKUVLYKUVKUUNUVLYKPZUVKUUNNZUUSUVOUVPYIUUMLZUUSCYIUUMWBUVQUUSYHUULL
      YEYHUULUVEUVFHRWAWCWDUVKUUSUVOPUUNUUSUVKUVOUUSUVKUVLYKUUSUVMYKUUSUVKYGUVL
      YJUUSYIYFCUUSYFYEYEMZYIYEWEZYEYHYEWFZWGTUUSYFYIDUUSYFUVRYIUVSUVTWHTWIWJWM
      WNWKWOWLWPXEWQWRWSWTXAXBYKYDABYKGYBYCYKUUJYMUULIKZJZLZIOHOZUUFUUGYKUUJUWD
      YKYOUWDUUBYGYOUWDYJYGYONZYMYEYEJZLZUWDUWEYMYNUWFYGYOXCYGUWFYNLZYOYGYEYELZ
      YGNUWHYGUWIAXDXFYEYECUVEUVEEUTXGWKXHUWCUWGHIYEYEUVEUVEUVGUWAYELNUWBUWFYMU
      ULUWAYEYEXITXJWDXKYKUUBNZYQUWDUWJYMYFYIMZYPYKUUBYMUWKLYKUUAUWKYMCDYFYIXLT
      XMYEYHUVEUVFXNXOUWCYQHIYEYHUVEUVFUVGUWAYHLNUWBYPYMUULUWAYEYHXITXJWDXPXQUU
      KHIYMUKXRXSXTYAS $.
      $( [3-Jun-2008] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( For sets, the identity relation is the same as equality.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    ideqg $p |- ( B e. V -> ( A _I B <-> A = B ) ) $=
      ( vx vy wcel cid wbr wceq cvv wa brrelexi adantl simpl jca eleq1 biimparc
      reli elex cv syl eqeq1 eqeq2 df-id brabg pm5.21nd ) BCFZABGHZABIZAJFZUGKU
      GUHKUJUGUHUJUGABGRLMUGUHNOUGUIKZUJUGUKACFZUJUIULUGABCPQACSUAUGUINODTZETZI
      AUNIUIDEABJCGUMAUNUBUNBAUCDEUDUEUF $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    ideq.1 $e |- B e. _V $.
    $( For sets, the identity relation is the same as equality. $)
    ideq $p |- ( A _I B <-> A = B ) $=
      ( cvv wcel cid wbr wceq wb ideqg ax-mp ) BDEABFGABHICABDJK $.
      $( [1-Jun-2008] $) $( [13-Aug-1995] $)
  $}

  ${
    $d x A $.
    $( A set is identical to itself.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    ididg $p |- ( A e. V -> A _I A ) $=
      ( wcel cid wbr wceq eqid ideqg mpbiri ) ABCAADEAAFAGAABHI $.
      $( [27-Aug-2011] $) $( [28-May-2008] $)
  $}

  $( Two ways of expressing set existence.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.)  (Revised by Mario Carneiro, 26-Apr-2015.) $)
  issetid $p |- ( A e. _V <-> A _I A ) $=
    ( cvv wcel cid wbr ididg reli brrelexi impbii ) ABCAADEABFAADGHI $.
    $( [26-Apr-2015] $) $( [16-Feb-2008] $)

  ${
    $d A x y z $.  $d B x y z $.  $d C x y z $.
    $( Subclass theorem for composition.  (Contributed by FL, 30-Dec-2010.) $)
    coss1 $p |- ( A C_ B -> ( A o. C ) C_ ( B o. C ) ) $=
      ( vx vy vz wss cv wbr wa wex copab id ssbrd anim2d eximdv ssopab2dv df-co
      ccom 3sstr4g ) ABGZDHEHZCIZUBFHZAIZJZEKZDFLUCUBUDBIZJZEKZDFLACSBCSUAUGUJD
      FUAUFUIEUAUEUHUCUAABUBUDUAMNOPQDFEACRDFEBCRT $.
      $( [30-Dec-2010] $)

    $( Subclass theorem for composition. $)
    coss2 $p |- ( A C_ B -> ( C o. A ) C_ ( C o. B ) ) $=
      ( vx vy vz wss cv wbr wa wex copab id ssbrd anim1d eximdv ssopab2dv df-co
      ccom 3sstr4g ) ABGZDHZEHZAIZUCFHCIZJZEKZDFLUBUCBIZUEJZEKZDFLCASCBSUAUGUJD
      FUAUFUIEUAUDUHUEUAABUBUCUAMNOPQDFECARDFECBRT $.
      $( [5-Apr-2013] $)
  $}

  $( Equality theorem for composition of two classes. $)
  coeq1 $p |- ( A = B -> ( A o. C ) = ( B o. C ) ) $=
    ( wss wa ccom wceq coss1 anim12i eqss 3imtr4i ) ABDZBADZEACFZBCFZDZONDZEABG
    NOGLPMQABCHBACHIABJNOJK $.
    $( [3-Jan-1997] $)

  $( Equality theorem for composition of two classes. $)
  coeq2 $p |- ( A = B -> ( C o. A ) = ( C o. B ) ) $=
    ( wss wa ccom wceq coss2 anim12i eqss 3imtr4i ) ABDZBADZECAFZCBFZDZONDZEABG
    NOGLPMQABCHBACHIABJNOJK $.
    $( [3-Jan-1997] $)

  ${
    coeq1i.1 $e |- A = B $.
    $( Equality inference for composition of two classes. $)
    coeq1i $p |- ( A o. C ) = ( B o. C ) $=
      ( wceq ccom coeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [16-Nov-2000] $)

    $( Equality inference for composition of two classes. $)
    coeq2i $p |- ( C o. A ) = ( C o. B ) $=
      ( wceq ccom coeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [16-Nov-2000] $)
  $}

  ${
    coeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for composition of two classes. $)
    coeq1d $p |- ( ph -> ( A o. C ) = ( B o. C ) ) $=
      ( wceq ccom coeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [16-Nov-2000] $)

    $( Equality deduction for composition of two classes. $)
    coeq2d $p |- ( ph -> ( C o. A ) = ( C o. B ) ) $=
      ( wceq ccom coeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [16-Nov-2000] $)
  $}

  ${
    coeq12i.1 $e |- A = B $.
    coeq12i.2 $e |- C = D $.
    $( Equality inference for composition of two classes.  (Contributed by FL,
       7-Jun-2012.) $)
    coeq12i $p |- ( A o. C ) = ( B o. D ) $=
      ( ccom coeq1i coeq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [7-Jun-2012] $)
  $}

  ${
    coeq12d.1 $e |- ( ph -> A = B ) $.
    coeq12d.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for composition of two classes.  (Contributed by FL,
       7-Jun-2012.) $)
    coeq12d $p |- ( ph -> ( A o. C ) = ( B o. D ) ) $=
      ( ccom coeq1d coeq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [7-Jun-2012] $)
  $}

  ${
    $d y z w v A $.  $d y z w v B $.  $d x y z w v $.
    hbco.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbco.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for function value. $)
    hbco $p |- ( y e. ( A o. B ) -> A. x y e. ( A o. B ) ) $=
      ( vz vv vw ccom cv wbr wa wex copab df-co wcel ax-17 hbbr hban hbxfreq
      hbex hbopab ) ABCDJGKZHKZDLZUEIKZCLZMZHNZGIOGIHCDPUJGIABUIAHUFUHAABUDUEDB
      KZUDQARFUKUEQARZSABUEUGCULEUKUGQARSTUBUCUA $.
      $( [1-Sep-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    $( Ordered pair membership in a composition. $)
    brcog $p |- ( ( A e. V /\ B e. W ) -> ( A ( C o. D ) B <->
                   E. x ( A D x /\ x C B ) ) ) $=
      ( vy vz cv wbr wa wex ccom wceq breq1 breq2 bi2anan9 exbidv df-co brabga
      ) HJZAJZEKZUCIJZDKZLZAMBUCEKZUCCDKZLZAMHIBCDENFGUBBOZUECOZLUGUJAUKUDUHULU
      FUIUBBUCEPUECUCDQRSHIADETUA $.
      $( [24-Feb-2015] $)

    $( Ordered pair membership in a composition. $)
    opelco2g $p |- ( ( A e. V /\ B e. W ) -> ( <. A , B >. e. ( C o. D ) <->
                   E. x ( <. A , x >. e. D /\ <. x , B >. e. C ) ) ) $=
      ( wcel wa ccom wbr cv wex cop brcog df-br anbi12i exbii 3bitr3g ) BFHCGHI
      BCDEJZKBALZEKZUACDKZIZAMBCNTHBUANEHZUACNDHZIZAMABCDEFGOBCTPUDUGAUBUEUCUFB
      UAEPUACDPQRS $.
      $( [24-Feb-2015] $) $( [27-Jan-1997] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z C $.  $d x y z D $.
    opelco.1 $e |- A e. _V $.
    opelco.2 $e |- B e. _V $.
    $( Binary relation on a composition. $)
    brco $p |- ( A ( C o. D ) B <-> E. x ( A D x /\ x C B ) ) $=
      ( cvv wcel ccom wbr cv wa wex wb brcog mp2an ) BHICHIBCDEJKBALZEKRCDKMANO
      FGABCDEHHPQ $.
      $( [24-Feb-2015] $) $( [21-Sep-2004] $)

    $( Ordered pair membership in a composition.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    opelco $p |- ( <. A , B >. e. ( C o. D ) <-> E. x ( A D x /\ x C B ) ) $=
      ( cop ccom wcel wbr cv wa wex df-br brco bitr3i ) BCHDEIZJBCRKBALZEKSCDKM
      ANBCROABCDEFGPQ $.
      $( [24-Feb-2015] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for converse. $)
    cnvss $p |- ( A C_ B -> `' A C_ `' B ) $=
      ( vy vx wss wbr copab ccnv cop wcel ssel 3imtr4g ssopab2dv df-cnv 3sstr4g
      cv df-br ) ABEZCPZDPZAFZDCGSTBFZDCGAHBHRUAUBDCRSTIZAJUCBJUAUBABUCKSTAQSTB
      QLMDCANDCBNO $.
      $( [22-Mar-1998] $)
  $}

  $( Equality theorem for converse. $)
  cnveq $p |- ( A = B -> `' A = `' B ) $=
    ( wss wa ccnv wceq cnvss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMN
    FKOLPABGBAGHABIMNIJ $.
    $( [13-Aug-1995] $)

  ${
    cnveqi.1 $e |- A = B $.
    $( Equality inference for converse. $)
    cnveqi $p |- `' A = `' B $=
      ( wceq ccnv cnveq ax-mp ) ABDAEBEDCABFG $.
      $( [23-Dec-2008] $)
  $}

  ${
    cnveqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for converse. $)
    cnveqd $p |- ( ph -> `' A = `' B ) $=
      ( wceq ccnv cnveq syl ) ABCEBFCFEDBCGH $.
      $( [6-Dec-2013] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv $p |- ( A e. `' R <-> E. x E. y ( A = <. x , y >. /\ y R x ) ) $=
      ( ccnv wcel cv wbr copab cop wceq wa wex df-cnv eleq2i elopab bitri ) CDE
      ZFCBGZAGZDHZABIZFCTSJKUALBMAMRUBCABDNOUAABCPQ $.
      $( [24-Mar-1998] $)

    $( Membership in a converse.  Equation 5 of [Suppes] p. 62. $)
    elcnv2 $p |- ( A e. `' R <->
                 E. x E. y ( A = <. x , y >. /\ <. y , x >. e. R ) ) $=
      ( ccnv wcel cv cop wceq wbr wa wex elcnv df-br anbi2i 2exbii bitri ) CDEF
      CAGZBGZHIZSRDJZKZBLALTSRHDFZKZBLALABCDMUBUDABUAUCTSRDNOPQ $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d y z w A $.  $d x y z w $.
    hbcnv.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for converse. $)
    hbcnv $p |- ( y e. `' A -> A. x y e. `' A ) $=
      ( vz vw cv ccnv wcel cop wceq wbr wex elcnv ax-17 hbbr hban hbex hbxfrbi
      wa ) BGZCHIUAEGZFGZJKZUCUBCLZTZFMZEMAEFUACNUGAEUFAFUDUEAUDAOABUCUBCUAUCIA
      ODUAUBIAOPQRRS $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( Ordered-pair membership in converse.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    opelcnvg $p |- ( ( A e. C /\ B e. D ) ->
                     ( <. A , B >. e. `' R <-> <. B , A >. e. R ) ) $=
      ( vy vx wcel wa ccnv wbr cop cv breq2 breq1 df-cnv brabg df-br 3bitr3g )
      ACHBDHIABEJZKBAEKZABLTHBALEHFMZGMZEKUBAEKUAGFABCDTUCAUBENUBBAEOGFEPQABTRB
      AERS $.
      $( [27-Aug-2011] $) $( [13-May-1999] $)
  $}

  $( The converse of a binary relation swaps arguments.  Theorem 11 of [Suppes]
     p. 61. $)
  brcnvg $p |- ( ( A e. C /\ B e. D ) -> ( A `' R B <-> B R A ) ) $=
    ( wcel wa cop ccnv wbr opelcnvg df-br 3bitr4g ) ACFBDFGABHEIZFBAHEFABNJBAEJ
    ABCDEKABNLBAELM $.
    $( [10-Oct-2005] $)

  ${
    opelcnv.1 $e |- A e. _V $.
    opelcnv.2 $e |- B e. _V $.
    $( Ordered-pair membership in converse. $)
    opelcnv $p |- ( <. A , B >. e. `' R <-> <. B , A >. e. R ) $=
      ( cvv wcel cop ccnv wb opelcnvg mp2an ) AFGBFGABHCIGBAHCGJDEABFFCKL $.
      $( [13-Aug-1995] $)

    $( The converse of a binary relation swaps arguments.  Theorem 11 of
       [Suppes] p. 61. $)
    brcnv $p |- ( A `' R B <-> B R A ) $=
      ( cvv wcel ccnv wbr wb brcnvg mp2an ) AFGBFGABCHIBACIJDEABFFCKL $.
      $( [13-Aug-1995] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( Distributive law of converse over class composition.  Theorem 26 of
       [Suppes] p. 64.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cnvco $p |- `' ( A o. B ) = ( `' B o. `' A ) $=
      ( vx vy vz cv ccom wbr copab ccnv wa wex exancom brco brcnv anbi12i exbii
      vex 3bitr4i opabbii df-cnv df-co 3eqtr4i ) CFZDFZABGZHZDCIUEEFZAJZHZUHUDB
      JZHZKZELZDCIUFJUKUIGUGUNDCUDUHBHZUHUEAHZKELUPUOKZELUGUNUOUPEMEUDUEABCRZDR
      ZNUMUQEUJUPULUOUEUHAUSERZOUHUDBUTUROPQSTDCUFUADCEUKUIUBUC $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  ${
    $d x y z w A $.
    $( The converse of a class union is the (indexed) union of the converses of
       its members. $)
    cnvuni $p |- `' U. A = U_ x e. A `' x $=
      ( vy vz vw cuni ccnv cv ciun wcel wrex cop wa elcnv2 eluni2 anbi2i bitr4i
      wceq wex rexcom4 r19.42v 2exbii rexbii exbii 3bitrri 3bitri eliun eqriv )
      CBFZGZABAHZGZIZCHZUJJZUNULJZABKZUNUMJUOUNDHZEHZLRZUSURLZUIJZMZESDSUTVAUKJ
      ZMZABKZESZDSZUQDEUNUINVCVFDEVCUTVDABKZMVFVBVIUTAVABOPUTVDABUAQUBUQVEESZDS
      ZABKVJABKZDSVHUPVKABDEUNUKNUCVJADBTVLVGDVEAEBTUDUEUFAUNBULUGQUH $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain.  Definition 6.5(1) of [TakeutiZaring]
       p. 24. $)
    dfdm3 $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( cdm cv wbr wex cab cop wcel df-dm df-br exbii abbii eqtri ) CDAEZBEZCFZ
      BGZAHPQICJZBGZAHABCKSUAARTBPQCLMNO $.
      $( [28-Dec-1996] $)

    $( Alternate definition of range.  Definition 4 of [Suppes] p. 60. $)
    dfrn2 $p |- ran A = { y | E. x x A y } $=
      ( crn ccnv cdm cv wbr wex cab df-rn df-dm vex brcnv exbii abbii 3eqtri )
      CDCEZFBGZAGZRHZAIZBJTSCHZAIZBJCKBARLUBUDBUAUCASTCBMAMNOPQ $.
      $( [27-Dec-1996] $)

    $( Alternate definition of range.  Definition 6.5(2) of [TakeutiZaring]
       p. 24. $)
    dfrn3 $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( crn cv wbr wex cab cop wcel dfrn2 df-br exbii abbii eqtri ) CDAEZBEZCFZ
      AGZBHPQICJZAGZBHABCKSUABRTAPQCLMNO $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of domain. $)
    dfdm4 $p |- dom A = ran `' A $=
      ( vy vx cv wbr wex cab crn cdm vex brcnv exbii abbii dfrn2 df-dm 3eqtr4ri
      ccnv ) BDZCDZAQZEZBFZCGSRAEZBFZCGTHAIUBUDCUAUCBRSABJCJKLMBCTNCBAOP $.
      $( [28-Dec-1996] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.
    dfdmf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfdmf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of domain, using bound-variable hypotheses instead of
       distinct variable conditions. $)
    dfdmf $p |- dom A = { x | E. y <. x , y >. e. A } $=
      ( vw vv cdm cv cop wcel wex cab dfdm3 ax-17 hbel wceq opeq2 eleq1d exbidv
      cbvex abbii hbex opeq1 cbvab 3eqtri ) DIGJZHJZKZDLZHMZGNUHBJZKZDLZBMZGNAJ
      ZUMKZDLZBMZANGHDOULUPGUKUOHBBCCUJDCJZUJLBPFQUOHPUIUMRUJUNDUIUMUHSTUBUCUPU
      TGAUOABACCUNDVAUNLAPEQUDUTGPUHUQRZUOUSBVBUNURDUHUQUMUETUAUFUG $.
      $( [8-Mar-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Domain membership.  Theorem 4 of [Suppes] p. 59. $)
    eldmg $p |- ( A e. V -> ( A e. dom B <-> E. y A B y ) ) $=
      ( vx cv wbr wex cdm wceq breq1 exbidv df-dm elab2g ) EFZAFZCGZAHBPCGZAHEB
      CIDOBJQRAOBPCKLEACMN $.
      $( [9-Jul-2014] $)

    $( Domain membership.  Theorem 4 of [Suppes] p. 59. $)
    eldm2g $p |- ( A e. V -> ( A e. dom B <-> E. y <. A , y >. e. B ) ) $=
      ( wcel cdm cv wbr wex cop eldmg df-br exbii syl6bb ) BDEBCFEBAGZCHZAIBOJC
      EZAIABCDKPQABOCLMN $.
      $( [9-Jul-2014] $) $( [27-Jan-1997] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    eldm.1 $e |- A e. _V $.
    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm $p |- ( A e. dom B <-> E. y A B y ) $=
      ( cvv wcel cdm cv wbr wex wb eldmg ax-mp ) BEFBCGFBAHCIAJKDABCELM $.
      $( [2-Apr-2004] $)

    $( Membership in a domain.  Theorem 4 of [Suppes] p. 59. $)
    eldm2 $p |- ( A e. dom B <-> E. y <. A , y >. e. B ) $=
      ( cvv wcel cdm cv cop wex wb eldm2g ax-mp ) BEFBCGFBAHICFAJKDABCELM $.
      $( [1-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Subset theorem for domain. $)
    dmss $p |- ( A C_ B -> dom A C_ dom B ) $=
      ( vx vy wss cdm cv cop wcel wex ssel eximdv vex eldm2 3imtr4g ssrdv ) ABE
      ZCAFZBFZQCGZDGHZAIZDJUABIZDJTRITSIQUBUCDABUAKLDTACMZNDTBUDNOP $.
      $( [11-Aug-1994] $)
  $}

  $( Equality theorem for domain. $)
  dmeq $p |- ( A = B -> dom A = dom B ) $=
    ( wss wa cdm wceq dmss anim12i eqss 3imtr4i ) ABCZBACZDAEZBEZCZNMCZDABFMNFK
    OLPABGBAGHABIMNIJ $.
    $( [11-Aug-1994] $)

  ${
    dmeqi.1 $e |- A = B $.
    $( Equality inference for domain. $)
    dmeqi $p |- dom A = dom B $=
      ( wceq cdm dmeq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    dmeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for domain. $)
    dmeqd $p |- ( ph -> dom A = dom B ) $=
      ( wceq cdm dmeq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.
    opeldm.1 $e |- A e. _V $.
    opeldm.2 $e |- B e. _V $.
    $( Membership of first of an ordered pair in a domain. $)
    opeldm $p |- ( <. A , B >. e. C -> A e. dom C ) $=
      ( vy cop wcel cv wex cdm wceq opeq2 eleq1d cla4ev eldm2 sylibr ) ABGZCHZA
      FIZGZCHZFJACKHUBSFBETBLUARCTBAMNOFACDPQ $.
      $( [30-Jul-1995] $)

    $( Membership of first of a binary relation in a domain. $)
    breldm $p |- ( A R B -> A e. dom R ) $=
      ( wbr cop wcel cdm df-br opeldm sylbi ) ABCFABGCHACIHABCJABCDEKL $.
      $( [30-Jul-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x R $.
    $( Membership of first of a binary relation in a domain. $)
    breldmg $p |- ( ( A e. C /\ B e. D /\ A R B ) -> A e. dom R ) $=
      ( vx wcel wbr w3a cdm cv wex breq2 cla4egv imp 3adant1 wb 3ad2ant1 mpbird
      eldmg ) ACGZBDGZABEHZIAEJGZAFKZEHZFLZUBUCUGUAUBUCUGUFUCFBDUEBAEMNOPUAUBUD
      UGQUCFAECTRS $.
      $( [21-Mar-2007] $)

    $( The domain of a union is the union of domains.  Exercise 56(a) of
       [Enderton] p. 65.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmun $p |- dom ( A u. B ) = ( dom A u. dom B ) $=
      ( vy vx cv wbr wex cab cun cdm wo unab brun exbii 19.43 abbii eqtri df-dm
      bitr2i uneq12i 3eqtr4ri ) CEZDEZAFZDGZCHZUBUCBFZDGZCHZIZUBUCABIZFZDGZCHZA
      JZBJZIUKJUJUEUHKZCHUNUEUHCLUQUMCUMUDUGKZDGUQULURDUBUCABMNUDUGDOSPQUOUFUPU
      ICDARCDBRTCDUKRUA $.
      $( [27-Aug-2011] $) $( [12-Aug-1994] $)

    $( The domain of an intersection belong to the intersection of domains.
       Theorem 6 of [Suppes] p. 60. $)
    dmin $p |- dom ( A i^i B ) C_ ( dom A i^i dom B ) $=
      ( vx vy cin cdm cv cop wcel wa wex 19.40 eldm2 elin exbii anbi12i 3imtr4i
      vex bitri ssriv ) CABEZFZAFZBFZEZCGZDGHZAIZUGBIZJZDKZUHDKZUIDKZJZUFUBIZUF
      UEIZUHUIDLUOUGUAIZDKUKDUFUACRZMUQUJDUGABNOSUPUFUCIZUFUDIZJUNUFUCUDNUSULUT
      UMDUFAURMDUFBURMPSQT $.
      $( [15-Sep-2004] $)

  $}

  ${
    $d x y z A $.
    $( The domain of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    dmuni $p |- dom U. A = U_ x e. A dom x $=
      ( vy vz cuni cdm cv ciun cop wcel wex wrex eluni exbii excom ancom 19.41v
      wa eldm2 3bitr4i vex anbi2i 3bitri df-rex bitr4i eliun eqriv ) CBEZFZABAG
      ZFZHZCGZDGIZUHJZDKZUMUKJZABLZUMUIJUMULJUPUJBJZUQRZAKZURUPUNUJJZUSRZAKZDKV
      CDKZAKVAUOVDDAUNBMNVCDAOVEUTAVBDKZUSRUSVFRVEUTVFUSPVBUSDQUQVFUSDUMUJCUAZS
      UBTNUCUQABUDUEDUMUHVGSAUMBUKUFTUG $.
      $( [3-Feb-2004] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The domain of a class of ordered pairs. $)
    dmopab $p |- dom { <. x , y >. | ph } = { x | E. y ph } $=
      ( vz copab cdm cv cop wcel wex cab hbopab1 dfdmf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZCJZBKACJZBKBCDSABCDLABCDRMUAUBBTACABCNOPQ $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y A $.
    $( Upper bound for the domain of a restricted class of ordered pairs. $)
    dmopabss $p |- dom { <. x , y >. | ( x e. A /\ ph ) } C_ A $=
      ( cv wcel wa copab cdm wex cab dmopab 19.42v abbii ssab2 eqsstri ) BEDFZA
      GZBCHIRCJZBKZDRBCLTQACJZGZBKDSUBBQACMNUABDOPP $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y A $.
    $( The domain of a restricted class of ordered pairs. $)
    dmopab3 $p |- ( A. x e. A E. y ph <->
               dom { <. x , y >. | ( x e. A /\ ph ) } = A ) $=
      ( wex wral cv wcel wi wal wa wb copab cdm wceq df-ral pm4.71 albii dmopab
      cab 19.42v abbii eqtri eqeq1i eqcom abeq2 3bitr2ri 3bitri ) ACEZBDFBGDHZU
      IIZBJUJUJUIKZLZBJZUJAKZBCMNZDOZUIBDPUKUMBUJUIQRUQULBTZDODUROUNUPURDUPUOCE
      ZBTURUOBCSUSULBUJACUAUBUCUDDURUEULBDUFUGUH $.
      $( [31-Jan-2004] $)
  $}

  ${
    $d x y $.
    $( The domain of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dm0 $p |- dom (/) = (/) $=
      ( vx vy c0 cdm wceq cv wcel eq0 cop wex noel nex vex eldm2 mtbir mpgbir
      wn ) CDZCEAFZRGZQAARHTSBFIZCGZBJUBBUAKLBSCAMNOP $.
      $( [27-Aug-2011] $) $( [4-Jul-1994] $)

    $( The domain of the identity relation is the universe.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmi $p |- dom _I = _V $=
      ( vx vy cid cdm cvv wceq wcel eqv wbr wex a9e vex ideq equcom bitri exbii
      cv mpbir eldm mpgbir ) CDZEFAQZUAGZAAUAHUCUBBQZCIZBJZUFUDUBFZBJBAKUEUGBUE
      UBUDFUGUBUDBLMABNOPRBUBCALSRT $.
      $( [27-Aug-2011] $) $( [30-Apr-1998] $)

    $( The domain of the universe is the universe. $)
    dmv $p |- dom _V = _V $=
      ( cvv cdm ssv cid dmi wss dmss ax-mp eqsstr3i eqssi ) ABZAKCADBZKEDAFLKFD
      CDAGHIJ $.
      $( [8-Aug-2003] $)
  $}

  ${
    $d x y A $.
    $( An empty domain implies an empty range. $)
    dm0rn0 $p |- ( dom A = (/) <-> ran A = (/) ) $=
      ( vx vy cv wbr wex cab c0 wceq wcel wb wal alnex noel albii abeq1 3bitr4i
      wn nbn eqeq1i cdm crn excom xchbinx bitr4i 3bitr3i df-dm dfrn2 ) BDZCDZAE
      ZCFZBGZHIZUKBFZCGZHIZAUAZHIAUBZHIULUIHJZKZBLZUOUJHJZKZCLZUNUQULRZBLZUORZC
      LZVBVEVGUOCFZRVIVGULBFVJULBMUKBCUCUDUOCMUEVFVABUTULUINSOVHVDCVCUOUJNSOUFU
      LBHPUOCHPQURUMHBCAUGTUSUPHBCAUHTQ $.
      $( [21-May-1998] $)

    $( A relation is empty iff its domain is empty. $)
    reldm0 $p |- ( Rel A -> ( A = (/) <-> dom A = (/) ) ) $=
      ( vx vy wrel c0 wceq cv cop wcel wb wal cdm rel0 eqrel mpan2 wn eq0 alnex
      wex albii vex eldm2 xchbinxr noel nbn bitr3i bitr2i syl6bb ) ADZAEFZBGZCG
      HZAIZULEIZJZCKZBKZALZEFZUIEDUJUQJMBCAENOUSUKURIZPZBKUQBURQVAUPBVAUMPZCKZU
      PVCUMCSUTUMCRCUKABUAUBUCVBUOCUNUMULUDUETUFTUGUH $.
      $( [15-Sep-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a cross product.  Part of Theorem 3.13(x) of [Monk1]
       p. 37.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmxp $p |- ( B =/= (/) -> dom ( A X. B ) = A ) $=
      ( vy vx c0 wne cxp cdm cv wcel wa copab df-xp dmeqi wex wral n0 ralrimivw
      wceq biimpi dmopab3 sylib syl5eq ) BEFZABGZHCIAJDIBJZKCDLZHZAUEUGCDABMNUD
      UFDOZCAPUHASUDUICAUDUIDBQTRUFCDAUAUBUC $.
      $( [27-Aug-2011] $) $( [28-Jul-1995] $)
  $}

  $( The domain of a square cross product. $)
  dmxpid $p |- dom ( A X. A ) = A $=
    ( cxp cdm wceq c0 dm0 xpeq1 xp0r syl6eq dmeqd id 3eqtr4a dmxp pm2.61ine ) A
    ABZCZADAEAEDZECEPAFQOEQOEABEAEAGAHIJQKLAAMN $.
    $( [28-Jul-1995] $)

  $( The domain of the intersection of two square cross products.  Unlike
     ~ dmin , equality holds. $)
  dmxpin $p |- dom ( ( A X. A ) i^i ( B X. B ) ) = ( A i^i B ) $=
    ( cxp cin cdm inxp dmeqi dmxpid eqtri ) AACBBCDZEABDZKCZEKJLAABBFGKHI $.
    $( [29-Jan-2008] $)

  $( The cross product of a class with itself is one-to-one.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  xpid11 $p |- ( ( A X. A ) = ( B X. B ) <-> A = B ) $=
    ( cxp wceq cdm dmeq dmxpid 3eqtr3g xpeq12 anidms impbii ) AACZBBCZDZABDZNLE
    MEABLMFAGBGHONABABIJK $.
    $( [27-Aug-2011] $) $( [5-Nov-2006] $)

  $( The domain of the double converse of a class (which doesn't have to be a
     relation as in ~ dfrel2 ). $)
  dmcnvcnv $p |- dom `' `' A = dom A $=
    ( cdm ccnv crn dfdm4 df-rn eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  $( The range of the double converse of a class. $)
  rncnvcnv $p |- ran `' `' A = ran A $=
    ( crn ccnv cdm df-rn dfdm4 eqtr2i ) ABACZDHCBAEHFG $.
    $( [8-Apr-2007] $)

  ${
    $d x y A $.  $d x y B $.
    $( The first member of an ordered pair in a relation belongs to the domain
       of the relation. $)
    elreldm $p |- ( ( Rel A /\ B e. A ) -> |^| |^| B e. dom A ) $=
      ( vx vy wrel wcel cint cdm cv cop wceq wex cvv cxp wss wi df-rel ssel vex
      sylbi elvv syl6ib eleq1 opeldm syl6bi inteqd op1stb syl6eq eleq1d sylibrd
      inteq exlimivv syli imp ) AEZBAFZBGZGZAHZFZUPUOBCIZDIZJZKZDLCLZUTUOUPBMMN
      ZFZVEUOAVFOUPVGPAQAVFBRTCDBUAUBVDUPUTPCDVDUPVAUSFZUTVDUPVCAFVHBVCAUCVAVBA
      CSZDSZUDUEVDURVAUSVDURVCGZGVAVDUQVKBVCUKUFVAVBVIVJUGUHUIUJULUMUN $.
      $( [28-Jul-2004] $)
  $}

  $( Equality theorem for range. $)
  rneq $p |- ( A = B -> ran A = ran B ) $=
    ( wceq ccnv cdm crn cnveq dmeqd df-rn 3eqtr4g ) ABCZADZEBDZEAFBFKLMABGHAIBI
    J $.
    $( [29-Dec-1996] $)

  ${
    rneqi.1 $e |- A = B $.
    $( Equality inference for range. $)
    rneqi $p |- ran A = ran B $=
      ( wceq crn rneq ax-mp ) ABDAEBEDCABFG $.
      $( [4-Mar-2004] $)
  $}

  ${
    rneqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for range. $)
    rneqd $p |- ( ph -> ran A = ran B ) $=
      ( wceq crn rneq syl ) ABCEBFCFEDBCGH $.
      $( [4-Mar-2004] $)
  $}

  $( Subset theorem for range. $)
  rnss $p |- ( A C_ B -> ran A C_ ran B ) $=
    ( wss ccnv cdm crn cnvss dmss syl df-rn 3sstr4g ) ABCZADZEZBDZEZAFBFLMOCNPC
    ABGMOHIAJBJK $.
    $( [22-Mar-1998] $)

  $( The second argument of a binary relation belongs to its range. $)
  brelrng $p |- ( ( A e. F /\ B e. G /\ A C B ) -> B e. ran C ) $=
    ( wcel wbr w3a ccnv cdm crn wb brcnvg ancoms biimp3ar 3com12 syld3an3 df-rn
    breldmg syl6eleqr ) ADFZBEFZABCGZHBCIZJZCKUAUBUCBAUDGZBUEFZUAUBUFUCUBUAUFUC
    LBAEDCMNOUBUAUFUGBAEDUDSPQCRT $.
    $( [29-Jun-2008] $)

  ${
    brelrn.1 $e |- A e. _V $.
    brelrn.2 $e |- B e. _V $.
    $( The second argument of a binary relation belongs to its range. $)
    brelrn $p |- ( A C B -> B e. ran C ) $=
      ( cvv wcel wbr crn brelrng mp3an12 ) AFGBFGABCHBCIGDEABCFFJK $.
      $( [29-Jun-2008] $) $( [13-Aug-2004] $)

    $( Membership of second member of an ordered pair in a range. $)
    opelrn $p |- ( <. A , B >. e. C -> B e. ran C ) $=
      ( cop wcel wbr crn df-br brelrn sylbir ) ABFCGABCHBCIGABCJABCDEKL $.
      $( [23-Feb-1997] $)
  $}

  $( The first argument of a binary relation belongs to its domain. $)
  releldm $p |- ( ( Rel R /\ A R B ) -> A e. dom R ) $=
    ( wrel wbr wa cvv wcel cdm brrelex brrelex2 simpr breldmg syl3anc ) CDZABCE
    ZFAGHBGHPACIHABCJABCKOPLABGGCMN $.
    $( [2-Jul-2008] $)

  $( The second argument of a binary relation belongs to its range. $)
  relelrn $p |- ( ( Rel R /\ A R B ) -> B e. ran R ) $=
    ( wrel wbr wa cvv wcel crn brrelex brrelex2 simpr brelrng syl3anc ) CDZABCE
    ZFAGHBGHPBCIHABCJABCKOPLABCGGMN $.
    $( [2-Jul-2008] $)

  ${
    releldm.1 $e |- Rel R $.
    $( The first argument of a binary relation belongs to its domain. $)
    releldmi $p |- ( A R B -> A e. dom R ) $=
      ( wrel wbr cdm wcel releldm mpan ) CEABCFACGHDABCIJ $.
      $( [28-Apr-2015] $)

    $( The second argument of a binary relation belongs to its range. $)
    relelrni $p |- ( A R B -> B e. ran R ) $=
      ( wrel wbr crn wcel relelrn mpan ) CEABCFBCGHDABCIJ $.
      $( [28-Apr-2015] $)
  $}

  ${
    $d x y z w v $.  $d z w v A $.
    dfrnf.1 $e |- ( z e. A -> A. x z e. A ) $.
    dfrnf.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of range, using bound-variable hypotheses instead of distinct
       variable conditions. $)
    dfrnf $p |- ran A = { y | E. x <. x , y >. e. A } $=
      ( vv vw crn cv cop wcel wex cab dfrn3 ax-17 hbel wceq opeq1 eleq1d exbidv
      cbvex abbii hbex opeq2 cbvab 3eqtri ) DIGJZHJZKZDLZGMZHNAJZUIKZDLZAMZHNUM
      BJZKZDLZAMZBNGHDOULUPHUKUOGAACCUJDCJZUJLAPEQUOGPUHUMRUJUNDUHUMUISTUBUCUPU
      THBUOBABCCUNDVAUNLBPFQUDUTHPUIUQRZUOUSAVBUNURDUIUQUMUETUAUFUG $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    elrn.1 $e |- A e. _V $.
    $( Membership in a range. $)
    elrn2 $p |- ( A e. ran B <-> E. x <. x , A >. e. B ) $=
      ( vy cv cop wcel wex crn wceq opeq2 eleq1d exbidv dfrn3 elab2 ) AFZEFZGZC
      HZAIQBGZCHZAIEBCJDRBKZTUBAUCSUACRBQLMNAECOP $.
      $( [10-Jul-1994] $)

    $( Membership in a range. $)
    elrn $p |- ( A e. ran B <-> E. x x B A ) $=
      ( crn wcel cv cop wex wbr elrn2 df-br exbii bitr4i ) BCEFAGZBHCFZAIOBCJZA
      IABCDKQPAOBCLMN $.
      $( [2-Apr-2004] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbrn.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for range.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbrn $p |- ( y e. ran A -> A. x y e. ran A ) $=
      ( vz vw cv crn wcel cop wex vex elrn2 ax-17 hbel hbex hbxfrbi ) BGZCHIEGR
      JZCIZEKAERCBLMTAEAFBSCFGSIANDOPQ $.
      $( [27-Aug-2011] $) $( [1-Sep-1999] $)
  $}

  ${
    $d x y z w $.  $d y z w A $.
    hbdm.1 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for domain. $)
    hbdm $p |- ( y e. dom A -> A. x y e. dom A ) $=
      ( cdm ccnv crn dfdm4 hbcnv hbrn hbxfreq ) ABCECFZGCHABLABCDIJK $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d A z $.  $d B z $.  $d x z $.
    $( Domain of an intersection.  (Contributed by FL, 15-Oct-2012.) $)
    dmiin $p |- dom |^|_ x e. A B C_ |^|_ x e. A dom B $=
      ( vz ciin cdm wss hbii1 hbdm ssiinf cv wcel iinss2 dmss syl mprgbir ) ABC
      EZFZABCFZEGRSGZABADBSRADQADBCHIJAKBLQCGTABCMQCNOP $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d A w y $.  $d B w y $.  $d V w y $.  $d x w y $.
    $( Distribute proper substitution through the range of a class. ~ csbrng is
       derived from the virtual deduction proof ~ csbrngVD .  (Contributed by
       Alan Sare, 10-Nov-2012. ) $)
    csbrng $p |- ( A e. V -> [_ A / x ]_ ran B = ran [_ A / x ]_ B ) $=
      ( vw vy wcel crn csb cop wex cab wsbc dfrn3 csbeq2i csbabg sbcexg sbcel2g
      cv exbidv bitrd abbidv 3eqtrd syl6eqr ) BDGZABCHZIZESFSJZABCIZGZEKZFLZUIH
      UEUGABUHCGZEKZFLZIUNABMZFLULABUFUODEFCNOUNAFBDPUEUPUKFUEUPUMABMZEKUKUMEAB
      DQUEUQUJEABUHCDRTUAUBUCEFUINUD $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d x y z $.  $d z ph $.
    $( The range of a class of ordered pairs. $)
    rnopab $p |- ran { <. x , y >. | ph } = { y | E. x ph } $=
      ( vz copab crn cv cop wcel wex cab hbopab1 dfrnf opabid exbii abbii eqtri
      hbopab2 ) ABCEZFBGCGHSIZBJZCKABJZCKBCDSABCDLABCDRMUAUBCTABABCNOPQ $.
      $( [14-Aug-1995] $)
  $}

  ${
    $d x y $.
    $( The range of a function expressed as a class abstraction. $)
    rnopab2 $p |- ran { <. x , y >. | ( x e. A /\ y = B ) } =
                 { y | E. x e. A y = B } $=
      ( cv wcel wceq wa copab crn wex cab wrex rnopab df-rex abbii eqtr4i ) AEC
      FBEDGZHZABIJSAKZBLRACMZBLSABNUATBRACOPQ $.
      $( [23-Mar-2006] $)
  $}

  $( The range of the empty set is empty.  Part of Theorem 3.8(v) of [Monk1]
     p. 36. $)
  rn0 $p |- ran (/) = (/) $=
    ( c0 cdm wceq crn dm0 dm0rn0 mpbi ) ABACADACEAFG $.
    $( [4-Jul-1994] $)

  ${
    $d x y A $.
    $( A relation is empty iff its range is empty. $)
    relrn0 $p |- ( Rel A -> ( A = (/) <-> ran A = (/) ) ) $=
      ( wrel c0 wceq cdm crn reldm0 dm0rn0 syl6bb ) ABACDAECDAFCDAGAHI $.
      $( [15-Sep-2004] $)

    $( The domain and range of a class are included in its double union. $)
    dmrnssfld $p |- ( dom A u. ran A ) C_ U. U. A $=
      ( vx vy cdm crn cuni cv cop wex vex eldm2 cpr prid1 wss sseld mpi exlimiv
      wcel sylbi ssriv uniop uniopel syl5eqelr elssuni syl elrn2 prid2 unssi )
      ADZAEZAFZFZBUIULBGZUIRUMCGZHZARZCIUMULRZCUMABJZKUPUQCUPUMUMUNLZRUQUMUNURM
      UPUSULUMUPUSUKRUSULNUPUSUOFUKUMUNURCJZUAUMUNAURUTUBUCUSUKUDUEZOPQSTCUJULU
      NUJRUPBIUNULRZBUNAUTUFUPVBBUPUNUSRVBUMUNUTUGUPUSULUNVAOPQSTUH $.
      $( [13-May-2008] $)
  $}

  $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
     p. 26. $)
  dmexg $p |- ( A e. V -> dom A e. _V ) $=
    ( wcel cuni cvv cdm uniexg wss crn ssun1 dmrnssfld sstri ssexg mpan 3syl
    cun ) ABCADZECQDZECZAFZECZABGQEGTRHSUATTAIZPRTUBJAKLTREMNO $.
    $( [7-Apr-1995] $)

  $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring] p. 26.
     Similar to Lemma 3D of [Enderton] p. 41. $)
  rnexg $p |- ( A e. V -> ran A e. _V ) $=
    ( wcel cuni cvv crn uniexg wss cdm ssun2 dmrnssfld sstri ssexg mpan 3syl
    cun ) ABCADZECQDZECZAFZECZABGQEGTRHSUATAIZTPRTUBJAKLTREMNO $.
    $( [31-Mar-1995] $)

  ${
    dmex.1 $e |- A e. _V $.
    $( The domain of a set is a set.  Corollary 6.8(2) of [TakeutiZaring]
       p. 26. $)
    dmex $p |- dom A e. _V $=
      ( cvv wcel cdm dmexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)

    $( The range of a set is a set.  Corollary 6.8(3) of [TakeutiZaring]
       p. 26.  Similar to Lemma 3D of [Enderton] p. 41. $)
    rnex $p |- ran A e. _V $=
      ( cvv wcel crn rnexg ax-mp ) ACDAECDBACFG $.
      $( [7-Jul-2008] $)
  $}

  $( The identity function is a proper class.  This means, for example, that we
     cannot use it as a member of the class of continuous functions unless it
     is restricted to a set, as in ~ idcn . $)
  iprc $p |- -. _I e. _V $=
    ( cid cvv wcel cdm vprc dmi eleq1i mtbir dmexg mto ) ABCADZBCZLBBCEKBBFGHAB
    IJ $.
    $( [1-Jan-2007] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  Theorem 21 of [Suppes] p. 63.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    dmcoss $p |- dom ( A o. B ) C_ dom B $=
      ( vx vy vz ccom cdm cv cop wcel wex wbr hbe1 wa exsimpl vex opelco cbvexv
      breq2 3imtr4i exlimi eldm2 eldm ssriv ) CABFZGZBGZCHZDHZIUEJZDKUHUIBLZDKZ
      UHUFJUHUGJUJULDUKDMUHEHZBLZUMUIALZNEKUNEKUJULUNUOEOEUHUIABCPZDPQUKUNDEUIU
      MUHBSRTUADUHUEUPUBDUHBUPUCTUD $.
      $( [27-Aug-2011] $) $( [19-Mar-1998] $)
  $}

  $( Range of a composition. $)
  rncoss $p |- ran ( A o. B ) C_ ran A $=
    ( ccnv ccom cdm crn dmcoss df-rn cnvco dmeqi eqtri 3sstr4i ) BCZACZDZEZNEAB
    DZFZAFMNGRQCZEPQHSOABIJKAHL $.
    $( [19-Mar-1998] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Domain of a composition.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmcosseq $p |- ( ran B C_ dom A -> dom ( A o. B ) = dom B ) $=
      ( vx vy vz crn cdm wss ccom dmcoss a1i cv wbr wex wcel wi vex eldm eximdv
      syl6ibr wa ssel elrn imbi12i 19.8a imim1i pm3.2 sylcom sylbi excom opelco
      cop syl exbii eldm2 3imtr4g ssrdv eqssd ) BFZAGZHZABIZGZBGZVCVDHVAABJKVAC
      VDVCVACLZDLZBMZDNZVEELZULVBOZENZVEVDOVEVCOVAVHVGVFVIAMZUAZDNZENZVKVAVHVME
      NZDNVOVAVGVPDVAVFUSOZVFUTOZPZVGVPPZUSUTVFUBVSVGCNZVLENZPZVTVQWAVRWBCVFBDQ
      ZUCEVFAWDRUDWCVGWBVPVGWAWBVGCUEUFVGVLVMEVGVLUGSUHUIUMSVMEDUJTVJVNEDVEVIAB
      CQZEQUKUNTDVEBWEREVEVBWEUOUPUQUR $.
      $( [27-Aug-2011] $) $( [28-May-1998] $)

    $( Domain of a composition. $)
    dmcoeq $p |- ( dom A = ran B -> dom ( A o. B ) = dom B ) $=
      ( cdm crn wceq wss ccom eqimss2 dmcosseq syl ) ACZBDZELKFABGCBCELKHABIJ
      $.
      $( [19-Mar-1998] $)
  $}

  $( Range of a composition. $)
  rncoeq $p |- ( dom A = ran B -> ran ( A o. B ) = ran A ) $=
    ( ccnv cdm crn wceq ccom dmcoeq eqcom df-rn dfdm4 eqeq12i bitri cnvco dmeqi
    eqtri 3imtr4i ) BCZDZACZEZFZRTGZDZTDZFADZBEZFZABGZEZAEZFRTHUHUGUFFUBUFUGIUG
    SUFUABJAKLMUJUDUKUEUJUICZDUDUIJULUCABNOPAJLQ $.
    $( [19-Mar-1998] $)

  $( Equality theorem for restrictions. $)
  reseq1 $p |- ( A = B -> ( A |` C ) = ( B |` C ) ) $=
    ( wceq cvv cxp cin cres ineq1 df-res 3eqtr4g ) ABDACEFZGBLGACHBCHABLIACJBCJ
    K $.
    $( [7-Aug-1994] $)

  $( Equality theorem for restrictions. $)
  reseq2 $p |- ( A = B -> ( C |` A ) = ( C |` B ) ) $=
    ( wceq cvv cxp cin cres xpeq1 ineq2d df-res 3eqtr4g ) ABDZCAEFZGCBEFZGCAHCB
    HMNOCABEIJCAKCBKL $.
    $( [8-Aug-1994] $)

  ${
    reseqi.1 $e |- A = B $.
    $( Equality inference for restrictions. $)
    reseq1i $p |- ( A |` C ) = ( B |` C ) $=
      ( wceq cres reseq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Oct-2014] $)

    $( Equality inference for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2i $p |- ( C |` A ) = ( C |` B ) $=
      ( wceq cres reseq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [22-Jun-2011] $)

    reseqi.2 $e |- C = D $.
    $( Equality inference for restrictions. $)
    reseq12i $p |- ( A |` C ) = ( B |` D ) $=
      ( cres reseq1i reseq2i eqtri ) ACGBCGBDGABCEHCDBFIJ $.
      $( [21-Oct-2014] $)
  $}

  ${
    reseqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for restrictions. $)
    reseq1d $p |- ( ph -> ( A |` C ) = ( B |` C ) ) $=
      ( wceq cres reseq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [21-Oct-2014] $)

    $( Equality deduction for restrictions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    reseq2d $p |- ( ph -> ( C |` A ) = ( C |` B ) ) $=
      ( wceq cres reseq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [22-Jun-2011] $)

    reseqd.2 $e |- ( ph -> C = D ) $.
    $( Equality deduction for restrictions. $)
    reseq12d $p |- ( ph -> ( A |` C ) = ( B |` D ) ) $=
      ( cres reseq1d reseq2d eqtrd ) ABDHCDHCEHABCDFIADECGJK $.
      $( [21-Oct-2014] $)
  $}

  ${
    $d y B $.  $d x y $.
    hbres.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbres.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for restriction.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       19-Jun-2012.) $)
    hbres $p |- ( y e. ( A |` B ) -> A. x y e. ( A |` B ) ) $=
      ( cres cvv cxp cin df-res cv wcel ax-17 hbxp hbin hbxfreq ) ABCDGCDHIZJCD
      KABCREABDHFBLHMANOPQ $.
      $( [24-Jul-2012] $) $( [15-Sep-2003] $)
  $}

  $( Distribute proper substitution through the restriction of a class.
     ~ csbresg is derived from the virtual deduction proof ~ csbresgVD .
     (Contributed by Alan Sare, 10-Nov-2012. ) $)
  csbresg $p |- ( A e. V -> [_ A / x ]_ ( B |` C ) =
                 ( [_ A / x ]_ B |` [_ A / x ]_ C ) ) $=
    ( wcel cres csb cvv cxp cin df-res csbeq2i csbing csbxpg csbconstgfv xpeq2d
    eqtrd ineq2d 3eqtrd syl6eqr ) BEFZABCDGZHZABCHZABDHZIJZKZUEUFGUBUDABCDIJZKZ
    HUEABUIHZKUHABUCUJECDLMABECUINUBUKUGUEUBUKUFABIHZJUGABDIEOUBULIUFABIEPQRSTU
    EUFLUA $.
    $( [10-Nov-2012] $)

  $( A restriction to the empty set is empty. $)
  res0 $p |- ( A |` (/) ) = (/) $=
    ( c0 cres cvv cxp cin df-res xp0r ineq2i in0 3eqtri ) ABCABDEZFABFBABGLBADH
    IAJK $.
    $( [12-Nov-1994] $)

  ${
    opelres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelres $p |- ( <. A , B >. e. ( C |` D ) <->
                    ( <. A , B >. e. C /\ A e. D ) ) $=
      ( cop cres wcel cvv cxp cin wa df-res eleq2i elin opelxp mpbiran2 anbi2i
      3bitri ) ABFZCDGZHTCDIJZKZHTCHZTUBHZLUDADHZLUAUCTCDMNTCUBOUEUFUDUEUFBIHEA
      BDIPQRS $.
      $( [13-Nov-1995] $)

    $( Binary relation on a restriction. $)
    brres $p |- ( A ( C |` D ) B <-> ( A C B /\ A e. D ) ) $=
      ( cop cres wcel wa wbr opelres df-br anbi1i 3bitr4i ) ABFZCDGZHOCHZADHZIA
      BPJABCJZRIABCDEKABPLSQRABCLMN $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d y A $.  $d y B $.  $d y C $.  $d y D $.
    $( Ordered pair membership in a restriction.  Exercise 13 of
       [TakeutiZaring] p. 25. $)
    opelresg $p |- ( B e. V -> ( <. A , B >. e. ( C |` D ) <->
                    ( <. A , B >. e. C /\ A e. D ) ) ) $=
      ( vy cv cop cres wcel wa wceq opeq2 eleq1d anbi1d vex opelres vtoclbg ) A
      FGZHZCDIZJTCJZADJZKABHZUAJUDCJZUCKFBESBLZTUDUASBAMZNUFUBUEUCUFTUDCUGNOASC
      DFPQR $.
      $( [14-Oct-2005] $)
  $}

  ${
    opres.1 $e |- B e. _V $.
    $( Ordered pair membership in a restriction when the first member belongs
       to the restricting class.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    opres $p |- ( A e. D ->
                    ( <. A , B >. e. ( C |` D ) <-> <. A , B >. e. C ) ) $=
      ( cop cres wcel wa opelres ancom bitri baib ) ABFZCDGHZADHZNCHZOQPIPQIABC
      DEJQPKLM $.
      $( [27-Aug-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    $( A restricted identity relation is equivalent to equality in its
       domain. $)
    resieq $p |- ( ( B e. A /\ C e. A ) -> ( B ( _I |` A ) C <-> B = C ) ) $=
      ( vx wcel cid cres wbr wceq wb cv wi breq2 eqeq2 bibi12d imbi2d cop opres
      vex df-br ideq bitr3i 3bitr4g vtoclg impcom ) CAEBAEZBCFAGZHZBCIZJZUFBDKZ
      UGHZBUKIZJZLUFUJLDCAUKCIZUNUJUFUOULUHUMUIUKCBUGMUKCBNOPUFBUKQZUGEUPFEZULU
      MBUKFADSZRBUKUGTUMBUKFHUQBUKURUABUKFTUBUCUDUE $.
      $( [30-Apr-2004] $)
  $}

  $( The restriction of a restriction. $)
  resres $p |- ( ( A |` B ) |` C ) = ( A |` ( B i^i C ) ) $=
    ( cres cvv cxp cin df-res ineq1i xpindir ineq2i inass 3eqtr4ri 3eqtri ) ABD
    ZCDOCEFZGABEFZGZPGZABCGZDZOCHORPABHIATEFZGAQPGZGUASUBUCABCEJKATHAQPLMN $.
    $( [27-Mar-2008] $)

  $( Distributive law for restriction over union.  Theorem 31 of [Suppes]
     p. 65. $)
  resundi $p |- ( A |` ( B u. C ) ) = ( ( A |` B ) u. ( A |` C ) ) $=
    ( cun cvv cxp cin cres xpundir ineq2i indi eqtri df-res uneq12i 3eqtr4i ) A
    BCDZEFZGZABEFZGZACEFZGZDZAPHABHZACHZDRASUADZGUCQUFABCEIJASUAKLAPMUDTUEUBABM
    ACMNO $.
    $( [30-Sep-2002] $)

  $( Distributive law for restriction over union. $)
  resundir $p |- ( ( A u. B ) |` C ) = ( ( A |` C ) u. ( B |` C ) ) $=
    ( cun cvv cxp cin cres indir df-res uneq12i 3eqtr4i ) ABDZCEFZGANGZBNGZDMCH
    ACHZBCHZDABNIMCJQORPACJBCJKL $.
    $( [23-Sep-2004] $)

  $( Class restriction distributes over intersection.  (Contributed by FL,
     6-Oct-2008.) $)
  resindi $p |- ( A |` ( B i^i C ) ) = ( ( A |` B ) i^i ( A |` C ) ) $=
    ( cin cvv cxp cres xpindir ineq2i inindi eqtri df-res ineq12i 3eqtr4i ) ABC
    DZEFZDZABEFZDZACEFZDZDZAOGABGZACGZDQARTDZDUBPUEABCEHIARTJKAOLUCSUDUAABLACLM
    N $.
    $( [6-Oct-2008] $)

  $( Class restriction distributes over intersection. $)
  resindir $p |- ( ( A i^i B ) |` C ) = ( ( A |` C ) i^i ( B |` C ) ) $=
    ( cin cvv cxp cres inindir df-res ineq12i 3eqtr4i ) ABDZCEFZDAMDZBMDZDLCGAC
    GZBCGZDABMHLCIPNQOACIBCIJK $.
    $( [18-Dec-2008] $)

  $( Move intersection into class restriction. $)
  inres $p |- ( A i^i ( B |` C ) ) = ( ( A i^i B ) |` C ) $=
    ( cin cvv cxp cres inass df-res ineq2i 3eqtr4ri ) ABDZCEFZDABMDZDLCGABCGZDA
    BMHLCIONABCIJK $.
    $( [18-Dec-2008] $)

  ${
    $d x C $.
    $( Distribution of restriction over indexed union.  (Contributed by Mario
       Carneiro, 29-May-2015.) $)
    resiun1 $p |- ( U_ x e. A B |` C ) = U_ x e. A ( B |` C ) $=
      ( cvv cxp cin ciun cres iunin2 wceq cv wcel df-res incom iuneq2i 3eqtr4ri
      eqtri a1i ) ABDEFZCGZHTABCHZGZABCDIZHUBDIZABTCJABUDUAUDUAKALBMUDCTGUACDNC
      TORSPUEUBTGUCUBDNUBTORQ $.
      $( [29-May-2015] $)

    $( Distribution of restriction over indexed union.  (Contributed by Mario
       Carneiro, 29-May-2015.) $)
    resiun2 $p |- ( C |` U_ x e. A B ) = U_ x e. A ( C |` B ) $=
      ( ciun cvv cxp cin cres xpiundir ineq2i iunin2 eqtr4i df-res wceq cv wcel
      a1i iuneq2i 3eqtr4i ) DABCEZFGZHZABDCFGZHZEZDUAIABDCIZEUCDABUDEZHUFUBUHDA
      BCFJKABDUDLMDUANABUGUEUGUEOAPBQDCNRST $.
      $( [29-May-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The domain of a restriction.  Exercise 14 of [TakeutiZaring] p. 25. $)
    dmres $p |- dom ( A |` B ) = ( B i^i dom A ) $=
      ( vx vy cdm cin cres cv cop wcel wex wa opelres exbii eldm2 anbi1i 19.41v
      vex bitr4i 3bitr4ri ineqri incom eqtr3i ) AEZBFABGZEZBUDFCUDBUFCHZDHZIZUE
      JZDKUIAJZUGBJZLZDKZUGUFJUGUDJZULLZUJUMDUGUHABDRMNDUGUECRZOUPUKDKZULLUNUOU
      RULDUGAUQOPUKULDQSTUAUDBUBUC $.
      $( [1-Aug-1994] $)
  $}

  $( A domain restricted to a subclass equals the subclass. $)
  ssdmres $p |- ( A C_ dom B <-> dom ( B |` A ) = A ) $=
    ( cdm wss cin wceq cres df-ss dmres eqeq1i bitr4i ) ABCZDALEZAFBAGCZAFALHNM
    ABAIJK $.
    $( [28-Aug-2004] $) $( [2-Mar-1997] $)

  $( The domain of a restriction to a set exists. $)
  dmresexg $p |- ( B e. V -> dom ( A |` B ) e. _V ) $=
    ( wcel cres cdm cin cvv dmres inex1g syl5eqel ) BCDABEFBAFZGHABIBLCJK $.
    $( [7-Apr-1995] $)

  $( A class includes its restriction.  Exercise 15 of [TakeutiZaring]
     p. 25. $)
  resss $p |- ( A |` B ) C_ A $=
    ( cres cvv cxp cin df-res inss1 eqsstri ) ABCABDEZFAABGAJHI $.
    $( [2-Aug-1994] $)

  $( Commutative law for restriction. $)
  rescom $p |- ( ( A |` B ) |` C ) = ( ( A |` C ) |` B ) $=
    ( cin cres incom reseq2i resres 3eqtr4i ) ABCDZEACBDZEABECEACEBEJKABCFGABCH
    ACBHI $.
    $( [27-Mar-1998] $)

  $( Subclass theorem for restriction. $)
  ssres $p |- ( A C_ B -> ( A |` C ) C_ ( B |` C ) ) $=
    ( wss cvv cxp cin cres ssrin df-res 3sstr4g ) ABDACEFZGBLGACHBCHABLIACJBCJK
    $.
    $( [16-Aug-1994] $)

  $( Subclass theorem for restriction.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  ssres2 $p |- ( A C_ B -> ( C |` A ) C_ ( C |` B ) ) $=
    ( wss cvv cxp cin cres xpss1 sslin syl df-res 3sstr4g ) ABDZCAEFZGZCBEFZGZC
    AHCBHNOQDPRDABEIOQCJKCALCBLM $.
    $( [27-Aug-2011] $) $( [22-Mar-1998] $)

  $( A restriction is a relation.  Exercise 12 of [TakeutiZaring] p. 25.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  relres $p |- Rel ( A |` B ) $=
    ( cres cvv cxp wss wrel cin df-res inss2 eqsstri relxp relss mp2 ) ABCZBDEZ
    FPGOGOAPHPABIAPJKBDLOPMN $.
    $( [27-Aug-2011] $) $( [2-Aug-1994] $)

  $( Absorption law for restriction.  Exercise 17 of [TakeutiZaring] p. 25. $)
  resabs1 $p |- ( B C_ C -> ( ( A |` C ) |` B ) = ( A |` B ) ) $=
    ( wss cres cin resres wceq sseqin2 reseq2 sylbi syl5eq ) BCDZACEBEACBFZEZAB
    EZACBGMNBHOPHBCINBAJKL $.
    $( [9-Aug-1994] $)

  $( Absorption law for restriction. $)
  resabs2 $p |- ( B C_ C -> ( ( A |` B ) |` C ) = ( A |` B ) ) $=
    ( wss cres rescom resabs1 syl5eq ) BCDABEZCEACEBEIABCFABCGH $.
    $( [27-Mar-1998] $)

  $( Idempotent law for restriction. $)
  residm $p |- ( ( A |` B ) |` B ) = ( A |` B ) $=
    ( wss cres wceq ssid resabs2 ax-mp ) BBCABDZBDIEBFABBGH $.
    $( [27-Mar-1998] $)

  $( A restriction to an image. $)
  resima $p |- ( ( A |` B ) " B ) = ( A " B ) $=
    ( cres crn cima residm rneqi df-ima 3eqtr4i ) ABCZBCZDJDJBEABEKJABFGJBHABHI
    $.
    $( [29-Sep-2004] $)

  $( Image under a restricted class.  (Contributed by FL, 31-Aug-2009.) $)
  resima2 $p |- ( B C_ C -> ( ( A |` C ) " B ) = ( A " B ) ) $=
    ( wss cres cima crn cin wceq df-ima resres rneqi df-ss incom reseq2d reseq2
    a1i rneqd eqcomi 3eqtrd sylbi ) BCDZACEZBFZUCBEZGZACBHZEZGZABFZUDUFIUBUCBJQ
    UFUIIUBUEUHACBKLQUBBCHZBIZUIUJIBCMULUIAUKEZGABEZGZUJULUHUMULUGUKAUGUKIULCBN
    QORULUMUNUKBAPRUOUJIULUJUOABJSQTUAT $.
    $( [31-Aug-2009] $)

  $( Restriction of a constant function (or other cross product).  (Contributed
     by Stefan O'Rear, 24-Jan-2015.) $)
  xpssres $p |- ( C C_ A -> ( ( A X. B ) |` C ) = ( C X. B ) ) $=
    ( wss cxp cres cin df-res inxp incom inv1 xpeq12i 3eqtri wceq biimpi xpeq1d
    cvv df-ss syl5eq ) CADZABEZCFZCAGZBEZCBEUBUACQEGACGZBQGZEUDUACHABCQIUEUCUFB
    ACJBKLMTUCCBTUCCNCAROPS $.
    $( [24-Jan-2015] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in a restriction.  (Contributed by Scott Fenton,
       17-Mar-2011.) $)
    elres $p |- ( A e. ( B |` C )
          <-> E. x e. C E. y ( A = <. x , y >. /\ <. x , y >. e. B ) ) $=
      ( cres wcel cv cop wceq wex wrex wrel relres elrel mpan eleq1 biimpd vex
      wa opelres biimpi ancomd syl6com ancld an12 syl6ib 2eximdv rexcom4 df-rex
      exbii excom 3bitri sylibr simplbi2com biimprd syl9 imp3a exlimdv rexlimiv
      mpd impbii ) CDEFZGZCAHZBHZIZJZVGDGZTZBKZAELZVDVEEGZVJTZBKAKZVLVDVHBKAKZV
      OVCMVDVPDENABCVCOPVDVHVNABVDVHVHVMVITZTVNVDVHVQVHVDVGVCGZVQVHVDVRCVGVCQZR
      VRVIVMVRVIVMTVEVFDEBSUAZUBUCUDUEVHVMVIUFUGUHVAVLVJAELZBKVNAKZBKVOVJABEUIW
      AWBBVJAEUJUKVNBAULUMUNVKVDAEVMVJVDBVMVHVIVDVMVIVRVHVDVRVIVMVTUOVHVDVRVSUP
      UQURUSUTVB $.
      $( [17-Mar-2011] $)

    ${
      elsnres.1 $e |- C e. _V $.
      $( Memebership in restriction to a singleton.  (Contributed by Scott
         Fenton, 17-Mar-2011.) $)
      elsnres $p |- ( A e. ( B |` { C } )
            <-> E. y ( A = <. C , y >. /\ <. C , y >. e. B ) ) $=
        ( vx csn cres wcel cv cop wceq wa wex elres rexcom4 opeq1 eqeq2d eleq1d
        wrex anbi12d rexsn exbii 3bitri ) BCDGZHIBFJZAJZKZLZUHCIZMZANFUETUKFUET
        ZANBDUGKZLZUMCIZMZANFABCUEOUKFAUEPULUPAUKUPFDEUFDLZUIUNUJUOUQUHUMBUFDUG
        QZRUQUHUMCURSUAUBUCUD $.
        $( [17-Mar-2011] $)
    $}

    $( Simplification law for restriction. $)
    relssres $p |- ( ( Rel A /\ dom A C_ B ) -> ( A |` B ) = A ) $=
      ( vx vy wrel cdm wss wa cres wceq simpl cv cop wcel vex opeldm ssel ancld
      wi syl5 opelres syl6ibr adantl relssdv resss jctil eqss sylibr ) AEZAFZBG
      ZHZABIZAGZAUMGZHUMAJULUOUNULCDAUMUIUKKUKCLZDLZMZANZURUMNZSUIUKUSUSUPBNZHU
      TUKUSVAUSUPUJNUKVAUPUQACODOZPUJBUPQTRUPUQABVBUAUBUCUDABUEUFUMAUGUH $.
      $( [15-Mar-2004] $) $( [16-Aug-1994] $)
  $}

  $( A relation restricted to its domain equals itself. $)
  resdm $p |- ( Rel A -> ( A |` dom A ) = A ) $=
    ( wrel cdm wss cres wceq ssid relssres mpan2 ) ABACZJDAJEAFJGAJHI $.
    $( [12-Dec-2006] $)

  $( The restriction of a set is a set.  (The proof was shortened by Andrew
     Salmon, 27-Aug-2011.) $)
  resexg $p |- ( A e. V -> ( A |` B ) e. _V ) $=
    ( cres wss wcel cvv resss ssexg mpan ) ABDZAEACFKGFABHKACIJ $.
    $( [27-Aug-2011] $) $( [28-Mar-1998] $)

  ${
    resex.1 $e |- A e. _V $.
    $( The restriction of a set is a set.  (Contributed by Jeff Madsen,
       19-Jun-2011.) $)
    resex $p |- ( A |` B ) e. _V $=
      ( cvv wcel cres resexg ax-mp ) ADEABFDECABDGH $.
      $( [19-Jun-2011] $)
  $}

  ${
    $d x y A $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab $p |- ( { <. x , y >. | ph } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } $=
      ( copab cres cvv cxp cin cv wa df-res df-xp biantru opabbii eqtr4i ineq2i
      wcel vex incom eqtri inopab 3eqtri ) ABCEZDFUDDGHZIZBJDRZBCEZUDIZUGAKBCEU
      DDLUFUDUHIUIUEUHUDUEUGCJGRZKZBCEUHBCDGMUGUKBCUJUGCSNOPQUDUHTUAUGABCUBUC
      $.
      $( [5-Nov-2002] $)

    $( The existence of a restricted identity function, proved without using
       the Axiom of Replacement (unlike ~ resfunexg ). $)
    resiexg $p |- ( A e. V -> ( _I |` A ) e. _V ) $=
      ( vx vy wcel cid cres cxp wss cvv relres cv wa cop simpr eleq1 biimpa jca
      wceq vex opelres wbr df-br ideq bitr3i anbi1i bitri opelxp 3imtr4i relssi
      xpexg anidms ssexg sylancr ) ABEZFAGZAAHZIUQJEZUPJECDUPUQFAKCLZDLZSZUSAEZ
      MZVBUTAEZMUSUTNZUPEZVEUQEVCVBVDVAVBOVAVBVDUSUTAPQRVFVEFEZVBMVCUSUTFADTZUA
      VGVAVBVGUSUTFUBVAUSUTFUCUSUTVHUDUEUFUGUSUTAAUHUIUJUOURAABBUKULUPUQJUMUN
      $.
      $( [13-Jan-2007] $)

    $( A subclass of the identity function is the identity function restricted
       to its domain.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    iss $p |- ( A C_ _I <-> A = ( _I |` dom A ) ) $=
      ( vx vy cid wss cdm cres wceq cv cop wcel wb wal wa ssel wi opeldm syl5bi
      vex wrel a1i jcad wbr df-br bitr3i wex eldm2 opeq2 eleq1d biimprcd sylcom
      ideq exlimdv imbi2d syl5ibcom imp3a impbid opelres syl6bbr alrimivv relss
      reli mpi relres eqrel sylancl mpbird resss sseq1 mpbiri impbii ) ADEZADAF
      ZGZHZVLVOBIZCIZJZAKZVRVNKZLZCMBMZVLWABCVLVSVRDKZVPVMKZNZVTVLVSWEVLVSWCWDA
      DVROZVSWDPVLVPVQABSZCSZQUAUBVLWCWDVSWCVPVQHZVLWDVSPZWCVPVQDUCWIVPVQDUDVPV
      QWHULUEZVLWDVPVPJZAKZPWIWJWDVSCUFVLWMCVPAWGUGVLVSWMCVLVSWCWMWFWCWIVSWMWKW
      IWMVSWIWLVRAVPVQVPUHUIZUJRUKUMRWIWMVSWDWNUNUORUPUQVPVQDVMWHURUSUTVLATZVNT
      VOWBLVLDTWOVBADVAVCDVMVDBCAVNVEVFVGVOVLVNDEDVMVHAVNDVIVJVK $.
      $( [27-Aug-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Restriction of a class abstraction of ordered pairs. $)
    resopab2 $p |- ( A C_ B -> ( { <. x , y >. | ( x e. B /\ ph ) } |` A ) =
                  { <. x , y >. | ( x e. A /\ ph ) } ) $=
      ( wss cv wcel wa copab cres resopab wi wb ssel pm4.71 sylib anass syl6rbb
      anbi1d opabbidv syl5eq ) DEFZBGZEHZAIZBCJDKUDDHZUFIZBCJUGAIZBCJUFBCDLUCUH
      UIBCUCUIUGUEIZAIUHUCUGUJAUCUGUEMUGUJNDEUDOUGUEPQTUGUEARSUAUB $.
      $( [24-Aug-2007] $)
  $}

  ${
    $d w x y z A $.  $d w x y z R $.
    $( Alternate definition of the restriction operation.  (Contributed by
       Mario Carneiro, 5-Nov-2013.) $)
    dfres2 $p |- ( R |` A ) = { <. x , y >. | ( x e. A /\ x R y ) } $=
      ( vz vw cres cv wcel wbr wa copab relres relopab cop vex brres df-br wceq
      ancom 3bitr3i eleq1 breq1 anbi12d breq2 anbi2d opelopab bitr4i eqrelriiv
      ) EFDCGZAHZCIZUKBHZDJZKZABLZDCMUOABNEHZFHZOZUJIZUQCIZUQURDJZKZUSUPIUQURUJ
      JVBVAKUTVCUQURDCFPZQUQURUJRVBVATUAUOVAUQUMDJZKVCABUQUREPVDUKUQSULVAUNVEUK
      UQCUBUKUQUMDUCUDUMURSVEVBVAUMURUQDUEUFUGUHUI $.
      $( [5-Nov-2013] $)
  $}

  ${
    $d A x y $.
    $( The restricted identity expressed with the class builder.  (Contributed
       by FL, 25-Apr-2012.) $)
    opabresid $p |- { <. x , y >. | ( x e. A /\ y = x ) } = ( _I |` A ) $=
      ( weq copab cres cv wcel cid resopab equcom opabbii eqtr4i reseq1i eqtr3i
      wa dfid3 ) BADZABEZCFAGCHRPABEICFRABCJSICSABDZABEIRTABBAKLABQMNO $.
      $( [25-Apr-2012] $)
  $}

  $( The domain of a restricted identity function. $)
  dmresi $p |- dom ( _I |` A ) = A $=
    ( cid cdm wss cres wceq cvv ssv dmi sseqtr4i ssdmres mpbi ) ABCZDBAECAFAGMA
    HIJABKL $.
    $( [27-Aug-2004] $)

  $( MAY BE REVISED - delete this and replace w/ dfres3 (in FL's mathbox) $)
  $( Any relation restricted to the universe is itself. $)
  resid $p |- ( Rel A -> ( A |` _V ) = A ) $=
    ( wrel cdm cvv wss cres wceq ssv relssres mpan2 ) ABACZDEADFAGKHADIJ $.
    $( [16-Mar-2004] $)

  $( Equality theorem for image. $)
  imaeq1 $p |- ( A = B -> ( A " C ) = ( B " C ) ) $=
    ( wceq cres crn cima reseq1 rneqd df-ima 3eqtr4g ) ABDZACEZFBCEZFACGBCGLMNA
    BCHIACJBCJK $.
    $( [14-Aug-1994] $)

  $( Equality theorem for image. $)
  imaeq2 $p |- ( A = B -> ( C " A ) = ( C " B ) ) $=
    ( wceq cres crn cima reseq2 rneqd df-ima 3eqtr4g ) ABDZCAEZFCBEZFCAGCBGLMNA
    BCHICAJCBJK $.
    $( [14-Aug-1994] $)

  ${
    imaeq1i.1 $e |- A = B $.
    $( Equality theorem for image. $)
    imaeq1i $p |- ( A " C ) = ( B " C ) $=
      ( wceq cima imaeq1 ax-mp ) ABEACFBCFEDABCGH $.
      $( [21-Dec-2008] $)

    $( Equality theorem for image. $)
    imaeq2i $p |- ( C " A ) = ( C " B ) $=
      ( wceq cima imaeq2 ax-mp ) ABECAFCBFEDABCGH $.
      $( [21-Dec-2008] $)
  $}

  ${
    imaeq1d.1 $e |- ( ph -> A = B ) $.
    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq1d $p |- ( ph -> ( A " C ) = ( B " C ) ) $=
      ( wceq cima imaeq1 syl ) ABCFBDGCDGFEBCDHI $.
      $( [12-Dec-2006] $)

    $( Equality theorem for image.  (Contributed by FL, 15-Dec-2006.) $)
    imaeq2d $p |- ( ph -> ( C " A ) = ( C " B ) ) $=
      ( wceq cima imaeq2 syl ) ABCFDBGDCGFEBCDHI $.
      $( [12-Dec-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima2 $p |- ( A " B ) = { y | E. x e. B x A y } $=
      ( cima cres crn cv wbr wex cab wrex df-ima dfrn2 wa vex brres ancom bitri
      wcel exbii df-rex bitr4i abbii 3eqtri ) CDECDFZGAHZBHZUFIZAJZBKUGUHCIZADL
      ZBKCDMABUFNUJULBUJUGDTZUKOZAJULUIUNAUIUKUMOUNUGUHCDBPQUKUMRSUAUKADUBUCUDU
      E $.
      $( [27-Aug-2011] $) $( [19-Apr-2004] $)

    $( Alternate definition of image.  Compare definition (d) of [Enderton]
       p. 44.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    dfima3 $p |- ( A " B ) = { y | E. x ( x e. B /\ <. x , y >. e. A ) } $=
      ( cima cv wbr wrex cab wcel cop wa dfima2 df-br rexbii df-rex bitri abbii
      wex eqtri ) CDEAFZBFZCGZADHZBIUADJUAUBKCJZLASZBIABCDMUDUFBUDUEADHUFUCUEAD
      UAUBCNOUEADPQRT $.
      $( [27-Aug-2011] $) $( [14-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elimag $p |- ( A e. V -> ( A e. ( B " C ) <-> E. x e. C x B A ) ) $=
      ( vy cv wbr wrex cima wceq breq2 rexbidv dfima2 elab2g ) AGZFGZCHZADIPBCH
      ZADIFBCDJEQBKRSADQBPCLMAFCDNO $.
      $( [20-Jan-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elima.1 $e |- A e. _V $.
    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima $p |- ( A e. ( B " C ) <-> E. x e. C x B A ) $=
      ( cvv wcel cima cv wbr wrex wb elimag ax-mp ) BFGBCDHGAIBCJADKLEABCDFMN
      $.
      $( [19-Apr-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima2 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ x B A ) ) $=
      ( cima wcel cv wbr wrex wa wex elima df-rex bitri ) BCDFGAHZBCIZADJPDGQKA
      LABCDEMQADNO $.
      $( [11-Aug-2004] $)

    $( Membership in an image.  Theorem 34 of [Suppes] p. 65. $)
    elima3 $p |- ( A e. ( B " C ) <-> E. x ( x e. C /\ <. x , A >. e. B ) ) $=
      ( cima wcel cv wbr wa wex cop elima2 df-br anbi2i exbii bitri ) BCDFGAHZD
      GZRBCIZJZAKSRBLCGZJZAKABCDEMUAUCATUBSRBCNOPQ $.
      $( [14-Aug-1994] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z w $.
    hbima.1 $e |- ( y e. A -> A. x y e. A ) $.
    hbima.2 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for image.  (The proof was shortened
       by Andrew Salmon, 27-Aug-2011.) $)
    hbima $p |- ( y e. ( A " B ) -> A. x y e. ( A " B ) ) $=
      ( cima cres crn df-ima hbres hbrn hbxfreq ) ABCDGCDHZICDJABNABCDEFKLM $.
      $( [27-Aug-2011] $) $( [30-Dec-1996] $)
  $}

  ${
    $d x y z $.  $d B y z $.  $d A y z $.  $d ph y $.
    hbimad.1 $e |- ( ph -> A. x ph ) $.
    hbimad.2 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    hbimad.3 $e |- ( ph -> ( y e. B -> A. x y e. B ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbima .
       (Contributed by FL, 15-Dec-2006.) $)
    hbimad $p |- ( ph -> ( y e. ( A " B ) -> A. x y e. ( A " B ) ) ) $=
      ( vz cv wcel wal cab cima wi hba1 hbab wceq alrimiv abidhb a1i syl eleq2d
      hbima imaeq1d imaeq2d eqtrd albid 3imtr3d ) ACJZIJZDKZBLZIMZUKEKZBLZIMZNZ
      KZUSBLZUJDENZKZVBBLUSUTOABCUNUQUMBICULBPQUPBICUOBPQUDUAAURVAUJAURDUQNVAAU
      NDUQAUJDKZVCBLOZCLUNDRAVDCGSBCIDTUBUEAUQEDAUJEKZVEBLOZCLUQERAVFCHSBCIETUB
      UFUGUCZAUSVBBFVGUHUI $.
      $( [14-Dec-2006] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.  $d x y z $.  $d F y z $.
    $( Move class substitution in and out of the image of a function.
       (Contributed by FL, 15-Dec-2006.) $)
    csbima12g $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cima ax-17 hbcsb1g hbcsb1 csbeq1a imaeq1d imaeq2d 3eqtr3d
      csb wceq csbcog hbimad hbima hbeq vex vtoclef a1i 3eqtrd csbiegf eqtrd )
      BDHZFBAFIZECJZRZRFBAUKERZRZFBAUKCRZRZJZABULRABERZABCRZJZFGBUMURDUJFGUOUQU
      JFKFGBUNDGIZBHFKZLFGBUPDVCLUAUKBSZUMUNUPJZUOUPJURUMVESZVDVFAUKAGGUMVEAGUK
      ULVBUKHAKZMAGUNUPAGUKEVGMAGUKCVGMUBUCFUDAIUKSZULUNCJUMVEVHEUNCAUKENOAUKUL
      NVHCUPUNAUKCNPQUEUFVDUNUOUPFBUNNOVDUPUQUOFBUPNPUGUHAFBULDTUJURUSUQJVAUJUO
      USUQAFBEDTOUJUQUTUSAFBCDTPUIQ $.
      $( [13-Dec-2006] $)
  $}

  $( Move class substitution in and out of the image of a function.(This is
     ~ csbima12g with a shortened proof, shortened by Alan Sare, 10-Nov-2012.)
     The proof is derived from the virtual deduction proof ~ csbima12gALTVD .
     Although the proof is shorter, the total number of steps of all theorems
     used in the proof is probably longer. $)
  csbima12gALT $p |- ( A e. C -> [_ A / x ]_ ( F " B ) =
                 ( [_ A / x ]_ F " [_ A / x ]_ B ) ) $=
    ( wcel cima csb cres crn df-ima csbeq2i csbrng csbresg rneqd 3eqtrd syl6eqr
    ) BDFZABECGZHZABEHZABCHZIZJZUAUBGRTABECIZJZHABUEHZJUDABSUFDECKLABUEDMRUGUCA
    BECDNOPUAUBKQ $.
    $( [10-Nov-2012] $)

  ${
    $d x y A $.  $d x y B $.
    $( The image of the domain of a class is the range of the class. $)
    imadmrn $p |- ( A " dom A ) = ran A $=
      ( vx vy cv cdm wcel cop wa wex cab cima crn vex opeldm ancom bitr2i exbii
      pm4.71i abbii dfima3 dfrn3 3eqtr4i ) BDZAEZFZUCCDZGAFZHZBIZCJUGBIZCJAUDKA
      LUIUJCUHUGBUGUGUEHUHUGUEUCUFABMCMNRUGUEOPQSBCAUDTBCAUAUB $.
      $( [14-Aug-1994] $)

    $( The image of a class is a subset of its range.  Theorem 3.16(xi) of
       [Monk1] p. 39. $)
    imassrn $p |- ( A " B ) C_ ran A $=
      ( vx vy cv wcel cop wa wex cab cima crn simpr eximi ss2abi dfima3 3sstr4i
      dfrn3 ) CEZBFZSDEGAFZHZCIZDJUACIZDJABKALUCUDDUBUACTUAMNOCDABPCDARQ $.
      $( [31-Mar-1995] $)
  $}

  $( The image of a set is a set.  Theorem 3.17 of [Monk1] p. 39. $)
  imaexg $p |- ( A e. V -> ( A " B ) e. _V ) $=
    ( wcel cima crn wss cvv imassrn rnexg ssexg sylancr ) ACDABEZAFZGNHDMHDABIA
    CJMNHKL $.
    $( [24-Jul-1995] $)

  ${
    $d x y A $.
    $( Image under the identity relation.  Theorem 3.16(viii) of [Monk1]
       p. 38. $)
    imai $p |- ( _I " A ) = A $=
      ( vx vy cid cima cv wcel cop wa wex cab dfima3 wceq wbr df-br ideq bitr3i
      vex anbi2i bitri ancom exbii eleq1 ceqsexv abbii abid2 3eqtri ) DAEBFZAGZ
      UHCFZHDGZIZBJZCKUJAGZCKABCDALUMUNCUMUHUJMZUIIZBJUNULUPBULUIUOIUPUKUOUIUKU
      HUJDNUOUHUJDOUHUJCRZPQSUIUOUATUBUIUNBUJUQUHUJAUCUDTUECAUFUG $.
      $( [30-Apr-1998] $)
  $}

  $( The range of the restricted identity function. $)
  rnresi $p |- ran ( _I |` A ) = A $=
    ( cid cima cres crn df-ima imai eqtr3i ) BACBADEABAFAGH $.
    $( [27-Aug-2004] $)

  $( The image of a restriction of the identity function.  (Contributed by FL,
     31-Dec-2006.) $)
  resiima $p |- ( B C_ A -> ( ( _I |` A ) " B ) = B ) $=
    ( wss cid cres cima crn wceq df-ima a1i resabs1 rneqd rnresi 3eqtrd ) BACZD
    AEZBFZPBEZGZDBEZGZBQSHOPBIJORTDBAKLUABHOBMJN $.
    $( [28-Dec-2006] $)

  $( Image of the empty set.  Theorem 3.16(ii) of [Monk1] p. 38. $)
  ima0 $p |- ( A " (/) ) = (/) $=
    ( c0 cima cres crn df-ima res0 rneqi rn0 3eqtri ) ABCABDZEBEBABFKBAGHIJ $.
    $( [20-May-1998] $)

  $( Image under the empty relation.  (Contributed by FL, 11-Jan-2007.) $)
  0ima $p |- ( (/) " A ) = (/) $=
    ( c0 cima crn imassrn rn0 sseqtri 0ss eqssi ) BACZBJBDBBAEFGJHI $.
    $( [4-Jan-2007] $)

  $( A class whose image under another is empty is disjoint with the other's
     domain.  (Contributed by FL, 24-Jan-2007.) $)
  imadisj $p |- ( ( A " B ) = (/) <-> ( dom A i^i B ) = (/) ) $=
    ( cima wceq cres crn cdm cin df-ima eqeq1i dm0rn0 dmres incom eqtri 3bitr2i
    c0 ) ABCZPDABEZFZPDRGZPDAGZBHZPDQSPABIJRKTUBPTBUAHUBABLBUAMNJO $.
    $( [15-Jan-2007] $)

  $( A preimage under any class is included in the domain of the class.
     (Contributed by FL, 29-Jan-2007.) $)
  cnvimass $p |- ( `' A " B ) C_ dom A $=
    ( ccnv cima crn cdm imassrn dfdm4 sseqtr4i ) ACZBDJEAFJBGAHI $.
    $( [29-Jan-2007] $)

  $( The preimage of the range of a class is the domain of the class.
     (Contributed by Jeff Hankins, 15-Jul-2009.) $)
  cnvimarndm $p |- ( `' A " ran A ) = dom A $=
    ( ccnv cdm cima crn imadmrn df-rn imaeq2i dfdm4 3eqtr4i ) ABZKCZDKEKAEZDACK
    FMLKAGHAIJ $.
    $( [12-Jul-2009] $)

  ${
    $d y x A $.  $d y x R $.
    $( The image of a singleton. $)
    imasng $p |- ( A e. B -> ( R " { A } ) = { y | A R y } ) $=
      ( vx wcel cvv csn cima wbr cab wceq elex wrex dfima2 rexsng abbidv syl5eq
      cv breq1 syl ) BCFBGFZDBHZIZBASZDJZAKZLBCMUBUDESZUEDJZEUCNZAKUGEADUCOUBUJ
      UFAUIUFEBGUHBUEDTPQRUA $.
      $( [8-May-2005] $)

    $( The image of a singleton. $)
    relimasn $p |- ( Rel R -> ( R " { A } ) = { y | A R y } ) $=
      ( wrel cvv wcel csn cima cv wbr cab wceq wn wa c0 snprc imaeq2 sylbi ima0
      ex syl6eq adantl wex brrelex con3d imp nexdv abn0 necon1bbii sylib eqtr4d
      imasng pm2.61d2 ) CDZBEFZCBGZHZBAIZCJZAKZLZUNUOMZVAUNVBNZUQOUTVBUQOLUNVBU
      QCOHZOVBUPOLUQVDLBPUPOCQRCSUAUBVCUSAUCZMUTOLVCUSAUNVBUSMUNUSUOUNUSUOBURCU
      DTUEUFUGVEUTOUSAUHUIUJUKTABECULUM $.
      $( [10-May-2005] $) $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    elimasn.1 $e |- B e. _V $.
    elimasn.2 $e |- C e. _V $.
    $( Membership in an image of a singleton.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    elimasn $p |- ( C e. ( A " { B } ) <-> <. B , C >. e. A ) $=
      ( vx csn cima wcel wbr cop cv breq2 cvv cab wceq imasng ax-mp elab2 df-br
      bitri ) CABGHZIBCAJZBCKAIBFLZAJZUCFCUBEUDCBAMBNIUBUEFOPDFBNAQRSBCATUA $.
      $( [27-Aug-2011] $) $( [15-Mar-2004] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C y z $.
    $( Membership in an image of a singleton.  (Contributed by Raph Levien,
       21-Oct-2006.) $)
    elimasng $p |- ( ( B e. V /\ C e. W ) ->
                   ( C e. ( A " { B } ) <-> <. B , C >. e. A ) ) $=
      ( vz vy cv csn cima wcel cop wceq sneq imaeq2d eleq2d eleq1d bibi12d vex
      wb opeq1 eleq1 opeq2 elimasn vtocl2g ) FHZAGHZIZJZKZUGUFLZAKZTUFABIZJZKZB
      UFLZAKZTCUNKZBCLZAKZTGFBCDEUGBMZUJUOULUQVAUIUNUFVAUHUMAUGBNOPVAUKUPAUGBUF
      UAQRUFCMZUOURUQUTUFCUNUBVBUPUSAUFCBUCQRAUGUFGSFSUDUE $.
      $( [21-Oct-2006] $)
  $}

  $( Membership in an image of a singleton. $)
  elimasni $p |- ( C e. ( A " { B } ) -> B A C ) $=
    ( cvv wcel wa csn cima wbr wn c0 noel wceq snprc biimpi imaeq2d ima0 syl6eq
    eleq2d mtbiri con4i elex jca cop elimasng df-br syl6bbr biimpd mpcom ) BDEZ
    CDEZFZCABGZHZEZBCAIZUOUJUKUJUOUJJZUOCKECLUQUNKCUQUNAKHKUQUMKAUQUMKMBNOPAQRS
    TUACUNUBUCULUOUPULUOBCUDAEUPABCDDUEBCAUFUGUHUI $.
    $( [5-Aug-2010] $)

  ${
    $d y F $.  $d x y $.
    $( Two ways to express the class of unique-valued arguments of ` F ` ,
       which is the same as the domain of ` F ` whenever ` F ` is a function.
       The left-hand side of the equality is from Definition 10.2 of [Quine]
       p. 65.  Quine uses the notation "arg ` F ` " for this class (for which
       we have no separate notation).  Observe the resemblance to our ~ df-fv ,
       which was based on the idea in Quine's definition. $)
    args $p |- { x | E. y ( F " { x } ) = { y } } = { x | E! y x F y } $=
      ( cv csn cima wceq wex wbr weu cab cvv wcel vex imasng ax-mp eqeq1i exbii
      euabsn bitr4i abbii ) CADZEFZBDZEZGZBHZUBUDCIZBJZAUGUHBKZUEGZBHUIUFUKBUCU
      JUEUBLMUCUJGANBUBLCOPQRUHBSTUA $.
      $( [8-May-2005] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.
    eliniseg.1 $e |- C e. _V $.
    $( Membership in an initial segment.  The idiom ` ( ``' A " { B } ) ` ,
       meaning ` { x | x A B } ` , is used to specify an initial segment in
       (for example) Definition 6.21 of [TakeutiZaring] p. 30.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    eliniseg $p |- ( B e. V -> ( C e. ( `' A " { B } ) <-> C A B ) ) $=
      ( wcel cvv ccnv csn cima wbr wb wa cop elimasng df-br syl6bbr bitrd mpan2
      brcnvg ) BDFZCGFZCAHZBIJFZCBAKZLEUAUBMZUDBCUCKZUEUFUDBCNUCFUGUCBCDGOBCUCP
      QBCDGATRS $.
      $( [27-Aug-2011] $) $( [28-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x V $.
    $( Eliminate the class existence constraint in ~ eliniseg .  (Contributed
       by Mario Carneiro, 5-Dec-2014.) $)
    eliniseg2 $p |- ( ( Rel A /\ B e. V ) ->
      ( C e. ( `' A " { B } ) <-> C A B ) ) $=
      ( vx wrel wcel wa cvv ccnv csn cima wbr wi elex a1i brrelex ex adantr wb
      cv wceq eleq1 breq1 bibi12d imbi2d eliniseg vtoclg com12 adantl pm5.21ndd
      vex ) AFZBDGZHZCIGZCAJBKLZGZCBAMZURUPNUOCUQOPUMUSUPNUNUMUSUPCBAQRSUNUPURU
      STZNUMUPUNUTUNEUAZUQGZVABAMZTZNUNUTNECIVACUBZVDUTUNVEVBURVCUSVACUQUCVACBA
      UDUEUFABVADEULUGUHUIUJUK $.
      $( [5-Dec-2014] $)
  $}

  ${
    $d A x y $.
    epini.1 $e |- A e. _V $.
    $( Any set is equal to its preimage under the converse epsilon relation.
       (Contributed by Mario Carneiro, 9-Mar-2013.) $)
    epini $p |- ( `' _E " { A } ) = A $=
      ( vx cep ccnv csn cima cv wbr cvv wb vex eliniseg ax-mp epelc bitri eqriv
      wcel ) CDEAFGZACHZSRZTADIZTARAJRUAUBKBDATJCLMNTABOPQ $.
      $( [9-Mar-2013] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( An idiom that signifies an initial segment of an ordering, used, for
       example, in Definition 6.21 of [TakeutiZaring] p. 30. $)
    iniseg $p |- ( B e. V -> ( `' A " { B } ) = { x | x A B } ) $=
      ( wcel cvv ccnv csn cima cv wbr cab wceq elex vex eliniseg abbi2dv syl )
      CDECFEZBGCHIZAJZCBKZALMCDNSUBATBCUAFAOPQR $.
      $( [28-Apr-2004] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    $( Alternate definition of well-founded relation.  Definition 6.21 of
       [TakeutiZaring] p. 30. $)
    dffr3 $p |- ( R Fr A <-> A. x ( ( x C_ A /\ x =/= (/) ) ->
                E. y e. x ( x i^i ( `' R " { y } ) ) = (/) ) ) $=
      ( vz wfr cv wss c0 wne wa wbr crab wceq wrex wi wal ccnv cin cvv csn cima
      dffr2 cab wcel vex iniseg ax-mp ineq2i dfrab3 eqtr4i eqeq1i rexbii imbi2i
      albii bitr4i ) CDFAGZCHUQIJKZEGBGZDLZEUQMZINZBUQOZPZAQURUQDRUSUAUBZSZINZB
      UQOZPZAQABECDUCVIVDAVHVCURVGVBBUQVFVAIVFUQUTEUDZSVAVEVJUQUSTUEVEVJNBUFEDU
      STUGUHUIUTEUQUJUKULUMUNUOUP $.
      $( [23-Jun-2015] $) $( [23-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y R $.  $d x V $.
    $( Alternate definition of set-like relation. $)
    dfse2 $p |- ( R Se A <-> A. x e. A ( A i^i ( `' R " { x } ) ) e. _V ) $=
      ( vy wse cv wbr crab cvv wcel wral ccnv csn cima cin df-se cab dfrab3 vex
      wceq iniseg ax-mp ineq2i eqtr4i eleq1i ralbii bitri ) BCEDFAFZCGZDBHZIJZA
      BKBCLUHMNZOZIJZABKADBCPUKUNABUJUMIUJBUIDQZOUMUIDBRULUOBUHIJULUOTASDCUHIUA
      UBUCUDUEUFUG $.
      $( [23-Jun-2015] $)

    $( Any set relation is set-like.  (Contributed by Mario Carneiro,
       22-Jun-2015.) $)
    exse2 $p |- ( R e. V -> R Se A ) $=
      ( vy vx wcel cv wbr crab cvv wral wse cdm wss wa cab df-rab breldm adantl
      vex abssi eqsstri dmexg ssexg sylancr ralrimivw df-se sylibr ) BCFZDGZEGZ
      BHZDAIZJFZEAKABLUIUNEAUIUMBMZNUOJFUNUMUJAFZULOZDPUOULDAQUQDUOULUJUOFUPUJU
      KBDTETRSUAUBBCUCUMUOJUDUEUFEDABUGUH $.
      $( [22-Jun-2015] $)
  $}

  $( Subset theorem for image. $)
  imass1 $p |- ( A C_ B -> ( A " C ) C_ ( B " C ) ) $=
    ( wss cres crn cima ssres rnss syl df-ima 3sstr4g ) ABDZACEZFZBCEZFZACGBCGM
    NPDOQDABCHNPIJACKBCKL $.
    $( [16-Mar-2004] $)

  $( Subset theorem for image.  Exercise 22(a) of [Enderton] p. 53. $)
  imass2 $p |- ( A C_ B -> ( C " A ) C_ ( C " B ) ) $=
    ( wss cres crn cima ssres2 rnss syl df-ima 3sstr4g ) ABDZCAEZFZCBEZFZCAGCBG
    MNPDOQDABCHNPIJCAKCBKL $.
    $( [22-Mar-1998] $)

  $( The image of a singleton outside the domain is empty. $)
  ndmima $p |- ( -. A e. dom B -> ( B " { A } ) = (/) ) $=
    ( cdm wcel wn csn cima cres crn c0 df-ima wceq cin dmres incom eqtri disjsn
    biimpri syl5eq dm0rn0 sylib ) ABCZDEZBAFZGBUDHZIZJBUDKUCUECZJLUFJLUCUGUBUDM
    ZJUGUDUBMUHBUDNUDUBOPUHJLUCUBAQRSUETUAS $.
    $( [22-May-1998] $)

  ${
    $d x y A $.
    $( A converse is a relation.  Theorem 12 of [Suppes] p. 62. $)
    relcnv $p |- Rel `' A $=
      ( vy vx cv wbr ccnv df-cnv relopabi ) BDCDAECBAFCBAGH $.
      $( [29-Oct-1996] $)
  $}

  ${
    $( When ` R ` is a relation, the sethood assumptions on ~ brcnv can be
       omitted. $)
    relbrcnvg $p |- ( Rel R -> ( A `' R B <-> B R A ) ) $=
      ( wrel cvv wcel wa ccnv wbr wi relcnv brrelex12 mpan a1i ancomd ex brcnvg
      wb pm5.21ndd ) CDZAEFZBEFZGZABCHZIZBACIZUEUCJTUDDUEUCCKABUDLMNTUFUCTUFGUB
      UABACLOPUCUEUFRJTABEECQNS $.
      $( [28-Apr-2015] $)

    relbrcnv.1 $e |- Rel R $.
    $( When ` R ` is a relation, the sethood assumptions on ~ brcnv can be
       omitted. $)
    relbrcnv $p |- ( A `' R B <-> B R A ) $=
      ( wrel ccnv wbr wb relbrcnvg ax-mp ) CEABCFGBACGHDABCIJ $.
      $( [28-Apr-2015] $)
  $}

  ${
    $d x y z R $.
    $( Two ways of saying a relation is transitive.  Definition of transitivity
       in [Schechter] p. 51.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cotr $p |- ( ( R o. R ) C_ R <->
             A. x A. y A. z ( ( x R y /\ y R z ) -> x R z ) ) $=
      ( ccom wss cv cop wcel wi wal wbr wa wrel wb wex df-co vex albii bitri
      relopabi ssrel ax-mp opelco df-br bicomi imbi12i 19.23v bitr4i alcom ) DD
      EZDFZAGZCGZHZUKIZUODIZJZCKZAKZUMBGZDLVAUNDLMZUMUNDLZJZCKBKZAKUKNULUTOVBBP
      ZACUKACBDDQUAACUKDUBUCUSVEAUSVDBKZCKVEURVGCURVFVCJVGUPVFUQVCBUMUNDDARCRUD
      VCUQUMUNDUEUFUGVBVCBUHUISVDCBUJTST $.
      $( [27-Aug-2011] $) $( [27-Dec-1996] $)
  $}

  ${
    $d x y R $.
    $( Two ways of saying a relation is symmetric.  Similar to definition of
       symmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    cnvsym $p |- ( `' R C_ R <-> A. x A. y ( x R y -> y R x ) ) $=
      ( cv cop ccnv wcel wi wal wss wbr alcom wrel relcnv ssrel ax-mp vex brcnv
      wb df-br bitr3i imbi12i 2albii 3bitr4i ) BDZADZEZCFZGZUGCGZHZAIBIZUKBIAIU
      HCJZUFUECKZUEUFCKZHZBIAIUKBALUHMUMULSCNBAUHCOPUPUKABUNUIUOUJUNUEUFUHKUIUE
      UFCBQAQRUEUFUHTUAUEUFCTUBUCUD $.
      $( [27-Aug-2011] $) $( [28-Dec-1996] $)

    $( Two ways of saying a relation is antisymmetric.  Definition of
       antisymmetry in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    intasym $p |- ( ( R i^i `' R ) C_ _I <->
                  A. x A. y ( ( x R y /\ y R x ) -> x = y ) ) $=
      ( ccnv cin cid wss cv cop wcel wi wal wbr wa wceq wrel df-br vex bitr3i
      wb relcnv relin2 ssrel mp2b elin brcnv anbi12i bitr4i ideq imbi12i 2albii
      bitri ) CCDZEZFGZAHZBHZIZUNJZURFJZKZBLALZUPUQCMZUQUPCMZNZUPUQOZKZBLALUMPU
      NPUOVBTCUACUMUBABUNFUCUDVAVGABUSVEUTVFUSURCJZURUMJZNVEURCUMUEVCVHVDVIUPUQ
      CQVDUPUQUMMVIUPUQCARBRZUFUPUQUMQSUGUHUTUPUQFMVFUPUQFQUPUQVJUISUJUKUL $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)

    $( Two ways of saying a relation is antisymmetric and reflexive.
       ` U. U. R ` is the field of a relation by ~ relfld .  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    asymref $p |- ( ( R i^i `' R ) = ( _I |` U. U. R ) <->
       A. x e. U. U. R A. y ( ( x R y /\ y R x ) <-> x = y ) ) $=
      ( cv cop wcel cid cuni wb wal wbr wa wceq wi df-br vex 3bitr4i albii wrel
      bitr3i ccnv cin cres wral opeluu sylbi simpld adantr pm4.71ri bibi1i elin
      brcnv anbi12i bitr4i opelres ancom ideq anbi2i 3bitri pm5.32 19.21v bitri
      bibi12i relcnv relin2 ax-mp relres eqrel mp2an df-ral ) ADZBDZEZCCUAZUBZF
      ZVMGCHHZUCZFZIZBJZAJZVKVQFZVKVLCKZVLVKCKZLZVKVLMZIZBJZNZAJVOVRMZWIAVQUDWA
      WJAWAWCWHNZBJWJVTWLBWFWCWGLZIWCWFLZWMIVTWLWFWNWMWFWCWDWCWEWDWCVLVQFZWDVMC
      FZWCWOLVKVLCOZABCUEUFUGUHUIUJVPWFVSWMVPWPVMVNFZLWFVMCVNUKWDWPWEWRWQWEVKVL
      VNKWRVKVLCAPBPZULVKVLVNOTUMUNVSVMGFZWCLWCWTLWMVKVLGVQWSUOWTWCUPWTWGWCWTVK
      VLGKWGVKVLGOVKVLWSUQTURUSVCWCWFWGUTQRWCWHBVAVBRVOSZVRSWKWBIVNSXACVDCVNVEV
      FGVQVGABVOVRVHVIWIAVQVJQ $.
      $( [27-Aug-2011] $) $( [6-May-2008] $)

    $( Two ways of saying a relation is antisymmetric and reflexive.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    asymref2 $p |- ( ( R i^i `' R ) = ( _I |` U. U. R ) <->
   ( A. x e. U. U. R x R x /\ A. x A. y ( ( x R y /\ y R x ) -> x = y ) ) ) $=
      ( ccnv cin cid cuni cres wceq cv wbr wa wb wal wral asymref ralbii 3bitri
      wi wcel albiim r19.26 ancom equcom imbi1i albii ax-17 breq2 breq1 anbi12d
      anidm syl6bb equsal bitri hbra1 ralcom4 cop opeluu simpld ra4 syl5 syl5bi
      df-br adantrd pm2.43d alimi sylbi alrimi alral impbii anbi12i ) CCDEFCGGZ
      HIAJZBJZCKZVNVMCKZLZVMVNIZMBNZAVLOVQVRSZBNZVRVQSZBNZLZAVLOZVMVMCKZAVLOZWA
      ANZLZABCPVSWDAVLVQVRBUAQWEWAAVLOZWCAVLOZLWKWJLWIWAWCAVLUBWJWKUCWKWGWJWHWC
      WFAVLWCVNVMIZVQSZBNWFWBWMBVRWLVQABUDUEUFVQWFBAWFBUGWLVQWFWFLWFWLVOWFVPWFV
      NVMVMCUHVNVMVMCUIUJWFUKULUMUNQWJWHWJWAAWAAVLUOWJVTAVLOZBNWAVTABVLUPWNVTBW
      NVQVRWNVOVTVPVOVMVNUQCTZWNVTVMVNCVCWOVMVLTZWNVTWOWPVNVLTABCURUSVTAVLUTVAV
      BVDVEVFVGVHWAAVLVIVJVKRR $.
      $( [27-Aug-2011] $) $( [6-May-2008] $)

    $( Two ways of saying a relation is irreflexive.  Definition of
       irreflexivity in [Schechter] p. 51.  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    intirr $p |- ( ( R i^i _I ) = (/) <-> A. x -. x R x ) $=
      ( vy cid cin c0 wceq cv cop wcel cvv cdif wi wal weq wbr wn df-br 3bitr2i
      wss incom eqeq1i disj2 wrel wb reli ssrel ax-mp 3bitri eqcom ideq wa opex
      vex biantrur eldif bitr4i xchnxbir 2albii ax-17 breq2 notbid equsal albii
      imbi12i ) BDEZFGZAHZCHZIZDJZVJKBLZJZMZCNANZCAOZVHVIBPZQZMZCNZANVHVHBPZQZA
      NVGDBEZFGDVLTZVOVFWCFBDUAUBDBUCDUDWDVOUEUFACDVLUGUHUIVSVNACVPVKVRVMVPACOV
      HVIDPVKVIVHUJVHVICUNUKVHVIDRSVJBJZVMVQWEQZVJKJZWFULVMWGWFVHVIUMUOVJKBUPUQ
      VHVIBRURVEUSVTWBAVRWBCAWBCUTVPVQWAVIVHVHBVAVBVCVDS $.
      $( [27-Aug-2011] $) $( [9-Sep-2004] $)
  $}

  ${
    soi.1 $e |- R Or S $.
    soi.2 $e |- R C_ ( S X. S ) $.
    $( A strict order relation is irreflexive.  (Revised by Mario Carneiro,
       10-May-2013.) $)
    soirri $p |- -. A R A $=
      ( wcel wa wbr wn wor sonr mpan adantl brel con3i pm2.61i ) ACFZQGZAABHZIZ
      QTQCBJQTDCABKLMSRAACCBENOP $.
      $( [10-May-2013] $) $( [10-Feb-1996] $)

    ${
      $d A x $.  $d B x $.  $d R x $.
      $( A strict order relation is a transitive relation.  (Revised by Mario
         Carneiro, 10-May-2013.) $)
      sotri $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        ( wcel wa wbr brel simpld anim12i wi wor w3a sotr mpan 3expb mpcom ) AE
        HZBEHZCEHZIZIABDJZBCDJZIZACDJZUEUAUFUDUEUAUBABEEDGKLBCEEDGKMUAUBUCUGUHN
        ZEDOUAUBUCPUIFEABCDQRST $.
        $( [10-May-2013] $) $( [10-Feb-1996] $)

      $( A strict order relation has no 2-cycle loops.  (Revised by Mario
         Carneiro, 10-May-2013.) $)
      son2lpi $p |- -. ( A R B /\ B R A ) $=
        ( wbr wa soirri sotri mto ) ABCGBACGHAACGACDEFIABACDEFJK $.
        $( [10-May-2013] $) $( [10-Feb-1996] $)

      $( A transitivity relation.  (Read ` A <_ B ` and ` B < C ` implies
         ` A < C ` .)  (Contributed by Mario Carneiro, 10-May-2013.) $)
      sotri2 $p |- ( ( A e. S /\ -. B R A /\ B R C ) -> A R C ) $=
        ( wcel wbr wn wi brel simpld wa wceq wo wor wb sotric mpan breq1 biimpd
        con2bid sotri ex jaoi syl6bir com3r mpand com3l 3imp ) AEHZBADIZJZBCDIZ
        ACDIZUOULUNUPUOBEHZULUNUPKUOUQCEHBCEEDGLMUQULNZUNUOUPURUNBAOZABDIZPZUOU
        PKZURUMVAEDQURUMVAJRFEBADSTUCUSVBUTUSUOUPBACDUAUBUTUOUPABCDEFGUDUEUFUGU
        HUIUJUK $.
        $( [10-May-2013] $)

      $( A transitivity relation.  (Read ` A < B ` and ` B <_ C ` implies
         ` A < C ` .)  (Contributed by Mario Carneiro, 10-May-2013.) $)
      sotri3 $p |- ( ( C e. S /\ A R B /\ -. C R B ) -> A R C ) $=
        ( wcel wbr wn wi brel simprd wa wceq wo wor wb sotric mpan breq2 expcom
        con2bid biimprd sotri jaoi syl6bir com3r mpan2d com12 3imp ) CEHZABDIZC
        BDIZJZACDIZUMULUOUPKZUMULBEHZUQUMAEHURABEEDGLMULURNZUOUMUPUSUOCBOZBCDIZ
        PZUMUPKZUSUNVBEDQUSUNVBJRFECBDSTUCUTVCVAUTUPUMCBADUAUDUMVAUPABCDEFGUEUB
        UFUGUHUIUJUK $.
        $( [10-May-2013] $)
    $}
  $}

  ${
    soiOLD.1 $e |- A e. _V $.
    soiOLD.2 $e |- R Or S $.
    soiOLD.3 $e |- R C_ ( S X. S ) $.
    $( A strict order relation is irreflexive. $)
    soirriOLD $p |- -. A R A $=
      ( wcel wa wbr wn wor sonr mpan adantl brel con3i pm2.61i ) ACGZRHZAABIZJZ
      RUARCBKRUAECABLMNTSAACCBFOPQ $.
      $( [10-Feb-1996] $)

    ${
      sotriOLD.4 $e |- B e. _V $.
      sotriOLD.5 $e |- C e. _V $.
      $( A strict order relation is a transitive relation. $)
      sotriOLD $p |- ( ( A R B /\ B R C ) -> A R C ) $=
        ( wcel w3a wbr wa brel wi id 3exp a1dd imp43 syl2an wor sotr mpan mpcom
        ) AEKZBEKZCEKZLZABDMZBCDMZNZACDMZUJUFUGNUGUHNUIUKABEEDHOBCEEDHOUFUGUGUH
        UIUFUGUHUIPUGUFUGUHUIUIQRSTUAEDUBUIULUMPGEABCDUCUDUE $.
        $( [10-Feb-1996] $)
    $}

    ${
      son2lpiOLD.4 $e |- B e. _V $.
      $( A strict order relation has no 2-cycle loops. $)
      son2lpiOLD $p |- -. ( A R B /\ B R A ) $=
        ( wbr wa soirri sotri mto ) ABCIBACIJAACIACDFGKABACDFGLM $.
        $( [10-Feb-1996] $)
    $}
  $}

  $( Express "less than or equals" for general strict orders.  (Contributed by
     Stefan O'Rear, 17-Jan-2015.) $)
  poleloe $p |- ( B e. V -> ( A ( R u. _I ) B <-> ( A R B \/ A = B ) ) ) $=
    ( cid cun wbr wo wcel wceq brun ideqg orbi2d syl5bb ) ABCEFGABCGZABEGZHBDIZ
    OABJZHABCEKQPROABDLMN $.
    $( [17-Jan-2015] $)

  $( Transitive law for general strict orders.  (Contributed by Stefan O'Rear,
     17-Jan-2015.) $)
  poltletr $p |- ( ( R Po X /\ ( A e. X /\ B e. X /\ C e. X ) ) ->
      ( ( A R B /\ B ( R u. _I ) C ) -> A R C ) ) $=
    ( wpo wcel w3a wa wbr cid cun wceq wo poleloe 3ad2ant3 adantl anbi2d com12
    wb wi potr breq2 biimpac a1d jaodan sylbid ) EDFZAEGZBEGZCEGZHZIZABDJZBCDKL
    JZIUNBCDJZBCMZNZIZACDJZUMUOURUNULUOURTZUHUKUIVAUJBCDEOPQRUSUMUTUNUPUMUTUAUQ
    UMUNUPIUTEABCDUBSUNUQIUTUMUQUNUTBCADUCUDUEUFSUG $.
    $( [17-Jan-2015] $)

  $( Property of a minimum in a strict order.  (Contributed by Stefan O'Rear,
     17-Jan-2015.) $)
  somin1 $p |- ( ( R Or X /\ ( A e. X /\ B e. X ) ) ->
      if ( A R B , A , B ) ( R u. _I ) A ) $=
    ( wor wcel wa wbr cif cid cun wceq wo iftrue olcd adantl wn sotric mpbird
    wb orcom eqcom orbi2i bitri notbii syl6bb con2bid biimpar iffalse breq1 syl
    eqeq1 orbi12d pm2.61dan poleloe ad2antrl ) DCEZADFZBDFZGGZABCHZABIZACJKHZVB
    ACHZVBALZMZUTVAVFVAVFUTVAVEVDVAABNOPUTVAQZGVFBACHZBALZMZUTVJVGUTVAVJUTVAABL
    ZVHMZQVJQDABCRVLVJVLVHVKMVJVKVHUAVKVIVHABUBUCUDUEUFUGUHVGVFVJTZUTVGVBBLZVMV
    AABUIVNVDVHVEVIVBBACUJVBBAULUMUKPSUNURVCVFTUQUSVBACDUOUPS $.
    $( [17-Jan-2015] $)

  $( Commutativity of minimum in a total order.  (Contributed by Stefan O'Rear,
     17-Jan-2015.) $)
  somincom $p |- ( ( R Or X /\ ( A e. X /\ B e. X ) ) ->
      if ( A R B , A , B ) = if ( B R A , B , A ) ) $=
    ( wor wcel wa wbr cif wceq iftrue adantl wn wi so2nr nan mpbi iffalse eqtrd
    eqcomd syl wo sotric con2bid ifeq2 ifid syl6req jaoi syl6bir imp pm2.61dan
    ) DCEADFBDFGGZABCHZUMABIZBACHZBAIZJULUMGZUNAUPUMUNAJULUMABKLUQUPAUQUOMZUPAJ
    ULUMUOGMNUQURNDABCOULUMUOPQUOBARUATSULUMMZGUNBUPUSUNBJULUMABRLULUSBUPJZULUS
    ABJZUOUBZUTULUMVBDABCUCUDVAUTUOVAUPUOBBIBUOABBUEUOBUFUGUOUPBUOBAKTUHUIUJSUK
    $.
    $( [17-Jan-2015] $)

  $( Property of a minimum in a strict order.  (Contributed by Stefan O'Rear,
     17-Jan-2015.) $)
  somin2 $p |- ( ( R Or X /\ ( A e. X /\ B e. X ) ) ->
      if ( A R B , A , B ) ( R u. _I ) B ) $=
    ( wor wcel wa wbr cif cid cun somin1 ancom2s somincom breq1d mpbird ) DCEZA
    DFZBDFZGGZABCHABIZBCJKZHBACHBAIZBUBHZQSRUDBACDLMTUAUCBUBABCDNOP $.
    $( [17-Jan-2015] $)

  $( Being less than a minimum, for a general total order.  (Contributed by
     Stefan O'Rear, 17-Jan-2015.) $)
  soltmin $p |- ( ( R Or X /\ ( A e. X /\ B e. X /\ C e. X ) ) ->
      ( A R if ( B R C , B , C ) <-> ( A R B /\ A R C ) ) ) $=
    ( wor wcel w3a wa wbr cif wpo cid cun 3jca syl12anc poltletr syl22anc breq2
    imp sopo ad2antrr simplr1 simplr2 simplr3 ifcl syl2anc simpll somin1 somin2
    simpr jca ex ifboth impbid1 ) EDFZAEGZBEGZCEGZHZIZABCDJZBCKZDJZABDJZACDJZIZ
    VAVDVGVAVDIZVEVFVHEDLZUQVCEGZURHZVDVCBDMNZJZVEUPVIUTVDEDUAUBZVHUQVJURUQURUS
    UPVDUCZVHURUSVJUQURUSUPVDUDZUQURUSUPVDUEZVBBCEUFUGZVPOVAVDUKZVHUPURUSVMUPUT
    VDUHZVPVQBCDEUIPVIVKIVDVMIVEAVCBDEQTRVHVIUQVJUSHZVDVCCVLJZVFVNVHUQVJUSVOVRV
    QOVSVHUPURUSWBVTVPVQBCDEUJPVIWAIVDWBIVFAVCCDEQTRULUMVBVEVFVDBCBVCADSCVCADSU
    NUO $.
    $( [17-Jan-2015] $)

  ${
    $d x y z w $.  $d z w ph $.
    $( The converse of a class abstraction of ordered pairs.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvopab $p |- `' { <. x , y >. | ph } = { <. y , x >. | ph } $=
      ( vz vw copab ccnv relcnv relopab cv cop wcel opelopabsb sbcom2 bitri vex
      wsbc opelcnv 3bitr4i eqrelriiv ) DEABCFZGZACBFZUAHACBIEJZDJZKUALZACUEQBUD
      QZUEUDKZUBLUHUCLUFABUDQCUEQUGABCEDMABECDNOUEUDUADPEPRACBDEMST $.
      $( [27-Aug-2011] $) $( [11-Dec-2003] $)
  $}

  ${
    $d x y $.
    $( The converse of the empty set. $)
    cnv0 $p |- `' (/) = (/) $=
      ( vx vy c0 ccnv relcnv rel0 cv cop wcel vex opelcnv noel 2false eqrelriiv
      bitr4i ) ABCDZCCEFAGZBGZHZPIRQHZCIZSCIZQRCAJBJKUBUASLTLMON $.
      $( [6-Apr-1998] $)

    $( The converse of the identity relation.  Theorem 3.7(ii) of [Monk1]
       p. 36.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvi $p |- `' _I = _I $=
      ( vy vx cv cid wbr copab wceq ccnv ideq equcom bitri opabbii df-cnv df-id
      vex 3eqtr4i ) ACZBCZDEZBAFRQGZBAFDHDSTBASQRGTQRBOIABJKLBADMBANP $.
      $( [27-Aug-2011] $) $( [26-Apr-1998] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a union is the union of converses.  Theorem 16 of
       [Suppes] p. 62.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    cnvun $p |- `' ( A u. B ) = ( `' A u. `' B ) $=
      ( vy vx cv wbr copab cun ccnv unopab brun opabbii eqtr4i uneq12i 3eqtr4ri
      wo df-cnv ) CEZDEZAFZDCGZRSBFZDCGZHZRSABHZFZDCGZAIZBIZHUEIUDTUBPZDCGUGTUB
      DCJUFUJDCRSABKLMUHUAUIUCDCAQDCBQNDCUEQO $.
      $( [27-Aug-2011] $) $( [25-Mar-1998] $)

    $( Distributive law for converse over set difference. $)
    cnvdif $p |- `' ( A \ B ) = ( `' A \ `' B ) $=
      ( vx vy cdif ccnv relcnv wss wrel difss relss mp2 cv cop wcel wn wa eldif
      vex opelcnv notbii anbi12i bitri 3bitr4i eqrelriiv ) CDABEZFZAFZBFZEZUFGU
      JUHHUHIUJIUHUIJAGUJUHKLDMZCMZNZUFOUMAOZUMBOZPZQZULUKNZUGOURUJOZUMABRULUKU
      FCSZDSZTUSURUHOZURUIOZPZQUQURUHUIRVBUNVDUPULUKAUTVATVCUOULUKBUTVATUAUBUCU
      DUE $.
      $( [26-Jun-2014] $)

    $( Distributive law for converse over intersection.  Theorem 15 of [Suppes]
       p. 62. $)
    cnvin $p |- `' ( A i^i B ) = ( `' A i^i `' B ) $=
      ( cdif ccnv cin cnvdif difeq2i eqtri dfin4 cnveqi 3eqtr4i ) AABCZCZDZADZO
      BDZCZCZABEZDOPENOLDZCRALFTQOABFGHSMABIJOPIK $.
      $( [26-Jun-2014] $) $( [25-Mar-1998] $)
  $}

  $( Distributive law for range over union.  Theorem 8 of [Suppes] p. 60. $)
  rnun $p |- ran ( A u. B ) = ( ran A u. ran B ) $=
    ( cun ccnv cdm crn cnvun dmeqi dmun eqtri df-rn uneq12i 3eqtr4i ) ABCZDZEZA
    DZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [24-Mar-1998] $)

  $( The range of an intersection belongs the intersection of ranges.  Theorem
     9 of [Suppes] p. 60. $)
  rnin $p |- ran ( A i^i B ) C_ ( ran A i^i ran B ) $=
    ( cin ccnv cdm crn cnvin dmeqi dmin eqsstri df-rn ineq12i 3sstr4i ) ABCZDZE
    ZADZEZBDZEZCZNFAFZBFZCPQSCZEUAOUDABGHQSIJNKUBRUCTAKBKLM $.
    $( [15-Sep-2004] $)

  ${
    $d x y z $.  $d y z A $.  $d y z B $.
    $( The range of an indexed union.  (Contributed by Mario Carneiro,
       29-May-2015.) $)
    rniun $p |- ran U_ x e. A B = U_ x e. A ran B $=
      ( vz vy ciun crn cv cop wcel wex wrex rexcom4 elrn2 rexbii eliun 3bitr4ri
      vex exbii 3bitr4i eqriv ) DABCFZGZABCGZFZEHDHZIZUBJZEKZUFUDJZABLZUFUCJUFU
      EJUGCJZEKZABLULABLZEKUKUIULAEBMUJUMABEUFCDRZNOUHUNEAUGBCPSQEUFUBUONAUFBUD
      PTUA $.
      $( [29-May-2015] $)

    $d x A $.
    $( The range of a union.  Part of Exercise 8 of [Enderton] p. 41. $)
    rnuni $p |- ran U. A = U_ x e. A ran x $=
      ( cuni crn cv ciun uniiun rneqi rniun eqtri ) BCZDABAEZFZDABLDFKMABGHABLI
      J $.
      $( [29-May-2015] $) $( [17-Mar-2004] $)
  $}

  $( Distributive law for image over union.  Theorem 35 of [Suppes] p. 65. $)
  imaundi $p |- ( A " ( B u. C ) ) = ( ( A " B ) u. ( A " C ) ) $=
    ( cun cres crn cima resundi rneqi rnun eqtri df-ima uneq12i 3eqtr4i ) ABCDZ
    EZFZABEZFZACEZFZDZAOGABGZACGZDQRTDZFUBPUEABCHIRTJKAOLUCSUDUAABLACLMN $.
    $( [30-Sep-2002] $)

  $( The image of a union.  (Contributed by Jeff Hoffman, 17-Feb-2008.) $)
  imaundir $p |- ( ( A u. B ) " C ) = ( ( A " C ) u. ( B " C ) ) $=
    ( cun cima cres crn df-ima resundir rneqi rnun 3eqtri uneq12i eqtr4i ) ABDZ
    CEZACFZGZBCFZGZDZACEZBCEZDPOCFZGQSDZGUAOCHUDUEABCIJQSKLUBRUCTACHBCHMN $.
    $( [17-Feb-2008] $)

  ${
    $d x y A $.  $d x y B $.  $d x y R $.
    $( An upper bound for intersection with a domain.  Theorem 40 of [Suppes]
       p. 66, who calls it "somewhat surprising." $)
    dminss $p |- ( dom R i^i A ) C_ ( `' R " ( R " A ) ) $=
      ( vx vy cdm cin ccnv cima cv wbr wcel wa 19.8a ancoms elima2 sylibr simpl
      wex vex brcnv jca eximi eldm anbi1i elin 19.41v 3bitr4i 3imtr4i ssriv ) C
      BEZAFZBGZBAHZHZCIZDIZBJZUOAKZLZDRZUPUMKZUPUOULJZLZDRUOUKKZUOUNKUSVCDUSVAV
      BUSURUQLZCRZVAURUQVFVECMNCUPBADSZOPUSUQVBUQURQUPUOBVGCSZTPUAUBUOUJKZURLUQ
      DRZURLVDUTVIVJURDUOBVHUCUDUOUJAUEUQURDUFUGDUOULUMVHOUHUI $.
      $( [11-Aug-2004] $)

    $( An upper bound for intersection with an image.  Theorem 41 of [Suppes]
       p. 66. $)
    imainss $p |- ( ( R " A ) i^i B ) C_ ( R " ( A i^i ( `' R " B ) ) ) $=
      ( vy vx cima cin ccnv cv wcel wbr wa wex brcnv 19.8a sylan2br elin elima2
      vex anbi1i ancoms anim2i simprl anassrs anbi2i bitri sylibr eximi 3bitr4i
      jca 19.41v 3imtr4i ssriv ) DCAFZBGZCACHZBFZGZFZEIZAJZUTDIZCKZLZVBBJZLZEMZ
      UTURJZVCLZEMVBUOJZVBUSJVFVIEVFVAVEVBUTUPKZLZDMZLZVCLZVIVAVCVEVOVAVCVELZLV
      NVCVPVMVAVEVCVMVCVEVKVMVBUTCDSZESZNVLDOPUAUBVAVCVEUCUJUDVHVNVCVHVAUTUQJZL
      VNUTAUQQVSVMVADUTUPBVRRUEUFTUGUHVBUNJZVELVDEMZVELVJVGVTWAVEEVBCAVQRTVBUNB
      QVDVEEUKUIEVBCURVQRULUM $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse of a cross product.  Exercise 11 of [Suppes] p. 67.  (The
       proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
    cnvxp $p |- `' ( A X. B ) = ( B X. A ) $=
      ( vy vx cv wcel copab ccnv cxp cnvopab ancom opabbii eqtri cnveqi 3eqtr4i
      wa df-xp ) CEAFZDEBFZPZCDGZHZSRPZDCGZABIZHBAIUBTDCGUDTCDJTUCDCRSKLMUEUACD
      ABQNDCBAQO $.
      $( [27-Aug-2011] $) $( [14-Aug-1999] $)
  $}

  $( The cross product with the empty set is empty.  Part of Theorem 3.13(ii)
     of [Monk1] p. 37. $)
  xp0 $p |- ( A X. (/) ) = (/) $=
    ( c0 cxp ccnv xp0r cnveqi cnvxp cnv0 3eqtr3i ) BACZDBDABCBJBAEFBAGHI $.
    $( [12-Apr-2004] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( The cross product of nonempty classes is nonempty.  (Variation of a
       theorem contributed by Raph Levien, 30-Jun-2006.) $)
    xpnz $p |- ( ( A =/= (/) /\ B =/= (/) ) <-> ( A X. B ) =/= (/) ) $=
      ( vx vy vz c0 wne wa cxp cv wcel wex anbi12i eeanv bitr4i cop wceq syl6eq
      n0 necon3i opex eleq1 opelxp syl6bb cla4ev sylibr exlimivv sylbi xp0r xp0
      xpeq1 xpeq2 jca impbii ) AFGZBFGZHZABIZFGZUQCJZAKZDJZBKZHZDLCLZUSUQVACLZV
      CDLZHVEUOVFUPVGCASDBSMVAVCCDNOVDUSCDVDEJZURKZELUSVIVDEUTVBPZUTVBUAVHVJQVI
      VJURKVDVHVJURUBUTVBABUCUDUEEURSUFUGUHUSUOUPAFURFAFQURFBIFAFBUKBUIRTBFURFB
      FQURAFIFBFAULAUJRTUMUN $.
      $( [19-Apr-2007] $) $( [30-Jun-2006] $)
  $}

  $( At least one member of an empty cross product is empty. $)
  xpeq0 $p |- ( ( A X. B ) = (/) <-> ( A = (/) \/ B = (/) ) ) $=
    ( cxp c0 wceq wne wa wn wo xpnz necon2bbii ianor nne orbi12i 3bitri ) ABCZD
    EADFZBDFZGZHQHZRHZIADEZBDEZISPDABJKQRLTUBUAUCADMBDMNO $.
    $( [27-Aug-2006] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj1 $p |- ( ( A i^i B ) = (/) -> ( ( A X. C ) i^i ( B X. D ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq1 xp0r syl6eq syl5eq ) ABEZFGZACHBDHENCDEZHZFACB
    DIOQFPHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with disjoint sets are disjoint. $)
  xpdisj2 $p |- ( ( A i^i B ) = (/) -> ( ( C X. A ) i^i ( D X. B ) ) = (/) ) $=
    ( cin c0 wceq cxp inxp xpeq2 xp0 syl6eq syl5eq ) ABEZFGZCAHDBHECDEZNHZFCADB
    IOQPFHFNFPJPKLM $.
    $( [13-Sep-2004] $)

  $( Cross products with two different singletons are disjoint. $)
  xpsndisj $p |- ( B =/= D -> ( ( A X. { B } ) i^i ( C X. { D } ) ) = (/) ) $=
    ( wne csn cin c0 wceq cxp disjsn2 xpdisj2 syl ) BDEBFZDFZGHIANJCOJGHIBDKNOA
    CLM $.
    $( [3-Jun-2007] $) $( [28-Jul-2004] $)

  ${
    $d x A $.  $d y B $.
    $( Disjoint unions with disjoint index sets are disjoint.  (Contributed by
       Stefan O'Rear, 21-Nov-2014.) $)
    djudisj $p |- ( ( A i^i B ) = (/) -> ( U_ x e. A ( { x } X. C ) i^i
            U_ y e. B ( { y } X. D ) ) = (/) ) $=
      ( cin c0 wceq cv csn cxp ciun cvv wss djussxp incom syl5eq ssdisj sylancr
      xpdisj1 ) CDGHIZACAJKELMZCNLZOUDBDBJKFLMZGZHIUCUEGHIACEPUBUFUEUDGZHUDUEQU
      BUEDNLZOUHUDGZHIUGHIBDFPUBUIUDUHGHUHUDQCDNNUARUEUHUDSTRUCUDUEST $.
      $( [21-Nov-2014] $)
  $}

  $( A double restriction to disjoint classes is the empty set.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  resdisj $p |- ( ( A i^i B ) = (/) -> ( ( C |` A ) |` B ) = (/) ) $=
    ( cin c0 wceq cres resres reseq2 res0 syl6eq syl5eq ) ABDZEFZCAGBGCMGZECABH
    NOCEGEMECICJKL $.
    $( [27-Aug-2011] $) $( [7-Oct-2004] $)

  $( The range of a cross product.  Part of Theorem 3.13(x) of [Monk1]
     p. 37. $)
  rnxp $p |- ( A =/= (/) -> ran ( A X. B ) = B ) $=
    ( c0 wne cxp crn cdm ccnv df-rn cnvxp dmeqi eqtri dmxp syl5eq ) ACDABEZFZBA
    EZGZBPOHZGROISQABJKLBAMN $.
    $( [9-Apr-2007] $) $( [12-Apr-2004] $)

  $( The domain of a cross product is a subclass of the first factor. $)
  dmxpss $p |- dom ( A X. B ) C_ A $=
    ( cxp cdm wss c0 wceq 0ss xpeq2 xp0 syl6eq dmeqd dm0 sseq1d mpbiri wne dmxp
    eqimss syl pm2.61ine ) ABCZDZAEZBFBFGZUCFAEAHUDUBFAUDUBFDFUDUAFUDUAAFCFBFAI
    AJKLMKNOBFPUBAGUCABQUBARST $.
    $( [19-Mar-2007] $)

  $( The range of a cross product is a subclass of the second factor.  (The
     proof was shortened by Andrew Salmon, 27-Aug-2011.) $)
  rnxpss $p |- ran ( A X. B ) C_ B $=
    ( cxp crn ccnv cdm df-rn cnvxp dmeqi dmxpss eqsstri ) ABCZDLEZFZBLGNBACZFBM
    OABHIBAJKK $.
    $( [27-Aug-2011] $) $( [16-Jan-2006] $)

  $( The range of a square cross product.  (Contributed by FL, 17-May-2010.) $)
  rnxpid $p |- ran ( A X. A ) = A $=
    ( cxp crn wceq c0 rn0 xpeq2 xp0 syl6eq rneqd id 3eqtr4a rnxp pm2.61ine ) AA
    BZCZADAEAEDZECEPAFQOEQOAEBEAEAGAHIJQKLAAMN $.
    $( [17-May-2010] $)

  $( A cross-product subclass relationship is equivalent to the relationship
     for it components. $)
  ssxpb $p |- ( ( A X. B ) =/= (/) -> ( ( A X. B ) C_ ( C X. D ) <->
              ( A C_ C /\ B C_ D ) ) ) $=
    ( cxp c0 wne wss wa cdm wceq xpnz dmxp adantl sylbir adantr eqsstr3d syl6ss
    dmss crn dmxpss rnxp rnss rnxpss jca ex xpss12 impbid1 ) ABEZFGZUICDEZHZACH
    ZBDHZIZUJULUOUJULIZUMUNUPAUKJZCUPAUIJZUQUJURAKZULUJAFGZBFGZIZUSABLZVAUSUTAB
    MNOPULURUQHUJUIUKSNQCDUARUPBUKTZDUPBUITZVDUJVEBKZULUJVBVFVCUTVFVAABUBPOPULV
    EVDHUJUIUKUCNQCDUDRUEUFACBDUGUH $.
    $( [17-Dec-2008] $)

  $( The cross product of non-empty classes is one-to-one. $)
  xp11 $p |- ( ( A =/= (/) /\ B =/= (/) )
      -> ( ( A X. B ) = ( C X. D ) <-> ( A = C /\ B = D ) ) ) $=
    ( c0 wne wa cxp wceq wi xpnz anidm neeq1 anbi2d syl5bbr wss ssxpb syl5ibcom
    eqimss eqss eqimss2 anim12d anbi12i bitr4i syl6ib sylbid com12 sylbi xpeq12
    an4 impbid1 ) AEFBEFGZABHZCDHZIZACIZBDIZGZULUMEFZUOURJABKUOUSURUOUSUSUNEFZG
    ZURUSUSUSGUOVAUSLUOUSUTUSUMUNEMNOUOVAACPZBDPZGZCAPZDBPZGZGZURUOUSVDUTVGUOUM
    UNPUSVDUMUNSABCDQRUOUNUMPUTVGUNUMUACDABQRUBVHVBVEGZVCVFGZGURVBVCVEVFUJUPVIU
    QVJACTBDTUCUDUEUFUGUHACBDUIUK $.
    $( [31-May-2008] $)

  $( Cancellation law for cross-product. $)
  xpcan $p |- ( C =/= (/) -> ( ( C X. A ) = ( C X. B ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 biantrur syl6bbr wn wi nne xpeq2 syl6eq eqeq1d
    eqid xp0 eqcom syl6bb adantl df-ne wo xpeq0 orel1 syl5bi sylbi adantr simpr
    sylbid jctild eqtr3 syl6 sylan2b impbid1 pm2.61dan ) CDEZADEZCAFZCBFZGZABGZ
    HUSUTIVCCCGZVDIVDCACBJVEVDCSKLUSUTMZIVCVDVFUSADGZVCVDNADOUSVGIZVCVGBDGZIVDV
    HVCVIVGVHVCVBDGZVIVGVCVJHUSVGVCDVBGVJVGVADVBVGVACDFDADCPCTQRDVBUAUBUCUSVJVI
    NZVGUSCDGZMZVKCDUDVJVLVIUEVMVICBUFVLVIUGUHUIUJULUSVGUKUMABDUNUOUPABCPUQUR
    $.
    $( [30-Aug-2011] $)

  $( Cancellation law for cross-product. $)
  xpcan2 $p |- ( C =/= (/) -> ( ( A X. C ) = ( B X. C ) <-> A = B ) ) $=
    ( c0 wne cxp wceq wb wa xp11 eqid biantru syl6bbr wn nne xp0r syl6eq eqeq1d
    xpeq1 eqcom syl6bb adantr wi df-ne wo xpeq0 orel2 syl5bi sylbi adantl simpl
    sylbid jctild eqtr3 syl6 impbid1 sylanb pm2.61ian ) ADEZCDEZACFZBCFZGZABGZH
    ZUSUTIVCVDCCGZIVDACBCJVFVDCKLMUSNADGZUTVEADOVGUTIZVCVDVHVCVGBDGZIVDVHVCVIVG
    VHVCVBDGZVIVGVCVJHUTVGVCDVBGVJVGVADVBVGVADCFDADCSCPQRDVBTUAUBUTVJVIUCZVGUTC
    DGZNZVKCDUDVJVIVLUEVMVIBCUFVLVIUGUHUIUJULVGUTUKUMABDUNUOABCSUPUQUR $.
    $( [30-Aug-2011] $)

  $( If a cross product is a set, one of its components must be a set. $)
  xpexr $p |- ( ( A X. B ) e. C -> ( A e. _V \/ B e. _V ) ) $=
    ( cxp wcel cvv wn wi wceq 0ex eleq1 mpbiri pm2.24d a1d wne crn rnexg eleq1d
    c0 rnxp syl5ib a1dd pm2.61ine orrd ) ABDZCEZAFEZBFEZUFUGGZUHHZHASASIZUJUFUK
    UGUHUKUGSFEJASFKLMNASOZUFUHUIUFUEPZFEULUHUECQULUMBFABTRUAUBUCUD $.
    $( [27-Aug-2006] $)

  $( If a nonempty cross product is a set, so are both of its components. $)
  xpexr2 $p |- ( ( ( A X. B ) e. C /\ ( A X. B ) =/= (/) ) ->
               ( A e. _V /\ B e. _V ) ) $=
    ( cxp c0 wne wcel wa cvv xpnz cdm wceq dmxp adantl adantr eqeltrrd crn rnxp
    dmexg rnexg anim12dan ancom2s sylan2br ) ABDZEFUDCGZAEFZBEFZHAIGZBIGZHZABJU
    EUGUFUJUEUGUHUFUIUEUGHUDKZAIUGUKALUEABMNUEUKIGUGUDCSOPUEUFHUDQZBIUFULBLUEAB
    RNUEULIGUFUDCTOPUAUBUC $.
    $( [5-May-2007] $) $( [27-Aug-2006] $)

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Subset of the range of a restriction. $)
    ssrnres $p |- ( B C_ ran ( C |` A ) <-> ran ( C i^i ( A X. B ) ) = B ) $=
      ( vy vx cxp cin crn wceq wss wa cres rnss ax-mp cvv wcel wex elrn2 3bitri
      cv eqss inss2 rnxpss sstri biantrur ssid ssv xpss12 mp2an df-res sseqtr4i
      sslin sstr mpan2 cop ssel syl6ib ancrd opelxp anbi2i opelres anbi1i anass
      vex elin bitr2i exbii 19.41v syl6ibr ssrdv impbii 3bitr2ri ) CABFZGZHZBIV
      OBJZBVOJZKVQBCALZHZJZVOBUAVPVQVOVMHZBVNVMJVOWAJCVMUBVNVMMNABUCUDUEVQVTVQV
      OVSJZVTVNVRJWBVNCAOFZGZVRVMWCJZVNWDJAAJBOJWEAUFBUGAABOUHUIVMWCCULNCAUJUKV
      NVRMNBVOVSUMUNVTDBVOVTDTZBPZETZWFUOZVRPZEQZWGKZWFVOPZVTWGWKVTWGWFVSPWKBVS
      WFUPEWFVRDVDZRUQURWMWIVNPZEQWJWGKZEQWLEWFVNWNRWOWPEWOWICPZWIVMPZKWQWHAPZW
      GKZKZWPWICVMVEWRWTWQWHWFABUSUTWPWQWSKZWGKXAWJXBWGWHWFCAWNVAVBWQWSWGVCVFSV
      GWJWGEVHSVIVJVKVL $.
      $( [16-Jan-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.
    $( Range of the intersection with a cross product.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    rninxp $p |- ( ran ( C i^i ( A X. B ) ) = B <->
                 A. y e. B E. x e. A x C y ) $=
      ( cres crn wss wcel wral cxp cin wceq wbr wrex dfss3 ssrnres cima df-ima
      cv eleq2i vex elima bitr3i ralbii 3bitr3i ) DECFGZHBTZUGIZBDJECDKLGDMATUH
      ENACOZBDJBDUGPCDEQUIUJBDUIUHECRZIUJUKUGUHECSUAAUHECBUBUCUDUEUF $.
      $( [27-Aug-2011] $) $( [17-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y C $.
    $( Domain of the intersection with a cross product. $)
    dminxp $p |- ( dom ( C i^i ( A X. B ) ) = A <->
                 A. x e. A E. y e. B x C y ) $=
      ( cxp cin cdm wceq ccnv crn cv wbr wrex wral dfdm4 cnvin cnvxp eqtri vex
      ineq2i rneqi eqeq1i rninxp brcnv rexbii ralbii 3bitri ) ECDFZGZHZCIEJZDCF
      ZGZKZCIBLZALZULMZBDNZACOUQUPEMZBDNZACOUKUOCUKUJJZKUOUJPVBUNVBULUIJZGUNEUI
      QVCUMULCDRUASUBSUCBADCULUDUSVAACURUTBDUPUQEBTATUEUFUGUH $.
      $( [17-Jan-2006] $)
  $}

  $( Image of a relation restricted to a rectangular region.  (Contributed by
     Stefan O'Rear, 19-Feb-2015.) $)
  imainrect $p |- ( ( G i^i ( A X. B ) ) " Y ) =
      ( ( G " ( Y i^i A ) ) i^i B ) $=
    ( cxp cin cvv crn cima ccnv cdm cres df-rn ineq1i eqtr2i df-res ineq2i inv1
    incom eqtri dmres cnvxp inxp xpeq12i in32 xpindir inass eqtr4i cnveqi cnvin
    3eqtr4i 3eqtr2i dmeqi 3eqtrri df-ima rneqi ) CABEZFZDGEZFZHZCDAFZGEZFZHZBFZ
    URDIZCVBIZBFVFVDJZKZBFZVIBLZKZVAVEVJBVDMNVMBVJFVKVIBUABVJSOVMUTJZKVAVLVNVLV
    IBGEZFVIGBEZJZFZVNVIBPVQVOVIGBUBQVNVDVPFZJVRUTVSCUSFZUQFVTAGEZVPFZFZUTVSUQW
    BVTWBAGFZGBFZEUQAGGBUCWDAWEBARWEBGFBGBSBRTUDOQCUQUSUEVSVTWAFZVPFWCVDWFVPVDC
    USWAFZFWFVCWGCDAGUFQCUSWAUGUHNVTWAVPUGTUKUIVDVPUJOULUMUTMUHUNVGURDLZHVAURDU
    OWHUTURDPUPTVHVEBVHCVBLZHVECVBUOWIVDCVBPUPTNUK $.
    $( [19-Feb-2015] $)

  ${
    $d x y A $.  $d x B $.  $d x y R $.  $d x V $.
    $( The base set of a strict order is contained in the field of the
       relation, except possibly for one element (note that
       ` (/) Or { B } ` ).  (Contributed by Mario Carneiro, 27-Apr-2015.) $)
    sossfld $p |- ( ( R Or A /\ B e. A ) ->
      ( A \ { B } ) C_ ( dom R u. ran R ) ) $=
      ( vx wor wcel wa csn cdif cdm crn cun cv wne wbr wo an32s 3expia adantll
      wi eldifsn sotrieq necon2abid anassrs breldmg brelrng orim12d elun syl5bi
      wb syl6ibr sylbird expimpd ssrdv ) ACEZBAFZGZDABHIZCJZCKZLZDMZURFVBAFZVBB
      NZGUQVBVAFZVBABUAUQVCVDVEUQVCGZVDVBBCOZBVBCOZPZVEUOVCUPVIVDUJZUOVCUPVJUOV
      CUPGGVIVBBAVBBCUBUCUDQVFVIVBUSFZVBUTFZPVEVFVGVKVHVLUOVCUPVGVKTZVCUPVMUOVC
      UPVGVKVBBAACUERSQUPVCVHVLTUOUPVCVHVLBVBCAAUFRSUGVBUSUTUHUKULUMUIUN $.
      $( [27-Apr-2015] $)

    $( The base set of a nonempty strict order is the same as the field of the
       relation.  (Contributed by Mario Carneiro, 15-May-2015.) $)
    sofld $p |- ( ( R Or A /\ R C_ ( A X. A ) /\ R =/= (/) ) ->
      A = ( dom R u. ran R ) ) $=
      ( vx vy wor wss c0 cdm crn cun wa wn wrel ad2antlr cv wcel ssun1 syl6sseq
      unssd ex cxp wne w3a wceq relxp relss mpi cop wbr df-br csn cdif sseqtr4i
      undif1 simpll dmxpid releldm sylancom sseldd sossfld syl2anc sseldi snssd
      dmss syl5ss syl5bir con3d imp pm2.21d relssdv necon1ad 3impia rnss rnxpid
      ss0 syl 3ad2ant2 eqssd ) ABEZBAAUAZFZBGUBZUCABHZBIZJZVSWAWBAWEFZVSWAKZWFB
      GWGWFLZBGUDZWGWHKZBGFWIWJCDBGWABMZVSWHWAVTMWKAAUEBVTUFUGZNWJCOZDOZUHZBPZW
      OGPWGWHWPLWGWPWFWPWMWNBUIZWGWFWMWNBUJWGWQWFWGWQKZAAWMUKZULZWSJZWEAAWSJXAA
      WSQAWSUNUMWRWTWSWEWRVSWMAPWTWEFVSWAWQUOWRWCAWMWAWCAFVSWQWAWCVTHABVTVDAUPR
      ZNWGWQWKWMWCPWAWKVSWQWLNWMWNBUQURZUSAWMBUTVAWRWMWEWRWCWEWMWCWDQXCVBVCSVET
      VFVGVHVIVJBVOVPTVKVLWAVSWEAFWBWAWCWDAXBWAWDVTIABVTVMAVNRSVQVR $.
      $( [15-May-2015] $)

    $( If the relation in a strict order is a set, then the base field is also
       a set. $)
    soex $p |- ( ( R Or A /\ R e. V ) -> A e. _V ) $=
      ( vx wor wcel wa cvv c0 wceq simpr 0ex syl6eqel wne wex cun unexg syl2anc
      cv wss csn cdm crn cdif sossfld adantlr ssundif sylibr snex dmexg sylancr
      n0 rnexg ad2antlr ssexg ex exlimdv imp sylan2b pm2.61dane ) ABEZBCFZGZAHF
      ZAIVCAIJZGAIHVCVEKLMAINVCDSZAFZDOZVDDAULVCVHVDVCVGVDDVCVGVDVCVGGZAVFUAZBU
      BZBUCZPZPZTZVNHFZVDVIAVJUDVMTZVOVAVGVQVBAVFBUEUFAVJVMUGUHVBVPVAVGVBVJHFVM
      HFZVPVFUIVBVKHFVLHFVRBCUJBCUMVKVLHHQRVJVMHHQUKUNAVNHUORUPUQURUSUT $.
      $( [27-Apr-2015] $)
  $}

  ${
    $d x y R $.
    $( Alternate definition of relation.  Exercise 2 of [TakeutiZaring]
       p. 25. $)
    dfrel2 $p |- ( Rel R <-> `' `' R = R ) $=
      ( vx vy wrel ccnv wceq relcnv cv cop wcel vex opelcnv bitri eqrelriv mpan
      releq mpbii impbii ) ADZAEZEZAFZUADZSUBTGZBCUAABHZCHZIZUAJUFUEITJUGAJUEUF
      TBKZCKZLUFUEAUIUHLMNOUBUCSUDUAAPQR $.
      $( [15-Aug-2004] $) $( [29-Dec-1996] $)
  $}

  $( Equality theorem for converse.  (Contributed by FL, 19-Sep-2011.) $)
  cnveqb $p |- ( ( Rel A /\ Rel B ) -> ( A = B <-> `' A = `' B ) ) $=
    ( wrel wa wceq ccnv cnveq wi dfrel2 eqeq2 syl5ibr eqcoms sylbi eqeq1 imbi2d
    imp impbid2 ) ACZBCZDABEZAFZBFZEZABGRSUCTHZRUAFZAESUDHZAIUFAUESUDAUEEZUCUEB
    EZHZSUBFZBEUIBIUIBUJUCUHBUJEUEUJEUAUBGBUJUEJKLMUGTUHUCAUEBNOKLMPQ $.
    $( [19-Sep-2011] $)

  $( The double converse of a class strips out all elements that are not
     ordered pairs. $)
  cnvcnv $p |- `' `' A = ( A i^i ( _V X. _V ) ) $=
    ( cvv cxp ccnv cnvin cnveqi wrel wceq inss2 df-rel mpbir dfrel2 mpbi relcnv
    cin wss relxp sseqtr4i dfss eqtr4i 3eqtr3ri ) ABBCZOZDZDZADZUBDZOZDZUCUFDZU
    DUHAUBEFUCGZUEUCHUKUCUBPAUBIUCJKUCLMUIUJUGDZOZUJUFUGEUJULPUJUMHUJUBULUJGUJU
    BPUFNUJJMUBGULUBHBBQUBLMRUJULSMTUA $.
    $( [8-Dec-2003] $)

  $( The double converse of a class equals its restriction to the universe. $)
  cnvcnv2 $p |- `' `' A = ( A |` _V ) $=
    ( ccnv cvv cxp cin cres cnvcnv df-res eqtr4i ) ABBACCDEACFAGACHI $.
    $( [8-Oct-2007] $)

  $( The double converse of a class is a subclass.  Exercise 2 of
     [TakeutiZaring] p. 25. $)
  cnvcnvss $p |- `' `' A C_ A $=
    ( ccnv cvv cxp cin cnvcnv inss1 eqsstri ) ABBACCDZEAAFAIGH $.
    $( [23-Jul-2004] $)
  ${
    $d x y A $.
    $( The domain of a singleton is nonzero iff the singleton argument is an
       ordered pair.  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    dmsnn0 $p |- ( A e. ( _V X. _V ) <-> dom { A } =/= (/) ) $=
      ( vx vy cv cop wceq wex csn cdm wcel cvv cxp wne wbr vex eldm df-br exbii
      c0 opex elsnc eqcom 3bitri bitr2i elvv n0 3bitr4i ) ABDZCDZEZFZCGZBGUHAHZ
      IZJZBGAKKLJUNSMULUOBUOUHUIUMNZCGULCUHUMBOPUPUKCUPUJUMJUJAFUKUHUIUMQUJAUHU
      ITUAUJAUBUCRUDRBCAUEBUNUFUG $.
      $( [27-Aug-2011] $) $( [14-Dec-2008] $)
  $}

  $( The range of a singleton is nonzero iff the singleton argument is an
     ordered pair. $)
  rnsnn0 $p |- ( A e. ( _V X. _V ) <-> ran { A } =/= (/) ) $=
    ( cvv cxp wcel csn cdm c0 wne crn dmsnn0 dm0rn0 necon3bii bitri ) ABBCDAEZF
    ZGHNIZGHAJOGPGNKLM $.
    $( [14-Dec-2008] $)

  $( The domain of the singleton of the empty set is empty. $)
  dmsn0 $p |- dom { (/) } = (/) $=
    ( c0 csn cdm wceq cvv cxp wcel wn 0nelxp dmsnn0 necon2bbii mpbir ) ABCZADAE
    EFGZHEEINMAAJKL $.
    $( [17-Dec-2008] $) $( [30-Jan-2004] $)

  $( The domain of a singleton is empty if the singleton's argument contains
     the empty set. $)
  dmsn0el $p |- ( (/) e. A -> dom { A } = (/) ) $=
    ( c0 wcel csn cdm wne cvv cxp wn dmsnn0 0nelelxp sylbir necon4ai ) BACZADEZ
    BOBFAGGHCNIAJGGAKLM $.
    $( [15-Dec-2008] $)

  ${
    relsn2.1 $e |- A e. _V $.
    $( A singleton is a relation iff it has a nonempty domain. $)
    relsn2 $p |- ( Rel { A } <-> dom { A } =/= (/) ) $=
      ( csn wrel cvv cxp wcel cdm c0 wne relsn dmsnn0 bitri ) ACZDAEEFGNHIJABKA
      LM $.
      $( [25-Sep-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x V $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (Contributed by Mario Carneiro, 26-Apr-2015.) $)
    dmsnopg $p |- ( B e. V -> dom { <. A , B >. } = { A } ) $=
      ( vx vy wcel cop csn cdm cv wceq wex vex opth1 exlimiv opeq1 opeq2 eqeq1d
      cla4egv syl5 impbid2 eldm2 opex elsnc exbii bitri elsn 3bitr4g eqrdv ) BC
      FZDABGZHZIZAHZUJDJZEJZGZUKKZELZUOAKZUOUMFZUOUNFUJUSUTURUTEUOUPABDMZEMNOUT
      UOBGZUKKZUJUSUOABPURVDEBCUPBKUQVCUKUPBUOQRSTUAVAUQULFZELUSEUOULVBUBVEUREU
      QUKUOUPUCUDUEUFDAUGUHUI $.
      $( [26-Apr-2015] $)

    $( The domain of a singleton of an ordered pair is a subset of the
       singleton of the first member (with no sethood assumptions on ` B ` ).
       (Contributed by Mario Carneiro, 26-Apr-2015.) $)
    dmsnopss $p |- dom { <. A , B >. } C_ { A } $=
      ( cvv wcel cop csn cdm wss dmsnopg eqimss syl wn opprc2 sneqd dmeqd dmsn0
      wceq c0 syl6eq 0ss a1i eqsstrd pm2.61i ) BCDZABEZFZGZAFZHZUDUGUHQUIABCIUG
      UHJKUDLZUGRUHUJUGRFZGRUJUFUKUJUERABMNOPSRUHHUJUHTUAUBUC $.
      $( [30-Apr-2015] $)

    $( The domain of an unordered pair of ordered pairs.  (Contributed by Mario
       Carneiro, 26-Apr-2015.) $)
    dmpropg $p |- ( ( B e. V /\ D e. W ) ->
        dom { <. A , B >. , <. C , D >. } = { A , C } ) $=
      ( wcel wa cop csn cdm cun cpr wceq dmsnopg uneq12 syl2an df-pr dmeqi dmun
      eqtri 3eqtr4g ) BEGZDFGZHABIZJZKZCDIZJZKZLZAJZCJZLZUEUHMZKZACMUCUGULNUJUM
      NUKUNNUDABEOCDFOUGULUJUMPQUPUFUILZKUKUOUQUEUHRSUFUITUAACRUB $.
      $( [26-Apr-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    dmsnop.1 $e |- B e. _V $.
    $( The domain of a singleton of an ordered pair is the singleton of the
       first member.  (The proof was shortened by Andrew Salmon, 27-Aug-2011.)
       (Revised by Mario Carneiro, 26-Apr-2015.) $)
    dmsnop $p |- dom { <. A , B >. } = { A } $=
      ( cvv wcel cop csn cdm wceq dmsnopg ax-mp ) BDEABFGHAGICABDJK $.
      $( [27-Aug-2011] $) $( [30-Jan-2004] $)

    dmprop.1 $e |- D e. _V $.
    $( The domain of an unordered pair of ordered pairs. $)
    dmprop $p |- dom { <. A , B >. , <. C , D >. } = { A , C } $=
      ( cvv wcel cop cpr cdm wceq dmpropg mp2an ) BGHDGHABICDIJKACJLEFABCDGGMN
      $.
      $( [13-Sep-2011] $)

    dmtpop.1 $e |- F e. _V $.
    $( The domain of an unordered triple of ordered pairs. $)
    dmtpop $p |- dom { <. A , B >. , <. C , D >. , <. E , F >. }
                        = { A , C , E } $=
      ( cop ctp cdm cpr csn cun df-tp dmeqi dmun dmprop dmsnop uneq12i 3eqtri
      eqtr4i ) ABJZCDJZEFJZKZLZACMZENZOZACEKUHUDUEMZUFNZOZLULLZUMLZOUKUGUNUDUEU
      FPQULUMRUOUIUPUJABCDGHSEFITUAUBACEPUC $.
      $( [14-Sep-2011] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( Double converse of a singleton of an ordered pair.  (Unlike ~ cnvsn ,
       this does not need any sethood assumptions on ` A ` and ` B ` .)
       (Contributed by Mario Carneiro, 26-Apr-2015.) $)
    cnvcnvsn $p |- `' `' { <. A , B >. } = `' { <. B , A >. } $=
      ( vx vy cop csn ccnv relcnv cv wcel vex opelcnv wceq wa opth 3bitr4i opex
      ancom elsnc bitri eqrelriiv ) CDABEZFZGZGZBAEZFZGZUDHUGHCIZDIZEZUEJUJUIEZ
      UDJZUKUHJZUIUJUDCKZDKZLUKUCJZULUGJZUMUNUKUBMZULUFMZUQURUIAMZUJBMZNVBVANUS
      UTVAVBRUIUJABUOUPOUJUIBAUPUOOPUKUBUIUJQSULUFUJUIQSPUJUIUCUPUOLUIUJUGUOUPL
      PTUA $.
      $( [26-Apr-2015] $)

    $( The domain of the singleton of the singleton of a singleton. $)
    dmsnsnsn $p |- dom { { { A } } } = { A } $=
      ( vx cvv wcel csn cdm wceq cv cop vex opid sneq sneqd syl5eq dmeqd dmsnop
      eqeq12d vtoclg wn c0 0ex snid dmsn0el ax-mp snprc biimpi 3eqtr4a pm2.61i
      ) ACDZAEZEZEZFZUJGZBHZUOIZEZFZUOEZGUNBACUOAGZURUMUSUJUTUQULUTUPUKUTUPUSEU
      KUOBJZKUTUSUJUOALZMNMOVBQUOUOVAPRUISZTEZEZFZTUMUJTVDDVFTGTUAUBVDUCUDVCULV
      EVCUKVDVCUJTVCUJTGAUEUFZMMOVGUGUH $.
      $( [26-Apr-2015] $) $( [15-Sep-2004] $)
  $}

  $( The range of a singleton of an ordered pair is the singleton of the second
     member.  (Contributed by Mario Carneiro, 30-Apr-2015.) $)
  rnsnopg $p |- ( A e. V -> ran { <. A , B >. } = { B } ) $=
    ( wcel cop csn crn cdm ccnv df-rn dfdm4 cnvcnvsn dmeqi 3eqtri eqtr4i syl5eq
    dmsnopg ) ACDABEFZGZBAEFZHZBFSRIZHZUARJUATIZGUDIZHUCTKUDJUEUBBALMNOBACQP $.
    $( [30-Apr-2015] $) $( [24-Jul-2004] $)

  ${
    $d x y A $.  $d x y B $.
    cnvsn.1 $e |- A e. _V $.
    $( The range of a singleton of an ordered pair is the singleton of the
       second member.  (Revised by Mario Carneiro, 26-Apr-2015.) $)
    rnsnop $p |- ran { <. A , B >. } = { B } $=
      ( cvv wcel cop csn crn wceq rnsnopg ax-mp ) ADEABFGHBGICABDJK $.
      $( [26-Apr-2015] $) $( [24-Jul-2004] $)

    cnvsn.2 $e |- B e. _V $.
    $( Extract the first member of an ordered pair.  (See ~ op2nda to extract
       the second member, ~ op1stb for an alternate version, and ~ op1st for
       the preferred version.)  (Contributed by Raph Levien, 4-Dec-2003.) $)
    op1sta $p |- U. dom { <. A , B >. } = A $=
      ( cop csn cdm cuni dmsnop unieqi unisn eqtri ) ABEFGZHAFZHAMNABDIJACKL $.
      $( [4-Dec-2003] $)

    $( Converse of a singleton of an ordered pair. $)
    cnvsn $p |- `' { <. A , B >. } = { <. B , A >. } $=
      ( cop csn ccnv cnvcnvsn wrel wceq relsnop dfrel2 mpbi eqtr3i ) BAEFZGGZAB
      EFGOBAHOIPOJBADCKOLMN $.
      $( [26-Apr-2015] $) $( [11-May-1998] $)

    $( Swap the members of an ordered pair. $)
    opswap $p |- U. `' { <. A , B >. } = <. B , A >. $=
      ( cop csn ccnv cuni cnvsn unieqi opex unisn eqtri ) ABEFGZHBAEZFZHONPABCD
      IJOBAKLM $.
      $( [14-Dec-2008] $)

    $( Extract the second member of an ordered pair.  Theorem 5.12(ii) of
       [Monk1] p. 52.  (See ~ op1stb to extract the first member, ~ op2nda for
       an alternate version, and ~ op2nd for the preferred version.) $)
    op2ndb $p |- |^| |^| |^| `' { <. A , B >. } = B $=
      ( cop csn ccnv cint cnvsn inteqi opex intsn eqtri op1stb ) ABEFGZHZHZHBAE
      ZHZHBQSPRPRFZHROTABCDIJRBAKLMJJBADCNM $.
      $( [25-Nov-2003] $)

    $( Extract the second member of an ordered pair.  (See ~ op1sta to extract
       the first member, ~ op2ndb for an alternate version, and ~ op2nd for the
       preferred version.)  (The proof was shortened by Andrew Salmon,
       27-Aug-2011.) $)
    op2nda $p |- U. ran { <. A , B >. } = B $=
      ( cop csn crn cuni rnsnop unieqi unisn eqtri ) ABEFGZHBFZHBMNABCIJBDKL $.
      $( [27-Aug-2011] $) $( [17-Feb-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.
    $( Converse of a singleton of an ordered pair. $)
    cnvsng $p |- ( ( A e. V /\ B e. W ) ->
      `' { <. A , B >. } = { <. B , A >. } ) $=
      ( vx vy cv cop csn ccnv wceq opeq1 sneqd cnveqd opeq2 eqeq12d vex vtocl2g
      cnvsn ) EGZFGZHZIZJZUATHZIZKAUAHZIZJZUAAHZIZKABHZIZJZBAHZIZKEFABCDTAKZUDU
      IUFUKUQUCUHUQUBUGTAUALMNUQUEUJTAUAOMPUABKZUIUNUKUPURUHUMURUGULUABAOMNURUJ
      UOUABALMPTUAEQFQSR $.
      $( [23-Jan-2015] $)

    $( Membership in a cross product.  This version requires no quantifiers or
       dummy variables.  See also ~ elxp5 , ~ elxp6 , and ~ elxp7 . $)
    elxp4 $p |- ( A e. ( B X. C ) <-> ( A = <. U. dom { A } , U. ran { A } >.
                 /\ ( U. dom { A } e. B /\ U. ran { A } e. C ) ) ) $=
      ( vx vy wcel cv cop wceq wa wex csn cdm cuni crn sneq unieqd vex pm4.71ri
      syl6req elxp rneqd op2nda anbi1i anass bitri exbii snex rnex uniex eqeq2d
      opeq2 eleq1 anbi2d anbi12d ceqsexv dmeqd op1sta 3bitri dmex opeq1 anbi1d
      cxp ) ABCVCFADGZEGZHZIZVDBFZVECFZJZJZEKZDKVDALZMZNZIZAVDVMOZNZHZIZVHVRCFZ
      JZJZJZDKAVOVRHZIZVOBFZWAJZJZDEABCUAVLWDDVLWCVPVTJZWBJWDVLVEVRIZVKJZEKWCVK
      WLEVKWKVGJZVJJWLVGWMVJVGWKVGVRVFLZOZNVEVGVQWOVGVMWNAVFPUBQVDVEDRZERUCTSUD
      WKVGVJUEUFUGVKWCEVRVQVMAUHZUIUJZWKVGVTVJWBWKVFVSAVEVRVDULUKWKVIWAVHVEVRCU
      MUNUOUPUFVTWJWBVTVPVTVOVSLZMZNVDVTVNWTVTVMWSAVSPUQQVDVRWPWRURTSUDVPVTWBUE
      USUGWCWIDVOVNVMWQUTUJVPVTWFWBWHVPVSWEAVDVOVRVAUKVPVHWGWAVDVOBUMVBUOUPUS
      $.
      $( [17-Feb-2004] $)

    $( Membership in a cross product requiring no quantifiers or dummy
       variables.  Provides a slightly shorter version of ~ elxp4 when the
       double intersection does not create class existence problems (caused by
       ~ int0 ). $)
    elxp5 $p |- ( A e. ( B X. C ) <-> ( A = <. |^| |^| A , U. ran { A } >.
                 /\ ( |^| |^| A e. B /\ U. ran { A } e. C ) ) ) $=
      ( vx vy wcel cv cop wceq wex cint csn crn cuni vex syl6req pm4.71ri eleq1
      wa cvv elxp sneq rneqd unieqd op2nda anbi1i anass bitri exbii uniex opeq2
      snex rnex eqeq2d anbi2d anbi12d ceqsexv inteq inteqd op1stb 3bitri adantr
      cxp mpbii exlimiv elex ad2antrl opeq1 anbi1d ceqsexgv pm5.21nii ) ABCVCFA
      DGZEGZHZIZVLBFZVMCFZSZSZEJZDJVLAKZKZIZAVLALZMZNZHZIZVPWFCFZSZSZSZDJZAWBWF
      HZIZWBBFZWISZSZDEABCUAVTWLDVTWKWCWHSZWJSWLVTVMWFIZVSSZEJWKVSXAEVSWTVOSZVR
      SXAVOXBVRVOWTVOWFVNLZMZNVMVOWEXDVOWDXCAVNUBUCUDVLVMDOZEOUEPQUFWTVOVRUGUHU
      IVSWKEWFWEWDAULUMUJZWTVOWHVRWJWTVNWGAVMWFVLUKUNWTVQWIVPVMWFCRUOUPUQUHWHWS
      WJWHWCWHWBWGKZKVLWHWAXGAWGURUSVLWFXEXFUTPQUFWCWHWJUGVAUIWMWBTFZWRWLXHDWCX
      HWKWCVLTFXHXEVLWBTRVDVBVEWPXHWOWIWBBVFVGWKWRDWBTWCWHWOWJWQWCWGWNAVLWBWFVH
      UNWCVPWPWIVLWBBRVIUPVJVKVA $.
      $( [1-Aug-2004] $)
  $}

  $( Alternate definition of relation. $)
  dfrel3 $p |- ( Rel R <-> ( R |` _V ) = R ) $=
    ( wrel ccnv wceq cvv cres dfrel2 cnvcnv2 eqeq1i bitri ) ABACCZADAEFZADAGKLA
    AHIJ $.
    $( [14-May-2008] $)

  $( The domain of a universal restriction. $)
  dmresv $p |- dom ( A |` _V ) = dom A $=
    ( cvv cres cdm cin dmres incom inv1 3eqtri ) ABCDBADZEJBEJABFBJGJHI $.
    $( [14-May-2008] $)

  $( The range of a universal restriction. $)
  rnresv $p |- ran ( A |` _V ) = ran A $=
    ( ccnv crn cvv cres cnvcnv2 rneqi rncnvcnv eqtr3i ) ABBZCADEZCACJKAFGAHI $.
    $( [14-May-2008] $)

  $( Range defined in terms of image. $)
  dfrn4 $p |- ran A = ( A " _V ) $=
    ( cvv cima cres crn df-ima rnresv eqtr2i ) ABCABDEAEABFAGH $.
    $( [14-May-2008] $)

  $( The restriction of the double converse of a class.  (The proof was
     shortened by Andrew Salmon, 27-Aug-2011.) $)
  rescnvcnv $p |- ( `' `' A |` B ) = ( A |` B ) $=
    ( ccnv cres cvv cin cnvcnv2 reseq1i resres wss wceq ssv sseqin2 mpbi 3eqtri
    reseq2i ) ACCZBDAEDZBDAEBFZDABDQRBAGHAEBISBABEJSBKBLBEMNPO $.
    $( [27-Aug-2011] $) $( [8-Apr-2007] $)

  $( The double converse of the restriction of a class. $)
  cnvcnvres $p |- `' `' ( A |` B ) = ( `' `' A |` B ) $=
    ( cres ccnv wrel wceq relres dfrel2 mpbi rescnvcnv eqtr4i ) ABCZDDZLADDBCLE
    MLFABGLHIABJK $.
    $( [3-Jun-2007] $)

  $( The image of the double converse of a class. $)
  imacnvcnv $p |- ( `' `' A " B ) = ( A " B ) $=
    ( ccnv cres crn cima rescnvcnv rneqi df-ima 3eqtr4i ) ACCZBDZEABDZEKBFABFLM
    ABGHKBIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d s t A $.  $d s t B $.  $d s t F $.
    $( An image under the converse of a restriction.  (Contributed by Jeff
       Hankins, 12-Jul-2009.) $)
    cnvresima $p |- ( `' ( F |` A ) " B ) = ( ( `' F " B ) i^i A ) $=
      ( vt vs cres ccnv cima cin wcel cop wex vex elima3 opelres opelcnv anbi1i
      cv wa 3bitr4i anbi2i anass bitr4i exbii 19.41v bitri bitr2i 3bitri eqriv
      elin ) DCAFZGZBHZCGZBHZAIZDRZUMJERZBJZURUQKZULJZSZELZUSUTUNJZSZELZUQAJZSZ
      UQUPJZEUQULBDMZNVCVEVGSZELVHVBVKEVBUSVDVGSZSVKVAVLUSUQURKZUKJVMCJZVGSVAVL
      UQURCAEMZOURUQUKVOVJPVDVNVGURUQCVOVJPQTUAUSVDVGUBUCUDVEVGEUEUFVIUQUOJZVGS
      VHUQUOAUJVPVFVGEUQUNBVJNQUGUHUI $.
      $( [12-Jul-2009] $)
  $}

  $( A class restricted to its domain equals its double converse. $)
  resdm2 $p |- ( A |` dom A ) = `' `' A $=
    ( ccnv cdm cres rescnvcnv wrel relcnv resdm ax-mp dmcnvcnv reseq2i 3eqtr3ri
    wceq ) ABZBZOCZDZAPDOAACZDAPEOFQOMNGOHIPRAAJKL $.
    $( [8-Apr-2007] $)

  $( Restriction to the domain of a restriction. $)
  resdmres $p |- ( A |` dom ( A |` B ) ) = ( A |` B ) $=
    ( cres cdm ccnv cvv cxp in12 df-res resdm2 eqtr3i ineq2i incom 3eqtri dmres
    cin xpeq1i xpindir eqtri 3eqtr4i rescnvcnv ) AABCZDZCZAEEZBCZUBABFGZADZFGZP
    ZPZUEUGPZUDUFUKUGAUIPZPUGUEPULAUGUIHUMUEUGAUHCUMUEAUHIAJKLUGUEMNUDAUCFGZPUK
    AUCIUNUJAUNBUHPZFGUJUCUOFABOQBUHFRSLSUEBITABUAS $.
    $( [8-Apr-2007] $)

  $( The image of the domain of a restriction. $)
  imadmres $p |- ( A " dom ( A |` B ) ) = ( A " B ) $=
    ( cres cdm crn cima resdmres rneqi df-ima 3eqtr4i ) AABCZDZCZEKEALFABFMKABG
    HALIABIJ $.
    $( [8-Apr-2007] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z C $.
    $( A composition is a relation.  Exercise 24 of [TakeutiZaring] p. 25. $)
    relco $p |- Rel ( A o. B ) $=
      ( vx vz vy cv wbr wa wex ccom df-co relopabi ) CFDFZBGMEFAGHDICEABJCEDABK
      L $.
      $( [26-Jan-1997] $)

    $( Alternate definition of a class composition, using only one bound
       variable. $)
    dfco2 $p |- ( A o. B )
                = U_ x e. _V ( ( `' B " { x } ) X. ( A " { x } ) ) $=
      ( vy vz ccom cvv ccnv cv csn cima cxp wrel wcel cop wex vex elimasn bitri
      wa ciun relco reliun relxp a1i mprgbir wb opelco2g mp2an wrex rexv opelxp
      eliun opelcnv anbi12i exbii 3bitrri eqrelriiv ) DEBCFZAGCHZAIZJZKZBVBKZLZ
      UAZBCUBVFMVEMZAGAGVEUCVGVAGNVCVDUDUEUFDIZEIZOZUSNZVHVAOCNZVAVIOBNZTZAPZVJ
      VFNZVHGNVIGNVKVOUGDQZEQZAVHVIBCGGUHUIVPVJVENZAGUJVSAPVOAVJGVEUMVSAUKVSVNA
      VSVHVCNZVIVDNZTVNVHVIVCVDULVTVLWAVMVTVAVHOUTNVLUTVAVHAQZVQRVAVHCWBVQUNSBV
      AVIWBVRRUOSUPUQSUR $.
      $( [19-Dec-2008] $)

    $( Generalization of ~ dfco2 , where ` C ` can have any value between
       ` dom A i^i ran B ` and ` _V ` .  (The proof was shortened by Andrew
       Salmon, 27-Aug-2011.) $)
    dfco2a $p |- ( ( dom A i^i ran B ) C_ C -> ( A o. B )
         = U_ x e. C ( ( `' B " { x } ) X. ( A " { x } ) ) ) $=
      ( vy vz vw cvv cv cima ciun wcel wrex wex wa cop vex sylbi 3bitr4g eliun
      cdm crn cin wss ccom ccnv csn cxp dfco2 elimasn opeldm wbr eliniseg ax-mp
      wceq wb brelrn anim12i ancoms adantl exlimivv elxp elin 3imtr4i ssel syl5
      pm4.71rd exbidv rexv df-rex eqrdv syl5eq ) BUAZCUBZUCZDUDZBCUEAHCUFAIZUGZ
      JZBVRJZUHZKZADWAKZABCUIVPEWBWCVPEIZWALZAHMZWEADMZWDWBLWDWCLVPWEANVQDLZWEO
      ZANWFWGVPWEWIAVPWEWHWEVQVOLZVPWHWDFIZGIZPUOZWKVSLZWLVTLZOZOZGNFNVQVMLZVQV
      NLZOZWEWJWQWTFGWPWTWMWOWNWTWOWRWNWSWOVQWLPBLWRBVQWLAQZGQZUJVQWLBXAXBUKRWN
      WKVQCULZWSVQHLWNXCUPXACVQWKHFQZUMUNWKVQCXDXAUQRURUSUTVAFGWDVSVTVBVQVMVNVC
      VDVODVQVEVFVGVHWEAVIWEADVJSAWDHWATAWDDWATSVKVL $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    coundi $p |- ( A o. ( B u. C ) ) = ( ( A o. B ) u. ( A o. C ) ) $=
      ( vx vz vy cv wbr wa wex copab cun ccom wo unopab brun anbi1i andir bitri
      df-co exbii 19.43 bitr2i opabbii eqtri uneq12i 3eqtr4ri ) DGZEGZBHZUIFGAH
      ZIZEJZDFKZUHUICHZUKIZEJZDFKZLZUHUIBCLZHZUKIZEJZDFKZABMZACMZLAUTMUSUMUQNZD
      FKVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUJUONZUKIVHVAVIUKUHUIBCPQUJUOUKRSUAUL
      UPEUBUCUDUEVEUNVFURDFEABTDFEACTUFDFEAUTTUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Class composition distributes over union.  (The proof was shortened by
       Andrew Salmon, 27-Aug-2011.) $)
    coundir $p |- ( ( A u. B ) o. C ) = ( ( A o. C ) u. ( B o. C ) ) $=
      ( vx vy vz cv wbr wa wex copab cun ccom wo unopab brun anbi2i bitri df-co
      andi exbii 19.43 bitr2i opabbii eqtri uneq12i 3eqtr4ri ) DGEGZCHZUHFGZAHZ
      IZEJZDFKZUIUHUJBHZIZEJZDFKZLZUIUHUJABLZHZIZEJZDFKZACMZBCMZLUTCMUSUMUQNZDF
      KVDUMUQDFOVGVCDFVCULUPNZEJVGVBVHEVBUIUKUONZIVHVAVIUIUHUJABPQUIUKUOTRUAULU
      PEUBUCUDUEVEUNVFURDFEACSDFEBCSUFDFEUTCSUG $.
      $( [27-Aug-2011] $) $( [21-Dec-2008] $)

    $( Restricted first member of a class composition.  (The proof was
       shortened by Andrew Salmon, 27-Aug-2011.) $)
    cores $p |- ( ran B C_ C -> ( ( A |` C ) o. B ) = ( A o. B ) ) $=
      ( vz vy vx crn wss cv wbr cres wa wex copab ccom wcel wb vex brelrn df-co
      ssel iba brres syl6rbbr syl56 pm5.32d exbidv opabbidv 3eqtr4g ) BGZCHZDIZ
      EIZBJZUMFIZACKZJZLZEMZDFNUNUMUOAJZLZEMZDFNUPBOABOUKUSVBDFUKURVAEUKUNUQUTU
      NUMUJPUKUMCPZUQUTQULUMBDRERSUJCUMUAVCUTUTVCLUQVCUTUBUMUOACFRUCUDUEUFUGUHD
      FEUPBTDFEABTUI $.
      $( [27-Aug-2011] $) $( [12-Oct-2004] $)

    $( Associative law for the restriction of a composition. $)
    resco $p |- ( ( A o. B ) |` C ) = ( A o. ( B |` C ) ) $=
      ( vx vy vz ccom cres relres relco cv wbr wcel wex vex anbi1i 19.41v brres
      wa brco an32 bitr4i exbii 3bitr2i 3bitr4i eqbrriv ) DEABGZCHZABCHZGZUGCIA
      UIJDKZEKZUGLZUKCMZSZUKFKZUILZUPULALZSZFNZUKULUHLUKULUJLUOUKUPBLZURSZFNZUN
      SVBUNSZFNUTUMVCUNFUKULABDOZEOZTPVBUNFQVDUSFVDVAUNSZURSUSVAURUNUAUQVGURUKU
      PBCFORPUBUCUDUKULUGCVFRFUKULAUIVEVFTUEUF $.
      $( [12-Dec-2006] $)

    $( Image of the composition of two classes.  (Contributed by Jason
       Orendorff, 12-Dec-2006.) $)
    imaco $p |- ( ( A o. B ) " C ) = ( A " ( B " C ) ) $=
      ( vx vy vz ccom cima cv wbr wrex wcel wa wex df-rex vex elima brco rexbii
      exbii bitri rexcom4 r19.41v 3bitri anbi1i bitr4i 3bitr4ri eqriv ) DABGZCH
      ZABCHZHZEIZDIZAJZEUKKUMUKLZUOMZENZUNULLUNUJLZUOEUKOEUNAUKDPZQUSFIZUMBJZFC
      KZUOMZENZURUSVBUOMZENZFCKZVFFCKZENVEUSVAUNUIJZFCKVHFUNUICUTQVJVGFCEVAUNAB
      FPUTRSUAVFFECUBVIVDEVBUOFCUCTUDUQVDEUPVCUOFUMBCEPQUETUFUGUH $.
      $( [11-Dec-2006] $)

    $( The range of the composition of two classes. $)
    rnco $p |- ran ( A o. B ) = ran ( A |` ran B ) $=
      ( vy vx vz ccom crn cres cv wbr wex wcel wa vex exbii excom ancom 3bitr4i
      brco elrn 19.41v anbi2i brres bitr4i 3bitri eqriv ) CABFZGZABGZHZGZDIZCIZ
      UGJZDKZEIZUMUJJZEKZUMUHLUMUKLUOULUPBJZUPUMAJZMZEKZDKVADKZEKURUNVBDEULUMAB
      DNCNZSOVADEPVCUQEVCUTUPUILZMZUQUSDKZUTMUTVGMVCVFVGUTQUSUTDUAVEVGUTDUPBENT
      UBRUPUMAUIVDUCUDOUEDUMUGVDTEUMUJVDTRUF $.
      $( [12-Dec-2006] $)
  $}

  $( The range of the composition of two classes. $)
  rnco2 $p |- ran ( A o. B ) = ( A " ran B ) $=
    ( ccom crn cres cima rnco df-ima eqtr4i ) ABCDABDZEDAJFABGAJHI $.
    $( [27-Mar-2008] $)

  $( The domain of a composition.  Exercise 27 of [Enderton] p. 53. $)
  dmco $p |- dom ( A o. B ) = ( `' B " dom A ) $=
    ( ccom cdm ccnv crn cima dfdm4 cnvco rneqi rnco2 imaeq2i eqtr4i 3eqtri ) AB
    CZDOEZFBEZAEZCZFZQADZGZOHPSABIJTQRFZGUBQRKUAUCQAHLMN $.
    $( [4-Feb-2004] $)

  ${
    $d w x y z A $.  $d w y z B $.  $d w y z C $.
    $( Composition with an indexed union. $)
    coiun $p |- ( A o. U_ x e. C B ) = U_ x e. C ( A o. B ) $=
      ( vy vz vw ciun ccom relco wrel cv wcel wbr wa wex wrex cop eliun df-br
      reliun a1i mprgbir rexbii 3bitr4i anbi1i r19.41v bitr4i exbii rexcom4 vex
      opelco bitri eqrelriiv ) EFBADCHZIZADBCIZHZBUOJURKUQKZADADUQUAUSALDMBCJUB
      UCELZGLZUONZVAFLZBNZOZGPZUTVACNZVDOZGPZADQZUTVCRZUPMVKURMZVFVHADQZGPVJVEV
      MGVEVGADQZVDOVMVBVNVDUTVARZUOMVOCMZADQVBVNAVODCSUTVAUOTVGVPADUTVACTUDUEUF
      VGVDADUGUHUIVHAGDUJUHGUTVCBUOEUKZFUKZULVLVKUQMZADQVJAVKDUQSVSVIADGUTVCBCV
      QVRULUDUMUEUN $.
      $( [21-Dec-2008] $)
  $}

  $( A composition is not affected by a double converse of its first
     argument. $)
  cocnvcnv1 $p |- ( `' `' A o. B ) = ( A o. B ) $=
    ( ccnv ccom cvv cres cnvcnv2 coeq1i crn wss wceq ssv cores ax-mp eqtri ) AC
    CZBDAEFZBDZABDZPQBAGHBIZEJRSKTLABEMNO $.
    $( [8-Oct-2007] $)

  $( A composition is not affected by a double converse of its second
     argument. $)
  cocnvcnv2 $p |- ( A o. `' `' B ) = ( A o. B ) $=
    ( ccnv ccom cres cnvcnv2 coeq2i resco wrel wceq relco dfrel3 mpbi 3eqtr2i
    cvv ) ABCCZDABOEZDABDZOEZRPQABFGABOHRISRJABKRLMN $.
    $( [8-Oct-2007] $)

  $( Absorption of a reverse (preimage) restriction of the second member of a
     class composition. $)
  cores2 $p |- ( dom A C_ C -> ( A o. `' ( `' B |` C ) ) = ( A o. B ) ) $=
    ( cdm wss ccnv cres ccom wceq dfdm4 sseq1i cores sylbi cnvco cocnvcnv1 wrel
    crn relco dfrel2 mpbi eqtri 3eqtr4g cnveqd 3eqtr3g ) ADZCEZABFZCGZFZHZFZFZA
    BHZFZFZUJUMUFUKUNUFUHAFZHZUGUPHZUKUNUFUPQZCEUQURIUEUSCAJKUGUPCLMUKUIFUPHUQA
    UINUHUPOUAABNUBUCUJPULUJIAUIRUJSTUMPUOUMIABRUMSTUD $.
    $( [11-Dec-2006] $)

  ${
    $d x y z A $.
    $( Composition with the empty set.  Theorem 20 of [Suppes] p. 63. $)
    co02 $p |- ( A o. (/) ) = (/) $=
      ( vx vy vz c0 ccom relco rel0 cv cop wcel wbr wa noel df-br mtbir intnanr
      wex nex vex opelco 2false eqrelriiv ) BCAEFZEAEGHBIZCIZJZUDKZUGEKUHUEDIZE
      LZUIUFALZMZDRULDUJUKUJUEUIJZEKUMNUEUIEOPQSDUEUFAEBTCTUAPUGNUBUC $.
      $( [24-Apr-2004] $)

    $( Composition with the empty set. $)
    co01 $p |- ( (/) o. A ) = (/) $=
      ( ccnv ccom cnv0 coeq2i co02 eqtr2i cnvco 3eqtr4i cnveqi wrel wceq dfrel2
      c0 rel0 mpbi relco 3eqtr3ri ) NBZBZNACZBZBZNUASUBNABZSCZSUBUEUDNCNSNUDDEU
      DFGDNAHIJNKTNLONMPUAKUCUALNAQUAMPR $.
      $( [24-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36. $)
    coi1 $p |- ( Rel A -> ( A o. _I ) = A ) $=
      ( vx vy vz cid ccom wrel wceq relco cv cop wcel wbr wa wex vex ideq eqcom
      opelco bitri anbi1i exbii breq1 ceqsexv 3bitri df-br eqrelriv mpan ) AEFZ
      GAGUIAHAEIBCUIABJZCJZKZUILZUJUKAMZULALUMUJDJZEMZUOUKAMZNZDOUOUJHZUQNZDOUN
      DUJUKAEBPZCPSURUTDUPUSUQUPUJUOHUSUJUODPQUJUORTUAUBUQUNDUJVAUOUJUKAUCUDUEU
      JUKAUFTUGUH $.
      $( [22-Apr-2004] $)

    $( Composition with the identity relation.  Part of Theorem 3.7(i) of
       [Monk1] p. 36. $)
    coi2 $p |- ( Rel A -> ( _I o. A ) = A ) $=
      ( wrel ccom ccnv cnvco wceq relcnv ax-mp cnveqi eqtr3i dfrel2 coeq2 coeq1
      cid coi1 cnvi sylan9eq mpan2 sylbi syl5reqr biimpi eqtrd ) ABZNACZADZDZAU
      CUFNDZUFCZUDUENCZDUHUFUENEUIUEUEBUIUEFAGUEOHIJUCUFAFZUHUDFZAKZUJUGNFZUKPU
      JUMUHUGACUDUFAUGLUGNAMQRSTUCUJULUAUB $.
      $( [22-Apr-2004] $)
  $}

  $( Composition with a restricted identity relation.  (Contributed by FL,
     19-Jun-2011.)  (Revised by Stefan O'Rear, 7-Mar-2015.) $)
  coires1 $p |- ( A o. ( _I |` B ) ) = ( A |` B ) $=
    ( ccom cres ccnv cocnvcnv1 wrel wceq relcnv coi1 ax-mp eqtr3i reseq1i resco
    cid rescnvcnv 3eqtr3i ) AOCZBDAEZEZBDAOBDCABDRTBTOCZRTAOFTGUATHSITJKLMAOBNA
    BPQ $.
    $( [7-Mar-2015] $) $( [19-Jun-2011] $)

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.
    $( Associative law for class composition.  Theorem 27 of [Suppes] p. 64.
       Also Exercise 21 of [Enderton] p. 53.  Interestingly, this law holds for
       any classes whatsoever, not just functions or even relations. $)
    coass $p |- ( ( A o. B ) o. C ) = ( A o. ( B o. C ) ) $=
      ( vx vy vz vw ccom relco cv wbr wa wex cop wcel brco exbii opelco 3bitr4i
      vex excom anass 2exbii bitr4i anbi2i exdistr anbi1i 19.41v eqrelriiv ) DE
      ABHZCHZABCHZHZUJCIAULIDJZFJZCKZUOGJZBKZUQEJZAKZLZLZGMFMZUPURLZUTLZFMZGMZU
      NUSNZUKOZVHUMOZVCVBFMGMVGVBFGUAVEVBGFUPURUTUBUCUDUPUOUSUJKZLZFMUPVAGMZLZF
      MVIVCVLVNFVKVMUPGUOUSABFTETZPUEQFUNUSUJCDTZVORUPVAFGUFSUNUQULKZUTLZGMVDFM
      ZUTLZGMVJVGVRVTGVQVSUTFUNUQBCVPGTPUGQGUNUSAULVPVORVFVTGVDUTFUHQSSUI $.
      $( [27-Jan-1997] $)
  $}

  $( A relation is transitive iff its converse is transitive.  (Contributed by
     FL, 19-Sep-2011.) $)
  relcnvtr $p |- ( Rel R ->
     ( ( R o. R ) C_ R <-> ( `' R o. `' R ) C_ `' R ) ) $=
    ( wrel ccom wss ccnv cnvco cnvss syl5eqssr wceq wi sseq1 dfrel2 coeq1 coeq2
    eqtrd id sseq12d biimpd sylbi com12 syl6bi mpsyl impbid2 ) ABZAACZADZAEZUGC
    ZUGDZUFUHUEEUGAAFUEAGHUIUDUFUHEZUGEZUKCZIZUIUJUKDZUDUFJZUGUGFUHUGGUMUNULUKD
    ZUOUJULUKKUDUPUFUDUKAIZUPUFJALUQUPUFUQULUEUKAUQULAUKCUEUKAUKMUKAANOUQPQRSTU
    AUBTUC $.
    $( [19-Sep-2011] $)

  ${
    $d x y A $.
    $( A relation is included in the cross product of its domain and range.
       Exercise 4.12(t) of [Mendelson] p. 235. $)
    relssdmrn $p |- ( Rel A -> A C_ ( dom A X. ran A ) ) $=
      ( vx vy wrel cdm crn cxp id cv cop wi wex 19.8a wa opelxp vex eldm2 elrn2
      wcel anbi12i bitri sylanbrc a1i relssdv ) ADZBCAAEZAFZGZUEHBIZCIZJZASZUKU
      HSZKUEULULCLZULBLZUMULCMULBMUMUIUFSZUJUGSZNUNUONUIUJUFUGOUPUNUQUOCUIABPQB
      UJACPRTUAUBUCUD $.
      $( [3-Aug-1994] $)
  $}

  $( Two ways to describe the structure of a two-place operation. $)
  relrelss $p |- ( ( Rel A /\ Rel dom A ) <-> A C_ ( ( _V X. _V ) X. _V ) ) $=
    ( wrel cdm wa cvv cxp wss df-rel anbi2i crn relssdmrn xpss12 mpan2 sylan9ss
    ssv xpss sstr sylibr dmss c0 wne wceq vn0 dmxp ax-mp syl6sseq impbii bitri
    jca ) ABZACZBZDUJUKEEFZGZDZAUMEFZGZULUNUJUKHIUOUQUJUNAUKAJZFZUPAKUNUREGUSUP
    GUROUKUMURELMNUQUJUNUQAUMGZUJUQUPUMGUTUMEPAUPUMQMAHRUQUKUPCZUMAUPSETUAVAUMU
    BUCUMEUDUEUFUIUGUH $.
    $( [17-Dec-2008] $)

  ${
    $d x y A $.  $d x y R $.
    $( The membership relation for a relation is inherited by class union. $)
    unielrel $p |- ( ( Rel R /\ A e. R ) -> U. A e. U. R ) $=
      ( vx vy wrel wcel wa cv cop wceq wex elrel simpr wi vex uniopel a1i eleq1
      cuni unieq eleq1d 3imtr4d exlimivv sylc ) BEZABFZGACHZDHZIZJZDKCKUFASZBSZ
      FZCDABLUEUFMUJUFUMNCDUJUIBFZUISZULFZUFUMUNUPNUJUGUHBCODOPQAUIBRUJUKUOULAU
      ITUAUBUCUD $.
      $( [17-Sep-2006] $)
  $}

  $( The double union of a relation is its field. $)
  relfld $p |- ( Rel R -> U. U. R = ( dom R u. ran R ) ) $=
    ( wrel cuni cdm crn cun cxp wss relssdmrn 3syl unixpss syl6ss dmrnssfld a1i
    uniss eqssd ) ABZACZCZADZAEZFZQSTUAGZCZCZUBQAUCHRUDHSUEHAIAUCORUDOJTUAKLUBS
    HQAMNP $.
    $( [17-Sep-2006] $)

  $( Restriction of a relation to its field.  (Contributed by FL,
     15-Apr-2012.) $)
  relresfld $p |- ( Rel R -> ( R |` U. U. R ) = R ) $=
    ( wrel cuni cres wceq cdm crn cun wi relfld reseq2 resundi eqtr resss resdm
    wa wss ssequn2 uneq1 eqeq2d ex com3r sylbi mpsyl syl5com mpan2 3syl pm2.43i
    syl6bi ) ABZAACCZDZAEZUJUKAFZAGZHZEULAUPDZEZUJUMIZAJUKUPAKURUQAUNDZAUODZHZE
    ZUSAUNUOLURVCPULVBEZUJUMULUQVBMVAAQZUJUTAEZVDUMIZAUONAOVEAVAHZAEZVFVGIVAARV
    FVDVIUMVFVDULVHEZVIUMIVFVBVHULUTAVASTVJVIUMULVHAMUAUIUBUCUDUEUFUGUH $.
    $( [15-Apr-2012] $)

  $( Composition with the identity relation restricted to a relation's field.
     (Contributed by FL, 2-May-2011.) $)
  relcoi2 $p |- ( Rel R -> ( ( _I |` U. U. R ) o. R ) = R ) $=
    ( wrel cid cuni cres ccom crn wss wceq cdm cun dmrnssfld simpr sylbir ax-mp
    wa unss cores mp1i coi2 eqtrd ) ABZCADDZEAFZCAFZAAGZUCHZUDUEIUBAJZUFKUCHZUG
    ALUIUHUCHZUGPUGUHUFUCQUJUGMNOCAUCRSATUA $.
    $( [2-May-2011] $)

  $( Composition with the identity relation restricted to a relation's field.
     (Contributed by FL, 8-May-2011.) $)
  relcoi1 $p |- ( Rel R -> ( R o. ( _I |` U. U. R ) ) = R ) $=
    ( wrel cid cuni cres ccom cun wceq wi resco reseq1 wa eqtr eqeq1 syl5ibr ex
    syl com3l eqcoms mpcom cdm crn relfld resundi coeq2 coundi coi1 resdm uneq1
    uneq2 wss resss ssequn2 mpbi syl6reqr 3syl mpsyl syl5com syl5eq mp2b reseq2
    mpi coeq2d eqeq1d eqtrd ) ABZACADDZEZFZACFZAVGAUAZAUBZGZHZVFVIVJHZAUCVFVOVN
    ACVMEZFZVJHZVPCVKEZCVLEZGZHVQAWAFZHZVFVRICVKVLUDVPWAAUEVFVRWCWBVJHVFWBAVSFZ
    AVTFZGZVJAVSVTUFVFVJVKEZWDHZWFVJHZACVKJVJAHZVFWHWIIZAUGZWJWGAVKEZHZVFWKVJAV
    KKWMAHZVFWNWKIAUHWNWOVFWKWNWOVFWKIZWNWOLWGAHZWPWGWMAMWHWQVFWIWQVFWIIZIWDWGW
    DWGHZWQWRWSWQLWDAHZWRWDWGAMVJVLEZWEHZWTWFAWEGZHZWRACVLJWDAWEUIVFXBXDWIWJVFX
    BXDWIIZIZWLWJXAAVLEZHZVFXFIVJAVLKXBXHVFXEXHVFXEIZIWEXAWEXAHZXHXIXJXHLWEXGHX
    CAXGGZHZXIWEXAXGMWEXGAUJXDXLVFWIXDXLWRXDXLLWFXKHZWRWFXCXKMVFWIXMXKVJHVFVJAX
    KWLXGAUKXKAHAVLULXGAUMUNUOWFXKVJNOQPRUPPSRQTRUQQPSRQPRTURTVBUSVQWBVJNOUTVNV
    IVQVJVNVHVPAVGVMCVAVCVDOTWLVE $.
    $( [8-May-2011] $)

  $( The double union of the converse of a class is its field. $)
  unidmrn $p |- U. U. `' A = ( dom A u. ran A ) $=
    ( ccnv crn cdm cuni uncom dfdm4 df-rn uneq12i wrel wceq relcnv relfld ax-mp
    cun 3eqtr4ri ) ABZCZQDZOSROZADZACZOQEEZRSFUARUBSAGAHIQJUCTKALQMNP $.
    $( [4-Jun-2008] $)

  $( if ` R ` is a relation, its double union equals the double union of its
     converse.  (Contributed by FL, 5-Jan-2009.) $)
  relcnvfld $p |- ( Rel R -> U. U. R = U. U. `' R ) $=
    ( wrel cuni cdm crn cun ccnv relfld unidmrn syl6eqr ) ABACCADAEFAGCCAHAIJ
    $.
    $( [5-Jan-2009] $)

  $( Alternate definition of domain ~ df-dm that doesn't require dummy
     variables. $)
  dfdm2 $p |- dom A = U. U. ( `' A o. A ) $=
    ( ccnv ccom cuni cdm crn cun cnvco cocnvcnv2 eqtri unieqi eqtr3i wceq df-rn
    unidmrn eqcomi dmcoeq ax-mp rncoeq dfdm4 eqtr4i uneq12i unidm 3eqtrri ) ABZ
    ACZDZDZUFEZUFFZGZAEZULGULUFBZDZDUHUKUNUGUMUFUMUEUEBCUFUEAHUEAIJKKUFOLUIULUJ
    ULUEEZAFZMZUIULMUPUOANPZUEAQRUJUEFZULUQUJUSMURUEASRATUAUBULUCUD $.
    $( [2-Aug-2010] $)

  $( The double class union of a non-empty cross product is the union of it
     members. $)
  unixp $p |- ( ( A X. B ) =/= (/) -> U. U. ( A X. B ) = ( A u. B ) ) $=
    ( cxp c0 wne cuni cdm crn cun wrel wceq relxp relfld ax-mp xpeq2 xp0 syl6eq
    necon3i xpeq1 xp0r dmxp rnxp uneq12 syl2an syl2anc syl5eq ) ABCZDEZUGFFZUGG
    ZUGHZIZABIZUGJUIULKABLUGMNUHBDEZADEZULUMKZBDUGDBDKUGADCDBDAOAPQRADUGDADKUGD
    BCDADBSBTQRUNUJAKUKBKUPUOABUAABUBUJAUKBUCUDUEUF $.
    $( [17-Sep-2006] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( A cross product is empty iff its union is empty. $)
    unixp0 $p |- ( ( A X. B ) = (/) <-> U. ( A X. B ) = (/) ) $=
      ( vz vx vy cxp c0 wceq cuni unieq uni0 syl6eq wne cv wex n0 wss vex sylbi
      wcel cop elxp3 csn snssi opex unisn uniss syl5eqssr opnzi ssn0 mpan2 3syl
      wa adantl exlimivv exlimiv necon4i impbii ) ABFZGHZUSIZGHUTVAGIGUSGJKLUSG
      VAGUSGMCNZUSTZCOVAGMZCUSPVCVDCVCDNZENZUAZVBHZVGUSTZUMZEODOVDDEVBABUBVJVDD
      EVIVDVHVIVGUCZUSQZVGVAQZVDVGUSUDVLVGVKIVAVGVEVFUEUFVKUSUGUHVMVGGMVDVEVFDR
      ERUIVGVAUJUKULUNUOSUPSUQUR $.
      $( [20-Sep-2006] $)
  $}

  $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
     p. 26. $)
  cnvexg $p |- ( A e. V -> `' A e. _V ) $=
    ( wcel ccnv cdm crn cxp wss cvv wrel relcnv relssdmrn ax-mp df-rn syl5eqelr
    rnexg dfdm4 dmexg xpexg syl2anc ssexg sylancr ) ABCZADZUDEZUDFZGZHZUGICZUDI
    CUDJUHAKUDLMUCUEICUFICUIUCUEAFIANABPOUCUFAEIAQABROUEUFIISTUDUGIUAUB $.
    $( [17-Mar-1998] $)

  ${
    cnvex.1 $e |- A e. _V $.
    $( The converse of a set is a set.  Corollary 6.8(1) of [TakeutiZaring]
       p. 26. $)
    cnvex $p |- `' A e. _V $=
      ( cvv wcel ccnv cnvexg ax-mp ) ACDAECDBACFG $.
      $( [19-Dec-2003] $)
  $}

  $( A relation is a set iff its converse is a set.  (Contributed by FL,
     3-Mar-2007.) $)
  relcnvexb $p |- ( Rel R -> ( R e. _V <-> `' R e. _V ) ) $=
    ( wrel cvv wcel ccnv cnvexg wceq wi dfrel2 eleq1 syl5ib sylbi impbid2 ) ABZ
    ACDZAEZCDZACFNPEZAGZQOHAIQRCDSOPCFRACJKLM $.
    $( [5-Mar-2007] $)

  ${
    $d x y A $.  $d x y B $.
    $( Restriction of a class to a singleton.  (Contributed by Mario Carneiro,
       28-Dec-2014.) $)
    ressn $p |- ( A |` { B } ) = ( { B } X. ( A " { B } ) ) $=
      ( vx vy csn cres cima cxp relres relxp cv cop wcel wa ancom elimasn elsni
      vex sneqd imaeq2d eleq2d syl5bbr pm5.32i opelres opelxp 3bitr4i eqrelriiv
      bitri ) CDABEZFZUIAUIGZHZAUIIUIUKJCKZDKZLZAMZUMUIMZNZUQUNUKMZNZUOUJMUOULM
      URUQUPNUTUPUQOUQUPUSUPUNAUMEZGZMUQUSAUMUNCRDRZPUQVBUKUNUQVAUIAUQUMBUMBQST
      UAUBUCUHUMUNAUIVCUDUMUNUIUKUEUFUG $.
      $( [28-Dec-2014] $)
  $}

  ${
    $d A a b x $.  $d B a b $.
    $( The converse of an intersection is the intersection of the converse.
       (Contributed by FL, 15-Oct-2012.) $)
    cnviin $p |- ( A =/= (/) -> `' |^|_ x e. A B = |^|_ x e. A `' B ) $=
      ( va vb ciin ccnv wrel relcnv cvv wss wral cv wcel df-rel cop eliin ax-mp
      wb opex c0 wne wceq cxp wrex r19.2z expcom mpbi a1i mprg iinss syl sylibr
      wi vex opelcnv ralbii bitri 3bitr4i eqrelriv sylancr ) BUAUBZABCFZGZHABCG
      ZFZHZVDVFUCVCIVBVFJJUDZKZVGVBVEVHKZABUEZVIVJVBVKUNABVBVJABLVKVJABUFUGVJAM
      BNVEHVJCIVEOUHUIUJABVEVHUKULVFOUMDEVDVFEMZDMZPZVCNZVNCNZABLZVMVLPZVDNVRVF
      NZVNJNVOVQSVLVMTAVNBCJQRVMVLVCDUOZEUOZUPVSVRVENZABLZVQVRJNVSWCSVMVLTAVRBV
      EJQRWBVPABVMVLCVTWAUPUQURUSUTVA $.
      $( [15-Oct-2012] $)
  $}

  ${
    $d x y z A $.  $d x y z R $.
    $( The converse of a partial order relation is a partial order relation. $)
    cnvpo $p |- ( R Po A <-> `' R Po A ) $=
      ( vx vy vz cv wbr wn wa wi wral wpo r19.26 ralbii c0 wceq rzal vex ralcom
      brcnv ccnv ralidm wb 2thd r19.3rzv ralbidv pm2.61ine bitr2i anbi1i 3bitri
      wne bitr4i id breq12d syl5bb notbid cbvralv anbi12i ancom imbi12i 3bitr4i
      bitri df-po ) CFZVDBGZHZVDDFZBGZVGEFZBGZIZVDVIBGZJZIEAKZDAKCAKZVIVIBUAZGZ
      HZVIVGVPGZVGVDVPGZIZVIVDVPGZJZIZCAKZDAKEAKZABLAVPLVNCAKZDAKWEEAKZDAKVOWFW
      GWHDAWGVFCAKZVMEAKZIZCAKZWDEAKZCAKWHWGWICAKZWJCAKZIZWLWGVFEAKZWJIZCAKWQCA
      KZWOIWPVNWRCAVFVMEAMNWQWJCAMWSWNWOWNWIWSVFCAUBWIWSUCAOAOPWIWSVFCAQWQCAQUD
      AOUKVFWQCAVFEAUEUFUGUHUIUJWIWJCAMULWKWMCAWMVREAKZWCEAKZIWKVRWCEAMWTWIXAWJ
      VRVFECAVIVDPZVQVEVQVIVIBGXBVEVIVIBERZXCTXBVIVDVIVDBXBUMZXDUNUOUPUQWCVMEAW
      AVKWBVLWAVJVHIVKVSVJVTVHVIVGBXCDRZTVGVDBXECRZTURVJVHUSVBVIVDBXCXFTUTNURUH
      NWDCEAASUJNVNCDAASWEEDAASVACDEABVCEDCAVPVCVA $.
      $( [15-Jun-2005] $)

    $( The converse of a strict order relation is a strict order relation. $)
    cnvso $p |- ( R Or A <-> `' R Or A ) $=
      ( vx vy wpo cv wbr wceq w3o wral wa ccnv wor cnvpo ralcom vex brcnv eqcom
      3orbi123i df-so 2ralbii bitr4i anbi12i 3bitr4i ) ABEZCFZDFZBGZUFUGHZUGUFB
      GZIZDAJCAJZKABLZEZUGUFUMGZUGUFHZUFUGUMGZIZCAJDAJZKABMAUMMUEUNULUSABNULUKC
      AJDAJUSUKCDAAOURUKDCAAUOUHUPUIUQUJUGUFBDPZCPZQUGUFRUFUGBVAUTQSUAUBUCCDABT
      DCAUMTUD $.
      $( [15-Jun-2005] $)
  $}

  $( The composition of two sets is a set. $)
  coexg $p |- ( ( A e. V /\ B e. W ) -> ( A o. B ) e. _V ) $=
    ( wcel wa ccom cdm crn cxp wss cvv wrel relco relssdmrn dmcoss rncoss mp2an
    xpss12 syl6ss ax-mp dmexg rnexg xpexg syl2anr ssexg sylancr ) ACEZBDEZFABGZ
    BHZAIZJZKZUMLEZUJLEUJMZUNABNUPUJUJHZUJIZJZUMUJOUQUKKURULKUSUMKABPABQUQUKURU
    LSRTUAUIUKLEULLEUOUHBDUBACUCUKULLLUDUEUJUMLUFUG $.
    $( [19-Mar-1998] $)

  ${
    coex.1 $e |- A e. _V $.
    coex.2 $e |- B e. _V $.
    $( The composition of two sets is a set. $)
    coex $p |- ( A o. B ) e. _V $=
      ( cvv wcel ccom coexg mp2an ) AEFBEFABGEFCDABEEHI $.
      $( [15-Dec-2003] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function. $)
    dffun2 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( x A y /\ x A z ) -> y = z ) ) ) $=
      ( wfun wrel cid wss wa cv wbr wal wex copab 3bitri vex albii alcom bitri
      wi ccnv ccom df-fun df-id sseq2i df-co sseq1i ssopab2b brcnv anbi1i exbii
      wceq imbi1i 19.23v bitr4i anbi2i ) DEDFZDDUAZUBZGHZIUQAJZBJZDKZVACJZDKZIZ
      VBVDULZTZCLZBLALZIDUCUTVJUQUTVBVAURKZVEIZAMZVGTZCLZBLZVIALZBLVJUTUSVGBCNZ
      HVMBCNZVRHVPGVRUSBCUDUEUSVSVRBCADURUFUGVMVGBCUHOVOVQBVOVHALZCLVQVNVTCVNVF
      AMZVGTVTVMWAVGVLVFAVKVCVEVBVADBPAPUIUJUKUMVFVGAUNUOQVHCARSQVIBAROUPS $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of function. $)
    dffun3 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( x A y -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wal wex dffun2 wmo breq2 mo4 ax-17 mo2 bitr3i
      wi albii anbi2i bitri ) DEDFZAGZBGZDHZUECGZDHZIUFUHJZTCKBKZAKZIUDUGUJTBKC
      LZAKZIABCDMULUNUDUKUMAUKUGBNUMUGUIBCUFUHUEDOPUGBCUGCQRSUAUBUC $.
      $( [23-Apr-2004] $) $( [29-Dec-1996] $)

    $( Alternate definition of a function.  Definition 6.4(4) of
       [TakeutiZaring] p. 24. $)
    dffun4 $p |- ( Fun A <-> ( Rel A /\
                 A. x A. y A. z ( ( <. x , y >. e. A /\ <. x , z >. e. A )
                 -> y = z ) ) ) $=
      ( wfun wrel cv wbr wa wceq wal cop wcel dffun2 df-br anbi12i imbi1i albii
      wi 2albii anbi2i bitri ) DEDFZAGZBGZDHZUDCGZDHZIZUEUGJZSZCKZBKAKZIUCUDUEL
      DMZUDUGLDMZIZUJSZCKZBKAKZIABCDNUMUSUCULURABUKUQCUIUPUJUFUNUHUOUDUEDOUDUGD
      OPQRTUAUB $.
      $( [29-Dec-1996] $)

    $( Alternate definition of function. $)
    dffun5 $p |- ( Fun A <-> ( Rel A /\
                 A. x E. z A. y ( <. x , y >. e. A -> y = z ) ) ) $=
      ( wfun wrel cv wbr wceq wi wal wex wa cop dffun3 df-br imbi1i albii exbii
      wcel anbi2i bitri ) DEDFZAGZBGZDHZUECGIZJZBKZCLZAKZMUCUDUENDTZUGJZBKZCLZA
      KZMABCDOUKUPUCUJUOAUIUNCUHUMBUFULUGUDUEDPQRSRUAUB $.
      $( [29-Dec-1996] $)
  $}

  ${
    $d x y z w v u $.  $d z A w v u $.
    dffunmof.1 $e |- ( z e. A -> A. x z e. A ) $.
    dffunmof.2 $e |- ( z e. A -> A. y z e. A ) $.
    $( Definition of function, using bound-variable hypotheses instead of
       distinct variable conditions. $)
    dffun6f $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vw vv vu wfun cv wbr wceq wal wa wmo wcel ax-17 hbbr albii wi wex breq2
      wrel dffun3 cbvmo mo2 hbmo breq1 mobid cbval 3bitr3ri anbi2i bitr4i ) DJD
      UDZGKZHKZDLZUQIKMUAHNIUBZGNZOUOAKZBKZDLZBPZANZOGHIDUEVEUTUOURHPZGNUPVBDLZ
      BPZGNUTVEVFVHGURVGHBBCUPUQDCKZUPQZBRFVIUQQBRSVGHRUQVBUPDUCUFTVFUSGURHIURI
      RUGTVHVDGAVGABACUPVBDVJAREVIVBQARSUHVDGRUPVAMZVGVCBVKBRUPVAVBDUIUJUKULUMU
      N $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)
  $}

  ${
    $d x y z A $.
    $( Alternate definition of a function using "at most one" notation. $)
    dffun6 $p |- ( Fun A <-> ( Rel A /\ A. x E* y x A y ) ) $=
      ( vz cv wcel ax-17 dffun6f ) ABDCDECFZAGIBGH $.
      $( [15-Aug-2004] $) $( [9-Mar-1995] $)

    $( A function has at most one value for each argument. $)
    funmo $p |- ( Fun A -> E* y x A y ) $=
      ( wfun cv wbr wmo wrel wal dffun6 simprbi 19.21bi ) CDZAEBECFBGZAMCHNAIAB
      CJKL $.
      $( [15-Aug-2004] $) $( [24-May-1998] $)
  $}

  $( A function is a relation. $)
  funrel $p |- ( Fun A -> Rel A ) $=
    ( wfun wrel ccnv ccom cid wss df-fun simplbi ) ABACAADEFGAHI $.
    $( [1-Aug-1994] $)

  ${
    $d x y z A $.  $d x y z B $.
    $( Subclass theorem for function predicate.  (The proof was shortened by
       Mario Carneiro, 24-Jun-2014.) $)
    funss $p |- ( A C_ B -> ( Fun B -> Fun A ) ) $=
      ( wss wrel ccnv ccom cid wa wfun relss wi coss1 cnvss coss2 sstrd anim12d
      syl sstr2 df-fun 3imtr4g ) ABCZBDZBBEZFZGCZHADZAAEZFZGCZHBIAIUAUBUFUEUIAB
      JUAUHUDCUEUIKUAUHBUGFZUDABUGLUAUGUCCUJUDCABMUGUCBNQOUHUDGRQPBSAST $.
      $( [24-Jun-2014] $) $( [16-Aug-1994] $)
  $}

  $( Equality theorem for function predicate. $)
  funeq $p |- ( A = B -> ( Fun A <-> Fun B ) ) $=
    ( wss wa wfun wi wceq wb funss anim12i ancoms eqss dfbi2 3imtr4i ) ABCZBACZ
    DAEZBEZFZRQFZDZABGQRHPOUAPSOTBAIABIJKABLQRMN $.
    $( [16-Aug-1994] $)

  ${
    funeqi.1 $e |- A = B $.
    $( Equality inference for the function predicate.  (Contributed by Jonathan
       Ben-Naim, 3-Jun-2011.) $)
    funeqi $p |- ( Fun A <-> Fun B ) $=
      ( wceq wfun wb funeq ax-mp ) ABDAEBEFCABGH $.
      $( [3-Jun-2011] $)
  $}

  ${
    funeqd.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for the function predicate. $)
    funeqd $p |- ( ph -> ( Fun A <-> Fun B ) ) $=
      ( wceq wfun wb funeq syl ) ABCEBFCFGDBCHI $.
      $( [23-Feb-2013] $)
  $}

  ${
    $d y F $.  $d x y $.
    hbfun.1 $e |- ( y e. F -> A. x y e. F ) $.
    $( Bound-variable hypothesis builder for a function. $)
    hbfun $p |- ( Fun F -> A. x Fun F ) $=
      ( wfun wrel ccnv ccom cid wa df-fun hbrel hbcnv hbco wcel ax-17 hbss hban
      wss cv hbxfrbi ) CECFZCCGZHZISZJACKUBUEAABCDLABUDIABCUCDABCDMNBTIOAPQRUA
      $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d x y z F $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    funeu $p |- ( ( Fun F /\ x F y ) -> E! y x F y ) $=
      ( wfun cv wbr weu wex 19.8a wmo wi funmo df-mo sylib syl5 imp ) CDZAEBECF
      ZRBGZRRBHZQSRBIQRBJTSKABCLRBMNOP $.
      $( [17-Aug-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function. $)
    funeu2 $p |- ( ( Fun F /\ <. x , y >. e. F ) -> E! y <. x , y >. e. F ) $=
      ( wfun cv wbr wa weu cop wcel funeu df-br anbi2i eubii 3imtr3i ) CDZAEZBE
      ZCFZGSBHPQRICJZGTBHABCKSTPQRCLZMSTBUANO $.
      $( [3-Aug-1994] $)
  $}

  ${
    $d x y A $.
    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  (Enderton's definition is ambiguous
       because "there is only one" could mean either "there is at most one" or
       "there is exactly one."  However, ~ dffun8 shows that it doesn't matter
       which meaning we pick.) $)
    dffun7 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E* y x A y ) ) $=
      ( wfun wrel cv wbr wmo wal wa cdm wral dffun6 wcel wi wex vex eldm bitr4i
      moabs imbi1i albii df-ral anbi2i bitri ) CDCEZAFZBFCGZBHZAIZJUFUIACKZLZJA
      BCMUJULUFUJUGUKNZUIOZAIULUIUNAUIUHBPZUIOUNUHBTUMUOUIBUGCAQRUASUBUIAUKUCSU
      DUE $.
      $( [4-Nov-2002] $)

    $( Alternate definition of a function.  One possibility for the definition
       of a function in [Enderton] p. 42.  Compare ~ dffun7 .  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    dffun8 $p |- ( Fun A <-> ( Rel A /\ A. x e. dom A E! y x A y ) ) $=
      ( wfun wrel cv wbr wmo cdm wral wa weu dffun7 wex wi wcel df-mo vex eldm
      wb pm5.5 sylbi syl5bb ralbiia anbi2i bitri ) CDCEZAFZBFCGZBHZACIZJZKUGUIB
      LZAUKJZKABCMULUNUGUJUMAUKUJUIBNZUMOZUHUKPZUMUIBQUQUOUPUMTBUHCARSUOUMUAUBU
      CUDUEUF $.
      $( [18-Sep-2011] $) $( [4-Nov-2002] $)

    $( Alternate definition of a function. $)
    dffun9 $p |- ( Fun A <->
                 ( Rel A /\ A. x e. dom A E* y ( y e. ran A /\ x A y ) ) ) $=
      ( wfun wrel cv wbr wmo cdm wral crn wcel dffun7 vex brelrn pm4.71ri mobii
      wa ralbii anbi2i bitri ) CDCEZAFZBFZCGZBHZACIZJZRUBUDCKLZUERZBHZAUGJZRABC
      MUHULUBUFUKAUGUEUJBUEUIUCUDCANBNOPQSTUA $.
      $( [28-Mar-2007] $)
  $}

  $( An equivalence for the function predicate. $)
  funfn $p |- ( Fun A <-> A Fn dom A ) $=
    ( wfun cdm wceq wa wfn eqid biantru df-fn bitr4i ) ABZKACZLDZEALFMKLGHALIJ
    $.
    $( [13-Aug-2004] $)

  $( The identity relation is a function.  Part of Theorem 10.4 of [Quine]
     p. 65. $)
  funi $p |- Fun _I $=
    ( cid wfun wrel ccnv ccom wss reli wceq relcnv coi2 ax-mp cnvi eqtri df-fun
    eqimssi mpbir2an ) ABACAADZEZAFGRARQAQCRQHAIQJKLMOANP $.
    $( [30-Apr-1998] $)

  $( The universe is not a function.  (Contributed by Raph Levien,
     27-Jan-2004.) $)
  nfunv $p |- -. Fun _V $=
    ( cvv wfun wrel cxp wcel 0nelxp 0ex wss df-rel biimpi sseld mpi mto funrel
    c0 ) ABACZPOAADZEZAAFPOAERGPAQOPAQHAIJKLMANM $.
    $( [27-Jan-2004] $)

  ${
    $d t u v w x y z A $.  $d t u v w x y z B $.
    $( A Kuratowski ordered pair is a function only if its components are
       equal.  (Revised by Mario Carneiro, 26-Apr-2015.) $)
    funopg $p |- ( ( A e. V /\ B e. W /\ Fun <. A , B >. ) -> A = B ) $=
      ( vu vt vx vy vz vw vv wcel cop wfun wceq cv wi cpr vex cvv opeq1 imbi12d
      funeqd eqeq1 opeq2 eqeq2 csn wex wrel funrel relop sylib opth opid preq1i
      wa dfop preq2i snex zfpair2 3eqtr4ri eqeq2i bitr3i wal simprbi opex prid1
      dffun4 eleq2 mpbiri prid2 jca w3a opeq12 3adant3 eleq1d 3adant2 wb eqeq12
      anbi12d 3adant1 mp3an syl2im syl5bi dfsn2 preq2 eqeq2d eqtr3 expcom com13
      cla43gv syl5req syl6bi imp sylcom exlimdvv mpd vtocl2g 3impia ) ACLBDLABM
      ZNZABOZEPZFPZMZNZXCXDOZQAXDMZNZAXDOZQXAXBQEFABCDXCAOZXFXIXGXJXKXEXHXCAXDU
      AUCXCAXDUDUBXDBOZXIXAXJXBXLXHWTXDBAUEUCXDBAUFUBXFXCGPZUGZOZXDXMHPZRZOZUPZ
      HUHGUHZXGXFXEUIZXTXEUJGHXCXDESZFSZUKULXFXSXGGHXFXSXMXPOZXGXSXEXMXMMZXMXPM
      ZRZOZXFYDXSXEXNXQMZOYHXCXDXNXQYBYCUMYIYGXEYEXNXQRZRXNUGZYJRYGYIYEYKYJXMGS
      ZUNUOYFYJYEXMXPYLHSZUQURXNXQXMUSGHUTUQVAVBVCXFIPZJPZMZXELZYNKPZMZXELZUPZY
      OYROZQZKVDJVDIVDZYHYEXELZYFXELZUPZYDXFYAUUDIJKXEVHVEYHUUEUUFYHUUEYEYGLYEY
      FXMXMVFVGXEYGYEVIVJYHUUFYFYGLYEYFXMXPVFVKXEYGYFVIVJVLXMTLZUUHXPTLUUDUUGYD
      QZQYLYLYMUUCUUIIJKXMXMXPTTTYNXMOZYOXMOZYRXPOZVMZUUAUUGUUBYDUUMYQUUEYTUUFU
      UMYPYEXEUUJUUKYPYEOUULYNYOXMXMVNVOVPUUMYSYFXEUUJUULYSYFOUUKYNYRXMXPVNVQVP
      VTUUKUULUUBYDVRUUJYOXMYRXPVSWAUBWKWBWCWDXOXRYDXGQYDXRXOXGYDXRXDXNOZXOXGQY
      DXQXNXDYDXNXMXMRXQXMWEXMXPXMWFWLWGXOUUNXGXCXDXNWHWIWMWJWNWOWPWQWRWS $.
      $( [26-Apr-2015] $) $( [5-Jun-2008] $)
  $}


  ${
    $d x y z $.  $d z ph $.
    $( A class of ordered pairs is a function when there is at most one second
       member for each pair. $)
    funopab $p |- ( Fun { <. x , y >. | ph } <-> A. x E* y ph ) $=
      ( copab wfun wbr wmo wal wrel relopab hbopab1 hbopab2 dffun6f mpbiran cop
      vz cv wcel df-br bitri opabid mobii albii ) ABCDZEZBQZCQZUDFZCGZBHZACGZBH
      UEUDIUJABCJBCPUDABCPKABCPLMNUIUKBUHACUHUFUGOUDRAUFUGUDSABCUATUBUCT $.
      $( [16-May-1995] $)
  $}

  ${
    $d x y $.  $d y A $.
    $( A class of ordered pairs of values is a function. $)
    funopabeq $p |- Fun { <. x , y >. | y = A } $=
      ( cv wceq copab wfun wmo funopab moeq mpgbir ) BDCEZABFGLBHALABIBCJK $.
      $( [14-Nov-1995] $)

    $( A class of ordered pairs of values in the form used by ~ fvopab4 is a
       function. $)
    funopab4 $p |- Fun { <. x , y >. | ( ph /\ y = A ) } $=
      ( cv wceq wa copab wss wfun simpr ssopab2i funopabeq funss mp2 ) ACEDFZGZ
      BCHZPBCHZISJRJQPBCAPKLBCDMRSNO $.
      $( [17-Feb-2013] $)
  $}

  ${
    $d x y z F $.  $d x y z G $.
    $( The composition of two functions is a function.  Exercise 29 of
       [TakeutiZaring] p. 25.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.) $)
    funco $p |- ( ( Fun F /\ Fun G ) -> Fun ( F o. G ) ) $=
      ( vx vz vy wfun wa cv wbr wex copab wmo wal funmo alrimiv moexexv syl2anr
      ccom funopab sylibr df-co funeqi ) AFZBFZGZCHDHZBIZUFEHAIZGDJZCEKZFZABRZF
      UEUIELZCMUKUEUMCUDUGDLUHELZDMUMUCCDBNUCUNDDEANOUGUHDEPQOUICESTULUJCEDABUA
      UBT $.
      $( [18-Sep-2011] $) $( [26-Jan-1997] $)
  $}

  ${
    $d x y z F $.  $d x y z A $.
    $( A restriction of a function is a function.  Compare Exercise 18 of
       [TakeutiZaring] p. 25. $)
    funres $p |- ( Fun F -> Fun ( F |` A ) ) $=
      ( cres wss wfun wi resss funss ax-mp ) BACZBDBEJEFBAGJBHI $.
      $( [16-Aug-1994] $)
  $}

  ${
    $d x y F $.  $d x y G $.  $d x y A $.
    $( The restriction of a function to the domain of a subclass equals the
       subclass. $)
    funssres $p |- ( ( Fun F /\ G C_ F ) -> ( F |` dom G ) = G ) $=
      ( vx vy wfun wss wa cdm cres wceq cv cop wcel wb wal wi vex wex imp wrel
      ssel opeldm a1i adantl weu funeu2 eldm2 ancrd eximdv syl5bi eupick syl2an
      jcad exp43 com23 com34 pm2.43d imp3a impbid opelres syl6rbbr relres relss
      alrimivv funrel mpan9 eqrel sylancr mpbird ) AEZBAFZGZABHZIZBJZCKZDKZLZVN
      MZVRBMZNZDOCOZVLWACDVLVTVRAMZVPVMMZGZVSVLVTWEVKVTWEPVJVKVTWCWDBAVRUAZVTWD
      PVKVPVQBCQZDQZUBUCUMUDVLWCWDVTVLWCWDVTPVLWCWDWCVTVJVKWCWDWCVTPZPZPVJWCVKW
      JVJWCVKWDWIVJWCGWCDUEWCVTGZDRZWIVKWDGCDAUFVKWDWLWDVTDRVKWLDVPBWGUGVKVTWKD
      VKVTWCWFUHUIUJSWCVTDUKULUNUOSUPUQURUSVPVQAVMWHUTVAVDVLVNTBTZVOWBNAVMVBVJA
      TVKWMAVEBAVCVFCDVNBVGVHVI $.
      $( [19-Mar-2004] $) $( [15-Aug-1994] $)
  $}

  $( Equality of restrictions of a function and a subclass. $)
  fun2ssres $p |- ( ( Fun F /\ G C_ F /\ A C_ dom G ) ->
                  ( F |` A ) = ( G |` A ) ) $=
    ( wfun wss cdm cres wceq wa resabs1 eqcomd funssres reseq1d sylan9eqr 3impa
    ) BDZCBEZACFZEZBAGZCAGZHSPQIZTBRGZAGZUASUDTBARJKUBUCCABCLMNO $.
    $( [2-Jun-2007] $) $( [16-Aug-1994] $)

  ${
    $d x y z F $.  $d x y z G $.
    $( The union of functions with disjoint domains is a function.  Theorem 4.6
       of [Monk1] p. 43. $)
    funun $p |- ( ( ( Fun F /\ Fun G ) /\ ( dom F i^i dom G ) = (/) ) ->
                Fun ( F u. G ) ) $=
      ( vx vy vz wfun wa cdm wrel cv wi wal anim12i wo wn 19.21bi opeldm dffun4
      wcel vex cin c0 wceq cun cop funrel relun sylibr elun anbi12i anddi bitri
      adantr disj1 biimpi imnan sylib nsyl orel2 syl con2d orel1 orim12d adantl
      syl5bi simprbi 19.21bbi jaao syld alrimiv alrimivv sylanbrc ) AFZBFZGZAHZ
      BHZUAUBUCZGZABUDZIZCJZDJZUEZVTSZWBEJZUEZVTSZGZWCWFUCZKZELZDLCLVTFVOWAVRVO
      AIZBIZGWAVMWMVNWNAUFBUFMABUGUHUMVSWLCDVSWKEVSWIWDASZWGASZGZWDBSZWGBSZGZNZ
      WJWIWQWOWSGZNZWRWPGZWTNZNZVSXAWIWOWRNZWPWSNZGXFWEXGWHXHWDABUIWGABUIUJWOWR
      WPWSUKULVRXFXAKVOVRXCWQXEWTVRXBOXCWQKVRWBVPSZWBVQSZGZXBVRXIXJOKZXKOVRXLCV
      RXLCLCVPVQUNUOPZXIXJUPUQWOXIWSXJWBWCACTZDTZQWBWFBXNETZQMURXBWQUSUTVRXDOXE
      WTKVRXJXIGZXDVRXJXIOKXQOVRXIXJXMVAXJXIUPUQWRXJWPXIWBWCBXNXOQWBWFAXNXPQMUR
      XDWTVBUTVCVDVEVOXAWJKVRVMWQWJVNWTVMWQWJKZDEVMXRELDLZCVMWMXSCLCDEARVFPVGVN
      WTWJKZDEVNXTELDLZCVNWNYACLCDEBRVFPVGVHUMVIVJVKCDEVTRVL $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The converse singleton of an ordered pair is a function.  This is
       equivalent to ~ funsn via ~ cnvsn , but stating it this way allows us to
       skip the sethood assumptions on ` A ` and ` B ` . $)
    funcnvsn $p |- Fun `' { <. A , B >. } $=
      ( vx vy cop csn ccnv wfun wrel cv wbr wmo wal relcnv wceq moeq wcel brcnv
      vex df-br bitri elsni opth1 syl sylbi immoi ax-mp ax-gen dffun6 mpbir2an
      ) ABEZFZGZHUMICJZDJZUMKZDLZCMULNUQCUOAOZDLUQDAPUPURDUPUOUNEZULQZURUPUOUNU
      LKUTUNUOULCSZDSZRUOUNULTUAUTUSUKOURUSUKUBUOUNABVBVAUCUDUEUFUGUHCDUMUIUJ
      $.
      $( [30-Apr-2015] $)

    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65. $)
    funsng $p |- ( ( A e. V /\ B e. W ) -> Fun { <. A , B >. } ) $=
      ( wcel wa cop csn ccnv wfun funcnvsn wceq cnvsng ancoms funeqd mpbii ) AC
      EZBDEZFZBAGHIZJABGHZJBAKSTUARQTUALBADCMNOP $.
      $( [1-Oct-2013] $) $( [28-Jun-2011] $)

    $( Functionality and domain of the singleton of an ordered pair.
       (Contributed by Mario Carneiro, 30-Apr-2015.) $)
    fnsng $p |- ( ( A e. V /\ B e. W ) -> { <. A , B >. } Fn { A } ) $=
      ( wcel wa cop csn wfun cdm wceq wfn funsng dmsnopg adantl df-fn sylanbrc
      ) ACEZBDEZFABGHZITJAHZKZTUALABCDMSUBRABDNOTUAPQ $.
      $( [30-Apr-2015] $)

    funsn.1 $e |- A e. _V $.
    funsn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is a function.  Theorem 10.5 of [Quine]
       p. 65. $)
    funsn $p |- Fun { <. A , B >. } $=
      ( cvv wcel cop csn wfun funsng mp2an ) AEFBEFABGHICDABEEJK $.
      $( [1-Oct-2013] $) $( [12-Aug-1994] $)
  $}

  $( A set of two pairs is a function if their first members are different.
     (Contributed by FL, 26-Jun-2011.) $)
  funprg $p |- ( ( ( A e. V /\ B e. W ) /\ ( C e. X /\ D e. Y ) /\ A =/= B )
     -> Fun { <. A , C >. , <. B , D >. } ) $=
    ( wcel wa cop csn wfun cdm cin c0 wceq funsng syl2anc dmsnopg simp1l simp2l
    wne w3a cun cpr simp1r simp2r ineq12d disjsn2 3ad2ant3 eqtrd funun syl21anc
    syl df-pr funeqi sylibr ) AEIZBFIZJZCGIZDHIZJZABUCZUDZACKZLZBDKZLZUEZMZVGVI
    UFZMVFVHMZVJMZVHNZVJNZOZPQVLVFUSVBVNUSUTVDVEUAVAVBVCVEUBZACEGRSVFUTVCVOUSUT
    VDVEUGVAVBVCVEUHZBDFHRSVFVRALZBLZOZPVFVPWAVQWBVFVBVPWAQVSACGTUOVFVCVQWBQVTB
    DHTUOUIVEVAWCPQVDABUJUKULVHVJUMUNVMVKVGVIUPUQUR $.
    $( [1-Oct-2013] $) $( [26-Jun-2011] $)

  ${
    funpr.1 $e |- A e. _V $.
    funpr.2 $e |- B e. _V $.
    funpr.3 $e |- C e. _V $.
    funpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.) $)
    funpr $p |- ( A =/= B -> Fun { <. A , C >. , <. B , D >. } ) $=
      ( cvv wcel wa wne cop cpr wfun pm3.2i funprg mp3an12 ) AIJZBIJZKCIJZDIJZK
      ABLACMBDMNOSTEFPUAUBGHPABCDIIIIQR $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  ${
    funtp.1 $e |- A e. _V $.
    funtp.2 $e |- B e. _V $.
    funtp.3 $e |- C e. _V $.
    funtp.4 $e |- D e. _V $.
    funtp.5 $e |- E e. _V $.
    funtp.6 $e |- F e. _V $.
    $( A function with a domain of three elements. $)
    funtp $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
                    -> Fun { <. A , D >. , <. B , E >. , <. C , F >. } ) $=
      ( wne cop csn wfun wa cin c0 wceq w3a cpr cun ctp funpr funsn jctir df-pr
      cdm dmprop eqtri dmsnop ineq12i disjsn2 anim12i sylib syl5eq funun syl2an
      undisj1 3impb df-tp funeqi sylibr ) ABMZACMZBCMZUAADNZBENZUBZCFNZOZUCZPZV
      HVIVKUDZPVEVFVGVNVEVJPZVLPZQVJUIZVLUIZRZSTVNVFVGQZVEVPVQABDEGHJKUECFILUFU
      GWAVTAOZBOZUCZCOZRZSVRWDVSWEVRABUBWDADBEJKUJABUHUKCFLULUMWAWBWERSTZWCWERS
      TZQWFSTVFWGVGWHACUNBCUNUOWBWCWEUTUPUQVJVLURUSVAVOVMVHVIVKVBVCVD $.
      $( [1-Oct-2013] $) $( [14-Sep-2011] $)
  $}

  ${
    fnsn.1 $e |- A e. _V $.
    fnsn.2 $e |- B e. _V $.
    $( Functionality and domain of the singleton of an ordered pair.
       (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) $)
    fnsn $p |- { <. A , B >. } Fn { A } $=
      ( cvv wcel cop csn wfn fnsng mp2an ) AEFBEFABGHAHICDABEEJK $.
      $( [1-Oct-2013] $) $( [3-Jun-2011] $)
  $}

  ${
    $( Domain of a function with a domain of two different values.
       (Contributed by FL, 26-Jun-2011.) $)
    fnprg $p |- ( ( ( A e. V /\ B e. W ) /\ ( C e. X /\ D e. Y ) /\ A =/= B )
         -> { <. A , C >. , <. B , D >. } Fn { A , B } ) $=
      ( wcel wa wne w3a cop cpr wfun cdm wceq wfn funprg dmpropg 3ad2ant2 df-fn
      sylanbrc ) AEIBFIJZCGIDHIJZABKZLACMBDMNZOUGPABNZQZUGUHRABCDEFGHSUEUDUIUFA
      CBDGHTUAUGUHUBUC $.
      $( [26-Apr-2015] $) $( [26-Jun-2011] $)
  $}

  ${
    fntp.1 $e |- A e. _V $.
    fntp.2 $e |- B e. _V $.
    fntp.3 $e |- C e. _V $.
    fntp.4 $e |- D e. _V $.
    fntp.5 $e |- E e. _V $.
    fntp.6 $e |- F e. _V $.
    $( A function with a domain of three elements. $)
    fntp $p |- ( ( A =/= B /\ A =/= C /\ B =/= C )
          -> { <. A , D >. , <. B , E >. , <. C , F >. } Fn { A , B , C } ) $=
      ( wne w3a cop ctp wfun cdm wceq wfn funtp dmtpop a1i df-fn sylanbrc ) ABM
      ACMBCMNZADOBEOCFOPZQUGRABCPZSZUGUHTABCDEFGHIJKLUAUIUFADBECFJKLUBUCUGUHUDU
      E $.
      $( [26-Apr-2015] $) $( [14-Sep-2011] $)
  $}

  $( The empty set is a function.  Theorem 10.3 of [Quine] p. 65. $)
  fun0 $p |- Fun (/) $=
    ( c0 cop csn wss wfun 0ss 0ex funsn funss mp2 ) AAABCZDKEAEKFAAGGHAKIJ $.
    $( [7-Apr-1998] $)

  $( The double converse of a function is a function. $)
  funcnvcnv $p |- ( Fun A -> Fun `' `' A ) $=
    ( ccnv wss wfun wi cnvcnvss funss ax-mp ) ABBZACADIDEAFIAGH $.
    $( [21-Sep-2004] $)

  ${
    $d f g x y z w v A $.  $d x y B $.  $d x y R $.
    $( A simpler equivalence for single-rooted (see ~ funcnv ). $)
    funcnv2 $p |- ( Fun `' A <-> A. y E* x x A y ) $=
      ( ccnv wfun wrel cv wbr wmo wal wa dffun6 relcnv biantrur vex brcnv mobii
      albii 3bitr2i ) CDZETFZBGZAGZTHZAIZBJZKUFUCUBCHZAIZBJBATLUAUFCMNUEUHBUDUG
      AUBUCCBOAOPQRS $.
      $( [9-Aug-2004] $)

    $( The converse of a class is a function iff the class is single-rooted,
       which means that for any ` y ` in the range of ` A ` there is at most
       one ` x ` such that ` x A y ` .  Definition of single-rooted in
       [Enderton] p. 43.  See ~ funcnv2 for a simpler version. $)
    funcnv $p |- ( Fun `' A <-> A. y e. ran A E* x x A y ) $=
      ( cv wbr wmo wal crn wcel wi ccnv wfun wral wa vex pm4.71ri mobii moanimv
      brelrn bitri albii funcnv2 df-ral 3bitr4i ) ADZBDZCEZAFZBGUFCHZIZUHJZBGCK
      LUHBUIMUHUKBUHUJUGNZAFUKUGULAUGUJUEUFCAOBOSPQUJUGARTUAABCUBUHBUIUCUD $.
      $( [13-Aug-2004] $)

    $( A condition showing a class is single-rooted.  (See ~ funcnv ). $)
    funcnv3 $p |- ( Fun `' A <-> A. y e. ran A E! x e. dom A x A y ) $=
      ( cv wbr wmo crn wral wex ccnv wfun cdm wreu wcel dfrn2 abeq2i biimpi weu
      wa vex biantrurd ralbiia funcnv df-reu breldm pm4.71ri eu5 3bitr2i ralbii
      eubii 3bitr4i ) ADZBDZCEZAFZBCGZHUNAIZUOSZBUPHCJKUNACLZMZBUPHUOURBUPUMUPN
      ZUQUOVAUQUQBUPABCOPQUAUBABCUCUTURBUPUTULUSNZUNSZARUNARURUNAUSUDUNVCAUNVBU
      LUMCATBTUEUFUJUNAUGUHUIUK $.
      $( [26-May-2006] $)

    $( The double converse of a class is a function iff the class is
       single-valued.  Each side is equivalent to Definition 6.4(2) of
       [TakeutiZaring] p. 23, who use the notation "Un(A)" for single-valued.
       Note that ` A ` is not necessarily a function. $)
    fun2cnv $p |- ( Fun `' `' A <-> A. x E* y x A y ) $=
      ( ccnv wfun cv wbr wmo wal funcnv2 vex brcnv mobii albii bitri ) CDZDEBFZ
      AFZPGZBHZAIRQCGZBHZAIBAPJTUBASUABQRCBKAKLMNO $.
      $( [13-Aug-2004] $)

    $( A single-valued relation is a function.  (See ~ fun2cnv for
       "single-valued.") Definition 6.4(4) of [TakeutiZaring] p. 24. $)
    svrelfun $p |- ( Fun A <-> ( Rel A /\ Fun `' `' A ) ) $=
      ( vx vy wfun wrel cv wbr wmo wal wa ccnv dffun6 fun2cnv anbi2i bitr4i ) A
      DAEZBFCFAGCHBIZJPAKKDZJBCALRQPBCAMNO $.
      $( [17-Jan-2006] $)

    $( Single-rootedness (see ~ funcnv ) of a class cut down by a cross
       product. $)
    fncnv $p |- ( `' ( R i^i ( A X. B ) ) Fn B <->
                  A. y e. B E! x e. A x R y ) $=
      ( cxp cin ccnv wfn wfun cdm wceq wa cv wbr wral wcel wmo w3a 3bitr4i wreu
      crn df-fn df-rn eqeq1i anbi2i rninxp anbi1i funcnv raleq wi biimt brinxp2
      3ancoma 3anass 3bitri mobii moanimv bitri syl6rbbr ralbiia syl6bb pm5.32i
      wrex syl5bb r19.26 ancom reu5 ralbii 3bitr2i ) ECDFGZHZDIVLJZVLKZDLZMVMVK
      UBZDLZMZANZBNZEOZACUAZBDPZVLDUCVQVOVMVPVNDVKUDUEUFVQVMMZWAACVDZVSCQZWAMZA
      RZMZBDPZVRWCVQWHBDPZMWEBDPZWKMWDWJVQWLWKABCDEUGUHVQVMWKVMVSVTVKOZARZBVPPZ
      VQWKABVKUIVQWOWNBDPWKWNBVPDUJWNWHBDVTDQZWHWPWHUKZWNWPWHULWNWPWGMZARWQWMWR
      AWMWFWPWASWPWFWASWRVSVTCDEUMWFWPWAUNWPWFWAUOUPUQWPWGAURUSUTVAVBVEVCWEWHBD
      VFTVMVQVGWBWIBDWAACVHVITVJ $.
      $( [5-Mar-2007] $)

    $( Two ways of stating that ` A ` is one-to-one (but not necessarily a
       function).  Each side is equivalent to Definition 6.4(3) of
       [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one
       (but not necessarily a function). $)
    fun11 $p |- ( ( Fun `' `' A /\ Fun `' A ) <->
         A. x A. y A. z A. w ( ( x A y /\ z A w ) -> ( x = z <-> y = w ) ) ) $=
      ( cv wbr wa wceq wal ccnv wfun bi2.04 anbi12i 2albii 19.26-2 alcom 3bitri
      wi albii dfbi2 imbi2i pm4.76 ax-17 breq1 anbi1d imbi1d equsal bitri breq2
      wb 3bitr2i bitr2i wmo fun2cnv mo4 funcnv2 alrot4 3bitr4i ) CFZBFZEGZUTDFZ
      EGZHZVAVCIZSZBJZDJZCJZAFZVCEGZVDHZVKUTIZSZAJZDJCJZHZVKVAEGZVDHZVNVFUKZSZB
      JAJZDJCJZEKZKLZWELZHWBDJCJBJAJWDVHVPHZDJCJVRWCWHCDWCVNVTVFSZSZVFVTVNSZSZH
      ZBJAJWJBJAJZWLBJZAJZHWHWBWMABWBVTVNVFSZVFVNSZHZSVTWQSZVTWRSZHWMWAWSVTVNVF
      UAUBVTWQWRUCWTWJXAWLVTVNVFMVTVFVNMNULOWJWLABPWNVHWPVPWNWJAJZBJVHWJABQXBVG
      BWIVGACVGAUDVNVTVEVFVNVSVBVDVKUTVAEUEUFUGUHTUIWOVOAWKVOBDVOBUDVFVTVMVNVFV
      SVLVDVAVCVKEUJUFUGUHTNROVHVPCDPUMWFVJWGVQWFVBBUNZCJVGDJBJZCJVJCBEUOXCXDCV
      BVDBDVAVCUTEUJUPTXDVICVGBDQTRWGVLAUNZDJVOCJAJZDJZVQADEUQXEXFDVLVDACVKUTVC
      EUEUPTXGVPCJZDJVQXFXHDVOACQTVPDCQUIRNWBABCDURUS $.
      $( [17-Jan-2006] $)

    $( The union of a chain (with respect to inclusion) of functions is a
       function. $)
    fununi $p |- ( A. f e. A ( Fun f /\ A. g e. A ( f C_ g \/ g C_ f ) ) ->
                 Fun U. A ) $=
      ( vx vy vz vw vv cv wfun wss wo wral wa wrel wcel wceq wi wal wex simprbi
      cuni cop funrel adantr ralimi reluni sylibr r19.28av ssel anim1d ax-4 a4s
      dffun4 3syl syl9r adantl anim2d jaod imp funeq sseq1 sseq2 orbi12d anbi2d
      anbi12d cbvral2v ralcom orcom syl5bb bitri anbi12i anidm anandir r19.26-2
      2ralbii bitr2i 3bitr3i eluni eeanv an4 ancom 2exbii 3bitr2i imbi1i 19.23v
      albii impexp 2albii bitr4i 3bitr3ri 3imtr4i alrimiv alrimivv syl sylanbrc
      r2al ) BIZJZWRCIZKZWTWRKZLZCAMZNZBAMZAUBZOZDIZEIZUCZXGPZXIFIZUCZXGPZNZXJX
      MQZRZFSZESDSZXGJXFWROZBAMXHXEYABAWSYAXDWRUDUEUFBAUGUHXFWSXCNZCAMZBAMZXTXE
      YCBAWSXCCAUIUFYDXSDEYDXRFGIZJZHIZJZNZYEYGKZYGYEKZLZNZHAMZGAMZXKYEPZXNYGPZ
      NZXQRZHAMZGAMZYDXRYNYTGAYMYSHAYIYLYSYIYJYSYKYHYJYSRYFYJYRXKYGPZYQNZYHXQYJ
      YPUUBYQYEYGXKUJUKYHUUCXQRZFSZESZDSZUUEUUDYHYGOUUGDEFYGUNUAUUFUUEDUUEEULUM
      UUDFULUOUPUQYFYKYSRYHYKYRYPXNYEPZNZYFXQYKYQUUHYPYGYEXNUJURYFUUIXQRZFSZESZ
      DSZUUKUUJYFYEOUUMDEFYEUNUAUULUUKDUUKEULUMUUJFULUOUPUEUSUTUFUFYDYDNYFYLNZH
      AMGAMZYHYLNZHAMGAMZNZYDYOYDUUOYDUUQYBUUNYFYEWTKZWTYEKZLZNBCGHAAWRYEQZWSYF
      XCUVAWRYEVAUVBXAUUSXBUUTWRYEWTVBWRYEWTVCVDVFWTYGQZUVAYLYFUVCUUSYJUUTYKWTY
      GYEVCWTYGYEVBVDVEVGYDYBBAMCAMUUQYBBCAAVHYBUUPWSYEWRKZWRYEKZLZNCBGHAAWTYEQ
      ZXCUVFWSXCXBXALUVGUVFXAXBVIUVGXBUVDXAUVEWTYEWRVBWTYEWRVCVDVJVEWRYGQZWSYHU
      VFYLWRYGVAUVHUVDYJUVEYKWRYGYEVCWRYGYEVBVDVFVGVKVLYDVMYOUUNUUPNZHAMGAMUURY
      MUVIGHAAYFYHYLVNVPUUNUUPGHAAVOVQVRXRYEAPZYGAPZNZYRNZHTZGTZXQRZUUAXPUVOXQX
      PYPUVJNZGTZYQUVKNZHTZNUVQUVSNZHTGTUVOXLUVRXOUVTGXKAVSHXNAVSVLUVQUVSGHVTUW
      AUVMGHUWAYRUVLNUVMYPUVJYQUVKWAYRUVLWBVKWCWDWEUVMXQRZHSZGSZUVNXQRZGSUUAUVP
      UWCUWEGUVMXQHWFWGUWDUVLYSRZHSGSUUAUWBUWFGHUVLYRXQWHWIYSGHAAWQWJUVNXQGWFWK
      VKWLWMWNWODEFXGUNWP $.
      $( [10-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of single-rooted sets
       is single-rooted.  (See ~ funcnv for "single-rooted" definition.) $)
    funcnvuni $p |- ( A. f e. A ( Fun `' f /\ A. g e. A ( f C_ g \/ g C_ f ) )
                    -> Fun `' U. A ) $=
      ( vy vx vz vw vv cv ccnv wfun wss wo wral wa wceq wrex wi wal wcel eqeq2d
      cab cnveq cbvrexv funeqd sseq1 sseq2 orbi12d ralbidv anbi12d rcla4v funeq
      biimprcd cnvss orim12i wb sseq12 ancoms syl5ibrcom exp3a syl6com rexlimdv
      cuni com23 alrimdv anim12ii syl5bi alrimiv df-ral vex eqeq1 rexbidv ralab
      elab anbi2i imbi12i albii bitr2i sylib fununi syl ciun cnvuni cnvex eqtri
      dfiun2 funeqi sylibr ) BIZJZKZWICIZLZWLWILZMZCANZOZBANZDIZEIZJZPZEAQZDUBZ
      VCZKZAVCJZKWRFIZKZXHGIZLZXJXHLZMZGXDNZOZFXDNZXFWRXHXAPZEAQZXIXJXAPZEAQZXM
      RZGSZOZRZFSZXPWRYDFXRXHHIZJZPZHAQWRYCXQYHEHAWTYFPXAYGXHWTYFUCUAUDWRYHYCHA
      YFATWRYGKZYFWLLZWLYFLZMZCANZOZYHYCRWQYNBYFAWIYFPZWKYIWPYMYOWJYGWIYFUCUEYO
      WOYLCAYOWMYJWNYKWIYFWLUFWIYFWLUGUHUIUJUKYIYHXIYMYBYHXIYIXHYGULUMYMYHYAGYM
      XTYHXMYMXSYHXMRZEAWTATYMYFWTLZWTYFLZMZXSYPRYLYSCWTAWLWTPYJYQYKYRWLWTYFUGW
      LWTYFUFUHUKYSXSYHXMYSXMXSYHOZYGXALZXAYGLZMYQUUAYRUUBYFWTUNWTYFUNUOYTXKUUA
      XLUUBYHXSXKUUAUPXHYGXJXAUQURXJXAXHYGUQUHUSUTVAVBVDVEVFVAVBVGVHXPXHXDTZXOR
      ZFSYEXOFXDVIUUDYDFUUCXRXOYCXCXRDXHFVJWSXHPXBXQEAWSXHXAVKVLVNXNYBXIXCXTXMG
      DWSXJPXBXSEAWSXJXAVKVLVMVOVPVQVRVSXDFGVTWAXGXEXGEAXAWBXEEAWCEDAXAWTEVJWDW
      FWEWGWH $.
      $( [11-Aug-2004] $)

    $( The union of a chain (with respect to inclusion) of one-to-one functions
       is a one-to-one function. $)
    fun11uni $p |- ( A. f e. A ( ( Fun f /\ Fun `' f ) /\
                   A. g e. A ( f C_ g \/ g C_ f ) ) ->
                   ( Fun U. A /\ Fun `' U. A ) ) $=
      ( cv wfun ccnv wa wo wral cuni simpl anim1i ralimi fununi simpr funcnvuni
      wss syl jca ) BDZEZTFEZGZTCDZQUDTQHCAIZGZBAIZAJZEZUHFEZUGUAUEGZBAIUIUFUKB
      AUCUAUEUAUBKLMABCNRUGUBUEGZBAIUJUFULBAUCUBUEUAUBOLMABCPRS $.
      $( [11-Aug-2004] $)
  $}

  ${
    $d x y F $.  $d x y G $.
    $( The intersection with a function is a function.  Exercise 14(a) of
       [Enderton] p. 53.  (The proof was shortened by Andrew Salmon,
       17-Sep-2011.) $)
    funin $p |- ( Fun F -> Fun ( F i^i G ) ) $=
      ( cin wss wfun wi inss1 funss ax-mp ) ABCZADAEJEFABGJAHI $.
      $( [18-Sep-2011] $) $( [19-Mar-2004] $)
  $}

  $( The restriction of a one-to-one function is one-to-one. $)
  funres11 $p |- ( Fun `' F -> Fun `' ( F |` A ) ) $=
    ( cres wss ccnv wfun wi resss cnvss funss mp2b ) BACZBDLEZBEZDNFMFGBAHLBIMN
    JK $.
    $( [25-Mar-1998] $)

  $( The converse of a restricted function. $)
  funcnvres $p |- ( Fun `' F -> `' ( F |` A ) = ( `' F |` ( F " A ) ) ) $=
    ( ccnv wfun cima cres cdm df-ima df-rn eqtri reseq2i wceq resss cnvss ax-mp
    crn wss funssres mpan2 syl5req ) BCZDZUABAEZFUABAFZCZGZFZUEUCUFUAUCUDPUFBAH
    UDIJKUBUEUAQZUGUELUDBQUHBAMUDBNOUAUERST $.
    $( [27-Mar-1998] $)

  $( Converse of a restricted identity function.  (Contributed by FL,
     4-Mar-2007.) $)
  cnvresid $p |- `' ( _I |` A ) = ( _I |` A ) $=
    ( cid ccnv wfun cres wceq cnvi eqcomi funi funeq mpbii ax-mp cima funcnvres
    imai reseq12i syl6eq ) BCZDZBAEZCZTFBRFZSRBGHUBBDSIBRJKLSUARBAMZETABNRBUCAG
    AOPQL $.
    $( [20-Feb-2007] $)

  $( The converse of a restriction of the converse of a function equals the
     function restricted to the image of its converse. $)
  funcnvres2 $p |- ( Fun F -> `' ( `' F |` A ) = ( F |` ( `' F " A ) ) ) $=
    ( wfun ccnv cres cima wceq funcnvcnv funcnvres syl wrel funrel dfrel2 sylib
    reseq1d eqtrd ) BCZBDZAEDZRDZRAFZEZBUAEQTCSUBGBHARIJQTBUAQBKTBGBLBMNOP $.
    $( [4-May-2005] $)

  $( The image of the preimage of a function. $)
  funimacnv $p |- ( Fun F -> ( F " ( `' F " A ) ) = ( A i^i ran F ) ) $=
    ( wfun ccnv cima cres crn cin funcnvres2 rneqd df-ima syl6reqr df-rn ineq2i
    cdm dmres dfdm4 3eqtr2ri syl6eq ) BCZBBDZAEZEZUAAFZDZGZABGZHZTUFBUBFZGUCTUE
    UIABIJBUBKLUHAUAOZHUDOUFUGUJABMNUAAPUDQRS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers a subclass of an image from a
     preimage subclass. $)
  funimass1 $p |- ( ( Fun F /\ A C_ ran F ) ->
                 ( ( `' F " A ) C_ B -> A C_ ( F " B ) ) ) $=
    ( ccnv cima wss wfun crn wa imass2 funimacnv wceq dfss biimpi eqcomd sseq1d
    cin sylan9eq syl5ib ) CDAEZBFCTEZCBEZFCGZACHZFZIZAUBFTBCJUFUAAUBUCUEUAAUDQZ
    AACKUEAUGUEAUGLAUDMNORPS $.
    $( [25-May-2004] $)

  $( A kind of contraposition law that infers an image subclass from a subclass
     of a preimage. $)
  funimass2 $p |- ( ( Fun F /\ A C_ ( `' F " B ) ) -> ( F " A ) C_ B ) $=
    ( ccnv cima wss wfun imass2 crn cin funimacnv sseq2d inss1 sstr2 mpi syl6bi
    imp sylan2 ) ACDBEZFCGZCAEZCSEZFZUABFZASCHTUCUDTUCUABCIZJZFZUDTUBUFUABCKLUG
    UFBFUDBUEMUAUFBNOPQR $.
    $( [4-May-2007] $) $( [25-May-2004] $)

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( The image of a difference is the difference of images. $)
    imadif $p |- ( Fun `' F ->
                 ( F " ( A \ B ) ) = ( ( F " A ) \ ( F " B ) ) ) $=
      ( vy vx cdif cima cv wcel wbr wa wex wn exbii wi wmo vex sylib wo elima2
      ccnv wfun anandir 19.40 sylbi wal ax-17 hbe1 hban funmo brcnv mobii sylan
      mopick con2d imnan alrimi ex exancom alnex 3imtr3g anim2d 19.29r sylan2br
      syl5 andi ianor anbi2i an32 pm3.24 intnan anass mtbir bitri 3bitr4i eldif
      biorfi impbid1 anbi1i notbii anbi12i 3bitr4g eqrdv ) CUAZUBZDCABFZGZCAGZC
      BGZFZWEEHZWFIZWKDHZCJZKZELZWMWHIZWMWIIZMZKZWMWGIWMWJIWEWKAIZWKBIZMZKZWNKZ
      ELZXAWNKZELZXBWNKZELZMZKZWPWTWEXFXLXFXHXCWNKZELZKZWEXLXFXGXMKZELXOXEXPEXA
      XCWNUCNXGXMEUDUEWEXNXKXHWEWNXCKZELZXIMZEUFZXNXKWEXRXTWEXRKZXSEWEXREWEEUGX
      QEUHUIYAXBWNMZOXSYAWNXBWEWNEPZXRWNXCOWEWMWKWDJZEPYCDEWDUJYDWNEWMWKCDQZEQU
      KULRWNXCEUNUMUOXBWNUPRUQURWNXCEUSXIEUTZVAVBVEXLXGXSKZELZXFXKXHXTYHYFXGXSE
      VCVDYGXEEXGXCYBSZKXGXCKZXGYBKZSZYGXEXGXCYBVFXSYIXGXBWNVGVHXEYJYLXAXCWNVIY
      KYJYKXAWNYBKZKYMXAWNVJVKXAWNYBVLVMVQVNVONRVRWOXEEWLXDWNWKABVPVSNWQXHWSXKE
      WMCAYETWRXJEWMCBYETVTWAWBEWMCWFYETWMWHWIVPWBWC $.
      $( [24-May-1998] $)
  $}

  $( The image of an intersection is the intersection of images.  (Contributed
     by Paul Chapman, 11-Apr-2009.) $)
  imain $p |- ( Fun `' F ->
                ( F " ( A i^i B ) ) = ( ( F " A ) i^i ( F " B ) ) ) $=
    ( ccnv wfun cdif cima cin imadif difeq2d eqtrd dfin4 imaeq2i 3eqtr4g ) CDEZ
    CAABFZFZGZCAGZSCBGZFZFZCABHZGSTHORSCPGZFUBAPCIOUDUASABCIJKUCQCABLMSTLN $.
    $( [11-Apr-2009] $)

  ${
    $d w B $.  $d x y z w A $.
    $( Axiom of Replacement using abbreviations.  Axiom 39(vi) of [Quine]
       p. 284.  Compare Exercise 9 of [TakeutiZaring] p. 29. $)
    funimaexg $p |- ( ( Fun A /\ B e. C ) -> ( A " B ) e. _V ) $=
      ( vw vx vy vz wcel wfun cima cvv cv wi imaeq2 eleq1d imbi2d wal wex bitri
      wceq cop wrel dffun5 simprbi wa wb ax-17 axrep4 isset dfima3 eqeq2i abeq2
      cab exbii sylibr syl vtoclg impcom ) BCHAIZABJZKHZUSADLZJZKHZMUSVAMDBCVBB
      TZVDVAUSVEVCUTKVBBANOPUSELZFLZUAAHZVGGLZTMFQGREQZVDUSAUBVJEFGAUCUDVJVGVIH
      VFVBHVHUEERZUFFQZGRZVDVHEFGDVHGUGUHVDVIVCTZGRVMGVCUIVNVLGVNVIVKFUMZTVLVCV
      OVIEFAVBUJUKVKFVIULSUNSUOUPUQUR $.
      $( [10-Sep-2006] $)
  $}

  ${
    zfrep5.1 $e |- B e. _V $.
    $( The image of a set under any function is also a set.  Equivalent of
       Axiom of Replacement ~ ax-rep .  Axiom 39(vi) of [Quine] p. 284.
       Compare Exercise 9 of [TakeutiZaring] p. 29. $)
    funimaex $p |- ( Fun A -> ( A " B ) e. _V ) $=
      ( wfun cvv wcel cima funimaexg mpan2 ) ADBEFABGEFCABEHI $.
      $( [17-Nov-2002] $)
  $}

  ${
    $d x z A $.  $d b x y z $.  $d z ph $.
    $( Part of a study of the Axiom of Replacement used by the Isabelle
       prover.  The object PrimReplace is apparently the image of the function
       encoded by ` ph ( x , y ) ` i.e. the class
       ` ( { <. x , y >. | ph } " A ) ` .  If so, we can prove Isabelle's
       "Axiom of Replacement" conclusion without using the Axiom of
       Replacement, for which I (N. Megill) currently have no explanation.
       (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    isarep1 $p |- ( b e. ( { <. x , y >. | ph } " A ) <->
                 E. x e. A [ b / y ] ph ) $=
      ( vz copab cima wcel wbr wrex wsbc vex elima df-br opelopabsb bitri ax-17
      cv cop rexbii hbs1 hbsb wceq sbequ12r sbbid cbvrex 3bitri ) ESZABCGZDHIFS
      ZUIUJJZFDKABUKLZCUILZFDKACUILZBDKFUIUJDEMNULUNFDULUKUITUJIUNUKUIUJOABCFEP
      QUAUNUOFBDUMCEBABFUBUCUOFRUKBSUDZUMACEUPCRAFBUEUFUGUH $.
      $( [18-Sep-2011] $) $( [26-Oct-2006] $)
  $}

  ${
    $d w x y A $.  $d b x y $.  $d y z $.  $d w ph $.  $d z ph $.
    isarep2.1 $e |- A e. _V $.
    isarep2.2 $e |- A. x e. A A. y A. z ( ( ph /\ [ z / y ] ph ) -> y = z ) $.
    $( Part of a study of the Axiom of Replacement used by the Isabelle
       prover.  In Isabelle, the sethood of PrimReplace is apparently
       postulated implicitly by its type signature " ` [ ` i, ` [ ` i, i ` ] `
       => o ` ] ` => i", which automatically asserts that it is a set without
       using any axioms.  To prove that it is a set in Metamath, we need the
       hypotheses of Isabelle's "Axiom of Replacement" as well as the Axiom of
       Replacement in the form ~ funimaex . $)
    isarep2 $p |- E. w w = ( { <. x , y >. | ph } " A ) $=
      ( copab cima cv wcel wa cvv cres resima resopab wmo wi wal imaeq1i eqtr3i
      wfun funopab wsbc wceq rspec ax-17 mo3 sylibr mpbir mpgbir funimaex ax-mp
      moanimv eqeltri isseti ) EABCIZFJZUSBKFLZAMZBCIZFJZNURFOZFJUSVCURFPVDVBFA
      BCFQUAUBVBUCZVCNLVEVACRZBVABCUDVFUTACRZSUTAACDKZUEMCKVHUFSDTCTZVGVIBFHUGA
      CDADUHUIUJUTACUOUKULVBFGUMUNUPUQ $.
      $( [26-Oct-2006] $)
  $}

  $( Equality theorem for function predicate with domain. $)
  fneq1 $p |- ( F = G -> ( F Fn A <-> G Fn A ) ) $=
    ( wceq wfun cdm wa wfn funeq dmeq eqeq1d anbi12d df-fn 3bitr4g ) BCDZBEZBFZ
    ADZGCEZCFZADZGBAHCAHOPSRUABCIOQTABCJKLBAMCAMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for function predicate with domain. $)
  fneq2 $p |- ( A = B -> ( F Fn A <-> F Fn B ) ) $=
    ( wceq wfun cdm wa wfn eqeq2 anbi2d df-fn 3bitr4g ) ABDZCEZCFZADZGNOBDZGCAH
    CBHMPQNABOIJCAKCBKL $.
    $( [1-Aug-1994] $)

  ${
    fneq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1d $p |- ( ph -> ( F Fn A <-> G Fn A ) ) $=
      ( wceq wfn wb fneq1 syl ) ACDFCBGDBGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq2d $p |- ( ph -> ( F Fn A <-> F Fn B ) ) $=
      ( wceq wfn wb fneq2 syl ) ABCFDBGDCGHEBCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq12d.1 $e |- ( ph -> F = G ) $.
    fneq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function predicate with domain. $)
    fneq12d $p |- ( ph -> ( F Fn A <-> G Fn B ) ) $=
      ( wfn fneq1d fneq2d bitrd ) ADBHEBHECHABDEFIABCEGJK $.
      $( [26-Jun-2011] $)
  $}

  ${
    fneq1i.1 $e |- F = G $.
    $( Equality inference for function predicate with domain.  (Contributed by
       Paul Chapman, 22-Jun-2011.) $)
    fneq1i $p |- ( F Fn A <-> G Fn A ) $=
      ( wceq wfn wb fneq1 ax-mp ) BCEBAFCAFGDABCHI $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    fneq2i.1 $e |- A = B $.
    $( Equality inference for function predicate with domain. $)
    fneq2i $p |- ( F Fn A <-> F Fn B ) $=
      ( wceq wfn wb fneq2 ax-mp ) ABECAFCBFGDABCHI $.
      $( [4-Sep-2011] $)
  $}

  ${
    $d y F $.  $d y A $.  $d x y $.
    hbfn.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfn.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for a function with domain. $)
    hbfn $p |- ( F Fn A -> A. x F Fn A ) $=
      ( wfn wfun cdm wceq wa df-fn hbfun hbdm hbeq hban hbxfrbi ) DCGDHZDIZCJZK
      ADCLRTAABDEMABBSCABDENFOPQ $.
      $( [30-Jan-2004] $)
  $}

  $( A function with domain is a function. $)
  fnfun $p |- ( F Fn A -> Fun F ) $=
    ( wfn wfun cdm wceq df-fn simplbi ) BACBDBEAFBAGH $.
    $( [1-Aug-1994] $)

  $( A function with domain is a relation. $)
  fnrel $p |- ( F Fn A -> Rel F ) $=
    ( wfn wfun wrel fnfun funrel syl ) BACBDBEABFBGH $.
    $( [1-Aug-1994] $)

  $( The domain of a function. $)
  fndm $p |- ( F Fn A -> dom F = A ) $=
    ( wfn wfun cdm wceq df-fn simprbi ) BACBDBEAFBAGH $.
    $( [2-Aug-1994] $)

  ${
    funfni.1 $e |- ( ( Fun F /\ B e. dom F ) -> ph ) $.
    $( Inference to convert a function and domain antecedent. $)
    funfni $p |- ( ( F Fn A /\ B e. A ) -> ph ) $=
      ( wfn wcel wa wfun cdm fnfun adantr fndm eleq2d biimpar syl2anc ) DBFZCBG
      ZHDIZCDJZGZAQSRBDKLQUARQTBCBDMNOEP $.
      $( [22-Apr-2004] $)
  $}

  $( A function has a unique domain. $)
  fndmu $p |- ( ( F Fn A /\ F Fn B ) -> A = B ) $=
    ( wfn cdm fndm sylan9req ) CADCBDACEBACFBCFG $.
    $( [11-Aug-1994] $)

  $( The first argument of binary relation on a function belongs to the
     function's domain. $)
  fnbr $p |- ( ( F Fn A /\ B F C ) -> B e. A ) $=
    ( wfn wbr cdm wcel wrel fnrel releldm sylan fndm eleq2d biimpa syldan ) DAE
    ZBCDFZBDGZHZBAHZQDIRTADJBCDKLQTUAQSABADMNOP $.
    $( [7-May-2004] $)

  $( The first argument of an ordered pair in a function belongs to the
     function's domain. $)
  fnop $p |- ( ( F Fn A /\ <. B , C >. e. F ) -> B e. A ) $=
    ( cop wcel wfn wbr df-br fnbr sylan2br ) BCEDFDAGBCDHBAFBCDIABCDJK $.
    $( [25-Mar-2007] $) $( [8-Aug-1994] $)

  ${
    $d x y F $.  $d x y B $.  $d x A $.
    $( There is exactly one value of a function.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    fneu $p |- ( ( F Fn A /\ B e. A ) -> E! y B F y ) $=
      ( vx cv wbr weu cdm wcel wfun wceq breq1 eubidv imbi2d wex vex eldm wmo
      wi funmo exmoeu2 syl5ib sylbi vtoclga impcom funfni ) CAFZDGZAHZBCDCDIZJD
      KZUJULEFZUHDGZAHZTZULUJTECUKUMCLZUOUJULUQUNUIAUMCUHDMNOUMUKJUNAPZUPAUMDEQ
      RULUNASURUOEADUAUNAUBUCUDUEUFUG $.
      $( [18-Sep-2011] $) $( [22-Apr-2004] $)

    $( There is exactly one value of a function. $)
    fneu2 $p |- ( ( F Fn A /\ B e. A ) -> E! y <. B , y >. e. F ) $=
      ( wfn wcel wa cv wbr weu cop fneu df-br eubii sylib ) DBECBFGCAHZDIZAJCPK
      DFZAJABCDLQRACPDMNO $.
      $( [7-Nov-1995] $)
  $}

  $( The union of two functions with disjoint domains. $)
  fnun $p |- ( ( ( F Fn A /\ G Fn B ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) Fn ( A u. B ) ) $=
    ( wfn wa cin c0 wceq cun wfun cdm wi df-fn ineq12 eqeq1d funun syl6bir dmun
    anbi2d uneq12 syl5eq jctird syl6ibr exp3a impcom an4s syl2anb imp ) CAEZDBE
    ZFABGZHIZCDJZABJZEZUJCKZCLZAIZFDKZDLZBIZFUMUPMZUKCANDBNUQUTUSVBVCUSVBFZUQUT
    FZVCVDVEUMUPVDVEUMFZUNKZUNLZUOIZFUPVDVFVGVIVDVFVEURVAGZHIZFVGVDVKUMVEVDVJUL
    HURAVABOPTCDQRVDVHURVAJUOCDSURAVABUAUBUCUNUONUDUEUFUGUHUI $.
    $( [22-Sep-2004] $)

  ${
    fnunop.x $e |- ( ph -> X e. _V ) $.
    fnunop.y $e |- ( ph -> Y e. _V ) $.
    fnunop.f $e |- ( ph -> F Fn D ) $.
    fnunop.g $e |- G = ( F u. { <. X , Y >. } ) $.
    fnunop.e $e |- E = ( D u. { X } ) $.
    fnunop.d $e |- ( ph -> -. X e. D ) $.
    $( Extension of a function with a new ordered pair. $)
    fnunsn $p |- ( ph -> G Fn E ) $=
      ( csn cun wfn cvv wcel syl2anc sylibr cop wa cin c0 wceq fnsng jca disjsn
      wn fnun fneq1i fneq2i bitri ) ADFGUANZOZBFNZOZPZECPZADBPZUNUPPZUBBUPUCUDU
      EZURAUTVAJAFQRGQRVAHIFGQQUFSUGAFBRUIVBMBFUHTBUPDUNUJSUSUOCPURCEUOKUKCUQUO
      LULUMT $.
      $( [30-Apr-2015] $) $( [28-Sep-2013] $)
  $}

  $( Composition of two functions. $)
  fnco $p |- ( ( F Fn A /\ G Fn B /\ ran G C_ A ) -> ( F o. G ) Fn B ) $=
    ( wfn crn wss w3a ccom wfun cdm wceq fnfun funco syl2an 3adant3 fndm sseq2d
    wa biimpar dmcosseq syl 3adant2 3ad2ant2 eqtrd df-fn sylanbrc ) CAEZDBEZDFZ
    AGZHZCDIZJZUMKZBLUMBEUHUIUNUKUHCJDJUNUIACMBDMCDNOPULUODKZBUHUKUOUPLZUIUHUKS
    UJCKZGZUQUHUSUKUHURAUJACQRTCDUAUBUCUIUHUPBLUKBDQUDUEUMBUFUG $.
    $( [22-May-2006] $)

  $( A function does not change when restricted to its domain. $)
  fnresdm $p |- ( F Fn A -> ( F |` A ) = F ) $=
    ( wfn wrel cdm wss cres wceq fnrel fndm eqimss syl relssres syl2anc ) BACZB
    DBEZAFZBAGBHABIOPAHQABJPAKLBAMN $.
    $( [5-Sep-2004] $)

  $( A function restricted to a class disjoint with its domain is empty. $)
  fnresdisj $p |- ( F Fn A -> ( ( A i^i B ) = (/) <-> ( F |` B ) = (/) ) ) $=
    ( cres c0 wceq cdm wfn wrel wb relres reldm0 ax-mp dmres incom eqtri ineq1d
    cin fndm syl5eq eqeq1d syl5rbb ) CBDZEFZUCGZEFZCAHZABRZEFUCIUDUFJCBKUCLMUGU
    EUHEUGUECGZBRZUHUEBUIRUJCBNBUIOPUGUIABACSQTUAUB $.
    $( [23-Sep-2004] $)

  $( Membership in two functions restricted by each other's domain. $)
  2elresin $p |- ( ( F Fn A /\ G Fn B ) ->
                 ( ( <. x , y >. e. F /\ <. x , z >. e. G ) <->
                   ( <. x , y >. e. ( F |` ( A i^i B ) ) /\
                     <. x , z >. e. ( G |` ( A i^i B ) ) ) ) ) $=
    ( wfn wa cv cop wcel cin cres fnop anim12i vex opres resss sseli wi 3imtr4i
    an4 elin anbi12d biimprd syl ex pm2.43d impbid1 ) FDHZGEHZIZAJZBJZKZFLZUNCJ
    ZKZGLZIZUPFDEMZNZLZUSGVBNZLZIZUMVAVGUMVAVAVGUAZUMVAIZUNVBLZVHUKUQIZULUTIZIU
    NDLZUNELZIVIVJVKVMVLVNDUNUOFOEUNURGOPUKULUQUTUCUNDEUDUBVJVGVAVJVDUQVFUTUNUO
    FVBBQRUNURGVBCQRUEUFUGUHUIVDUQVFUTVCFUPFVBSTVEGUSGVBSTPUJ $.
    $( [8-Aug-1994] $)

  $( Restriction of a function with a subclass of its domain. $)
  fnssresb $p |- ( F Fn A -> ( ( F |` B ) Fn B <-> B C_ A ) ) $=
    ( cres wfn wfun cdm wceq wa wss df-fn fnfun funres biantrurd ssdmres sseq2d
    syl fndm syl5bbr bitr3d syl5bb ) CBDZBEUBFZUBGBHZIZCAEZBAJZUBBKUFUDUEUGUFUC
    UDUFCFUCACLBCMQNUDBCGZJUFUGBCOUFUHABACRPSTUA $.
    $( [10-Oct-2007] $)

  $( Restriction of a function with a subclass of its domain. $)
  fnssres $p |- ( ( F Fn A /\ B C_ A ) -> ( F |` B ) Fn B ) $=
    ( wfn cres wss fnssresb biimpar ) CADCBEBDBAFABCGH $.
    $( [25-Sep-2004] $) $( [2-Aug-1994] $)

  $( Restriction of a function's domain with an intersection. $)
  fnresin1 $p |- ( F Fn A -> ( F |` ( A i^i B ) ) Fn ( A i^i B ) ) $=
    ( wfn cin wss cres inss1 fnssres mpan2 ) CADABEZAFCKGKDABHAKCIJ $.
    $( [9-Aug-1994] $)

  $( Restriction of a function's domain with an intersection. $)
  fnresin2 $p |- ( F Fn A -> ( F |` ( B i^i A ) ) Fn ( B i^i A ) ) $=
    ( wfn cin wss cres inss2 fnssres mpan2 ) CADBAEZAFCKGKDBAHAKCIJ $.
    $( [9-Aug-1994] $)

  ${
    $d x y A $.  $d x y F $.
    $( An equivalence for functionality of a restriction.  Compare ~ dffun8 .
       (Contributed by Mario Carneiro, 20-May-2015.) $)
    fnres $p |- ( ( F |` A ) Fn A <-> A. x e. A E! y x F y ) $=
      ( cres wfun cdm wa cv wbr wmo wral ancom wal mpbiran wcel vex wss 3bitr4i
      bitri wceq wex wfn wrel relres dffun6 wi brres mobii moanimv albii df-ral
      weu bitr4i dmres inss1 eqsstri eqss dfss3 eleq2i elin baib syl6bb ralbiia
      cin eldm 3bitri anbi12i r19.26 df-fn eu5 ralbii ) DCEZFZVMGZCUAZHZAIZBIZD
      JZBUBZVTBKZHZACLZVMCUCVTBUMZACLWBACLZWAACLZHWGWFHVQWDWFWGMVNWFVPWGVNVRVSV
      MJZBKZANZWFVNVMUDWJDCUEABVMUFOWJVRCPZWBUGZANWFWIWLAWIWKVTHZBKWLWHWMBWHVTW
      KHWMVRVSDCBQUHVTWKMTUIWKVTBUJTUKWBACULUNTVPCVORZVRVOPZACLWGVPVOCRWNVOCDGZ
      VEZCDCUOZCWPUPUQVOCUROACVOUSWOWAACWKWOVRWPPZWAWOWKWSWOVRWQPWKWSHVOWQVRWRU
      TVRCWPVATVBBVRDAQVFVCVDVGVHWAWBACVISVMCVJWEWCACVTBVKVLS $.
      $( [20-May-2015] $)
  $}

  $( Functionality and domain of restricted identity. $)
  fnresi $p |- ( _I |` A ) Fn A $=
    ( cid cres wfn wfun cdm wceq funi funres ax-mp dmresi df-fn mpbir2an ) BACZ
    ADNEZNFAGBEOHABIJAKNALM $.
    $( [27-Aug-2004] $)

  $( The image of a function's domain is its range.  (The proof was shortened
     by Andrew Salmon, 17-Sep-2011.) $)
  fnima $p |- ( F Fn A -> ( F " A ) = ran F ) $=
    ( wfn cima cres crn df-ima fnresdm rneqd syl5eq ) BACZBADBAEZFBFBAGKLBABHIJ
    $.
    $( [18-Sep-2011] $) $( [4-Nov-2004] $)

  ${
    $d x y F $.
    $( A function with empty domain is empty.  (The proof was shortened by
       Andrew Salmon, 17-Sep-2011.) $)
    fn0 $p |- ( F Fn (/) <-> F = (/) ) $=
      ( wfn wceq wrel cdm fnrel fndm reldm0 biimpar syl2anc wfun fun0 dm0 df-fn
      c0 mpbir2an fneq1 mpbiri impbii ) AOBZAOCZTADZAEOCZUAOAFOAGUBUAUCAHIJUATO
      OBZUDOKOEOCLMOONPOAOQRS $.
      $( [18-Sep-2011] $) $( [15-Apr-1998] $)
  $}

  $( A class that is disjoint with the domain of a function has an empty image
     under the function.  (Contributed by FL, 24-Jan-2007.) $)
  fnimadisj $p |- ( ( F Fn A /\ ( A i^i C ) = (/) ) -> ( F " C ) = (/) ) $=
    ( wfn cin c0 wceq wa cdm cima fndm ineq1d eqeq1d biimpar imadisj sylibr ) C
    ADZABEZFGZHCIZBEZFGZCBJFGQUBSQUARFQTABACKLMNCBOP $.
    $( [23-Jan-2007] $)

  $( Images under a function never map nonempty sets to empty sets.
     _EDITORIAL_: usable in ~ fnwe2lem2 .  (Contributed by Stefan O'Rear,
     21-Jan-2015.) $)
  fnimaeq0 $p |- ( ( F Fn A /\ B C_ A ) ->
      ( ( F " B ) = (/) <-> B = (/) ) ) $=
    ( cima c0 wceq cdm cin wfn wa imadisj incom fndm sseq2d biimpar df-ss sylib
    wss syl5eq eqeq1d syl5bb ) CBDEFCGZBHZEFCAIZBARZJZBEFCBKUFUCBEUFUCBUBHZBUBB
    LUFBUBRZUGBFUDUHUEUDUBABACMNOBUBPQSTUA $.
    $( [21-Jan-2015] $)

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    iunfopab.1 $e |- B e. _V $.
    $( Two ways to express a function as a class of ordered pairs.  (The proof
       was shortened by Andrew Salmon, 17-Sep-2011.)  (Unnecessary distinct
       variable restrictions were removed by David Abernethy, 19-Sep-2011.) $)
    iunfopab $p |- U_ x e. A { <. x , B >. }
                    = { <. x , y >. | ( x e. A /\ y = B ) } $=
      ( vz cv cop csn wcel wrex cab wceq wa wex ciun copab df-rex elsn exbii
      anbi2i opeq2 eqeq2d anbi2d ceqsexv 3bitr2i bitri df-iun df-opab 3eqtr4i
      an13 abbii ) FGZAGZDHZIZJZACKZFLUMUNBGZHZMZUNCJZUSDMZNZNZBOZAOZFLACUPPVDA
      BQURVGFURVBUQNZAOVGUQACRVHVFAVHVBUMUOMZNZVCVBVANZNZBOVFUQVIVBFUOSUAVKVJBD
      EVCVAVIVBVCUTUOUMUSDUNUBUCUDUEVLVEBVCVBVAUKTUFTUGULAFCUPUHVDABFUIUJ $.
      $( [19-Dec-2008] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d x y z w $.
    fnopabg.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopabg $p |- ( A. x e. A E! y ph <-> F Fn A ) $=
      ( vz vw weu wral wfn cv wcel wa wceq wmo wi sylibr syl ax-17 wfun cdm wal
      copab hbra1 ra4 eumo imim2i moanimv alrimi funopab wex euex dmopab3 sylib
      ralimi df-fn sylanbrc fneq1i hbopab1 hbxfreq hbfn cop fneu2 hbopab2 opeq2
      hbel eleq1d cbveu eleq2i opabid bitri eubii euanv simprbi ralrimi impbii
      ex ) ACIZBDJZEDKZVTBLZDMZANZBCUDZDKZWAVTWEUAZWEUBDOZWFVTWDCPZBUCWGVTWIBVS
      BDUEVTWCVSQZWIVSBDUFWJWCACPZQWIVSWKWCACUGUHWCACUIRSUJWDBCUKRVTACULZBDJWHV
      SWLBDACUMUPABCDUNUOWEDUQURDEWEFUSRWAVSBDBGDEBGEWEFWDBCGUTVAGLZDMBTVBWAWCV
      SWAWCNZWBCLZVCZEMZCIZVSWNWBWMVCZEMZGIWRGDWBEVDWTWQGCCHGWSEHLWSMCTCGEWEFWD
      BCGVEVAVGWQGTWMWOOWSWPEWMWOWBVFVHVIUOWRWCVSWRWDCIWCVSNWQWDCWQWPWEMWDEWEWP
      FVJWDBCVKVLVMWCACVNVLVOSVRVPVQ $.
      $( [30-Jan-2004] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2g.1 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab2g $p |- ( A. x e. A B e. _V <-> F Fn A ) $=
      ( cvv wcel wral cv wceq weu wfn eueq ralbii fnopabg bitri ) DGHZACIBJDKZB
      LZACIECMRTACBDNOSABCEFPQ $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fnopab.1 $e |- ( x e. A -> E! y ph ) $.
    fnopab.2 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab $p |- F Fn A $=
      ( weu wral wfn rgen fnopabg mpbi ) ACHZBDIEDJNBDFKABCDEGLM $.
      $( [5-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fnopab2.1 $e |- B e. _V $.
    fnopab2.2 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Functionality and domain of an ordered-pair class abstraction. $)
    fnopab2 $p |- F Fn A $=
      ( cv wceq weu wcel eueq1 a1i fnopab ) BHDIZABCEOBJAHCKBDFLMGN $.
      $( [29-Jan-2004] $)

    $( Domain of an ordered-pair class abstraction that specifies a
       function. $)
    dmopab2 $p |- dom F = A $=
      ( wfn cdm wceq fnopab2 fndm ax-mp ) ECHEICJABCDEFGKCELM $.
      $( [6-Sep-2005] $)
  $}

  $( Equality theorem for functions. $)
  feq1 $p |- ( F = G -> ( F : A --> B <-> G : A --> B ) ) $=
    ( wceq wfn crn wss wa wf fneq1 rneq sseq1d anbi12d df-f 3bitr4g ) CDEZCAFZC
    GZBHZIDAFZDGZBHZIABCJABDJQRUATUCACDKQSUBBCDLMNABCOABDOP $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions. $)
  feq2 $p |- ( A = B -> ( F : A --> C <-> F : B --> C ) ) $=
    ( wceq wfn crn wss wa wf fneq2 anbi1d df-f 3bitr4g ) ABEZDAFZDGCHZIDBFZQIAC
    DJBCDJOPRQABDKLACDMBCDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions. $)
  feq3 $p |- ( A = B -> ( F : C --> A <-> F : C --> B ) ) $=
    ( wceq wfn crn wss wa wf sseq2 anbi2d df-f 3bitr4g ) ABEZDCFZDGZAHZIPQBHZIC
    ADJCBDJORSPABQKLCADMCBDMN $.
    $( [1-Aug-1994] $)

  $( Equality theorem for functions.  (Contributed by FL, 14-Jul-2007.)  (The
     proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
  feq23 $p |- ( ( A = C /\ B = D ) -> ( F : A --> B <-> F : C --> D ) ) $=
    ( wceq wf feq2 feq3 sylan9bb ) ACFABEGCBEGBDFCDEGACBEHBDCEIJ $.
    $( [18-Sep-2011] $) $( [14-Jul-2007] $)

  ${
    feq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for functions. $)
    feq1d $p |- ( ph -> ( F : A --> B <-> G : A --> B ) ) $=
      ( wceq wf wb feq1 syl ) ADEGBCDHBCEHIFBCDEJK $.
      $( [19-Feb-2008] $)
  $}

  ${
    feq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq2d $p |- ( ph -> ( F : A --> C <-> F : B --> C ) ) $=
      ( wceq wf wb feq2 syl ) ABCGBDEHCDEHIFBCDEJK $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq12d.1 $e |- ( ph -> F = G ) $.
    feq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq12d $p |- ( ph -> ( F : A --> C <-> G : B --> C ) ) $=
      ( wf feq1d feq2d bitrd ) ABDEIBDFICDFIABDEFGJABCDFHKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    feq1i.1 $e |- F = G $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq1i $p |- ( F : A --> B <-> G : A --> B ) $=
      ( wceq wf wb feq1 ax-mp ) CDFABCGABDGHEABCDIJ $.
      $( [4-Sep-2011] $) $( [22-Jun-2011] $)
  $}

  ${
    feq2i.1 $e |- A = B $.
    $( Equality inference for functions. $)
    feq2i $p |- ( F : A --> C <-> F : B --> C ) $=
      ( wceq wf wb feq2 ax-mp ) ABFACDGBCDGHEABCDIJ $.
      $( [5-Sep-2011] $)
  $}

  ${
    feq23i.1 $e |- A = C $.
    feq23i.2 $e |- B = D $.
    $( Equality inference for functions.  (Contributed by Paul Chapman,
       22-Jun-2011.) $)
    feq23i $p |- ( F : A --> B <-> F : C --> D ) $=
      ( wceq wf wb feq23 mp2an ) ACHBDHABEICDEIJFGABCDEKL $.
      $( [22-Jun-2011] $)
  $}

  ${
    feq23d.1 $e |- ( ph -> A = C ) $.
    feq23d.2 $e |- ( ph -> B = D ) $.
    $( Equality deduction for functions. $)
    feq23d $p |- ( ph -> ( F : A --> B <-> F : C --> D ) ) $=
      ( wceq wf wb feq23 syl2anc ) ABDICEIBCFJDEFJKGHBCDEFLM $.
      $( [8-Jun-2013] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a mapping. $)
    hbf $p |- ( F : A --> B -> A. x F : A --> B ) $=
      ( wf wfn crn wss wa df-f hbfn hbrn hbss hban hbxfrbi ) CDEIECJZEKZDLZMACD
      ENTUBAABCEFGOABUADABEFPHQRS $.
      $( [29-Jan-2004] $)
  $}

  ${
    elimf.1 $e |- G : A --> B $.
    $( Eliminate a mapping hypothesis for the weak deduction theorem ~ dedth ,
       when a special case ` G : A --> B ` is provable, in order to convert
       ` F : A --> B ` from a hypothesis to an antecedent. $)
    elimf $p |- if ( F : A --> B , F , G ) : A --> B $=
      ( wf cif feq1 elimhyp ) ABCFZABJCDGZFABDFCDABCKHABDKHEI $.
      $( [24-Aug-2006] $)
  $}

  $( A mapping is a function. $)
  ffn $p |- ( F : A --> B -> F Fn A ) $=
    ( wf wfn crn wss df-f simplbi ) ABCDCAECFBGABCHI $.
    $( [2-Aug-1994] $)

  $( Any function is a mapping into ` _V ` .  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  dffn2 $p |- ( F Fn A <-> F : A --> _V ) $=
    ( wfn crn cvv wss wa wf ssv biantru df-f bitr4i ) BACZMBDZEFZGAEBHOMNIJAEBK
    L $.
    $( [18-Sep-2011] $) $( [31-Oct-1995] $)

  $( A mapping is a function. $)
  ffun $p |- ( F : A --> B -> Fun F ) $=
    ( wf wfn wfun ffn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( A mapping is a relation. $)
  frel $p |- ( F : A --> B -> Rel F ) $=
    ( wf wfn wrel ffn fnrel syl ) ABCDCAECFABCGACHI $.
    $( [3-Aug-1994] $)

  $( The domain of a mapping. $)
  fdm $p |- ( F : A --> B -> dom F = A ) $=
    ( wf wfn cdm wceq ffn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [2-Aug-1994] $)

  ${
    fdmi.1 $e |- F : A --> B $.
    $( The domain of a mapping. $)
    fdmi $p |- dom F = A $=
      ( wf cdm wceq fdm ax-mp ) ABCECFAGDABCHI $.
      $( [28-Jul-2008] $)
  $}

  $( The range of a mapping. $)
  frn $p |- ( F : A --> B -> ran F C_ B ) $=
    ( wf wfn crn wss df-f simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( A function maps to its range. $)
  dffn3 $p |- ( F Fn A <-> F : A --> ran F ) $=
    ( wfn crn wss wa wf ssid biantru df-f bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJK
    $.
    $( [1-Sep-1999] $)

  $( Expanding the codomain of a mapping.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.) $)
  fss $p |- ( ( F : A --> B /\ B C_ C ) -> F : A --> C ) $=
    ( wss wf wfn crn wa sstr2 com12 anim2d df-f 3imtr4g impcom ) BCEZABDFZACDFZ
    PDAGZDHZBEZISTCEZIQRPUAUBSUAPUBTBCJKLABDMACDMNO $.
    $( [18-Sep-2011] $) $( [10-May-1998] $)

  $( Composition of two mappings.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.) $)
  fco $p |- ( ( F : B --> C /\ G : A --> B ) -> ( F o. G ) : A --> C ) $=
    ( wfn crn wss wa ccom wf wi fnco 3expib adantr rncoss sstr mpan adantl df-f
    jctird imp anbi12i 3imtr4i ) DBFZDGZCHZIZEAFZEGBHZIZIDEJZAFZULGZCHZIZBCDKZA
    BEKZIACULKUHUKUPUHUKUMUOUEUKUMLUGUEUIUJUMBADEMNOUGUOUEUNUFHUGUODEPUNUFCQRSU
    AUBUQUHURUKBCDTABETUCACULTUD $.
    $( [18-Sep-2011] $) $( [29-Aug-1999] $)

  $( Functionality of a composition with weakened out of domain condition on
     the first argument.  (Contributed by Stefan O'Rear, 11-Mar-2015.) $)
  fco2 $p |- ( ( ( F |` B ) : B --> C /\ G : A --> B ) ->
      ( F o. G ) : A --> C ) $=
    ( cres wf wa ccom fco wceq crn wss frn cores syl adantl feq1d mpbid ) BCDBF
    ZGZABEGZHZACTEIZGACDEIZGABCTEJUCACUDUEUBUDUEKZUAUBELBMUFABENDEBOPQRS $.
    $( [11-Mar-2015] $)

  $( A mapping is a class of ordered pairs.  (The proof was shortened by Andrew
     Salmon, 17-Sep-2011.) $)
  fssxp $p |- ( F : A --> B -> F C_ ( A X. B ) ) $=
    ( wf cdm crn cxp wss wceq fdm eqimss syl xpss12 syl2anc wrel frel relssdmrn
    frn wi sstr2 3syl mpd ) ABCDZCEZCFZGZABGZHZCUGHZUCUDAHZUEBHUHUCUDAIUJABCJUD
    AKLABCRUDAUEBMNUCCOCUFHUHUISABCPCQCUFUGTUAUB $.
    $( [18-Sep-2011] $) $( [3-Aug-1994] $)

  $( A function with bounded domain and range is a set.  This version of ~ fex
     is proven without the Axiom of Replacement.  (Contributed by Mario
     Carneiro, 24-Jun-2015.) $)
  fex2 $p |- ( ( F : A --> B /\ A e. V /\ B e. W ) -> F e. _V ) $=
    ( wf wcel w3a cxp wss cvv fssxp 3ad2ant1 xpexg 3adant1 ssexg syl2anc ) ABCF
    ZADGZBEGZHCABIZJZUAKGZCKGRSUBTABCLMSTUCRABDENOCUAKPQ $.
    $( [24-Jun-2015] $)

  $( Two ways of specifying a partial function from ` A ` to ` B ` . $)
  funssxp $p |- ( ( Fun F /\ F C_ ( A X. B ) ) <->
             ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wfun cxp wss wa cdm wf wfn funfn biimpi rnss rnxpss syl6ss anim12i sylibr
    crn df-f jca dmss dmxpss adantl ffun adantr fssxp xpss1 sylan9ss impbii ) C
    DZCABEZFZGZCHZBCIZUNAFZGZUMUOUPUMCUNJZCRZBFZGUOUJURULUTUJURCKLULUSUKRBCUKMA
    BNOPUNBCSQULUPUJULUNUKHACUKUAABUBOUCTUQUJULUOUJUPUNBCUDUEUOUPCUNBEUKUNBCUFU
    NABUGUHTUI $.
    $( [13-Nov-2007] $)

  $( A mapping is a partial function. $)
  ffdm $p |- ( F : A --> B -> ( F : dom F --> B /\ dom F C_ A ) ) $=
    ( wf cdm wss fdm feq2d ibir wceq eqimss syl jca ) ABCDZCEZBCDZOAFZNPNOABCAB
    CGZHINOAJQROAKLM $.
    $( [25-Nov-2007] $)

  $( The members of an ordered pair element of a mapping belong to the
     mapping's domain and codomain.  (Revised by Mario Carneiro,
     26-Apr-2015.) $)
  opelf $p |- ( ( F : A --> B /\ <. C , D >. e. F ) ->
              ( C e. A /\ D e. B ) ) $=
    ( wf cop wcel wa cxp fssxp sseld opelxp syl6ib imp ) ABEFZCDGZEHZCAHDBHIZPR
    QABJZHSPETQABEKLCDABMNO $.
    $( [26-Apr-2015] $) $( [10-Dec-2003] $)

  $( The union of two functions with disjoint domains. $)
  fun $p |- ( ( ( F : A --> C /\ G : B --> D ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) : ( A u. B ) --> ( C u. D ) ) $=
    ( cin c0 wceq wf wa cun wfn crn wss fnun expcom wi rnun df-f unss12 anim12d
    syl5eqss a1i anbi12i an4 bitri 3imtr4g impcom ) ABGHIZACEJZBDFJZKZABLZCDLZE
    FLZJZUJEAMZFBMZKZENZCOZFNZDOZKZKZUPUNMZUPNZUOOZKUMUQUJUTVGVEVIUTUJVGABEFPQV
    EVIRUJVEVHVAVCLUOEFSVACVCDUAUCUDUBUMURVBKZUSVDKZKVFUKVJULVKACETBDFTUEURVBUS
    VDUFUGUNUOUPTUHUI $.
    $( [22-Sep-2004] $)

  $( The union of two functions with disjoint domains.  (Contributed by Mario
     Carneiro, 12-Mar-2015.) $)
  fun2 $p |- ( ( ( F : A --> C /\ G : B --> C ) /\ ( A i^i B ) = (/) ) ->
             ( F u. G ) : ( A u. B ) --> C ) $=
    ( wf wa cin c0 wceq cun fun wb unidm feq3 ax-mp sylib ) ACDFBCEFGABHIJGABKZ
    CCKZDEKZFZRCTFZABCCDELSCJUAUBMCNSCRTOPQ $.
    $( [22-Sep-2004] $)

  $( Composition of two functions. $)
  fnfco $p |- ( ( F Fn A /\ G : B --> A ) -> ( F o. G ) Fn B ) $=
    ( wf wfn crn wss wa ccom df-f fnco 3expb sylan2b ) BADECAFZDBFZDGAHZICDJBFZ
    BADKOPQRABCDLMN $.
    $( [22-May-2006] $)

  $( Restriction of a function with a subclass of its domain. $)
  fssres $p |- ( ( F : A --> B /\ C C_ A ) -> ( F |` C ) : C --> B ) $=
    ( wf wss cres wfn crn df-f fnssres resss rnss ax-mp sstr mpan anim12i an32s
    wa sylanb sylibr ) ABDEZCAFZSDCGZCHZUDIZBFZSZCBUDEUBDAHZDIZBFZSUCUHABDJUIUC
    UKUHUIUCSUEUKUGACDKUFUJFZUKUGUDDFULDCLUDDMNUFUJBOPQRTCBUDJUA $.
    $( [23-Sep-2004] $)

  $( Restriction of a restricted function with a subclass of its domain. $)
  fssres2 $p |- ( ( ( F |` A ) : A --> B /\ C C_ A ) ->
                ( F |` C ) : C --> B ) $=
    ( cres wf wss wa fssres wb resabs1 feq1d adantl mpbid ) ABDAEZFZCAGZHCBOCEZ
    FZCBDCEZFZABCOIQSUAJPQCBRTDCAKLMN $.
    $( [21-Jul-2005] $)

  $( If two functions agree on their common domain, express their union as a
     union of three functions with pairwise disjoint domains.  (Contributed by
     Stefan O'Rear, 9-Oct-2014.) $)
  resasplit $p |- ( ( F Fn A /\ G Fn B /\
      ( F |` ( A i^i B ) ) = ( G |` ( A i^i B ) ) ) -> ( F u. G ) =
  ( ( F |` ( A i^i B ) ) u. ( ( F |` ( A \ B ) ) u. ( G |` ( B \ A ) ) ) ) ) $=
    ( wfn cin cres w3a cun fnresdm uneq12 syl2an inundif reseq2i resundi eqtr3i
    wceq cdif uneq1i syl6eq 3adant3 simp3 uneq1d uneq2d incom eqtri uneq12i un4
    syl6reqr unidm eqtr3d ) CAEZDBEZCABFZGZDUNGZQZHZCAGZDBGZIZCDIZUOCABRZGZDBAR
    ZGZIZIZULUMVAVBQZUQULUSCQUTDQVIUMACJBDJUSCUTDKLUAURVAUOUOIZVGIZVHURVAUOVDIZ
    UOVFIZIZVKURVNVLUPVFIZIVAURVMVOVLURUOUPVFULUMUQUBUCUDUSVLUTVOCUNVCIZGUSVLVP
    ACABMNCUNVCOPDUNVEIZGUTVOVQBDVQBAFZVEIBUNVRVEABUESBAMUFNDUNVEOPUGUIUOVDUOVF
    UHTVJUOVGUOUJSTUK $.
    $( [9-Oct-2014] $)

  $( The union of two functions which agree on their common domain is a
     function.  (Contributed by Stefan O'Rear, 9-Oct-2014.) $)
  fresaun $p |- ( ( F : A --> C /\ G : B --> C /\
      ( F |` ( A i^i B ) ) = ( G |` ( A i^i B ) ) ) ->
    ( F u. G ) : ( A u. B ) --> C ) $=
    ( wf cin cres wceq cdif cun c0 wss fssres sylancl difss disjdif 3eqtri fun2
    a1i w3a simp1 inss1 simp2 indifdir difeq1i 0dif syl21anc inass ineq2i incom
    indi in0 ineq1i eqtri uneq12i un0 wfn id resasplit syl3an feq1d un12 uneq1i
    ffn inundif uneq2i undif1 feq2i syl6rbbr mpbid ) ACDFZBCEFZDABGZHZEVNHIZUAZ
    VNABJZBAJZKZKZCVODVRHZEVSHZKZKZFZABKZCDEKZFZVQVNCVOFZVTCWDFZVNVTGZLIZWFVQVL
    VNAMWJVLVMVPUBZABUCACVNDNOVQVRCWBFZVSCWCFZVRVSGZLIZWKVQVLVRAMWOWNABPACVRDNO
    VQVMVSBMWPVLVMVPUDBAPBCVSENOWRVQWQAVSGZBVSGZJLWTJLABVSUEWSLWTABQZUFWTUGRTVR
    VSCWBWCSUHWMVQWLVNVRGZVNVSGZKLLKLVNVRVSULXBLXCLXBABVRGZGALGLABVRUIXDLABAQUJ
    AUMRXCBAGZVSGZLVNXEVSABUKZUNXFBWSGBLGLBAVSUIWSLBXAUJBUMRUOUPLUQRTVNVTCVOWDS
    UHVQWIWGCWEFWFVQWGCWHWEVLDAURVMEBURVPVPWHWEIACDVEBCEVEVPUSABDEUTVAVBWAWGCWE
    WAVRVNVSKZKVRBKWGVNVRVSVCXHBVRXHXEVSKBVNXEVSXGVDBAVFUOVGABVHRVIVJVK $.
    $( [9-Oct-2014] $)

  $( From the union of two functions that agree on the domain overlap, either
     component can be recovered by restriction.  (Contributed by Stefan O'Rear,
     9-Oct-2014.) $)
  fresaunres2 $p |- ( ( F : A --> C /\ G : B --> C /\
      ( F |` ( A i^i B ) ) = ( G |` ( A i^i B ) ) ) ->
    ( ( F u. G ) |` B ) = G ) $=
    ( wf cin cres wceq cun cdif wfn ffn resundir wss ax-mp c0 cdm eqtri syl5eq
    w3a id resasplit syl3an reseq1d inss2 resabs2 uneq12i ineq2i disjdif ineq1i
    dmres inass inss1 0ss eqssi 3eqtr3i wrel wb relres reldm0 mpbir difss simp3
    uneq2i uneq1d wa uncom un0 resundi incom uneq1i inundif reseq2i fnresdm syl
    adantl syl5eqr 3adant3 eqtrd ) ACDFZBCEFZDABGZHZEWCHZIZUAZDEJZBHWDDABKZHZEB
    AKZHZJZJZBHZEWGWHWNBWADALWBEBLZWFWFWHWNIACDMBCEMZWFUBABDEUCUDUEWGWOWDBHZWMB
    HZJZEWDWMBNWGWTWDWJBHZWLBHZJZJZEWRWDWSXCWCBOWRWDIABUFDWCBUGPWJWLBNUHWGXDWDQ
    WLJZJZEXCXEWDXAQXBWLXAQIZXARZQIZXHBWJRZGZQWJBULXKBWIDRZGZGZQXJXMBDWIULUIBWI
    GZXLGQXLGZXNQXOQXLBAUJUKBWIXLUMXPQQXLUNXPUOUPUQSSXAURXGXIUSWJBUTXAVAPVBWKBO
    XBWLIBAVCEWKBUGPUHVEWGXFWEXEJZEWGWDWEXEWAWBWFVDVFWAWBXQEIWFWAWBVGZXQWEWLJZE
    XEWLWEXEWLQJWLQWLVHWLVISVEXRXSEWCWKJZHZEEWCWKVJXRYAEBHZEXTBEXTBAGZWKJBWCYCW
    KABVKVLBAVMSVNWBYBEIZWAWBWPYDWQBEVOVPVQTVRTVSVTTTTVT $.
    $( [9-Oct-2014] $)

  $( From the union of two functions that agree on the domain overlap, either
     component can be recovered by restriction.  (Contributed by Mario
     Carneiro, 16-Feb-2015.) $)
  fresaunres1 $p |- ( ( F : A --> C /\ G : B --> C /\
      ( F |` ( A i^i B ) ) = ( G |` ( A i^i B ) ) ) ->
    ( ( F u. G ) |` A ) = F ) $=
    ( wf cin cres w3a cun uncom reseq1i incom reseq2i eqeq12i eqcom fresaunres2
    wceq bitri 3com12 syl3an3b syl5eq ) ACDFZBCEFZDABGZHZEUEHZRZIDEJZAHEDJZAHZD
    UIUJADEKLUHUCUDEBAGZHZDULHZRZUKDRZUHUNUMRUOUFUNUGUMUEULDABMZNUEULEUQNOUNUMP
    SUDUCUOUPBACEDQTUAUB $.
    $( [16-Feb-2015] $)

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( Composition of a mapping and restricted identity.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fcoi1 $p |- ( F : A --> B -> ( F o. ( _I |` A ) ) = F ) $=
      ( wf wfn cid cres ccom wceq ffn wfun cdm wa df-fn wss eqimss ccnv reseq1i
      cnvi syl cnveqi cnvresid eqtr2i coeq2i cores2 syl5eq wrel sylan9eqr sylbi
      funrel coi1 ) ABCDCAEZCFAGZHZCIZABCJULCKZCLZAIZMUOCANURUPUNCFHZCURUQAOZUN
      USIUQAPUTUNCFQZAGZQZHUSUMVCCVCUMQUMVBUMVAFASRUAAUBUCUDCFAUEUFTUPCUGUSCICU
      JCUKTUHUIT $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)

    $( Composition of restricted identity and a mapping.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fcoi2 $p |- ( F : A --> B -> ( ( _I |` B ) o. F ) = F ) $=
      ( wf wfn crn wss wa cid cres ccom wceq df-f cores wrel coi2 syl sylan9eqr
      fnrel sylbi ) ABCDCAEZCFBGZHIBJCKZCLABCMUBUAUCICKZCICBNUACOUDCLACSCPQRT
      $.
      $( [18-Sep-2011] $) $( [13-Dec-2003] $)
  $}

  ${
    $d y F $.  $d y A $.  $d y B $.  $d y C $.
    $( There is exactly one value of a function in its codomain. $)
    feu $p |- ( ( F : A --> B /\ C e. A ) -> E! y e. B <. C , y >. e. F ) $=
      ( wf wcel wa cv cop weu wreu wfn ffn fneu2 sylan wb opelf simprd ex mpbid
      pm4.71rd eubidv adantr df-reu sylibr ) BCEFZDBGZHZAIZCGZDUJJEGZHZAKZULACL
      UIULAKZUNUGEBMUHUOBCENABDEOPUGUOUNQUHUGULUMAUGULUKUGULUKUGULHUHUKBCDUJERS
      TUBUCUDUAULACUEUF $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d x y F $.  $d x y A $.  $d x y B $.
    $( The converse of a restriction of a function. $)
    fcnvres $p |- ( F : A --> B -> `' ( F |` A ) = ( `' F |` B ) ) $=
      ( vy vx cres ccnv cv cop wcel wa wi wb pm4.71 sylib opelcnv opelres bitri
      ex vex relcnv relres opelf simpld syl6bbr simprd anbi1i bitr3d eqrelrdv
      wf ) ABCUJZDECAFZGZCGZBFZULUAUNBUBUKEHZDHZIZCJZUQUPIZUMJZUTUOJZUKUSUSUPAJ
      ZKZVAUKUSVCLUSVDMUKUSVCUKUSKZVCUQBJZABUPUQCUCZUDSUSVCNOVAURULJVDUQUPULDTZ
      ETZPUPUQCAVHQRUEUKUSUSVFKZVBUKUSVFLUSVJMUKUSVFVEVCVFVGUFSUSVFNOVBUTUNJZVF
      KVJUQUPUNBVIQVKUSVFUQUPCVHVIPUGRUEUHUI $.
      $( [26-Mar-1998] $)
  $}

  $( The preimage of a class disjoint with a mapping's codomain is empty.
     (Contributed by FL, 24-Jan-2007.) $)
  fimacnvdisj $p |- ( ( F : A --> B /\ ( B i^i C ) = (/) ) ->
    ( `' F " C ) = (/) ) $=
    ( wf cin c0 wceq wa ccnv cdm cima wss crn df-rn frn adantr syl5eqssr ssdisj
    sylancom imadisj sylibr ) ABDEZBCFGHZIZDJZKZCFGHZUFCLGHUCUDUGBMUHUEUGDNZBDO
    UCUIBMUDABDPQRUGBCSTUFCUAUB $.
    $( [23-Jan-2007] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    fint.1 $e |- B =/= (/) $.
    $( Function into an intersection.  (The proof was shortened by Andrew
       Salmon, 17-Sep-2011.) $)
    fint $p |- ( F : A --> |^| B <-> A. x e. B F : A --> x ) $=
      ( wfn crn cint wss wa cv wral wf ssint anbi2i c0 wne wb r19.28zv df-f
      ax-mp bitr4i ralbii 3bitr4i ) DBFZDGZCHZIZJZUEUFAKZIZJZACLZBUGDMBUJDMZACL
      UIUEUKACLZJZUMUHUOUEAUFCNOCPQUMUPREUEUKACSUAUBBUGDTUNULACBUJDTUCUD $.
      $( [18-Sep-2011] $) $( [14-Oct-1999] $)
  $}

  $( Mapping into an intersection.  (The proof was shortened by Andrew Salmon,
     17-Sep-2011.) $)
  fin $p |- ( F : A --> ( B i^i C ) <-> ( F : A --> B /\ F : A --> C ) ) $=
    ( wfn crn cin wss wa wf ssin anbi2i anandi bitr3i df-f anbi12i 3bitr4i ) DA
    EZDFZBCGZHZIZRSBHZIZRSCHZIZIZATDJABDJZACDJZIUBRUCUEIZIUGUJUARSBCKLRUCUEMNAT
    DOUHUDUIUFABDOACDOPQ $.
    $( [18-Sep-2011] $) $( [14-Sep-1999] $)

  ${
    $d A x $.  $d B x $.
    fabexg.1 $e |- F = { x | ( x : A --> B /\ ph ) } $.
    $( Existence of a set of functions.  (Contributed by Paul Chapman,
       25-Feb-2008.) $)
    fabexg $p |- ( ( A e. C /\ B e. D ) -> F e. _V ) $=
      ( wcel wa cxp cvv cpw xpexg pwexg wss cv cab wf fssxp elpw sylibr eqsstri
      vex anim1i ss2abi ssab2 sstri ssexg mpan 3syl ) CEIDFIJCDKZLIULMZLIZGLIZC
      DEFNULLOGUMPUNUOGBQZUMIZAJZBRZUMGCDUPSZAJZBRUSHVAURBUTUQAUTUPULPUQCDUPTUP
      ULBUDUAUBUEUFUCABUMUGUHGUMLUIUJUK $.
      $( [25-Feb-2008] $)
  $}

  ${
    $d x A $.  $d x B $.
    fabex.1 $e |- A e. _V $.
    fabex.2 $e |- B e. _V $.
    fabex.3 $e |- F = { x | ( x : A --> B /\ ph ) } $.
    $( Existence of a set of functions. $)
    fabex $p |- F e. _V $=
      ( cvv wcel fabexg mp2an ) CIJDIJEIJFGABCDIIEHKL $.
      $( [3-Dec-2007] $)
  $}

  $( If a mapping is a set, its domain is a set.  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  dmfex $p |- ( ( F e. C /\ F : A --> B ) -> A e. _V ) $=
    ( wf wcel cvv cdm wceq wi fdm dmexg eleq1 syl5ib syl impcom ) ABDEZDCFZAGFZ
    QDHZAIZRSJABDKRTGFUASDCLTAGMNOP $.
    $( [18-Sep-2011] $) $( [27-Aug-2006] $)

  $( The empty function. $)
  f0 $p |- (/) : (/) --> A $=
    ( c0 wf wfn crn wss wceq eqid fn0 mpbir rn0 0ss eqsstri df-f mpbir2an ) BAB
    CBBDZBEZAFPBBGBHBIJQBAKALMBABNO $.
    $( [14-Aug-1999] $)

  $( A class is a function with empty codomain iff it and its domain are
     empty. $)
  f00 $p |- ( F : A --> (/) <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf wceq wa wfn wfun cdm ffun crn wss frn ss0 syl dm0rn0 df-fn sylanbrc
    sylibr fn0 sylib fdm eqtr3d jca f0 feq1 feq2 sylan9bb mpbiri impbii ) ACBDZ
    BCEZACEZFZUKULUMUKBCGZULUKBHBIZCEZUOACBJUKBKZCEZUQUKURCLUSACBMURNOBPSZBCQRB
    TUAUKUPACACBUBUTUCUDUNUKCCCDZCUEULUKACCDUMVAACBCUFACCCUGUHUIUJ $.
    $( [10-Dec-2003] $)

  ${
    $d x y A $.  $d x y B $.
    fconst.1 $e |- B e. _V $.
    $( A cross product with a singleton is a constant function.  (The proof was
       shortened by Andrew Salmon, 17-Sep-2011.) $)
    fconst $p |- ( A X. { B } ) : A --> { B } $=
      ( vx vy csn cxp wf wfn crn wss fconstopab fnopab2 rnxpss df-f mpbir2an )
      ABFZAQGZHRAIRJQKDEABRCDEABLMAQNAQROP $.
      $( [18-Sep-2011] $) $( [14-Aug-1999] $)
  $}

  ${
    $d x A $.  $d x B $.
    $( A cross product with a singleton is a constant function. $)
    fconstg $p |- ( B e. V -> ( A X. { B } ) : A --> { B } ) $=
      ( vx cv csn cxp wf wceq sneq xpeq2d feq1 feq3 sylan9bb syl2anc vex fconst
      wb vtoclg ) ADEZFZAUAGZHZABFZAUDGZHZDBCTBIZUBUEIZUAUDIZUCUFRUGUAUDATBJZKU
      JUHUCAUAUEHUIUFAUAUBUELUAUDAUEMNOATDPQS $.
      $( [19-Oct-2004] $)
  $}

  $( A cross product with a singleton is a constant function. $)
  fnconstg $p |- ( B e. V -> ( A X. { B } ) Fn A ) $=
    ( wcel csn cxp wf wfn fconstg ffn syl ) BCDABEZALFZGMAHABCIALMJK $.
    $( [24-Jul-2014] $)

  $( Constant function with loose range.  (Contributed by Stefan O'Rear,
     1-Feb-2015.) $)
  fconst6g $p |- ( B e. C -> ( A X. { B } ) : A --> C ) $=
    ( wcel csn cxp wf wss fconstg snssi fss syl2anc ) BCDABEZAMFZGMCHACNGABCIBC
    JAMCNKL $.
    $( [1-Feb-2015] $)

  ${
    fconst6.1 $e |- B e. C $.
    $( A constant function as a mapping.  (Contributed by Jeff Madsen,
       30-Nov-2009.) $)
    fconst6 $p |- ( A X. { B } ) : A --> C $=
      ( wcel csn cxp wf fconst6g ax-mp ) BCEACABFGHDABCIJ $.
      $( [22-Apr-2015] $) $( [30-Nov-2009] $)
  $}

  $( Equality theorem for one-to-one functions. $)
  f1eq1 $p |- ( F = G -> ( F : A -1-1-> B <-> G : A -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq1 cnveq funeqd anbi12d df-f1 3bitr4g ) CDEZAB
    CFZCGZHZIABDFZDGZHZIABCJABDJQRUATUCABCDKQSUBCDLMNABCOABDOP $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions. $)
  f1eq2 $p |- ( A = B -> ( F : A -1-1-> C <-> F : B -1-1-> C ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq2 anbi1d df-f1 3bitr4g ) ABEZACDFZDGHZIBCDFZQ
    IACDJBCDJOPRQABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one functions. $)
  f1eq3 $p |- ( A = B -> ( F : C -1-1-> A <-> F : C -1-1-> B ) ) $=
    ( wceq wf ccnv wfun wa wf1 feq3 anbi1d df-f1 3bitr4g ) ABEZCADFZDGHZICBDFZQ
    ICADJCBDJOPRQABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf1.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf1.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf1.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a one-to-one function. $)
    hbf1 $p |- ( F : A -1-1-> B -> A. x F : A -1-1-> B ) $=
      ( wf1 wf ccnv wfun wa df-f1 hbf hbcnv hbfun hban hbxfrbi ) CDEICDEJZEKZLZ
      MACDENTUBAABCDEFGHOABUAABEFPQRS $.
      $( [16-May-2004] $)
  $}

  ${
    $d x y F $.
    $( Alternate definition of a one-to-one function. $)
    dff12 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\ A. y E* x x F y ) ) $=
      ( wf1 wf ccnv wfun wa cv wbr wmo wal df-f1 funcnv2 anbi2i bitri ) CDEFCDE
      GZEHIZJSAKBKELAMBNZJCDEOTUASABEPQR $.
      $( [22-Sep-2004] $) $( [31-Dec-1996] $)
  $}

  $( A one-to-one mapping is a mapping. $)
  f1f $p |- ( F : A -1-1-> B -> F : A --> B ) $=
    ( wf1 wf ccnv wfun df-f1 simplbi ) ABCDABCECFGABCHI $.
    $( [31-Dec-1996] $)

  $( A one-to-one mapping is a function on its domain. $)
  f1fn $p |- ( F : A -1-1-> B -> F Fn A ) $=
    ( wf1 wf wfn f1f ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [8-Mar-2014] $)

  $( A one-to-one mapping is a function. $)
  f1fun $p |- ( F : A -1-1-> B -> Fun F ) $=
    ( wf1 wfn wfun f1fn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [8-Mar-2014] $)

  $( A one-to-one onto mapping is a relation. $)
  f1rel $p |- ( F : A -1-1-> B -> Rel F ) $=
    ( wf1 wfn wrel f1fn fnrel syl ) ABCDCAECFABCGACHI $.
    $( [8-Mar-2014] $)

  $( The domain of a one-to-one mapping. $)
  f1dm $p |- ( F : A -1-1-> B -> dom F = A ) $=
    ( wf1 wfn cdm wceq f1fn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [8-Mar-2014] $)

  $( A function that is one-to-one is also one-to-one on some superset of its
     range.  (Contributed by Mario Carneiro, 12-Jan-2013.) $)
  f1ss $p |- ( ( F : A -1-1-> B /\ B C_ C ) -> F : A -1-1-> C ) $=
    ( wf1 wss wa wf ccnv wfun f1f fss sylan df-f1 simprbi adantr sylanbrc ) ABD
    EZBCFZGACDHZDIJZACDERABDHZSTABDKABCDLMRUASRUBUAABDNOPACDNQ $.
    $( [12-Jan-2013] $)

  $( Combine a one-to-one function with a restriction on the domain.
     (Contributed by Stefan O'Rear, 20-Feb-2015.) $)
  f1ssr $p |- ( ( F : A -1-1-> B /\ ran F C_ C ) -> F : A -1-1-> C ) $=
    ( wf1 crn wss wa wf ccnv wfun f1fn adantr simpr df-f sylanbrc df-f1 simprbi
    wfn ) ABDEZDFCGZHZACDIZDJKZACDEUBDASZUAUCTUEUAABDLMTUANACDOPTUDUATABDIUDABD
    QRMACDQP $.
    $( [20-Feb-2015] $)

  $( A function that is one-to-one is also one-to-one on some aubset of its
     domain.  (Contributed by Mario Carneiro, 17-Jan-2015.) $)
  f1ssres $p |- ( ( F : A -1-1-> B /\ C C_ A ) -> ( F |` C ) : C -1-1-> B ) $=
    ( wf1 wss wa cres wf ccnv wfun f1f fssres sylan simprbi funres11 syl adantr
    df-f1 sylanbrc ) ABDEZCAFZGCBDCHZIZUCJKZCBUCEUAABDIZUBUDABDLABCDMNUAUEUBUAD
    JKZUEUAUFUGABDSOCDPQRCBUCST $.
    $( [17-Jan-2015] $)

  $( Two ways to express that a set ` A ` (not necessarily a function) is
     one-to-one.  Each side is equivalent to Definition 6.4(3) of
     [TakeutiZaring] p. 24, who use the notation "Un_2 (A)" for one-to-one.  We
     do not introduce a separate notation since we rarely use it. $)
  f1cnvcnv $p |- ( `' `' A : dom A -1-1-> _V
             <-> ( Fun `' A /\ Fun `' `' A ) ) $=
    ( cdm cvv ccnv wf1 wf wfun wa df-f1 wfn dffn2 wceq dmcnvcnv mpbiran2 bitr3i
    df-fn wrel relcnv dfrel2 mpbi funeqi anbi12i ancom 3bitri ) ABZCADZDZEUECUG
    FZUGDZGZHUGGZUFGZHULUKHUECUGIUHUKUJULUHUGUEJZUKUEUGKUMUKUGBUELAMUGUEPNOUIUF
    UFQUIUFLARUFSTUAUBUKULUCUD $.
    $( [13-Aug-2004] $)

  $( Composition of one-to-one functions.  Exercise 30 of [TakeutiZaring]
     p. 25. $)
  f1co $p |- ( ( F : B -1-1-> C /\ G : A -1-1-> B ) ->
              ( F o. G ) : A -1-1-> C ) $=
    ( wf ccnv wfun wa ccom wf1 fco funco cnvco funeqi sylibr anim12i an4s df-f1
    ancoms anbi12i 3imtr4i ) BCDFZDGZHZIZABEFZEGZHZIZIACDEJZFZUKGZHZIZBCDKZABEK
    ZIACUKKUCUGUEUIUOUCUGIULUEUIIUNABCDELUIUEUNUIUEIUHUDJZHUNUHUDMUMURDENOPTQRU
    PUFUQUJBCDSABESUAACUKSUB $.
    $( [28-May-1998] $)

  $( Equality theorem for onto functions. $)
  foeq1 $p |- ( F = G -> ( F : A -onto-> B <-> G : A -onto-> B ) ) $=
    ( wceq wfn crn wa wfo fneq1 rneq eqeq1d anbi12d df-fo 3bitr4g ) CDEZCAFZCGZ
    BEZHDAFZDGZBEZHABCIABDIPQTSUBACDJPRUABCDKLMABCNABDNO $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions. $)
  foeq2 $p |- ( A = B -> ( F : A -onto-> C <-> F : B -onto-> C ) ) $=
    ( wceq wfn crn wa wfo fneq2 anbi1d df-fo 3bitr4g ) ABEZDAFZDGCEZHDBFZPHACDI
    BCDINOQPABDJKACDLBCDLM $.
    $( [1-Aug-1994] $)

  $( Equality theorem for onto functions. $)
  foeq3 $p |- ( A = B -> ( F : C -onto-> A <-> F : C -onto-> B ) ) $=
    ( wceq wfn crn wa wfo eqeq2 anbi2d df-fo 3bitr4g ) ABEZDCFZDGZAEZHOPBEZHCAD
    ICBDINQROABPJKCADLCBDLM $.
    $( [1-Aug-1994] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbfo.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfo.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbfo.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for an onto function. $)
    hbfo $p |- ( F : A -onto-> B -> A. x F : A -onto-> B ) $=
      ( wfo wfn crn wceq wa df-fo hbfn hbrn hbeq hban hbxfrbi ) CDEIECJZEKZDLZM
      ACDENTUBAABCEFGOABBUADABEFPHQRS $.
      $( [16-May-2004] $)
  $}

  $( An onto mapping is a mapping. $)
  fof $p |- ( F : A -onto-> B -> F : A --> B ) $=
    ( wfn crn wceq wa wss wfo wf eqimss anim2i df-fo df-f 3imtr4i ) CADZCEZBFZG
    PQBHZGABCIABCJRSPQBKLABCMABCNO $.
    $( [3-Aug-1994] $)

  $( An onto mapping is a function. $)
  fofun $p |- ( F : A -onto-> B -> Fun F ) $=
    ( wfo wf wfun fof ffun syl ) ABCDABCECFABCGABCHI $.
    $( [29-Mar-2008] $)

  $( An onto mapping is a function on its domain. $)
  fofn $p |- ( F : A -onto-> B -> F Fn A ) $=
    ( wfo wf wfn fof ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [16-Dec-2008] $)

  $( The codomain of an onto function is its range. $)
  forn $p |- ( F : A -onto-> B -> ran F = B ) $=
    ( wfo wfn crn wceq df-fo simprbi ) ABCDCAECFBGABCHI $.
    $( [3-Aug-1994] $)

  $( Alternate definition of an onto function. $)
  dffo2 $p |- ( F : A -onto-> B <-> ( F : A --> B /\ ran F = B ) ) $=
    ( wfo wf crn wceq wa fof forn jca wfn ffn df-fo biimpri sylan impbii ) ABCD
    ZABCEZCFBGZHRSTABCIABCJKSCALZTRABCMRUATHABCNOPQ $.
    $( [22-Mar-2006] $)

  $( The image of the domain of an onto function. $)
  foima $p |- ( F : A -onto-> B -> ( F " A ) = B ) $=
    ( wfo cima crn cdm imadmrn wf wceq fof fdm imaeq2 3syl syl5reqr forn eqtrd
    ) ABCDZCAEZCFZBRTCCGZEZSCHRABCIUAAJUBSJABCKABCLUAACMNOABCPQ $.
    $( [29-Nov-2002] $)

  $( A function maps onto its range. $)
  dffn4 $p |- ( F Fn A <-> F : A -onto-> ran F ) $=
    ( wfn crn wceq wa wfo eqid biantru df-fo bitr4i ) BACZLBDZMEZFAMBGNLMHIAMBJ
    K $.
    $( [10-May-1998] $)

  $( A function maps its domain onto its range. $)
  funforn $p |- ( Fun A <-> A : dom A -onto-> ran A ) $=
    ( wfun cdm wfn crn wfo funfn dffn4 bitri ) ABAACZDJAEAFAGJAHI $.
    $( [23-Jul-2004] $)

  $( An onto function has unique domain and range. $)
  fodmrnu $p |- ( ( F : A -onto-> B /\ F : C -onto-> D ) ->
                ( A = C /\ B = D ) ) $=
    ( wfo wa wceq wfn fofn fndmu syl2an crn forn sylan9req jca ) ABEFZCDEFZGACH
    ZBDHQEAIECISRABEJCDEJACEKLQRBEMDABENCDENOP $.
    $( [5-Nov-2006] $)

  $( Restriction of a function. $)
  fores $p |- ( ( Fun F /\ A C_ dom F ) ->
              ( F |` A ) : A -onto-> ( F " A ) ) $=
    ( wfun cdm wss cres cima wfo funres anim1i wfn wceq df-fn crn df-ima eqcomi
    wa df-fo mpbiran2 ssdmres anbi2i 3bitr4i sylibr ) BCZABDEZQBAFZCZUEQZABAGZU
    FHZUDUGUEABIJUFAKZUGUFDALZQUJUHUFAMUJUKUFNZUILUIUMBAOPAUIUFRSUEULUGABTUAUBU
    C $.
    $( [4-Mar-1997] $)

  $( Composition of onto functions. $)
  foco $p |- ( ( F : B -onto-> C /\ G : A -onto-> B ) ->
             ( F o. G ) : A -onto-> C ) $=
    ( wf crn wceq ccom wfo fco ad2ant2r cdm fdm eqtr3 sylan rncoeq eqeq1d dffo2
    wa biimpar an32s adantrl jca anbi12i 3imtr4i ) BCDFZDGZCHZTZABEFZEGZBHZTZTZ
    ACDEIZFZUPGZCHZTBCDJZABEJZTACUPJUOUQUSUGUKUQUIUMABCDEKLUJUMUSUKUGUMUIUSUGUM
    TDMZULHZUIUSUGVBBHUMVCBCDNVBULBOPVCUSUIVCURUHCDEQRUAPUBUCUDUTUJVAUNBCDSABES
    UEACUPSUF $.
    $( [22-Mar-2006] $)

  $( A nonzero constant function is onto. $)
  foconst $p |- ( ( F : A --> { B } /\ F =/= (/) ) -> F : A -onto-> { B } ) $=
    ( csn wf c0 wne wa crn wceq wfo wn wrel wb frel relrn0 necon3abid syl wss
    wo frn sssn sylib ord sylbid imdistani dffo2 sylibr ) ABDZCEZCFGZHUJCIZUIJZ
    HAUICKUJUKUMUJUKULFJZLZUMUJCMZUKUONAUICOUPUNCFCPQRUJUNUMUJULUISUNUMTAUICUAU
    LBUBUCUDUEUFAUICUGUH $.
    $( [12-Jan-2007] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq1 $p |- ( F = G -> ( F : A -1-1-onto-> B <-> G : A -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq1 foeq1 anbi12d df-f1o 3bitr4g ) CDEZABCFZABCGZH
    ABDFZABDGZHABCIABDIOPRQSABCDJABCDKLABCMABDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq2 $p |- ( A = B -> ( F : A -1-1-onto-> C <-> F : B -1-1-onto-> C ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq2 foeq2 anbi12d df-f1o 3bitr4g ) ABEZACDFZACDGZH
    BCDFZBCDGZHACDIBCDIOPRQSABCDJABCDKLACDMBCDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions. $)
  f1oeq3 $p |- ( A = B -> ( F : C -1-1-onto-> A <-> F : C -1-1-onto-> B ) ) $=
    ( wceq wf1 wfo wa wf1o f1eq3 foeq3 anbi12d df-f1o 3bitr4g ) ABEZCADFZCADGZH
    CBDFZCBDGZHCADICBDIOPRQSABCDJABCDKLCADMCBDMN $.
    $( [10-Feb-1997] $)

  $( Equality theorem for one-to-one onto functions.  (Contributed by FL,
     14-Jul-2012.) $)
  f1oeq23 $p |- ( ( A = B /\ C = D ) ->
   ( F : A -1-1-onto-> C <-> F : B -1-1-onto-> D ) ) $=
    ( wceq wf1o f1oeq2 f1oeq3 sylan9bb ) ABFACEGBCEGCDFBDEGABCEHCDBEIJ $.
    $( [14-Jul-2012] $)

  ${
    $d y F $.  $d y A $.  $d y B $.  $d x y $.
    hbf1o.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbf1o.2 $e |- ( y e. A -> A. x y e. A ) $.
    hbf1o.3 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for a one-to-one onto function. $)
    hbf1o $p |- ( F : A -1-1-onto-> B -> A. x F : A -1-1-onto-> B ) $=
      ( wf1o wf1 wfo wa df-f1o hbf1 hbfo hban hbxfrbi ) CDEICDEJZCDEKZLACDEMRSA
      ABCDEFGHNABCDEFGHOPQ $.
      $( [16-May-2004] $)
  $}

  $( A one-to-one onto mapping is a one-to-one mapping. $)
  f1of1 $p |- ( F : A -1-1-onto-> B -> F : A -1-1-> B ) $=
    ( wf1o wf1 wfo df-f1o simplbi ) ABCDABCEABCFABCGH $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a mapping. $)
  f1of $p |- ( F : A -1-1-onto-> B -> F : A --> B ) $=
    ( wf1o wf1 wf f1of1 f1f syl ) ABCDABCEABCFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is function on its domain. $)
  f1ofn $p |- ( F : A -1-1-onto-> B -> F Fn A ) $=
    ( wf1o wf wfn f1of ffn syl ) ABCDABCECAFABCGABCHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a function. $)
  f1ofun $p |- ( F : A -1-1-onto-> B -> Fun F ) $=
    ( wf1o wfn wfun f1ofn fnfun syl ) ABCDCAECFABCGACHI $.
    $( [12-Dec-2003] $)

  $( A one-to-one onto mapping is a relation. $)
  f1orel $p |- ( F : A -1-1-onto-> B -> Rel F ) $=
    ( wf1o wfun wrel f1ofun funrel syl ) ABCDCECFABCGCHI $.
    $( [13-Dec-2003] $)

  $( The domain of a one-to-one onto mapping. $)
  f1odm $p |- ( F : A -1-1-onto-> B -> dom F = A ) $=
    ( wf1o wfn cdm wceq f1ofn fndm syl ) ABCDCAECFAGABCHACIJ $.
    $( [8-Mar-2014] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o2 $p |- ( F : A -1-1-onto-> B
        <-> ( F Fn A /\ Fun `' F /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa wf ccnv wfun wfn crn w3a df-f1o df-f1 df-fo anbi12i ancom
    wceq 3anass an12 bitri anbi1i bitr4i wss eqimss df-f biimpri sylan2 3adant2
    anass pm4.71i 3bitr4i 3bitri ) ABCDABCEZABCFZGABCHZCIJZGZCAKZCLZBSZGZGZUTUR
    VBMZABCNUOUSUPVCABCOABCPQUQURVCGZGZVEUQGZVDVEVGVFUQGVHUQVFRVEVFUQVEUTURVBGG
    VFUTURVBTUTURVBUAUBUCUDUQURVCUKVEUQUTVBUQURVBUTVABUEZUQVABUFUQUTVIGABCUGUHU
    IUJULUMUN $.
    $( [22-Oct-2011] $) $( [10-Feb-1997] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o3 $p |- ( F : A -1-1-onto-> B <-> ( F : A -onto-> B /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wf1o wfo df-3an an32 bitri dff1o2 df-fo anbi1i
    wa 3bitr4i ) CADZCEFZCGBHZIZTUBRZUARZABCJABCKZUARUCTUARUBRUETUAUBLTUAUBMNAB
    COUFUDUAABCPQS $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( A one-to-one onto function is an onto function. $)
  f1ofo $p |- ( F : A -1-1-onto-> B -> F : A -onto-> B ) $=
    ( wf1o wfo ccnv wfun dff1o3 simplbi ) ABCDABCECFGABCHI $.
    $( [28-Apr-2004] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o4 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ `' F Fn B ) ) $=
    ( wf1o wfn ccnv wfun crn w3a wa dff1o2 3anass cdm df-rn eqeq1i anbi2i df-fn
    wceq bitr4i 3bitri ) ABCDCAEZCFZGZCHZBRZIUAUCUEJZJUAUBBEZJABCKUAUCUELUFUGUA
    UFUCUBMZBRZJUGUEUIUCUDUHBCNOPUBBQSPT $.
    $( [22-Oct-2011] $) $( [25-Mar-1998] $)

  $( Alternate definition of one-to-one onto function.  (The proof was
     shortened by Andrew Salmon, 22-Oct-2011.) $)
  dff1o5 $p |- ( F : A -1-1-onto-> B <-> ( F : A -1-1-> B /\ ran F = B ) ) $=
    ( wf1o wf1 wfo wa crn wceq df-f1o wf biantrurd dffo2 syl6rbbr pm5.32i bitri
    f1f ) ABCDABCEZABCFZGRCHBIZGABCJRSTRTABCKZTGSRUATABCQLABCMNOP $.
    $( [22-Oct-2011] $) $( [10-Dec-2003] $)

  $( A one-to-one function maps onto its range. $)
  f1orn $p |- ( F : A -1-1-onto-> ran F <-> ( F Fn A /\ Fun `' F ) ) $=
    ( wfn ccnv wfun crn wceq w3a wa wf1o df-3an dff1o2 eqid biantru 3bitr4i ) B
    ACZBDEZBFZRGZHPQIZSIARBJTPQSKARBLSTRMNO $.
    $( [13-Aug-2004] $)

  $( A one-to-one function maps one-to-one onto its range. $)
  f1f1orn $p |- ( F : A -1-1-> B -> F : A -1-1-onto-> ran F ) $=
    ( wf1 wfn ccnv wfun crn wf1o f1fn wf df-f1 simprbi f1orn sylanbrc ) ABCDZCA
    ECFGZACHCIABCJPABCKQABCLMACNO $.
    $( [4-Sep-2004] $)

  ${
    $d A f $.  $d B f $.
    f1oabexg.1 $e |- F = { f | ( f : A -1-1-onto-> B /\ ph ) } $.
    $( The class of all 1-1-onto functions mapping one set to another is a
       set.  (Contributed by Paul Chapman, 25-Feb-2008.) $)
    f1oabexg $p |- ( ( A e. C /\ B e. D ) -> F e. _V ) $=
      ( wcel wa cv wf1o cab cvv wf wss f1of anim1i ss2abi eqid sylancr syl5eqel
      fabexg ssexg ) BDICEIJZGBCFKZLZAJZFMZNHUEUIBCUFOZAJZFMZPULNIUINIUHUKFUGUJ
      ABCUFQRSAFBCDEULULTUCUIULNUDUAUB $.
      $( [25-Feb-2008] $)
  $}

  $( The converse of a one-to-one onto function is also one-to-one onto.  (The
     proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
  f1ocnv $p |- ( F : A -1-1-onto-> B -> `' F : B -1-1-onto-> A ) $=
    ( wfn ccnv wa wf1o wrel fnrel wceq dfrel2 fneq1 biimprd sylbi anim2i ancoms
    wi mpcom dff1o4 3imtr4i ) CADZCEZBDZFUCUBEZADZFZABCGBAUBGUCUAUFUAUEUCCHZUAU
    EACIUGUDCJZUAUEQCKUHUEUAAUDCLMNROPABCSBAUBST $.
    $( [22-Oct-2011] $) $( [11-Feb-1997] $)

  $( A relation is a one-to-one onto function iff its converse is a one-to-one
     onto function with domain and range interchanged. $)
  f1ocnvb $p |- ( Rel F ->
                ( F : A -1-1-onto-> B <-> `' F : B -1-1-onto-> A ) ) $=
    ( wrel wf1o ccnv f1ocnv wceq wb dfrel2 f1oeq1 sylbi syl5ib impbid2 ) CDZABC
    EZBACFZEZABCGRABQFZEZOPBAQGOSCHTPICJABSCKLMN $.
    $( [8-Dec-2003] $)

  $( The restriction of a one-to-one function maps one-to-one onto the
     image. $)
  f1ores $p |- ( ( F : A -1-1-> B /\ C C_ A ) -> ( F |` C ) : C -1-1-onto->
            ( F " C ) ) $=
    ( wf1 wss wa cres crn wf1o cima f1ssres f1f1orn wceq wb df-ima f1oeq3 ax-mp
    syl sylibr ) ABDECAFGZCDCHZIZUBJZCDCKZUBJZUACBUBEUDABCDLCBUBMSUEUCNUFUDODCP
    UEUCCUBQRT $.
    $( [25-Mar-1998] $)

  $( The converse of a one-to-one-onto restricted function.  (Contributed by
     Paul Chapman, 21-Apr-2008.) $)
  f1orescnv $p |- ( ( Fun `' F /\ ( F |` R ) : R -1-1-onto-> P ) ->
                    ( `' F |` P ) : P -1-1-onto-> R ) $=
    ( ccnv wfun cres wf1o wa f1ocnv adantl wceq wb cima funcnvres df-ima dff1o5
    crn wf1 simprbi syl5eq reseq2d sylan9eq f1oeq1 syl mpbid ) CDZEZBACBFZGZHZA
    BUHDZGZABUFAFZGZUIULUGBAUHIJUJUKUMKULUNLUGUIUKUFCBMZFUMBCNUIUOAUFUIUOUHQZAC
    BOUIBAUHRUPAKBAUHPSTUAUBABUKUMUCUDUE $.
    $( [21-Apr-2008] $)

  $( Preimage of an image. $)
  f1imacnv $p |- ( ( F : A -1-1-> B /\ C C_ A )
                 -> ( `' F " ( F " C ) ) = C ) $=
    ( wf1 wss wa ccnv cima cres resima wfun wceq df-f1 simprbi adantr funcnvres
    wf 3syl wf1o imaeq1 f1ores f1ocnv crn cdm imadmrn fdm imaeq2 syl5reqr f1ofo
    f1of wfo forn syl eqtrd eqtr3d syl5eqr ) ABDEZCAFZGZDHZDCIZIVAVBJZVBIZCVAVB
    KUTDCJZHZVBIZVDCUTVALZVFVCMVGVDMURVHUSURABDRVHABDNOPCDQVFVCVBUASUTCVBVETVBC
    VFTZVGCMABCDUBCVBVEUCVIVGVFUDZCVIVJVFVFUEZIZVGVFUFVIVBCVFRVKVBMVLVGMVBCVFUK
    VBCVFUGVKVBVFUHSUIVIVBCVFULVJCMVBCVFUJVBCVFUMUNUOSUPUQ $.
    $( [30-Sep-2004] $)

  $( A reverse version of ~ f1imacnv .  (Contributed by Jeffrey Hankins,
     16-Jul-2009.) $)
  foimacnv $p |- ( ( F : A -onto-> B /\ C C_ B )
                 -> ( F " ( `' F " C ) ) = C ) $=
    ( wfo wss ccnv cima cres resima wfun wceq fofun adantr funcnvres2 crn df-rn
    wa cdm syl5eqr imaeq1 3syl wfn resss cnvss ax-mp cnvcnvss sstri funss mpsyl
    df-ima eqtr2i jctir df-fn sylibr dfdm4 forn sseq2d biimpar syl6sseq ssdmres
    sylib df-fo sylanbrc foima syl eqtr3d ) ABDEZCBFZRZDDGZCHZHDVLIZVLHZCDVLJVJ
    VKCIZGZVLHZVNCVJDKZVPVMLVQVNLVHVRVIABDMZNCDOVPVMVLUAUBVJVLCVPEZVQCLVJVPVLUC
    ZVPPZCLVTVJVPKZVPSZVLLZRWAVJWCWEVHWCVIVPDFVHVRWCVPVKGZDVOVKFVPWFFVKCUDVOVKU
    EUFDUGUHVSVPDUIUJNVLVOPWDVKCUKVOQULUMVPVLUNUOVJWBVOSZCVOUPVJCVKSZFWGCLVJCDP
    ZWHVHCWIFVIVHWIBCABDUQURUSDQUTCVKVAVBTVLCVPVCVDVLCVPVEVFVGT $.
    $( [9-Jul-2009] $)

  $( The union of two one-to-one onto functions with disjoint domains and
     ranges. $)
  f1oun $p |- ( ( ( F : A -1-1-onto-> B /\ G : C -1-1-onto-> D )
            /\ ( ( A i^i C ) = (/) /\ ( B i^i D ) = (/) ) )
           -> ( F u. G ) : ( A u. C ) -1-1-onto-> ( B u. D ) ) $=
    ( wf1o wa cin c0 wceq cun wfn ccnv wi dff1o4 fnun ex cnvun fneq1i im2anan9
    sylibr an4s syl2anb syl6ibr imp ) ABEGZCDFGZHZACIJKZBDIJKZHZACLZBDLZEFLZGZU
    IULUOUMMZUONZUNMZHZUPUGEAMZENZBMZHFCMZFNZDMZHULUTOZUHABEPCDFPVAVDVCVFVGVAVD
    HZUJUQVCVFHZUKUSVHUJUQACEFQRVIUKUSVIUKHVBVELZUNMUSBDVBVEQUNURVJEFSTUBRUAUCU
    DUMUNUOPUEUF $.
    $( [26-Mar-1998] $)

  ${
    $d A u v x z $.  $d A u v y $.  $d B u v y $.  $d B u v z $.  $d C u v x $.
    $d D u v $.  $d S u v x $.
    fun11iun.1 $e |- ( x = y -> B = C ) $.
    fun11iun.2 $e |- B e. _V $.
    $( The union of a chain (with respect to inclusion) of one-to-one functions
       is a one-to-one function.  (Contributed by Mario Carneiro,
       20-May-2013.) $)
    fun11iun $p |- ( A. x e. A ( B : D -1-1-> S /\
                       A. y e. A ( B C_ C \/ C C_ B ) ) ->
                     U_ x e. A B : U_ x e. A D -1-1-> S ) $=
      ( vz vu vv wss wral wa wfun wceq cv wrex wcel wf1 wo ciun wf ccnv wfn crn
      cdm cab cuni vex eqeq1 rexbidv elab r19.29 ax-17 hbre1 hbab hbral hban wi
      f1eq1 biimparc df-f1 ffun anim1i syl adantlr eqeq2d cbvrexv sseq12 ancoms
      sylbi orbi12d biimprcd expdimp rexlimivw imp sylan an32s adantlll sylan2b
      wb ralrimiva jca a1i rexlimi fun11uni simpld dfiun2 funeqi sylibr cop wex
      hbra1 eldm2 f1dm eleq2d syl5bbr adantr syl6 rexbida eliun rexcom4 3bitr4i
      ra4 exbii 3bitr4g eqrdv df-fn sylanbrc rniun f1f frn ralimi syl5eqss df-f
      iunss simprd cnveqi ) FGDUAZDEMZEDMZUBZBCNZOZACNZACFUCZGACDUCZUDZYIUEZPZY
      HGYIUAYGYIYHUFZYIUGZGMYJYGYIPZYIUHZYHQYMYGJRZDQZACSZJUIZUJZPZYOYGUUBUUAUE
      ZPZYGKRZPZUUEUEPZOZUUELRZMZUUIUUEMZUBZLYTNZOZKYTNUUBUUDOYGUUNKYTUUEYTTYGU
      UEDQZACSZUUNYSUUPJUUEKUKZYQUUEQYRUUOACYQUUEDULUMUNYGUUPOYFUUOOZACSUUNYFUU
      OACUOUURUUNACUUHUUMAUUHAUPUULALYTYSAJLYRACUQURUULAUPUSUTUURUUNVAARZCTZUUR
      UUHUUMYAUUOUUHYEYAUUOOFGUUEUAZUUHUUOUVAYAFGUUEDVBVCUVAFGUUEUDZUUGOUUHFGUU
      EVDUVBUUFUUGFGUUEVEVFVMVGVHUURUULLYTUUIYTTUURUUIDQZACSZUULYSUVDJUUILUKYQU
      UIQYRUVCACYQUUIDULUMUNUVDUURUUIEQZBCSZUULUVCUVEABCUUSBRQDEUUIHVIVJYEUUOUV
      FUULYAYEUVFUUOUULYEUVFOYDUVEOZBCSZUUOUULYDUVEBCUOUVHUUOUULUVGUUOUULVABCYD
      UVEUUOUULUVEUUOOZUULYDUVIUUJYBUUKYCUUOUVEUUJYBWCUUEDUUIEVKVLUUIEUUEDVKVNV
      OVPVQVRVSVTWAWBWBWDWEWFWGVGWBWDYTKLWHVGZWIYIUUAAJCDIWJZWKWLYGKYPYHYGUUEUU
      IWMZDTZLWNZACSZUUEFTZACSUUEYPTZUUEYHTYGUVNUVPACYFACWOYGUUTUVNUVPWCZYGUUTY
      FUVRYFACXFYAUVRYEUVNUUEDUHZTYAUVPLUUEDUUQWPYAUVSFUUEFGDWQWRWSWTXAVRXBUVLY
      ITZLWNUVMACSZLWNUVQUVOUVTUWALAUVLCDXCXGLUUEYIUUQWPUVMALCXDXEAUUECFXCXHXIY
      IYHXJXKYGYNACDUGZUCZGACDXLYGUWBGMZACNUWCGMYFUWDACYAUWDYEYAFGDUDUWDFGDXMFG
      DXNVGWTXOACUWBGXRWLXPYHGYIXQXKYGUUDYLYGUUBUUDUVJXSYKUUCYIUUAUVKXTWKWLYHGY
      IVDXK $.
      $( [24-Jun-2015] $) $( [20-May-2013] $)
  $}

  $( The restriction of a one-to-one onto function to a difference maps onto
     the difference of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resdif $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
                 ( F |` ( A \ B ) ) : ( A \ B ) -1-1-onto-> ( C \ D ) ) $=
    ( ccnv wfun cres wfo cdif cima wf1o wceq syl wb ax-mp crn df-ima wa forn wf
    w3a cdm wss fofun difss fof fdm syl5sseqr fores syl2anc indif reseq2i eqtri
    cin resres foeq1 rneqi 3eqtr4i foeq3 bitri funres11 biimpri syl2anr 3adant3
    sylib dff1o3 syl5eq anim12i imadif difeq12 sylan9eq sylan2 3impb f1oeq3
    mpbid ) EFGZACEAHZIZBDEBHZIZUBZABJZEWCKZEWCHZLZWCCDJZWELZVQVSWFWAVSWCWDWEIZ
    WEFGZWFVQVSWCVRWCKZVRWCHZIZWIVSVRGWCVRUCZUDWMACVRUEVSAWCWNABUFVSACVRUAWNAMA
    CVRUGACVRUHNUIWCVRUJUKWMWCWKWEIZWIWLWEMWMWOOWLEAWCUOZHWEEAWCUPWPWCEABULUMUN
    ZWCWKWLWEUQPWKWDMWOWIOWLQWEQWKWDWLWEWQURVRWCREWCRUSWKWDWCWEUTPVAVFWCEVBWFWI
    WJSWCWDWEVGVCVDVEWBWDWGMZWFWHOVQVSWAWRVSWASVQEAKZCMZEBKZDMZSZWRVSWTWAXBVSWS
    VRQCEARACVRTVHWAXAVTQDEBRBDVTTVHVIVQXCWDWSXAJWGABEVJWSCXADVKVLVMVNWDWGWCWEV
    ONVP $.
    $( [11-Apr-2009] $)

  $( The restriction of a one-to-one onto function to an intersection maps onto
     the intersection of the images.  (Contributed by Paul Chapman,
     11-Apr-2009.) $)
  resin $p |- ( ( Fun `' F /\ ( F |` A ) : A -onto-> C /\
                               ( F |` B ) : B -onto-> D ) ->
      ( F |` ( A i^i B ) ) : ( A i^i B ) -1-1-onto-> ( C i^i D ) ) $=
    ( ccnv wfun cres wfo w3a cdif wf1o cin resdif f1ofo syl wceq wb dfin4 ax-mp
    syld3an3 f1oeq3 f1oeq2 reseq2i f1oeq1 3bitrri sylib ) EFGZACEAHIZBDEBHIZJZA
    ABKZKZCCDKZKZEUMHZLZABMZCDMZEURHZLZUHUIUJULUNEULHZIZUQUKULUNVBLVCABCDENULUN
    VBOPAULCUNENUAVAURUOUTLZUMUOUTLZUQUSUOQVAVDRCDSUSUOURUTUBTURUMQVDVERABSZURU
    MUOUTUCTUTUPQVEUQRURUMEVFUDUMUOUTUPUETUFUG $.
    $( [11-Apr-2009] $)

  $( Composition of one-to-one onto functions. $)
  f1oco $p |- ( ( F : B -1-1-onto-> C /\ G : A -1-1-onto-> B ) ->
              ( F o. G ) : A -1-1-onto-> C ) $=
    ( wf1 wfo wa ccom wf1o f1co foco anim12i an4s df-f1o anbi12i 3imtr4i ) BCDF
    ZBCDGZHZABEFZABEGZHZHACDEIZFZACUDGZHZBCDJZABEJZHACUDJRUASUBUGRUAHUESUBHUFAB
    CDEKABCDELMNUHTUIUCBCDOABEOPACUDOQ $.
    $( [19-Mar-1998] $)

  $( The converse of an injective function is bijective.  (Contributed by FL,
     11-Nov-2011.) $)
  f1cnv $p |- ( F : A -1-1-> B -> `' F : ran F -1-1-onto-> A ) $=
    ( wf1 crn wf1o ccnv f1f1orn f1ocnv syl ) ABCDACEZCFKACGFABCHAKCIJ $.
    $( [11-Nov-2011] $)

  $( Composition with the converse.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  funcocnv2 $p |- ( Fun F -> ( F o. `' F ) = ( _I |` ran F ) ) $=
    ( wfun ccnv ccom cid wss crn cres wceq wrel df-fun simprbi cdm dfdm4 dmcoeq
    iss ax-mp df-rn eqtr4i a1i reseq2d eqeq2d syl5bb mpbid ) ABZAACZDZEFZUGEAGZ
    HZIZUEAJUHAKLUHUGEUGMZHZIUEUKUGPUEUMUJUGUEULUIEULUIIUEULUFMZUIAMUFGIULUNIAN
    AUFOQARSTUAUBUCUD $.
    $( [2-Sep-2009] $)

  $( The composition of an onto function and its converse.  (Contributed by
     Stefan O'Rear, 12-Feb-2015.) $)
  fococnv2 $p |- ( F : A -onto-> B -> ( F o. `' F ) = ( _I |` B ) ) $=
    ( wfo ccnv ccom cid crn cres wfun wceq fofun funcocnv2 forn reseq2d eqtrd
    syl ) ABCDZCCEFZGCHZIZGBIRCJSUAKABCLCMQRTBGABCNOP $.
    $( [12-Feb-2015] $)

  $( The composition of a one-to-one onto function and its converse equals the
     identity relation restricted to the function's range.  (The proof was
     shortened by Stefan O'Rear, 12-Feb-2015.) $)
  f1ococnv2 $p |- ( F : A -1-1-onto-> B -> ( F o. `' F ) = ( _I |` B ) ) $=
    ( wf1o wfo ccnv ccom cid cres wceq f1ofo fococnv2 syl ) ABCDABCECCFGHBIJABC
    KABCLM $.
    $( [12-Feb-2015] $) $( [13-Dec-2003] $)

  $( Composition of an injective function with its converse.  (Contributed by
     FL, 11-Nov-2011.) $)
  f1cocnv2 $p |- ( F : A -1-1-> B -> ( F o. `' F ) = ( _I |` ran F ) ) $=
    ( wf1 wfun ccnv ccom cid crn cres wceq f1fun funcocnv2 syl ) ABCDCECCFGHCIJ
    KABCLCMN $.
    $( [11-Nov-2011] $)

  $( The composition of a one-to-one onto function's converse and itself equals
     the identity relation restricted to the function's domain. $)
  f1ococnv1 $p |- ( F : A -1-1-onto-> B -> ( `' F o. F ) = ( _I |` A ) ) $=
    ( wf1o ccnv ccom cres wrel wceq f1orel dfrel2 sylib coeq2d f1ocnv f1ococnv2
    cid syl eqtr3d ) ABCDZCEZTEZFZTCFPAGZSUACTSCHUACIABCJCKLMSBATDUBUCIABCNBATO
    QR $.
    $( [13-Dec-2003] $)

  $( Composition of an injective function with its converse.  (Contributed by
     FL, 11-Nov-2011.) $)
  f1cocnv1 $p |- ( F : A -1-1-> B -> ( `' F o. F ) = ( _I |` A ) ) $=
    ( wf1 crn wf1o ccnv ccom cid cres wceq f1f1orn f1ococnv1 syl ) ABCDACEZCFCG
    CHIAJKABCLAOCMN $.
    $( [11-Nov-2011] $)

  $( Re-express a constraint on a composition as a constraint on the
     composand.  (Contributed by Stefan O'Rear, 7-Mar-2015.) $)
  funcoeqres $p |- ( ( Fun G /\ ( F o. G ) = H ) ->
      ( F |` ran G ) = ( H o. `' G ) ) $=
    ( wfun ccom wceq crn cres cid funcocnv2 coeq2d coass eqcomi coires1 3eqtr3g
    ccnv coeq1 sylan9req ) BDZABEZCFABGZHZTBPZEZCUCESABUCEZEZAIUAHZEUDUBSUEUGAB
    JKUDUFABUCLMAUANOTCUCQR $.
    $( [7-Mar-2015] $)

  ${
    $d x F $.  $d x A $.  $d x B $.
    f11o.1 $e |- F e. _V $.
    $( Relationship between a mapping and an onto mapping.  Figure 38 of
       [Enderton] p. 145. $)
    ffoss $p |- ( F : A --> B <-> E. x ( F : A -onto-> x /\ x C_ B ) ) $=
      ( wf cv wfo wss wa wex crn wfn df-f dffn4 anbi1i bitri rnex wceq foeq3
      sseq1 anbi12d cla4ev sylbi fof fss sylan exlimiv impbii ) BCDFZBAGZDHZUKC
      IZJZAKZUJBDLZDHZUPCIZJZUOUJDBMZURJUSBCDNUTUQURBDOPQUNUSAUPDERUKUPSULUQUMU
      RUKUPBDTUKUPCUAUBUCUDUNUJAULBUKDFUMUJBUKDUEBUKCDUFUGUHUI $.
      $( [10-May-1998] $)

    $( Relationship between one-to-one and one-to-one onto function. $)
    f11o $p |- ( F : A -1-1-> B <-> E. x ( F : A -1-1-onto-> x /\ x C_ B ) ) $=
      ( wf ccnv wfun wa cv wfo wss wex wf1 wf1o ffoss anbi1i df-f1 dff1o3 bitri
      an32 exbii 19.41v 3bitr4i ) BCDFZDGHZIBAJZDKZUGCLZIZAMZUFIZBCDNBUGDOZUIIZ
      AMZUEUKUFABCDEPQBCDRUOUJUFIZAMULUNUPAUNUHUFIZUIIUPUMUQUIBUGDSQUHUFUIUATUB
      UJUFAUCTUD $.
      $( [4-Apr-1998] $)
  $}

  $( The empty set maps one-to-one into any class. $)
  f10 $p |- (/) : (/) -1-1-> A $=
    ( c0 wf1 wf ccnv wfun f0 fun0 cnv0 funeqi mpbir df-f1 mpbir2an ) BABCBABDBE
    ZFZAGOBFHNBIJKBABLM $.
    $( [7-Apr-1998] $)

  $( One-to-one onto mapping of the empty set. $)
  f1o00 $p |- ( F : (/) -1-1-onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wf1o wfn ccnv wceq dff1o4 fn0 biimpi adantr cdm dm0 cnveq syl6eq sylbi
    wa cnv0 fneq1d jca biimpa fndm syl syl5reqr biimpri eqid mpbir fneq2 mpbiri
    sylan9bb impbii bitri ) CABDBCEZBFZAEZQZBCGZACGZQZCABHUPUSUPUQURUMUQUOUMUQB
    IZJKUPCCLZAMUPCAEZVAAGUMUOVBUMAUNCUMUQUNCGUTUQUNCFCBCNROZPSUAACUBUCUDTUSUMU
    OUQUMURUMUQUTUEKUSUOCCEZVDCCGCUFCIUGUQUOVBURVDUQAUNCVCSACCUHUJUITUKUL $.
    $( [15-Apr-1998] $)

  $( Onto mapping of the empty set. $)
  fo00 $p |- ( F : (/) -onto-> A <-> ( F = (/) /\ A = (/) ) ) $=
    ( c0 wfo wf1o wceq wf1 wfn fofn fn0 f10 f1eq1 mpbiri sylbi syl ancri df-f1o
    wa sylibr f1ofo impbii f1o00 bitri ) CABDZCABEZBCFZACFRUDUEUDCABGZUDRUEUDUG
    UDBCHZUGCABIUHUFUGBJUFUGCACGAKCABCLMNOPCABQSCABTUAABUBUC $.
    $( [22-Mar-2006] $)

  $( One-to-one onto mapping of the empty set. $)
  f1o0 $p |- (/) : (/) -1-1-onto-> (/) $=
    ( c0 wf1o wceq eqid f1o00 mpbir2an ) AAABAACZGADZHAAEF $.
    $( [16-Feb-2004] $) $( [10-Sep-2004] $)

  $( A restriction of the identity relation is a one-to-one onto function.
     (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
  f1oi $p |- ( _I |` A ) : A -1-1-onto-> A $=
    ( cid cres wf1o wfn ccnv fnresi cnvresid fneq1i mpbir dff1o4 mpbir2an ) AAB
    ACZDMAEZMFZAEZAGZPNQAOMAHIJAAMKL $.
    $( [22-Oct-2011] $) $( [30-Apr-1998] $)

  $( The identity relation is a one-to-one onto function on the universe. $)
  f1ovi $p |- _I : _V -1-1-onto-> _V $=
    ( cvv cid cres wf1o f1oi wceq wb wrel reli dfrel3 mpbi f1oeq1 ax-mp ) AABAC
    ZDZAABDZAENBFZOPGBHQIBJKAANBLMK $.
    $( [16-May-2004] $)

  ${
    f1osn.1 $e |- A e. _V $.
    f1osn.2 $e |- B e. _V $.
    $( A singleton of an ordered pair is one-to-one onto function.  (The proof
       was shortened by Andrew Salmon, 22-Oct-2011.) $)
    f1osn $p |- { <. A , B >. } : { A } -1-1-onto-> { B } $=
      ( csn cop wf1o wfn ccnv fnsn cnvsn fneq1i mpbir dff1o4 mpbir2an ) AEZBEZA
      BFEZGRPHRIZQHZABCDJTBAFEZQHBADCJQSUAABCDKLMPQRNO $.
      $( [22-Oct-2011] $) $( [18-May-1998] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( A singleton of an ordered pair is one-to-one onto function.
       (Contributed by Mario Carneiro, 12-Jan-2013.) $)
    f1osng $p |- ( ( A e. V /\ B e. W ) ->
                   { <. A , B >. } : { A } -1-1-onto-> { B } ) $=
      ( va vb cv csn cop wf1o wceq sneq f1oeq2 syl opeq1 f1oeq1 3syl bitrd vex
      wb f1oeq3 opeq2 f1osn vtocl2g ) EGZHZFGZHZUEUGIZHZJZAHZUHAUGIZHZJZULBHZAB
      IZHZJZEFABCDUEAKZUKULUHUJJZUOUTUFULKUKVATUEALUFULUHUJMNUTUIUMKUJUNKVAUOTU
      EAUGOUIUMLULUHUJUNPQRUGBKZUOULUPUNJZUSVBUHUPKUOVCTUGBLUHUPULUNUANVBUMUQKU
      NURKVCUSTUGBAUBUMUQLULUPUNURPQRUEUGESFSUCUD $.
      $( [12-Jan-2013] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( A two-element swap is a bijection on a pair.  (Contributed by Mario
       Carneiro, 23-Jan-2015.) $)
    f1oprswap $p |- ( ( A e. V /\ B e. W ) ->
      { <. A , B >. , <. B , A >. } : { A , B } -1-1-onto-> { A , B } ) $=
      ( wcel wa cpr cop wf1o wceq csn wb dfsn2 syl5eq syl bitrd wfn ccnv cnvsng
      cun f1osng anidms ad2antrr opeq2 opeq1 preq12d f1oeq1 preq2 f1oeq2 f1oeq3
      adantl mpbid wne simpll simplr simpr fnprg syl221anc ancoms uneq12d uncom
      syl6eq adantr df-pr cnveqi cnvun eqtri 3eqtr4g fneq1d sylanbrc pm2.61dane
      mpbird dff1o4 ) ACEZBDEZFZABGZVQABHZBAHZGZIZABVPABJZFAKZWCAAHZKZIZWAVNWFV
      OWBVNWFAACCUAUBUCWBWFWALVPWBWFWCWCVTIZWAWBWEVTJWFWGLWBWEWDWDGVTWDMWBWDVRW
      DVSABAUDABAUEUFNWCWCWEVTUGOWBWCVQJZWGWALWBWCAAGVQAMABAUHNWHWGVQWCVTIWAWCV
      QWCVTUIWCVQVQVTUJPOPUKULVPABUMZFZVTVQQZVTRZVQQZWAWJVNVOVOVNWIWKVNVOWIUNZV
      NVOWIUOZWOWNVPWIUPABBACDDCUQURZWJWMWKWPWJVQWLVTWJVRKZRZVSKZRZTZWQWSTZWLVT
      VPXAXBJWIVPXAWSWQTXBVPWRWSWTWQABCDSVOVNWTWQJBADCSUSUTWSWQVAVBVCWLXBRXAVTX
      BVRVSVDZVEWQWSVFVGXCVHVIVLVQVQVTVMVJVK $.
      $( [23-Jan-2015] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    fv2.1 $e |- A e. _V $.
    $( Alternate definition of function value.  Definition 10.11 of [Quine]
       p. 68.  (The proof was shortened by Andrew Salmon, 17-Sep-2011.) $)
    fv2 $p |- ( F ` A ) = U. { x | A. y ( A F y <-> y = x ) } $=
      ( cfv csn cima cv wceq cab cuni wbr wb wal df-fv wcel dfcleq cop vex elsn
      elimasn df-br bitr4i bibi12i albii bitri abbii unieqi eqtri ) CDFDCGHZAIZ
      GZJZAKZLCBIZDMZUPULJZNZBOZAKZLACDPUOVAUNUTAUNUPUKQZUPUMQZNZBOUTBUKUMRVDUS
      BVBUQVCURVBCUPSDQUQDCUPEBTUBCUPDUCUDBULUAUEUFUGUHUIUJ $.
      $( [18-Sep-2011] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( A function's value at a proper class is the empty set. $)
    fvprc $p |- ( -. A e. _V -> ( F ` A ) = (/) ) $=
      ( vx cvv wcel wn cfv c0 cuni csn cima cv wceq cab wex wne vex snnz syl6eq
      df-fv df-ne mpbi snprc imaeq2 sylbi ima0 eqeq1d eqcom syl6bb mtbiri nexdv
      abn0 necon1bbii sylib unieqd syl5eq uni0 ) ADEFZABGZHIZHURUSBAJZKZCLZJZMZ
      CNZIUTCABTURVFHURVECOZFVFHMURVECURVEVDHMZVDHPVHFVCCQRVDHUAUBURVEHVDMVHURV
      BHVDURVBBHKZHURVAHMVBVIMAUCVAHBUDUEBUFSUGHVDUHUIUJUKVGVFHVECULUMUNUOUPUQS
      $.
      $( [20-May-1998] $)
  $}

  ${
    $d x A $.  $d x y B $.  $d x y F $.
    elfv.1 $e |- B e. _V $.
    $( Membership in a function value. $)
    elfv $p |- ( A e. ( F ` B ) <->
               E. x ( A e. x /\ A. y ( B F y <-> y = x ) ) ) $=
      ( cfv wcel cv wbr wceq wb wal cab cuni wa wex fv2 eleq2i eluniab bitri )
      CDEGZHCDBIZEJUCAIZKLBMZANOZHCUDHUEPAQUBUFCABDEFRSUEACTUA $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.  $d x G $.
    $( Equality theorem for function value. $)
    fveq1 $p |- ( F = G -> ( F ` A ) = ( G ` A ) ) $=
      ( vx wceq csn cima cab cuni cfv imaeq1 eqeq1d abbidv unieqd df-fv 3eqtr4g
      cv ) BCEZBAFZGZDQFZEZDHZICSGZUAEZDHZIABJACJRUCUFRUBUEDRTUDUABCSKLMNDABODA
      COP $.
      $( [29-Dec-1996] $)

    $( Equality theorem for function value. $)
    fveq2 $p |- ( A = B -> ( F ` A ) = ( F ` B ) ) $=
      ( vx wceq csn cima cab cuni cfv sneq imaeq2d eqeq1d abbidv unieqd 3eqtr4g
      cv df-fv ) ABEZCAFZGZDQFZEZDHZICBFZGZUBEZDHZIACJBCJSUDUHSUCUGDSUAUFUBSTUE
      CABKLMNODACRDBCRP $.
      $( [29-Dec-1996] $)
  $}

  ${
    fveq1i.1 $e |- F = G $.
    $( Equality inference for function value. $)
    fveq1i $p |- ( F ` A ) = ( G ` A ) $=
      ( wceq cfv fveq1 ax-mp ) BCEABFACFEDABCGH $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq1d.1 $e |- ( ph -> F = G ) $.
    $( Equality deduction for function value. $)
    fveq1d $p |- ( ph -> ( F ` A ) = ( G ` A ) ) $=
      ( wceq cfv fveq1 syl ) ACDFBCGBDGFEBCDHI $.
      $( [2-Sep-2003] $)
  $}

  ${
    fveq2i.1 $e |- A = B $.
    $( Equality inference for function value. $)
    fveq2i $p |- ( F ` A ) = ( F ` B ) $=
      ( wceq cfv fveq2 ax-mp ) ABEACFBCFEDABCGH $.
      $( [28-Jul-1999] $)
  $}

  ${
    fveq2d.1 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value. $)
    fveq2d $p |- ( ph -> ( F ` A ) = ( F ` B ) ) $=
      ( wceq cfv fveq2 syl ) ABCFBDGCDGFEBCDHI $.
      $( [29-May-1999] $)
  $}

  ${
    fveq12i.1 $e |- F = G $.
    fveq12i.2 $e |- A = B $.
    $( Equality deduction for function value.  (Contributed by FL,
       27-Jun-2014.) $)
    fveq12i $p |- ( F ` A ) = ( G ` B ) $=
      ( cfv fveq1i fveq2i eqtri ) ACGADGBDGACDEHABDFIJ $.
      $( [27-Jun-2014] $)
  $}

  ${
    fveq12d.1 $e |- ( ph -> F = G ) $.
    fveq12d.2 $e |- ( ph -> A = B ) $.
    $( Equality deduction for function value.  (Contributed by FL,
       22-Dec-2008.) $)
    fveq12d $p |- ( ph -> ( F ` A ) = ( G ` B ) ) $=
      ( cfv fveq1d fveq2d eqtrd ) ABDHBEHCEHABDEFIABCEGJK $.
      $( [1-Dec-2010] $) $( [22-Dec-2008] $)
  $}

  ${
    $d y z F $.  $d y z A $.  $d x y z $.
    hbfv.1 $e |- ( y e. F -> A. x y e. F ) $.
    hbfv.2 $e |- ( y e. A -> A. x y e. A ) $.
    $( Bound-variable hypothesis builder for function value. $)
    hbfv $p |- ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) $=
      ( vz cfv csn cima cv wceq cab cuni df-fv hbsn hbima wcel ax-17 hbeq hbuni
      hbab hbxfreq ) ABCDHDCIZJZGKIZLZGMZNGCDOABUHUGAGBABBUEUFABDUDEABCFPQBKUFR
      ASTUBUAUC $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d y z A $.  $d y z F $.  $d y ph $.  $d x y z $.
    hbfvd.1 $e |- ( ph -> A. x ph ) $.
    hbfvd.2 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hbfvd.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbfv .  If a
       closed theorem version is desired, see ~ hbfvd2 . $)
    hbfvd $p |- ( ph -> ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) ) $=
      ( vz cv wcel wal cab cfv wi hba1 hbab wceq alrimiv abidhb a1i syl fveq12d
      hbfv eleq2d albid 3imtr3d ) ACJZIJZDKZBLZIMZUIEKZBLZIMZNZKZUQBLZUHDENZKZU
      TBLUQUROABCULUOUNBICUMBPQUKBICUJBPQUDUAAUPUSUHAULDUOEAUHEKZVABLOZCLUOERAV
      BCGSBCIETUBAUHDKZVCBLOZCLULDRAVDCHSBCIDTUBUCUEZAUQUTBFVEUFUG $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d y z F $.  $d x y z $.
    hbfvd2.1 $e |- ( ph -> A. x A. y ph ) $.
    hbfvd2.2 $e |- ( ph -> ( y e. F -> A. x y e. F ) ) $.
    hbfvd2.3 $e |- ( ph -> ( y e. A -> A. x y e. A ) ) $.
    $( Deduction version of bound-variable hypothesis builder ~ hbfv .  This
       variant of ~ hbfvd allows us to create a closed theorem form by
       replacing the uncommitted antecedent ` ph ` with an appropriate
       substitution instance. $)
    hbfvd2 $p |- ( ph -> ( y e. ( F ` A ) -> A. x y e. ( F ` A ) ) ) $=
      ( vz cv wcel wal cab cfv wi hba1 hbab wceq alrimi syl hbfv 19.21bi abidhb
      a1i fveq12d eleq2d ax-4 a7s albid 3imtr3d ) ACJZIJZDKZBLZIMZULEKZBLZIMZNZ
      KZUTBLZUKDENZKZVCBLUTVAOABCUOURUQBICUPBPQUNBICUMBPQUAUDAUSVBUKAUODUREAUKE
      KZVDBLOZCLURERAVECAACLZBFUBZGSBCIEUCTAUKDKZVHBLOZCLUODRAVICVGHSBCIDUCTUEU
      FZAUTVCBAVFBLABLZFAVKCBVKCUGUHTVJUIUJ $.
      $( [10-Nov-2005] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z C $.  $d y z F $.  $d x y z $.
    $( Move class substitution in and out of a function value. $)
    csbfv12g $p |- ( A e. C ->
                 [_ A / x ]_ ( F ` B ) = ( [_ A / x ]_ F ` [_ A / x ]_ B ) ) $=
      ( vy vz wcel cv cfv csb hbcsb1g wceq hbcsb1 csbeq1a fveq1d fveq2d 3eqtr3d
      ax-17 csbcog hbfvd hbfv hbeq vex vtoclef a1i 3eqtrd csbiegf fveq12d ) BDH
      ZFBAFIZCEJZKZKFBAUKCKZKZFBAUKEKZKZJZABULKABCKZABEKZJFGBUMURDUJFGUOUQUJFSF
      GBUPDGIZBHFSZLFGBUNDVBLUAUKBMZUMUNUPJZUNUQJURUMVDMZVCVEAUKAGGUMVDAGUKULVA
      UKHASZNAGUNUPAGUKEVFNAGUKCVFNUBUCFUDAIUKMZULCUPJUMVDVGCEUPAUKEOPAUKULOVGC
      UNUPAUKCOQRUEUFVCUNUPUQFBUPOPVCUNUOUQFBUNOQUGUHAFBULDTUJUOUSUQUTAFBEDTAFB
      CDTUIR $.
      $( [11-Nov-2005] $)
  $}

  ${
    $d A y $.  $d F y $.  $d B y $.  $d C y $.  $d x y $.
    $( Move class substitution in and out of a function value.(This is
       ~ csbfv12g with a shortened proof, shortened by Alan Sare,
       10-Nov-2012.)  The proof is derived from the virtual deduction proof
       ~ csbfv12gALTVD .  Although the proof is shorter, the total number of
       steps of all theorems used in the proof is probably longer. $)
    csbfv12gALT $p |- ( A e. C -> [_ A / x ]_ ( F ` B ) =
                ( [_ A / x ]_ F ` [_ A / x ]_ B ) ) $=
      ( vy wcel cfv csb csn cima wceq cab cuni df-fv csbeq2i csbunig wsbc eqtrd
      cv csbabg sbceqg csbima12g csbsng imaeq2d csbconstgfv bitrd abbidv unieqd
      eqeq12d 3eqtrd syl6eqr ) BDGZABCEHZIZABEIZABCIZJZKZFTJZLZFMZNZUQUPHUMUOAB
      ECJZKZUTLZFMZNZIABVGIZNVCABUNVHDFCEOPABVGDQUMVIVBUMVIVFABRZFMVBVFAFBDUAUM
      VJVAFUMVJABVEIZABUTIZLVAABVEUTDUBUMVKUSVLUTUMVKUPABVDIZKUSABVDDEUCUMVMURU
      PABCDUDUESABUTDUFUJUGUHSUIUKFUQUPOUL $.
      $( [10-Nov-2012] $)
  $}

  ${
    $d y A $.  $d y C $.  $d x y F $.
    $( Move class substitution in and out of a function value. $)
    csbfv2g $p |- ( A e. C -> [_ A / x ]_ ( F ` B ) =
                  ( F ` [_ A / x ]_ B ) ) $=
      ( wcel cfv csb csbfv12g csbconstgfv fveq1d eqtrd ) BDFZABCEGHABCHZABEHZGN
      EGABCDEIMNOEABEDJKL $.
      $( [10-Nov-2005] $)

    $( Substitution for a function value. $)
    csbfvg $p |- ( A e. C -> [_ A / x ]_ ( F ` x ) = ( F ` A ) ) $=
      ( wcel cv cfv csb csbfv2g csbvarg fveq2d eqtrd ) BCEZABAFZDGHABNHZDGBDGAB
      NCDIMOBDABCJKL $.
      $( [1-Jan-2006] $)
  $}

  ${
    $d x A $.  $d x F $.
    $( The value of a class exists.  Corollary 6.13 of [TakeutiZaring]
       p. 27. $)
    fvex $p |- ( F ` A ) e. _V $=
      ( vx cfv csn cima wceq cab cuni cvv df-fv wmo wcel moeq unieq vex syl6req
      cv unisn immoi moabex mp2b uniex eqeltri ) ABDBAEFZCRZEZGZCHZIJCABKUIUFUE
      IZGZCLUHCLUIJMCUJNUHUKCUHUJUGIUFUEUGOUFCPSQTUHCUAUBUCUD $.
      $( [30-Dec-1996] $)
  $}

  $( Move a conditional outside of a function.  (Contributed by Jeff Madsen,
     2-Sep-2009.) $)
  fvif $p |- ( F ` if ( ph , A , B ) ) = if ( ph , ( F ` A ) , ( F ` B ) ) $=
    ( cif cfv fveq2 ifsb ) ABCABCEZDFBDFCDFIBDGICDGH $.
    $( [2-Sep-2009] $)

  ${
    $d x y z F $.  $d x y z A $.
    fv3.1 $e |- A e. _V $.
    $( Alternate definition of the value of a function.  Definition 6.11 of
       [TakeutiZaring] p. 26. $)
    fv3 $p |- ( F ` A ) = { x | ( E. y ( x e. y /\ A F y ) /\
              E! y A F y ) } $=
      ( vz cv wcel wbr wa wex weu cfv wceq wb wal elfv wi breq2 sylib bi2 alimi
      ceqsalv anim2i eximi eleq2 anbi12d cbvexv 19.40 simprd df-eu sylibr hbeu1
      vex jca ax-17 hba1 hban hbex hbim bi1 ax-14 syl6 com23 imp3a anc2ri com12
      a4s eximdv syl5bi exlimi imp impbii bitri abbi2i ) AGZBGZHZCVQDIZJZBKZVSB
      LZJZACDMZVPWDHVPFGZHZVSVQWENZOZBPZJZFKZWCFBVPCDEQWKWCWKWAWBWKWFCWEDIZJZFK
      WAWJWMFWIWLWFWIWGVSRZBPWLWHWNBVSWGUAUBVSWLBWEFUNVQWECDSUCTUDUEWMVTFBWEVQN
      WFVRWLVSWEVQVPUFWEVQCDSUGUHTWKWIFKZWBWKWFFKWOWFWIFUIUJVSBFUKZULUOWAWBWKVT
      WBWKRBWBWKBVSBUMWJBFWFWIBWFBUPWHBUQURUSUTWBWOVTWKWPVTWIWJFWIVTWJWIVTWFWHV
      TWFRBWHVRVSWFWHVSVRWFWHVSWGVRWFRVSWGVABFAVBVCVDVEVHVFVGVIVJVKVLVMVNVO $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x F $.  $d x A $.  $d x B $.
    $( The value of a restricted function. $)
    fvres $p |- ( A e. B -> ( ( F |` B ) ` A ) = ( F ` A ) ) $=
      ( vx wcel cres csn cima cv wceq cab cuni cfv crn wss snssi resabs1 df-ima
      3eqtr4g df-fv rneq 3syl eqeq1d abbidv unieqd ) ABEZCBFZAGZHZDIGZJZDKZLCUH
      HZUJJZDKZLAUGMACMUFULUOUFUKUNDUFUIUMUJUFUGUHFZNZCUHFZNZUIUMUFUHBOUPURJUQU
      SJABPCUHBQUPURUAUBUGUHRCUHRSUCUDUEDAUGTDACTS $.
      $( [16-Feb-2004] $) $( [2-Aug-1994] $)
  $}

  $( The value of a member of the domain of a subclass of a function. $)
  funssfv $p |- ( ( Fun F /\ G C_ F /\ A e. dom G ) ->
                ( F ` A ) = ( G ` A ) ) $=
    ( wfun wss cdm wcel cfv wceq wa cres fvres eqcomd funssres fveq1d sylan9eqr
    3impa ) BDZCBEZACFZGZABHZACHZIUARSJZUBABTKZHZUCUAUFUBATBLMUDAUECBCNOPQ $.
    $( [29-May-2007] $) $( [15-Aug-1994] $)

  ${
    $d y z F $.  $d y z A $.
    tz6.12.1 $e |- A e. _V $.
    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12-1 $p |- ( ( A F y /\ E! y A F y ) -> ( F ` A ) = y ) $=
      ( vz cv wbr weu wa cfv wi wex fv3 abeq2i exancom anbi1i ancom bitri sylbi
      wcel eupick com12 adantr 19.8a anim1i anasss sylibr expcom impbid eqrdv )
      BAFZCGZULAHZIZEBCJZUKUNEFZUOTZUPUKTZULUQURKUMUQULURUQURULIZALZUMIZULURKZV
      AEUOEABCDMNZVAUMULURIALZIZVBVAVDUMIVEUTVDUMURULAOPVDUMQRULURAUASSUBUCURUN
      UQURUNIVAUQURULUMVAUSUTUMUSAUDUEUFVCUGUHUIUJ $.
      $( [30-Apr-2004] $)

    $( Function value.  Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12 $p |- ( ( <. A , y >. e. F /\ E! y <. A , y >. e. F ) ->
                 ( F ` A ) = y ) $=
      ( cv cop wcel wbr weu cfv wceq df-br eubii tz6.12-1 syl2anbr ) BAEZFCGZBP
      CHZRAIBCJPKQAIBPCLZRQASMABCDNO $.
      $( [10-Jul-1994] $)
  $}

  ${
    $d x y z w $.  $d z w v F $.
    tz6.12f.1 $e |- ( w e. F -> A. y w e. F ) $.
    $( Function value, using bound-variable hypotheses instead of distinct
       variable conditions. $)
    tz6.12f $p |- ( ( <. x , y >. e. F /\ E! y <. x , y >. e. F ) ->
                 ( F ` x ) = y ) $=
      ( vz cv cop wcel weu wa cfv wceq wi opeq2 eleq1d wb ax-17 hbel cbveu a1i
      anbi12d eqeq2 imbi12d vex tz6.12 chvarv ) AGZFGZHZDIZUKFJZKZUHDLZUIMZNUHB
      GZHZDIZURBJZKZUNUPMZNFBUIUPMZUMUTUOVAVBUKURULUSVBUJUQDUIUPUHOPZULUSQVBUKU
      RFBBCCUJDCGUJIBRESURFRVCTUAUBUIUPUNUCUDFUHDAUEUFUG $.
      $( [30-Aug-1999] $)
  $}

  ${
    $d x y z A $.  $d x y z F $.
    $( Function value when ` F ` is not a function.  Theorem 6.12(2) of
       [TakeutiZaring] p. 27. $)
    tz6.12-2 $p |- ( -. E! y A F y -> ( F ` A ) = (/) ) $=
      ( vx vz cvv wcel cv wbr weu wn cfv c0 wceq wi wss cab fveq2 wa wal eubidv
      breq1 abbidv sseq12d wex vex simpr ss2abi eqsstri vtoclg ax-17 biidd elab
      fv3 eq0 notbii albii bitr2i sylib sseq2d syl5ib ss0 syl6com fvprc pm2.61i
      a1d ) BFGZBAHZCIZAJZKZBCLZMNZOVKVGVLMPZVMVGVLVJDQZPZVKVNEHZCLZVQVHCIZAJZD
      QZPVPEBFVQBNZVRVLWAVOVQBCRWBVTVJDWBVSVIAVQBVHCUBUAUCUDVRDHZVHGVSSAUEZVTSZ
      DQWADAVQCEUFZUNWEVTDWDVTUGUHUIUJVKVOMVLVKVKETZVOMNZVKEUKWHVQVOGZKZETWGEVO
      UOWJVKEWIVJVJVJDVQWFWCVQNVJULUMUPUQURUSUTVAVLVBVCVGKVMVKBCVDVFVE $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d y F $.  $d y A $.
    tz6.12c.1 $e |- A e. _V $.
    $( Corollary of Theorem 6.12(1) of [TakeutiZaring] p. 27. $)
    tz6.12c $p |- ( E! y A F y -> ( ( F ` A ) = y <-> A F y ) ) $=
      ( cv wbr weu cfv wceq wex euex wi hbeu1 ax-17 hbim tz6.12-1 breq2 biimprd
      expcom syli com12 exlimi mpcom syl5ibcom impbid ) BAEZCFZAGZBCHZUFIZUGUHB
      UICFZUJUGUGAJUHUKUGAKUGUHUKLAUHUKAUGAMUKANOUHUGUKUGUHUJUKUGUHUJABCDPSZUJU
      KUGUIUFBCQZRTUAUBUCUMUDULUE $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d x y F $.  $d x y A $.  $d y B $.
    $( Corollary of Theorem 6.12(2) of [TakeutiZaring] p. 27.  (Contributed by
       Mario Carneiro, 17-Nov-2014.) $)
    tz6.12i $p |- ( B =/= (/) -> ( ( F ` A ) = B -> A F B ) ) $=
      ( vy vx cfv wceq c0 wne wbr cvv wcel wi neeq1 imbi12d weu necon1ai vtoclg
      cv wb fvex eleq1 mpbii eqeq2 breq2 fvprc tz6.12-2 breq1 eubidv eqeq1d vex
      fveq2 bibi12d tz6.12c sylc biimpd syl6bir pm2.43a mpcom com12 ) ACFZBGZBH
      IZABCJZBKLZVBVCVDMZVBVAKLVEACUAVABKUBUCVADSZGZVGHIZAVGCJZMZMVBVFMDBKVGBGZ
      VHVBVKVFVGBVAUDVLVIVCVJVDVGBHNVGBACUEOOVIVHVJVHVIVAHIZVHVJMVAVGHNVMVHVJVM
      AKLZVJDPZVHVJTZVNVAHACUFQVOVAHDACUGQESZVGCJZDPZVQCFZVGGZVRTZMVOVPMEAKVQAG
      ZVSVOWBVPWCVRVJDVQAVGCUHZUIWCWAVHVRVJWCVTVAVGVQACULUJWDUMODVQCEUKUNRUOUPU
      QURRUSUT $.
      $( [17-Nov-2014] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The value of a class outside its domain is the empty set. $)
    ndmfv $p |- ( -. A e. dom F -> ( F ` A ) = (/) ) $=
      ( vy cvv wcel cdm wn cfv c0 wceq wi cv wbr weu wex eldmg syl5ibr tz6.12-2
      euex con3d syl6 fvprc a1d pm2.61i ) ADEZABFEZGZABHIJZKUEUGACLBMZCNZGUHUEU
      JUFUJUFUEUICOUICSCABDPQTCABRUAUEGUHUGABUBUCUD $.
      $( [24-Aug-1995] $)
  $}

  ${
    ndmfvrcl.1 $e |- dom F = S $.
    ndmfvrcl.2 $e |- -. (/) e. S $.
    $( Reverse closure law for function with the empty set not in its
       domain. $)
    ndmfvrcl $p |- ( ( F ` A ) e. S -> A e. S ) $=
      ( cfv wcel cdm wn c0 ndmfv eleq1d mtbiri con4i syl6eleq ) ACFZBGZACHZBARG
      ZQSIZQJBGETPJBACKLMNDO $.
      $( [26-Apr-1996] $)
  $}

  $( If a function value has a member, the argument belongs to the domain. $)
  elfvdm $p |- ( A e. ( F ` B ) -> B e. dom F ) $=
    ( cfv wcel c0 wne cdm ne0i ndmfv necon1ai syl ) ABCDZEMFGBCHEZMAINMFBCJKL
    $.
    $( [12-Feb-2007] $)

  $( The value of a non-member of a restriction is the empty set. $)
  nfvres $p |- ( -. A e. B -> ( ( F |` B ) ` A ) = (/) ) $=
    ( wcel wn cres cdm cfv c0 wceq cin wa dmres eleq2i elin bitri simplbi con3i
    ndmfv syl ) ABDZEACBFZGZDZEAUBHIJUDUAUDUAACGZDZUDABUEKZDUAUFLUCUGACBMNABUEO
    PQRAUBST $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.
    $( If the restriction of a class to a singleton is not a function, its
       value is the empty set.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    nfunsn $p |- ( -. Fun ( F |` { A } ) -> ( F ` A ) = (/) ) $=
      ( vx vy cfv c0 wceq csn cres wfun wn wrel cv wbr wmo wal weu eumo sylbi
      wa wcel vex brres wb elsn breq1 biimpac immoi syl tz6.12-2 alrimiv relres
      nsyl4 jctil dffun6 sylibr con1i ) ABEFGZBAHZIZJZURKZUTLZCMZDMZUTNZDOZCPZT
      VAVBVHVCVBVGCAVEBNZDQZVGURVJVIDOVGVIDRVFVIDVFVDVEBNZVDUSUAZTVIVDVEBUSDUBU
      CVLVKVIVLVDAGVKVIUDCAUEVDAVEBUFSUGSUHUIDABUJUMUKBUSULUNCDUTUOUPUQ $.
      $( [22-Oct-2011] $) $( [8-Aug-2010] $)
  $}

  $( Function value of the empty set.  (Contributed by Stefan O'Rear,
     26-Nov-2014.) $)
  fv01 $p |- ( (/) ` A ) = (/) $=
    ( c0 cdm wcel wn cfv wceq noel dm0 eleq2i mtbir ndmfv ax-mp ) ABCZDZEABFBGO
    ABDAHNBAIJKABLM $.
    $( [26-Nov-2014] $)

  $( Equal values imply equal values in a restriction. $)
  fveqres $p |- ( ( F ` A ) = ( G ` A ) ->
                ( ( F |` B ) ` A ) = ( ( G |` B ) ` A ) ) $=
    ( wcel cfv wceq cres wi fvres eqeq12d biimprd wn nfvres eqtr4d a1d pm2.61i
    c0 ) ABEZACFZADFZGZACBHFZADBHFZGZISUEUBSUCTUDUAABCJABDJKLSMZUEUBUFUCRUDABCN
    ABDNOPQ $.
    $( [13-Nov-1995] $)

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    $( The second argument of a binary relation on a function is the function's
       value. $)
    funbrfv $p |- ( Fun F -> ( A F B -> ( F ` A ) = B ) ) $=
      ( vx vy wfun wbr cfv wceq cvv wcel wa funrel brrelex12 sylan cv wi anbi2d
      wrel imbi12d breq1 fveq2 eqeq1d breq2 eqeq2 weu funeu vex tz6.12-1 sylan2
      anabss7 vtocl2g mpcom ex ) CFZABCGZACHZBIZAJKBJKLZUOUPLZURUOCSUPUSCMABCNO
      UODPZEPZCGZLZVACHZVBIZQUOAVBCGZLZUQVBIZQUTURQDEABJJVAAIZVDVHVFVIVJVCVGUOV
      AAVBCUARVJVEUQVBVAACUBUCTVBBIZVHUTVIURVKVGUPUOVBBACUDRVBBUQUETUOVCVFVDVCV
      CEUFVFDECUGEVACDUHUIUJUKULUMUN $.
      $( [28-Apr-2015] $) $( [30-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.  $d x y B $.
    $( The second element in an ordered pair member of a function is the
       function's value. $)
    funopfv $p |- ( Fun F -> ( <. A , B >. e. F -> ( F ` A ) = B ) ) $=
      ( cop wcel wbr wfun cfv wceq df-br funbrfv syl5bir ) ABDCEABCFCGACHBIABCJ
      ABCKL $.
      $( [19-Jul-1996] $)
  $}

  ${
    $d x y F $.  $d x A $.  $d x y B $.  $d x C $.
    $( Equivalence of function value and binary relation. $)
    fnbrfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> B F C ) ) $=
      ( vx vy wfn wcel wa cfv wceq wbr eqid cv wb wi fvex breq2 bibi12d weu vex
      eqeq2 imbi2d fneu breq1 eubidv fveq2 eqeq1d imbi12d tz6.12c vtoclg adantl
      mpd vtocl mpbii syl5ibcom wfun fnfun funbrfv syl adantr impbid ) DAGZBAHZ
      IZBDJZCKZBCDLZVEBVFDLZVGVHVEVFVFKZVIVFMVEVFENZKZBVKDLZOZPVEVJVIOZPEVFBDQV
      KVFKZVNVOVEVPVLVJVMVIVKVFVFUBVKVFBDRSUCVEVMETZVNEABDUDVDVQVNPZVCFNZVKDLZE
      TZVSDJZVKKZVTOZPVRFBAVSBKZWAVQWDVNWEVTVMEVSBVKDUEZUFWEWCVLVTVMWEWBVFVKVSB
      DUGUHWFSUIEVSDFUAUJUKULUMUNUOVFCBDRUPVCVHVGPZVDVCDUQWGADURBCDUSUTVAVB $.
      $( [28-Apr-2015] $) $( [19-Apr-2004] $)

    $( Equivalence of function value and ordered pair membership. $)
    fnopfvb $p |- ( ( F Fn A /\ B e. A ) ->
                   ( ( F ` B ) = C <-> <. B , C >. e. F ) ) $=
      ( wfn wcel wa cfv wceq wbr cop fnbrfvb df-br syl6bb ) DAEBAFGBDHCIBCDJBCK
      DFABCDLBCDMN $.
      $( [7-Nov-1995] $)
  $}

  ${
    $( Equivalence of function value and binary relation. $)
    funbrfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> A F B ) ) $=
      ( wfun cdm wfn wcel cfv wceq wbr wb funfn fnbrfvb sylanb ) CDCCEZFAOGACHB
      IABCJKCLOABCMN $.
      $( [26-Mar-2006] $)

    $( Equivalence of function value and ordered pair membership.  Theorem
       4.3(ii) of [Monk1] p. 42. $)
    funopfvb $p |- ( ( Fun F /\ A e. dom F ) ->
                   ( ( F ` A ) = B <-> <. A , B >. e. F ) ) $=
      ( wfun cdm wfn wcel cfv wceq cop wb funfn fnopfvb sylanb ) CDCCEZFAOGACHB
      IABJCGKCLOABCMN $.
      $( [26-Jan-1997] $)
  $}

  ${
    $d x y z w A $.  $d x y B $.  $d x y z w F $.  $d x y C $.
    $( Function value in terms of a binary relation.  (Contributed by Mario
       Carneiro, 19-Mar-2014.) $)
    funbrfv2b $p |- ( Fun F ->
                       ( A F B <-> ( A e. dom F /\ ( F ` A ) = B ) ) ) $=
      ( wfun wbr cdm wcel wa cfv wceq wrel funrel releldm syl pm4.71rd funbrfvb
      wi ex pm5.32da bitr4d ) CDZABCEZACFGZUBHUCACIBJZHUAUBUCUACKZUBUCQCLUEUBUC
      ABCMRNOUAUCUDUBABCPST $.
      $( [19-Mar-2014] $)

    $( Representation of a function in terms of its values. $)
    dffn5 $p |- ( F Fn A <->
                   F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) } ) $=
      ( vz vw wfn cv wcel cfv wceq wa copab cop wb wal fnop ex vex wrel fnopfvb
      pm4.71rd eqcom syl5bb pm5.32da bitr4d eleq1 fveq2 eqeq2d anbi12d opelopab
      eqeq1 anbi2d syl6bbr fnrel relopab eqrel sylancl mpbird fvex eqid fnopab2
      alrimivv fneq1 mpbiri impbii ) DCGZDAHZCIZBHZVHDJZKZLZABMZKZVGVOEHZFHZNZD
      IZVRVNIZOZFPEPZVGWAEFVGVSVPCIZVQVPDJZKZLZVTVGVSWCVSLWFVGVSWCVGVSWCCVPVQDQ
      RUBVGWCWEVSWEWDVQKVGWCLVSVQWDUCCVPVQDUAUDUEUFVMWCVJWDKZLWFABVPVQESFSVHVPK
      ZVIWCVLWGVHVPCUGWHVKWDVJVHVPDUHUIUJVJVQKWGWEWCVJVQWDULUMUKUNVCVGDTVNTVOWB
      OCDUOVMABUPEFDVNUQURUSVOVGVNCGABCVKVNVHDUTVNVAVBCDVNVDVEVF $.
      $( [29-Jan-2004] $)

    $( The range of a function expressed as a collection of the function's
       values. $)
    fnrnfv $p |- ( F Fn A -> ran F = { y | E. x e. A y = ( F ` x ) } ) $=
      ( wfn crn cv cop wcel wex cab cfv wceq wrex dfrn3 wa cdm vex opeldm fndm
      eleq2d syl5ib pm4.71rd eqcom fnopfvb syl5rbbr bitrd exbidv df-rex syl6bbr
      pm5.32da abbidv syl5eq ) DCEZDFAGZBGZHDIZAJZBKUPUODLZMZACNZBKABDOUNURVABU
      NURUOCIZUTPZAJVAUNUQVCAUNUQVBUQPVCUNUQVBUQUODQZIUNVBUOUPDARBRSUNVDCUOCDTU
      AUBUCUNVBUQUTUTUSUPMUNVBPUQUSUPUDCUOUPDUEUFUKUGUHUTACUIUJULUM $.
      $( [20-Oct-2005] $)

    $( A member of a function's range is a value of the function. $)
    fvelrnb $p |- ( F Fn A -> ( B e. ran F <-> E. x e. A ( F ` x ) = B ) ) $=
      ( vy wfn crn wcel cv cfv wceq wrex cab fnrnfv eleq2d cvv fvex eleq1 mpbii
      syl6bb rexlimivw eqeq1 eqcom rexbidv elab3 ) DBFZCDGZHCEIZAIZDJZKZABLZEMZ
      HUJCKZABLZUFUGUMCAEBDNOULUOECUNCPHZABUNUJPHUPUIDQUJCPRSUAUHCKZUKUNABUQUKC
      UJKUNUHCUJUBCUJUCTUDUET $.
      $( [31-Oct-1995] $)

    $( Alternate definition of the image of a function.  (Contributed by Raph
       Levien, 20-Nov-2006.) $)
    dfimafn $p |- ( ( Fun F /\ A C_ dom F ) ->
                  ( F " A ) = { y | E. x e. A ( F ` x ) = y } ) $=
      ( wfun cdm wss wa cv cfv wceq wrex cab wbr cima wcel wb ssel funbrfvb ex
      syl9r imp31 rexbidva abbidv dfima2 syl6reqr ) DEZCDFZGZHZAIZDJBIZKZACLZBM
      UKULDNZACLZBMDCOUJUNUPBUJUMUOACUGUIUKCPZUMUOQZUIUQUKUHPZUGURCUHUKRUGUSURU
      KULDSTUAUBUCUDABDCUEUF $.
      $( [20-Nov-2006] $)

    $( Alternate definition of the image of a function as an indexed union of
       singletons of function values.  (Contributed by Raph Levien,
       20-Nov-2006.) $)
    dfimafn2 $p |- ( ( Fun F /\ A C_ dom F ) ->
                   ( F " A ) = U_ x e. A { ( F ` x ) } ) $=
      ( vy wfun cdm wss wa cima cv cfv wceq cab ciun wrex dfimafn iunab syl6eqr
      csn wcel df-sn eqcom abbii eqtri a1i iuneq2i ) CEBCFGHZCBIZABAJZCKZDJZLZD
      MZNZABUJSZNUGUHULABODMUNADBCPULADBQRABUOUMUOUMLUIBTUOUKUJLZDMUMDUJUAUPULD
      UKUJUBUCUDUEUFR $.
      $( [20-Nov-2006] $)

    $( Membership relation for the values of a function whose image is a
       subclass.  (Contributed by Raph Levien, 20-Nov-2006.) $)
    funimass4 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( vy cdm wss wfun cima cv cfv wcel wral wb wi wal wa wceq wrex syl5bb wbr
      dfss2 eqcom ssel funbrfvb ex syl9 imp31 rexbidva vex elima imbi1d r19.23v
      syl6rbbr syl6bbr albidv ralcom4 eleq1 ceqsalv ralbii bitr3i syl6bb ancoms
      fvex ) BDFZGZDHZDBIZCGZAJZDKZCLZABMZNVIEJZVHLZVNCLZOZEPZVFVGQZVMEVHCUBVSV
      RVNVKRZVPOZABMZEPZVMVSVQWBEVSVQVTABSZVPOWBVSVOWDVPVSWDVJVNDUAZABSVOVSVTWE
      ABVTVKVNRZVSVJBLZQWEVNVKUCVFVGWGWFWENZVFWGVJVELZVGWHBVEVJUDVGWIWHVJVNDUEU
      FUGUHTUIAVNDBEUJUKUNULVTVPABUMUOUPWCWAEPZABMVMWAAEBUQWJVLABVPVLEVKVJDVDVN
      VKCURUSUTVAVBTVC $.
      $( [20-Nov-2006] $)

    $( Function value in an image.  Part of Theorem 4.4(iii) of [Monk1] p. 42.
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    fvelima $p |- ( ( Fun F /\ A e. ( F " B ) ) ->
                  E. x e. B ( F ` x ) = A ) $=
      ( wfun cima wcel cv cfv wceq wrex wbr elimag ibi funbrfv reximdv syl5 imp
      ) DEZBDCFZGZAHZDIBJZACKZUAUBBDLZACKZSUDUAUFABDCTMNSUEUCACUBBDOPQR $.
      $( [22-Oct-2011] $) $( [29-Apr-2004] $)
  $}

  ${
    $d y A $.  $d x y B $.  $d x y C $.  $d x y F $.
    $( Function value in an image.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (An unnecessary distinct variable restriction was removed
       by David Abernethy, 17-Dec-2011.) $)
    fvelimab $p |- ( ( F Fn A /\ B C_ A ) -> ( C e. ( F " B ) <->
                  E. x e. B ( F ` x ) = C ) ) $=
      ( vy wfn wss wa cima wcel cv cfv wceq wrex cvv anim2i eleq1 wb wi rexbidv
      elex fvex mpbii rexlimivw eqeq2 bibi12d imbi2d wfun cdm fnfun adantr fndm
      cab sseq2d biimpar dfimafn syl2anc abeq2d vtoclg impcom pm5.21nd ) EBGZCB
      HZIZDECJZKZALZEMZDNZACOZVEDPKZIVGVLVEDVFUBQVKVLVEVJVLACVJVIPKVLVHEUCVIDPR
      UDUEQVLVEVGVKSZVEFLZVFKZVIVNNZACOZSZTVEVMTFDPVNDNZVRVMVEVSVOVGVQVKVNDVFRV
      SVPVJACVNDVIUFUAUGUHVEVQFVFVEEUIZCEUJZHZVFVQFUNNVCVTVDBEUKULVCWBVDVCWABCB
      EUMUOUPAFCEUQURUSUTVAVB $.
      $( [25-Dec-2011] $) $( [20-Jan-2007] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.
    $( The indexed intersection of a function's values is the intersection of
       its range. $)
    fniinfv $p |- ( F Fn A -> |^|_ x e. A ( F ` x ) = |^| ran F ) $=
      ( vy wfn crn cint cv cfv wceq wrex cab ciin fnrnfv inteqd dfiin2 syl6reqr
      fvex ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACRPQ $.
      $( [20-Oct-2005] $)

    $( Singleton of function value. $)
    fnsnfv $p |- ( ( F Fn A /\ B e. A ) -> { ( F ` B ) } = ( F " { B } ) ) $=
      ( vy wfn wcel wa cv cfv wceq cab wbr csn cima eqcom fnbrfvb syl5bb abbidv
      df-sn a1i wrel fnrel relimasn syl adantr 3eqtr4d ) CAEZBAFZGZDHZBCIZJZDKZ
      BUJCLZDKZUKMZCBMNZUIULUNDULUKUJJUIUNUJUKOABUJCPQRUPUMJUIDUKSTUGUQUOJZUHUG
      CUAURACUBDBCUCUDUEUF $.
      $( [22-May-1998] $)
  $}

  $( The image of a pair under a funtion.  (Contributed by Jeff Madsen,
     6-Jan-2011.) $)
  fnimapr $p |- ( ( F Fn A /\ B e. A /\ C e. A ) ->
                          ( F " { B , C } ) = { ( F ` B ) , ( F ` C ) } ) $=
    ( wfn wcel w3a csn cima cun cfv fnsnfv 3adant3 3adant2 uneq12d eqcomd df-pr
    cpr wceq imaeq2i imaundi eqtri 3eqtr4g ) DAEZBAFZCAFZGZDBHZIZDCHZIZJZBDKZHZ
    CDKZHZJZDBCRZIZUMUORUGUQULUGUNUIUPUKUDUEUNUISUFABDLMUDUFUPUKSUEACDLNOPUSDUH
    UJJZIULURUTDBCQTDUHUJUAUBUMUOQUC $.
    $( [6-Jan-2011] $)

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z F $.
    ssimaex.1 $e |- A e. _V $.
    $( The existence of a subimage. $)
    ssimaex $p |- ( ( Fun F /\ B C_ ( F " A ) ) ->
                 E. x ( x C_ A /\ B = ( F " x ) ) ) $=
      ( vy vz vw cima wss cdm cv wceq wa wex cfv wcel wi ex adantr wfun imaeq2i
      cin cres dmres imadmres eqtr3i sseq2i ssrab2 ssel2 adantll fvelima eleq1a
      crab wrex anim2d fveq2 eleq1d elrab syl6ibr simpr jcad reximdv2 adantl wb
      a1i wfn funfn inss2 sstri fvelimab mpan2 sylbi sylibrd syld adantlr eleq1
      mpd biimpcd rexlimiv impbid eqrdv inex1 rabex sseq1 imaeq2 eqeq2d anbi12d
      syl6 cla4ev sylancr inss1 sstr anim1i eximi syl sylan2br ) CDBIZJDUAZCDBD
      KZUCZIZJZALZBJZCDXDIZMZNZAOZXBWRCDDBUDKZIXBWRXJXADDBUEUBDBUFUGUHWSXCNZXDX
      AJZXGNZAOZXIXKFLZDPZCQZFXAUNZXAJZCDXRIZMZXNXQFXAUIZXKGCXTXKGLZCQZYCXTQZXK
      YDYEXKYDNYCXBQZYEXCYDYFWSCXBYCUJUKWSYDYFYERXCWSYDNZYFHLZDPZYCMZHXAUOZYEWS
      YFYKRYDWSYFYKHYCXADULSTYGYKYJHXRUOZYEYDYKYLRWSYDYJYJHXAXRYDYHXAQZYJNZYHXR
      QZYJYDYNYMYICQZNZYOYDYJYPYMYCCYIUMUPXQYPFYHXAXOYHMXPYICXOYHDUQURUSZUTYNYJ
      RYDYMYJVAVFVBVCVDWSYEYLVEZYDWSDWTVGZYSDVHYTXRWTJYSXRXAWTYBBWTVIVJHWTXRYCD
      VKVLVMTVNVOVPVRSWSYEYDRXCWSYEYLYDWSYEYLHYCXRDULSYJYDHXRYOYQYJYDRZYRYPUUAY
      MYJYPYDYIYCCVQVSVDVMVTWITWAWBXMXSYANAXRXQFXABWTEWCWDXDXRMZXLXSXGYAXDXRXAW
      EUUBXFXTCXDXRDWFWGWHWJWKXMXHAXLXEXGXLXABJXEBWTWLXDXABWMVLWNWOWPWQ $.
      $( [8-Apr-2007] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d F x y $.
    $( The existence of a subimage.  (Contributed by FL, 15-Apr-2007.) $)
    ssimaexg $p |- ( ( A e. C /\ Fun F /\ B C_ ( F " A ) ) ->
                 E. x ( x C_ A /\ B = ( F " x ) ) ) $=
      ( vy wcel wfun cima wss cv wceq wa wex imaeq2 sseq2d anbi2d sseq2 anbi1d
      wi exbidv imbi12d vex ssimaex vtoclg 3impib ) BDGEHZCEBIZJZAKZBJZCEUJILZM
      ZANZUGCEFKZIZJZMZUJUOJZULMZANZTUGUIMZUNTFBDUOBLZURVBVAUNVCUQUIUGVCUPUHCUO
      BEOPQVCUTUMAVCUSUKULUOBUJRSUAUBAUOCEFUCUDUEUF $.
      $( [10-Apr-2007] $)
  $}

  $( A simplified expression for the value of a function when we know it's a
     function. $)
  funfv $p |- ( Fun F -> ( F ` A ) = U. ( F " { A } ) ) $=
    ( wfun cdm wcel cfv csn cima cuni wceq fvex unisn wfn df-fn mpbiran2 fnsnfv
    wa eqid unieqd c0 sylanbr syl5eqr ex wn ndmfv ndmima syl6eq eqtr4d pm2.61d1
    uni0 ) BCZABDZEZABFZBAGHZIZJZUKUMUQUKUMQZUNUNGZIUPUNABKLURUSUOUKBULMZUMUSUO
    JUTUKULULJULRBULNOULABPUASUBUCUMUDZUNTUPABUEVAUPTITVAUOTABUFSUJUGUHUI $.
    $( [22-May-1998] $)

  ${
    $d y A $.  $d y F $.
    $( The value of a function.  Definition of function value in [Enderton]
       p. 43. $)
    funfv2 $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( wfun cfv csn cima cuni cv wbr cab funfv wrel funrel relimasn syl unieqd
      wceq eqtrd ) CDZBCECBFGZHBAICJAKZHBCLTUAUBTCMUAUBRCNABCOPQS $.
      $( [11-May-2005] $) $( [22-May-1998] $)
  $}

  ${
    $d w z A $.  $d w z F $.  $d w y z $.
    funfv2f.1 $e |- ( z e. A -> A. y z e. A ) $.
    funfv2f.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( The value of a function.  Version of ~ funfv2 using a bound-variable
       hypotheses instead of distinct variable conditions. $)
    funfv2f $p |- ( Fun F -> ( F ` A ) = U. { y | A F y } ) $=
      ( vw wfun cfv cv wbr cab cuni funfv2 wcel ax-17 hbbr breq2 cbvab unieqi
      syl6eq ) DHCDICGJZDKZGLZMCAJZDKZALZMGCDNUDUGUCUFGAABCUBDEFBJUBOAPQUFGPUBU
      ECDRSTUA $.
      $( [19-Feb-2006] $)
  $}

  $( Value of the union of two functions when the domains are separate.
     (Contributed by FL, 7-Nov-2011.) $)
  fvun $p |- ( ( ( Fun F /\ Fun G ) /\ ( dom F i^i dom G ) = (/) ) ->
                ( ( F u. G ) ` A ) = ( ( F ` A ) u. ( G ` A ) ) ) $=
    ( wfun wa cdm cin c0 wceq cun cfv csn cima cuni funun funfv imaundir eqcomd
    syl a1i unieqd uniun anim12i adantr uneq12 syl5eq 3eqtrd ) BDZCDZEZBFCFGHIZ
    EZABCJZKZUMALZMZNZBUOMZCUOMZJZNZABKZACKZJZULUMDUNUQIBCOAUMPSULUPUTUPUTIULBC
    UOQTUAULVAURNZUSNZJZVDURUSUBULVEVBIZVFVCIZEZVGVDIUJVJUKUHVHUIVIUHVBVEABPRUI
    VCVFACPRUCUDVEVBVFVCUESUFUG $.
    $( [7-Nov-2011] $)

  ${
    $d A x $.  $d B x $.  $d X x $.
    $( The value of a union when the argument is in the first domain.
       (Contributed by Scott Fenton, 29-Jun-2013.) $)
    fvun1 $p |- ( ( F Fn A /\ G Fn B /\ ( ( A i^i B ) = (/) /\ X e. A ) ) ->
    ( ( F u. G ) ` X ) = ( F ` X ) ) $=
      ( vx wfn cin c0 wceq wcel wa w3a cun cfv wfun cdm fnfun fndm wn ineqan12d
      3ad2ant1 3ad2ant2 eqeq1d biimprd adantrd 3impia fvun syl21anc cv wi eleq1
      wral disj notbid rcla4cv sylbi imp adantl wb eleq2d adantr mtbird 3adant1
      ndmfv syl uneq2d un0 syl6eq eqtrd ) CAGZDBGZABHZIJZEAKZLZMZECDNOZECOZEDOZ
      NZVSVQCPZDPZCQZDQZHZIJZVRWAJVKVLWBVPACRUBVLVKWCVPBDRUCVKVLVPWGVKVLLZVNWGV
      OWHWGVNWHWFVMIVKVLWDAWEBACSBDSZUAUDUEUFUGECDUHUIVQWAVSINVSVQVTIVSVQEWEKZT
      ZVTIJVLVPWKVKVLVPLWJEBKZVPWLTZVLVNVOWMVNFUJZBKZTZFAUMVOWMUKFABUNWPWMFEAWN
      EJWOWLWNEBULUOUPUQURUSVLWJWLUTVPVLWEBEWIVAVBVCVDEDVEVFVGVSVHVIVJ $.
      $( [29-Jun-2013] $)
  $}

  $( The value of a union when the argument is in the second domain.
     (Contributed by Scott Fenton, 29-Jun-2013.) $)
  fvun2 $p |- ( ( F Fn A /\ G Fn B /\ ( ( A i^i B ) = (/) /\ X e. B ) ) ->
    ( ( F u. G ) ` X ) = ( G ` X ) ) $=
    ( wfn cin c0 wceq wcel w3a cun cfv uncom fveq1i incom eqeq1i anbi1i fvun1
    wa syl3an3b 3com12 syl5eq ) CAFZDBFZABGZHIZEBJZTZKECDLZMEDCLZMZEDMZEUJUKCDN
    OUEUDUIULUMIZUIUEUDBAGZHIZUHTUNUGUPUHUFUOHABPQRBADCESUAUBUC $.
    $( [29-Jun-2013] $)

  ${
    $d x y z A $.  $d x y z F $.
    $( Alternate definition of function value ~ df-fv that doesn't require
       dummy variables. $)
    dffv2 $p |- ( F ` A ) = U. ( ( F " { A } )
            \ U. U. ( ( ( F |` { A } ) o. `' ( F |` { A } ) ) \ _I ) ) $=
      ( vy vz vx cid cdif cuni wceq cvv wcel wn c0 wss unieqd syl6eq wa wbr wex
      wal csn cres wfun cfv cima ccnv ccom snidb fvres sylbi fvprc eqtr4d funfv
      pm2.61i wrel df-fun simprbi ssdif0 sylib uni0 resima dif0 eqtr4i syl6reqr
      difeq2d eqtrd syl5eqr nfunsn cv wi relres dffun3 mpbiran iman albii alnex
      bitri exbii exnal 3bitrri con1bii eximi snssi residm dmeqi ssdmres biimpi
      cdm ax-4 syl breldm eleq2 elsn syl6bb biimpa syl2an breq1d biimpd pm2.43d
      vex anim1d eximdv exlimdv mpan9 eleq2i elimasni sylbir cpr cop uniop opex
      ex unisn wrex brrelexi brcnvg sylancr biimpar breq2 breq1 anbi12d rcla4ev
      wb adantl mpancom ancoms syldan an32s eldif rexv brco df-br 3bitr2ri ideq
      anim1i equcom 3bitr3i notbii uniss syl5eqssr anbi12i bitr2i sylibr simpld
      3syl prss syl5 exlimiv ssrdv ndmima difeq1d 0dif pm2.61d1 ) BAUAZUBZUCZAB
      UDZBUUNUEZUUOUUOUFZUGZFGZHZHZGZHZIUUPUUQAUUOUDZUVEAJKZUVFUUQIZUVGAUUNKUVH
      AUHAUUNBUIUJUVGLUVFMUUQAUUOUKABUKULUNUUPUVFUUOUUNUEZHUVEAUUOUMUUPUVIUVDUU
      PUVDUURMGZUVIUUPUVCMUURUUPUVCMHZMUUPUVBMUUPUVBUVKMUUPUVAMUUPUUTFNZUVAMIUU
      PUUOUOZUVLUUOUPUQUUTFURUSOUTPOUTPVEUVIUURUVJBUUNVAZUURVBVCVDOVFVGUUPLZUUQ
      MUVEABVHUVOUVEUVKMUVOUVDMUVOAUUOWHZKZUVDMIZUVOUVQUVRUVOUVQQZUURUVCNUVRUVS
      CUURUVCUVSADVIZUUORZUVTCVIZIZLZQZDSZUWBUURKZUWBUVCKZVJZUVOEVIZUVTUUORZUWD
      QZDSZESZUVQUWFUVOUWMCTZESZUWNUWPUUPUUPUWKUWCVJZDTZCSZETZUWOLZETUWPLUUPUVM
      UWTBUUNVKZEDCUUOVLVMUWSUXAEUWSUWMLZCSUXAUWRUXCCUWRUWLLZDTUXCUWQUXDDUWKUWC
      VNVOUWLDVPVQVRUWMCVSVQVOUWOEVPVTWAUWOUWMEUWMCWIWBUJUVQUWMUWFEUVQUWLUWEDUV
      QUWKUWAUWDUVQUWKUWAUVQUWKUWKUWAVJUVQUWKQZUWKUWAUXEUWJAUVTUUOUVQUVPUUNIZUW
      JUVPKZUWJAIZUWKUVQUUNUVPNZUXFAUVPWCUXIUVPUUOUUNUBZWHZUUNUXJUUOBUUNWDWEUXI
      UXKUUNIUUNUUOWFWGVGWJUWJUVTUUOEWTDWTZWKUXFUXGUXHUXFUXGUWJUUNKUXHUVPUUNUWJ
      WLEAWMWNWOWPWQWRXLWSXAXBXCXDUWEUWIDUWGAUWBUUORZUWEUWHUWGUWBUVIKUXMUVIUURU
      WBUVNXEUUOAUWBXFXGUWEUXMUWHUWEUXMQZUWHUVTUVCKZUXNUWBUVTXHZUVCNUWHUXOQUXNU
      XPUWBUVTXIZHZUVCUWBUVTCWTZUXLXJUXNUXQUVBNUXRUVCNUXNUXQUXQUAZHZUVBUXQUWBUV
      TXKXMUXNUXQUVAKZUXTUVANUYAUVBNUXNUWBUWJUUSRZUWKQZEJXNZUWDQZUYBUWAUXMUWDUY
      FUWAUXMQUYEUWDUWAUXMUWBAUUSRZUYEUWAUYGUXMUWAUWBJKUVGUYGUXMYCUXSAUVTUUOUXB
      XOZUWBAJJUUOXPXQXRUYGUWAUYEUVGUYGUWAQZUYEUWAUVGUYGUYHYDUYDUYIEAJUXHUYCUYG
      UWKUWAUWJAUWBUUSXSUWJAUVTUUOXTYAYBYEYFYGYOYHUYBUXQUUTKZUXQFKZLZQUYFUXQUUT
      FYIUYJUYEUYLUWDUYEUYDESUWBUVTUUTRUYJUYDEYJEUWBUVTUUOUUSUXSUXLYKUWBUVTUUTY
      LYMUYKUWCUWBUVTFRUWBUVTIUYKUWCUWBUVTUXLYNUWBUVTFYLCDYPYQYRUUAUUBUSUXQUVAW
      CUXTUVAYSUUEYTUXQUVBYSWJYTUWBUVTUVCUXSUXLUUFUUCUUDXLUUGUUHWJUUIUURUVCURUS
      XLUVQLZUVDMUVCGMUYMUURMUVCUYMUURUVIMUVNAUUOUUJVGUUKUVCUULPUUMOUTPULUN $.
      $( [4-Aug-2010] $)
  $}

  ${
    $d x y A $.  $d x y F $.  $d x y G $.  $d x X $.
    $( Domains of a function composition. $)
    dmfco $p |- ( ( Fun G /\ A e. dom G ) ->
               ( A e. dom ( F o. G ) <-> ( G ` A ) e. dom F ) ) $=
      ( vx vy wfun cdm wcel wa ccom cv cop wex cfv wb eldm2g exbidv wceq syl5bb
      cvv vex opelco2g mpan2 bitrd adantl fvex eldm2 opeq1 eleq1d ceqsexv eqcom
      funopfvb anbi1d syl5bbr bitr4d ) CFZACGZHZIZABCJZGHZADKZLCHZVBEKZLZBHZIZD
      MZEMZACNZBGHZURVAVIOUPURVAAVDLUTHZEMVIEAUTUQPURVLVHEURVDTHVLVHOEUADAVDBCU
      QTUBUCQUDUEVKVJVDLZBHZEMUSVIEVJBACUFZUGUSVNVHEVNVBVJRZVFIZDMUSVHVFVNDVJVO
      VPVEVMBVBVJVDUHUIUJUSVQVGDUSVPVCVFVPVJVBRUSVCVBVJUKAVBCULSUMQUNQSUO $.
      $( [27-Jan-1997] $)

    $( Value of a function composition.  Similar to second part of Theorem 3H
       of [Enderton] p. 47.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.)  (Revised by Stefan O'Rear, 16-Oct-2014.) $)
    fvco2 $p |- ( ( G Fn A /\ X e. A ) -> ( ( F o. G ) ` X ) =
          ( F ` ( G ` X ) ) ) $=
      ( vx wfn wcel wa ccom csn cima cv wceq cab cfv fnsnfv imaeq2d imaco df-fv
      cuni syl6reqr eqeq1d abbidv unieqd 3eqtr4g ) CAFDAGHZBCIZDJZKZELJZMZENZTB
      DCOZJZKZUJMZENZTDUGOUMBOUFULUQUFUKUPEUFUIUOUJUFUOBCUHKZKUIUFUNURBADCPQBCU
      HRUAUBUCUDEDUGSEUMBSUE $.
      $( [16-Oct-2014] $) $( [9-Oct-2004] $)
  $}

  $( Value of a function composition.  Similar to Exercise 5 of [TakeutiZaring]
     p. 28.  (The proof was shortened by Mario Carneiro, 26-Dec-2014.) $)
  fvco $p |- ( ( Fun G /\ A e. dom G ) ->
               ( ( F o. G ) ` A ) = ( F ` ( G ` A ) ) ) $=
    ( wfun cdm wfn wcel ccom cfv wceq funfn fvco2 sylanb ) CDCCEZFANGABCHIACIBI
    JCKNBCALM $.
    $( [26-Dec-2014] $) $( [22-Apr-2006] $)

  $( Value of a function composition. $)
  fvco3 $p |- ( ( G : A --> B /\ C e. A ) ->
             ( ( F o. G ) ` C ) = ( F ` ( G ` C ) ) ) $=
    ( wf wfn wcel ccom cfv wceq ffn fvco2 sylan ) ABEFEAGCAHCDEIJCEJDJKABELADEC
    MN $.
    $( [26-Dec-2014] $) $( [3-Jan-2004] $)

  ${
    fvco4i.a $e |- (/) = ( F ` (/) ) $.
    fvco4i.b $e |- Fun G $.
    $( Conditions for a composition to be expandable without conditions on the
       argument.  (Contributed by Stefan O'Rear, 31-Mar-2015.) $)
    fvco4i $p |- ( ( F o. G ) ` X ) = ( F ` ( G ` X ) ) $=
      ( cdm wcel ccom cfv wceq wfn wfun funfn mpbi fvco2 mpan wn dmcoss ndmfv
      c0 sseli con3i syl fveq2d 3eqtr4a pm2.61i ) CBFZGZCABHZIZCBIZAIZJZBUGKZUH
      UMBLUNEBMNUGABCOPUHQZTTAIUJULDUOCUIFZGZQUJTJUQUHUPUGCABRUAUBCUISUCUOUKTAC
      BSUDUEUF $.
      $( [31-Mar-2015] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    $( Closed theorem form of ~ fvopab4 . $)
    fvopab4t $p |- ( ( A. x A. y ( x = A -> B = C )
      /\ A. x F = { <. x , y >. | ( x e. D /\ y = B ) }
      /\ ( A e. D /\ C e. V ) ) -> ( F ` A ) = C ) $=
      ( wcel wa cv wceq wi wal copab cvv cfv elex wfun wb anim2i funopab4 simp2
      w3a cop 19.21bi funeqd mpbiri simp3l eqidd eleq1 eqeq2 bi2anan9 ex 2alimi
      a2i 3ad2ant1 eqeq1 anbi2d gen2 simp3 opelopabt syl3anc mpbir2and eleqtrrd
      a1i funopfv sylc syl3an3 ) CFIZEHIZJAKZCLZDELZMZBNANZGVLFIZBKZDLZJZABOZLZ
      ANZVJEPIZJZCGQELZVKWDVJEHRUAVPWCWEUDZGSZCEUEZGIWFWGWHWASVQABDUBWGGWAWGWBA
      VPWCWEUCUFZUGUHWGWIWAGWGWIWAIZVJEELZVPWCVJWDUIWGEUJWGVMVTVJVRELZJZTZMZBNA
      NZWMWNVJWLJZTMZBNANZWEWKWRTVPWCWQWEVOWPABVMVNWOVMVNWOVMVQVJVNVSWMVLCFUKDE
      VRULUMUNUPUOUQWTWGWSABWMWMWLVJVREEURUSUTVFVPWCWEVAVTWNWRABCEFPVBVCVDWJVEC
      EGVGVHVI $.
      $( [21-Feb-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3g.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3g.3 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3g.4 $e |- ( x e. C -> E! y ph ) $.
    fvopab3g.5 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab3g $p |- ( ( A e. C /\ B e. D ) -> ( ( F ` A ) = B <-> ch ) ) $=
      ( wcel wa cv wceq wb adantr cop copab cfv anbi12d anbi2d opelopabg fnopab
      eleq1 wfn fnopfvb mpan eleq2i syl6bb ibar 3bitr4d ) FHOZGIOZPFGUAZDQZHOZA
      PZDEUBZOZUPCPZFJUCGRZCVAUPBPVDDEFGHIUSFRUTUPABUSFHUHKUDEQGRBCUPLUEUFUPVEV
      CSUQUPVEURJOZVCJHUIUPVEVFSADEHJMNUGHFGJUJUKJVBURNULUMTUPCVDSUQUPCUNTUO $.
      $( [28-Apr-2015] $) $( [6-Mar-1996] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y ch $.
    fvopab3ig.1 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab3ig.2 $e |- ( y = B -> ( ps <-> ch ) ) $.
    fvopab3ig.3 $e |- ( x e. C -> E* y ph ) $.
    fvopab3ig.4 $e |- F = { <. x , y >. | ( x e. C /\ ph ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab3ig $p |- ( ( A e. C /\ B e. D ) -> ( ch -> ( F ` A ) = B ) ) $=
      ( wcel wa cv cfv wceq wi cop copab eleq1 anbi12d anbi2d opelopabg biimpar
      exp43 pm2.43a imp fveq1i wfun funopab moanimv mpbir mpgbir funopfv syl5eq
      wmo ax-mp syl6 ) FHOZGIOZPZCFGUADQZHOZAPZDEUBZOZFJRZGSVBVCCVITZVCVBVKVBVC
      VBCVIVDVIVBCPZVGVBBPVLDEFGHIVEFSVFVBABVEFHUCKUDEQGSBCVBLUEUFUGUHUIUJVIVJF
      VHRZGFJVHNUKVHULZVIVMGSTVNVGEUSZDVGDEUMVOVFAEUSTMVFAEUNUOUPFGVHUQUTURVA
      $.
      $( [23-Oct-1999] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y C $.  $d x y D $.
    fvopab4g.1 $e |- ( x = A -> B = C ) $.
    fvopab4g.2 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction. $)
    fvopab4g $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( wcel wa wceq cfv eqid cv eqeq2d eqeq1 wmo moeq a1i fvopab3ig mpi ) CFKE
      GKLEEMZCHNEMEOBPZDMZUEEMUDABCEFGHAPZCMDEUEIQUEEERUFBSUGFKBDTUAJUBUC $.
      $( [23-Oct-1999] $)

    ${
      fvopab4.3 $e |- C e. _V $.
      $( Value of a function given by ordered-pair class abstraction. $)
      fvopab4 $p |- ( A e. D -> ( F ` A ) = C ) $=
        ( wcel cvv cfv wceq fvopab4g mpan2 ) CFKELKCGMENJABCDEFLGHIOP $.
        $( [23-Oct-1999] $)
    $}
  $}

  ${
    $d v w z A $.  $d u v w y B $.  $d z w v C $.  $d v w x y D $.  $d u x z $.
    fvopab4gf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4gf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopab4gf.3 $e |- ( x = A -> B = C ) $.
    fvopab4gf.4 $e |- F = { <. x , y >. | ( x e. D /\ y = B ) } $.
    $( Value of a function given by an ordered-pair class abstraction.  This
       version of ~ fvopab4g uses bound-variable hypotheses instead of distinct
       variable conditions. $)
    fvopab4gf $p |- ( ( A e. D /\ C e. R ) -> ( F ` A ) = C ) $=
      ( vw vv wcel wa cv wceq ax-17 cfv csb copab fveq1i hbcsb1 hbeleq wb eleq1
      hban adantr id csbeq1a eqeqan12rd anbi12d cbvopab csbhypf fvopab4g syl5eq
      eqtri eqid ) DGPFHPQDIUAZDNRZGPZORZAVBEUBZSZQZNOUCZUAZFVADARZGPZBRZESZQZA
      BUCZUAVIDIVOMUDDVOVHVNVGABNOVNNTVNOTVCVFAVCATAOVEAOVBEVDVBPATUEUFUIVGBTVJ
      VBSZVLVDSZQVKVCVMVFVPVKVCUGVQVJVBGUHUJVQVPVLVDEVEVQUKAVBEULUMUNUOUDUSNODV
      EFGHVHANCDEFJKLUPVHUTUQUR $.
      $( [20-Dec-2008] $) $( [8-Nov-2005] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z B $.  $d x y C $.  $d x z $.
    fvopab4sf.1 $e |- A e. _V $.
    fvopab4sf.2 $e |- B e. _V $.
    fvopab4sf.3 $e |- ( z e. A -> A. x z e. A ) $.
    fvopab4sf.4 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution.  TODO:  Eliminate redundant first
       hypothesis. $)
    fvopab4sf $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( wcel csb cvv cfv wceq csbex hbcsb1 csbeq1a fvopab4gf mpan2 ) DFLADEMZNL
      DGOUBPADEHIQABCDEUBFNGJACDEJRADESKTUA $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d w A $.  $d w y z B $.  $d w x y z C $.  $d w F $.
    fvopab4s.1 $e |- B e. _V $.
    fvopab4s.2 $e |- F = { <. x , y >. | ( x e. C /\ y = B ) } $.
    $( Value of a function given by ordered-pair class abstraction, using
       explicit class substitution. $)
    fvopab4s $p |- ( A e. C -> ( F ` A ) = [_ A / x ]_ B ) $=
      ( vw vz cv cfv csb wceq fveq2 csbeq1 eqeq12d vex wcel ax-17 fvopab4sf
      vtoclga ) IKZFLZAUCDMZNCFLZACDMZNICEUCCNUDUFUEUGUCCFOAUCCDPQABJUCDEFIRGJK
      UCSATHUAUB $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x y A $.
    fvopab4ndm.1 $e |- F = { <. x , y >. | ( x e. A /\ ph ) } $.
    $( Value of a function given by an ordered-pair class abstraction, outside
       of its domain. $)
    fvopab4ndm $p |- ( -. B e. A -> ( F ` B ) = (/) ) $=
      ( wcel wn cdm cfv c0 wceq cv wa copab dmeqi dmopabss eqsstri sseli con3i
      ndmfv syl ) EDHZIEFJZHZIEFKLMUFUDUEDEUEBNDHAOBCPZJDFUGGQABCDRSTUAEFUBUC
      $.
      $( [28-Mar-2008] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.  $d x y z w C $.
    fvopabg.1 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabg $p |- ( ( A e. V /\ C e. W ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( wcel cvv cv wceq copab cfv elex wa vex biantrur opabbii fvopab4g sylan
      ) CFICJIEGICBKDLZABMZNELCFOABCDEJGUCHUBAKJIZUBPABUDUBAQRSTUA $.
      $( [2-Sep-2003] $)
  $}

  ${
    $d x y z w A $.  $d z w B $.  $d x y z w C $.
    fvopabn.1 $e |- ( x = A -> B = C ) $.
    $( This somewhat non-intuitive theorem tells us the value of its function
       is the empty set when the class ` C ` it would otherwise map to is a
       proper class.  This is a technical lemma that can help eliminate
       redundant sethood antecedents otherwise required by ~ fvopabg . $)
    fvopabn $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vz vw cvv wcel wn cv wceq c0 wa cuni csn cab wex vex copab cfv wi df-fv
      cima wne snnz df-ne mpbi cop dfima3 elsn anbi1i exbii opeq1 eleq1d syl5bb
      ceqsexgv wb eqeq2d eqeq1 opelopabg mpan2 bitrd abbidv eleq1 mpbii exlimiv
      con3i abn0 necon1bbii sylib syl5eq eqeq1d eqcom syl6bb mtbiri unieqd uni0
      sylan9eq nexdv syl6eq ex fvprc a1d pm2.61i ) CIJZEIJZKZCBLZDMZABUAZUBZNMZ
      UCWGWIWNWGWIOZWMNPZNWOWMWLCQZUEZGLZQZMZGRZPWPGCWLUDWOXBNWOXAGSZKXBNMWOXAG
      WOXAWTNMZWTNUFXDKWSGTUGWTNUHUIWOXANWTMXDWOWRNWTWOWRWSWQJZWSHLZUJZWLJZOZGS
      ZHRZNGHWLWQUKWGWIXKXFEMZHRZNWGXJXLHWGXJCXFUJZWLJZXLXJWSCMZXHOZGSWGXOXIXQG
      XEXPXHGCULUMUNXHXOGCIXPXGXNWLWSCXFUOUPURUQWGXFIJZXOXLUSHTZWKWJEMXLABCXFII
      ALCMDEWJFUTWJXFEVAVBVCVDVEWIXLHSZKXMNMXTWHXLWHHXLXRWHXSXFEIVFVGVHVIXTXMNX
      LHVJVKVLVTVMVNNWTVOVPVQWAXCXBNXAGVJVKVLVRVMVSWBWCWGKWNWICWLWDWEWF $.
      $( [21-Oct-2003] $)
  $}

  ${
    $d z w v A $.  $d y w v B $.  $d z w v C $.  $d x y w v $.  $d x z $.
    fvopabgf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabgf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabgf.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabgf $p |- ( ( A e. D /\ C e. R ) ->
                    ( { <. x , y >. | y = B } ` A ) = C ) $=
      ( vv vw wcel wa cv wceq copab cfv ax-17 csb hbcsb1 hbeleq csbeq1a cbvopab
      id eqeqan12rd fveq1i csbhypf fvopabg syl5eq ) DGNFHNODBPZEQZABRZSDLPZAMPZ
      EUAZQZMLRZSFDUNUSUMURABMLUMMTUMLTALUQALUPEUOUPNATUBUCURBTULUOQZAPUPQULUOE
      UQUTUFAUPEUDUGUEUHMLDUQFGHAMCDEFIJKUIUJUK $.
      $( [21-Oct-2003] $)

    $( The value of a function given by an ordered-pair class abstraction is
       the empty set when the class it would otherwise map to is a proper
       class.  This version of ~ fvopabn uses bound-variable hypotheses instead
       of distinct variable conditions. $)
    fvopabnf $p |- ( -. C e. _V -> ( { <. x , y >. | y = B } ` A ) = (/) ) $=
      ( vv vw cvv wcel wn cv wceq copab cfv csb ax-17 hbcsb1 csbeq1a eqeqan12rd
      c0 hbeleq id cbvopab fveq1i csbhypf fvopabn syl5eq ) FLMNDBOZEPZABQZRDJOZ
      AKOZESZPZKJQZRUDDUNUSUMURABKJUMKTUMJTAJUQAJUPEUOUPMATUAUEURBTULUOPZAOUPPU
      LUOEUQUTUFAUPEUBUCUGUHKJDUQFAKCDEFGHIUIUJUK $.
      $( [21-Dec-2008] $) $( [21-Oct-2003] $)
  $}

  ${
    $d z A $.  $d y B $.  $d z C $.  $d x y $.  $d x u $.  $d x z $.
    fvopabf.1 $e |- ( z e. A -> A. x z e. A ) $.
    fvopabf.2 $e |- ( z e. C -> A. x z e. C ) $.
    fvopabf.3 $e |- A e. _V $.
    fvopabf.4 $e |- C e. _V $.
    fvopabf.5 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by ordered-pair class abstraction. $)
    fvopabf $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( cvv wcel cv wceq copab cfv fvopabgf mp2an ) DLMFLMDBNEOABPQFOIJABCDEFLL
      GHKRS $.
      $( [14-Sep-2003] $)
  $}

  ${
    $d x z A $.  $d y B $.  $d x z C $.  $d x y z $.
    fvopab.1 $e |- A e. _V $.
    fvopab.2 $e |- C e. _V $.
    fvopab.3 $e |- ( x = A -> B = C ) $.
    $( The value of a function given by an ordered-pair class abstraction. $)
    fvopab $p |- ( { <. x , y >. | y = B } ` A ) = C $=
      ( vz cv wcel ax-17 fvopabf ) ABICDEIJZCKALNEKALFGHM $.
      $( [17-Apr-1995] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d x y z $.
    $( Value of a function given by an ordered-pair class abstraction. $)
    fvopab2 $p |- ( ( x e. A /\ B e. C ) ->
                   ( { <. x , y >. | ( x e. A /\ y = B ) } ` x ) = B ) $=
      ( vz wcel cv wceq wa copab cfv wex wi elisset ax-17 hbopab2 hbfv cvv weu
      hbeq hbim vex eleq1 mpbii euanv opabid eubii eueq anbi2i 3bitr4ri tz6.12f
      cop sylanbr sylan2b exp43 pm2.43a mpdi com12 eqeq2 sylibd exlimi impcom
      syl ) DEGZAHZCGZVFVGBHZDIZJZABKZLZDIZVEVIBMVGVMNZBDEOVIVNBVGVMBVGBPBFFVLD
      BFVFVKVJABFQZFHZVFGBPRVPDGBPUAUBVIVGVLVHIZVMVGVIVQVGVIDSGZVQVIVHSGVRBUCVH
      DSUDUEVIVGVRVQNVGVIVGVRVQVGVRJZVJVFVHUMVKGZBTZVQVJBTVGVIBTZJWAVSVGVIBUFVT
      VJBVJABUGZUHVRWBVGBDUIUJUKVJVTWAVQWCABFVKVOULUNUOUPUQURUSVHDVLUTVAVBVDVC
      $.
      $( [2-Feb-2004] $) $( [30-Aug-1999] $)
  $}

  ${
    $d x z A $.  $d y z B $.  $d x y $.
    fvopabs.1 $e |- A e. _V $.
    fvopabs.2 $e |- B e. _V $.
    $( The value of a function given by an ordered-pair class abstraction,
       using class substitution. $)
    fvopabs $p |- ( { <. x , y >. | y = B } ` A ) = [_ A / x ]_ B $=
      ( vz csb cv wcel ax-17 hbcsb1 csbex csbeq1a fvopabf ) ABGCDACDHGICJAKZAGC
      DPLEACDEFMACDNO $.
      $( [25-Mar-2006] $)
  $}

  ${
    $d x y z A $.  $d z F $.  $d z ph $.  $d x ps $.
    fvopab5.1 $e |- F = { <. x , y >. | ph } $.
    fvopab5.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    $( The value of a function that is expressed as an ordered pair
       abstraction. $)
    fvopab5 $p |- ( ( Fun F /\ A e. B ) -> ( F ` A ) = U. { y | ps } ) $=
      ( vz wfun wcel cfv cv cab cuni ax-17 wceq cop syl5bb copab hbopab2 eleq2i
      wbr hbxfreq funfv2f elisset df-br bitri wb hbopab1 hbel hbbi opeq1 eleq1d
      wex opabid bitr3d exlimi abbidv syl unieqd sylan9eq ) GKEFLZEGMEDNZGUDZDO
      ZPBDOZPDJEGJNZELDQDJGACDUAZHACDJUBUEUFVDVGVHVDCNZERZCUPZVGVHRCEFUGVMVFBDV
      FEVESZVJLZVMBVFVNGLVOEVEGUHGVJVNHUCUIVLVOBUJCVOBCCJJVNVJVIVNLCQACDJUKULBC
      QUMVLVKVESZVJLZVOBVLVPVNVJVKEVEUNUOVQAVLBACDUQITURUSTUTVAVBVC $.
      $( [19-Feb-2006] $)
  $}

  ${
    $d A x y $.  $d ps x y $.  $d B y $.  $d C x y $.
    fvopab6.1 $e |- F = { <. x , y >. | ( ph /\ y = B ) } $.
    fvopab6.2 $e |- ( x = A -> ( ph <-> ps ) ) $.
    fvopab6.3 $e |- ( x = A -> B = C ) $.
    $( Value of a function given by ordered-pair class abstraction.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    fvopab6 $p |- ( ( A e. D /\ C e. R /\ ps ) -> ( F ` A ) = C ) $=
      ( wcel cv wceq wa cab cuni wfun w3a cfv wmo copab wal funeqi funopab moeq
      bitri moani mpgbir simp1 eqeq2d anbi12d fvopab5 simpr pm3.2 abbidv unieqd
      sylancr impbid2 df-sn eqcomi unieqi unisng syl5eq sylan9eqr 3adant1 eqtrd
      csn ) EHNZGINZBUAZEJUBZBDOZGPZQZDRZSZGVMJTZVKVNVSPVTAVOFPZQZDUCZCVTWBCDUD
      ZTWCCUEJWDKUFWBCDUGUIWAADDFUHUJUKVKVLBULWBVQCDEHJKCOEPZABWAVPLWEFGVOMUMUN
      UOUTVLBVSGPVKBVLVSVPDRZSZGBVRWFBVQVPDBVQVPBVPUPBVPUQVAURUSVLWGGVJZSGWFWHW
      HWFDGVBVCVDGIVEVFVGVHVI $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.  $d x y G $.  $d x ph $.
    $( Equality of functions is determined by their values.  Exercise 4 of
       [TakeutiZaring] p. 28. $)
    eqfnfv $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <->
                 ( A = B /\ A. x e. A ( F ` x ) = ( G ` x ) ) ) ) $=
      ( vy wfn wa wceq cv cfv cdm wi fndm syl5ib syl2an wcel wb wal wn wral a1i
      dmeq eqeq12 fveq1 ralrimivw jcad fneq2 biimparc cop eqeq1 fnopfvb adantlr
      df-ral adantll bibi12d ex a2d com3r vex opeldm eleq2d anim12ii pm5.21 a1d
      con3d syl6com pm2.61i alrimdv alimdv syl5bi wrel fnrel eqrel sylan2 exp32
      sylibrd imp4b impbid ) DBGZECGZHZDEIZBCIZAJZDKZWEEKZIZABUAZHWBWCWDWIVTDLZ
      BIZELZCIZWCWDMWABDNZCENWCWJWLIWKWMHWDDEUCWJBWLCUDOPWCWIMWBWCWHABWEDEUEUFU
      BUGVTWAWDWIWCVTWAWDWIWCMZWAWDHVTEBGZWOWDWPWABCEUHUIVTWPHZWIWEFJZUJZDQZWSE
      QZRZFSZASZWCWIWEBQZWHMZASWQXDWHABUNWQXFXCAWQXFXBFXEWQXFXBMZMWQXFXEXBWQXEW
      HXBWQXEWHXBMWHWFWRIZWGWRIZRWQXEHZXBWFWGWRUKXJXHWTXIXAVTXEXHWTRWPBWEWRDULU
      MWPXEXIXARVTBWEWREULUOUPOUQURUSWQXETZWTTZXATZHZXGVTXKXLWPXMVTWTXEWTWEWJQV
      TXEWEWRDAUTZFUTZVAVTWJBWEWNVBOVFWPXAXEXAWEWLQWPXEWEWREXOXPVAWPWLBWEBENVBO
      VFVCXNXBXFWTXAVDVEVGVHVIVJVKVTDVLEVLWCXDRWPBDVMBEVMAFDEVNPVQVOVPVRVS $.
      $( [5-Feb-2004] $) $( [3-Aug-1994] $)

    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       (The proof was shortened by Andrew Salmon, 22-Oct-2011.) $)
    eqfnfv2 $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wceq cv cfv wral eqfnfv eqid biantrur syl6bbr ) CBEDBEFCDGBBGZAH
      ZCIPDIGABJZFQABBCDKOQBLMN $.
      $( [22-Oct-2011] $) $( [3-Aug-1994] $)

    $d x B $.
    $( Derive equality of functions from equality of their values.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    eqfnfv3 $p |- ( ( F Fn A /\ G Fn B ) -> ( F = G <-> ( B C_ A /\ A. x e. A
                                  ( x e. B /\ ( F ` x ) = ( G ` x ) ) ) ) ) $=
      ( wfn wa wceq cv cfv wral wcel eqfnfv eqss ancom bitri anbi1i anass dfss3
      wss r19.26 bitr4i anbi2i 3bitri syl6bb ) DBFECFGDEHBCHZAIZDJUGEJHZABKZGZC
      BTZUGCLZUHGABKZGZABCDEMUJUKBCTZGZUIGUKUOUIGZGUNUFUPUIUFUOUKGUPBCNUOUKOPQU
      KUOUIRUQUMUKUQULABKZUIGUMUOURUIABCSQULUHABUAUBUCUDUE $.
      $( [2-Sep-2009] $)
    eqfnfvd.1 $e |- ( ph -> F Fn A ) $.
    eqfnfvd.2 $e |- ( ph -> G Fn A ) $.
    eqfnfvd.3 $e |- ( ( ph /\ x e. A ) -> ( F ` x ) = ( G ` x ) ) $.
    $( Deduction for equality of functions.  (Contributed by Mario Carneiro,
       24-Jul-2014.) $)
    eqfnfvd $p |- ( ph -> F = G ) $=
      ( wceq cv cfv wral ralrimiva wfn wb eqfnfv2 syl2anc mpbird ) ADEIZBJZDKTE
      KIZBCLZAUABCHMADCNECNSUBOFGBCDEPQR $.
      $( [24-Jul-2014] $)
  $}

  ${
    $d x z A $.  $d y z F $.  $d y z G $.  $d x y $.
    eqfnfvf2.1 $e |- ( y e. F -> A. x y e. F ) $.
    eqfnfvf2.2 $e |- ( y e. G -> A. x y e. G ) $.
    $( Equality of functions is determined by their values.  Special case of
       Exercise 4 of [TakeutiZaring] p. 28 (with domain equality omitted).
       This version of ~ eqfnfv2 uses bound-variable hypotheses instead of
       distinct variable conditions. $)
    eqfnfv2f $p |- ( ( F Fn A /\ G Fn A ) -> ( F = G <->
                 A. x e. A ( F ` x ) = ( G ` x ) ) ) $=
      ( vz wfn wa wceq cv cfv wral eqfnfv2 wcel ax-17 hbfv hbeq fveq2 eqeq12d
      cbvral syl6bb ) DCIECIJDEKHLZDMZUDEMZKZHCNALZDMZUHEMZKZACNHCDEOUGUKHACABB
      UEUFABUDDFBLUDPAQZRABUDEGULRSUKHQUDUHKUEUIUFUJUDUHDTUDUHETUAUBUC $.
      $( [22-Mar-2009] $) $( [29-Jan-2004] $)
  $}

  ${
    $d F x $.  $d G x $.
    $( Equality of functions is determined by their values.  (Contributed by
       Scott Fenton, 19-Jun-2011.) $)
    eqfunfv $p |- ( ( Fun F /\ Fun G ) -> ( F = G <->
                    ( dom F = dom G /\
                      A. x e. dom F ( F ` x ) = ( G ` x ) ) ) ) $=
      ( wfun cdm wfn wceq cv cfv wral wa wb funfn eqfnfv syl2anb ) BDBBEZFCCEZF
      BCGPQGAHZBIRCIGAPJKLCDBMCMAPQBCNO $.
      $( [10-Jul-2011] $) $( [19-Jun-2011] $)
  $}

  ${
    $d x B $.  $d x F $.  $d x G $.
    $( Equality of restricted functions is determined by their values. $)
    fvreseq $p |- ( ( ( F Fn A /\ G Fn A ) /\ B C_ A ) ->
         ( ( F |` B ) = ( G |` B ) <-> A. x e. B ( F ` x ) = ( G ` x ) ) ) $=
      ( wfn wa wss cres wceq cv cfv wral fnssres anim12i anandirs eqfnfv2 fvres
      wb wcel eqeq12d ralbiia syl6bb syl ) DBFZEBFZGCBHZGDCIZCFZECIZCFZGZUHUJJZ
      AKZDLZUNELZJZACMZSUEUFUGULUEUGGUIUFUGGUKBCDNBCENOPULUMUNUHLZUNUJLZJZACMUR
      ACUHUJQVAUQACUNCTUSUOUTUPUNCDRUNCERUAUBUCUD $.
      $( [6-Feb-2004] $) $( [3-Aug-1994] $)
  $}

  ${
    $d F x y $.  $d G x y $.  $d A x y $.
    $( Two ways to express the locus of differences between two functions.
       (Contributed by Stefan O'Rear, 17-Jan-2015.) $)
    fndmdif $p |- ( ( F Fn A /\ G Fn A ) -> dom ( F \ G ) =
          { x e. A | ( F ` x ) =/= ( G ` x ) } ) $=
      ( vy wfn wa cdif cdm cv cfv wceq copab dffn5 biimpi wn wex cab wi annim
      wcel wne crab adantr adantl difeq12d dmeqd difopab dmopab imdistan bicomi
      dmeqi notbii anbi2i bitr2i 3bitri exbii 19.42v eqeq1 notbid ceqsexv df-ne
      fvex bitr4i abbii df-rab eqtr4i 3eqtri syl6eq ) CBFZDBFZGZCDHZIAJZBUAZEJZ
      VNCKZLZGZAEMZVOVPVNDKZLZGZAEMZHZIZVQWAUBZABUCZVLVMWEVLCVTDWDVJCVTLZVKVJWI
      AEBCNOUDVKDWDLZVJVKWJAEBDNOUEUFUGWFVSWCPGZAEMZIWKEQZARZWHWEWLVSWCAEUHULWK
      AEUIWNVOWGGZARWHWMWOAWMVOVRWBPZGZGZEQVOWQEQZGWOWKWREWKVSWCSZPVOVRWBSZSZPZ
      WRVSWCTWTXBXBWTVOVRWBUJUKUMWRVOXAPZGXCWQXDVOVRWBTUNVOXATUOUPUQVOWQEURWSWG
      VOWSVQWALZPZWGWPXFEVQVNCVCVRWBXEVPVQWAUSUTVAVQWAVBVDUNUPVEWGABVFVGVHVI $.
      $( [17-Jan-2015] $)

    $( The difference set between two functions is commutative.  (Contributed
       by Stefan O'Rear, 17-Jan-2015.) $)
    fndmdifcom $p |- ( ( F Fn A /\ G Fn A ) ->
        dom ( F \ G ) = dom ( G \ F ) ) $=
      ( vx wfn wa cv cfv wne crab cdif cdm wb wcel necom rabbiia fndmdif ancoms
      a1i wceq 3eqtr4a ) BAEZCAEZFDGZBHZUDCHZIZDAJUFUEIZDAJZBCKLCBKLZUGUHDAUGUH
      MUDANUEUFOSPDABCQUCUBUJUITDACBQRUA $.
      $( [17-Jan-2015] $)

    $( The difference set of two functions is empty if and only if the
       functions are equal.  (Contributed by Stefan O'Rear, 17-Jan-2015.) $)
    fndmdifeq0 $p |- ( ( F Fn A /\ G Fn A ) ->
        ( dom ( F \ G ) = (/) <-> F = G ) ) $=
      ( vx wfn wa cv cfv wne crab c0 wceq wral cdif cdm wb wn rabeq0 nne ralbii
      bitri a1i fndmdif eqeq1d eqfnfv2 3bitr4d ) BAECAEFZDGZBHZUHCHZIZDAJZKLZUI
      UJLZDAMZBCNOZKLBCLUMUOPUGUMUKQZDAMUOUKDARUQUNDAUIUJSTUAUBUGUPULKDABCUCUDD
      ABCUEUF $.
      $( [17-Jan-2015] $)

    $( Two ways to express the locus of equality between two functions.
       (Contributed by Stefan O'Rear, 17-Jan-2015.) $)
    fndmin $p |- ( ( F Fn A /\ G Fn A ) -> dom ( F i^i G ) =
          { x e. A | ( F ` x ) = ( G ` x ) } ) $=
      ( vy wfn wa cin cdm wcel cfv wceq copab crab dffn5 biimpi syl6eq wex cab
      cv ineqan12d inopab dmeqd 19.42v anandi exbii fvex ceqsexv anbi2i 3bitr3i
      eqeq1 abbii dmopab df-rab 3eqtr4i ) CBFZDBFZGZCDHZIATZBJZETZUTCKZLZGZVAVB
      UTDKZLZGZGZAEMZIZVCVFLZABNZURUSVJURUSVEAEMZVHAEMZHVJUPUQCVNDVOUPCVNLAEBCO
      PUQDVOLAEBDOPUAVEVHAEUBQUCVIERZASVAVLGZASVKVMVPVQAVAVDVGGZGZERVAVRERZGVPV
      QVAVREUDVSVIEVAVDVGUEUFVTVLVAVGVLEVCUTCUGVBVCVFUKUHUIUJULVIAEUMVLABUNUOQ
      $.
      $( [17-Jan-2015] $)
  $}

  ${
    $d F x $.  $d G x $.  $d A x $.
    $( Two functions are equal iff their equalizer is the whole domain.
       (Contributed by Stefan O'Rear, 7-Mar-2015.) $)
    fneqeql $p |- ( ( F Fn A /\ G Fn A ) ->
        ( F = G <-> dom ( F i^i G ) = A ) ) $=
      ( vx wfn wa cv cfv wceq crab wral cin wb eqcom rabid2 bitri fndmin eqeq1d
      cdm a1i eqfnfv2 3bitr4rd ) BAECAEFZDGZBHUDCHIZDAJZAIZUEDAKZBCLSZAIBCIUGUH
      MUCUGAUFIUHUFANUEDAOPTUCUIUFADABCQRDABCUAUB $.
      $( [7-Mar-2015] $)

    $( Two functions are equal iff their equalizer contains the whole domain.
       (Contributed by Stefan O'Rear, 9-Mar-2015.) $)
    fneqeql2 $p |- ( ( F Fn A /\ G Fn A ) ->
        ( F = G <-> A C_ dom ( F i^i G ) ) ) $=
      ( wfn wceq cin cdm wss fneqeql inss1 dmss ax-mp adantr syl5sseq biantrurd
      wa fndm eqss syl6rbbr bitrd ) BADZCADZPZBCEBCFZGZAEZAUEHZABCIUCUGUEAHZUGP
      UFUCUHUGUCBGZUEAUDBHUEUIHBCJUDBKLUAUIAEUBABQMNOUEARST $.
      $( [9-Mar-2015] $)

    $( Two functions are equal on a subset iff their equalizer contains that
       subset.  (Contributed by Stefan O'Rear, 7-Mar-2015.) $)
    fnreseql $p |- ( ( F Fn A /\ G Fn A /\ X C_ A ) ->
        ( ( F |` X ) = ( G |` X ) <-> X C_ dom ( F i^i G ) ) ) $=
      ( wfn wss w3a cin cdm wb fnssres 3adant2 3adant1 fneqeql syl2anc resindir
      cres wceq dmeqi dmres eqtr3i eqeq1i df-ss bitr4i syl6bb ) BAEZCAEZDAFZGZB
      DQZCDQZRZUJUKHZIZDRZDBCHZIZFZUIUJDEZUKDEZULUOJUFUHUSUGADBKLUGUHUTUFADCKMD
      UJUKNOUODUQHZDRURUNVADUPDQZIUNVAVBUMBCDPSUPDTUAUBDUQUCUDUE $.
      $( [7-Mar-2015] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopabg.1 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction. $)
    elrnopabg $p |- ( A. x e. A B e. D ->
                    ( C e. ran F <-> E. x e. A C = B ) ) $=
      ( vz vw wcel wral cvv wceq wrex wb cv cfv wa ax-17 crn elex ralimi biimpi
      wfn weu eueq fnopabg sylib fvelrnb copab hbopab1 hbxfreq hbfv hbeq eqeq1d
      fveq2 cbvrex hbra1 ra4 ancld imp fveq1i fvopab2 syl5eq syl6bb syl rexbida
      eqcom syl5bb sylan9bbr mpdan ) DFKZACLDMKZACLZEGUAKZEDNZACOZPZVMVNACDFUBU
      CVOGCUEZVSVOBQDNZBUFZACLVTVNWBACVNWBBDUGUDUCWAABCGHUHUIVTVPIQZGRZENZICOZV
      OVRICEGUJWFAQZGRZENZACOVOVRWEWIIACAJJWDEAJWCGAJGWGCKZWASZABUKZHWKABJULUMJ
      QZWCKATUNWMEKATUOWIITWCWGNWDWHEWCWGGUQUPURVOWIVQACVNACUSVOWJSWJVNSZWIVQPV
      OWJWNVOWJVNVNACUTVAVBWNWIDENVQWNWHDEWNWHWGWLRDWGGWLHVCABCDMVDVEUPDEVIVFVG
      VHVJVKVLVG $.
      $( [27-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d y B $.  $d z F $.  $d w x z C $.  $d w F $.
    elrnopab.1 $e |- B e. _V $.
    elrnopab.2 $e |- F = { <. x , y >. | ( x e. A
             /\ y = B ) } $.
    $( Membership in the range of an ordered pair class abstraction. $)
    elrnopab $p |- ( C e. ran F <-> E. x e. A C = B ) $=
      ( cvv wcel crn wceq wrex wb elrnopabg cv a1i mprg ) DIJZEFKJEDLACMNACABCD
      EIFHOSAPCJGQR $.
      $( [30-Aug-2004] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( The range of a choice function (a function that chooses an element from
       each member of its domain) is included in the union of its domain. $)
    chfnrn $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. x ) -> ran F C_ U. A ) $=
      ( vy wfn cv cfv wcel wral wa cuni wrex wceq fvelrnb biimpd hbra1 wi eleq1
      crn ra4 biimpcd syl6 reximdai sylan9 eluni2 syl6ibr ssrdv ) CBEZAFZCGZUIH
      ZABIZJZDCSZBKZUMDFZUNHZUPUIHZABLZUPUOHUHUQUJUPMZABLZULUSUHUQVAABUPCNOULUT
      URABUKABPULUIBHUKUTURQUKABTUTUKURUJUPUIRUAUBUCUDAUPBUEUFUG $.
      $( [31-Aug-1999] $)
  $}

  ${
    $d x F $.  $d x A $.
    $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
       p. 41. $)
    funfvop $p |- ( ( Fun F /\ A e. dom F ) -> <. A , ( F ` A ) >. e. F ) $=
      ( wfun cdm wcel wa cfv wceq cop eqid funopfvb mpbii ) BCABDEFABGZMHAMIBEM
      JAMBKL $.
      $( [14-Oct-1996] $)
  $}

  $( Two ways to say that ` A ` is in the domain of ` F ` .  (Contributed by
     Mario Carneiro, 1-May-2014.) $)
  funfvbrb $p |- ( Fun F -> ( A e. dom F <-> A F ( F ` A ) ) ) $=
    ( wfun cdm wcel cfv wbr wa funfvop df-br sylibr wrel funrel releldm impbida
    cop sylan ) BCZABDEZAABFZBGZRSHATPBEUAABIATBJKRBLUASBMATBNQO $.
    $( [1-May-2014] $)

  $( A member of a preimage is a function value argument. $)
  fvimacnvi $p |- ( ( Fun F /\ A e. ( `' F " B ) ) -> ( F ` A ) e. B ) $=
    ( wfun ccnv cima wcel cfv csn wss snssi funimass2 sylan2 fvex snss cdm wceq
    wa cnvimass sseli wfn funfn fnsnfv sylanb sseq1d syl5bb mpbird ) CDZACEBFZG
    ZRZACHZBGZCAIZFZBJZUJUHUNUIJUPAUIKUNBCLMUMULIZBJUKUPULBACNOUKUQUOBUJUHACPZG
    ZUQUOQZUIURACBSTUHCURUAUSUTCUBURACUCUDMUEUFUG $.
    $( [4-May-2007] $)

  $( The argument of a function value belongs to the preimage of any class
     containing the function value.  (Contributed by Raph Levien, 20-Nov-2006.
     He remarks:  "This proof is unsatisfying, because it seems to me that
     ~ funimass2 could probably be strengthened to a biconditional.") $)
  fvimacnv $p |- ( ( Fun F /\ A e. dom F ) ->
                 ( ( F ` A ) e. B <-> A e. ( `' F " B ) ) ) $=
    ( wfun cdm wcel wa cfv ccnv cima csn cop funfvop wb fvex mpan adantl mpbird
    cvv wss opelcnvg elimasng imass2 sylbi sseld syl5com wi fvimacnvi ex adantr
    snss impbid ) CDZACEZFZGZACHZBFZACIZBJZFZUPAUSUQKZJZFZURVAUPVDUQALUSFZUPVEA
    UQLCFZACMUOVEVFNZUMUQSFZUOVGACOZUQASUNCUAPQRUOVDVENZUMVHUOVJVIUSUQASUNUBPQR
    URVCUTAURVBBTVCUTTUQBVIUKVBBUSUCUDUEUFUMVAURUGUOUMVAURABCUHUIUJUL $.
    $( [20-Nov-2006] $)

  ${
    $d F x $.  $d A x $.  $d B x $.
    $( A kind of contraposition law that infers an image subclass from a
       subclass of a preimage.  (Contributed by Raph Levien, 20-Nov-2006.  He
       remarks:  "Likely this could be proved directly, and ~ fvimacnv would be
       the special case of ` A ` being a singleton, but it works this way round
       too.") $)
    funimass3 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( ( F " A ) C_ B <-> A C_ ( `' F " B ) ) ) $=
      ( vx wfun cdm wss wa cima cv ccnv wcel wral funimass4 wb ssel fvimacnv ex
      cfv syl9r imp31 ralbidva bitrd dfss3 syl6bbr ) CEZACFZGZHZCAIBGZDJZCKBIZL
      ZDAMZAULGUIUJUKCSBLZDAMUNDABCNUIUOUMDAUFUHUKALZUOUMOZUHUPUKUGLZUFUQAUGUKP
      UFURUQUKBCQRTUAUBUCDAULUDUE $.
      $( [20-Nov-2006] $)

    $( A subclass of a preimage in terms of function values. $)
    funimass5 $p |- ( ( Fun F /\ A C_ dom F ) ->
                    ( A C_ ( `' F " B ) <-> A. x e. A ( F ` x ) e. B ) ) $=
      ( wfun cdm wss wa cima ccnv cv cfv wcel wral funimass3 funimass4 bitr3d )
      DEBDFGHDBICGBDJCIGAKDLCMABNBCDOABCDPQ $.
      $( [15-May-2007] $)

    $( Two ways of specifying that a function is constant on a subdomain. $)
    funconstss $p |- ( ( Fun F /\ A C_ dom F ) ->
                     ( A. x e. A ( F ` x ) = B <-> A C_ ( `' F " { B } ) ) ) $=
      ( wfun cdm wss wa cfv wceq wral cima csn ccnv wcel funimass4 elsnc ralbii
      cv fvex syl6rbb funimass3 bitrd ) DEBDFGHZASZDIZCJZABKZDBLCMZGZBDNUILGUDU
      JUFUIOZABKUHABUIDPUKUGABUFCUEDTQRUABUIDUBUC $.
      $( [8-Mar-2007] $)
  $}


  $( Another proof of ~ fvimacnv , based on ~ funimass3 .  If ~ funimass3 is
     ever proved directly, as opposed to using ~ funimacnv pointwise, then the
     proof of ~ funimacnv should be replaced with this one.  (Contributed by
     Raph Levien, 20-Nov-2006.) $)
  fvimacnvALT $p |- ( ( Fun F /\ A e. dom F ) ->
                    ( ( F ` A ) e. B <-> A e. ( `' F " B ) ) ) $=
    ( wfun cdm wcel wa csn cima wss ccnv cfv wb snssi funimass3 sylan2 fvex wfn
    snss wceq eqid df-fn biimpri mpan2 fnsnfv sylan sseq1d syl5bb snssg 3bitr4d
    adantl ) CDZACEZFZGZCAHZIZBJZUPCKBIZJZACLZBFZAUSFZUNULUPUMJURUTMAUMNUPBCOPV
    BVAHZBJUOURVABACQSUOVDUQBULCUMRZUNVDUQTULUMUMTZVEUMUAVEULVFGCUMUBUCUDUMACUE
    UFUGUHUNVCUTMULAUSUMUIUKUJ $.
    $( [20-Nov-2006] $)

  $( Membership in the preimage of a set under a function.  (Contributed by
     Jeff Madsen, 2-Sep-2009.) $)
  elpreima $p |- ( F Fn A -> ( B e. ( `' F " C )
                              <-> ( B e. A /\ ( F ` B ) e. C ) ) ) $=
    ( wfn ccnv cima wcel cfv wa cdm cnvimass sseli fndm eleq2d syl5ib fvimacnvi
    wfun fnfun sylan ex jcad wb fvimacnv funfni biimpd expimpd impbid ) DAEZBDF
    CGZHZBAHZBDICHZJUIUKULUMUKBDKZHUIULUJUNBDCLMUIUNABADNOPUIUKUMUIDRUKUMADSBCD
    QTUAUBUIULUMUKUIULJUMUKUMUKUCABDBCDUDUEUFUGUH $.
    $( [2-Sep-2009] $)

  ${
    $d x B $.  $d x C $.  $d x F $.  $d x V $.
    $( Membership in the preimage of a singleton, under a function.
       (Contributed by Mario Carneiro, 12-May-2014.)  (The proof was shortened
       by Mario Carneiro, 28-Apr-2015.) $)
    fniniseg $p |- ( F Fn A -> ( C e. ( `' F " { B } ) <->
                     ( C e. A /\ ( F ` C ) = B ) ) ) $=
      ( wfn ccnv csn cima wcel cfv wa wceq elpreima fvex elsnc anbi2i syl6bb )
      DAECDFBGZHICAIZCDJZRIZKSTBLZKACRDMUAUBSTBCDNOPQ $.
      $( [28-Apr-2015] $) $( [12-May-2014] $)
  $}

  ${
    $d x A $.  $d x F $.  $d x B $.
    $( Inverse images under functions expressed as abstractions.  (Contributed
       by Stefan O'Rear, 1-Feb-2015.) $)
    fncnvima2 $p |- ( F Fn A -> ( `' F " B ) = { x e. A | ( F ` x ) e. B } ) $=
      ( wfn cv ccnv cima wcel cab cfv crab elpreima abbidv abid2 eqcomi 3eqtr4g
      wa df-rab ) DBEZAFZDGCHZIZAJZUABIUADKCIZRZAJUBUEABLTUCUFABUACDMNUDUBAUBOP
      UEABSQ $.
      $( [1-Feb-2015] $)

    $( Inverse point images under functions expressed as abstractions.
       (Contributed by Stefan O'Rear, 1-Feb-2015.) $)
    fniniseg2 $p |- ( F Fn A -> ( `' F " { B } ) =
          { x e. A | ( F ` x ) = B } ) $=
      ( wfn ccnv csn cima cv cfv wcel crab wceq fncnvima2 wb fvex elsnc rabbiia
      a1i syl6eq ) DBEDFCGZHAIZDJZUAKZABLUCCMZABLABUADNUDUEABUDUEOUBBKUCCUBDPQS
      RT $.
      $( [1-Feb-2015] $)

    $( Support sets of functions expressed as abstractions.  (Contributed by
       Stefan O'Rear, 1-Feb-2015.) $)
    fnniniseg2 $p |- ( F Fn A -> ( `' F " ( _V \ { B } ) ) =
          { x e. A | ( F ` x ) =/= B } ) $=
      ( wfn ccnv cvv csn cdif cima cv cfv wcel wne fncnvima2 wb eldifsn mpbiran
      crab fvex a1i rabbiia syl6eq ) DBEDFGCHIZJAKZDLZUDMZABSUFCNZABSABUDDOUGUH
      ABUGUHPUEBMUGUFGMUHUEDTUFGCQRUAUBUC $.
      $( [1-Feb-2015] $)
  $}

  ${
    $d F x $.  $d A x $.
    $( Existential quantification restricted to a support. $)
    rexsupp $p |- ( F Fn A -> ( E. x e. ( `' F " ( _V \ { Z } ) ) ph <->
          E. x e. A ( ( F ` x ) =/= Z /\ ph ) ) ) $=
      ( wfn cv cfv wne wa ccnv cvv csn cdif cima wcel elpreima eldifsn syl6bb
      wb fvex ibar ax-mp bitr4i anbi2i anbi1d anass rexbidv2 ) DCFZABGZDHZEIZAJ
      ZBDKLEMNZOZCUIUJUOPZAJUJCPZULJZAJUQUMJUIUPURAUIUPUQUKUNPZJURCUJUNDQUSULUQ
      USUKLPZULJZULUKLERUTULVATUJDUAUTULUBUCUDUESUFUQULAUGSUH $.
      $( [23-Mar-2015] $)
  $}

  ${
    $d x F $.  $d x A $.  $d x B $.
    $( Preimage of a union.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    unpreima $p |- ( Fun F -> ( `' F " ( A u. B ) )
                                  = ( ( `' F " A ) u. ( `' F " B ) ) ) $=
      ( vx wfun cdm wfn ccnv cun cima wceq funfn cv wcel wa wo wb elun elpreima
      cfv anbi2i andi bitri a1i orbi12d syl5bb 3bitr4d eqrdv sylbi ) CECCFZGZCH
      ZABIZJZULAJZULBJZIZKCLUKDUNUQUKDMZUJNZURCTZUMNZOZUSUTANZOZUSUTBNZOZPZURUN
      NURUQNZVBVGQUKVBUSVCVEPZOVGVAVIUSUTABRUAUSVCVEUBUCUDUJURUMCSVHURUONZURUPN
      ZPUKVGURUOUPRUKVJVDVKVFUJURACSUJURBCSUEUFUGUHUI $.
      $( [2-Sep-2009] $)

    $( Preimage of an intersection.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    inpreima $p |- ( Fun F -> ( `' F " ( A i^i B ) )
                                  = ( ( `' F " A ) i^i ( `' F " B ) ) ) $=
      ( vx wfun cdm wfn ccnv cin cima wceq funfn cv wcel wa cfv anbi2i elpreima
      wb elin a1i anandi syl6bb anbi12d 3bitr4d syl6bbr eqrdv sylbi ) CECCFZGZC
      HZABIZJZUKAJZUKBJZIZKCLUJDUMUPUJDMZUMNZUQUNNZUQUONZOZUQUPNUJUQUINZUQCPZUL
      NZOZVBVCANZOZVBVCBNZOZOZURVAUJVEVBVFVHOZOZVJVEVLSUJVDVKVBVCABTQUAVBVFVHUB
      UCUIUQULCRUJUSVGUTVIUIUQACRUIUQBCRUDUEUQUNUOTUFUGUH $.
      $( [2-Sep-2009] $)

    $( The preimage of a restricted function.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    respreima $p |- ( Fun F -> ( `' ( F |` B ) " A )
                                    = ( ( `' F " A ) i^i B ) ) $=
      ( vx wfun cres ccnv cima cin cdm wfn cv wcel wb cfv wa bitri syl elpreima
      elin funfn ancom anbi1i fvres eleq1d adantl pm5.32i a1i an32 syl6bb fnfun
      wceq funres dmres jctir df-fn sylibr anbi1d syl5bb 3bitr4d sylbi eqrdv )
      CEZDCBFZGAHZCGAHZBIZVCCCJZKZDLZVEMZVJVGMZNCUAVIVJBVHIZMZVJVDOZAMZPZVJVHMZ
      VJCOZAMZPZVJBMZPZVKVLVIVQVRWBPZVTPZWCVQWENVIVQWDVPPWEVNWDVPVNWBVRPWDVJBVH
      TWBVRUBQUCWDVPVTWBVPVTNVRWBVOVSAVJBCUDUEUFUGQUHVRWBVTUIUJVIVDVMKZVKVQNVIV
      DEZVDJVMULZPWFVIWGWHVIVCWGVHCUKBCUMRCBUNUOVDVMUPUQVMVJAVDSRVLVJVFMZWBPVIW
      CVJVFBTVIWIWAWBVHVJACSURUSUTVAVB $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d A x y $.  $d B y $.  $d F x y $.
    $( Preimage of an intersection.  (Contributed by FL, 16-Apr-2012.) $)
    iinpreima $p |- ( ( Fun F /\ A =/= (/) )
        -> ( `' F " |^|_ x e. A B ) = |^|_ x e. A ( `' F " B ) ) $=
      ( vy ciin cima wcel wral simpll cnvimass sseli adantl cvv fvimacnvi eliin
      wa wb ax-mp wi wfun wne ccnv cdm cfv fvex adantlr biimpa sylancr fvimacnv
      c0 cv ralbidv syl21anc vex sylibr biimpd ralimdv sylc wrex r19.2zb biimpi
      ex rexlimivw syl6 syl5bi imp syl2anc mpbid impbida eqrdv ) DUAZBUKUBZQZED
      UCZABCFZGZABVOCGZFZVNEULZVQHZVTVSHZVNWAQZVTVRHZABIZWBWCVLVTDUDZHZVTDUEZCH
      ZABIZWEVLVMWAJWAWGVNVQWFVTDVPKLMWCWHNHZWHVPHZWJVTDUFZVLWAWLVMVTVPDOUGWKWL
      WJAWHBCNPZUHUIVLWGQZWJWEWOWIWDABVTCDUJUMUHUNVTNHZWBWEREUOZAVTBVRNPZSZUPVN
      WBQZWLWAWTWJWLWTVLWEWJVLVMWBJZWBWEVNWPWBWETWQWPWBWEWRUQSMVLWDWIABVLWDWIVT
      CDOVCURUSWKWLWJRWMWNSUPWTVLWGWLWARXAVNWBWGVMWBWGTVLWBWEVMWGWSVMWEWDABUTZW
      GVMWEXBTWDABVAVBWDWGABVRWFVTDCKLVDVEVFMVGVTVPDUJVHVIVJVK $.
      $( [16-Apr-2012] $)

    $( Preimage of an intersection.  (Contributed by FL, 28-Apr-2012.) $)
    intpreima $p |- ( ( Fun F /\ A =/= (/) )
        -> ( `' F " |^| A ) = |^|_ x e. A ( `' F " x ) ) $=
      ( wfun c0 wne wa ccnv cint cima cv ciin intiin imaeq2i iinpreima syl5eq )
      CDBEFGCHZBIZJQABAKZLZJABQSJLRTQABMNABSCOP $.
      $( [28-Apr-2012] $)
  $}

  $( The preimage of the codomain of a mapping is the mapping's domain.
     (Contributed by FL, 25-Jan-2007.) $)
  fimacnv $p |- ( F : A --> B -> ( `' F " B ) = A ) $=
    ( ccnv cima crn imassrn cdm dfdm4 fdm wss ssid a1i eqsstrd syl5eqssr syl5ss
    wf frn wfun wb ffun syl5sseqr funimass3 syl2anc mpbid eqssd ) ABCQZCDZBEZAU
    GUIUHFZAUHBGUGUJCHZACIUGUKAAABCJZAAKUGALZMNOPUGCAEZBKZAUIKZUGUNCFBCAGABCRPU
    GCSAUKKUOUPTABCUAUGAAUKUMULUBABCUCUDUEUF $.
    $( [25-Jan-2007] $)

  ${
    $d k F $.  $d k ph $.  $d k W $.  $d k Z $.
    suppss.f $e |- ( ph -> F : A --> B ) $.
    suppss.n $e |- ( ( ph /\ k e. ( A \ W ) ) -> ( F ` k ) = Z ) $.
    $( Show that the support of a function is contained in a set. $)
    suppss $p |- ( ph -> ( `' F " ( _V \ { Z } ) ) C_ W ) $=
      ( ccnv cvv csn cdif cima cv wcel cfv wa wf wfn ffn elpreima 3syl wne fvex
      wb eldifsn mpbiran wceq eldif sylan2br expr necon1ad syl5bi expimpd ssrdv
      wn sylbid ) ADEJKGLMZNZFADOZUTPZVABPZVAEQZUSPZRZVAFPZABCESEBTVBVFUFHBCEUA
      BVAUSEUBUCAVCVEVGVEVDGUDZAVCRZVGVEVDKPVHVAEUEVDKGUGUHVIVGVDGAVCVGUQZVDGUI
      ZVCVJRAVABFMPVKVABFUJIUKULUMUNUOURUP $.
      $( [19-Dec-2014] $)
  $}

  ${
    suppssr.f $e |- ( ph -> F : A --> B ) $.
    suppssr.n $e |- ( ph -> ( `' F " ( _V \ { Z } ) ) C_ W ) $.
    $( A function is zero outside its support. $)
    suppssr $p |- ( ( ph /\ X e. ( A \ W ) ) -> ( F ` X ) = Z ) $=
      ( cdif wcel wn wa cfv wceq eldif wne cvv csn fvex eldifsn mpbiran ccnv wf
      cima wfn wb ffn elpreima 3syl sseld sylbird expdimp syl5bir necon1bd impr
      sylan2b ) FBEJKAFBKZFEKZLZMFDNZGOZFBEPAURUTVBAURMZUSVAGVAGQZVARGSJZKZVCUS
      VFVARKVDFDTVARGUAUBAURVFUSAURVFMZFDUCVEUEZKZUSABCDUDDBUFVIVGUGHBCDUHBFVED
      UIUJAVHEFIUKULUMUNUOUPUQ $.
      $( [19-Dec-2014] $)
  $}

  $( Ordered pair with function value.  Part of Theorem 4.3(i) of [Monk1]
     p. 41. $)
  fnopfv $p |- ( ( F Fn A /\ B e. A ) -> <. B , ( F ` B ) >. e. F ) $=
    ( cfv cop wcel funfvop funfni ) BBCDECFABCBCGH $.
    $( [30-Sep-2004] $)

  ${
    $d x y F $.  $d x A $.
    $( A function's value belongs to its range. $)
    fvelrn $p |- ( ( Fun F /\ A e. dom F ) -> ( F ` A ) e. ran F ) $=
      ( vx vy wfun cdm wcel cfv cv wa wi wceq eleq1 anbi2d fveq2 eleq1d imbi12d
      crn cop wex funfvop vex opeq1 cla4ev syl fvex elrn2 sylibr vtoclg anabsi7
      ) BEZABFZGZABHZBRZGZUKCIZULGZJZUQBHZUOGZKUKUMJZUPKCAULUQALZUSVBVAUPVCURUM
      UKUQAULMNVCUTUNUOUQABOPQUSDIZUTSZBGZDTZVAUSUQUTSZBGZVGUQBUAVFVIDUQCUBVDUQ
      LVEVHBVDUQUTUCPUDUEDUTBUQBUFUGUHUIUJ $.
      $( [14-Oct-1996] $)
  $}

  $( A function's value belongs to its range. $)
  fnfvelrn $p |- ( ( F Fn A /\ B e. A ) -> ( F ` B ) e. ran F ) $=
    ( cfv crn wcel fvelrn funfni ) BCDCEFABCBCGH $.
    $( [15-Oct-1996] $)

  $( A function's value belongs to its codomain. $)
  ffvelrn $p |- ( ( F : A --> B /\ C e. A ) -> ( F ` C ) e. B ) $=
    ( wf wcel wa cfv crn wfn ffn fnfvelrn sylan wi frn sseld adantr mpd ) ABDEZ
    CAFZGCDHZDIZFZUABFZSDAJTUCABDKACDLMSUCUDNTSUBBUAABDOPQR $.
    $( [12-Aug-1999] $)

  ${
    ffvrni.1 $e |- F : A --> B $.
    $( A function's value belongs to its codomain. $)
    ffvelrni $p |- ( C e. A -> ( F ` C ) e. B ) $=
      ( wf wcel cfv ffvelrn mpan ) ABDFCAGCDHBGEABCDIJ $.
      $( [6-Apr-2005] $)
  $}

  ${
    $d x y A $.  $d x y F $.  $d x ps $.  $d y ph $.
    rexrn.1 $e |- ( x = ( F ` y ) -> ( ph <-> ps ) ) $.
    $( Restricted existential quantification over the range of a function.
       (Contributed by Mario Carneiro, 24-Dec-2013.) $)
    rexrn $p |- ( F Fn A -> ( E. x e. ran F ph <-> E. y e. A ps ) ) $=
      ( wfn cv cfv crn fvex wcel wceq wrex fvelrnb eqcom rexbii syl6bb wb
      adantl rexxfr2d ) FEHZABCDDIZFJZFKZEUDFLUCCIZUFMUEUGNZDEOUGUENZDEODEUGFPU
      HUIDEUEUGQRSUIABTUCGUAUB $.
      $( [20-Aug-2014] $) $( [24-Dec-2013] $)

    $( Restricted universal quantification over the range of a function.
       (Contributed by Mario Carneiro, 24-Dec-2013.) $)
    ralrn $p |- ( F Fn A -> ( A. x e. ran F ph <-> A. y e. A ps ) ) $=
      ( wfn cv cfv crn fvex wcel wceq wrex fvelrnb eqcom rexbii syl6bb wb
      adantl ralxfr2d ) FEHZABCDDIZFJZFKZEUDFLUCCIZUFMUEUGNZDEOUGUENZDEODEUGFPU
      HUIDEUEUGQRSUIABTUCGUAUB $.
      $( [20-Aug-2014] $) $( [24-Dec-2013] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.
    $( A function expressed as the range of another function.  (Contributed by
       Mario Carneiro, 22-Jun-2013.) $)
    fnasrn $p |- ( F Fn A -> F = ran { <. x , y >. |
        ( x e. A /\ y = <. x , ( F ` x ) >. ) } ) $=
      ( vz vw wfn cv cfv cop wceq wrex wcel wa wb wal wi syl wrel cvv cab copab
      crn fnop wfun fnfun funopfv imp opeq2d eqcomd fveq2 opeq12 eqeq2d rcla4ev
      mpdan syl2anc ex fnopfv eleq1a rexlimdva impbid opex rexbidv elab syl6bbr
      eqeq1 alrimivv fnrel cxp wss vex fvex opelvv eleq1 mpbiri rexlimivw abssi
      df-rel mpbir eqrel sylancl mpbird rnopab2 syl6eqr ) DCGZDBHZAHZWGDIZJZKZA
      CLZBUAZWGCMZWJNABUBUCWEDWLKZEHZFHZJZDMZWQWLMZOZFPEPZWEWTEFWEWRWQWIKZACLZW
      SWEWRXCWEWRXCWEWRNZWOCMWQWOWODIZJZKZXCCWOWPDUDXDXFWQXDXEWPWOWEWRXEWPKZWED
      UEWRXHQCDUFWOWPDUGRUHUIUJXBXGAWOCWGWOKZWIXFWQXIWHXEKWIXFKWGWODUKWGWHWOXEU
      LUOUMUNUPUQWEXBWRACWEWMNWIDMXBWRQCWGDURWIDWQUSRUTVAWKXCBWQWOWPVBWFWQKWJXB
      ACWFWQWIVFVCVDVEVGWEDSWLSZWNXAOCDVHXJWLTTVIZVJWKBXKWJWFXKMZACWJXLWIXKMWGW
      HAVKWGDVLVMWFWIXKVNVOVPVQWLVRVSEFDWLVTWAWBABCWIWCWD $.
      $( [22-Jun-2013] $)
  $}

  ${
    $d x y A $.  $d x y C $.  $d x y D $.  $d y B $.
    f0cl.1 $e |- F : A --> B $.
    f0cl.2 $e |- (/) e. B $.
    $( Unconditional closure of a function when the range includes the empty
       set.  (Contributed by Mario Carneiro, 12-Sep-2013.) $)
    f0cli $p |- ( F ` C ) e. B $=
      ( wcel cfv ffvelrni cdm fdmi eleq2i wn c0 ndmfv syl6eqel sylnbir pm2.61i
      ) CAGZCDHZBGZABCDEISCDJZGZUAUBACABDEKLUCMTNBCDOFPQR $.
      $( [12-Sep-2013] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    $( The restriction of a function to a set exists.  Compare Proposition 6.17
       of [TakeutiZaring] p. 28.  (Revised by Mario Carneiro, 22-Jun-2013.) $)
    resfunexg $p |- ( ( Fun A /\ B e. C ) -> ( A |` B ) e. _V ) $=
      ( vx vy wfun wcel cres cvv cv cdm cfv cop wceq wa copab funopab4 dmresexg
      cima funimaexg sylancr crn funres wfn funfn fnasrn sylbi syl imadmrn opex
      eqid dmopab2 imaeq2i eqtr3i syl6eq eleq1d syl5ibr imp ) AFZBCGZABHZIGZUTV
      BUSDJZVAKZGZEJVCVCVALZMZNODEPZVDSZIGZUTVHFVDIGVJVEDEVGQABCRVHVDITUAUSVAVI
      IUSVAVHUBZVIUSVAFZVAVKNZBAUCVLVAVDUDVMVAUEDEVDVAUFUGUHVHVHKZSVKVIVHUIVNVD
      VHDEVDVGVHVCVFUJVHUKULUMUNUOUPUQUR $.
      $( [22-Jun-2013] $) $( [7-Apr-1995] $)
  $}

  $( The restriction of a function to a set exists.  Compare Proposition 6.17
     of [TakeutiZaring] p. 28.  This version has a shorter proof than
     ~ resfunexg but requires ~ ax-pow . $)
  resfunexgALT $p |- ( ( Fun A /\ B e. C ) -> ( A |` B ) e. _V ) $=
    ( wfun wcel cres cdm cvv crn cxp dmresexg adantl df-ima funimaexg syl5eqelr
    wa cima jca xpexg wss wrel relres relssdmrn ax-mp ssexg mpan 3syl ) ADZBCEZ
    PZABFZGZHEZUKIZHEZPULUNJZHEZUKHEZUJUMUOUIUMUHABCKLUJUNABQHABMABCNORULUNHHSU
    KUPTZUQURUKUAUSABUBUKUCUDUKUPHUEUFUG $.
    $( [12-Sep-2006] $) $( [7-Apr-1995] $)

  $( Existence of a composition when the first member is a function. $)
  cofunexg $p |- ( ( Fun A /\ B e. C ) -> ( A o. B ) e. _V ) $=
    ( wfun wcel wa ccom cdm crn cxp wss wrel relco relssdmrn ax-mp dmcoss ssexg
    cvv sylancr rnexg dmexg adantl cres rnco resfunexg sylan2 syl xpexg syl2anc
    syl5eqel ) ADZBCEZFZABGZUNHZUNIZJZKZUQREZUNREUNLURABMUNNOUMUOREZUPREUSULUTU
    KULUOBHZKVAREUTABPBCUAUOVARQSUBUMUPABIZUCZIZRABUDUMVCREZVDREULUKVBREVEBCTAV
    BRUEUFVCRTUGUJUOUPRRUHUIUNUQRQS $.
    $( [8-Oct-2007] $)

  $( Existence of a composition when the second member is one-to-one. $)
  cofunex2g $p |- ( ( A e. V /\ Fun `' B ) -> ( A o. B ) e. _V ) $=
    ( ccnv wfun wcel ccom cvv wa cnvexg cofunexg sylan2 cnvco cocnvcnv2 3eqtrri
    cocnvcnv1 syl5eqel syl ancoms ) BDZEZACFZABGZHFZUAUBITADZGZHFZUDUBUAUEHFUGA
    CJTUEHKLUGUCUFDZHUHUEDZTDGUIBGUCTUEMUIBNABPOUFHJQRS $.
    $( [8-Oct-2007] $)

  $( If the domain of a function is a set, the function is a set.  Theorem
     6.16(1) of [TakeutiZaring] p. 28.  This theorem is derived using the Axiom
     of Replacement in the form of ~ resfunexg .  (The proof was shortened by
     Andrew Salmon, 17-Sep-2011.) $)
  fnex $p |- ( ( F Fn A /\ A e. B ) -> F e. _V ) $=
    ( wfn wcel wrel cdm cres cvv fnrel adantr wfun wceq eleq1a impcom resfunexg
    wa df-fn sylan2 anassrs sylanb resdm eleq1d biimpa syl2anc ) CADZABEZQCFZCC
    GZHZIEZCIEZUFUHUGACJKUFCLZUIAMZQUGUKCARUMUNUGUKUNUGQUMUIBEZUKUGUNUOABUINOCU
    IBPSTUAUHUKULUHUJCICUBUCUDUE $.
    $( [18-Sep-2011] $) $( [14-Aug-1994] $)

  $( If the domain of a function is a set, the function is a set.  Theorem
     6.16(1) of [TakeutiZaring] p. 28.  This theorem is derived using the Axiom
     of Replacement in the form of ~ funimaexg . $)
  fnexALT $p |- ( ( F Fn A /\ A e. B ) -> F e. _V ) $=
    ( wfn wcel wa cdm crn cxp wss cvv fnrel relssdmrn syl adantr eleq1d biimpar
    wrel cima syl2anc fndm fnfun funimaexg sylan imadmrn imaeq2d syl5eqr syldan
    wfun xpexg ssexg ) CADZABEZFZCCGZCHZIZJZUQKEZCKEULURUMULCRURACLCMNOUNUOBEZU
    PKEZUSULUTUMULUOABACUAZPQULUMCASZKEZVAULCUIUMVDACUBCABUCUDULVAVDULUPVCKULUP
    CUOSVCCUEULUOACVBUFUGPQUHUOUPBKUJTCUQKUKT $.
    $( [11-Sep-2006] $) $( [14-Aug-1994] $)

  $( If the domain of a function exists, so the function.  Part of Theorem
     4.15(v) of [Monk1] p. 46.  This theorem is derived using the Axiom of
     Replacement in the form of ~ fnex .  (Note:  Any resemblance between
     F.U.N.E.X. and "Have You Any Eggs" is purely a coincidence originated by
     Swedish chefs.) $)
  funex $p |- ( ( Fun F /\ dom F e. B ) -> F e. _V ) $=
    ( wfun cdm wfn wcel cvv funfn fnex sylanb ) BCBBDZEKAFBGFBHKABIJ $.
    $( [9-Sep-2006] $) $( [11-Nov-1995] $)

  ${
    $d x y A $.
    opabex.1 $e |- A e. _V $.
    opabex.2 $e |- ( x e. A -> E* y ph ) $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex $p |- { <. x , y >. | ( x e. A /\ ph ) } e. _V $=
      ( cv wcel wa copab wfun cdm cvv wmo funopab moanimv mpbir mpgbir dmopabss
      wi ssexi funex mp2an ) BGDHZAIZBCJZKZUFLZMHUFMHUGUECNZBUEBCOUIUDACNTFUDAC
      PQRUHDEABCDSUAMUFUBUC $.
      $( [21-Jul-1996] $)
  $}

  ${
    $d x y A $.  $d y B $.
    opabex2.1 $e |- A e. _V $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex2 $p |- { <. x , y >. | ( x e. A /\ y = B ) } e. _V $=
      ( cv wceq wmo wcel moeq a1i opabex ) BFDGZABCEMBHAFCIBDJKL $.
      $( [22-Apr-2005] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( Existence of a function expressed as class of ordered pairs. $)
    opabex2g $p |- ( A e. V ->
                      { <. x , y >. | ( x e. A /\ y = B ) } e. _V ) $=
      ( wcel cv wceq wa copab wfun cdm cvv funopab4 dmopabss ssexg mpan sylancr
      wss funex ) CEFZAGCFZBGDHZIABJZKUDLZMFZUDMFUBABDNUECSUAUFUCABCOUECEPQMUDT
      R $.
      $( [9-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d y B $.
    fopabex2.1 $e |- A e. _V $.
    fopabex2.3 $e |- F = { <. x , y >. | ( x e. A /\ y = B ) } $.
    $( Existence of a function expressed as class of ordered pairs. $)
    fopabex2 $p |- F e. _V $=
      ( cv wcel wceq wa copab cvv opabex2 eqeltri ) EAHCIBHDJKABLMGABCDFNO $.
      $( [30-Jul-2007] $)
  $}

  $( If the domain of a function exists, so does its range.  Part of Theorem
     4.15(v) of [Monk1] p. 46.  This theorem is derived using the Axiom of
     Replacement in the form of ~ funex . $)
  funrnex $p |- ( dom F e. B -> ( Fun F -> ran F e. _V ) ) $=
    ( wfun cdm wcel cvv crn funex ex rnexg syl6com ) BCZBDAEZBFEZBGFELMNABHIBFJ
    K $.
    $( [11-Nov-1995] $)

  ${
    $d ph w v $.  $d x y z w v $.
    $( A version of the Axiom of Replacement.  Normally ` ph ` would have free
       variables ` x ` and ` y ` .  Axiom 6 of [Kunen] p. 12.  The Separation
       Scheme ~ ax-sep cannot be derived from this version and must be stated
       as a separate axiom in an axiom system (such as Kunen's) that uses this
       version in place of our ~ ax-rep . $)
    zfrep6 $p |- ( A. x e. z E! y ph -> E. w A. x e. z E. y e. w ph ) $=
      ( vv cv wral wcel wa cvv wrex wex wceq sylibr cab vex wi wal wmo weu wfun
      copab crn cdm crab euex ralimi rabid2 19.42v abbii dmopab df-rab syl6reqr
      3eqtr4i syl6eqel eumo imim2i moanimv alimi df-ral funopab 3imtr4i funrnex
      sylc hbra1 eleq2d cop opabid opelrn sylbir ex impac abeq2i df-rex syl6bir
      eximi ralrimi hbopab1 hbrn hbeleq ax-17 hbopab2 rexeqf ralbid cla4egv ) A
      CUAZBDGZHZBGZWHIZAJZBCUCZUDZKIZACWNLZBWHHZACEGZLZBWHHZEMWIWMUEZKIWMUBZWOW
      IXAWHKWIWHACMZBWHUFZXAWIXCBWHHWHXDNWGXCBWHACUGUHXCBWHUIOWLCMZBPWKXCJZBPXA
      XDXEXFBWKACUJUKWLBCULZXCBWHUMUOUNZDQUPWKWGRZBSWLCTZBSWIXBXIXJBXIWKACTZRXJ
      WGXKWKACUQURWKACUSOUTWGBWHVAWLBCVBVCKWMVDVEWIWPBWHWGBWHVFWIWKWJXAIZWPWIXA
      WHWJXHVGXECGZWNIZAJZCMXLWPWLXOCWKAXNWKAXNWLWJXMVHWMIXNWLBCVIWJXMWMBQCQVJV
      KVLVMVQXEBXAXGVNACWNVOVCVPVRWTWQEWNKWRWNNWSWPBWHBEWNBEWMWLBCEVSVTWAACFWRW
      NFGWRICWBCFWMWLBCFWCVTWDWEWFVE $.
      $( [10-Oct-2003] $)
  $}

  $( If the domain of a mapping is a set, the function is a set. $)
  fex $p |- ( ( F : A --> B /\ A e. C ) -> F e. _V ) $=
    ( wf wfn wcel cvv ffn fnex sylan ) ABDEDAFACGDHGABDIACDJK $.
    $( [11-Sep-2006] $) $( [3-Oct-1999] $)

  $( If the domain of an onto function exists, so does its codomain. $)
  fornex $p |- ( A e. C -> ( F : A -onto-> B -> B e. _V ) ) $=
    ( wfo wcel cvv cdm crn wfun funrnex syl5com wf wceq fof fdm syl eleq1d forn
    fofun 3imtr3d com12 ) ABDEZACFZBGFZUCDHZCFZDIZGFZUDUEUCDJUGUIABDTCDKLUCUFAC
    UCABDMUFANABDOABDPQRUCUHBGABDSRUAUB $.
    $( [23-Jul-2004] $)

  $( If the codomain of a one-to-one function exists, so does its domain.  This
     theorem is equivalent to the Axiom of Replacement ~ ax-rep . $)
  f1dmex $p |- ( ( F : A -1-1-> B /\ B e. C ) -> A e. _V ) $=
    ( wf1 wcel cvv crn wss wf f1f frn syl ssexg sylan ex ccnv wfo wf1o f1f1orn
    f1ocnv f1ofo 3syl fornex syl5com syld imp ) ABDEZBCFZAGFZUHUIDHZGFZUJUHUIUL
    UHUKBIZUIULUHABDJUMABDKABDLMUKBCNOPUHUKADQZRZULUJUHAUKDSUKAUNSUOABDTAUKDUAU
    KAUNUBUCUKAGUNUDUEUFUG $.
    $( [12-Sep-2006] $) $( [4-Sep-2004] $)

  ${
    $d f x y z A $.  $d f y z B $.
    eufnfv.1 $e |- A e. _V $.
    eufnfv.2 $e |- B e. _V $.
    $( A function is uniquely determined by its values. $)
    eufnfv $p |- E! f ( f Fn A /\ A. x e. A ( f ` x ) = B ) $=
      ( vz vy cv wfn cfv wceq wral wa weu wb wal wcel mpan2 cvv weq wex opabex2
      copab eqeq2 bibi2d albidv cla4ev eqid fnopab2 fneq1 mpbiri pm4.71ri ax-17
      hbopab1 eqfnfv2f fvopab2 eqeq2d ralbiia syl6bb pm5.32i bitr2i df-eu mpbir
      wel mpg ) DIZBJZAIZVGKZCLZABMZNZDOVMDGUAZPZDQZGUBZVMVGVIBRZHICLNZAHUDZLZP
      ZVQDVPWBDQGVTAHBCEUCGIZVTLZVOWBDWDVNWAVMWCVTVGUEUFUGUHWAVHWANVMWAVHWAVHVT
      BJZAHBCVTFVTUIUJZBVGVTUKULUMVHWAVLVHWAVJVIVTKZLZABMZVLVHWEWAWIPWFAGBVGVTG
      DVEAUNVSAHGUOUPSWHVKABVRWGCVJVRCTRWGCLFAHBCTUQSURUSUTVAVBVFVMDGVCVD $.
      $( [31-Aug-2011] $)
  $}

  $( Alternate definition of a mapping. $)
  dff2 $p |- ( F : A --> B <-> ( F Fn A /\ F C_ ( A X. B ) ) ) $=
    ( wf wfn cxp wss wa ffn fssxp jca crn rnss rnxpss syl6ss anim2i df-f sylibr
    impbii ) ABCDZCAEZCABFZGZHZTUAUCABCIABCJKUDUACLZBGZHTUCUFUAUCUEUBLBCUBMABNO
    PABCQRS $.
    $( [14-Nov-2007] $)

  ${
    $d f g x y z A $.  $d f g x y z B $.  $d x y z F $.
    $( Alternate definition of a mapping. $)
    dff3 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y x F y ) ) $=
      ( vz cxp wss cv wbr weu wa wcel wex cop adantr sylibr sylanbrc wi syl6 wf
      wral fssxp wmo cfv wfun cdm ffun fdm eleq2d biimpar funfvop syl2anc df-br
      fvex breq2 cla4ev syl funmo eu5 ralrimiva jca wfn crn wceq wrel xpss sstr
      wal mpan2 df-rel df-ral eumo imim2i adantl wn ssel syl5bi opelxp1 exlimdv
      cvv con3d exmo ori pm2.61d ex alimdv imp dffun6 dmss dmxpss syl6ss eubidv
      breq1 rcla4cv euex eldm ssrdv anim12i eqss df-fn rnss rnxpss df-f impbii
      vex ) CDEUAZECDGZHZAIZBIZEJZBKZACUBZLZXGXIXNCDEUCXGXMACXGXJCMZLZXLBNZXLBU
      DZXMXQXJXJEUEZEJZXRXQXJXTOEMZYAXQEUFZXJEUGZMZYBXGYCXPCDEUHZPXGYEXPXGYDCXJ
      CDEUIUJUKXJEULUMXJXTEUNQXLYABXTXJEUOXKXTXJEUPUQURXGXSXPXGYCXSYFABEUSURPXL
      BUTRVAVBXOECVCZEVDZDHZXGXOYCYDCVEZYGXOEVFZXSAVIZYCXIYKXNXIEWAWAGZHZYKXIXH
      YMHYNCDVGEXHYMVHVJEVKQPXIXNYLXNXPXMSZAVIXIYLXMACVLXIYOXSAXIYOXSXIYOLXPXSY
      OXPXSSXIXMXSXPXLBVMVNVOXIXPVPZXSSYOXIYPXRVPXSXIXRXPXIXLXPBXIXLXJXKOZXHMZX
      PXLYQEMXIYRXJXKEUNEXHYQVQVRXJXKCDVSTVTWBXRXSXLBWCWDTPWEWFWGVRWHABEWIRXOYD
      CHZCYDHZLYJXIYSXNYTXIYDXHUGCEXHWJCDWKWLXNFCYDXNFIZCMUUAXKEJZBKZUUAYDMZXMU
      UCAUUACXJUUAVEXLUUBBXJUUAXKEWNWMWOUUCUUBBNUUDUUBBWPBUUAEFXFWQQTWRWSYDCWTQ
      ECXARXIYIXNXIYHXHVDDEXHXBCDXCWLPCDEXDRXE $.
      $( [20-Mar-2007] $)

    $( Alternate definition of a mapping. $)
    dff4 $p |- ( F : A --> B <->
              ( F C_ ( A X. B ) /\ A. x e. A E! y e. B x F y ) ) $=
      ( wf cxp wss cv wbr weu wral wa wreu dff3 wcel cop df-br ssel opelxp2
      syl6 syl5bi pm4.71rd eubidv df-reu syl6bbr ralbidv pm5.32i bitri ) CDEFEC
      DGZHZAIZBIZEJZBKZACLZMUKUNBDNZACLZMABCDEOUKUPURUKUOUQACUKUOUMDPZUNMZBKUQU
      KUNUTBUKUNUSUNULUMQZEPZUKUSULUMERUKVBVAUJPUSEUJVASULUMCDTUAUBUCUDUNBDUEUF
      UGUHUI $.
      $( [20-Mar-2007] $)

    $( An onto mapping expressed in terms of function values. $)
    dffo3 $p |- ( F : A -onto-> B <-> ( F : A --> B /\
                  A. y e. B E. x e. A y = ( F ` x ) ) ) $=
      ( wfo wf crn wceq wa cv cfv wrex wral dffo2 cab wb wcel wal wi wfn fnrnfv
      ffn eqeq1d simpr ffvelrn adantr eqeltrd exp31 rexlimdv biantrurd syl6rbbr
      syl dfbi2 albidv abeq1 df-ral 3bitr4g bitrd pm5.32i bitri ) CDEFCDEGZEHZD
      IZJVBBKZAKZELZIZACMZBDNZJCDEOVBVDVJVBVDVIBPZDIZVJVBECUAZVDVLQCDEUCVMVCVKD
      ABCEUBUDUMVBVIVEDRZQZBSVNVITZBSVLVJVBVOVPBVBVPVIVNTZVPJVOVBVQVPVBVHVNACVB
      VFCRZVHVNVBVRJZVHJVEVGDVSVHUEVSVGDRVHCDVFEUFUGUHUIUJUKVIVNUNULUOVIBDUPVIB
      DUQURUSUTVA $.
      $( [29-Oct-2006] $)

    $( Alternate definition of an onto mapping. $)
    dffo4 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x e. A x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa crn wceq dffo2 simpl wcel wex vex wi syl5bbr
      elrn eleq2 biimpar adantll wfn ffn fnbr syl ancrd eximdv syl6ibr ad2antrr
      ex df-rex mpd ralrimiva jca sylbi cfv fnbrfvb eqcom syl6ib sylan reximdva
      biimprd ralimdv imdistani dffo3 sylibr impbii ) CDEFZCDEGZAHZBHZEIZACJZBD
      KZLZVLVMEMZDNZLZVSCDEOWBVMVRVMWAPWBVQBDWBVODQZLVPARZVQWAWCWDVMWAWDWCWDVOV
      TQWAWCAVOEBSUBVTDVOUCUAUDUEVMWDVQTWAWCVMWDVNCQZVPLZARVQVMVPWFAVMVPWEVMECU
      FZVPWETCDEUGZWGVPWECVNVOEUHUNUIUJUKVPACUOULUMUPUQURUSVSVMVOVNEUTZNZACJZBD
      KZLVLVMVRWLVMVQWKBDVMVPWJACVMWGWEVPWJTWHWGWELZVPWIVONZWJWMWNVPCVNVOEVAVFW
      IVOVBVCVDVEVGVHABCDEVIVJVK $.
      $( [20-Mar-2007] $)

    $( Alternate definition of an onto mapping. $)
    dffo5 $p |- ( F : A -onto-> B <->
                ( F : A --> B /\ A. y e. B E. x x F y ) ) $=
      ( wfo wf cv wbr wrex wral wa wex dffo4 rexex ralimi anim2i wcel wfn wi ex
      ffn fnbr syl ancrd eximdv df-rex syl6ibr ralimdv imdistani impbii bitri )
      CDEFCDEGZAHZBHZEIZACJZBDKZLZUMUPAMZBDKZLZABCDENUSVBURVAUMUQUTBDUPACOPQUMV
      AURUMUTUQBDUMUTUNCRZUPLZAMUQUMUPVDAUMUPVCUMECSZUPVCTCDEUBVEUPVCCUNUOEUCUA
      UDUEUFUPACUGUHUIUJUKUL $.
      $( [20-Mar-2007] $)

    $( A relation equivalent to the existence of an onto mapping.  The
       right-hand ` f ` is not necessarily a function. $)
    exfo $p |- ( E. f f : A -onto-> B <->
           E. f ( A. x e. A E! y e. B x f y /\ A. x e. B E. y e. A y f x ) ) $=
      ( vg cv wfo wex wbr wreu wral wrex wa wf dffo4 wss dff4 sylibr foeq1 wceq
      cxp simprbi anim1i sylbi eximi cin crn wcel brinxp reubidva ralimia inss2
      biimpd jctil rninxp biimpri anim12i dffo2 vex inex1 cla4ev exlimiv cbvexv
      syl sylib impbii ) CDEGZHZEIZAGZBGZVHJZBDKZACLZVLVKVHJBCMADLZNZEIZVIVQEVI
      CDVHOZVPNVQBACDVHPVSVOVPVSVHCDUBZQVOABCDVHRUCUDUEUFVRCDFGZHZFIZVJVQWCEVQC
      DVHVTUGZHZWCVQCDWDOZWDUHDUAZNWEVOWFVPWGVOWDVTQZVKVLWDJZBDKZACLZNWFVOWKWHV
      NWJACVKCUIZVNWJWLVMWIBDVKVLCDVHUJUKUNULVHVTUMUOABCDWDRSWGVPBACDVHUPUQURCD
      WDUSSWBWEFWDVHVTEUTVACDWAWDTVBVEVCWBVIFECDWAVHTVDVFVG $.
      $( [20-Mar-2007] $)
  $}

  ${
    $d F x y $.  $d A x y $.  $d B x y $.  $d C x y $.
    $( Property of a surjective function.  (Contributed by Jeff Madsen,
       4-Jan-2011.) $)
    foelrn $p |- ( ( F : A -onto-> B /\ C e. B )
                                  -> E. x e. A C = ( F ` x ) ) $=
      ( vy wfo cv cfv wceq wrex wral wcel wf dffo3 simprbi eqeq1 rcla4cva sylan
      rexbidv ) BCEGZFHZAHEIZJZABKZFCLZDCMDUCJZABKZUABCENUFAFBCEOPUEUHFDCUBDJUD
      UGABUBDUCQTRS $.
      $( [4-Jan-2011] $)
  $}

  ${
    $d F x y z $.  $d G x y z $.  $d A y z $.  $d B x y z $.  $d C x y z $.
    $( If a composition of two functions is surjective, then the function on
       the left is surjective.  (Contributed by Jeff Madsen, 16-Jun-2011.) $)
    foco2 $p |- ( ( F : B --> C /\ G : A --> B /\
                        ( F o. G ) : A -onto-> C ) -> F : B -onto-> C ) $=
      ( vy vx vz wf ccom wfo w3a cv cfv wceq wrex wral wa wcel adantll sylanbrc
      simp1 foelrn ffvelrn fvco3 fveq2 rcla4ev syl2anc eqeq1 rexbidv syl5ibrcom
      eqeq2d rexlimdva syl5 impl ralrimiva 3impa dffo3 ) BCDIZABEIZACDEJZKZLUSF
      MZGMZDNZOZGBPZFCQZBCDKUSUTVBUBUSUTVBVHUSUTRZVBRVGFCVIVBVCCSZVGVBVJRVCHMZV
      ANZOZHAPVIVGHACVCVAUCVIVMVGHAVIVKASZRZVGVMVLVEOZGBPZVOVKENZBSZVLVRDNZOZVQ
      UTVNVSUSABVKEUDTUTVNWAUSABVKDEUETVPWAGVRBVDVROVEVTVLVDVRDUFULUGUHVMVFVPGB
      VCVLVEUIUJUKUMUNUOUPUQGFBCDURUA $.
      $( [26-Dec-2014] $) $( [16-Jun-2011] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d y z C $.  $d z F $.
    fopab2.1 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    $( Functionality of an ordered-pair class abstraction. $)
    fopab2 $p |- ( A. x e. A C e. B <-> F : A --> B ) $=
      ( vz wcel wral wf crn wss cv wceq cvv sylib wa wi ax-17 wfn weu elex eueq
      ralimi fnopabg copab rneqi wal wex rnopab abeq2i ra4 eleq1a imim2i exlimd
      hbra1 imp3a syl syl5bi alrimiv hbopab2 hbrn dfss2f syl5eqss df-f sylanbrc
      sylibr cdm fdm dmopab3 isset ralbii dmeqi eqeq1i 3bitr4ri hbopab1 hbxfrbi
      feq1i hbf ffvelrn adantr wb fveq1i fvopab2 syl5eq eleq1d adantll mpbid ex
      cfv ralimdaa mpd impbii ) EDIZACJZCDFKZWPFCUAZFLZDMWQWPBNZEOZBUBZACJWRWOX
      BACWOEPIZXBEDUCBEUDQUEXAABCFGUFQWPWSANZCIZXARZABUGZLZDFXGGUHWPWTXHIZWTDIZ
      SZBUIXHDMWPXKBXIXFAUJZWPXJXLBXHXFABUKULWPXFXJAWOACUQXJATWPXEWOSZXFXJSWOAC
      UMXMXEXAXJWOXAXJSXEEDWTUNUOURUSUPUTVABHXHDBHXGXFABHVBVCHNZDIZBTVDVHVECDFV
      FVGWQXCACJZWPWQFVIZCOZXPCDFVJXABUJZACJXGVIZCOXPXRXAABCVKXCXSACBEVLVMXQXTC
      FXGGVNVOVPQWQXCWOACWQCDXGKACDFXGGVSAHCDXGXFABHVQXNCIATXOATVTVRWQXERZXCWOY
      AXCRXDFWKZDIZWOYAYCXCCDXDFWAWBXEXCYCWOWCWQXEXCRZYBEDYDYBXDXGWKEXDFXGGWDAB
      CEPWEWFWGWHWIWJWLWMWN $.
      $( [29-Jan-2004] $)

    $( Inclusion of a function in a cross product. $)
    fopabssxp $p |- ( A. x e. A C e. B -> F C_ ( A X. B ) ) $=
      ( wcel wral wf cxp wss fopab2 fssxp sylbi ) EDHACICDFJFCDKLABCDEFGMCDFNO
      $.
      $( [5-Jun-2007] $)

    ${
      rnssopab.2 $e |- C e. _V $.
      $( Range of a function that is expressed as an ordered-pair class
         abstraction. $)
      rnssopab $p |- ( A. x e. A C e. B <-> ran F C_ B ) $=
        ( vz wcel wral crn wss wf fopab2 frn cv wceq cfv cvv wa hbopab1 hbxfreq
        sylbi copab hbrn ax-17 fveq1i fvopab2 mpan2 syl5eq wfn fnopab2 fnfvelrn
        hbss mpan eqeltrrd ssel syl5 ralrimi impbii ) EDJZACKZFLZDMZVCCDFNVEABC
        DEFGOCDFPUDVEVBACAIVDDAIFAIFAQZCJZBQERUAZABUEZGVHABIUBUCUFIQDJAUGUOVGEV
        DJVEVBVGVFFSZEVDVGVJVFVISZEVFFVIGUHVGETJVKERHABCETUIUJUKFCULVGVJVDJABCE
        FHGUMCVFFUNUPUQVDDEURUSUTVA $.
        $( [23-May-2006] $)

      $( Functionality of an ordered-pair class abstraction. $)
      fopab3 $p |- ( ran F C_ B <-> F : A --> B ) $=
        ( crn wss wcel wral wf rnssopab fopab2 bitr3i ) FIDJEDKACLCDFMABCDEFGHN
        ABCDEFGOP $.
        $( [23-May-2006] $)
    $}

    ${
      fopab.2 $e |- ( x e. A -> C e. B ) $.
      $( Functionality of an ordered-pair class abstraction. $)
      fopab $p |- F : A --> B $=
        ( wcel wral wf rgen fopab2 mpbi ) EDIZACJCDFKOACHLABCDEFGMN $.
        $( [19-Mar-2005] $)
    $}
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    $( A function maps to a class to which all values belong. $)
    ffnfv $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vy wf wfn cv cfv wcel wral ffn ffvelrn ralrimiva jca crn wss simpl wceq
      wa wrex fvelrnb biimpd hbra1 ax-17 wi ra4 eleq1 biimpcd syl6 sylan9 ssrdv
      rexlimd df-f sylanbrc impbii ) BCDFZDBGZAHZDIZCJZABKZTZUQURVBBCDLUQVAABBC
      USDMNOVCURDPZCQUQURVBRVCEVDCUREHZVDJZUTVESZABUAZVBVECJZURVFVHABVEDUBUCVBV
      GVIABVAABUDVIAUEVBUSBJVAVGVIUFVAABUGVGVAVIUTVECUHUIUJUMUKULBCDUNUOUP $.
      $( [3-Dec-2003] $)
  $}

  ${
    $d y z A $.  $d y z B $.  $d y z F $.  $d x y z $.
    ffnfvf.1 $e |- ( y e. A -> A. x y e. A ) $.
    ffnfvf.2 $e |- ( y e. B -> A. x y e. B ) $.
    ffnfvf.3 $e |- ( y e. F -> A. x y e. F ) $.
    $( A function maps to a class to which all values belong.  This version of
       ~ ffnfv uses bound-variable hypotheses instead of distinct variable
       conditions. $)
    ffnfvf $p |- ( F : A --> B <-> ( F Fn A /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( vz wf wfn cv cfv wcel wral wa ffnfv ax-17 hbfv hbel wceq eleq1d cbvralf
      fveq2 anbi2i bitri ) CDEJECKZILZEMZDNZICOZPUGALZEMZDNZACOZPICDEQUKUOUGUJU
      NIABCBLZCNIRFABBUIDABUHEHUPUHNARSGTUNIRUHULUAUIUMDUHULEUDUBUCUEUF $.
      $( [28-Sep-2006] $)
  $}

  ${
    $d x y A $.  $d x B $.  $d x y F $.
    $( An upper bound for range determined by function values. $)
    fnfvrnss $p |- ( ( F Fn A /\ A. x e. A ( F ` x ) e. B ) -> ran F C_ B ) $=
      ( wfn cv cfv wcel wral wa wf crn wss ffnfv frn sylbir ) DBEAFDGCHABIJBCDK
      DLCMABCDNBCDOP $.
      $( [8-Oct-2004] $)

    $( Representation of a mapping in terms of its values. $)
    fopabfv $p |- ( F : A --> B <->
         ( F = { <. x , y >. | ( x e. A /\ y = ( F ` x ) ) }
         /\ A. x e. A ( F ` x ) e. B ) ) $=
      ( wf wfn cv cfv wcel wral wa wceq copab ffnfv dffn5 anbi1i bitri ) CDEFEC
      GZAHZEIZDJACKZLETCJBHUAMLABNMZUBLACDEOSUCUBABCEPQR $.
      $( [21-Feb-2004] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( A necessary and sufficient condition for a restricted function.
       (Contributed by Mario Carneiro, 14-Nov-2013.) $)
    ffvresb $p |- ( Fun F -> ( ( F |` A ) : A --> B <->
        A. x e. A ( x e. dom F /\ ( F ` x ) e. B ) ) ) $=
      ( wfun cres wf cv cdm wcel cfv wa wral fdm wss cin dmres inss2 adantl wfn
      eqsstri a1i eqsstr3d sselda wceq fvres ffvelrn eqeltrrd jca ralrimiva crn
      simpl ralimi sylibr fnssres sylanb sylan2 eleq1d syl5ibr ralimia fnfvrnss
      dfss3 funfn simpr syl2anc df-f sylanbrc ex impbid2 ) DEZBCDBFZGZAHZDIZJZV
      MDKZCJZLZABMZVLVRABVLVMBJZLZVOVQVLBVNVMVLBVKIZVNBCVKNWBVNOVLWBBVNPVNDBQBV
      NRUAUBUCUDWAVMVKKZVPCVTWCVPUEVLVMBDUFZSBCVMVKUGUHUIUJVJVSVLVJVSLZVKBTZVKU
      KCOZVLVSVJBVNOZWFVSVOABMWHVRVOABVOVQULUMABVNVBUNVJDVNTWHWFDVCVNBDUOUPUQZW
      EWFWCCJZABMZWGWIVSWKVJVRWJABVRWJVTVQVOVQVDVTWCVPCWDURUSUTSABCVKVAVEBCVKVF
      VGVHVI $.
      $( [14-Nov-2013] $)
  $}

  ${
    $d x y A $.  $d u x B $.  $d w z B $.  $d u F $.  $d u x G $.  $d u H $.
    $d w S $.  $d y R $.  $d w R z $.  $d w T z $.  $d x v A $.  $d v T $.
    fopabco.1 $e |- R e. _V $.
    fopabco.2 $e |- S e. _V $.
    fopabco.3 $e |- T e. _V $.
    fopabco.4 $e |- ( z = R -> S = T ) $.
    fopabco.5 $e |- F = { <. x , y >. | ( x e. A /\ y = R ) } $.
    fopabco.6 $e |- G = { <. z , w >. | ( z e. B /\ w = S ) } $.
    fopabco.7 $e |- H = { <. x , v >. | ( x e. A /\ v = T ) } $.
    $( Composition of two functions expressed as ordered-pair class
       abstractions.  Note that ` v ` may be assigned to ` w ` , ` y ` , or
       ` z ` if desired.  (Unnecessary distinct variable restrictions were
       removed by David Abernethy, 21-Jan-2012.) $)
    fopabco $p |- ( ran F C_ B -> ( G o. F ) = H ) $=
      ( vu crn wss ccom wceq cv wral wcel copab hbopab1 hbxfreq hbrn ax-17 hbss
      cfv wa fveq1i cvv fvopab2 mpan2 syl5eq fveq2d adantl fnopab2 df-f biimpri
      wf wfn ffvelrn sylan wb eleq1d mpbid fvopab4 syl eqtrd cdm dmopab2 eleq2i
      mpan wfun fnfun fvco sylbir 3eqtr4d ex ralrimi fnco mp3an12 hbco eqfnfv2f
      ax-mp sylancl mpbird ) KUBZGUCZLKUDZMUEZAUFZWQUOZWSMUOZUEZAFUGZWPXBAFAUAW
      OGAUAKAUAKWSFUHZBUFHUEUPZABUIZRXEABUAUJUKZULUAUFZGUHAUMUNWPXDXBWPXDUPZWSK
      UOZLUOZJWTXAXIXKHLUOZJXDXKXLUEWPXDXJHLXDXJWSXFUOZHWSKXFRUQXDHURUHXMHUENAB
      FHURUSUTVAZVBVCXIHGUHZXLJUEXIXJGUHZXOWPFGKVGZXDXPKFVHZWPXQABFHKNRVDZXQXRW
      PUPFGKVEVFVTFGWSKVIVJXDXPXOVKWPXDXJHGXNVLVCVMCDHIJGLQSPVNVOVPXDWTXKUEZWPX
      DWSKVQZUHZXTYAFWSABFHKNRVRVSKWAZYBXTXRYCXSFKWBWLWSLKWCVTWDVCXDXAJUEZWPXDJ
      URUHZYDPXDYEUPXAWSXDEUFJUEUPZAEUIZUOJWSMYGTUQAEFJURUSVAUTVCWEWFWGWPWQFVHZ
      MFVHWRXCVKLGVHXRWPYHCDGILOSVDXSGFLKWHWIAEFJMPTVDAUAFWQMAUALKXHLUHAUMXGWJA
      UAMYGTYFAEUAUJUKWKWMWN $.
      $( [26-Dec-2014] $) $( [21-Aug-2007] $)
  $}

  ${
    $d x y z A $.  $d w x y z B $.  $d w y z C $.  $d w y z D $.  $d w z F $.
    $d w z G $.
    fopabcos.1 $e |- C e. _V $.
    fopabcos.2 $e |- D e. _V $.
    fopabcos.3 $e |- F = { <. x , y >. | ( x e. A /\ y = C ) } $.
    fopabcos.4 $e |- G = { <. x , y >. | ( x e. B /\ y = D ) } $.
    $( MAY BE REVISED - prove from fopabco4? $)
    $( Composition of two functions expressed as ordered-pair class
       abstractions. $)
    fopabcos $p |- ( ran G C_ A -> ( F o. G ) =
                  { <. x , y >. | ( x e. B /\ y = [_ D / x ]_ C ) } ) $=
      ( vz wcel csb wceq cfv adantl wfn cvv crn wss ccom cv copab wral fvopab4s
      wa fnopab2 fnfvelrn mpan wi ssel adantr mpd eqeltrrd syl cdm dmopab2 wfun
      eleq2i fnfun ax-mp fvco sylbir fveq2d eqtrd eqid wal vex ax-gen csbnest1g
      csbex mp2an syl6eq 3eqtr4d ralrimiva fnco mp3an12 eqfnfv2 sylancl mpbird
      wb ) HUAZCUBZGHUCZAUDDNBUDAFEOZPUHABUEZPZMUDZWFQZWJWHQZPZMDUFZWEWMMDWEWJD
      NZUHZAWJFOZGQZAWQEOZWKWLWPWQCNWRWSPWPWJHQZWQCWOWTWQPWEABWJFDHJLUGZRWPWTWD
      NZWTCNZWOXBWEHDSZWOXBABDFHJLUIZDWJHUJUKRWEXBXCULWOWDCWTUMUNUOUPABWQECGIKU
      GUQWOWKWRPWEWOWKWTGQZWRWOWJHURZNZWKXFPZXGDWJABDFHJLUSVAHUTZXHXIXDXJXEDHVB
      VCWJGHVDUKVEWOWTWQGXAVFVGRWOWLWSPWEWOWLAWJWGOZWSABWJWGDWHAFEJIVMZWHVHZUGW
      JTNFTNZAVIXKWSPMVJXNAJVKAWJFETTVLVNVORVPVQWEWFDSZWHDSWIWNWCGCSXDWEXOABCEG
      IKUIXECDGHVRVSABDWGWHXLXMUIMDWFWHVTWAWB $.
      $( [26-Dec-2014] $) $( [22-May-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.
    fsn.1 $e |- A e. _V $.
    fsn.2 $e |- B e. _V $.
    $( A function maps a singleton to a singleton iff it is the singleton of a
       ordered pair. $)
    fsn $p |- ( F : { A } --> { B } <-> F = { <. A , B >. } ) $=
      ( vx vy csn cop wceq cv wcel wb wal wa elsn weu eleq1d vex wrel wreu snid
      wf opelf anbi12i sylib feu mpan2 eueq1 biantru euanv opeq2 pm5.32i anbi1i
      ancom 3bitr4ri df-reu bitr4i 3bitr2i sylibr opeq12 syl5ibrcom impbid opex
      eubii elsnc opth bitr2i syl6bb alrimivv frel relsnop eqrel sylancl mpbird
      ex wf1o f1osn f1oeq1 mpbiri f1of syl impbii ) AHZBHZCUCZCABIZHZJZWFWIFKZG
      KZIZCLZWLWHLZMZGNFNZWFWOFGWFWMWJAJZWKBJZOZWNWFWMWSWFWMWSWFWMOWJWDLZWKWELZ
      OWSWDWEWJWKCUDWTWQXAWRFAPGBPZUEUFVPWFWMWSWGCLZWFAWKIZCLZGWEUAZXCWFAWDLXFA
      DUBGWDWEACUGUHXCXCWRGQZOXCWROZGQZXFXGXCGBEUIUJXCWRGUKXIXAXEOZGQXFXHXJGWRX
      EOWRXCOXJXHWRXEXCWRXDWGCWKBAULRUMXAWRXEXBUNXCWRUOUPVEXEGWEUQURUSUTWSWLWGC
      WJWKABVARVBVCWNWLWGJWSWLWGWJWKVDVFWJWKABFSGSVGVHVIVJWFCTWHTWIWPMWDWECVKAB
      DEVLFGCWHVMVNVOWIWDWECVQZWFWIXKWDWEWHVQABDEVRWDWECWHVSVTWDWECWAWBWC $.
      $( [10-Dec-2003] $)
  $}

  ${
    $d A a b $.  $d B b $.  $d F a b $.
    $( A function maps a singleton to a singleton iff it is the singleton of an
       ordered pair. $)
    fsng $p |- ( ( A e. C /\ B e. D ) ->
                 ( F : { A } --> { B } <-> F = { <. A , B >. } ) ) $=
      ( va vb cv csn wf cop wceq wb sneq feq2d opeq1 sneqd eqeq2d bibi12d vex
      feq3 syl opeq2 fsn vtocl2g ) FHZIZGHZIZEJZEUFUHKZIZLZMAIZUIEJZEAUHKZIZLZM
      UNBIZEJZEABKZIZLZMFGABCDUFALZUJUOUMURVDUGUNUIEUFANOVDULUQEVDUKUPUFAUHPQRS
      UHBLZUOUTURVCVEUIUSLUOUTMUHBNUIUSUNEUAUBVEUQVBEVEUPVAUHBAUCQRSUFUHEFTGTUD
      UE $.
      $( [26-Oct-2012] $)
  $}

  ${
    fsn2.1 $e |- A e. _V $.
    $( A function that maps a singleton to a class is the singleton of an
       ordered pair. $)
    fsn2 $p |- ( F : { A } --> B <->
               ( ( F ` A ) e. B /\ F = { <. A , ( F ` A ) >. } ) ) $=
      ( csn wf cfv wcel cop wceq snid ffvelrn mpan2 wfn ffn crn dffn3 cima syl
      wa biimpi wb cdm imadmrn fndm imaeq2d syl5eqr fnsnfv eqtr4d mpbid jca wss
      feq3 snssi fss ancoms sylan impbii fvex fsn anbi2i bitri ) AEZBCFZACGZBHZ
      VCVEEZCFZTZVFCAVEIEJZTVDVIVDVFVHVDAVCHZVFADKZVCBACLMVDCVCNZVHVCBCOVMVCCPZ
      CFZVHVMVOVCCQUAVMVNVGJVOVHUBVMVNCVCRZVGVMVNCCUCZRVPCUDVMVQVCCVCCUEUFUGVMV
      KVGVPJVLVCACUHMUIVNVGVCCUMSUJSUKVFVGBULZVHVDVEBUNVHVRVDVCVGBCUOUPUQURVHVJ
      VFAVECDACUSUTVAVB $.
      $( [19-May-2004] $)
  $}

  $( The cross product of two singletons.  (Contributed by Mario Carneiro,
     30-Apr-2015.) $)
  xpsng $p |- ( ( A e. V /\ B e. W ) ->
    ( { A } X. { B } ) = { <. A , B >. } ) $=
    ( wcel wa csn cxp wf cop wceq fconstg adantl fsng mpbid ) ACEZBDEZFAGZBGZRS
    HZIZTABJGKQUAPRBDLMABCDTNO $.
    $( [30-Apr-2015] $)

  ${
    xpsn.1 $e |- A e. _V $.
    xpsn.2 $e |- B e. _V $.
    $( The cross product of two singletons. $)
    xpsn $p |- ( { A } X. { B } ) = { <. A , B >. } $=
      ( cvv wcel csn cxp cop wceq xpsng mp2an ) AEFBEFAGBGHABIGJCDABEEKL $.
      $( [4-Nov-2006] $)
  $}

  $( If ` A ` is not in ` C ` , then the restriction of a singleton of
     ` <. A , B >. ` to ` C ` is null.  (Contributed by Scott Fenton,
     15-Apr-2011.) $)
  ressnop0 $p |- ( -. A e. C -> ( { <. A , B >. } |` C ) = (/) ) $=
    ( wcel wn cop cvv cxp csn cres c0 wceq opelxp1 con3i cin df-res incom eqtri
    disjsn biimpri syl5eq syl ) ACDZEABFZCGHZDZEZUDIZCJZKLUFUCABCGMNUGUIUEUHOZK
    UIUHUEOUJUHCPUHUEQRUJKLUGUEUDSTUAUB $.
    $( [1-Oct-2013] $) $( [15-Apr-2011] $)

  ${
    fpr.1 $e |- A e. _V $.
    fpr.2 $e |- B e. _V $.
    fpr.3 $e |- C e. _V $.
    fpr.4 $e |- D e. _V $.
    $( A function with a domain of two elements.  (Contributed by Jeff Madsen,
       20-Jun-2010.)  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    fpr $p |- ( A =/= B
                -> { <. A , C >. , <. B , D >. } : { A , B } --> { C , D } ) $=
      ( wne cop cpr wfn crn wa jctir sylibr csn cun df-pr rnsnop wss wfun funpr
      wf cdm wceq dmprop df-fn rneqi rnun uneq12i eqtr4i 3eqtri eqimssi df-f )
      ABIZACJZBDJZKZABKZLZUSMZCDKZUAZNUTVCUSUDUPVAVDUPUSUBZUSUEUTUFZNVAUPVEVFAB
      CDEFGHUCACBDGHUGOUSUTUHPVBVCVBUQQZURQZRZMVGMZVHMZRZVCUSVIUQURSUIVGVHUJVLC
      QZDQZRVCVJVMVKVNACETBDFTUKCDSULUMUNOUTVCUSUOP $.
      $( [22-Oct-2011] $) $( [20-Jun-2010] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A function restricted to a singleton. $)
    fnressn $p |- ( ( F Fn A /\ B e. A ) ->
                  ( F |` { B } ) = { <. B , ( F ` B ) >. } ) $=
      ( vx wcel wfn csn cres cfv cop wceq cv wi sneq reseq2d fveq2 opeq12 mpdan
      wa cvv sneqd eqeq12d imbi2d wss vex snss fnssres sylan2b wf fsn2 biantrur
      dffn2 fvres ax-mp opeq2i sneqi eqeq2i bitr3i 3bitri expcom vtoclga impcom
      fvex snid sylib ) BAECAFZCBGZHZBBCIZJZGZKZVFCDLZGZHZVMVMCIZJZGZKZMVFVLMDB
      AVMBKZVSVLVFVTVOVHVRVKVTVNVGCVMBNOVTVQVJVTVPVIKVQVJKVMBCPVMVPBVIQRUAUBUCV
      FVMAEZVSVFWASVOVNFZVSWAVFVNAUDWBVMADUEZUFAVNCUGUHWBVNTVOUIVMVOIZTEZVOVMWD
      JZGZKZSZVSVNVOULVMTVOWCUJWIWHVSWEWHVMVOVCUKWGVRVOWFVQWDVPVMVMVNEWDVPKVMWC
      VDVMVNCUMUNUOUPUQURUSVEUTVAVB $.
      $( [9-Oct-2004] $)

    $( A function restricted to a singleton.  (Contributed by Mario Carneiro,
       16-Nov-2014.) $)
    funressn $p |- ( Fun F -> ( F |` { B } ) C_ { <. B , ( F ` B ) >. } ) $=
      ( wfun cdm wcel csn cres cfv cop wss wceq wfn funfn fnressn sylanb eqimss
      wa syl wn c0 cin disjsn wb fnresdisj sylbi syl5bbr biimpa 0ss a1i eqsstrd
      pm2.61dan ) BCZABDZEZBAFZGZAABHIFZJZULUNQUPUQKZURULBUMLZUNUSBMZUMABNOUPUQ
      PRULUNSZQZUPTUQULVBUPTKZVBUMUOUATKZULVDUMAUBULUTVEVDUCVAUMUOBUDUEUFUGTUQJ
      VCUQUHUIUJUK $.
      $( [16-Nov-2014] $)

    $( The value of a function restricted to a singleton. $)
    fressnfv $p |- ( ( F Fn A /\ B e. A ) ->
                 ( ( F |` { B } ) : { B } --> C <-> ( F ` B ) e. C ) ) $=
      ( vx wcel wfn csn cres wf cfv wb cv wi wceq sneq reseq2 syl wa cop eleq1d
      feq1d feq2 bitrd fveq2 bibi12d imbi2d fnressn vex snid fvres ax-mp opeq2i
      sneqi eqeq2i fsn2 eleq1i iba syl5rbbr syl5bb sylbir expcom vtoclga impcom
      ) BAFDAGZBHZCDVFIZJZBDKZCFZLZVEEMZHZCDVMIZJZVLDKZCFZLZNVEVKNEBAVLBOZVRVKV
      EVSVOVHVQVJVSVMVFOZVOVHLVLBPVTVOVMCVGJVHVTVMCVNVGVMVFDQUBVMVFCVGUCUDRVSVP
      VICVLBDUEUAUFUGVEVLAFZVRVEWASVNVLVPTZHZOZVRAVLDUHWDVNVLVLVNKZTZHZOZVRWGWC
      VNWFWBWEVPVLVLVMFWEVPOVLEUIZUJVLVMDUKULZUMUNUOVOWECFZWHSZWHVQVLCVNWIUPVQW
      KWHWLWEVPCWJUQWHWKURUSUTVARVBVCVD $.
      $( [9-Oct-2004] $)
  $}

  $( The value of a constant function. $)
  fvconst $p |- ( ( F : A --> { B } /\ C e. A ) -> ( F ` C ) = B ) $=
    ( csn wf wcel wa cfv wceq ffvelrn elsni syl ) ABEZDFCAGHCDIZNGOBJANCDKOBLM
    $.
    $( [30-May-1999] $)

  ${
    $d x y z A $.  $d x y z B $.
    fopabsn.1 $e |- A e. _V $.
    fopabsn.2 $e |- B e. _V $.
    $( The singleton of an ordered pair expressed as an ordered pair class
       abstraction.  (The proof was shortened by Andrew Salmon,
       22-Oct-2011.) $)
    fopabsn $p |- { <. A , B >. } =
                  { <. x , y >. | ( x e. { A } /\ y = B ) } $=
      ( csn cxp cop cv wcel wceq wa copab xpsn fconstopab eqtr3i ) CGZDGHCDIGAJ
      RKBJDLMABNCDEFOABRDPQ $.
      $( [22-Oct-2011] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x y A $.  $d x y B $.
    fopabap.0a $e |- A e. _V $.
    fopabap.0b $e |- B e. _V $.
    fopabap.1 $e |- ( R u. { A } ) = S $.
    fopabap.2 $e |- ( x = A -> C = B ) $.
    $( Append an additional value to a function. $)
    fopabap $p |- ( { <. x , y >. | ( x e. R /\ y = C ) } u. { <. A , B >. } )
                  = { <. x , y >. | ( x e. S /\ y = C ) } $=
      ( cv wcel wceq wa copab cop csn cun wo uneq2i unopab eleq2i bitr3i anbi1i
      fopabsn elun andir sylbi eqeq2d pm5.32i orbi2i 3bitrri opabbii 3eqtri
      elsn ) ALZFMZBLZENZOZABPZCDQRZSVBUQCRZMZUSDNZOZABPZSVAVGTZABPUQGMZUTOZABP
      VCVHVBABCDHIUFUAVAVGABUBVIVKABVKURVETZUTOVAVEUTOZTVIVJVLUTVJUQFVDSZMVLVNG
      UQJUCUQFVDUGUDUEURVEUTUHVMVGVAVEUTVFVEEDUSVEUQCNEDNACUPKUIUJUKULUMUNUO $.
      $( [15-Jun-2007] $) $( [6-Jun-2006] $)
  $}

  ${
    $d x A $.
    $( The value of the identity function. $)
    fvi $p |- ( A e. V -> ( _I ` A ) = A ) $=
      ( cid wfun wcel wbr cfv wceq funi ididg funbrfv mpsyl ) CDABEAACFACGAHIAB
      JAACKL $.
      $( [28-Apr-2015] $) $( [1-May-2004] $)
  $}

  $( The value of a restricted identity function. $)
  fvresi $p |- ( B e. A -> ( ( _I |` A ) ` B ) = B ) $=
    ( wcel cid cres cfv fvres fvi eqtrd ) BACBDAEFBDFBBADGBAHI $.
    $( [19-May-2004] $)

  $( Remove an ordered pair not participating in a function value.  (Revised by
     Mario Carneiro, 28-May-2014.) $)
  fvunsn $p |- ( B =/= D
       -> ( ( A u. { <. B , C >. } ) ` D ) = ( A ` D ) ) $=
    ( wne cop csn cun cres cfv c0 wcel wceq syl cvv fvres fvprc eqtr4d pm2.61i
    wn resundir elsni necon3ai ressnop0 uneq2d un0 syl6eq syl5eq fveq1d 3eqtr3g
    snidg ) BDEZDABCFGZHZDGZIZJZDAUOIZJZDUNJZDAJZULDUPURULUPURUMUOIZHZURAUMUOUA
    ULVCURKHURULVBKURULBUOLZTVBKMVDBDBDUBUCBCUOUDNUEURUFUGUHUIDOLZUQUTMZVEDUOLZ
    VFDOUKZDUOUNPNVETZUQKUTDUPQDUNQRSVEUSVAMZVEVGVJVHDUOAPNVIUSKVADURQDAQRSUJ
    $.
    $( [28-May-2014] $) $( [1-Oct-2013] $)

  ${
    fvsn.1 $e |- A e. _V $.
    fvsn.2 $e |- B e. _V $.
    $( The value of a singleton of an ordered pair is the second member. $)
    fvsn $p |- ( { <. A , B >. } ` A ) = B $=
      ( cop csn wfun wcel cfv wceq funsn opex snid funopfv mp2 ) ABEZFZGPQHAQIB
      JABCDKPABLMABQNO $.
      $( [12-Aug-1994] $)
  $}

  ${
    $d A a b $.  $d B b $.
    $( The value of a singleton of an ordered pair is the second member. $)
    fvsng $p |- ( ( A e. V /\ B e. W ) -> ( { <. A , B >. } ` A ) = B ) $=
      ( va vb cv cop csn cfv opeq1 sneqd id fveq12d eqeq1d opeq2 fveq1d eqeq12d
      wceq vex fvsn vtocl2g ) EGZUCFGZHZIZJZUDSAAUDHZIZJZUDSAABHZIZJZBSEFABCDUC
      ASZUGUJUDUNUCAUFUIUNUEUHUCAUDKLUNMNOUDBSZUJUMUDBUOAUIULUOUHUKUDBAPLQUOMRU
      CUDETFTUAUB $.
      $( [26-Oct-2012] $)
  $}

  ${
    fvsnun.1 $e |- A e. _V $.
    fvsnun.2 $e |- B e. _V $.
    fvsnun.3 $e |- G = ( { <. A , B >. } u. ( F |` ( C \ { A } ) ) ) $.
    $( The value of a function with one of its ordered pairs replaced, at the
       replaced ordered pair.  See also ~ fvsnun2 . $)
    fvsnun1 $p |- ( G ` A ) = B $=
      ( csn cres cfv wcel wceq fvres ax-mp cun c0 cin eqtri 3eqtri snid reseq1i
      cop cdif resundir incom disjdif resdisj uneq2i un0 fveq1i fvsn eqtr3i ) A
      EAIZJZKZAEKZBAUNLZUPUQMAFUAZAUNENOUPAABUCIZUNJZKZAUTKZBAUOVAUOUTDCUNUDZJZ
      PZUNJVAVEUNJZPZVAEVFUNHUBUTVEUNUEVHVAQPVAVGQVAVDUNRZQMVGQMVIUNVDRQVDUNUFU
      NCUGSVDUNDUHOUIVAUJSTUKURVBVCMUSAUNUTNOABFGULTUM $.
      $( [23-Sep-2007] $)

    $( The value of a function with one of its ordered pairs replaced, at
       arguments other than the replaced one.  See also ~ fvsnun1 . $)
    fvsnun2 $p |- ( D e. ( C \ { A } ) -> ( G ` D ) = ( F ` D ) ) $=
      ( csn cdif wcel cres cfv fvres cop cun c0 wceq 3eqtri reseq1i cin disjdif
      resundir wfn wb fnsn fnresdisj ax-mp mpbi residm uneq12i uncom un0 fveq1i
      syl5eq eqtr3d ) DCAJZKZLZDFUSMZNZDFNDENZDUSFOUTVBDEUSMZNVCDVAVDVAABPJZVDQ
      ZUSMVEUSMZVDUSMZQZVDFVFUSIUAVEVDUSUDVIRVDQVDRQVDVGRVHVDURUSUBRSZVGRSZURCU
      CVEURUEVJVKUFABGHUGURUSVEUHUIUJEUSUKULRVDUMVDUNTTUODUSEOUPUQ $.
      $( [23-Sep-2007] $)
  $}

  $( Split a function into a single point and all the rest.  (Contributed by
     Stefan O'Rear, 27-Feb-2015.) $)
  fnsnsplit $p |- ( ( F Fn A /\ X e. A ) ->
      F = ( ( F |` ( A \ { X } ) ) u. { <. X , ( F ` X ) >. } ) ) $=
    ( wfn wcel wa csn cdif cun cres cfv cop wceq difsnid adantl reseq2d resundi
    fnressn uneq2d syl5eq fnresdm adantr 3eqtr3rd ) BADZCAEZFZBACGZHZUGIZJZBAJZ
    BUHJZCCBKLGZIZBUFUIABUEUIAMUDACNOPUFUJULBUGJZIUNBUHUGQUFUOUMULACBRSTUDUKBMU
    EABUAUBUC $.
    $( [27-Feb-2015] $)

  $( Adjoining a point to a function gives a function.  (Contributed by Stefan
     O'Rear, 28-Feb-2015.) $)
  fsnunf $p |- ( ( F : S --> T /\ ( X e. V /\ -. X e. S ) /\ Y e. T ) ->
      ( F u. { <. X , Y >. } ) : ( S u. { X } ) --> T ) $=
    ( wf wcel wn wa w3a csn cun cop cin c0 wceq simp1 wf1o syl simp2l simp3 fun
    f1osng syl2anc f1of simp2r disjsn sylibr syl21anc wb snssi 3ad2ant3 ssequn2
    wss sylib feq3 mpbid ) ABCGZEDHZEAHIZJZFBHZKZAELZMZBFLZMZCEFNLZMZGZVFBVJGZV
    DUSVEVGVIGZAVEOPQZVKUSVBVCRVDVEVGVISZVMVDUTVCVOUSUTVAVCUAUSVBVCUBEFDBUDUEVE
    VGVIUFTVDVAVNUSUTVAVCUGAEUHUIAVEBVGCVIUCUJVDVHBQZVKVLUKVDVGBUOZVPVCUSVQVBFB
    ULUMVGBUNUPVHBVFVJUQTUR $.
    $( [28-Feb-2015] $)

  $( Adjoining a point to a punctured function gives a function.  (Contributed
     by Stefan O'Rear, 28-Feb-2015.) $)
  fsnunf2 $p |- ( ( F : ( S \ { X } ) --> T /\ X e. S /\ Y e. T ) ->
      ( F u. { <. X , Y >. } ) : S --> T ) $=
    ( csn cdif wf wcel w3a cun cop simp1 simp2 snidg elndif syl 3ad2ant2 simp3
    wn fsnunf syl121anc wceq difsnid feq2d mpbid ) ADFZGZBCHZDAIZEBIZJZUHUGKZBC
    DELFKZHZABUNHULUIUJDUHITZUKUOUIUJUKMUIUJUKNUJUIUPUKUJDUGIUPDAODUGAPQRUIUJUK
    SUHBCADEUAUBULUMABUNUJUIUMAUCUKADUDRUEUF $.
    $( [28-Feb-2015] $)

  $( Recover the added point from a point-added function.  (Contributed by
     Stefan O'Rear, 28-Feb-2015.) $)
  fsnunfv $p |- ( ( X e. V /\ Y e. V /\ -. X e. dom F ) ->
      ( ( F u. { <. X , Y >. } ) ` X ) = Y ) $=
    ( wcel cdm wn w3a cop csn cun cres cfv c0 wceq cin dmres incom syl 3adant3
    eqtri disjsn biimpri syl5eq 3ad2ant3 wrel wb relres reldm0 ax-mp sylibr wfn
    wa wf1o f1osng f1ofn fnresdm uneq12d resundir uncom un0 eqtr2i fveq1d snidg
    3eqtr4g 3ad2ant1 fvres fvsng 3eqtr3d ) CBEZDBEZCAFZEGZHZCACDIJZKZCJZLZMZCVO
    MZCVPMZDVNCVRVOVNAVQLZVOVQLZKNVOKZVRVOVNWBNWCVOVNWBFZNOZWBNOZVMVJWFVKVMWEVL
    VQPZNWEVQVLPWHAVQQVQVLRUAWHNOVMVLCUBUCUDUEWBUFWGWFUGAVQUHWBUIUJUKVNVOVQULZW
    CVOOVJVKWIVMVJVKUMVQDJZVOUNWICDBBUOVQWJVOUPSTVQVOUQSURAVOVQUSWDVONKVONVOUTV
    OVAVBVEVCVNCVQEZVSWAOVJVKWKVMCBVDVFCVQVPVGSVJVKVTDOVMCDBBVHTVI $.
    $( [28-Feb-2015] $)

  $( Recover the original function from a point-added function.  (Contributed
     by Stefan O'Rear, 28-Feb-2015.) $)
  fsnunres $p |- ( ( F Fn S /\ -. X e. S ) ->
      ( ( F u. { <. X , Y >. } ) |` S ) = F ) $=
    ( wfn wcel wn wa cres cop csn cun c0 fnresdm adantr ressnop0 adantl uneq12d
    wceq resundir un0 eqcomi 3eqtr4g ) BAEZCAFGZHZBAIZCDJKZAIZLBMLZBUHLAIBUFUGB
    UIMUDUGBSUEABNOUEUIMSUDCDAPQRBUHATUJBBUAUBUC $.
    $( [28-Feb-2015] $)

  ${
    fvpr1.1 $e |- A e. _V $.
    fvpr1.2 $e |- C e. _V $.
    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr1 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` A ) = C ) $=
      ( wne cop cpr cfv csn df-pr fveq1i wceq necom fvunsn sylbi syl5eq fvsn
      cun syl6eq ) ABGZAACHZBDHZIZJZAUCKZJZCUBUFAUGUDKTZJZUHAUEUIUCUDLMUBBAGUJU
      HNABOUGBDAPQRACEFSUA $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  ${
    fvpr2.1 $e |- B e. _V $.
    fvpr2.2 $e |- D e. _V $.
    $( The value of a function with a domain of two elements.  (Contributed by
       Jeff Madsen, 20-Jun-2010.) $)
    fvpr2 $p |- ( A =/= B -> ( { <. A , C >. , <. B , D >. } ` B ) = D ) $=
      ( wne cop cpr cfv wceq fvpr1 necom prcom fveq1i eqeq1i 3imtr4i ) BAGBBDHZ
      ACHZIZJZDKABGBSRIZJZDKBADCEFLABMUCUADBUBTSRNOPQ $.
      $( [1-Oct-2013] $) $( [20-Jun-2010] $)
  $}

  ${
    fvtp1.1 $e |- A e. _V $.
    fvtp1.4 $e |- D e. _V $.
    $( The first value of a function with a domain of three elements. $)
    fvtp1 $p |- ( ( A =/= B /\ A =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` A ) = D ) $=
      ( wne wa cop ctp cfv cpr csn cun df-tp fveq1i wceq necom fvunsn sylan9eqr
      sylbi fvpr1 syl5eq ) ABIZACIZJAADKZBEKZCFKZLZMAUHUINZUJOPZMZDAUKUMUHUIUJQ
      RUGUFUNAULMZDUGCAIUNUOSACTULCFAUAUCABDEGHUDUBUE $.
      $( [1-Oct-2013] $) $( [14-Sep-2011] $)
  $}

  ${
    fvtp2.1 $e |- B e. _V $.
    fvtp2.4 $e |- E e. _V $.
    $( The second value of a function with a domain of three elements. $)
    fvtp2 $p |- ( ( A =/= B /\ B =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` B ) = E ) $=
      ( wne wa cop ctp cfv tprot fveq1i wceq necom fvtp1 ancoms sylanb syl5eq )
      ABIZBCIZJBADKZBEKZCFKZLZMBUEUFUDLZMZEBUGUHUDUEUFNOUBBAIZUCUIEPZABQUCUJUKB
      CAEFDGHRSTUA $.
      $( [1-Oct-2013] $) $( [14-Sep-2011] $)
  $}

  ${
    fvtp3.1 $e |- C e. _V $.
    fvtp3.4 $e |- F e. _V $.
    $( The third value of a function with a domain of three elements. $)
    fvtp3 $p |- ( ( A =/= C /\ B =/= C )
             -> ( { <. A , D >. , <. B , E >. , <. C , F >. } ` C ) = F ) $=
      ( wne wa cop ctp cfv tprot fveq1i wceq necom fvtp2 sylan2b ancoms syl5eq
      ) ACIZBCIZJCADKZBEKZCFKZLZMCUEUFUDLZMZFCUGUHUDUEUFNOUCUBUIFPZUBUCCAIUJACQ
      BCAEFDGHRSTUA $.
      $( [1-Oct-2013] $) $( [14-Sep-2011] $)
  $}

  $( The value of a constant function. $)
  fvconst2g $p |- ( ( B e. D /\ C e. A ) -> ( ( A X. { B } ) ` C ) = B ) $=
    ( wcel csn cxp wf cfv wceq fconstg fvconst sylan ) BDEABFZANGZHCAECOIBJABDK
    ABCOLM $.
    $( [20-Aug-2005] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( A constant function expressed as a cross product. $)
    fconst2g $p |- ( B e. C -> ( F : A --> { B } <-> F = ( A X. { B } ) ) ) $=
      ( vx wcel csn wf cxp wceq wa cv cfv wral fvconst adantlr fvconst2g eqtr4d
      adantll wfn ralrimiva wb fnconstg eqfnfv2 syl2an mpbird expcom syl5ibrcom
      ffn fconstg feq1 impbid ) BCFZABGZDHZDAUNIZJZUOUMUQUOUMKZUQELZDMZUSUPMZJZ
      EANZURVBEAURUSAFZKUTBVAUOVDUTBJUMABUSDOPUMVDVABJUOABUSCQSRUAUODATUPATUQVC
      UBUMAUNDUIABCUCEADUPUDUEUFUGUMUOUQAUNUPHABCUJAUNDUPUKUHUL $.
      $( [27-Nov-2007] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    fvconst2.1 $e |- B e. _V $.
    $( The value of a constant function. $)
    fvconst2 $p |- ( C e. A -> ( ( A X. { B } ) ` C ) = B ) $=
      ( cvv wcel csn cxp cfv wceq fvconst2g mpan ) BEFCAFCABGHIBJDABCEKL $.
      $( [16-Apr-2005] $)

    $( A constant function expressed as a cross product. $)
    fconst2 $p |- ( F : A --> { B } <-> F = ( A X. { B } ) ) $=
      ( cvv wcel csn wf cxp wceq wb fconst2g ax-mp ) BEFABGZCHCANIJKDABECLM $.
      $( [20-Aug-1999] $)
  $}

  $( Two ways to express that a function is constant. $)
  fconst5 $p |- ( ( F Fn A /\ A =/= (/) ) -> ( F = ( A X. { B } ) <->
                 ran F = { B } ) ) $=
    ( wfn c0 wne wa csn cxp wceq crn wi eqeq2d syl5ib adantl cvv adantrd adantr
    rneq wb rnxp wcel wf wfo df-fo fof sylbir fconst2g exp3a fnrel snprc relrn0
    wn wrel biimprd eqeq2 xpeq2 xp0 syl6eq 3imtr4d ex sylbi syl5 pm2.61i impbid
    ) CADZAEFZGZCABHZIZJZCKZVIJZVGVKVMLVFVKVLVJKZJVGVMCVJSVGVNVIVLAVIUAMNOBPUBZ
    VHVMVKLZLVOVFVPVGVOVFVMVKVFVMGZAVICUCZVOVKVQAVICUDVRAVICUEAVICUFUGABPCUHNUI
    QVOUMZVFVPVGVFCUNZVSVPACUJVSVIEJZVTVPLBUKWAVTVPWAVTGVLEJZCEJZVMVKVTWBWCLWAV
    TWCWBCULUOOWAVMWBTVTVIEVLUPRWAVKWCTVTWAVJECWAVJAEIEVIEAUQAURUSMRUTVAVBVCQVD
    VE $.
    $( [27-Nov-2007] $)

  ${
    $d F a $.  $d V a $.  $d A a $.  $d B a $.  $d Z a $.
    $( Two ways to express restriction of a support set.  (Contributed by
       Stefan O'Rear, 5-Feb-2015.) $)
    fnsuppres $p |- ( ( F Fn ( A u. B ) /\ ( A i^i B ) = (/) /\ Z e. V ) ->
        ( ( `' F " ( _V \ { Z } ) ) C_ A <-> ( F |` B ) = ( B X. { Z } ) ) ) $=
      ( va cun wfn wceq wcel cfv crab wss wral wa wn wb a1i syl5bb syl2anc cres
      cin w3a wne csn cxp ccnv cvv cdif cima unss ssrab2 biantrur rabun2 sseq1i
      c0 cv 3bitr4ri wi rabss fvres adantl fvconst2g 3ad2antl3 eqeq12d id simp2
      nne minel syl2anr mtt syl 3bitr2rd ralbidva fnniniseg2 sseq1d simp1 ssun2
      3ad2ant1 fnssres fnconstg 3ad2ant3 eqfnfv2 3bitr4d ) CABGZHZABUBUPIZEDJZU
      CZFUQZCKZEUDZFWELZAMZWJCBUAZKZWJBEUEZUFZKZIZFBNZCUGUHWQUIUJZAMWOWRIZWNWLF
      BLZAMZWIXAWLFALZAMZXEOXFXDGZAMXEWNXFXDAUKXGXEWLFAULUMWMXHAWLFABUNUOURXEWL
      WJAJZUSZFBNWIXAWLFBAUTWIXJWTFBWIWJBJZOZWTWKEIZWLPZXJXLWPWKWSEXKWPWKIWIWJB
      CVAVBWHWFXKWSEIWGBEWJDVCVDVEXNXMQXLWKEVHRXLXIPZXNXJQXKXKWGXOWIXKVFWFWGWHV
      GWJBAVIVJXIWLVKVLVMVNSSWIXBWMAWFWGXBWMIWHFWEECVOVSVPWIWOBHZWRBHZXCXAQWIWF
      BWEMZXPWFWGWHVQXRWIBAVRRWEBCVTTWHWFXQWGBEDWAWBFBWOWRWCTWD $.
      $( [5-Feb-2015] $)

    $( The support of a function is empty iff it is identically zero. $)
    fnsuppeq0 $p |- ( ( F Fn A /\ Z e. V ) ->
        ( ( `' F " ( _V \ { Z } ) ) = (/) <-> F = ( A X. { Z } ) ) ) $=
      ( wfn wcel wa ccnv cvv csn cdif cima c0 wceq cres cxp wss cun cin adantr
      ss0b un0 uncom eqtr3i fneq2i biimpi incom in0 eqtri a1i fnsuppres syl3anc
      wb simpr syl5bbr fnresdm eqeq1d bitrd ) BAEZDCFZGZBHIDJZKLZMNZBAOZAVBPZNZ
      BVFNVDVCMQZVAVGVCUAVABMARZEZMASZMNZUTVHVGUMUSVJUTUSVJAVIBAMRAVIAUBAMUCUDU
      EUFTVLVAVKAMSMMAUGAUHUIUJUSUTUNMABCDUKULUOVAVEBVFUSVEBNUTABUPTUQUR $.
      $( [22-Mar-2015] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.  $d x y z F $.
    $( A constant function expressed in terms of its functionality, domain, and
       value.  See also ~ fconst2 . $)
    fconstfv $p |- ( F : A --> { B } <->
                   ( F Fn A /\ A. x e. A ( F ` x ) = B ) ) $=
      ( vy vz csn wf wfn cv cfv wceq wral wa syl6bb wcel wrex eqeq1d sylan9bbr
      c0 ffn fvconst ralrimiva jca wi fneq2 fn0 feq1 mpbiri syl6bi feq2 sylibrd
      f0 adantrd wne fvelrnb fveq2 rcla4cva rexbidva r19.9rzv bicomd elsn eqcom
      crn bitr2i eqrdv an32s exp31 imdistand df-fo sylbir syl6 pm2.61ine impbii
      wfo fof ) BCGZDHZDBIZAJZDKZCLZABMZNZVRVSWCBVQDUAVRWBABBCVTDUBUCUDWDVRUEBT
      BTLZVSVRWCWEVSTVQDHZVRWEVSDTLZWFWEVSDTIWGBTDUFDUGOWGWFTVQTHVQUMTVQDTUHUIU
      JBTVQDUKULUNBTUOZWDVSDVDZVQLZNZVRWHVSWCWJWHVSWCWJWHWCVSWJWHWCNZVSNZEWIVQW
      MEJZWIPZCWNLZWNVQPZVSWOFJZDKZWNLZFBQZWLWPFBWNDUPWCXAWPFBQZWHWPWCWTWPFBWCW
      RBPNWSCWNWBWSCLAWRBVTWRLWAWSCVTWRDUQRURRUSWHWPXBWPFBUTVASSWQWNCLWPECVBWNC
      VCVEOVFVGVHVIWKBVQDVOVRBVQDVJBVQDVPVKVLVMVN $.
      $( [27-Aug-2004] $)

    $( Two ways to express a constant function. $)
    fconst3 $p |- ( F : A --> { B } <->
                  ( F Fn A /\ A C_ ( `' F " { B } ) ) ) $=
      ( vx csn wf wfn cv cfv wceq wral wa ccnv cima wss fconstfv wfun cdm fnfun
      wb fndm eqimss2 syl funconstss syl2anc pm5.32i bitri ) ABEZCFCAGZDHCIBJDA
      KZLUIACMUHNOZLDABCPUIUJUKUICQACRZOZUJUKTACSUIULAJUMACUAAULUBUCDABCUDUEUFU
      G $.
      $( [15-Mar-2007] $)
  $}

  $( Two ways to express a constant function. $)
  fconst4 $p |- ( F : A --> { B } <->
                ( F Fn A /\ ( `' F " { B } ) = A ) ) $=
    ( csn wf wfn ccnv cima wss wa wceq fconst3 cnvimass fndm syl5sseq biantrurd
    cdm eqss syl6bbr pm5.32i bitri ) ABDZCECAFZACGUBHZIZJUCUDAKZJABCLUCUEUFUCUE
    UDAIZUEJUFUCUGUEUCCQUDACUBMACNOPUDARSTUA $.
    $( [8-Mar-2007] $)

  $( A function's value in a preimage belongs to the image. $)
  funfvima $p |- ( ( Fun F /\ B e. dom F ) -> ( B e. A ->
                 ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wcel wa cfv cima wi cres cin dmres eleq2i elin crn funres fvelrn
    bitri sylan fvres eleq1d syl6rbbr syl5ibrcom ex syl5bir exp3a com12 pm2.43b
    df-ima imp3a ) CDZBCEZFZGBAFZBCHZCAIZFZUOULUNUOURJZULUOUNUSJULUOUNUSUOUNGZB
    CAKZEZFZULUSVCBAUMLZFUTVBVDBCAMNBAUMOSULVCUSULVCGURUOBVAHZVAPZFZULVADVCVGAC
    QBVARTUOVGUPVFFURUOVEUPVFBACUAUBUQVFUPCAUJNUCUDUEUFUGUHUKUI $.
    $( [23-Sep-2003] $)

  $( A function's value in an included preimage belongs to the image. $)
  funfvima2 $p |- ( ( Fun F /\ A C_ dom F ) -> ( B e. A ->
                  ( F ` B ) e. ( F " A ) ) ) $=
    ( wfun cdm wss wcel cfv cima wi ssel funfvima ex com23 a2d syl5 imp ) CDZAC
    EZFZBAGZBCHCAIGZJZTUABSGZJRUCASBKRUAUDUBRUDUAUBRUDUCABCLMNOPQ $.
    $( [3-Feb-1997] $)

  ${
    $d x A $.  $d x F $.  $d x G $.
    $( A class including a function contains the function's value in the image
       of the singleton of the argument. $)
    funfvima3 $p |- ( ( Fun F /\ F C_ G ) -> ( A e. dom F ->
                    ( F ` A ) e. ( G " { A } ) ) ) $=
      ( vx wss wfun cdm wcel cfv csn cima wi wa cop funfvop ssel syl5 imp wb cv
      wceq sneq imaeq2d eleq2d opeq1 eleq1d vex elimasn vtoclbg ad2antll mpbird
      fvex exp32 impcom ) BCEZBFZABGZHZABIZCAJZKZHZLUOUPURVBUOUPURMZMVBAUSNZCHZ
      UOVCVEVCVDBHUOVEABOBCVDPQRURVBVESUOUPUSCDTZJZKZHVFUSNZCHVBVEDAUQVFAUAZVHV
      AUSVJVGUTCVFAUBUCUDVJVIVDCVFAUSUEUFCVFUSDUGABULUHUIUJUKUMUN $.
      $( [23-Mar-2004] $)
  $}

  $( The function value of an operand in a set is contained in the image of
     that set, using the ` Fn ` abbreviation.  (Contributed by Stefan O'Rear,
     10-Mar-2015.) $)
  fnfvima $p |- ( ( F Fn A /\ S C_ A /\ X e. S ) -> ( F ` X ) e. ( F " S ) ) $=
    ( wfn wss wcel w3a wfun cdm wa cima fnfun 3ad2ant1 simp2 wceq fndm sseqtr4d
    cfv jca simp3 funfvima2 sylc ) CAEZBAFZDBGZHZCIZBCJZFZKUFDCSCBLGUGUHUJUDUEU
    HUFACMNUGBAUIUDUEUFOUDUEUIAPUFACQNRTUDUEUFUABDCUBUC $.
    $( [10-Mar-2015] $)

  ${
    $d ph y $.  $d ps x $.  $d F x y $.  $d B x y $.  $d A x y $.
    rexima.x $e |- ( x = ( F ` y ) -> ( ph <-> ps ) ) $.
    $( Existential quantification under an image in terms of the base set.
       (Contributed by Stefan O'Rear, 21-Jan-2015.) $)
    rexima $p |- ( ( F Fn A /\ B C_ A ) ->
        ( E. x e. ( F " B ) ph <-> E. y e. B ps ) ) $=
      ( wfn wss wa cv cfv cima fvex wcel wceq wrex fvelimab eqcom rexbii syl6bb
      wb adantl rexxfr2d ) GEIFEJKZABCDDLZGMZGFNZFUGGOUFCLZUIPUHUJQZDFRUJUHQZDF
      RDEFUJGSUKULDFUHUJTUAUBULABUCUFHUDUE $.
      $( [21-Jan-2015] $)

    $( Universal quantification under an image in terms of the base set.
       (Contributed by Stefan O'Rear, 21-Jan-2015.) $)
    ralima $p |- ( ( F Fn A /\ B C_ A ) ->
        ( A. x e. ( F " B ) ph <-> A. y e. B ps ) ) $=
      ( wfn wss wa cv cfv cima fvex wcel wceq wrex fvelimab eqcom rexbii syl6bb
      wb adantl ralxfr2d ) GEIFEJKZABCDDLZGMZGFNZFUGGOUFCLZUIPUHUJQZDFRUJUHQZDF
      RDEFUJGSUKULDFUHUJTUAUBULABUCUFHUDUE $.
      $( [21-Jan-2015] $) $( [2-Sep-2009] $)
  $}

  ${
    $d x y F $.
    $( Upper bound for the class of values of a class. $)
    fvclss $p |- { y | E. x y = ( F ` x ) } C_ ( ran F u. { (/) } ) $=
      ( cv cfv wceq wex cab crn wcel c0 csn wo cun wn wne eqcom tz6.12i syl6ibr
      wbr syl5bi eximdv vex elrn com12 necon1bd elsn orrd ss2abi df-un sseqtr4i
      ) BDZADZCEZFZAGZBHULCIZJZULKLZJZMZBHUQUSNUPVABUPURUTUPUROULKFUTUPURULKULK
      PZUPURVBUPUMULCTZAGURVBUOVCAUOUNULFVBVCULUNQUMULCRUAUBAULCBUCUDSUEUFBKUGS
      UHUIBUQUSUJUK $.
      $( [9-Nov-1995] $)
  $}

  ${
    $d x y F $.
    fvclex.1 $e |- F e. _V $.
    $( Existence of the class of values of a set. $)
    fvclex $p |- { y | E. x y = ( F ` x ) } e. _V $=
      ( cv cfv wceq wex cab crn c0 csn cun rnex p0ex unex fvclss ssexi ) BEAECF
      GAHBICJZKLZMSTCDNOPABCQR $.
      $( [9-Nov-1995] $)
  $}

  ${
    $d x y z w F $.  $d x y A $.
    fvresex.1 $e |- A e. _V $.
    $( Existence of the class of values of a restricted class. $)
    fvresex $p |- { y | E. x y = ( ( F |` A ) ` x ) } e. _V $=
      ( vw vz cv cfv wceq copab cres wex cab cvv vex fvex fveq2 fvopab wcel
      fveqres ax-mp eqeq2i exbii abbii wfun funopabeq resfunexg fvclex eqeltrri
      mp2an ) BHZAHZFHGHZDIZJGFKZCLZIZJZAMZBNULUMDCLIZJZAMZBNOUTVCBUSVBAURVAULU
      MUPIUMDIZJURVAJGFUMUOVDAPUMDQUNUMDRSUMCUPDUAUBUCUDUEABUQUPUFCOTUQOTGFUOUG
      EUPCOUHUKUIUJ $.
      $( [14-Nov-1995] $)
  $}

  ${
    $d x y z w A $.  $d y z w B $.
    abrexex.1 $e |- A e. _V $.
    $( Lemma for ~ abrexex .  Shows the existence of a class of existentially
       restricted function values. $)
    abrexexlem1 $p |- { z | E. y e. A z = ( B ` y ) } e. _V $=
      ( cv cfv wceq wrex cab cres wex fvresex wcel wa df-rex fvres eqeq2d eximi
      biimpar sylbi ss2abi ssexi ) BFZAFZDGZHZACIZBJUDUEDCKGZHZALZBJABCDEMUHUKB
      UHUECNZUGOZALUKUGACPUMUJAULUJUGULUIUFUDUECDQRTSUAUBUC $.
      $( [22-Apr-2004] $)

    ${
      abrexexlem2.2 $e |- B e. _V $.
      $( Lemma for ~ abrexex .  Almost there, but still requires that ` B ` be
         a set. $)
      abrexexlem2 $p |- { y | E. x e. A y = B } e. _V $=
        ( vw vz cv wceq wrex cab copab cfv cvv wcel wa eqtri ax-17 hbfv opabbii
        biantrur fveq1i fvopab2 mp2an eqeq2i rexbii hbopab1 fveq2 eqeq2d cbvrex
        vex bitr3i abbii hbopab2 hbeleq hbrex eqeq1 rexbidv abrexexlem1 eqeltri
        hbeq cbvab ) BIZDJZACKZBLZGIZHIZVEABMZNZJZHCKZGLZOVGVDVKJZHCKZBLVNVFVPB
        VFVDAIZVJNZJZACKVPVSVEACVRDVDVRVQVQOPZVEQZABMZNZDVQVJWBVEWAABVTVEAULZUB
        UAUCVTDOPWCDJWDFABODOUDUERUFUGVSVOAHCVSHSAGGVDVKVHVDPASAGVIVJVEABGUHVHV
        IPZASTVBVQVIJVRVKVDVQVIVJUIUJUKUMUNVPVMBGVPGSVLBHCVICPBSBGVKBGVIVJVEABG
        UOWEBSTUPUQVDVHJVOVLHCVDVHVKURUSVCRHGCVJEUTVA $.
        $( [16-Oct-2003] $)
    $}

    $( Existence of a class abstraction of existentially restricted sets. ` x `
       is normally a free-variable parameter in the class expression
       substituted for ` B ` , which can be thought of as ` B ( x ) ` .  This
       simple-looking theorem is actually quite powerful and appears to involve
       the Axiom of Replacement in an intrinsic way, as can be seen by tracing
       back through the path ~ abrexexlem2 , ~ abrexexlem1 , ~ fvresex ,
       ~ resfunexg , and ~ funimaexg .  See also ~ abrexex2 . $)
    abrexex $p |- { y | E. x e. A y = B } e. _V $=
      ( vz cv wceq wrex cab cvv wcel crab class2set abrexexlem2 vex eleq1 mpbii
      wb wral ax-1 ralrimiv rabid2 sylibr eqeq2d syl ibi reximi ss2abi ssexi )
      BGZDHZACIZBJUKDKLZFDMZHZACIZBJABCUOEFDNOUMUQBULUPACULUPULUNULUPSULUKKLUNB
      PUKDKQRUNDUOUKUNUNFDTDUOHUNUNFDUNFGDLUAUBUNFDUCUDUEUFUGUHUIUJ $.
      $( [16-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d y z B $.
    $( Existence of a class abstraction of existentially restricted sets. ` x `
       is normally a free-variable parameter in ` B ` .  The antecedent assures
       us that ` A ` is a set. $)
    abrexexg $p |- ( A e. V -> { y | E. x e. A y = B } e. _V ) $=
      ( vz cv wceq wrex cab cvv wcel rexeq abbidv eleq1d vex abrexex vtoclg ) B
      GDHZAFGZIZBJZKLSACIZBJZKLFCETCHZUBUDKUEUAUCBSATCMNOABTDFPQR $.
      $( [3-Nov-2003] $)
  $}

  ${
    $d w y z B $.  $d w x y z A $.
    elabrex.1 $e |- B e. _V $.
    $( Elementhood in an image set.  (Contributed by Mario Carneiro,
       14-Jan-2014.) $)
    elabrex $p |- ( x e. A -> B e. { y | E. x e. A y = B } ) $=
      ( vz vw cv wcel csb wceq wrex cab wtru tru csbeq1a eqcoms a1i 2thd ax-17
      rcla4ev mpan2 eqeq1 elab sylibr hbcsb1 hbeq eqeq2d cbvrex abbii syl6eleqr
      rexbidv ) AHZCIZDBHZAFHZDJZKZFCLZBMZUODKZACLZBMUNDUQKZFCLZDUTIUNNVDOVCNFU
      MCUPUMKZVCNVCUMUPAUPDPZQNVEORSUAUBUSVDBDEVAURVCFCUODUQUCULUDUEVBUSBVAURAF
      CVAFTAGGUOUQGHZUOIATAGUPDVGUPIATUFUGUMUPKDUQUOVFUHUIUJUK $.
      $( [14-Jan-2014] $)
  $}

  ${
    $d A y z $.  $d B y z $.  $d C w $.  $d D y $.  $d w x y $.  $d w z y $.
    abrexco.1 $e |- B e. _V $.
    abrexco.2 $e |- ( y = B -> C = D ) $.
    $( Composition of two image maps ` C ( y ) ` and ` B ( w ) ` . $)
    abrexco $p |- { x | E. y e. { z | E. w e. A z = B } x = C } =
        { x | E. w e. A x = D } $=
      ( cv wceq wrex cab wa wex wcel df-rex vex eqeq1 rexbidv elab anbi1i exbii
      r19.41v bitr4i bitri rexcom4 eqeq2d ceqsexv rexbii 3bitr2i abbii ) AKZGLZ
      BCKZFLZDEMZCNZMZUNHLZDEMZAUTBKZFLZUOOZDEMZBPZVEBPZDEMVBUTVCUSQZUOOZBPVGUO
      BUSRVJVFBVJVDDEMZUOOVFVIVKUOURVKCVCBSUPVCLUQVDDEUPVCFTUAUBUCVDUODEUEUFUDU
      GVEDBEUHVHVADEUOVABFIVDGHUNJUIUJUKULUM $.
      $( [27-May-2013] $)
  $}

  ${
    $d x y A $.  $d y B $.
    $( The existence of an indexed union. ` x ` is normally a free-variable
       parameter in ` B ` . $)
    iunexg $p |- ( ( A e. V /\ A. x e. A B e. W ) -> U_ x e. A B e. _V ) $=
      ( vy wcel wral ciun wceq wrex cab cuni cvv dfiun2g adantl abrexexg uniexg
      wa cv syl adantr eqeltrd ) BDGZCEGABHZSABCIZFTCJABKFLZMZNUEUFUHJUDAFBCEOP
      UDUHNGZUEUDUGNGUIAFBCDQUGNRUAUBUC $.
      $( [23-Mar-2006] $)
  $}

  ${
    $d A x y z $.  $d V x y z $.  $d W x y z $.  $d ph z $.
    $( Existence of an existentially restricted class abstraction.
       (Contributed by Jeff Madsen, 2-Sep-2009.) $)
    abrexex2g $p |- ( ( A e. V /\ A. x e. A { y | ph } e. W )
                                  -> { y | E. x e. A ph } e. _V ) $=
      ( vz wcel cab wral wa wrex cv cvv wsbc ax-17 hbs1 hbrex wceq sbceq1a ciun
      rexbidv cbvab df-clab rexbii eqtr4i df-iun iunexg syl5eqelr syl5eqel
      abbii ) DEHACIZFHBDJKZABDLZCIZGMZULHZBDLZGIZNUOACUPOZBDLZGIUSUNVACGUNGPUT
      CBDBMDHCPACGQRCMUPSAUTBDACUPTUBUCURVAGUQUTBDAGCUDUEUKUFUMUSBDULUANBGDULUG
      BDULEFUHUIUJ $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d A x y v w z $.  $d ph v w z $.
    opabex3.1 $e |- A e. _V $.
    opabex3.2 $e |- ( x e. A -> { y | ph } e. _V ) $.
    $( Existence of an ordered pair abstraction.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    opabex3 $p |- { <. x , y >. | ( x e. A /\ ph ) } e. _V $=
      ( vz vv vw cv wcel wa cvv wex cop wceq an12 exbii bitri eqeq2d ciun copab
      csn cab cxp 19.42v elxp excom anbi1i vex opeq1 anbi1d ceqsexv ax-17 hbab1
      elsn hban opeq2 wsbc sbceq1a eqcoms df-clab syl6rbbr anbi12d cbvex 3bitri
      wb anbi2i 3bitr4ri wrex eliun df-rex elopab 3bitr4i eqriv wral snex xpexg
      sylancr rgen iunexg mp2an eqeltrri ) BDBJZUCZACUDZUEZUAZWDDKZALZBCUBZMGWH
      WKWIGJZWGKZLZBNZWLWDCJZOZPZWJLZCNZBNWLWHKZWLWKKWNWTBWIWRALZLZCNWIXBCNZLWT
      WNWIXBCUFWSXCCWRWIAQRWMXDWIWMWLHJZIJZOZPZXEWEKZXFWFKZLLZINHNZWLWDXFOZPZXJ
      LZINZXDHIWLWEWFUGXLXKHNZINXPXKHIUHXQXOIXQXEWDPZXHXJLZLZHNXOXKXTHXKXIXSLXT
      XHXIXJQXIXRXSHWDUPUISRXSXOHWDBUJXRXHXNXJXRXGXMWLXEWDXFUKTULUMSRSXOXBICXNX
      JCXNCUNACIUOUQXBIUNXFWPPZXNWRXJAYAXMWQWLXFWPWDURTYAAACXFUSZXJAYBVGWPXFACX
      FUTVAAICVBVCVDVEVFVHVIRXAWMBDVJWOBWLDWGVKWMBDVLSWJBCWLVMVNVODMKWGMKZBDVPW
      HMKEYCBDWIWEMKWFMKYCWDVQFWEWFMMVRVSVTBDWGMMWAWBWC $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d x A $.
    iunex.1 $e |- A e. _V $.
    iunex.2 $e |- B e. _V $.
    $( The existence of an indexed union. ` x ` is normally a free-variable
       parameter in the class expression substituted for ` B ` , which can be
       read informally as ` B ( x ) ` . $)
    iunex $p |- U_ x e. A B e. _V $=
      ( cvv wcel wral ciun rgenw iunexg mp2an ) BFGCFGZABHABCIFGDMABEJABCFFKL
      $.
      $( [13-Oct-2003] $)
  $}

  ${
    $d x y z A $.  $d y z B $.  $d y z C $.
    $( The image of an indexed union is the indexed union of the images.
       (Contributed by Mario Carneiro, 18-Jun-2014.) $)
    imaiun $p |- ( A " U_ x e. B C ) = U_ x e. B ( A " C ) $=
      ( vy vz ciun cima cv wcel cop wa wex wrex rexcom4 vex elima3 rexbii eliun
      anbi1i r19.41v bitr4i exbii 3bitr4ri 3bitr4i eqriv ) EBACDGZHZACBDHZGZFIZ
      UGJZUKEIZKBJZLZFMZUMUIJZACNZUMUHJUMUJJUKDJZUNLZFMZACNUTACNZFMURUPUTAFCOUQ
      VAACFUMBDEPZQRUOVBFUOUSACNZUNLVBULVDUNAUKCDSTUSUNACUAUBUCUDFUMBUGVCQAUMCU
      ISUEUF $.
      $( [18-Jun-2014] $)
  $}

  ${
    $d x y z A $.  $d x y z B $.
    $( The image of a union is the indexed union of the images.  Theorem 3K(a)
       of [Enderton] p. 50.  (The proof was shortened by Mario Carneiro,
       18-Jun-2014.) $)
    imauni $p |- ( A " U. B ) = U_ x e. B ( A " x ) $=
      ( cuni cima cv ciun uniiun imaeq2i imaiun eqtri ) BCDZEBACAFZGZEACBMEGLNB
      ACHIABCMJK $.
      $( [18-Jun-2014] $) $( [9-Aug-2004] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.
    $( The indexed union of a function's values is the union of its range.
       Compare Definition 5.4 of [Monk1] p. 50. $)
    fniunfv $p |- ( F Fn A -> U_ x e. A ( F ` x ) = U. ran F ) $=
      ( vy wfn crn cuni cv cfv wceq wrex cab ciun fnrnfv unieqd dfiun2 syl6reqr
      fvex ) CBEZCFZGDHAHZCIZJABKDLZGABUBMSTUCADBCNOADBUBUACRPQ $.
      $( [27-Sep-2004] $)

    $( The indexed union of a function's values is the union of its image under
       the index class.

       Note:  This theorem depends on the fact that our function value is the
       empty set outside of its domain.  If the antecedent is changed to
       ` F Fn A ` , the theorem can be proved without this dependency. $)
    funiunfv $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vy vz vw cv cfv ciun wcel wceq wa cuni fvex wrex wex wi c0 wn syl5bb
      wfun copab crn cima eqid fvopab4 iuneq2i wfn fnopab2 fniunfv mp1i syl5eqr
      fveq2 cab rnopab2 unieqi eluniab wbr eqcom ndmfv eqeq1 syl5ib con1d mpan9
      cdm n0i funbrfvb biimpd sylan2 expr pm2.43d funbrfv adantr impbid rexbidv
      pm5.32da exbidv eluni elima anbi2i exbii bitr2i syl6bb eqrdv syl5eq eqtrd
      vex ) CUAZABAGZCHZIZDGZBJEGZWLCHZKZLDEUBZUCZMZCBUDZMZWHWKABWIWPHZIZWRABXA
      WJDEWIWNWJBWPWLWICUMWPUEZWICNUFUGWPBUHXBWRKWHDEBWNWPWLCNXCUIABWPUJUKULWHW
      RWODBOZEUNZMZWTWQXEDEBWNUOUPWHFXFWTFGZXFJXGWMJZXDLZEPZWHXGWTJZXDEXGUQWHXJ
      XHWLWMCURZDBOZLZEPZXKWHXIXNEWHXHXDXMWHXHLZWOXLDBWOWNWMKZXPXLWMWNUSXPXQXLX
      PXQXLWHXHXQXQXLQZXHXQLWHWLCVEJZXRXHWMRKZSXQXSWMXGVFXQXSXTXSSWNRKXQXTWLCUT
      WNWMRVAVBVCVDWHXSLXQXLWLWMCVGVHVIVJVKWHXLXQQXHWLWMCVLVMVNTVOVPVQXKXHWMWSJ
      ZLZEPXOEXGWSVRYBXNEYAXMXHDWMCBEWGVSVTWAWBWCTWDWEWF $.
      $( [26-Mar-2006] $)
  $}

  ${
    $d x z A $.  $d y z F $.  $d x y $.
    funiunfvf.1 $e |- ( y e. F -> A. x y e. F ) $.
    $( The indexed union of a function's values is the union of its image under
       the index class.  This version of ~ funiunfv uses a bound-variable
       hypothesis in place of a distinct variable condition.  (Unnecessary
       distinct variable restrictions were removed by David Abernethy,
       15-Apr-2013.) $)
    funiunfvf $p |- ( Fun F -> U_ x e. A ( F ` x ) = U. ( F " A ) ) $=
      ( vz wfun cv ciun cima cuni wcel ax-17 hbfv fveq2 cbviun funiunfv syl5eqr
      cfv ) DGACAHZDSZIFCFHZDSZIDCJKFABCUCUAABUBDEBHZUBLAMNUDUALFMUBTDOPFCDQR
      $.
      $( [15-Apr-2013] $)  $( [26-Mar-2006] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x F $.
    $( Membership in the union of an image of a function. $)
    eluniima $p |- ( Fun F ->
                   ( B e. U. ( F " A ) <-> E. x e. A B e. ( F ` x ) ) ) $=
      ( cv cfv wcel wrex ciun wfun cima cuni eliun funiunfv eleq2d syl5rbbr ) C
      AEDFZGABHCABQIZGDJZCDBKLZGACBQMSRTCABDNOP $.
      $( [28-Sep-2006] $)

    $( Membership in the union of the range of a function. $)
    elunirn $p |- ( Fun F ->
                     ( A e. U. ran F <-> E. x e. dom F A e. ( F ` x ) ) ) $=
      ( crn cuni wcel cdm cima wfun cv cfv wrex imadmrn unieqi eluniima syl5bbr
      eleq2i ) BCDZEZFBCCGZHZEZFCIBAJCKFATLUBSBUARCMNQATBCOP $.
      $( [24-Sep-2006] $)
  $}

  ${
    $d x A $.  $d x I $.  $d x F $.
    $( Membership in a union of some function-defined family of sets.
       (Contributed by Stefan O'Rear, 30-Jan-2015.) $)
    fnunirn $p |- ( F Fn I -> ( A e. U. ran F <->
        E. x e. I A e. ( F ` x ) ) ) $=
      ( wfn crn cuni wcel cv cfv cdm wrex wfun fnfun elunirn fndm rexeqdv bitrd
      wb syl ) CDEZBCFGHZBAICJHZACKZLZUCADLUACMUBUESDCNABCOTUAUCAUDDDCPQR $.
      $( [30-Jan-2015] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( Membership in the union of the range of a function, proved directly.
       Unlike ~ elunirn , it doesn't appeal to ~ ndmfv (via ~ funiunfv ). $)
    elunirnALT $p |- ( Fun F -> ( A e. U. ran F <->
                E. x e. dom F A e. ( F ` x ) ) ) $=
      ( vy crn cuni wcel cv wa wex wfun cfv cdm wrex eluni wceq wfn funfn eleq2
      wb fvelrnb sylbi anbi2d r19.42v syl6bbr biimparc reximi syl6bi fvelrn a1d
      exlimdv ancld fvex eleq1 anbi12d cla4ev syl6 rexlimdva impbid syl5bb ) BC
      EZFGBDHZGZVBVAGZIZDJZCKZBAHZCLZGZACMZNZDBVAOVGVFVLVGVEVLDVGVEVCVIVBPZIZAV
      KNZVLVGVEVCVMAVKNZIVOVGVDVPVCVGCVKQVDVPTCRAVKVBCUAUBUCVCVMAVKUDUEVNVJAVKV
      MVJVCVIVBBSUFUGUHUKVGVJVFAVKVGVHVKGIZVJVJVIVAGZIZVFVQVJVRVQVRVJVHCUIUJULV
      EVSDVIVHCUMVBVIPVCVJVDVRVBVIBSVBVIVAUNUOUPUQURUSUT $.
      $( [24-Sep-2006] $)
  $}

  ${
    $d x y z A $.  $d z ph $.
    abrexex2.1 $e |- A e. _V $.
    abrexex2.2 $e |- { y | ph } e. _V $.
    $( Existence of an existentially restricted class abstraction. ` ph ` is
       normally has free-variable parameters ` x ` and ` y ` .  See also
       ~ abrexex . $)
    abrexex2 $p |- { y | E. x e. A ph } e. _V $=
      ( vz wrex cab wcel cvv wsbc ax-17 hbs1 hbrex wceq sbequ12 rexbidv cbvab
      cv df-clab rexbii abbii eqtr4i ciun df-iun iunex eqeltrri eqeltri ) ABDHZ
      CIZGTZACIZJZBDHZGIZKUKACULLZBDHZGIUPUJURCGUJGMUQCBDBTDJCMACGNOCTULPAUQBDA
      CGQRSUOURGUNUQBDAGCUAUBUCUDBDUMUEUPKBGDUMUFBDUMEFUGUHUI $.
      $( [12-Sep-2004] $)

    $( Existence of a class abstraction with an existentially quantified
       expression.  Both ` x ` and ` y ` can be free in ` ph ` . $)
    abexssex $p |- { y | E. x ( x C_ A /\ ph ) } e. _V $=
      ( cpw wrex cab cv wss wa wex cvv wcel df-rex elpw2 anbi1i exbii bitri
      abbii pwex abrexex2 eqeltrri ) ABDGZHZCIBJZDKZALZBMZCINUFUJCUFUGUEOZALZBM
      UJABUEPULUIBUKUHAUGDEQRSTUAABCUEDEUBFUCUD $.
      $( [29-Jul-2006] $)
  $}

  ${
    $d x y A $.
    abexex.1 $e |- A e. _V $.
    abexex.2 $e |- ( ph -> x e. A ) $.
    abexex.3 $e |- { y | ph } e. _V $.
    $( A condition where a class builder continues to exist after its wff is
       existentially quantified. $)
    abexex $p |- { y | E. x ph } e. _V $=
      ( wrex cab wex cvv cv wcel wa df-rex pm4.71ri exbii bitr4i abbii abrexex2
      eqeltrri ) ABDHZCIABJZCIKUBUCCUBBLDMZANZBJUCABDOAUEBAUDFPQRSABCDEGTUA $.
      $( [4-Mar-2007] $)
  $}

  ${
    $d x y z A $.  $d z B $.  $d x y z F $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43. $)
    dff13 $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vz cv wbr wal wa cfv wceq wi wral wb wcel vex breldm eleq2d syl5ib fndm
      wf1 wmo dff12 wfn ffn cdm anim12d pm4.71rd eqcom fnbrfvb bi2anan9 anandis
      syl5bb pm5.32da bitr4d imbi1d impexp syl6bb albidv 19.21v wex 19.23v fvex
      wf eqvinc imbi1i bitr4i imbi2i bitri 2albidv breq1 mo4 albii alcom 3bitri
      r2al 3bitr4g syl pm5.32i ) CDEUBCDEVEZAGZFGZEHZAUCZFIZJWAWBEKZBGZEKZLZWBW
      HLZMZBCNACNZJAFCDEUDWAWFWMWAECUEZWFWMOCDEUFWNWDWHWCEHZJZWKMZFIZBIZAIZWBCP
      ZWHCPZJZWLMZBIAIWFWMWNWRXDABWNWRXCWCWGLZWCWILZJZWKMZMZFIZXDWNWQXIFWNWQXCX
      GJZWKMXIWNWPXKWKWNWPXCWPJXKWNWPXCWNWDXAWOXBWDWBEUGZPWNXAWBWCEAQFQZRWNXLCW
      BCEUAZSTWOWHXLPWNXBWHWCEBQXMRWNXLCWHXNSTUHUIWNXCXGWPWNXAXBXGWPOWNXAJZXEWD
      WNXBJZXFWOXEWGWCLXOWDWCWGUJCWBWCEUKUNXFWIWCLXPWOWCWIUJCWHWCEUKUNULUMUOUPU
      QXCXGWKURUSUTXJXCXHFIZMXDXCXHFVAXQWLXCXQXGFVBZWKMWLXGWKFVCWJXRWKFWGWIWBEV
      DVFVGVHVIVJUSVKWFWQBIZAIZFIXSFIZAIWTWEXTFWDWOABWBWHWCEVLVMVNXSFAVOYAWSAWQ
      FBVOVNVPWLABCCVQVRVSVTVJ $.
      $( [29-Oct-1996] $)
  $}

  ${
    $d x y w v A $.  $d w v B $.  $d z w v F $.  $d x y z $.
    f1fvf.1 $e |- ( z e. F -> A. x z e. F ) $.
    f1fvf.2 $e |- ( z e. F -> A. y z e. F ) $.
    $( A one-to-one function in terms of function values.  Compare Theorem
       4.8(iv) of [Monk1] p. 43. $)
    dff13f $p |- ( F : A -1-1-> B <-> ( F : A --> B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( vw vv cv cfv wceq wi wral wa wcel ax-17 hbfv hbim wf1 dff13 hbeq eqeq2d
      fveq2 eqeq2 imbi12d cbvral ralbii hbral eqeq1d eqeq1 ralbidv bitri anbi2i
      wf ) DEFUADEFUPZIKZFLZJKZFLZMZURUTMZNZJDOZIDOZPUQAKZFLZBKZFLZMZVGVIMZNZBD
      OZADOZPIJDEFUBVFVOUQVFUSVJMZURVIMZNZBDOZIDOVOVEVSIDVDVRJBDVBVCBBCCUSVABCU
      RFHCKZURQZBRSBCUTFHVTUTQBRSUCVCBRTVPVQJVPJRVQJRTUTVIMZVBVPVCVQWBVAVJUSUTV
      IFUEUDUTVIURUFUGUHUIVSVNIADVRABDVIDQARVPVQAACCUSVJACURFGWAARSACVIFGVTVIQA
      RSUCVQARTUJVNIRURVGMZVRVMBDWCVPVKVQVLWCUSVHVJURVGFUEUKURVGVIULUGUMUHUNUOU
      N $.
      $( [31-Jul-2003] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y F $.
    $( Equality of function values for a one-to-one function. $)
    f1fveq $p |- ( ( F : A -1-1-> B /\ ( C e. A /\ D e. A ) ) ->
                 ( ( F ` C ) = ( F ` D ) <-> C = D ) ) $=
      ( vx vy wf1 wcel wa cfv wceq wi cv fveq2 eqeq1d eqeq1 imbi12d imbi2d wral
      eqeq2d eqeq2 wf dff13 simprbi ra42 syl com12 vtocl2ga impcom impbid1 ) AB
      EHZCAIDAIJZJCEKZDEKZLZCDLZUMULUPUQMZULFNZEKZGNZEKZLZUSVALZMZMULUNVBLZCVAL
      ZMZMULURMFGCDAAUSCLZVEVHULVIVCVFVDVGVIUTUNVBUSCEOPUSCVAQRSVADLZVHURULVJVF
      UPVGUQVJVBUOUNVADEOUAVADCUBRSULUSAIVAAIJZVEULVEGATFATZVKVEMULABEUCVLFGABE
      UDUEVEFGAAUFUGUHUIUJCDEOUK $.
      $( [11-Feb-1997] $)
  $}

  ${
    $d F z $.  $d A z $.  $d Y z $.  $d X z $.  $d B z $.
    $( Membership in the image of a 1-1 map.  (Contributed by Jeff Madsen,
       2-Sep-2009.) $)
    f1elima $p |- ( ( F : A -1-1-> B /\ X e. A /\ Y C_ A )
                                -> ( ( F ` X ) e. ( F " Y ) <-> X e. Y ) ) $=
      ( vz wf1 wcel wss w3a cfv cima cv wceq wrex wb wfn wi wa anassrs fvelimab
      f1fn sylan 3adant2 ssel impac f1fveq ancom2s biimpd biimpcd sylan9 anasss
      eleq1 sylan2 rexlimdva 3impa fveq2 eqeq1d rcla4ev mpan2 impbid1 bitrd
      eqid ) ABCGZDAHZEAIZJZDCKZCELHZFMZCKZVHNZFEOZDEHZVDVFVIVMPZVEVDCAQVFVOABC
      UBFAEVHCUAUCUDVGVMVNVDVEVFVMVNRVDVESZVFSVLVNFEVPVFVJEHZVLVNRZVFVQSVPVJAHZ
      VQSVRVFVQVSEAVJUEUFVPVSVQVRVPVSSVLVJDNZVQVNVDVEVSVLVTRVDVEVSSSVLVTVDVSVEV
      LVTPABVJDCUGUHUITVTVQVNVJDEUMUJUKULUNTUOUPVNVHVHNZVMVHVCVLWAFDEVTVKVHVHVJ
      DCUQURUSUTVAVB $.
      $( [2-Sep-2009] $)
  $}

  ${
    $d F a b $.  $d A a b $.  $d B a b $.  $d C a b $.  $d D a b $.
    $( Taking images under a one-to-one function preserves subsets.
       (Contributed by Stefan O'Rear, 30-Oct-2014.) $)
    f1imass $p |- ( ( F : A -1-1-> B /\ ( C C_ A /\ D C_ A ) ) ->
      ( ( F " C ) C_ ( F " D ) <-> C C_ D ) ) $=
      ( va wf1 wss wa cima cv wcel wi simplrl sseld wb 3expa f1elima syl3anc ex
      simplr simplll simpr simp1rl simp1rr 3imtr3d pm2.43d ssrdv imass2 impbid1
      cfv syld ) ABEGZCAHZDAHZIZIZECJZEDJZHZCDHZUQUTVAUQUTIZFCDVBFKZCLZVCDLZVBV
      DVCALZVDVEMZVBCAVCUMUNUOUTNOVBVFVGVBVFIZVCEUKZURLZVIUSLZVDVEVHURUSVIUQUTV
      FUAOVHUMVFUNVJVDPUMUPUTVFUBZVBVFUCZUQUTVFUNUNUOUMUTVFUDQABEVCCRSVHUMVFUOV
      KVEPVLVMUQUTVFUOUNUOUMUTVFUEQABEVCDRSUFTULUGUHTCDEUIUJ $.
      $( [30-Oct-2014] $)

    $( Taking images under a one-to-one function preserves equality.
       (Contributed by Stefan O'Rear, 30-Oct-2014.) $)
    f1imaeq $p |- ( ( F : A -1-1-> B /\ ( C C_ A /\ D C_ A ) ) ->
      ( ( F " C ) = ( F " D ) <-> C = D ) ) $=
      ( wf1 wss wa cima wceq f1imass wb ancom2s anbi12d eqss 3bitr4g ) ABEFZCAG
      ZDAGZHHZECIZEDIZGZUBUAGZHCDGZDCGZHUAUBJCDJTUCUEUDUFABCDEKQSRUDUFLABDCEKMN
      UAUBOCDOP $.
      $( [30-Oct-2014] $)

    $( Taking images under a one-to-one function preserves proper subsets.
       (Contributed by Stefan O'Rear, 30-Oct-2014.) $)
    f1imapss $p |- ( ( F : A -1-1-> B /\ ( C C_ A /\ D C_ A ) ) ->
      ( ( F " C ) C. ( F " D ) <-> C C. D ) ) $=
      ( wf1 wss wa cima wceq wpss f1imass f1imaeq notbid anbi12d dfpss2 3bitr4g
      wn ) ABEFCAGDAGHHZECIZEDIZGZTUAJZRZHCDGZCDJZRZHTUAKCDKSUBUEUDUGABCDELSUCU
      FABCDEMNOTUAPCDPQ $.
      $( [30-Oct-2014] $)
  $}

  ${
    $d x y A $.  $d x y F $.
    $( A one-to-one onto function in terms of function values. $)
    dff1o6 $p |- ( F : A -1-1-onto-> B <-> ( F Fn A /\ ran F = B /\
             A. x e. A A. y e. A ( ( F ` x ) = ( F ` y ) -> x = y ) ) ) $=
      ( wf1o wf1 wfo wa wf cv cfv wceq wi wral wfn crn w3a df-f1o dff13 anbi12i
      df-fo df-3an wss eqimss anim2i df-f sylibr pm4.71ri anbi1i 3bitrri 3bitri
      an32 ) CDEFCDEGZCDEHZICDEJZAKZELBKZELMUQURMNBCOACOZIZECPZEQZDMZIZIZVAVCUS
      RZCDESUNUTUOVDABCDETCDEUBUAVFVDUSIUPVDIZUSIVEVAVCUSUCVDVGUSVDUPVDVAVBDUDZ
      IUPVCVHVAVBDUEUFCDEUGUHUIUJUPVDUSUMUKUL $.
      $( [29-Mar-2008] $)
  $}

  $( The converse value of the value of a one-to-one onto function. $)
  f1ocnvfv1 $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                 ( `' F ` ( F ` C ) ) = C ) $=
    ( wf1o wcel wa ccnv ccom cfv cid cres wceq f1ococnv1 fveq1d adantr wf fvco3
    f1of sylan fvresi adantl 3eqtr3d ) ABDEZCAFZGCDHZDIZJZCKALZJZCDJUFJZCUDUHUJ
    MUEUDCUGUIABDNOPUDABDQUEUHUKMABDSABCUFDRTUEUJCMUDACUAUBUC $.
    $( [20-May-2004] $)

  $( The value of the converse value of a one-to-one onto function. $)
  f1ocnvfv2 $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                 ( F ` ( `' F ` C ) ) = C ) $=
    ( wf1o wcel ccnv ccom cfv cid cres wceq f1ococnv2 fveq1d adantr f1ocnv f1of
    wa wf syl fvco3 sylan fvresi adantl 3eqtr3d ) ABDEZCBFZRCDDGZHZIZCJBKZIZCUH
    IDIZCUFUJULLUGUFCUIUKABDMNOUFBAUHSZUGUJUMLUFBAUHEUNABDPBAUHQTBACDUHUAUBUGUL
    CLUFBCUCUDUE $.
    $( [20-May-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse.  (Contributed by Raph Levien, 10-Apr-2004.) $)
  f1ocnvfv $p |- ( ( F : A -1-1-onto-> B /\ C e. A ) ->
                  ( ( F ` C ) = D -> ( `' F ` D ) = C ) ) $=
    ( cfv wceq ccnv wf1o wcel wa fveq2 eqcoms f1ocnvfv1 eqeq2d syl5ib ) CEFZDGD
    EHZFZQRFZGZABEICAJKZSCGUADQDQRLMUBTCSABCENOP $.
    $( [10-Apr-2004] $)

  $( Relationship between the value of a one-to-one onto function and the value
     of its converse. $)
  f1ocnvfvb $p |- ( ( F : A -1-1-onto-> B /\ C e. A /\ D e. B ) ->
                  ( ( F ` C ) = D <-> ( `' F ` D ) = C ) ) $=
    ( wf1o wcel w3a cfv wceq ccnv wi f1ocnvfv 3adant3 wa fveq2 eqcoms f1ocnvfv2
    eqeq2d syl5ib 3adant2 impbid ) ABEFZCAGZDBGZHCEIZDJZDEKIZCJZUCUDUGUILUEABCD
    EMNUCUEUIUGLUDUIUFUHEIZJZUCUEOZUGUKCUHCUHEPQULUJDUFABDERSTUAUB $.
    $( [9-Aug-2006] $) $( [20-May-2004] $)

  ${
    $d x A $.  $d x B $.  $d x C $.  $d x F $.
    $( There is one domain element for each value of a one-to-one onto
       function. $)
    f1ofveu $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                  E! x e. A ( F ` x ) = C ) $=
      ( wf1o wcel wa cv cfv wceq wreu cop ccnv wf f1ocnv f1of syl wb wfn 3com23
      feu sylan f1ocnvfvb dff1o4 simprbi fnopfvb 3adant3 syl3an1 bitrd reubidva
      w3a 3expa mpbird ) BCEFZDCGZHZAIZEJDKZABLDURMENZGZABLZUOCBUTOZUPVBUOCBUTF
      VCBCEPCBUTQRACBDUTUBUCUQUSVAABUOUPURBGZUSVASUOUPVDULUSDUTJURKZVAUOVDUPUSV
      ESBCURDEUDUAUOUTCTZUPVDVEVASZUOEBTVFBCEUEUFVFUPVGVDCDURUTUGUHUIUJUMUKUN
      $.
      $( [26-May-2006] $)

    $( Value of the converse of a one-to-one onto function. $)
    f1ocnvfv3 $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                  ( `' F ` C ) = U. { x e. A | ( F ` x ) = C } ) $=
      ( wf1o wcel wa ccnv cfv wceq cv crab cuni f1ocnvfv2 wreu wb f1ocnv f1of
      wf ffvelrn sylan f1ofveu fveq2 eqeq1d reuuni2 eqcom syl6bb syl2anc mpbid
      syl ) BCEFZDCGZHZDEIZJZEJZDKZUPALZEJZDKZABMNZKZBCDEOUNUPBGZVAABPZURVCQULC
      BUOTZUMVDULCBUOFVFBCERCBUOSUKCBDUOUAUBABCDEUCVDVEHURVBUPKVCVAURABUPUSUPKU
      TUQDUSUPEUDUEUFVBUPUGUHUIUJ $.
      $( [26-May-2006] $)
  $}

  $( The value of the converse of a one-to-one onto function belongs to its
     domain. $)
  f1ocnvdm $p |- ( ( F : A -1-1-onto-> B /\ C e. B ) ->
                    ( `' F ` C ) e. A ) $=
    ( wf1o ccnv wf wcel cfv f1ocnv f1of syl ffvelrn sylan ) ABDEZBADFZGZCBHCPIA
    HOBAPEQABDJBAPKLBACPMN $.
    $( [26-May-2006] $)

  ${
    $d A x y $.  $d B x y $.  $d F x y $.  $d R x y $.
    $( An application is injective if a retraction exists.  Bourbaki E.II.18
       prop. 8.  (Contributed by FL, 11-Nov-2011.)  (Revised by Mario Carneiro,
       27-Dec-2014.) $)
    fcof1 $p |- ( ( F : A --> B /\ ( R o. F ) = ( _I |` A ) )
         -> F : A -1-1-> B ) $=
      ( vx vy wf ccom wceq wa cfv wral wcel fvco3 syl2anc fveq1d 3eqtr3d fvresi
      cv syl cid cres wi wf1 simpl simprr fveq2d simpll simprll simprlr 3eqtr4d
      simplr expr ralrimivva dff13 sylanbrc ) ABDGZCDHZUAAUBZIZJZUQESZDKZFSZDKZ
      IZVBVDIZUCZFALEALABDUDUQUTUEVAVHEFAAVAVBAMZVDAMZJZVFVGVAVKVFJZJZVBUSKZVDU
      SKZVBVDVMVBURKZVDURKZVNVOVMVCCKZVECKZVPVQVMVCVECVAVKVFUFUGVMUQVIVPVRIUQUT
      VLUHZVAVIVJVFUIZABVBCDNOVMUQVJVQVSIVTVAVIVJVFUJZABVDCDNOUKVMVBURUSUQUTVLU
      LZPVMVDURUSWCPQVMVIVNVBIWAAVBRTVMVJVOVDIWBAVDRTQUMUNEFABDUOUP $.
      $( [27-Dec-2014] $) $( [11-Nov-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d F x y $.  $d S x y $.
    $( An application is surjective if a section exists.  Bourbaki E.II.18
       prop. 8.  (Contributed by FL, 17-Nov-2011.)  (The proof was shortened by
       Mario Carneiro, 27-Dec-2014.) $)
    fcofo $p |- ( ( F : A --> B /\ S : B --> A /\ ( F o. S ) = ( _I |` B ) )
         -> F : A -onto-> B ) $=
      ( vy vx wf ccom cid cres wceq w3a cv cfv wrex wral wfo simp1 wcel wa
      ffvelrn 3ad2antl2 simpl3 fveq1d simp2 fvco3 fvresi adantl 3eqtr3rd eqeq2d
      sylan fveq2 rcla4ev syl2anc ralrimiva dffo3 sylanbrc ) ABDGZBACGZDCHZIBJZ
      KZLZUREMZFMZDNZKZFAOZEBPABDQURUSVBRVCVHEBVCVDBSZTZVDCNZASZVDVKDNZKZVHUSUR
      VIVLVBBAVDCUAUBVJVDUTNZVDVANZVMVDVJVDUTVAURUSVBVIUCUDVCUSVIVOVMKURUSVBUEB
      AVDDCUFUKVIVPVDKVCBVDUGUHUIVGVNFVKAVEVKKVFVMVDVEVKDULUJUMUNUOFEABDUPUQ $.
      $( [27-Dec-2014] $) $( [17-Nov-2011] $)
  $}

  ${
    $d x y A $.  $d y B $.  $d x y F $.  $d y ph $.  $d x ps $.
    cbvfo.1 $e |- ( ( F ` x ) = y -> ( ph <-> ps ) ) $.
    $( Change bound variable between domain and range of function.  (The proof
       was shortened by Mario Carneiro, 21-Mar-2015.) $)
    cbvfo $p |- ( F : A -onto-> B -> ( A. x e. A ph <-> A. y e. B ps ) ) $=
      ( wfo crn wral wfn wb fofn cv cfv wceq bicomd eqcoms ralrn raleqdv bitr3d
      syl forn ) EFGIZBDGJZKZACEKZBDFKUEGELUGUHMEFGNBADCEGBAMCOGPZDOZUIUJQABHRS
      TUCUEBDUFFEFGUDUAUB $.
      $( [21-Mar-2015] $) $( [23-Feb-1997] $)

    $( Change bound variable between domain and range of function. $)
    cbvexfo $p |- ( F : A -onto-> B -> ( E. x e. A ph <-> E. y e. B ps ) ) $=
      ( wfo wn wral wrex cv cfv wceq notbid cbvfo dfrex2 3bitr4g ) EFGIZAJZCEKZ
      JBJZDFKZJACELBDFLTUBUDUAUCCDEFGCMGNDMOABHPQPACERBDFRS $.
      $( [23-Feb-1997] $)
  $}

  ${
    $d A x $.  $d B x $.  $d C x $.  $d F x $.  $d H x $.  $d K x $.
    $( An injection is left-cancelable.  (Contributed by FL, 2-Aug-2009.)
       (Revised by Mario Carneiro, 21-Mar-2015.) $)
    cocan1 $p |- ( ( F : B -1-1-> C /\ H : A --> B /\ K : A --> B ) ->
      ( ( F o. H ) = ( F o. K ) <-> H = K ) ) $=
      ( vx wf ccom cfv wceq wral wcel fvco3 3ad2antl2 wb wfn ffn syl syl2anc cv
      wf1 wa 3ad2antl3 eqeq12d simpl1 ffvelrn f1fveq syl12anc ralbidva 3ad2ant1
      w3a bitrd f1f simp2 fnfco simp3 eqfnfv2 3bitr4d ) BCDUBZABEHZABFHZULZGUAZ
      DEIZJZVDDFIZJZKZGALZVDEJZVDFJZKZGALZVEVGKZEFKZVCVIVMGAVCVDAMZUCZVIVKDJZVL
      DJZKZVMVRVFVSVHVTVAUTVQVFVSKVBABVDDENOVBUTVQVHVTKVAABVDDFNUDUEVRUTVKBMZVL
      BMZWAVMPUTVAVBVQUFVAUTVQWBVBABVDEUGOVBUTVQWCVAABVDFUGUDBCVKVLDUHUIUMUJVCV
      EAQZVGAQZVOVJPVCDBQZVAWDVCBCDHZWFUTVAWGVBBCDUNUKBCDRSZUTVAVBUOZBADEUPTVCW
      FVBWEWHUTVAVBUQZBADFUPTGAVEVGURTVCEAQZFAQZVPVNPVCVAWKWIABERSVCVBWLWJABFRS
      GAEFURTUS $.
      $( [21-Mar-2015] $) $( [2-Aug-2009] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y F $.  $d x y H $.  $d x y K $.
    $( A surjection is right-cancelable.  (Contributed by FL, 21-Nov-2011.)
       (The proof was shortened by Mario Carneiro, 21-Mar-2015.) $)
    cocan2 $p |- ( ( F : A -onto-> B /\ H Fn B /\ K Fn B ) ->
      ( ( H o. F ) = ( K o. F ) <-> H = K ) ) $=
      ( vy vx wfn cv ccom cfv wceq wral 3ad2ant1 fvco3 sylan eqeq12d wb syl2anc
      fveq2 wfo w3a wcel wa wf ralbidva cbvfo bitrd simp2 fnfco eqfnfv2 3bitr4d
      fof simp3 ) ABCUAZDBHZEBHZUBZFIZDCJZKZUSECJZKZLZFAMZGIZDKZVFEKZLZGBMZUTVB
      LZDELZURVEUSCKZDKZVMEKZLZFAMZVJURVDVPFAURUSAUCZUDVAVNVCVOURABCUEZVRVAVNLU
      OUPVSUQABCUMNZABUSDCOPURVSVRVCVOLVTABUSECOPQUFUOUPVQVJRUQVPVIFGABCVMVFLVN
      VGVOVHVMVFDTVMVFETQUGNUHURUTAHZVBAHZVKVERURUPVSWAUOUPUQUIZVTBADCUJSURUQVS
      WBUOUPUQUNZVTBAECUJSFAUTVBUKSURUPUQVLVJRWCWDGBDEUKSUL $.
      $( [21-Mar-2015] $) $( [21-Nov-2011] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d F x y $.  $d S x y $.
    $( Show that two functions are inverse to each other by computing their
       compositions.  (Contributed by Mario Carneiro, 21-Mar-2015.) $)
    fcof1o $p |- ( ( ( F : A --> B /\ G : B --> A ) /\
      ( ( F o. G ) = ( _I |` B ) /\ ( G o. F ) = ( _I |` A ) ) ) ->
      ( F : A -1-1-onto-> B /\ `' F = G ) ) $=
      ( wf ccom cid cres wceq wf1o ccnv wf1 wfo fcof1 ad2ant2rl fcofo 3syl f1of
      wa syl 3expa adantrr df-f1o sylanbrc simprl wb f1ocnv f1of1 simpll simplr
      fco syl2anc f1oi cocan1 syl3anc mpbird coass f1ococnv1 coeq1d fcoi2 eqtrd
      mp1i syl5eqr fcoi1 3eqtr3rd jca ) ABCEZBADEZSZCDFZGBHZIZDCFGAHZIZSZSZABCJ
      ZCKZDIVPABCLZABCMZVQVGVNVSVHVLABDCNOVIVLVTVNVGVHVLVTABDCPUAUBABCUCUDZVPVR
      VJFZVRVKFZDVRVPWBWCIZVLVIVLVNUEVPBAVRLZBBVJEZBBVKEZWDVLUFVPVQBAVRJZWEWAAB
      CUGZBAVRUHQVPVGVHWFVGVHVOUIVGVHVOUJZBABCDUKULBBVKJWGVPBUMBBVKRVBBBAVRVJVK
      UNUOUPVPWBVRCFZDFZDVRCDUQVPWLVMDFZDVPWKVMDVPVQWKVMIWAABCURTUSVPVHWMDIWJBA
      DUTTVAVCVPBAVREZWCVRIVPVQWHWNWAWIBAVRRQBAVRVDTVEVF $.
      $( [21-Mar-2015] $)
  $}

  ${
    $d F x y $.  $d G x y $.  $d A x y $.  $d B x y $.
    $( Condition for function equality in terms of vanishing of the composition
       with the converse. _EDITORIAL_:  Is there a relation-algebraic proof of
       this?  (Contributed by Stefan O'Rear, 12-Feb-2015.) $)
    foeqcnvco $p |- ( ( F : A -onto-> B /\ G : A -onto-> B ) ->
        ( F = G <-> ( F o. `' G ) = ( _I |` B ) ) ) $=
      ( vx vy wfo wa wceq ccnv ccom adantr wfn fofn ad2antlr cv wcel wbr sylibr
      sylan cid cres wi fococnv2 cnveq coeq2d eqeq1d syl5ibcom ad2antrr cfv wex
      cop adantl fnopfv fvex vex brcnv df-br bitri jca weq breq2 anbi12d cla4ev
      breq1 syl brco adantlr wb breq mpbid wf fof ffvelrn resieq syl2anc eqcomd
      eqfnfvd ex impbid ) ABCGZABDGZHZCDIZCDJZKZUABUBZIZWAWDWHUCWBWACCJZKZWGIWD
      WHABCUDWDWJWFWGWDWIWECCDUEUFUGUHLWCWHWDWCWHHZEACDWACAMZWBWHABCNZUIWBDAMZW
      AWHABDNZOWKEPZAQZHZWPDUJZWPCUJZWRWSWTWGRZWSWTIZWRWSWTWFRZXAWCWQXCWHWCWQHZ
      WSFPZWERZXEWTCRZHZFUKZXCXDWSWPWERZWPWTCRZHZXIXDXJXKXDWPWSULDQZXJWCWNWQXMW
      BWNWAWOUMAWPDUNTXJWPWSDRXMWSWPDWPDUOZEUPZUQWPWSDURUSSXDWPWTULCQZXKWCWLWQX
      PWAWLWBWMLAWPCUNTWPWTCURSUTXHXLFWPXOFEVAXFXJXGXKXEWPWSWEVBXEWPWTCVEVCVDVF
      FWSWTCWEXNWPCUOVGSVHWHXCXAVIWCWQWSWTWFWGVJOVKWCWQXAXBVIZWHXDWSBQZWTBQZXQW
      CABDVLZWQXRWBXTWAABDVMUMABWPDVNTWCABCVLZWQXSWAYAWBABCVMLABWPCVNTBWSWTVOVP
      VHVKVQVRVSVT $.
      $( [12-Feb-2015] $)

    $( Condition for function equality in terms of vanishing of the composition
       with the inverse.  (Contributed by Stefan O'Rear, 12-Feb-2015.) $)
    f1eqcocnv $p |- ( ( F : A -1-1-> B /\ G : A -1-1-> B ) ->
        ( F = G <-> ( `' F o. G ) = ( _I |` A ) ) ) $=
      ( vx vy wf1 wa wceq ccom wi adantr wfn f1fn adantl cv wcel wbr wb syl cid
      ccnv cres f1cocnv1 coeq2 eqeq1d syl5ibcom cfv eqid resieq mpbiri ad2antlr
      anidms breq mpbird wex cop wfun fnfun fndm eleq2d biimpar funopfvb bicomd
      cdm jca df-br eqcom 3bitr4g biimpd syl6bbr brcnv anim12d eximdv brco fvex
      vex eqvinc 3imtr4g adantlr mpd eqfnfvd eqcomd ex impbid ) ABCGZABDGZHZCDI
      ZCUBZDJZUAAUCZIZWFWIWMKWGWFWJCJZWLIWIWMABCUDWIWNWKWLCDWJUEUFUGLWHWMWIWHWM
      HZDCWOEADCWHDAMZWMWGWPWFABDNOZLWHCAMZWMWFWRWGABCNLZLWOEPZAQZHZWTWTWKRZWTD
      UHZWTCUHZIZXBXCWTWTWLRZXAXGWOXAXGXAXAHXGWTWTIWTUIAWTWTUJUKUMOWMXCXGSWHXAW
      TWTWKWLUNULUOWHXAXCXFKWMWHXAHZWTFPZDRZXIWTWJRZHZFUPXIXDIZXIXEIZHZFUPXCXFX
      HXLXOFXHXJXMXKXNXHXJXMXHWTXIUQZDQZXDXIIZXJXMXHXRXQXHDURZWTDVEZQZHXRXQSXHX
      SYAWHXSXAWHWPXSWQADUSTLWHYAXAWHXTAWTWHWPXTAIWQADUTTVAVBVFWTXIDVCTVDWTXIDV
      GXIXDVHVIVJXHXKXNXHWTXICRZXEXIIZXKXNXHYCYBXHYCXPCQZYBXHCURZWTCVEZQZHYCYDS
      XHYEYGWHYEXAWHWRYEWSACUSTLWHYGXAWHYFAWTWHWRYFAIWSACUTTVAVBVFWTXICVCTWTXIC
      VGVKVDXIWTCFVQEVQZVLXIXEVHVIVJVMVNFWTWTWJDYHYHVOFXDXEWTDVPVRVSVTWAWBWCWDW
      E $.
      $( [12-Feb-2015] $)
  $}

  ${
    fveqf1o.1 $e |- G = ( F o. ( ( _I |` ( A \ { C , ( `' F ` D ) } ) ) u.
      { <. C , ( `' F ` D ) >. , <. ( `' F ` D ) , C >. } ) ) $.
    $( Given a bijection ` F ` , produce another bijection ` G ` which
       additionally maps two specified points.  (Contributed by Mario Carneiro,
       30-May-2015.) $)
    fveqf1o $p |- ( ( F : A -1-1-onto-> B /\ C e. A /\ D e. B ) ->
      ( G : A -1-1-onto-> B /\ ( G ` C ) = D ) ) $=
      ( wf1o wcel cfv wceq cpr cop cun cin c0 a1i syl2anc wb syl ccnv cdif cres
      w3a cid ccom simp1 f1oi simp2 wf f1ocnv f1of 3syl simp3 ffvelrn f1oprswap
      incom disjdif eqtri f1oun uncom wss prssi undif sylib syl5eq f1oeq2 mpbid
      syl22anc f1oeq3 f1oco f1oeq1 ax-mp sylibr fveq1i fvco3 fnresi f1ofn fvun2
      wfn prid1g syl112anc wfun f1ofun opex prid1 funopfv ee10 fveq2d f1ocnvfv2
      eqtrd 3eqtrd jca ) ABEHZCAIZDBIZUDZABFHZCFJZDKWQABEUEACDEUAZJZLZUBZUCZCXA
      MZXACMZLZNZUFZHZWRWQWNAAXHHZXJWNWOWPUGZWQAXCXBNZXHHZXKWQXMXMXHHZXNWQXCXCX
      DHZXBXBXGHZXCXBOZPKZXSXOXPWQXCUHQWQWOXAAIZXQWNWOWPUIZWQBAWTUJZWPXTWQWNBAW
      THYBXLABEUKBAWTULUMWNWOWPUNZBADWTUORZCXAAAUPRZXSWQXRXBXCOPXCXBUQXBAURUSQZ
      YFXCXCXBXBXDXGUTVIWQXMAKZXOXNSWQXMXBXCNZAXCXBVAWQXBAVBZYHAKWQWOXTYIYAYDCX
      AAVCRXBAVDVEVFZXMAXMXHVGTVHWQYGXNXKSYJXMAAXHVJTVHZAABEXHVKRFXIKWRXJSGABFX
      IVLVMVNWQWSCXHJZEJZXAEJZDWQWSCXIJZYMCFXIGVOWQAAXHUJZWOYOYMKWQXKYPYKAAXHUL
      TYAAACEXHVPRVFWQYLXAEWQYLCXGJZXAWQXDXCVTZXGXBVTZXSCXBIZYLYQKYRWQXCVQQWQXQ
      YSYEXBXBXGVRTYFWQWOYTYACXAAWATXCXBXDXGCVSWBWQXGWCZXEXGIYQXAKWQXQUUAYEXBXB
      XGWDTXEXFCXAWEWFCXAXGWGWHWKWIWQWNWPYNDKXLYCABDEWJRWLWM $.
      $( [30-May-2015] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y H $.  $d x y G $.
    $d x y R $.  $d x y S $.  $d x y T $.
    $( Equality theorem for isomorphisms. $)
    isoeq1 $p |- ( H = G ->
          ( H Isom R , S ( A , B ) <-> G Isom R , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq1 fveq1 df-iso 2ralbidv
      breq12d bibi2d anbi12d 3bitr4g ) FEIZABFJZGKZHKZCLZUHFMZUIFMZDLZNZHAOGAOZ
      PABEJZUJUHEMZUIEMZDLZNZHAOGAOZPABCDFQABCDEQUFUGUPUOVAABFERUFUNUTGHAAUFUMU
      SUJUFUKUQULURDUHFESUIFESUBUCUAUDGHABCDFTGHABCDETUE $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq2 $p |- ( R = T ->
          ( H Isom R , S ( A , B ) <-> H Isom T , S ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi1d df-iso 2ralbidv
      anbi2d 3bitr4g ) CEIZABFJZGKZHKZCLZUFFMUGFMDLZNZHAOGAOZPUEUFUGELZUINZHAOG
      AOZPABCDFQABEDFQUDUKUNUEUDUJUMGHAAUDUHULUIUFUGCERSUAUBGHABCDFTGHABEDFTUC
      $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq3 $p |- ( S = T ->
          ( H Isom R , S ( A , B ) <-> H Isom R , T ( A , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso breq bibi2d df-iso 2ralbidv
      anbi2d 3bitr4g ) DEIZABFJZGKZHKZCLZUFFMZUGFMZDLZNZHAOGAOZPUEUHUIUJELZNZHA
      OGAOZPABCDFQABCEFQUDUMUPUEUDULUOGHAAUDUKUNUHUIUJDERSUAUBGHABCDFTGHABCEFTU
      C $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq4 $p |- ( A = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( C , B ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq2 raleq df-iso anbi12d
      raleqbi1dv 3bitr4g ) ACIZABFJZGKZHKZDLUFFMUGFMELNZHAOZGAOZPCBFJZUHHCOZGCO
      ZPABDEFQCBDEFQUDUEUKUJUMACBFRUIULGACUHHACSUBUAGHABDEFTGHCBDEFTUC $.
      $( [17-May-2004] $)

    $( Equality theorem for isomorphisms. $)
    isoeq5 $p |- ( B = C ->
          ( H Isom R , S ( A , B ) <-> H Isom R , S ( A , C ) ) ) $=
      ( vx vy wceq wf1o cv wbr cfv wb wral wa wiso f1oeq3 anbi1d df-iso 3bitr4g
      ) BCIZABFJZGKZHKZDLUDFMUEFMELNHAOGAOZPACFJZUFPABDEFQACDEFQUBUCUGUFBCAFRSG
      HABDEFTGHACDEFTUA $.
      $( [17-May-2004] $)
  $}


  ${
    $d y z w H $.  $d y z w R $.  $d y z w S $.  $d y z w A $.  $d y z w B $.
    $d x y z w $.
    hbiso.1 $e |- ( y e. H -> A. x y e. H ) $.
    hbiso.2 $e |- ( y e. R -> A. x y e. R ) $.
    hbiso.3 $e |- ( y e. S -> A. x y e. S ) $.
    hbiso.4 $e |- ( y e. A -> A. x y e. A ) $.
    hbiso.5 $e |- ( y e. B -> A. x y e. B ) $.
    $( Bound-variable hypothesis builder for an isomorphism.  (The proof was
       shortened by Andrew Salmon, 22-Oct-2011.) $)
    hbiso $p |- ( H Isom R , S ( A , B ) -> A. x H Isom R , S ( A , B ) ) $=
      ( vz vw cv wbr cfv wral hblem wcel wiso wf1o wb wa df-iso hbf1o hbbr hbfv
      ax-17 hbbi hbral hban hbxfrbi ) CDEFGUACDGUBZMOZNOZEPZUOGQZUPGQZFPZUCZNCR
      ZMCRZUDAMNCDEFGUEUNVCAABCDGHKLUFVBAMCABMCKSVAANCABNCKSUQUTAABUOUPEBOZUOTA
      UIZIVDUPTAUIZUGABURUSFABUOGHVEUHJABUPGHVFUHUGUJUKUKULUM $.
      $( [22-Oct-2011] $) $( [17-May-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $( An isomorphism is a one-to-one onto function. $)
    isof1o $p |- ( H Isom R , S ( A , B ) -> H : A -1-1-onto-> B ) $=
      ( vx vy wiso wf1o cv wbr cfv wb wral df-iso simplbi ) ABCDEHABEIFJZGJZCKQ
      ELRELDKMGANFANFGABCDEOP $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( An isomorphism connects binary relations via its function values. $)
    isorel $p |- ( ( H Isom R , S ( A , B ) /\ ( C e. A /\ D e. A ) ) ->
                 ( C R D <-> ( H ` C ) S ( H ` D ) ) ) $=
      ( vx vy wiso cv wbr cfv wb wral wcel wa wceq fveq2 bibi12d df-iso simprbi
      wf1o breq1 breq1d breq2 breq2d rcla42v mpan9 ) ABEFGJZHKZIKZELZUKGMZULGMZ
      FLZNZIAOHAOZCAPDAPQCDELZCGMZDGMZFLZNZUJABGUCURHIABEFGUAUBUQVCCULELZUTUOFL
      ZNHICDAAUKCRZUMVDUPVEUKCULEUDVFUNUTUOFUKCGSUETULDRZVDUSVEVBULDCEUFVGUOVAU
      TFULDGSUGTUHUI $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d w x y z A $.  $d w z B $.  $d w z C $.  $d w x y z F $.  $d w x y z R $.
    $d w x y z S $.
    $( Express the condition of isomorphism on two strict orders for a
       function's restriction.  (Contributed by Mario Carneiro,
       22-Jan-2015.) $)
    soisores $p |- ( ( ( R Or B /\ S Or C ) /\ ( F : B --> C /\ A C_ B ) ) ->
      ( ( F |` A ) Isom R , S ( A , ( F " A ) ) <->
        A. x e. A A. y e. A ( x R y -> ( F ` x ) S ( F ` y ) ) ) ) $=
      ( vz vw wa cv wbr cfv wi wral wcel wb wceq fveq2 wor wss cima cres isorel
      wiso fvres breqan12d adantl bitrd biimpd ralrimivva w3a wf1o wfn ad2antrl
      crn ffn simprr fnssres syl2anc 3adant3 df-ima eqcomi a1i eqeqan12d simprl
      wf wo wn simpl3 breq1 breq1d imbi12d breq2 breq2d rcla42va syl21anc con3d
      orim12d simpl1r simpl2l simpl2r sseldd ffvelrn sotrieq syl12anc syl3anbrc
      simpl1l 3imtr4d sylbid dff1o6 sotric impbid bitr4d df-iso sylanbrc 3expia
      impbid2 ) DFUAZEGUAZKZDEHVHZCDUBZKZKZCHCUCZFGHCUDZUFZALZBLZFMZXJHNZXKHNZG
      MZOZBCPACPZXIXPABCCXIXJCQZXKCQZKZKZXLXOYAXLXJXHNZXKXHNZGMZXOCXGXJXKFGXHUE
      XTYDXORXIXRXSYBXMYCXNGXJCHUGXKCHUGUHUIUJUKULXBXEXQXIXBXEXQUMZCXGXHUNZILZJ
      LZFMZYGXHNZYHXHNZGMZRZJCPICPXIYEXHCUOZXHUQZXGSZYJYKSZYGYHSZOZJCPICPYFXBXE
      YNXQXFHDUOZXDYNXCYTXBXDDEHURUPXBXCXDUSDCHUTVAVBYPYEXGYOHCVCVDVEYEYSIJCCYE
      YGCQZYHCQZKZKZYQYGHNZYHHNZSZYRUUCYQUUGRYEUUAUUBYJUUEYKUUFYGCHUGZYHCHUGZVF
      UIUUDUUEUUFGMZUUFUUEGMZVIZVJZYIYHYGFMZVIZVJZUUGYRUUDUUOUULUUDYIUUJUUNUUKU
      UDUUAUUBXQYIUUJOZYEUUAUUBVGZYEUUAUUBUSZXBXEXQUUCVKZXPUUQYGXKFMZUUEXNGMZOA
      BYGYHCCXJYGSZXLUVAXOUVBXJYGXKFVLUVCXMUUEXNGXJYGHTVMVNXKYHSZUVAYIUVBUUJXKY
      HYGFVOUVDXNUUFUUEGXKYHHTVPVNVQVRZUUDUUBUUAXQUUNUUKOZUUSUURUUTXPUVFYHXKFMZ
      UUFXNGMZOABYHYGCCXJYHSZXLUVGXOUVHXJYHXKFVLUVIXMUUFXNGXJYHHTVMVNXKYGSZUVGU
      UNUVHUUKXKYGYHFVOUVJXNUUEUUFGXKYGHTVPVNVQVRZVTVSUUDXAUUEEQZUUFEQZUUGUUMRW
      TXAXEXQUUCWAZUUDXCYGDQZUVLXCXDXBXQUUCWBZUUDCDYGXCXDXBXQUUCWCZUURWDZDEYGHW
      EVAZUUDXCYHDQZUVMUVPUUDCDYHUVQUUSWDZDEYHHWEVAZEUUEUUFGWFWGUUDWTUVOUVTYRUU
      PRWTXAXEXQUUCWIZUVRUWADYGYHFWFWGWJWKULIJCXGXHWLWHYEYMIJCCUUDYIUUJYLUUDYIU
      UJUVEUUDUUGUUKVIZVJZYRUUNVIZVJZUUJYIUUDUWFUWDUUDYRUUGUUNUUKYRUUGOUUDYGYHH
      TVEUVKVTVSUUDXAUVLUVMUUJUWERUVNUVSUWBEUUEUUFGWMWGUUDWTUVOUVTYIUWGRUWCUVRU
      WADYGYHFWMWGWJWNUUCYLUUJRYEUUAUUBYJUUEYKUUFGUUHUUIUHUIWOULIJCXGFGXHWPWQWR
      WS $.
      $( [22-Jan-2015] $)
  $}

  ${
    $d R x y a b $.  $d S x y a b $.  $d H x y a b $.  $d A x y a b $.
    $d B x y a b $.
    $( Infer isomorphism from one direction of an order proof for isomorphisms
       between strict orders.  (Contributed by Stefan O'Rear, 2-Nov-2014.) $)
    soisoi $p |- ( ( ( R Or A /\ S Po B ) /\ ( H : A -onto-> B /\
          A. x e. A A. y e. A ( x R y -> ( H ` x ) S ( H ` y ) ) ) ) ->
        H Isom R , S ( A , B ) ) $=
      ( va vb wa cv wbr cfv wi wral weq wcel wn fveq2 syl2anc wor wpo wf1o wiso
      wfo wb wf1 wf simprl fof syl wo simpll sotrieq con2bid sylan simprr breq1
      breq1d imbi12d breq2 breq2d rcla42va ancoms simpllr simplrl ffvelrn poirr
      wceq syl5ibrcom con2d syld ancom2s jaod sylbird con4d ralrimivva sylanbrc
      notbid dff13 df-f1o sotric po2nr imnan sylibr syl12anc impcon4bid df-iso
      ) CEUAZDFUBZJZCDGUEZAKZBKZELZWMGMZWNGMZFLZNZBCOACOZJZJZCDGUCZHKZIKZELZXDG
      MZXEGMZFLZUFZICOHCOCDEFGUDXBCDGUGZWLXCXBCDGUHZXGXHVIZHIPZNZICOHCOXKXBWLXL
      WKWLWTUIZCDGUJZUKXBXOHICCXBXDCQZXECQZJZJZXNXMYAXNRZXFXEXDELZULZXMRZXBWIXT
      YDYBUFWIWJXAUMZWIXTJZXNYDCXDXEEUNUOUPYAXFYEYCYAXFXIYEXBWTXTXFXINZWKWLWTUQ
      ZXTWTYHWSYHXDWNELZXGWQFLZNABXDXECCAHPZWOYJWRYKWMXDWNEURYLWPXGWQFWMXDGSUSU
      TBIPZYJXFYKXIWNXEXDEVAYMWQXHXGFWNXEGSVBUTVCVDUPZYAXMXIYAWJXHDQZXMXIRZNWIW
      JXAXTVEZYAXLXSYOYAWLXLWKWLWTXTVFXQUKZXBXRXSUQCDXEGVGTZWJYOJZYPXMXHXHFLZRZ
      DXHFVHZXMXIUUAXGXHXHFURVSVJTVKVLYAYCXHXGFLZYEXBWTXTYCUUDNZYIWTXSXRUUEXSXR
      JWTUUEWSUUEXEWNELZXHWQFLZNABXEXDCCAIPZWOUUFWRUUGWMXEWNEURUUHWPXHWQFWMXEGS
      USUTBHPZUUFYCUUGUUDWNXDXEEVAUUIWQXGXHFWNXDGSVBUTVCVDVMUPZYAXMUUDYAWJYOXMU
      UDRZNYQYSYTUUKXMUUBUUCXMUUDUUAXGXHXHFVAVSVJTVKVLVNVOVPVQHICDGVTVRXPCDGWAV
      RXBXJHICCYAXFXIYNYAXFRZXNYCULZYPXBWIXTUUMUULUFYFYGXFUUMCXDXEEWBUOUPYAXNYP
      YCYAWJYOXNYPNYQYSYTYPXNUUBUUCXNXIUUAXNXGXHXHFXDXEGSUSVSVJTYAYCUUDYPUUJYAW
      JYOXGDQZUUDYPNZYQYSYAXLXRUUNYRXBXRXSUICDXDGVGTWJYOUUNJJUUDXIJRUUODXHXGFWC
      UUDXIWDWEWFVLVNVOWGVQHICDEFGWHVR $.
      $( [2-Nov-2014] $)
  $}

  ${
    $d x y A $.  $d x y R $.
    $( Identity law for isomorphism.  Proposition 6.30(1) of [TakeutiZaring]
       p. 33. $)
    isoid $p |- ( _I |` A ) Isom R , R ( A , A ) $=
      ( vx vy cid cres wiso wf1o wbr cfv wral f1oi wcel fvresi breqan12d bicomd
      cv wb wa rgen2a df-iso mpbir2an ) AABBEAFZGAAUCHCQZDQZBIZUDUCJZUEUCJZBIZR
      ZDAKCAKALUJCDAUDAMZUEAMZSUIUFUKULUGUDUHUEBAUDNAUENOPTCDAABBUCUAUB $.
      $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w R $.  $d x y z w S $.
    $d x y z w H $.
    $( Converse law for isomorphism.  Proposition 6.30(2) of [TakeutiZaring]
       p. 33. $)
    isocnv $p |- ( H Isom R , S ( A , B ) -> `' H Isom S , R ( B , A ) ) $=
      ( vx vy vz vw wf1o cv wbr cfv wb wral wa wiso wcel wceq f1ocnvfv2 adantrr
      ccnv f1ocnv adantr adantrl breq12d adantlr wf syl ffvelrn anim12dan breq1
      f1of fveq2 breq1d bibi12d bicom syl6bb breq2 rcla42va sylan an32s sylanl1
      breq2d bitr3d ralrimivva jca df-iso 3imtr4i ) ABEJZFKZGKZCLZVKEMZVLEMZDLZ
      NZGAOFAOZPZBAEUBZJZHKZIKZDLZWBVTMZWCVTMZCLZNZIBOHBOZPABCDEQBADCVTQVSWAWIV
      JWAVRABEUCZUDVSWHHIBBVSWBBRZWCBRZPZPWEEMZWFEMZDLZWDWGVJWMWPWDNVRVJWMPWNWB
      WOWCDVJWKWNWBSWLABWBETUAVJWLWOWCSWKABWCETUEUFUGVJBAVTUHZVRWMWPWGNZVJWAWQW
      JBAVTUMUIWQWMVRWRWQWMPWEARZWFARZPVRWRWQWKWSWLWTBAWBVTUJBAWCVTUJUKVQWRWNVO
      DLZWEVLCLZNZFGWEWFAAVKWESZVQXBXANXCXDVMXBVPXAVKWEVLCULXDVNWNVODVKWEEUNUOU
      PXBXAUQURVLWFSZXAWPXBWGXEVOWOWNDVLWFEUNVDVLWFWECUSUPUTVAVBVCVEVFVGFGABCDE
      VHHIBADCVTVHVI $.
      $( [27-Apr-2004] $)

    $( Converse law for isomorphism.  (Contributed by Mario Carneiro,
       30-Jan-2014.) $)
    isocnv2 $p |- ( H Isom R , S ( A , B ) <->
                    H Isom `' R , `' S ( A , B ) ) $=
      ( vy vx wf1o cv wbr cfv wb wral wa ccnv wiso vex brcnv fvex df-iso ralcom
      bibi12i 2ralbii bitr4i anbi2i 3bitr4i ) ABEHZFIZGIZCJZUHEKZUIEKZDJZLZGAMF
      AMZNUGUIUHCOZJZULUKDOZJZLZFAMGAMZNABCDEPABUPUREPUOVAUGUOUNFAMGAMVAUNFGAAU
      AUTUNGFAAUQUJUSUMUIUHCGQFQRULUKDUIESUHESRUBUCUDUEFGABCDETGFABUPURETUF $.
      $( [30-Jan-2014] $)
  $}

  ${
    $d A x y $.  $d B x y $.  $d H x y $.  $d R x y $.  $d S x y $.
    $( An isomorphism from one well-order to another can be restricted on
       either well-order.  (Contributed by Mario Carneiro, 15-Jan-2013.) $)
    isores2 $p |- ( H Isom R , S ( A , B ) <->
                      H Isom R , ( S i^i ( B X. B ) ) ( A , B ) ) $=
      ( vx vy wf1o cv wbr cfv wb wral wa cxp wiso wcel ffvelrn ralbidva df-iso
      cin wf f1of adantrr adantrl brinxp syl2anc anassrs bibi2d pm5.32i 3bitr4i
      sylan ) ABEHZFIZGIZCJZUNEKZUOEKZDJZLZGAMZFAMZNUMUPUQURDBBOUAZJZLZGAMZFAMZ
      NABCDEPABCVCEPUMVBVGUMVAVFFAUMUNAQZNZUTVEGAVIUOAQZNUSVDUPUMVHVJUSVDLZUMAB
      EUBZVHVJNZVKABEUCVLVMNUQBQZURBQZVKVLVHVNVJABUNERUDVLVJVOVHABUOERUEUQURBBD
      UFUGULUHUISSUJFGABCDETFGABCVCETUK $.
      $( [15-Jan-2013] $)
  $}

  ${
    $( An isomorphism from one well-order to another can be restricted on
       either well-order.  (Contributed by Mario Carneiro, 15-Jan-2013.) $)
    isores1 $p |- ( H Isom R , S ( A , B ) <->
                      H Isom ( R i^i ( A X. A ) ) , S ( A , B ) ) $=
      ( wiso cxp cin ccnv isocnv isores2 sylib wf1o wb isof1o isoeq1 sylbi 3syl
      syl mpbid wrel f1orel wceq dfrel2 sylibr impbii ) ABCDEFZABCAAGHZDEFZUGAB
      UHDEIZIZFZUIUGBADUHUJFZULUGBADCUJFZUMABCDEJBADCUJKZLBADUHUJJSUGABEMZEUAZU
      LUINZABCDEOABEUBZUQUKEUCZUREUDZABUHDEUKPQRTUIABCDUKFZUGUIUNVBUIUMUNABUHDE
      JUOUEBADCUJJSUIUPUQVBUGNZABUHDEOUSUQUTVCVAABCDEUKPQRTUF $.
      $( [15-Jan-2013] $)
  $}

  ${
    $d H a b c $.  $d R a b c $.  $d S a b c $.  $d K a b c $.  $d A a b c $.
    $d B a b c $.  $d X a b c $.
    $( Induced isomorphism on a subset.  (Contributed by Stefan O'Rear,
       5-Nov-2014.) $)
    isores3 $p |- ( ( H Isom R , S ( A , B ) /\ K C_ A /\ X = ( H " K ) ) ->
        ( H |` K ) Isom R , S ( K , X ) ) $=
      ( va vb wiso wa wf1o cv wbr cfv wb wral ssralv wcel fvres cima wceq f1of1
      wss cres wf1 f1ores expcom syl5 adantr breqan12d adantll biimprd ralimdva
      wi bibi2d syld anim12d df-iso 3imtr4g impcom isoeq5 syl5ibrcom 3impia ) A
      BCDEJZFAUDZGEFUAZUBZFGCDEFUEZJZVEVFKVJVHFVGCDVIJZVFVEVKVFABELZHMZIMZCNZVM
      EOZVNEOZDNZPZIAQZHAQZKFVGVILZVOVMVIOZVNVIOZDNZPZIFQZHFQZKVEVKVFVLWBWAWHVL
      ABEUFZVFWBABEUCWIVFWBABFEUGUHUIVFWAVTHFQWHVTHFARVFVTWGHFVFVMFSZKZVTVSIFQZ
      WGVFVTWLUOWJVSIFARUJWKVSWFIFWKVNFSZKZWFVSWNWEVRVOWJWMWEVRPVFWJWMWCVPWDVQD
      VMFETVNFETUKULUPUMUNUQUNUQURHIABCDEUSHIFVGCDVIUSUTVAFGVGCDVIVBVCVD $.
      $( [5-Nov-2014] $)
  $}

  ${
    $d x y z w v u A $.  $d x y z w v u B $.  $d x y z w v u C $.
    $d x y z w v u R $.  $d x y z w v u S $.  $d x y z w v u T $.
    $d x y z w v u G $.  $d x y z w v u H $.
    $( Composition (transitive) law for isomorphism.  Proposition 6.30(3) of
       [TakeutiZaring] p. 33. $)
    isotr $p |- ( ( H Isom R , S ( A , B ) /\ G Isom S , T ( B , C ) ) ->
               ( G o. H ) Isom R , T ( A , C ) ) $=
      ( vz vw vv vu vx vy cv wbr cfv wb wral wa wf1o simpl anim12i ancoms f1oco
      ccom wiso syl wcel wi wf f1of ffvelrn ex anim12d adantr wceq breq1 breq1d
      fveq2 bibi12d breq2 breq2d rcla42v com12 adantl sylan9 imp impcom adantll
      adantlr ad2antrr fvco3 breqan12d anandis sylan 3bitr4d ralrimivva anbi12i
      jca df-iso 3imtr4i ) ABHUAZIOZJOZDPZWDHQZWEHQZEPZRZJASIASZTZBCGUAZKOZLOZE
      PZWNGQZWOGQZFPZRZLBSKBSZTZTZACGHUFZUAZMOZNOZDPZXFXDQZXGXDQZFPZRZNASMASZTA
      BDEHUGZBCEFGUGZTACDFXDUGXCXEXMXCWMWCTZXEXBWLXPXBWMWLWCWMXAUBWCWKUBUCUDABC
      GHUEUHXCXLMNAAXCXFAUIZXGAUIZTZTXFHQZXGHQZEPZXTGQZYAGQZFPZXHXKXCXSYBYERZWL
      XSXTBUIZYABUIZTZXBYFWCXSYIUJZWKWCABHUKZYJABHULZYKXQYGXRYHYKXQYGABXFHUMUNY
      KXRYHABXGHUMUNUOUHUPXAYIYFUJWMYIXAYFWTYFXTWOEPZYCWRFPZRKLXTYABBWNXTUQZWPY
      MWSYNWNXTWOEURYOWQYCWRFWNXTGUTUSVAWOYAUQZYMYBYNYEWOYAXTEVBYPWRYDYCFWOYAGU
      TVCVAVDVEVFVGVHWLXSXHYBRZXBWKXSYQWCXSWKYQWJYQXFWEDPZXTWHEPZRIJXFXGAAWDXFU
      QZWFYRWIYSWDXFWEDURYTWGXTWHEWDXFHUTUSVAWEXGUQZYRXHYSYBWEXGXFDVBUUAWHYAXTE
      WEXGHUTVCVAVDVIVJVKXCYKXSXKYERZWCYKWKXBYLVLYKXQXRUUBYKXQTYKXRTXIYCXJYDFAB
      XFGHVMABXGGHVMVNVOVPVQVRVTXNWLXOXBIJABDEHWAKLBCEFGWAVSMNACDFXDWAWB $.
      $( [26-Dec-2014] $) $( [27-Apr-2004] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y z w C $.  $d x y z w R $.
    $d x y z w S $.  $d x y z w T $.  $d x y z w G $.  $d x y z w H $.
    $( Composition (transitive) law for isomorphism.  Proposition 6.30(3) of
       [TakeutiZaring] p. 33.  This proof is shorter than ~ isotr in set.mm and
       uses fewer dummy variables, but it takes 240K vs. 207K for the web
       page. $)
    isotrALT $p |- ( ( H Isom R , S ( A , B ) /\ G Isom S , T ( B , C ) ) ->
               ( G o. H ) Isom R , T ( A , C ) ) $=
      ( vx vy vz vw cv wbr cfv wb wral wa ax-17 hban wf1o ccom wiso simpl f1oco
      anim12i ancoms hbra1 wcel hbral wi wf f1of ffvelrn ex anim12d adantr wceq
      syl breq1 fveq2 breq1d bibi12d breq2 breq2d rcla42v com12 adantl imp ra42
      sylan9 adantll adantlr ad2antrr fvco3 anandis sylan 3bitr4d exp32 ralrimd
      breqan12d ralrimi jca df-iso anbi12i 3imtr4i ) ABHUAZIMZJMZDNZWHHOZWIHOZE
      NZPZJAQZIAQZRZBCGUAZKMZLMZENZWSGOZWTGOZFNZPZLBQKBQZRZRZACGHUBZUAZWJWHXIOZ
      WIXIOZFNZPZJAQZIAQZRABDEHUCZBCEFGUCZRACDFXIUCXHXJXPXHWRWGRZXJXGWQXSXGWRWQ
      WGWRXFUDWGWPUDUFUGABCGHUEUSXHXOIAWQXGIWGWPIWGISWOIAUHTXGISTXHWHAUIZXNJAWQ
      XGJWGWPJWGJSWOJIAXTJSZWNJAUHUJTXGJSTYAXHXTWIAUIZXNXHXTYBRZRWMWKGOZWLGOZFN
      ZWJXMXHYCWMYFPZWQYCWKBUIZWLBUIZRZXGYGWGYCYJUKZWPWGABHULZYKABHUMZYLXTYHYBY
      IYLXTYHABWHHUNUOYLYBYIABWIHUNUOUPUSUQXFYJYGUKWRYJXFYGXEYGWKWTENZYDXCFNZPK
      LWKWLBBWSWKURZXAYNXDYOWSWKWTEUTYPXBYDXCFWSWKGVAVBVCWTWLURZYNWMYOYFWTWLWKE
      VDYQXCYEYDFWTWLGVAVEVCVFVGVHVKVIWQYCWNXGWPYCWNWGWPYCWNWNIJAAVJVIVLVMXHYLY
      CXMYFPZWGYLWPXGYMVNYLXTYBYRYLXTRYLYBRXKYDXLYEFABWHGHVOABWIGHVOWAVPVQVRVSV
      TWBWCXQWQXRXGIJABDEHWDKLBCEFGWDWEIJACDFXIWDWF $.
      $( [26-Dec-2014] $) $( [27-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y C $.  $d x y D $.
    $( Isomorphisms preserve minimal elements.  Note that ` ( ``' R " { D } ) `
       is Takeuti and Zaring's idiom for the initial segment
       ` { x | x R D } ` .  Proposition 6.31(1) of [TakeutiZaring] p. 33. $)
    isomin $p |- ( ( H Isom R , S ( A , B ) /\ ( C C_ A /\ D e. A ) ) ->
               ( ( C i^i ( `' R " { D } ) ) = (/) <->
               ( ( H " C ) i^i ( `' S " { ( H ` D ) } ) ) = (/) ) ) $=
      ( vy vx wcel wa cima wceq wex wrex wbr wb wi syl9r cvv wss csn cin c0 cfv
      wiso ccnv wn cv neq0 ssel wf1o wfn isof1o f1ofn fnbrfvb ex imp31 rexbidva
      3syl vex syl6rbbr fvex eliniseg mp1i anbi12d elin r19.41v 3bitr4g adantrr
      elima breq1 biimpar ad2antll isorel bitrd syl5ibr exp32 com34 imp32 exbii
      reximdvai sylbid df-rex 3bitr4i syl6ibr exlimdv syl5bi syl fnfvima 3expia
      con4d sylan adantrd biimpd ax-mp imp3a jcad 3imtr4g n0i syl6 impcon4bid )
      ABEFGUFZCAUAZDAJZKZKZCEUGDUBLZUCZUDMZGCLZFUGDGUEZUBLZUCZUDMZXGXOXJXOUHZHU
      IZXNJZHNXGXJUHZHXNUJXGXRXSHXGXRIUIZXHJZICOZXSXGXRXTGUEZXQMZXQXLFPZKZICOZY
      BXCXDXRYGQXEXCXDKZXQXKJZXQXMJZKYDICOZYEKXRYGYHYIYKYJYEYHYKXTXQGPZICOYIYHY
      DYLICXCXDXTCJZYDYLQZXDYMXTAJZXCYNCAXTUKZXCABGULZGAUMZYOYNRABEFGUNZABGUOZY
      RYOYNAXTXQGUPUQUTSURUSIXQGCHVAZVKVBXLTJZYJYEQYHDGVCZFXLXQTUUAVDVEVFXQXKXM
      VGYDYEICVHVIVJXGYFYAICXCXDXEYMYFYARZRXCXDYMXEUUDXDYMYOXCXEUUDRYPXCYOXEUUD
      YFYAXCYOXEKKZYCXLFPZYDUUFYEYCXQXLFVLVMUUEYAXTDEPZUUFXEYAUUGQXCYOEDXTAIVAV
      DVNZABXTDEFGVOZVPVQVRSVSVTWBWCXTXIJZINZYMYAKZINXSYBUUJUULIXTCXHVGZWAIXIUJ
      ZYAICWDWEWFWGWHWLXSUUKXGXPUUNXGUUJXPIXGUUJYCXNJZXPXGUULYCXKJZYCXMJZKUUJUU
      OXGUULUUPUUQXGYMUUPYAXCYRXFYMUUPRZXCYQYRYSYTWIYRXDUURXEYRXDYMUUPACGXTWJWK
      VJWMWNXGYMYAUUQXCXDXEYMYAUUQRZRXCXDYMXEUUSXDYMYOXCXEUUSRYPXCYOXEUUSUUEYAU
      UGUUQUUHUUEUUGUUFUUQUUEUUGUUFUUIWOUUBUUQUUFQUUCFXLYCTXTGVCVDWPWFWCVRSVSVT
      WQWRUUMYCXKXMVGWSXNYCWTXAWGWHXB $.
      $( [19-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y R $.  $d x y S $.  $d x y H $.
    $d x y D $.
    $( Isomorphisms preserve initial segments.  Proposition 6.31(2) of
       [TakeutiZaring] p. 33. $)
    isoini $p |- ( ( H Isom R , S ( A , B ) /\ D e. A ) ->
               ( H " ( A i^i ( `' R " { D } ) ) ) =
               ( B i^i ( `' S " { ( H ` D ) } ) ) ) $=
      ( vx vy wcel wa ccnv cfv csn cima cin cv wbr wrex wb syl6bb wiso cab elin
      wceq crn wf1o wfo isof1o f1ofo forn eleq2d 3syl f1ofn fvelrnb bitr3d fvex
      wfn cvv eliniseg mp1i anbi12d adantr anbi2d syl5bb anbi1d anass adantl wi
      vex isorel syl fnbrfvb bicomd sylan adantrr ancom breq1 bitri exp32 com23
      pm5.32i imp pm5.32d bitrd rexbidv2 r19.41v bitr4d abbi2dv dfima2 syl6reqr
      ) ABDEFUAZCAIZJZBEKCFLZMNZOZGPZHPZFQZGADKCMNZOZRZHUBFXANWMXBHWPWRWPIWRBIZ
      WRWOIZJZWMXBWRBWOUCWMXEWQFLZWRUDZGARZWRWNEQZJZXBWKXEXJSWLWKXCXHXDXIWKWRFU
      EZIZXCXHWKABFUFZABFUGZXLXCSABDEFUHZABFUIXNXKBWRABFUJUKULWKXMFAUQZXLXHSXOA
      BFUMZGAWRFUNULUOWNURIXDXISWKCFUPEWNWRURHVIUSUTVAVBWMXBXGXIJZGARXJWMWSXRGX
      AAWMWQXAIZWSJZWQAIZWQCDQZWSJZJZYAXRJWLXTYDSWKWLXTYAYBJZWSJYDWLXSYEWSXSYAW
      QWTIZJWLYEWQAWTUCWLYFYBYADCWQAGVIUSVCVDVEYAYBWSVFTVGWMYAYCXRWKWLYAYCXRSZV
      HWKYAWLYGWKYAWLYGWKYAWLJJZYCXFWNEQZXGJZXRYHYBYIWSXGABWQCDEFVJWKYAWSXGSZWL
      WKXPYAYKWKXMXPXOXQVKXPYAJXGWSAWQWRFVLVMVNVOVAYJXGYIJXRYIXGVPXGYIXIXFWRWNE
      VQWAVRTVSVTWBWCWDWEXGXIGAWFTWGVDWHGHFXAWIWJ $.
      $( [20-Apr-2004] $)
  $}

  ${
    $d x y A $.  $d x y B $.  $d x y C $.  $d x y D $.  $d x y H $.
    $d x y R $.  $d x y S $.
    isoini2.1 $e |- C = ( A i^i ( `' R " { X } ) ) $.
    isoini2.2 $e |- D = ( B i^i ( `' S " { ( H ` X ) } ) ) $.
    $( Isomorphisms are isomorphisms on their initial segments.  (Contributed
       by Mario Carneiro, 29-Mar-2014.) $)
    isoini2 $p |- ( ( H Isom R , S ( A , B ) /\ X e. A ) ->
                    ( H |` C ) Isom R , S ( C , D ) ) $=
      ( vx vy wiso wcel wf1o wbr cfv wb wral cima wa cres cv wf1 wss isof1o syl
      f1of1 adantr ccnv csn inss1 eqsstri f1ores sylancl isoini imaeq2i 3eqtr4g
      cin wceq f1oeq3 mpbid df-iso simprbi ssralv ralimdv mpsyl fvres breqan12d
      bibi2d ralbidva ralbiia sylibr sylanbrc ) ABEFGMZHANZUAZCDGCUBZOZKUCZLUCZ
      EPZVTVRQZWAVRQZFPZRZLCSZKCSZCDEFVRMVQCGCTZVROZVSVQABGUDZCAUEZWJVOWKVPVOAB
      GOZWKABEFGUFABGUHUGUICAEUJHUKTZUSZAIAWNULUMZABCGUNUOVQWIDUTWJVSRVQGWOTBFU
      JHGQUKTUSWIDABHEFGUPCWOGIUQJURWIDCVRVAUGVBVQWBVTGQZWAGQZFPZRZLCSZKCSZWHWL
      VQXAKASZXBWPWLVQWTLASZKASZXCWPVOXEVPVOWMXEKLABEFGVCVDUIWLXDXAKAWTLCAVEVFV
      GXAKCAVEVGWGXAKCVTCNZWFWTLCXFWACNZUAWEWSWBXFXGWCWQWDWRFVTCGVHWACGVHVIVJVK
      VLVMKLCDEFVRVCVN $.
      $( [29-Mar-2014] $)
  $}

  ${
    $d w x y z A $.  $d w x y z B $.  $d w x y z H $.  $d w x y z ph $.
    $d w x y z R $.  $d w x y z S $.
    isofrlem.1 $e |- ( ph -> H Isom R , S ( A , B ) ) $.
    isofrlem.2 $e |- ( ph -> ( H " x ) e. _V ) $.
    $( Lemma for ~ isofr . $)
    isofrlem $p |- ( ph -> ( S Fr B -> R Fr A ) ) $=
      ( vy vw vz cv c0 wa cima wceq wi syl wcel wfr wss wne ccnv wrex wf1o wiso
      csn cin wal isof1o wfn f1ofn wex n0 w3a cfv fnfvima 3expia exlimdv syl5bi
      ne0i expimpd wfo f1ofo crn imassrn forn syl5sseq jctild dffr3 sseq1 neeq1
      cvv anbi12d ineq1 eqeq1d rexeqbi1dv cla4gv syl5d wfun adantr f1ofun simpl
      imbi12d fvelima syl2an simpr wb ssel imdistani isomin sneq imaeq2d ineq2d
      sylan9bb syl5ibr exp42 imp com3l com4t reximdvai mpd rexlimdv adantrd a2d
      exp32 ex syld alrimdv syl6ibr ) ADFUAZBMZCUBZXMNUCZOZXMEUDJMZUHPUINQZJXMU
      EZRZBUJCEUAAXLXTBAXLXPGXMPZFUDZKMZUHZPZUIZNQZKYAUEZRXTAXPYADUBZYANUCZOZXL
      YHACDGUFZXPYKRACDEFGUGZYLHCDEFGUKSZYLXPYJYIYLGCULZXPYJRCDGUMYOXNXOYJXOXQX
      MTZJUNYOXNOZYJJXMUOYQYPYJJYOXNYPYJYOXNYPUPXQGUQZYATYJCXMGXQURYAYRVBSUSUTV
      AVCSYLCDGVDZYICDGVEYSGVFYADGXMVGCDGVHVISVJSXLLMZDUBZYTNUCZOZYTYEUIZNQZKYT
      UEZRZLUJZAYKYHRZLKDFVKAYAVNTUUHUUIRIUUGUUILYAVNYTYAQZUUCYKUUFYHUUJUUAYIUU
      BYJYTYADVLYTYANVMVOUUEYGKYTYAUUJUUDYFNYTYAYEVPVQVRWEVSSVAVTAXPYHXSAXNYHXS
      RZXOAXNUUKAXNOZYGXSKYAUULYCYATZYGXSUULUUMYGOZOZYRYCQZJXMUEZXSUULGWAZUUMUU
      QUUNUULYLUURAYLXNYNWBCDGWCSUUMYGWDJYCXMGWFWGUUOUUPXRJXMUULUUNYPUUPXRRRYPU
      UPUULUUNXRUULYPUUPUUNXRRZAXNYPUUPUUSRRAXNYPUUPUUSUUNXRAXNYPOZOZUUPOYGUUMY
      GWHUVAXRYAYBYRUHZPZUIZNQZUUPYGAYMXNXQCTZOXRUVEWIUUTHXNYPUVFXMCXQWJWKCDXMX
      QEFGWLWGUUPUVDYFNUUPUVCYEYAUUPUVBYDYBYRYCWMWNWOVQWPWQWRWSWTXAWSXBXCXGXDXH
      XEXFXIXJBJCEVKXK $.
      $( [18-Nov-2014] $) $( [29-Apr-2004] $)

    $( Lemma for ~ isose . $)
    isoselem $p |- ( ph -> ( R Se A -> S Se B ) ) $=
      ( vy vz cv csn cima cin cvv wcel wral wi wceq wse ccnv cfv dfse2 r19.21bi
      biimpi expcom adantl imaeq2 eleq1d imbi2d vtoclg com12 adantr wiso isoini
      wa sylan sylibd syld ralrimdva crn wfn wf1o isof1o syl f1ofn sneq imaeq2d
      wb ineq2d ralrn wfo f1ofo forn 3syl raleqdv bitr3d syl6ibr ) ACEUAZDFUBZJ
      LZMZNZOZPQZJDRZDFUAAVTDWAKLZGUCZMZNZOZPQZKCRZWGAVTWMKCAWHCQZUQZVTCEUBWHMN
      OZPQZWMWOVTWRSAVTWOWRVTWRKCVTWRKCRKCEUDUFUEUGUHWPWRGWQNZPQZWMAWRWTSWOWRAW
      TAGBLZNZPQZSAWTSBWQPXAWQTZXCWTAXDXBWSPXAWQGUIUJUKIULUMUNWPWSWLPACDEFGUOZW
      OWSWLTHCDWHEFGUPURUJUSUTVAAWFJGVBZRZWNWGAGCVCZXGWNVJACDGVDZXHAXEXIHCDEFGV
      EVFZCDGVGVFWFWMJKCGWBWITZWEWLPXKWDWKDXKWCWJWAWBWIVHVIVKUJVLVFAWFJXFDAXICD
      GVMXFDTXJCDGVNCDGVOVPVQVRUSJDFUDVS $.
      $( [23-Jun-2015] $)
  $}

  ${
    $d x A $.  $d x B $.  $d x H $.  $d x R $.  $d x S $.  $d x V $.
    $( An isomorphism preserves well-foundedness.  Proposition 6.32(1) of
       [TakeutiZaring] p. 33. $)
    isofr $p |- ( H Isom R , S ( A , B ) -> ( R Fr A <-> S Fr B ) ) $=
      ( vx wiso wfr ccnv id wf1o wfun cima cvv wcel isof1o f1ofun funimaex 3syl
      isofrlem wi isocnv cv vex syl impbid ) ABCDEGZACHZBDHZUGBADCEIZGZUHUIUAAB
      CDEUBUKFBADCUJUKJUKBAUJKUJLUJFUCZMNOBADCUJPBAUJQUJULFUDZRSTUEUGFABCDEUGJU
      GABEKELEULMNOABCDEPABEQEULUMRSTUF $.
      $( [18-Nov-2014] $) $( [30-Apr-2004] $)

    $( An isomorphism preserves set-like relations. $)
    isose $p |- ( H Isom R , S ( A , B ) -> ( R Se A <-> S Se B ) ) $=
      ( vx wiso wse id wf1o wfun cv cima cvv wcel isof1o funimaex 3syl isoselem
      f1ofun vex ccnv isocnv syl impbid ) ABCDEGZACHBDHUFFABCDEUFIUFABEJEKEFLZM
      NOABCDEPABETEUGFUAZQRSUFFBADCEUBZABCDEUCZUFBADCUIGZUIUGMNOZUJUKBAUIJUIKUL
      BADCUIPBAUITUIUGUHQRUDSUE $.
      $( [23-Jun-2015] $)

    $( A weak form of ~ isofr that does not need Replacement.  (Contributed by
       Mario Carneiro, 18-Nov-2014.) $)
    isofr2 $p |- ( ( H Isom R , S ( A , B ) /\ B e. V ) ->
                   ( S Fr B -> R Fr A ) ) $=
      ( vx wiso wcel wa simpl cv cima wss cvv crn imassrn wf1o wf isof1o syl5ss
      f1of frn 3syl ssexg sylan isofrlem ) ABCDEHZBFIZJGABCDEUHUIKUHEGLZMZBNUIU
      KOIUHUKEPZBEUJQUHABERABESULBNABCDETABEUBABEUCUDUAUKBFUEUFUG $.
      $( [18-Nov-2014] $)
  $}

  ${
    $d x y z w A $.  $d x y z w B $.  $d x y R $.  $d x y z w S $.
    $d x y z w H $.
    $( Lemma for ~ isowe . $)
    isowelem $p |- ( H Isom R , S ( A , B ) ->
      ( A. x e. A A. y e. A ( x R y \/ x = y \/ y R x ) <->
        A. z e. B A. w e. B ( z S w \/ z = w \/ w S z ) ) ) $=
      ( cv wbr wceq w3o wral cfv wcel wa isorel wb 3orbi123d wiso wf1 f1of1 syl
      wf1o isof1o f1fveq sylan bicomd ancom2s 2ralbidva f1ofo breq2 eqeq2 breq1
      wfo cbvfo ralbidv eqeq1 bitrd 3syl ) EFGHIUAZAJZBJZGKZVCVDLZVDVCGKZMZBENA
      ENVCIOZVDIOZHKZVIVJLZVJVIHKZMZBENZAENZCJZDJZHKZVQVRLZVRVQHKZMZDFNZCFNZVBV
      HVNABEEVBVCEPZVDEPZQZQZVEVKVFVLVGVMEFVCVDGHIRWHVLVFVBEFIUBZWGVLVFSVBEFIUE
      ZWIEFGHIUFZEFIUCUDEFVCVDIUGUHUIVBWFWEVGVMSEFVDVCGHIRUJTUKVBWJEFIUPZVPWDSW
      KEFIULWLVPVIVRHKZVIVRLZVRVIHKZMZDFNZAENWDWLVOWQAEVNWPBDEFIVJVRLVKWMVLWNVM
      WOVJVRVIHUMVJVRVIUNVJVRVIHUOTUQURWQWCACEFIVIVQLZWPWBDFWRWMVSWNVTWOWAVIVQV
      RHUOVIVQVRUSVIVQVRHUMTURUQUTVAUT $.
      $( [18-Nov-2014] $)

    $( An isomorphism preserves well ordering.  Proposition 6.32(3) of
       [TakeutiZaring] p. 33. $)
    isowe $p |- ( H Isom R , S ( A , B ) -> ( R We A <-> S We B ) ) $=
      ( vx vy vz vw wiso wfr cv wbr wceq w3o wral wa wwe isofr dfwe2 isowelem
      anbi12d 3bitr4g ) ABCDEJZACKZFLZGLZCMUFUGNUGUFCMOGAPFAPZQBDKZHLZILZDMUJUK
      NUKUJDMOIBPHBPZQACRBDRUDUEUIUHULABCDESFGHIABCDEUAUBFGACTHIBDTUC $.
      $( [18-Nov-2014] $) $( [30-Apr-2004] $)

    $( A weak form of ~ isowe that does not need Replacement.  (Contributed by
       Mario Carneiro, 18-Nov-2014.) $)
    isowe2 $p |- ( ( H Isom R , S ( A , B ) /\ A. x ( H " x ) e. _V ) ->
                   ( S We B -> R We A ) ) $=
      ( vz vw vy cv cima cvv wcel wa wfr wbr wceq w3o wral wwe wal simpl imaeq2
      vex eleq1d cla4v adantl isofrlem wi isowelem biimprd adantr anim12d dfwe2
      wiso 3imtr4g ) BCDEFUOZFAJZKZLMZAUAZNZCEOZGJZHJZEPVDVEQVEVDEPRHCSGCSZNBDO
      ZURIJZDPURVHQZVHURDPRIBSABSZNCETBDTVBVCVGVFVJVBIBCDEFUQVAUBVAFVHKZLMZUQUT
      VLAVHIUDVIUSVKLURVHFUCUEUFUGUHUQVFVJUIVAUQVJVFAIGHBCDEFUJUKULUMGHCEUNAIBD
      UNUP $.
      $( [18-Nov-2014] $)
  $}

  ${
    $d x y z w v u A $.  $d x y v u B $.  $d x y z w v u H $.
    $d x y z w v u R $.  $d v u S $.
    $( Any one-to-one onto function determines an isomorphism with an induced
       relation ` S ` .  Proposition 6.33 of [TakeutiZaring] p. 34. $)
    f1oiso $p |- ( ( H : A -1-1-onto-> B /\ S = { <. z , w >. |
     E. x e. A E. y e. A ( ( z = ( H ` x ) /\ w = ( H ` y ) ) /\ x R y ) } ) ->
                  H Isom R , S ( A , B ) ) $=
      ( vv vu cv cfv wceq wa wbr wrex wb wcel anbi1d wf1o copab wral wiso simpl
      wf1 f1of1 cop df-br eleq2 fvex eqeq1 2rexbidv anbi2d opelopab anass eqcom
      f1fveq syl6bb anassrs syl5bb rexbidv rexbidva breq1 ceqsrexv adantl bitrd
      r19.42v breq2 sylan9bb anandis sylan9bbr an32s ralrimivva df-iso sylanbrc
      syl5rbb sylan ) EFIUAZHCLZALZIMZNZDLZBLZIMZNZOZWAWEGPZOZBEQAEQZCDUBZNZOVS
      JLZKLZGPZWNIMZWOIMZHPZRZKEUCJEUCZEFGHIUDVSWMUEVSEFIUFZWMXAEFIUGXBWMOZWTJK
      EEWSWQWRUHZHSZXCWNESZWOESZOZOWPWQWRHUIXBXHWMXEWPRWMXEXDWLSZXBXHOZWPHWLXDU
      JXIWQWBNZWRWFNZOZWIOZBEQZAEQZXJWPWKXKWGOZWIOZBEQAEQXPCDWQWRWNIUKWOIUKVTWQ
      NZWJXRABEEXSWHXQWIXSWCXKWGVTWQWBULTTUMWDWRNZXRXNABEEXTXQXMWIXTWGXLXKWDWRW
      FULUNTUMUOXBXFXGXPWPRXBXFOZXPXLWNWEGPZOZBEQZXBXGOZWPYAXPWAWNNZXLWIOZBEQZO
      ZAEQZYDYAXOYIAEYAWAESZOZXOYFYGOZBEQYIYLXNYMBEXNXKYGOYLYMXKXLWIUPYLXKYFYGX
      BXFYKXKYFRXBXFYKOOXKWNWANYFEFWNWAIURWNWAUQUSUTTVAVBYFYGBEVHUSVCXFYJYDRXBY
      HYDAWNEYFYGYCBEYFWIYBXLWAWNWEGVDUNVBVEVFVGYEYDWEWONZYBOZBEQZWPYEYCYOBEYEW
      EESZOXLYNYBXBXGYQXLYNRXBXGYQOOXLWOWENYNEFWOWEIURWOWEUQUSUTTVCXGYPWPRXBYBW
      PBWOEWEWOWNGVIVEVFVGVJVKVAVLVMVQVNVRJKEFGHIVOVP $.
      $( [30-Apr-2004] $)
  $}

  ${
    $d A w x y z $.  $d B w x y z $.  $d H w x y z $.  $d R w x y z $.
    f1oiso2.1 $e |- S = { <. x , y >. |
      ( ( x e. B /\ y e. B ) /\ ( `' H ` x ) R ( `' H ` y ) ) } $.
    $( Any one-to-one onto function determines an isomorphism with an induced
       relation ` S ` .  (Contributed by Mario Carneiro, 9-Mar-2013.) $)
    f1oiso2 $p |- ( H : A -1-1-onto-> B -> H Isom R , S ( A , B ) ) $=
      ( vz vw cv cfv wceq wa wbr wrex wcel 3adant3 eqcomd syl2anc wf1o wiso w3a
      copab ccnv f1ocnvdm adantrr f1ocnvfv2 anim12dan simp3 fveq2 eqeq2d anbi2d
      adantrl breq2 anbi12d rcla4ev syl12anc anbi1d breq1 rexbidv simp3ll simp1
      3expib simp2l wf ffvelrn sylan eqeltrd simp3lr simp2r simp3r f1ocnvfv mpd
      f1of wi 3brtr4d jca31 3exp rexlimdvv impbid opabbidv syl5eq f1oiso mpdan
      ) CDGUAZFAKZIKZGLZMZBKZJKZGLZMZNZWHWLEOZNZJCPZICPZABUDZMCDEFGUBWFFWGDQZWK
      DQZNZWGGUEZLZWKXDLZEOZNZABUDWTHWFXHWSABWFXHWSWFXCXGWSWFXCXGUCZXECQZWGXEGL
      ZMZWNNZXEWLEOZNZJCPZWSWFXCXJXGWFXAXJXBCDWGGUFUGRXIXFCQZXLWKXFGLZMZNZXGXPW
      FXCXQXGWFXBXQXACDWKGUFUNRWFXCXTXGWFXAXLXBXSWFXANXKWGCDWGGUHSWFXBNXRWKCDWK
      GUHSUIRWFXCXGUJXOXTXGNJXFCWLXFMZXMXTXNXGYAWNXSXLYAWMXRWKWLXFGUKULUMWLXFXE
      EUOUPUQURWRXPIXECWHXEMZWQXOJCYBWOXMWPXNYBWJXLWNYBWIXKWGWHXEGUKULUSWHXEWLE
      UTUPVAUQTVDWFWQXHIJCCWFWHCQZWLCQZNZWQXHWFYEWQUCZXAXBXGYFWGWIDWJWNWPWFYEVB
      ZYFWFYCWIDQZWFYEWQVCZWFYCYDWQVEZWFCDGVFZYCYHCDGVOZCDWHGVGVHTVIYFWKWMDWJWN
      WPWFYEVJZYFWFYDWMDQZYIWFYCYDWQVKZWFYKYDYNYLCDWLGVGVHTVIYFWHWLXEXFEWFYEWOW
      PVLYFWIWGMZXEWHMZYFWGWIYGSYFWFYCYPYQVPYIYJCDWHWGGVMTVNYFWMWKMZXFWLMZYFWKW
      MYMSYFWFYDYRYSVPYIYOCDWLWKGVMTVNVQVRVSVTWAWBWCIJABCDEFGWDWE $.
      $( [9-Mar-2013] $)
  $}

  ${
    $d z w R $.  $d x y z w S $.  $d z w A $.  $d z w B $.  $d x y z w F $.
    f1owe.1 $e |- R = { <. x , y >. | ( F ` x ) S ( F ` y ) } $.
    $( Well-ordering of isomorphic relations. $)
    f1owe $p |- ( F : A -1-1-onto-> B -> ( S We B -> R We A ) ) $=
      ( vz vw wf1o wwe cv wbr cfv wb wral wceq fveq2 breq1d breq2d brabg rgen2a
      wa wiso df-iso isowe sylbir mpan2 biimprd ) CDGKZCELZDFLZUKIMZJMZENUNGOZU
      OGOZFNZPZJCQICQZULUMPZUSIJCAMZGOZBMZGOZFNUPVEFNURABUNUOCCEVBUNRVCUPVEFVBU
      NGSTVDUORVEUQUPFVDUOGSUAHUBUCUKUTUDCDEFGUEVAIJCDEFGUFCDEFGUGUHUIUJ $.
      $( [4-Mar-1997] $)
  $}

  ${
    $d z w v u f R $.  $d x y z w v u f S $.  $d z w v u f A $.
    $d z w v u f B $.  $d x y z w v u f F $.
    f1oweALT.1 $e |- R = { <. x , y >. | ( F ` x ) S ( F ` y ) } $.
    $( Well-ordering of isomorphic relations.  (This version is proved directly
       instead of with the isomorphism predicate.) $)
    f1oweALT $p |- ( F : A -1-1-onto-> B -> ( S We B -> R We A ) ) $=
      ( vu vf vw vv cv wbr wceq wral wa wi wcel cfv vz wf1o wfr w3o wwe wfo wfn
      f1ofo crn df-fo freq2 biimprd wfun cdm df-fn wss c0 wne wn wrex wal df-fr
      cima cvv vex funimaex wex n0 funfvima2 ne0i syl6 exlimdv syl5bi imp jctil
      imassrn sseq1 neeq1 anbi12d raleq rexeqbi1dv imbi12d syl7 syl com23 exp3a
      cla4gv anabsi5 imp3a cres fores fvres breqan12rd fveq2 breq1d breq2d brab
      syl6rbbr ralbidva rexbiia breq1 cbvfo rexbidv breq2 ralbidv cbvexfo bitrd
      wb notbid syl5bb sylibrd exp4b com34 imp4a alrimdv syl6ibr biimpd sylan9r
      sylan9 sylbi wf1 df-f1o a1i f1fveq bicomd 3orbi123d 2ralbidva eqeq1 eqeq2
      sylan9bb anim12d dfwe2 3imtr4g ) CDGUBZDFUCZIMZJMZFNZYPYQOZYQYPFNZUDZJDPZ
      IDPZQCEUCZKMZLMZENZUUEUUFOZUUFUUEENZUDZLCPKCPZQDFUECEUEYNYOUUDUUCUUKYNCDG
      UFZYOUUDRZCDGUHUULGCUGZGUIZDOZQUUMCDGUJUUPYOUUOFUCZUUNUUDUUPUUQYOUUODFUKU
      LUUNGUMZGUNZCOZQUUQUUDRGCUOUURUUQUUSEUCZUUTUUDUURUUQUAMZUUSUPZUVBUQURZQUU
      IUSZLUVBPZKUVBUTZRZUAVAUVAUURUUQUVHUAUURUUQUVCUVDUVGUURUVCUUQUVDUVGRUURUV
      CUVDUUQUVGUURUVCUVDUUQUVGUURUVCQZUVDUUQQYTUSZJGUVBVCZPZIUVKUTZUVGUVIUVDUU
      QUVMUURUVCUVDUUQUVMRZRUURUVIUVDUVNUURUUQUVIUVDQZUVMUUQUUEUUOUPZUUEUQURZQZ
      UVJJUUEPZIUUEUTZRZKVAZUURUVOUVMRZKIJUUOFVBUURUVKVDSZUWBUWCRGUVBUAVEVFUVOU
      VKUUOUPZUVKUQURZQZUWDUWBUVMUVOUWFUWEUVIUVDUWFUVDUUEUVBSZKVGUVIUWFKUVBVHUV
      IUWHUWFKUVIUWHUUEGTZUVKSUWFUVBUUEGVIUVKUWIVJVKVLVMVNGUVBVPVOUWAUWGUVMRKUV
      KVDUUEUVKOZUVRUWGUVTUVMUWJUVPUWEUVQUWFUUEUVKUUOVQUUEUVKUQVRVSUVSUVLIUUEUV
      KUVJJUUEUVKVTWAWBWGWCWDVMWEWFWHWIUVIUVBUVKGUVBWJZUFZUVGUVMXHUVBGWKUVGUUFU
      WKTZUUEUWKTZFNZUSZLUVBPZKUVBUTZUWLUVMUVFUWQKUVBUWHUVEUWPLUVBUWHUUFUVBSZQZ
      UUIUWOUWTUWOUUFGTZUWIFNZUUIUWSUWHUWMUXAUWNUWIFUUFUVBGWLUUEUVBGWLWMAMZGTZB
      MZGTZFNZUXAUXFFNUXBABUUFUUEELVEZKVEZUXCUUFOUXDUXAUXFFUXCUUFGWNWOUXEUUEOUX
      FUWIUXAFUXEUUEGWNWPHWQZWRXIWSWTUWLUWRYQUWNFNZUSZJUVKPZKUVBUTUVMUWLUWQUXMK
      UVBUWPUXLLJUVBUVKUWKUWMYQOUWOUXKUWMYQUWNFXAXIXBXCUXMUVLKIUVBUVKUWKUWNYPOZ
      UXLUVJJUVKUXNUXKYTUWNYPYQFXDXIXEXFXGXJWDXKXLXMWEXNXOUAKLUUSEVBXPUUTUVAUUD
      UUSCEUKXQXSXTXRXTWDYNUUKUUCYNCDGYAZUULQUUKUUCXHCDGYBUXOUUKUWIUXAFNZUWIUXA
      OZUXBUDZLCPZKCPZUULUUCUXOUUJUXRKLCCUXOUUECSUUFCSQQZUUGUXPUUHUXQUUIUXBUUGU
      XPXHUYAUXGUWIUXFFNUXPABUUEUUFEUXIUXHUXCUUEOUXDUWIUXFFUXCUUEGWNWOUXEUUFOUX
      FUXAUWIFUXEUUFGWNWPHWQYCUYAUXQUUHCDUUEUUFGYDYEUUIUXBXHUYAUXJYCYFYGUULUXTY
      PUXAFNZYPUXAOZUXAYPFNZUDZLCPZIDPUUCUXSUYFKICDGUWIYPOZUXRUYELCUYGUXPUYBUXQ
      UYCUXBUYDUWIYPUXAFXAUWIYPUXAYHUWIYPUXAFXDYFXEXBUULUYFUUBIDUYEUUALJCDGUXAY
      QOUYBYRUYCYSUYDYTUXAYQYPFXDUXAYQYPYIUXAYQYPFXAYFXBXEXGYJXTULYKIJDFYLKLCEY
      LYM $.
      $( [4-Mar-1997] $)
  $}

  ${
    $d A a b c $.  $d R b c $.  $d F a b c $.
    $( A set-like well-ordering has no nontrivial automorphisms.  (Contributed
       by Stefan O'Rear, 16-Nov-2014.)  (Revised by Mario Carneiro,
       25-Jun-2015.) $)
    weniso $p |- ( ( R We A /\ R Se A /\ F Isom R , R ( A , A ) ) ->
        F = ( _I |` A ) ) $=
      ( va vc vb wceq cfv wral wn wbr wa wi syl wcel fveq2 id eqeq12d wb adantr
      wwe wse wiso w3a cid cres cv crab c0 wne wrex rabn0 rexnal bitri wreu wss
      simpl1 idi simpl2 ssrab2 a1i simpr wereu2 syl22anc reurex ex notbid elrab
      ralrab con34b bicomi ralbii wo simprr wor weso wf wf1o simpl3 isof1o f1of
      simprl ffvelrn syl2anc sotrieq syl12anc con2bid mpbird breq1 rcla4v com23
      imbi12d imp wf1 f1of1 f1fveq pm2.21 ad2antll sylbid syld ccnv f1ocnv 3syl
      isorel f1ocnvfv2 breq1d bitr2d biimpa simplrr adantl fveq2d 3eqtr3d mpdan
      sylc jaodan syl5bi rexlimdv syl5bir pm2.18d fvresi eqeq2d biimprd ralimia
      wfn 3ad2ant3 f1ofn fnresi eqfnfv2 ) ABUAZABUBZAABBCUCZUDZCUEAUFZGZDUGZCHZ
      YOYMHZGZDAIZYLYPYOGZDAIZYSYLUUAUUAJZYTJZDAUHZUIUJZYLUUAUUEUUCDAUKUUBUUCDA
      ULYTDAUMUNYLUUEEUGZFUGZBKZJZEUUDIZFUUDUKZUUAYLUUEUUKYLUUELZUUJFUUDUOZUUKU
      ULYIYJUUDAUPZUUEUUMUULYIMYIYJYKUUEUQURYIYJYKUUEUSUULUUNMUUNUULUUCDAUTVAUR
      UULUUEMYLUUEVBURFEAUUDBVCVDUUJFUUDVENVFYLUUJUUAFUUDUUGUUDOUUGAOZUUGCHZUUG
      GZJZLZYLUUJUUAMZUUCUURDUUGAYOUUGGZYTUUQUVAYPUUPYOUUGYOUUGCPUVAQRVGVHYLUUS
      UUTUUJUUHUUFCHZUUFGZMZEAIZYLUUSLZUUAUUJUVCJZUUIMZEAIUVEUUCUVGUUIEDAYOUUFG
      ZYTUVCUVIYPUVBYOUUFYOUUFCPUVIQRVGVIUVHUVDEAUVDUVHUUHUVCVJVKVLUNUVFUUPUUGB
      KZUUGUUPBKZVMZUVEUUAMZUVFUVLUURYLUUOUURVNUVFUUQUVLUVFABVOZUUPAOZUUOUUQUVL
      JSUVFYIUVNYIYJYKUUSUQABVPNUVFAACVQZUUOUVOUVFAACVRZUVPUVFYKUVQYIYJYKUUSVSZ
      AABBCVTZNZAACWANYLUUOUURWBZAAUUGCWCWDZUWAAUUPUUGBWEWFWGWHUVFUVJUVMUVKUVFU
      VJLUVEUUPCHZUUPGZUUAUVFUVJUVEUWDMUVFUVEUVJUWDUVFUVOUVEUVJUWDMZMUWBUVDUWEE
      UUPAUUFUUPGZUUHUVJUVCUWDUUFUUPUUGBWIUWFUVBUWCUUFUUPUUFUUPCPUWFQRWLWJNWKWM
      UVFUWDUUAMUVJUVFUWDUUQUUAUVFAACWNZUVOUUOUWDUUQSUVFUVQUWGUVTAACWONUWBUWAAA
      UUPUUGCWPWFUURUUQUUAMYLUUOUUQUUAWQZWRWSTWTUVFUVKLZUVEUUGCXAZHZCHZUWKGZUUA
      UWIUWKAOZUWKUUGBKZUVEUWMMUVFUWNUVKUVFAAUWJVQZUUOUWNUVFUVQAAUWJVRUWPUVTAAC
      XBAAUWJWAXCUWAAAUUGUWJWCWDZTUVFUVKUWOUVFUWOUWLUUPBKZUVKUVFYKUWNUUOUWOUWRS
      UVRUWQUWAAAUWKUUGBBCXDWFUVFUWLUUGUUPBUVFUVQUUOUWLUUGGZUVTUWAAAUUGCXEWDZXF
      XGXHUWNUVEUWOUWMUVDUWOUWMMEUWKAUUFUWKGZUUHUWOUVCUWMUUFUWKUUGBWIUXAUVBUWLU
      UFUWKUUFUWKCPUXAQRWLWJWKXNUVFUWMUUAMUVKUVFUWMUUAUVFUWMLZUURUUQUUAYLUUOUUR
      UWMXIUXBUWLCHZUWLUUPUUGUWMUXCUWLGUVFUWLUWKCPXJUVFUXCUUPGUWMUVFUWLUUGCUWTX
      KTUVFUWSUWMUWTTXLUWHXNVFTWTXOXMXPVFXPXQWTXRXSYTYRDAYOAOZYRYTUXDYQYOYPAYOX
      TYAYBYCNYLCAYDZYMAYDZYNYSSYLUVQUXEYKYIUVQYJUVSYEAACYFNUXFYLAYGVADACYMYHWD
      WH $.
      $( [16-Nov-2014] $)

    $( Thus there is at most one isomorphism between any two set-like
       well-ordered classes.  Class version of ~ wemoiso .  (Contributed by
       Mario Carneiro, 25-Jun-2015.) $)
    weisoeq $p |- ( ( ( R We A /\ R Se A ) /\
      ( F Isom R , S ( A , B ) /\ G Isom R , S ( A , B ) ) ) -> F = G ) $=
      ( wwe wse wa wiso wceq ccnv ccom cid cres wf1 wf1o isof1o f1of1 3syl id
      isocnv isotr syl2anr weniso sylan2 simprl simprr f1eqcocnv syl2anc mpbird
      3expa wb ) ACGZACHZIZABCDEJZABCDFJZIZIZEFKZELZFMZNAOKZUSUPAACCVCJZVDURURB
      ADCVBJVEUQURUAABCDEUBABACDCVBFUCUDUNUOVEVDACVCUEULUFUTABEPZABFPZVAVDUMUTU
      QABEQVFUPUQURUGABCDERABESTUTURABFQVGUPUQURUHABCDFRABFSTABEFUIUJUK $.
      $( [25-Jun-2015] $)

    $( Thus there is at most one isomorphism between any two set-like
       well-ordered classes.  Class version of ~ wemoiso2 .  (Contributed by
       Mario Carneiro, 25-Jun-2015.) $)
    weisoeq2 $p |- ( ( ( S We B /\ S Se B ) /\
      ( F Isom R , S ( A , B ) /\ G Isom R , S ( A , B ) ) ) -> F = G ) $=
      ( wwe wse wa wiso wceq ccnv isocnv anim12i weisoeq wrel wf1o isof1o 3syl
      f1orel sylan2 wb simprl simprr cnveqb syl2anc mpbird ) BDGBDHIZABCDEJZABC
      DFJZIZIZEFKZELZFLZKZUKUHBADCUNJZBADCUOJZIUPUIUQUJURABCDEMABCDFMNBADCUNUOO
      UAULEPZFPZUMUPUBULUIABEQUSUHUIUJUCABCDERABETSULUJABFQUTUHUIUJUDABCDFRABFT
      SEFUEUFUG $.
      $( [25-Jun-2015] $)
  $}

  ${
    $d R f g $.  $d A f g $.  $d S f g $.  $d B f g $.
    $( Thus there is at most one isomorphism between any two well-ordered
       sets.  TODO:  Shorten ~ finnisoeu .  (Contributed by Stefan O'Rear,
       12-Feb-2015.) $)
    wemoiso $p |- ( R We A -> E* f f Isom R , S ( A , B ) ) $=
      ( vg wwe cv wiso wa wceq wi wal wmo wse simpl cvv wcel wf1o wf isof1o vex
      f1of dmfex mpan 3syl ad2antrl syl jca weisoeq sylancom ex alrimivv isoeq1
      exse mo4 sylibr ) ACGZABCDEHZIZABCDFHZIZJZUSVAKZLZFMEMUTENURVEEFURVCVDURV
      CURACOZJVDURVCJZURVFURVCPVGAQRZVFUTVHURVBUTABUSSABUSTZVHABCDUSUAABUSUCUSQ
      RVIVHEUBABQUSUDUEUFUGACQUOUHUIABCDUSVAUJUKULUMUTVBEFABCDVAUSUNUPUQ $.
      $( [25-Jun-2015] $) $( [12-Feb-2015] $)

    $( Thus there is at most one isomorphism between any two well-ordered
       sets.  (Contributed by Stefan O'Rear, 12-Feb-2015.)  (Revised by Mario
       Carneiro, 23-Jun-2015.) $)
    wemoiso2 $p |- ( S We B -> E* f f Isom R , S ( A , B ) ) $=
      ( vg wwe cv wiso wa wceq wi wal wmo wse simpl cvv wcel crn wf1o wfo f1ofo
      isof1o forn 3syl vex rnex syl6eqelr ad2antrl syl jca weisoeq2 sylancom ex
      exse alrimivv isoeq1 mo4 sylibr ) BDGZABCDEHZIZABCDFHZIZJZVAVCKZLZFMEMVBE
      NUTVGEFUTVEVFUTVEUTBDOZJVFUTVEJZUTVHUTVEPVIBQRZVHVBVJUTVDVBBVASZQVBABVATA
      BVAUAVKBKABCDVAUCABVAUBABVAUDUEVAEUFUGUHUIBDQUOUJUKABCDVAVCULUMUNUPVBVDEF
      ABCDVCVAUQURUS $.
      $( [25-Jun-2015] $) $( [12-Feb-2015] $)
  $}

  ${
    $d w x y z A $.  $d w x y z F $.  $d w V $.  $d w x y X $.
    knatar.1 $e |- X = |^| { z e. ~P A | ( F ` z ) C_ z } $.
    $( The Knaster-Tarski theorem says that every monotone function over a
       complete lattice has a (least) fixpoint.  Here we specialize this
       theorem to the case when the lattice is the powerset lattice ` ~P A ` .
       (Contributed by Mario Carneiro, 11-Jun-2015.) $)
    knatar $p |- ( ( A e. V /\ ( F ` A ) C_ A /\
        A. x e. ~P A A. y e. ~P x ( F ` y ) C_ ( F ` x ) ) ->
      ( X C_ A /\ ( F ` X ) = X ) ) $=
      ( vw wcel cfv wss cv cpw wral wceq fveq2 sylibr rcla4v sylc w3a crab cint
      pwidg 3ad2ant1 simp2 id sseq12d intminss syl5eqss wi wa simprl simprr vex
      syl2anc elpw2 simp3 adantr pweq sseq2d raleqbidv sstrd ralrimiva ssintrab
      sseq1d expr cbvrabv inteqi eqtri syl6sseqr wb elpw2g syl mpbird fvex elpw
      simp1 eqssd jca ) DFJZDEKZDLZBMZEKZAMZEKZLZBWFNZOZADNZOZUAZGDLZGEKZGPWMGC
      MZEKZWPLZCWKUBZUCZDHWMDWKJZWCWTDLWAWCXAWLDFUDUEZWAWCWLUFZWRWCCDWKWPDPZWQW
      BWPDWPDEQXDUGUHUIUPUJZWMWOGWMWOIMZEKZXFLZIWKUBZUCZGWMXHWOXFLZUKZIWKOWOXJL
      WMXLIWKWMXFWKJZXHXKWMXMXHULZULZWOXGXFXOGXFNZJZWEXGLZBXPOZWOXGLZXOGXFLXQXO
      GWTXFHXOXMXHWTXFLWMXMXHUMZWMXMXHUNZWRXHCXFWKWPXFPZWQXGWPXFWPXFEQYCUGUHZUI
      UPUJGXFIUOUQRXOXMWLXSYAWMWLXNWAWCWLURZUSWJXSAXFWKWFXFPZWHXRBWIXPWFXFUTYFW
      GXGWEWFXFEQVAVBSTXRXTBGXPWDGPZWEWOXGWDGEQZVFSTYBVCVGVDXHIWOWKVERGWTXJHWSX
      IWRXHCIWKYDVHVIVJZVKZWMGXJWOYIWMWOWKJZWOEKZWOLZXJWOLWMWODLYKWMWOWBDWMGWKJ
      ZWEWBLZBWKOZWOWBLZWMYNWNXEWMWAYNWNVLWAWCWLVRGDFVMVNVOZWMXAWLYPXBYEWJYPADW
      KWFDPZWHYOBWIWKWFDUTYSWGWBWEWFDEQVAVBSTYOYQBGWKYGWEWOWBYHVFSTXCVCWODGEVPZ
      VQRWMWOGNZJZWEWOLZBUUAOZYMWMWOGLUUBYJWOGYTVQRWMYNWLUUDYRYEWJUUDAGWKWFGPZW
      HUUCBWIUUAWFGUTUUEWGWOWEWFGEQVAVBSTUUCYMBWOUUAWDWOPWEYLWOWDWOEQVFSTXHYMIW
      OWKXFWOPZXGYLXFWOXFWOEQUUFUGUHUIUPUJVSVT $.
      $( [11-Jun-2015] $)
  $}


